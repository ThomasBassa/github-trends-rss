<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C, This month</title><link>https://github.com/trending/c?since=monthly</link><description>The top repositories on GitHub for c, measured monthly</description><pubDate>Thu, 26 Dec 2019 01:12:52 GMT</pubDate><lastBuildDate>Thu, 26 Dec 2019 01:12:52 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>coolsnowwolf/lede #1 in C, This month</title><link>https://github.com/coolsnowwolf/lede</link><description>&lt;p&gt;&lt;i&gt;Lean's OpenWrt source&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;﻿Welcome to Lean's  git source of OpenWrt and packages

中文：如何编译自己需要的 OpenWrt 固件

注意：
1. 不要用 root 用户 git 和编译！！！
2. 国内用户编译前最好准备好梯子
3. 默认登陆IP 192.168.1.1, 密码 password

编译命令如下:

1. 首先装好 Ubuntu 64bit，推荐  Ubuntu  14 LTS x64

2. 命令行输入 sudo apt-get update ，然后输入
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler

3. git clone &lt;a href="https://github.com/coolsnowwolf/lede"&gt;https://github.com/coolsnowwolf/lede&lt;/a&gt; 命令下载好源代码，然后 cd lede 进入目录

4. ./scripts/feeds update -a 
   ./scripts/feeds install -a
   make menuconfig 

5. 最后选好你要的路由，输入 make -j1 V=s （-j1 后面是线程数。第一次编译推荐用单线程，国内请尽量全局科学上网）即可开始编译你要的固件了。

本套代码保证肯定可以编译成功。里面包括了 R9 所有源代码，包括 IPK 的。

你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！

特别提示：
1.源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件，SSL 安全是互联网最后的壁垒。安全干净才是固件应该做到的；
2.你可以根据这个源代码自由修改/发布你编译后的固件，但不能编译后反过来说我抄你的你才是原创；
3.所以如果你是 Mike Bill ，本人不欢迎你使用/用过本源代码，因为这样会导致你的亲妈原地爆炸；
4.如有技术问题需要讨论，欢迎加入 QQ 讨论群：OP共享技术交流群 ,号码 297253733 ，加群链接: 点击链接加入群聊【OP共享技术交流群】：&lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=5yCRuXL" rel="nofollow"&gt;https://jq.qq.com/?_wv=1027&amp;amp;k=5yCRuXL&lt;/a&gt;

Please use "make menuconfig" to choose your preferred
configuration for the toolchain and firmware.

You need to have installed gcc, binutils, bzip2, flex, python, perl, make,
find, grep, diff, unzip, gawk, getopt, subversion, libz-dev and libc headers.

Run "./scripts/feeds update -a" to get all the latest package definitions
defined in feeds.conf / feeds.conf.default respectively
and "./scripts/feeds install -a" to install symlinks of all of them into
package/feeds/.

Use "make menuconfig" to configure your image.

Simply running "make" will build your firmware.
It will download all sources, build the cross-compile toolchain, 
the kernel and all choosen applications.

To build your own firmware you need to have access to a Linux, BSD or MacOSX system
(case-sensitive filesystem required). Cygwin will not be supported because of
the lack of case sensitiveness in the file system.



Note: Addition Lean's private package source code in ./package/lean directory. Use it under GPL v3.

GPLv3 is compatible with more licenses than GPLv2: it allows you to make combinations with code that has specific kinds of additional requirements that are not in GPLv3 itself. Section 7 has more information about this, including the list of additional requirements that are permitted.

&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>coolsnowwolf</author><guid isPermaLink="false">https://github.com/coolsnowwolf/lede</guid><pubDate>Thu, 26 Dec 2019 00:01:00 GMT</pubDate></item><item><title>Genymobile/scrcpy #2 in C, This month</title><link>https://github.com/Genymobile/scrcpy</link><description>&lt;p&gt;&lt;i&gt;Display and control your Android device&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-scrcpy-v1121" class="anchor" aria-hidden="true" href="#scrcpy-v1121"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;scrcpy (v1.12.1)&lt;/h1&gt;
&lt;p&gt;This application provides display and control of Android devices connected on
USB (or &lt;a href="https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/" rel="nofollow"&gt;over TCP/IP&lt;/a&gt;). It does not require any &lt;em&gt;root&lt;/em&gt; access.
It works on &lt;em&gt;GNU/Linux&lt;/em&gt;, &lt;em&gt;Windows&lt;/em&gt; and &lt;em&gt;macOS&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/screenshot-debian-600.jpg"&gt;&lt;img src="assets/screenshot-debian-600.jpg" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It focuses on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lightness&lt;/strong&gt; (native, displays only the device screen)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;performance&lt;/strong&gt; (30~60fps)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;quality&lt;/strong&gt; (1920×1080 or above)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;low latency&lt;/strong&gt; (&lt;a href="https://github.com/Genymobile/scrcpy/pull/646"&gt;35~70ms&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;low startup time&lt;/strong&gt; (~1 second to display the first image)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;non-intrusiveness&lt;/strong&gt; (nothing is left installed on the device)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;The Android device requires at least API 21 (Android 5.0).&lt;/p&gt;
&lt;p&gt;Make sure you &lt;a href="https://developer.android.com/studio/command-line/adb.html#Enabling" rel="nofollow"&gt;enabled adb debugging&lt;/a&gt; on your device(s).&lt;/p&gt;
&lt;p&gt;On some devices, you also need to enable &lt;a href="https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323"&gt;an additional option&lt;/a&gt; to
control it using keyboard and mouse.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get-the-app" class="anchor" aria-hidden="true" href="#get-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get the app&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h3&gt;
&lt;p&gt;On Linux, you typically need to &lt;a href="BUILD.md"&gt;build the app manually&lt;/a&gt;. Don't worry,
it's not that hard.&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Snappy_(package_manager)" rel="nofollow"&gt;Snap&lt;/a&gt; package is available: &lt;a href="https://snapstats.org/snaps/scrcpy" rel="nofollow"&gt;&lt;code&gt;scrcpy&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For Arch Linux, an &lt;a href="https://wiki.archlinux.org/index.php/Arch_User_Repository" rel="nofollow"&gt;AUR&lt;/a&gt; package is available: &lt;a href="https://aur.archlinux.org/packages/scrcpy/" rel="nofollow"&gt;&lt;code&gt;scrcpy&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For Gentoo, an &lt;a href="https://wiki.gentoo.org/wiki/Ebuild" rel="nofollow"&gt;Ebuild&lt;/a&gt; is available: &lt;a href="https://github.com/maggu2810/maggu2810-overlay/tree/master/app-mobilephone/scrcpy"&gt;&lt;code&gt;scrcpy/&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;For Windows, for simplicity, prebuilt archives with all the dependencies
(including &lt;code&gt;adb&lt;/code&gt;) are available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Genymobile/scrcpy/releases/download/v1.12.1/scrcpy-win32-v1.12.1.zip"&gt;&lt;code&gt;scrcpy-win32-v1.12.1.zip&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(SHA-256: 0f4b3b063536b50a2df05dc42c760f9cc0093a9a26dbdf02d8232c74dab43480)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Genymobile/scrcpy/releases/download/v1.12.1/scrcpy-win64-v1.12.1.zip"&gt;&lt;code&gt;scrcpy-win64-v1.12.1.zip&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(SHA-256: 57d34b6d16cfd9fe169bc37c4df58ebd256d05c1ea3febc63d9cb0a027ab47c9)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also &lt;a href="BUILD.md"&gt;build the app manually&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h3&gt;
&lt;p&gt;The application is available in &lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;. Just install it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install scrcpy&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need &lt;code&gt;adb&lt;/code&gt;, accessible from your &lt;code&gt;PATH&lt;/code&gt;. If you don't have it yet:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew cask install android-platform-tools&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also &lt;a href="BUILD.md"&gt;build the app manually&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-run" class="anchor" aria-hidden="true" href="#run"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run&lt;/h2&gt;
&lt;p&gt;Plug an Android device, and execute:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It accepts command-line arguments, listed by:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --help&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-capture-configuration" class="anchor" aria-hidden="true" href="#capture-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Capture configuration&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-reduce-size" class="anchor" aria-hidden="true" href="#reduce-size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reduce size&lt;/h4&gt;
&lt;p&gt;Sometimes, it is useful to mirror an Android device at a lower definition to
increase performance.&lt;/p&gt;
&lt;p&gt;To limit both the width and height to some value (e.g. 1024):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --max-size 1024
scrcpy -m 1024  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; short version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The other dimension is computed to that the device aspect ratio is preserved.
That way, a device in 1920×1080 will be mirrored at 1024×576.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-change-bit-rate" class="anchor" aria-hidden="true" href="#change-bit-rate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change bit-rate&lt;/h4&gt;
&lt;p&gt;The default bit-rate is 8 Mbps. To change the video bitrate (e.g. to 2 Mbps):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --bit-rate 2M
scrcpy -b 2M  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; short version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-limit-frame-rate" class="anchor" aria-hidden="true" href="#limit-frame-rate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limit frame rate&lt;/h4&gt;
&lt;p&gt;On devices with Android &amp;gt;= 10, the capture frame rate can be limited:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --max-fps 15&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-crop" class="anchor" aria-hidden="true" href="#crop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Crop&lt;/h4&gt;
&lt;p&gt;The device screen may be cropped to mirror only part of the screen.&lt;/p&gt;
&lt;p&gt;This is useful for example to mirror only one eye of the Oculus Go:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --crop 1224:1440:0:0   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 1224x1440 at offset (0,0)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;code&gt;--max-size&lt;/code&gt; is also specified, resizing is applied after cropping.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-recording" class="anchor" aria-hidden="true" href="#recording"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recording&lt;/h3&gt;
&lt;p&gt;It is possible to record the screen while mirroring:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --record file.mp4
scrcpy -r file.mkv&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To disable mirroring while recording:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --no-display --record file.mp4
scrcpy -Nr file.mkv
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; interrupt recording with Ctrl+C&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Ctrl+C does not terminate properly on Windows, so disconnect the device&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;"Skipped frames" are recorded, even if they are not displayed in real time (for
performance reasons). Frames are &lt;em&gt;timestamped&lt;/em&gt; on the device, so &lt;a href="https://en.wikipedia.org/wiki/Packet_delay_variation" rel="nofollow"&gt;packet delay
variation&lt;/a&gt; does not impact the recorded file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-connection" class="anchor" aria-hidden="true" href="#connection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connection&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-wireless" class="anchor" aria-hidden="true" href="#wireless"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wireless&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Scrcpy&lt;/em&gt; uses &lt;code&gt;adb&lt;/code&gt; to communicate with the device, and &lt;code&gt;adb&lt;/code&gt; can &lt;a href="https://developer.android.com/studio/command-line/adb.html#wireless" rel="nofollow"&gt;connect&lt;/a&gt; to a
device over TCP/IP:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Connect the device to the same Wi-Fi as your computer.&lt;/li&gt;
&lt;li&gt;Get your device IP address (in Settings → About phone → Status).&lt;/li&gt;
&lt;li&gt;Enable adb over TCP/IP on your device: &lt;code&gt;adb tcpip 5555&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Unplug your device.&lt;/li&gt;
&lt;li&gt;Connect to your device: &lt;code&gt;adb connect DEVICE_IP:5555&lt;/code&gt; &lt;em&gt;(replace &lt;code&gt;DEVICE_IP&lt;/code&gt;)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;scrcpy&lt;/code&gt; as usual.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It may be useful to decrease the bit-rate and the definition:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --bit-rate 2M --max-size 800
scrcpy -b2M -m800  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; short version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-multi-devices" class="anchor" aria-hidden="true" href="#multi-devices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-devices&lt;/h4&gt;
&lt;p&gt;If several devices are listed in &lt;code&gt;adb devices&lt;/code&gt;, you must specify the &lt;em&gt;serial&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --serial 0123456789abcdef
scrcpy -s 0123456789abcdef  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; short version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can start several instances of &lt;em&gt;scrcpy&lt;/em&gt; for several devices.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ssh-tunnel" class="anchor" aria-hidden="true" href="#ssh-tunnel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSH tunnel&lt;/h4&gt;
&lt;p&gt;To connect to a remote device, it is possible to connect a local &lt;code&gt;adb&lt;/code&gt; client to
a remote &lt;code&gt;adb&lt;/code&gt; server (provided they use the same version of the &lt;em&gt;adb&lt;/em&gt;
protocol):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;adb kill-server    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; kill the local adb server on 5037&lt;/span&gt;
ssh -CN -L5037:localhost:5037 -R27183:localhost:27183 your_remote_computer
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; keep this open&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From another terminal:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Like for wireless connections, it may be useful to reduce quality:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scrcpy -b2M -m800 --max-fps 15
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-window-configuration" class="anchor" aria-hidden="true" href="#window-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Window configuration&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-title" class="anchor" aria-hidden="true" href="#title"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Title&lt;/h4&gt;
&lt;p&gt;By default, the window title is the device model. It can be changed:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --window-title &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;My device&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-position-and-size" class="anchor" aria-hidden="true" href="#position-and-size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Position and size&lt;/h4&gt;
&lt;p&gt;The initial window position and size may be specified:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --window-x 100 --window-y 100 --window-width 800 --window-height 600&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-borderless" class="anchor" aria-hidden="true" href="#borderless"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Borderless&lt;/h4&gt;
&lt;p&gt;To disable window decorations:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --window-borderless&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-always-on-top" class="anchor" aria-hidden="true" href="#always-on-top"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Always on top&lt;/h4&gt;
&lt;p&gt;To keep the scrcpy window always on top:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --always-on-top&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-fullscreen" class="anchor" aria-hidden="true" href="#fullscreen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fullscreen&lt;/h4&gt;
&lt;p&gt;The app may be started directly in fullscreen:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --fullscreen
scrcpy -f  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; short version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Fullscreen can then be toggled dynamically with &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other-mirroring-options" class="anchor" aria-hidden="true" href="#other-mirroring-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other mirroring options&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-read-only" class="anchor" aria-hidden="true" href="#read-only"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Read-only&lt;/h4&gt;
&lt;p&gt;To disable controls (everything which can interact with the device: input keys,
mouse events, drag&amp;amp;drop files):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --no-control
scrcpy -n&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-turn-screen-off" class="anchor" aria-hidden="true" href="#turn-screen-off"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Turn screen off&lt;/h4&gt;
&lt;p&gt;It is possible to turn the device screen off while mirroring on start with a
command-line option:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --turn-screen-off
scrcpy -S&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or by pressing &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;o&lt;/code&gt; at any time.&lt;/p&gt;
&lt;p&gt;To turn it back on, press &lt;code&gt;POWER&lt;/code&gt; (or &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt;).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-render-expired-frames" class="anchor" aria-hidden="true" href="#render-expired-frames"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Render expired frames&lt;/h4&gt;
&lt;p&gt;By default, to minimize latency, &lt;em&gt;scrcpy&lt;/em&gt; always renders the last decoded frame
available, and drops any previous one.&lt;/p&gt;
&lt;p&gt;To force the rendering of all frames (at a cost of a possible increased
latency), use:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --render-expired-frames&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-show-touches" class="anchor" aria-hidden="true" href="#show-touches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show touches&lt;/h4&gt;
&lt;p&gt;For presentations, it may be useful to show physical touches (on the physical
device).&lt;/p&gt;
&lt;p&gt;Android provides this feature in &lt;em&gt;Developers options&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Scrcpy&lt;/em&gt; provides an option to enable this feature on start and disable on exit:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --show-touches
scrcpy -t&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that it only shows &lt;em&gt;physical&lt;/em&gt; touches (with the finger on the device).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-input-control" class="anchor" aria-hidden="true" href="#input-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input control&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-rotate-device-screen" class="anchor" aria-hidden="true" href="#rotate-device-screen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rotate device screen&lt;/h4&gt;
&lt;p&gt;Press &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;r&lt;/code&gt; to switch between portrait and landscape modes.&lt;/p&gt;
&lt;p&gt;Note that it rotates only if the application in foreground supports the
requested orientation.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-copy-paste" class="anchor" aria-hidden="true" href="#copy-paste"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copy-paste&lt;/h4&gt;
&lt;p&gt;It is possible to synchronize clipboards between the computer and the device, in
both directions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt; copies the device clipboard to the computer clipboard;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt; copies the computer clipboard to the device clipboard;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt; &lt;em&gt;pastes&lt;/em&gt; the computer clipboard as a sequence of text events (but
breaks non-ASCII characters).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-text-injection-preference" class="anchor" aria-hidden="true" href="#text-injection-preference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Text injection preference&lt;/h4&gt;
&lt;p&gt;There are two kinds of &lt;a href="https://blog.rom1v.com/2018/03/introducing-scrcpy/#handle-text-input" rel="nofollow"&gt;events&lt;/a&gt; generated when typing text:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;key events&lt;/em&gt;, signaling that a key is pressed or released;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;text events&lt;/em&gt;, signaling that a text has been entered.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By default, letters are injected using key events, so that the keyboard behaves
as expected in games (typically for WASD keys).&lt;/p&gt;
&lt;p&gt;But this may &lt;a href="https://github.com/Genymobile/scrcpy/issues/650#issuecomment-512945343"&gt;cause issues&lt;/a&gt;. If you encounter such a problem, you
can avoid it by:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --prefer-text&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(but this will break keyboard behavior in games)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-file-drop" class="anchor" aria-hidden="true" href="#file-drop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;File drop&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-install-apk" class="anchor" aria-hidden="true" href="#install-apk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install APK&lt;/h4&gt;
&lt;p&gt;To install an APK, drag &amp;amp; drop an APK file (ending with &lt;code&gt;.apk&lt;/code&gt;) to the &lt;em&gt;scrcpy&lt;/em&gt;
window.&lt;/p&gt;
&lt;p&gt;There is no visual feedback, a log is printed to the console.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-push-file-to-device" class="anchor" aria-hidden="true" href="#push-file-to-device"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push file to device&lt;/h4&gt;
&lt;p&gt;To push a file to &lt;code&gt;/sdcard/&lt;/code&gt; on the device, drag &amp;amp; drop a (non-APK) file to the
&lt;em&gt;scrcpy&lt;/em&gt; window.&lt;/p&gt;
&lt;p&gt;There is no visual feedback, a log is printed to the console.&lt;/p&gt;
&lt;p&gt;The target directory can be changed on start:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --push-target /sdcard/foo/bar/&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-audio-forwarding" class="anchor" aria-hidden="true" href="#audio-forwarding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Audio forwarding&lt;/h3&gt;
&lt;p&gt;Audio is not forwarded by &lt;em&gt;scrcpy&lt;/em&gt;. Use &lt;a href="https://github.com/rom1v/usbaudio"&gt;USBaudio&lt;/a&gt; (Linux-only).&lt;/p&gt;
&lt;p&gt;Also see &lt;a href="https://github.com/Genymobile/scrcpy/issues/14"&gt;issue #14&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-shortcuts" class="anchor" aria-hidden="true" href="#shortcuts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shortcuts&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th align="left"&gt;Shortcut&lt;/th&gt;
&lt;th align="left"&gt;Shortcut (macOS)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Switch fullscreen mode&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Resize window to 1:1 (pixel-perfect)&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;g&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;g&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Resize window to remove black borders&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;x&lt;/code&gt; | &lt;em&gt;Double-click¹&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;x&lt;/code&gt;  | &lt;em&gt;Double-click¹&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;HOME&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;h&lt;/code&gt; | &lt;em&gt;Middle-click&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;h&lt;/code&gt; | &lt;em&gt;Middle-click&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;BACK&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt; | &lt;em&gt;Right-click²&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;  | &lt;em&gt;Right-click²&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;APP_SWITCH&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;s&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;s&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;MENU&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;m&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;m&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;VOLUME_UP&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;↑&lt;/code&gt; &lt;em&gt;(up)&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;↑&lt;/code&gt; &lt;em&gt;(up)&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;VOLUME_DOWN&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;↓&lt;/code&gt; &lt;em&gt;(down)&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;↓&lt;/code&gt; &lt;em&gt;(down)&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;POWER&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Power on&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;Right-click²&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;Right-click²&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Turn device screen off (keep mirroring)&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;o&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;o&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Rotate device screen&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;r&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;r&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expand notification panel&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Collapse notification panel&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Copy device clipboard to computer&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Paste computer clipboard to device&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Copy computer clipboard to device&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Enable/disable FPS counter (on stdout)&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;i&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;i&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;¹Double-click on black borders to remove them.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;²Right-click turns the screen on if it was off, presses BACK otherwise.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-custom-paths" class="anchor" aria-hidden="true" href="#custom-paths"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom paths&lt;/h2&gt;
&lt;p&gt;To use a specific &lt;em&gt;adb&lt;/em&gt; binary, configure its path in the environment variable
&lt;code&gt;ADB&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ADB=/path/to/adb scrcpy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To override the path of the &lt;code&gt;scrcpy-server&lt;/code&gt; file, configure its path in
&lt;code&gt;SCRCPY_SERVER_PATH&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-scrcpy" class="anchor" aria-hidden="true" href="#why-scrcpy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why &lt;em&gt;scrcpy&lt;/em&gt;?&lt;/h2&gt;
&lt;p&gt;A colleague challenged me to find a name as unpronounceable as &lt;a href="https://github.com/Genymobile/gnirehtet"&gt;gnirehtet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://man7.org/linux/man-pages/man3/strcpy.3.html" rel="nofollow"&gt;&lt;code&gt;strcpy&lt;/code&gt;&lt;/a&gt; copies a &lt;strong&gt;str&lt;/strong&gt;ing; &lt;code&gt;scrcpy&lt;/code&gt; copies a &lt;strong&gt;scr&lt;/strong&gt;een.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-build" class="anchor" aria-hidden="true" href="#how-to-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to build?&lt;/h2&gt;
&lt;p&gt;See &lt;a href="BUILD.md"&gt;BUILD&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-common-issues" class="anchor" aria-hidden="true" href="#common-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common issues&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="FAQ.md"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developers" class="anchor" aria-hidden="true" href="#developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="DEVELOP.md"&gt;developers page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licence" class="anchor" aria-hidden="true" href="#licence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licence&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright (C) 2018 Genymobile
Copyright (C) 2018-2019 Romain Vimont

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-articles" class="anchor" aria-hidden="true" href="#articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rom1v.com/2018/03/introducing-scrcpy/" rel="nofollow"&gt;Introducing scrcpy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/" rel="nofollow"&gt;Scrcpy now works wirelessly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Genymobile</author><guid isPermaLink="false">https://github.com/Genymobile/scrcpy</guid><pubDate>Thu, 26 Dec 2019 00:02:00 GMT</pubDate></item><item><title>nginx/nginx #3 in C, This month</title><link>https://github.com/nginx/nginx</link><description>&lt;p&gt;&lt;i&gt;An official read-only mirror of http://hg.nginx.org/nginx/ which is updated hourly. Pull requests on GitHub cannot be accepted and will be automatically closed. The proper way to submit changes to nginx is via the nginx development mailing list, see http://nginx.org/en/docs/contributing_changes.html&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;This repo does not have a README.&lt;/i&gt;&lt;/p&gt;</description><author>nginx</author><guid isPermaLink="false">https://github.com/nginx/nginx</guid><pubDate>Thu, 26 Dec 2019 00:03:00 GMT</pubDate></item><item><title>antirez/redis #4 in C, This month</title><link>https://github.com/antirez/redis</link><description>&lt;p&gt;&lt;i&gt;Redis is an in-memory database that persists on disk. The data model is key-value, but many different kind of values are supported: Strings, Lists, Sets, Sorted Sets, Hashes, Streams, HyperLogLogs, Bitmaps.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;This README is just a fast &lt;em&gt;quick start&lt;/em&gt; document. You can find more detailed documentation at &lt;a href="https://redis.io" rel="nofollow"&gt;redis.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-redis" class="anchor" aria-hidden="true" href="#what-is-redis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Redis?&lt;/h2&gt;
&lt;p&gt;Redis is often referred as a &lt;em&gt;data structures&lt;/em&gt; server. What this means is that Redis provides access to mutable data structures via a set of commands, which are sent using a &lt;em&gt;server-client&lt;/em&gt; model with TCP sockets and a simple protocol. So different processes can query and modify the same data structures in a shared way.&lt;/p&gt;
&lt;p&gt;Data structures implemented into Redis have a few special properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Redis cares to store them on disk, even if they are always served and modified into the server memory. This means that Redis is fast, but that is also non-volatile.&lt;/li&gt;
&lt;li&gt;Implementation of data structures stress on memory efficiency, so data structures inside Redis will likely use less memory compared to the same data structure modeled using an high level programming language.&lt;/li&gt;
&lt;li&gt;Redis offers a number of features that are natural to find in a database, like replication, tunable levels of durability, cluster, high availability.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another good example is to think of Redis as a more complex version of memcached, where the operations are not just SETs and GETs, but operations to work with complex data types like Lists, Sets, ordered data structures, and so forth.&lt;/p&gt;
&lt;p&gt;If you want to know more, this is a list of selected starting points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to Redis data types. &lt;a href="http://redis.io/topics/data-types-intro" rel="nofollow"&gt;http://redis.io/topics/data-types-intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Try Redis directly inside your browser. &lt;a href="http://try.redis.io" rel="nofollow"&gt;http://try.redis.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The full list of Redis commands. &lt;a href="http://redis.io/commands" rel="nofollow"&gt;http://redis.io/commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;There is much more inside the Redis official documentation. &lt;a href="http://redis.io/documentation" rel="nofollow"&gt;http://redis.io/documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-redis" class="anchor" aria-hidden="true" href="#building-redis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Redis&lt;/h2&gt;
&lt;p&gt;Redis can be compiled and used on Linux, OSX, OpenBSD, NetBSD, FreeBSD.
We support big endian and little endian architectures, and both 32 bit
and 64 bit systems.&lt;/p&gt;
&lt;p&gt;It may compile on Solaris derived systems (for instance SmartOS) but our
support for this platform is &lt;em&gt;best effort&lt;/em&gt; and Redis is not guaranteed to
work as well as in Linux, OSX, and *BSD there.&lt;/p&gt;
&lt;p&gt;It is as simple as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can run a 32 bit Redis binary using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% make 32bit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After building Redis, it is a good idea to test it using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% make test
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-fixing-build-problems-with-dependencies-or-cached-build-options" class="anchor" aria-hidden="true" href="#fixing-build-problems-with-dependencies-or-cached-build-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fixing build problems with dependencies or cached build options&lt;/h2&gt;
&lt;p&gt;Redis has some dependencies which are included into the &lt;code&gt;deps&lt;/code&gt; directory.
&lt;code&gt;make&lt;/code&gt; does not automatically rebuild dependencies even if something in
the source code of dependencies changes.&lt;/p&gt;
&lt;p&gt;When you update the source code with &lt;code&gt;git pull&lt;/code&gt; or when code inside the
dependencies tree is modified in any other way, make sure to use the following
command in order to really clean everything and rebuild from scratch:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make distclean
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will clean: jemalloc, lua, hiredis, linenoise.&lt;/p&gt;
&lt;p&gt;Also if you force certain build options like 32bit target, no C compiler
optimizations (for debugging purposes), and other similar build time options,
those options are cached indefinitely until you issue a &lt;code&gt;make distclean&lt;/code&gt;
command.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fixing-problems-building-32-bit-binaries" class="anchor" aria-hidden="true" href="#fixing-problems-building-32-bit-binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fixing problems building 32 bit binaries&lt;/h2&gt;
&lt;p&gt;If after building Redis with a 32 bit target you need to rebuild it
with a 64 bit target, or the other way around, you need to perform a
&lt;code&gt;make distclean&lt;/code&gt; in the root directory of the Redis distribution.&lt;/p&gt;
&lt;p&gt;In case of build errors when trying to build a 32 bit binary of Redis, try
the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the packages libc6-dev-i386 (also try g++-multilib).&lt;/li&gt;
&lt;li&gt;Try using the following command line instead of &lt;code&gt;make 32bit&lt;/code&gt;:
&lt;code&gt;make CFLAGS="-m32 -march=native" LDFLAGS="-m32"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-allocator" class="anchor" aria-hidden="true" href="#allocator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Allocator&lt;/h2&gt;
&lt;p&gt;Selecting a non-default memory allocator when building Redis is done by setting
the &lt;code&gt;MALLOC&lt;/code&gt; environment variable. Redis is compiled and linked against libc
malloc by default, with the exception of jemalloc being the default on Linux
systems. This default was picked because jemalloc has proven to have fewer
fragmentation problems than libc malloc.&lt;/p&gt;
&lt;p&gt;To force compiling against libc malloc, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% make MALLOC=libc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To compile against jemalloc on Mac OS X systems, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% make MALLOC=jemalloc
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-verbose-build" class="anchor" aria-hidden="true" href="#verbose-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verbose build&lt;/h2&gt;
&lt;p&gt;Redis will build with a user friendly colorized output by default.
If you want to see a more verbose output use the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% make V=1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-running-redis" class="anchor" aria-hidden="true" href="#running-redis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Redis&lt;/h2&gt;
&lt;p&gt;To run Redis with the default configuration just type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% cd src
% ./redis-server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to provide your redis.conf, you have to run it using an additional
parameter (the path of the configuration file):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% cd src
% ./redis-server /path/to/redis.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is possible to alter the Redis configuration by passing parameters directly
as options using the command line. Examples:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% ./redis-server --port 9999 --replicaof 127.0.0.1 6379
% ./redis-server /etc/redis/6379.conf --loglevel debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All the options in redis.conf are also supported as options using the command
line, with exactly the same name.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-playing-with-redis" class="anchor" aria-hidden="true" href="#playing-with-redis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Playing with Redis&lt;/h2&gt;
&lt;p&gt;You can use redis-cli to play with Redis. Start a redis-server instance,
then in another terminal try the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% cd src
% ./redis-cli
redis&amp;gt; ping
PONG
redis&amp;gt; set foo bar
OK
redis&amp;gt; get foo
"bar"
redis&amp;gt; incr mycounter
(integer) 1
redis&amp;gt; incr mycounter
(integer) 2
redis&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can find the list of all the available commands at &lt;a href="http://redis.io/commands" rel="nofollow"&gt;http://redis.io/commands&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-redis" class="anchor" aria-hidden="true" href="#installing-redis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Redis&lt;/h2&gt;
&lt;p&gt;In order to install Redis binaries into /usr/local/bin just use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can use &lt;code&gt;make PREFIX=/some/other/directory install&lt;/code&gt; if you wish to use a
different destination.&lt;/p&gt;
&lt;p&gt;Make install will just install binaries in your system, but will not configure
init scripts and configuration files in the appropriate place. This is not
needed if you want just to play a bit with Redis, but if you are installing
it the proper way for a production system, we have a script doing this
for Ubuntu and Debian systems:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% cd utils
% ./install_server.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;code&gt;install_server.sh&lt;/code&gt; will not work on Mac OSX; it is built for Linux only.&lt;/p&gt;
&lt;p&gt;The script will ask you a few questions and will setup everything you need
to run Redis properly as a background daemon that will start again on
system reboots.&lt;/p&gt;
&lt;p&gt;You'll be able to stop and start Redis using the script named
&lt;code&gt;/etc/init.d/redis_&amp;lt;portnumber&amp;gt;&lt;/code&gt;, for instance &lt;code&gt;/etc/init.d/redis_6379&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-contributions" class="anchor" aria-hidden="true" href="#code-contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code contributions&lt;/h2&gt;
&lt;p&gt;Note: by contributing code to the Redis project in any form, including sending
a pull request via Github, a code fragment or patch via private email or
public discussion groups, you agree to release your code under the terms
of the BSD license that you can find in the &lt;a href="https://github.com/antirez/redis/blob/unstable/COPYING"&gt;COPYING&lt;/a&gt; file included in the Redis
source distribution.&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/antirez/redis/blob/unstable/CONTRIBUTING"&gt;CONTRIBUTING&lt;/a&gt; file in this source distribution for more
information.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-redis-internals" class="anchor" aria-hidden="true" href="#redis-internals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Redis internals&lt;/h1&gt;
&lt;p&gt;If you are reading this README you are likely in front of a Github page
or you just untarred the Redis distribution tar ball. In both the cases
you are basically one step away from the source code, so here we explain
the Redis source code layout, what is in each file as a general idea, the
most important functions and structures inside the Redis server and so forth.
We keep all the discussion at a high level without digging into the details
since this document would be huge otherwise and our code base changes
continuously, but a general idea should be a good starting point to
understand more. Moreover most of the code is heavily commented and easy
to follow.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-source-code-layout" class="anchor" aria-hidden="true" href="#source-code-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source code layout&lt;/h2&gt;
&lt;p&gt;The Redis root directory just contains this README, the Makefile which
calls the real Makefile inside the &lt;code&gt;src&lt;/code&gt; directory and an example
configuration for Redis and Sentinel. You can find a few shell
scripts that are used in order to execute the Redis, Redis Cluster and
Redis Sentinel unit tests, which are implemented inside the &lt;code&gt;tests&lt;/code&gt;
directory.&lt;/p&gt;
&lt;p&gt;Inside the root are the following important directories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: contains the Redis implementation, written in C.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tests&lt;/code&gt;: contains the unit tests, implemented in Tcl.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deps&lt;/code&gt;: contains libraries Redis uses. Everything needed to compile Redis is inside this directory; your system just needs to provide &lt;code&gt;libc&lt;/code&gt;, a POSIX compatible interface and a C compiler. Notably &lt;code&gt;deps&lt;/code&gt; contains a copy of &lt;code&gt;jemalloc&lt;/code&gt;, which is the default allocator of Redis under Linux. Note that under &lt;code&gt;deps&lt;/code&gt; there are also things which started with the Redis project, but for which the main repository is not &lt;code&gt;antirez/redis&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are a few more directories but they are not very important for our goals
here. We'll focus mostly on &lt;code&gt;src&lt;/code&gt;, where the Redis implementation is contained,
exploring what there is inside each file. The order in which files are
exposed is the logical one to follow in order to disclose different layers
of complexity incrementally.&lt;/p&gt;
&lt;p&gt;Note: lately Redis was refactored quite a bit. Function names and file
names have been changed, so you may find that this documentation reflects the
&lt;code&gt;unstable&lt;/code&gt; branch more closely. For instance in Redis 3.0 the &lt;code&gt;server.c&lt;/code&gt;
and &lt;code&gt;server.h&lt;/code&gt; files were named &lt;code&gt;redis.c&lt;/code&gt; and &lt;code&gt;redis.h&lt;/code&gt;. However the overall
structure is the same. Keep in mind that all the new developments and pull
requests should be performed against the &lt;code&gt;unstable&lt;/code&gt; branch.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-serverh" class="anchor" aria-hidden="true" href="#serverh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;server.h&lt;/h2&gt;
&lt;p&gt;The simplest way to understand how a program works is to understand the
data structures it uses. So we'll start from the main header file of
Redis, which is &lt;code&gt;server.h&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All the server configuration and in general all the shared state is
defined in a global structure called &lt;code&gt;server&lt;/code&gt;, of type &lt;code&gt;struct redisServer&lt;/code&gt;.
A few important fields in this structure are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server.db&lt;/code&gt; is an array of Redis databases, where data is stored.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server.commands&lt;/code&gt; is the command table.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server.clients&lt;/code&gt; is a linked list of clients connected to the server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server.master&lt;/code&gt; is a special client, the master, if the instance is a replica.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are tons of other fields. Most fields are commented directly inside
the structure definition.&lt;/p&gt;
&lt;p&gt;Another important Redis data structure is the one defining a client.
In the past it was called &lt;code&gt;redisClient&lt;/code&gt;, now just &lt;code&gt;client&lt;/code&gt;. The structure
has many fields, here we'll just show the main ones:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;struct client {
    int fd;
    sds querybuf;
    int argc;
    robj **argv;
    redisDb *db;
    int flags;
    list *reply;
    char buf[PROTO_REPLY_CHUNK_BYTES];
    ... many other fields ...
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The client structure defines a &lt;em&gt;connected client&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;fd&lt;/code&gt; field is the client socket file descriptor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;argc&lt;/code&gt; and &lt;code&gt;argv&lt;/code&gt; are populated with the command the client is executing, so that functions implementing a given Redis command can read the arguments.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;querybuf&lt;/code&gt; accumulates the requests from the client, which are parsed by the Redis server according to the Redis protocol and executed by calling the implementations of the commands the client is executing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reply&lt;/code&gt; and &lt;code&gt;buf&lt;/code&gt; are dynamic and static buffers that accumulate the replies the server sends to the client. These buffers are incrementally written to the socket as soon as the file descriptor is writable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you can see in the client structure above, arguments in a command
are described as &lt;code&gt;robj&lt;/code&gt; structures. The following is the full &lt;code&gt;robj&lt;/code&gt;
structure, which defines a &lt;em&gt;Redis object&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;typedef struct redisObject {
    unsigned type:4;
    unsigned encoding:4;
    unsigned lru:LRU_BITS; /* lru time (relative to server.lruclock) */
    int refcount;
    void *ptr;
} robj;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Basically this structure can represent all the basic Redis data types like
strings, lists, sets, sorted sets and so forth. The interesting thing is that
it has a &lt;code&gt;type&lt;/code&gt; field, so that it is possible to know what type a given
object has, and a &lt;code&gt;refcount&lt;/code&gt;, so that the same object can be referenced
in multiple places without allocating it multiple times. Finally the &lt;code&gt;ptr&lt;/code&gt;
field points to the actual representation of the object, which might vary
even for the same type, depending on the &lt;code&gt;encoding&lt;/code&gt; used.&lt;/p&gt;
&lt;p&gt;Redis objects are used extensively in the Redis internals, however in order
to avoid the overhead of indirect accesses, recently in many places
we just use plain dynamic strings not wrapped inside a Redis object.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-serverc" class="anchor" aria-hidden="true" href="#serverc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;server.c&lt;/h2&gt;
&lt;p&gt;This is the entry point of the Redis server, where the &lt;code&gt;main()&lt;/code&gt; function
is defined. The following are the most important steps in order to startup
the Redis server.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;initServerConfig()&lt;/code&gt; setups the default values of the &lt;code&gt;server&lt;/code&gt; structure.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;initServer()&lt;/code&gt; allocates the data structures needed to operate, setup the listening socket, and so forth.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aeMain()&lt;/code&gt; starts the event loop which listens for new connections.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are two special functions called periodically by the event loop:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;serverCron()&lt;/code&gt; is called periodically (according to &lt;code&gt;server.hz&lt;/code&gt; frequency), and performs tasks that must be performed from time to time, like checking for timedout clients.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beforeSleep()&lt;/code&gt; is called every time the event loop fired, Redis served a few requests, and is returning back into the event loop.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Inside server.c you can find code that handles other vital things of the Redis server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;call()&lt;/code&gt; is used in order to call a given command in the context of a given client.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;activeExpireCycle()&lt;/code&gt; handles eviciton of keys with a time to live set via the &lt;code&gt;EXPIRE&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;freeMemoryIfNeeded()&lt;/code&gt; is called when a new write command should be performed but Redis is out of memory according to the &lt;code&gt;maxmemory&lt;/code&gt; directive.&lt;/li&gt;
&lt;li&gt;The global variable &lt;code&gt;redisCommandTable&lt;/code&gt; defines all the Redis commands, specifying the name of the command, the function implementing the command, the number of arguments required, and other properties of each command.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-networkingc" class="anchor" aria-hidden="true" href="#networkingc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;networking.c&lt;/h2&gt;
&lt;p&gt;This file defines all the I/O functions with clients, masters and replicas
(which in Redis are just special clients):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;createClient()&lt;/code&gt; allocates and initializes a new client.&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;addReply*()&lt;/code&gt; family of functions are used by commands implementations in order to append data to the client structure, that will be transmitted to the client as a reply for a given command executed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;writeToClient()&lt;/code&gt; transmits the data pending in the output buffers to the client and is called by the &lt;em&gt;writable event handler&lt;/em&gt; &lt;code&gt;sendReplyToClient()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readQueryFromClient()&lt;/code&gt; is the &lt;em&gt;readable event handler&lt;/em&gt; and accumulates data from read from the client into the query buffer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;processInputBuffer()&lt;/code&gt; is the entry point in order to parse the client query buffer according to the Redis protocol. Once commands are ready to be processed, it calls &lt;code&gt;processCommand()&lt;/code&gt; which is defined inside &lt;code&gt;server.c&lt;/code&gt; in order to actually execute the command.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;freeClient()&lt;/code&gt; deallocates, disconnects and removes a client.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-aofc-and-rdbc" class="anchor" aria-hidden="true" href="#aofc-and-rdbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;aof.c and rdb.c&lt;/h2&gt;
&lt;p&gt;As you can guess from the names these files implement the RDB and AOF
persistence for Redis. Redis uses a persistence model based on the &lt;code&gt;fork()&lt;/code&gt;
system call in order to create a thread with the same (shared) memory
content of the main Redis thread. This secondary thread dumps the content
of the memory on disk. This is used by &lt;code&gt;rdb.c&lt;/code&gt; to create the snapshots
on disk and by &lt;code&gt;aof.c&lt;/code&gt; in order to perform the AOF rewrite when the
append only file gets too big.&lt;/p&gt;
&lt;p&gt;The implementation inside &lt;code&gt;aof.c&lt;/code&gt; has additional functions in order to
implement an API that allows commands to append new commands into the AOF
file as clients execute them.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;call()&lt;/code&gt; function defined inside &lt;code&gt;server.c&lt;/code&gt; is responsible to call
the functions that in turn will write the commands into the AOF.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dbc" class="anchor" aria-hidden="true" href="#dbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;db.c&lt;/h2&gt;
&lt;p&gt;Certain Redis commands operate on specific data types, others are general.
Examples of generic commands are &lt;code&gt;DEL&lt;/code&gt; and &lt;code&gt;EXPIRE&lt;/code&gt;. They operate on keys
and not on their values specifically. All those generic commands are
defined inside &lt;code&gt;db.c&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Moreover &lt;code&gt;db.c&lt;/code&gt; implements an API in order to perform certain operations
on the Redis dataset without directly accessing the internal data structures.&lt;/p&gt;
&lt;p&gt;The most important functions inside &lt;code&gt;db.c&lt;/code&gt; which are used in many commands
implementations are the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lookupKeyRead()&lt;/code&gt; and &lt;code&gt;lookupKeyWrite()&lt;/code&gt; are used in order to get a pointer to the value associated to a given key, or &lt;code&gt;NULL&lt;/code&gt; if the key does not exist.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dbAdd()&lt;/code&gt; and its higher level counterpart &lt;code&gt;setKey()&lt;/code&gt; create a new key in a Redis database.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dbDelete()&lt;/code&gt; removes a key and its associated value.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emptyDb()&lt;/code&gt; removes an entire single database or all the databases defined.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The rest of the file implements the generic commands exposed to the client.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-objectc" class="anchor" aria-hidden="true" href="#objectc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;object.c&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;robj&lt;/code&gt; structure defining Redis objects was already described. Inside
&lt;code&gt;object.c&lt;/code&gt; there are all the functions that operate with Redis objects at
a basic level, like functions to allocate new objects, handle the reference
counting and so forth. Notable functions inside this file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;incrRefcount()&lt;/code&gt; and &lt;code&gt;decrRefCount()&lt;/code&gt; are used in order to increment or decrement an object reference count. When it drops to 0 the object is finally freed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;createObject()&lt;/code&gt; allocates a new object. There are also specialized functions to allocate string objects having a specific content, like &lt;code&gt;createStringObjectFromLongLong()&lt;/code&gt; and similar functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This file also implements the &lt;code&gt;OBJECT&lt;/code&gt; command.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-replicationc" class="anchor" aria-hidden="true" href="#replicationc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;replication.c&lt;/h2&gt;
&lt;p&gt;This is one of the most complex files inside Redis, it is recommended to
approach it only after getting a bit familiar with the rest of the code base.
In this file there is the implementation of both the master and replica role
of Redis.&lt;/p&gt;
&lt;p&gt;One of the most important functions inside this file is &lt;code&gt;replicationFeedSlaves()&lt;/code&gt; that writes commands to the clients representing replica instances connected
to our master, so that the replicas can get the writes performed by the clients:
this way their data set will remain synchronized with the one in the master.&lt;/p&gt;
&lt;p&gt;This file also implements both the &lt;code&gt;SYNC&lt;/code&gt; and &lt;code&gt;PSYNC&lt;/code&gt; commands that are
used in order to perform the first synchronization between masters and
replicas, or to continue the replication after a disconnection.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-c-files" class="anchor" aria-hidden="true" href="#other-c-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other C files&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;t_hash.c&lt;/code&gt;, &lt;code&gt;t_list.c&lt;/code&gt;, &lt;code&gt;t_set.c&lt;/code&gt;, &lt;code&gt;t_string.c&lt;/code&gt;, &lt;code&gt;t_zset.c&lt;/code&gt; and &lt;code&gt;t_stream.c&lt;/code&gt; contains the implementation of the Redis data types. They implement both an API to access a given data type, and the client commands implementations for these data types.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ae.c&lt;/code&gt; implements the Redis event loop, it's a self contained library which is simple to read and understand.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sds.c&lt;/code&gt; is the Redis string library, check &lt;a href="http://github.com/antirez/sds"&gt;http://github.com/antirez/sds&lt;/a&gt; for more information.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;anet.c&lt;/code&gt; is a library to use POSIX networking in a simpler way compared to the raw interface exposed by the kernel.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dict.c&lt;/code&gt; is an implementation of a non-blocking hash table which rehashes incrementally.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scripting.c&lt;/code&gt; implements Lua scripting. It is completely self contained from the rest of the Redis implementation and is simple enough to understand if you are familar with the Lua API.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cluster.c&lt;/code&gt; implements the Redis Cluster. Probably a good read only after being very familiar with the rest of the Redis code base. If you want to read &lt;code&gt;cluster.c&lt;/code&gt; make sure to read the &lt;a href="http://redis.io/topics/cluster-spec" rel="nofollow"&gt;Redis Cluster specification&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-anatomy-of-a-redis-command" class="anchor" aria-hidden="true" href="#anatomy-of-a-redis-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Anatomy of a Redis command&lt;/h2&gt;
&lt;p&gt;All the Redis commands are defined in the following way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;void foobarCommand(client *c) {
    printf("%s",c-&amp;gt;argv[1]-&amp;gt;ptr); /* Do something with the argument. */
    addReply(c,shared.ok); /* Reply something to the client. */
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The command is then referenced inside &lt;code&gt;server.c&lt;/code&gt; in the command table:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{"foobar",foobarCommand,2,"rtF",0,NULL,0,0,0,0,0},
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the above example &lt;code&gt;2&lt;/code&gt; is the number of arguments the command takes,
while &lt;code&gt;"rtF"&lt;/code&gt; are the command flags, as documented in the command table
top comment inside &lt;code&gt;server.c&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After the command operates in some way, it returns a reply to the client,
usually using &lt;code&gt;addReply()&lt;/code&gt; or a similar function defined inside &lt;code&gt;networking.c&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There are tons of commands implementations inside the Redis source code
that can serve as examples of actual commands implementations. To write
a few toy commands can be a good exercise to familiarize with the code base.&lt;/p&gt;
&lt;p&gt;There are also many other files not described here, but it is useless to
cover everything. We want to just help you with the first steps.
Eventually you'll find your way inside the Redis code base :-)&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>antirez</author><guid isPermaLink="false">https://github.com/antirez/redis</guid><pubDate>Thu, 26 Dec 2019 00:04:00 GMT</pubDate></item><item><title>netdata/netdata #5 in C, This month</title><link>https://github.com/netdata/netdata</link><description>&lt;p&gt;&lt;i&gt;Real-time performance monitoring, done right! https://my-netdata.io/&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-netdata----" class="anchor" aria-hidden="true" href="#netdata----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Netdata &lt;a href="https://travis-ci.com/netdata/netdata" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/084714728590d7939a9b68c454b59f97e4f9b1bb/68747470733a2f2f7472617669732d63692e636f6d2f6e6574646174612f6e6574646174612e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/netdata/netdata.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/2231" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f83face6b02d39b54bb3c00c2cab76f4bd8e4658/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f323233312f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/2231/badge" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec81f32a3121ba59b3c5e4d6bf61486a14853a2a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332532422d626c75652e737667" alt="License: GPL v3+" data-canonical-src="https://img.shields.io/badge/License-GPL%20v3%2B-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href=""&gt;&lt;img src="https://camo.githubusercontent.com/7d589a6ed532243d5595dff973a18f81c8a3c54f/68747470733a2f2f7777772e676f6f676c652d616e616c79746963732e636f6d2f636f6c6c6563743f763d31266169703d3126743d7061676576696577265f733d312664733d6769746875622664723d68747470732533412532462532466769746875622e636f6d2532466e6574646174612532466e65746461746126646c3d68747470732533412532462532466d792d6e6574646174612e696f253246676974687562253246726561646d65265f753d4d41437e266369643d35373932646664372d386463342d343736622d616633312d646132666462396639336432267469643d55412d36343239353637342d33" alt="analytics" data-canonical-src="https://www.google-analytics.com/collect?v=1&amp;amp;aip=1&amp;amp;t=pageview&amp;amp;_s=1&amp;amp;ds=github&amp;amp;dr=https%3A%2F%2Fgithub.com%2Fnetdata%2Fnetdata&amp;amp;dl=https%3A%2F%2Fmy-netdata.io%2Fgithub%2Freadme&amp;amp;_u=MAC~&amp;amp;cid=5792dfd7-8dc4-476b-af31-da2fdb9f93d2&amp;amp;tid=UA-64295674-3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://codeclimate.com/github/netdata/netdata" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/135455eb1a76f78fc1c8c65120767ef2d1e027f2/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f6e6574646174612f6e6574646174612f6261646765732f6770612e737667" alt="Code Climate" data-canonical-src="https://codeclimate.com/github/netdata/netdata/badges/gpa.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/app/netdata/netdata?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=netdata/netdata&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7181e6d032468b244db2ff4cc6ea0fbcb9da1254/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6139393438373366333064303435623962346238333630366333656233343938" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/a994873f30d045b9b4b83606c3eb3498" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://lgtm.com/projects/g/netdata/netdata/context:cpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/37eb5221caad0327ca978a9a1777afed3441e370/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f672f6e6574646174612f6e6574646174612e7376673f6c6f676f3d6c67746d" alt="LGTM C" data-canonical-src="https://img.shields.io/lgtm/grade/cpp/g/netdata/netdata.svg?logo=lgtm" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://lgtm.com/projects/g/netdata/netdata/context:javascript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d646e7f2b38903dbb7d2acd7b6d0cab134c71ac/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6a6176617363726970742f672f6e6574646174612f6e6574646174612e7376673f6c6f676f3d6c67746d" alt="LGTM JS" data-canonical-src="https://img.shields.io/lgtm/grade/javascript/g/netdata/netdata.svg?logo=lgtm" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://lgtm.com/projects/g/netdata/netdata/context:python" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f8a8aa6b9a4e59014433ec809020e3f9b80a4ca/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f672f6e6574646174612f6e6574646174612e7376673f6c6f676f3d6c67746d" alt="LGTM PYTHON" data-canonical-src="https://img.shields.io/lgtm/grade/python/g/netdata/netdata.svg?logo=lgtm" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Netdata&lt;/strong&gt; is &lt;strong&gt;distributed, real-time, performance and health monitoring for systems and applications&lt;/strong&gt;. It is a highly-optimized monitoring agent you install on all your systems and containers.&lt;/p&gt;
&lt;p&gt;Netdata provides &lt;strong&gt;unparalleled insights&lt;/strong&gt;, &lt;strong&gt;in real-time&lt;/strong&gt;, of everything happening on the systems it runs (including web servers, databases, applications), using &lt;strong&gt;highly interactive web dashboards&lt;/strong&gt;. It can run autonomously, without any third-party components, or it can be integrated to existing monitoring toolchains (Prometheus, Graphite, OpenTSDB, Kafka, Grafana, and more).&lt;/p&gt;
&lt;p&gt;Netdata is &lt;strong&gt;fast&lt;/strong&gt; and &lt;strong&gt;efficient&lt;/strong&gt;, designed to permanently run on all systems (&lt;strong&gt;physical&lt;/strong&gt; &amp;amp; &lt;strong&gt;virtual&lt;/strong&gt; servers,
&lt;strong&gt;containers&lt;/strong&gt;, &lt;strong&gt;IoT&lt;/strong&gt; devices), without disrupting their core function.&lt;/p&gt;
&lt;p&gt;Netdata is &lt;strong&gt;free, open-source software&lt;/strong&gt; and it currently runs on &lt;strong&gt;Linux&lt;/strong&gt;, &lt;strong&gt;FreeBSD&lt;/strong&gt;, and &lt;strong&gt;MacOS&lt;/strong&gt;, along with
other systems derived from them, such as &lt;strong&gt;Kubernetes&lt;/strong&gt; and &lt;strong&gt;Docker&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Netdata is not hosted by the CNCF but is the 3rd most starred open-source project in the &lt;a href="https://landscape.cncf.io/format=card-mode&amp;amp;grouping=no&amp;amp;sort=stars" rel="nofollow"&gt;Cloud Native Computing Foundation (CNCF) landscape&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;People get &lt;strong&gt;addicted to Netdata&lt;/strong&gt;. Once you use it on your systems, &lt;strong&gt;there is no going back&lt;/strong&gt;! &lt;em&gt;You've been warned...&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2662304/48305662-9de82980-e537-11e8-9f5b-aa1a60fbb82f.png"&gt;&lt;img src="https://user-images.githubusercontent.com/2662304/48305662-9de82980-e537-11e8-9f5b-aa1a60fbb82f.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/intent/tweet?text=Netdata,%20real-time%20performance%20and%20health%20monitoring,%20done%20right!&amp;amp;url=https://my-netdata.io/&amp;amp;via=linuxnetdata&amp;amp;hashtags=netdata,monitoring" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22a019bab8144f7409882fe617d62ed739075030/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c266c6162656c3d547765657425323061626f75742532306e657464617461" alt="Tweet about Netdata!" data-canonical-src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social&amp;amp;label=Tweet%20about%20netdata" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#what-does-it-look-like"&gt;What does it look like?&lt;/a&gt; - Take a quick tour through the dashboard&lt;/li&gt;
&lt;li&gt;&lt;a href="#user-base"&gt;Our userbase&lt;/a&gt; - Enterprises we help monitor and our userbase&lt;/li&gt;
&lt;li&gt;&lt;a href="#quickstart"&gt;Quickstart&lt;/a&gt; - How to try it now on your systems&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-netdata"&gt;Why Netdata&lt;/a&gt; - Why people love Netdata and how it compares with other solutions&lt;/li&gt;
&lt;li&gt;&lt;a href="#news"&gt;News&lt;/a&gt; - The latest news about Netdata&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-it-works"&gt;How Netdata works&lt;/a&gt; - A high-level diagram of how Netdata works&lt;/li&gt;
&lt;li&gt;&lt;a href="#infographic"&gt;Infographic&lt;/a&gt; - Everything about Netdata in a single graphic&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt; - How you'll use Netdata on your systems&lt;/li&gt;
&lt;li&gt;&lt;a href="#visualization"&gt;Visualization&lt;/a&gt; - Learn about visual anomaly detection&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-does-it-monitor"&gt;What does it monitor?&lt;/a&gt; - See which apps/services Netdata auto-detects&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt; - Read the documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt; - Discuss Netdata with others and get support&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt; - Check Netdata's licencing&lt;/li&gt;
&lt;li&gt;&lt;a href="#is-it-any-good"&gt;Is it any good?&lt;/a&gt; - Yes.&lt;/li&gt;
&lt;li&gt;&lt;a href="#is-it-awesome"&gt;Is it awesome?&lt;/a&gt; - Yes.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-what-does-it-look-like" class="anchor" aria-hidden="true" href="#what-does-it-look-like"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What does it look like?&lt;/h2&gt;
&lt;p&gt;The following animated GIF shows the top part of a typical Netdata dashboard.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1153921/70638670-85dd5080-1bf6-11ea-893e-94400f445574.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/1153921/70638670-85dd5080-1bf6-11ea-893e-94400f445574.gif" alt="The Netdata dashboard in action" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A typical Netdata dashboard, in 1:1 timing. Charts can be panned by dragging them, zoomed in/out with &lt;code&gt;SHIFT&lt;/code&gt; + &lt;code&gt;mouse wheel&lt;/code&gt;, an area can be selected for zoom-in with &lt;code&gt;SHIFT&lt;/code&gt; + &lt;code&gt;mouse selection&lt;/code&gt;. Netdata is highly interactive,
&lt;strong&gt;real-time&lt;/strong&gt;, and optimized to get the work done!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Want to see Netdata live? Check out any of our &lt;a href="https://www.netdata.cloud/#live-demo" rel="nofollow"&gt;live demos&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-user-base" class="anchor" aria-hidden="true" href="#user-base"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User base&lt;/h2&gt;
&lt;p&gt;Netdata is used by hundreds of thousands of users all over the world.
Check our &lt;a href="https://github.com/netdata/netdata/watchers"&gt;GitHub watchers list&lt;/a&gt;.
You will find people working for &lt;strong&gt;Amazon&lt;/strong&gt;, &lt;strong&gt;Atos&lt;/strong&gt;, &lt;strong&gt;Baidu&lt;/strong&gt;, &lt;strong&gt;Cisco Systems&lt;/strong&gt;, &lt;strong&gt;Citrix&lt;/strong&gt;, &lt;strong&gt;Deutsche Telekom&lt;/strong&gt;, &lt;strong&gt;DigitalOcean&lt;/strong&gt;,
&lt;strong&gt;Elastic&lt;/strong&gt;, &lt;strong&gt;EPAM Systems&lt;/strong&gt;, &lt;strong&gt;Ericsson&lt;/strong&gt;, &lt;strong&gt;Google&lt;/strong&gt;, &lt;strong&gt;Groupon&lt;/strong&gt;, &lt;strong&gt;Hortonworks&lt;/strong&gt;, &lt;strong&gt;HP&lt;/strong&gt;, &lt;strong&gt;Huawei&lt;/strong&gt;,
&lt;strong&gt;IBM&lt;/strong&gt;, &lt;strong&gt;Microsoft&lt;/strong&gt;, &lt;strong&gt;NewRelic&lt;/strong&gt;, &lt;strong&gt;Nvidia&lt;/strong&gt;, &lt;strong&gt;Red Hat&lt;/strong&gt;, &lt;strong&gt;SAP&lt;/strong&gt;, &lt;strong&gt;Selectel&lt;/strong&gt;, &lt;strong&gt;TicketMaster&lt;/strong&gt;,
&lt;strong&gt;Vimeo&lt;/strong&gt;, and many more!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-docker-pulls" class="anchor" aria-hidden="true" href="#docker-pulls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker pulls&lt;/h3&gt;
&lt;p&gt;We provide Docker images for the most common architectures. These are statistics reported by Docker Hub:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/netdata/netdata/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0432c246ce09a1a76a787989f03c6d064c8b5818/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6e6574646174612f6e6574646174612e7376673f6c6162656c3d6e6574646174612f6e6574646174612b2532386f6666696369616c253239" alt="netdata/netdata (official)" data-canonical-src="https://img.shields.io/docker/pulls/netdata/netdata.svg?label=netdata/netdata+%28official%29" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/firehol/netdata/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/69287d88fb6b540b52a5ad2de2e151ed55fef98c/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f66697265686f6c2f6e6574646174612e7376673f6c6162656c3d66697265686f6c2f6e6574646174612b25323864657072656361746564253239" alt="firehol/netdata (deprecated)" data-canonical-src="https://img.shields.io/docker/pulls/firehol/netdata.svg?label=firehol/netdata+%28deprecated%29" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/titpetric/netdata/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58811336175c3a184b1036a97eaee77e6b8b34ad/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7469747065747269632f6e6574646174612e7376673f6c6162656c3d7469747065747269632f6e6574646174612b25323874686972642b7061727479253239" alt="titpetric/netdata (donated)" data-canonical-src="https://img.shields.io/docker/pulls/titpetric/netdata.svg?label=titpetric/netdata+%28third+party%29" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-registry" class="anchor" aria-hidden="true" href="#registry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Registry&lt;/h3&gt;
&lt;p&gt;When you install multiple Netdata, they are integrated into &lt;strong&gt;one distributed application&lt;/strong&gt;, via a &lt;a href="registry/README.md"&gt;Netdata registry&lt;/a&gt;. This is a web browser feature and it allows us to count the number of unique users and unique Netdata servers installed. The following information comes from the global public Netdata registry we run:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://registry.my-netdata.io/#menu_netdata_submenu_registry" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d4330ae9c93dde5d577c9b8600900f077cb2d1d/68747470733a2f2f72656769737472792e6d792d6e6574646174612e696f2f6170692f76312f62616467652e7376673f63686172743d6e6574646174612e72656769737472795f656e74726965732664696d656e73696f6e733d706572736f6e73266c6162656c3d757365722532306261736526756e6974733d4d2676616c75655f636f6c6f723d626c756526707265636973696f6e3d32266469766964653d3130303030303026763433" alt="User Base" data-canonical-src="https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&amp;amp;dimensions=persons&amp;amp;label=user%20base&amp;amp;units=M&amp;amp;value_color=blue&amp;amp;precision=2&amp;amp;divide=1000000&amp;amp;v43" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://registry.my-netdata.io/#menu_netdata_submenu_registry" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9dfe9981f81dec5483da11eb7a05caecafa9bbbf/68747470733a2f2f72656769737472792e6d792d6e6574646174612e696f2f6170692f76312f62616467652e7376673f63686172743d6e6574646174612e72656769737472795f656e74726965732664696d656e73696f6e733d6d616368696e6573266c6162656c3d736572766572732532306d6f6e69746f72656426756e6974733d6b266469766964653d313030302676616c75655f636f6c6f723d6f72616e676526707265636973696f6e3d3226763433" alt="Monitored Servers" data-canonical-src="https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&amp;amp;dimensions=machines&amp;amp;label=servers%20monitored&amp;amp;units=k&amp;amp;divide=1000&amp;amp;value_color=orange&amp;amp;precision=2&amp;amp;v43" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://registry.my-netdata.io/#menu_netdata_submenu_registry" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a78a964a3cf3a090ddb420af57e1f0bc7d45dc19/68747470733a2f2f72656769737472792e6d792d6e6574646174612e696f2f6170692f76312f62616467652e7376673f63686172743d6e6574646174612e72656769737472795f73657373696f6e73266c6162656c3d73657373696f6e7325323073657276656426756e6974733d4d2676616c75655f636f6c6f723d79656c6c6f77677265656e26707265636973696f6e3d32266469766964653d3130303030303026763433" alt="Sessions Served" data-canonical-src="https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_sessions&amp;amp;label=sessions%20served&amp;amp;units=M&amp;amp;value_color=yellowgreen&amp;amp;precision=2&amp;amp;divide=1000000&amp;amp;v43" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In the last 24 hours:&lt;/em&gt;&lt;br&gt; &lt;a href="https://registry.my-netdata.io/#menu_netdata_submenu_registry" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/19e436388b360f2769ec4742ccd27918073b08e4/68747470733a2f2f72656769737472792e6d792d6e6574646174612e696f2f6170692f76312f62616467652e7376673f63686172743d6e6574646174612e72656769737472795f656e74726965732664696d656e73696f6e733d706572736f6e732661667465723d2d3836343030266f7074696f6e733d756e616c69676e65642667726f75703d696e6372656d656e74616c2d73756d266c6162656c3d6e65772532307573657273253230746f64617926756e6974733d6e756c6c2676616c75655f636f6c6f723d626c756526707265636973696f6e3d3026763432" alt="New Users Today" data-canonical-src="https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&amp;amp;dimensions=persons&amp;amp;after=-86400&amp;amp;options=unaligned&amp;amp;group=incremental-sum&amp;amp;label=new%20users%20today&amp;amp;units=null&amp;amp;value_color=blue&amp;amp;precision=0&amp;amp;v42" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://registry.my-netdata.io/#menu_netdata_submenu_registry" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8715403cf78d8694434df8118defd70194ffafdf/68747470733a2f2f72656769737472792e6d792d6e6574646174612e696f2f6170692f76312f62616467652e7376673f63686172743d6e6574646174612e72656769737472795f656e74726965732664696d656e73696f6e733d6d616368696e65732667726f75703d696e6372656d656e74616c2d73756d2661667465723d2d3836343030266f7074696f6e733d756e616c69676e6564266c6162656c3d736572766572732532306164646564253230746f64617926756e6974733d6e756c6c2676616c75655f636f6c6f723d6f72616e676526707265636973696f6e3d3026763432" alt="New Machines Today" data-canonical-src="https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&amp;amp;dimensions=machines&amp;amp;group=incremental-sum&amp;amp;after=-86400&amp;amp;options=unaligned&amp;amp;label=servers%20added%20today&amp;amp;units=null&amp;amp;value_color=orange&amp;amp;precision=0&amp;amp;v42" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://registry.my-netdata.io/#menu_netdata_submenu_registry" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e841afa3e8734df671fc1fb96f1a65e4e6cdb1c/68747470733a2f2f72656769737472792e6d792d6e6574646174612e696f2f6170692f76312f62616467652e7376673f63686172743d6e6574646174612e72656769737472795f73657373696f6e732661667465723d2d38363430302667726f75703d696e6372656d656e74616c2d73756d266f7074696f6e733d756e616c69676e6564266c6162656c3d73657373696f6e73253230736572766564253230746f64617926756e6974733d6e756c6c2676616c75655f636f6c6f723d79656c6c6f77677265656e26707265636973696f6e3d3026763432" alt="Sessions Today" data-canonical-src="https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_sessions&amp;amp;after=-86400&amp;amp;group=incremental-sum&amp;amp;options=unaligned&amp;amp;label=sessions%20served%20today&amp;amp;units=null&amp;amp;value_color=yellowgreen&amp;amp;precision=0&amp;amp;v42" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9cc609b956f764ce892eaa899f2bc0cc042e1e5b/68747470733a2f2f72656769737472792e6d792d6e6574646174612e696f2f6170692f76312f62616467652e7376673f63686172743d7765625f6c6f675f6e67696e782e72657175657374735f7065725f75726c266f7074696f6e733d756e616c69676e65642664696d656e73696f6e733d6b69636b73746172742667726f75703d73756d2661667465723d2d33363030266c6162656c3d6c6173742b686f757226756e6974733d696e7374616c6c6174696f6e732676616c75655f636f6c6f723d6f72616e676526707265636973696f6e3d30"&gt;&lt;img src="https://camo.githubusercontent.com/9cc609b956f764ce892eaa899f2bc0cc042e1e5b/68747470733a2f2f72656769737472792e6d792d6e6574646174612e696f2f6170692f76312f62616467652e7376673f63686172743d7765625f6c6f675f6e67696e782e72657175657374735f7065725f75726c266f7074696f6e733d756e616c69676e65642664696d656e73696f6e733d6b69636b73746172742667726f75703d73756d2661667465723d2d33363030266c6162656c3d6c6173742b686f757226756e6974733d696e7374616c6c6174696f6e732676616c75655f636f6c6f723d6f72616e676526707265636973696f6e3d30" alt="" data-canonical-src="https://registry.my-netdata.io/api/v1/badge.svg?chart=web_log_nginx.requests_per_url&amp;amp;options=unaligned&amp;amp;dimensions=kickstart&amp;amp;group=sum&amp;amp;after=-3600&amp;amp;label=last+hour&amp;amp;units=installations&amp;amp;value_color=orange&amp;amp;precision=0" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/36665100aa355a990c02a336e9603de22296cee0/68747470733a2f2f72656769737472792e6d792d6e6574646174612e696f2f6170692f76312f62616467652e7376673f63686172743d7765625f6c6f675f6e67696e782e72657175657374735f7065725f75726c266f7074696f6e733d756e616c69676e65642664696d656e73696f6e733d6b69636b73746172742667726f75703d73756d2661667465723d2d3836343030266c6162656c3d746f64617926756e6974733d696e7374616c6c6174696f6e7326707265636973696f6e3d30"&gt;&lt;img src="https://camo.githubusercontent.com/36665100aa355a990c02a336e9603de22296cee0/68747470733a2f2f72656769737472792e6d792d6e6574646174612e696f2f6170692f76312f62616467652e7376673f63686172743d7765625f6c6f675f6e67696e782e72657175657374735f7065725f75726c266f7074696f6e733d756e616c69676e65642664696d656e73696f6e733d6b69636b73746172742667726f75703d73756d2661667465723d2d3836343030266c6162656c3d746f64617926756e6974733d696e7374616c6c6174696f6e7326707265636973696f6e3d30" alt="" data-canonical-src="https://registry.my-netdata.io/api/v1/badge.svg?chart=web_log_nginx.requests_per_url&amp;amp;options=unaligned&amp;amp;dimensions=kickstart&amp;amp;group=sum&amp;amp;after=-86400&amp;amp;label=today&amp;amp;units=installations&amp;amp;precision=0" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To install Netdata from source on any Linux system (physical, virtual, container, IoT, edge) and keep it up to date with our &lt;strong&gt;nightly releases&lt;/strong&gt; automatically, run the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; make sure you run `bash` for your shell&lt;/span&gt;
bash

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install Netdata directly from GitHub source&lt;/span&gt;
bash &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl -Ss https://my-netdata.io/kickstart.sh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To learn more about the pros and cons of using &lt;em&gt;nightly&lt;/em&gt; vs. &lt;em&gt;stable&lt;/em&gt; releases, see our &lt;a href="packaging/installer/README.md#nightly-vs-stable-releases"&gt;notice about the two options&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The above command will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install any required packages on your system (it will ask you to confirm before doing so)&lt;/li&gt;
&lt;li&gt;Compile it, install it, and start it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More installation methods and additional options can be found at the &lt;a href="packaging/installer/#installation"&gt;installation page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To try Netdata in a docker container, run this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -d --name=netdata \
  -p 19999:19999 \
  -v /etc/passwd:/host/etc/passwd:ro \
  -v /etc/group:/host/etc/group:ro \
  -v /proc:/host/proc:ro \
  -v /sys:/host/sys:ro \
  -v /var/run/docker.sock:/var/run/docker.sock:ro \
  --cap-add SYS_PTRACE \
  --security-opt apparmor=unconfined \
  netdata/netdata&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information about running Netdata with Docker, check the &lt;a href="packaging/docker/"&gt;docker installation page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2662304/48304090-fd384080-e51b-11e8-80ae-eecb03118dda.png"&gt;&lt;img src="https://user-images.githubusercontent.com/2662304/48304090-fd384080-e51b-11e8-80ae-eecb03118dda.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;From Netdata v1.12 and above, anonymous usage information is collected by default and sent to Google Analytics. To read more about the information collected and how to opt-out, check the &lt;a href="docs/anonymous-statistics.md"&gt;anonymous statistics page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-netdata" class="anchor" aria-hidden="true" href="#why-netdata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Netdata&lt;/h2&gt;
&lt;p&gt;Netdata has a quite different approach to monitoring.&lt;/p&gt;
&lt;p&gt;Netdata is a monitoring agent you install on all your systems. It is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;metrics collector&lt;/strong&gt; for system and application metrics (including web servers, databases, containers, and much
more),&lt;/li&gt;
&lt;li&gt;A custom &lt;strong&gt;database engine&lt;/strong&gt; to store recent metrics in memory and "spill" historical metrics to disk for efficient
long-term storage,&lt;/li&gt;
&lt;li&gt;A super fast, interactive, and modern &lt;strong&gt;metrics visualizer&lt;/strong&gt; optimized for anomaly detection,&lt;/li&gt;
&lt;li&gt;And an &lt;strong&gt;alarms notification engine&lt;/strong&gt; - an advanced watchdog for detecting performance and availability issues&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All the above, are packaged together in a very flexible, extremely modular, distributed application.&lt;/p&gt;
&lt;p&gt;This is how Netdata compares to other monitoring solutions:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Netdata&lt;/th&gt;
&lt;th align="center"&gt;others (open-source and commercial)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;High resolution metrics&lt;/strong&gt; (1s granularity)&lt;/td&gt;
&lt;td align="center"&gt;Low resolution metrics (10s granularity at best)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Monitors everything, &lt;strong&gt;thousands of metrics per node&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;Monitor just a few metrics&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;UI is super fast, optimized for &lt;strong&gt;anomaly detection&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;UI is good for just an abstract view&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;Meaningful presentation&lt;/strong&gt;, to help you understand the metrics&lt;/td&gt;
&lt;td align="center"&gt;You have to know the metrics before you start&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Install and get results &lt;strong&gt;immediately&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;Long preparation is required to get any useful results&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Use it for &lt;strong&gt;troubleshooting&lt;/strong&gt; performance problems&lt;/td&gt;
&lt;td align="center"&gt;Use them to get &lt;em&gt;statistics of past performance&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;Kills the console&lt;/strong&gt; for tracing performance issues&lt;/td&gt;
&lt;td align="center"&gt;The console is always required for troubleshooting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Requires &lt;strong&gt;zero dedicated resources&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;Require large dedicated resources&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Netdata is &lt;strong&gt;open-source&lt;/strong&gt;, &lt;strong&gt;free&lt;/strong&gt;, super &lt;strong&gt;fast&lt;/strong&gt;, very &lt;strong&gt;easy&lt;/strong&gt;, completely &lt;strong&gt;open&lt;/strong&gt;, extremely &lt;strong&gt;efficient&lt;/strong&gt;,
&lt;strong&gt;flexible&lt;/strong&gt; and integrate-able.&lt;/p&gt;
&lt;p&gt;It has been designed by &lt;strong&gt;system administrators&lt;/strong&gt;, &lt;strong&gt;DevOps engineers&lt;/strong&gt;, and &lt;strong&gt;developers&lt;/strong&gt; for to not just visualize
metrics, but also troubleshoot complex performance problems.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Nov 27th, 2019&lt;/code&gt; - &lt;strong&gt;&lt;a href="https://github.com/netdata/netdata/releases"&gt;Netdata v1.19.0 released!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Release v1.19.0 contains 2 new collectors, 19 bug fixes, 17 improvements, and 19 documentation updates.&lt;/p&gt;
&lt;p&gt;We completed a major rewrite of our &lt;strong&gt;web log collector&lt;/strong&gt; to dramatically improve its flexibility and performance. The
&lt;a href="https://github.com/netdata/go.d.plugin/pull/141"&gt;new collector&lt;/a&gt;, written entirely in Go, can parse and chart logs from
Nginx and Apache servers, and combines numerous improvements. Netdata now supports the LTSV log format, creates charts
for TLS and cipher usage, and is amazingly fast. In a test using SSD storage, the collector parsed the logs for 200,000
requests in about 200ms, using 30% of a single core.&lt;/p&gt;
&lt;p&gt;This Go-based collector also has powerful custom log parsing capabilities, which means we're one step closer to a
generic application log parser for Netdata. We're continuing to work on this parser to support more application log
formatting in the future.&lt;/p&gt;
&lt;p&gt;We have a new tutorial on &lt;a href="https://docs.netdata.cloud/docs/tutorials/collect-apache-nginx-web-logs/" rel="nofollow"&gt;enabling the Go web log
collector&lt;/a&gt; and using it with Nginx and/or
Apache access logs with minimal configuration. Thanks to &lt;a href="https://github.com/Wing924"&gt;Wing924&lt;/a&gt; for starting the Go
rewrite!&lt;/p&gt;
&lt;p&gt;We introduced more &lt;strong&gt;cmocka unit testing&lt;/strong&gt; to Netdata. In this release, we're testing how Netdata's internal web server
processes HTTP requests—the first step to improve the quality of code throughout, reduce bugs, and make refactoring
easier. We wanted to validate the web server's behavior but needed to build a layer of parametric testing on top of the
CMocka test runner. Read all about our process of testing and selecting cmocka on our blog post: &lt;a href="https://blog.netdata.cloud/posts/agile-team-cmocka-foss/" rel="nofollow"&gt;Building an agile
team's 'safety harness' with cmocka and FOSS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Netdata's &lt;strong&gt;Unbound collector&lt;/strong&gt; was also &lt;a href="https://github.com/netdata/go.d.plugin/pull/287"&gt;completely rewritten in Go&lt;/a&gt;
to improve how it collects and displays metrics. This new version can get dozens of metrics, including details on
queries, cache, uptime, and even show per-thread metrics. See our
&lt;a href="https://docs.netdata.cloud/docs/tutorials/collect-unbound-metrics/" rel="nofollow"&gt;tutorial&lt;/a&gt; on enabling the new collector via
Netdata's amazing auto-detection feature.&lt;/p&gt;
&lt;p&gt;We &lt;a href="https://github.com/netdata/netdata/pull/7220"&gt;fixed an error&lt;/a&gt; where &lt;strong&gt;invalid spikes&lt;/strong&gt; appeared on certain charts by
improving the incremental counter reset/wraparound detection algorithm.&lt;/p&gt;
&lt;p&gt;Netdata can now send &lt;a href="https://docs.netdata.cloud/health/notifications/irc/" rel="nofollow"&gt;&lt;strong&gt;health alarm notifications to IRC
channels&lt;/strong&gt;&lt;/a&gt; thanks to &lt;a href="https://github.com/Strykar"&gt;Strykar&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;And, Netdata can now monitor &lt;a href="https://docs.netdata.cloud/collectors/python.d.plugin/am2320/" rel="nofollow"&gt;&lt;strong&gt;AM2320 sensors&lt;/strong&gt;&lt;/a&gt;, thanks
to hard work from &lt;a href="https://github.com/tommybuck"&gt;Tom Buck&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;See more news and previous releases at our &lt;a href="https://blog.netdata.cloud" rel="nofollow"&gt;blog&lt;/a&gt; or our &lt;a href="https://github.com/netdata/netdata/releases"&gt;releases
page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it works&lt;/h2&gt;
&lt;p&gt;Netdata is a highly efficient, highly modular, metrics management engine. Its lockless design makes it ideal for concurrent operations on the metrics.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2662304/48323827-b4c17580-e636-11e8-842c-0ee72fcb4115.png"&gt;&lt;img src="https://user-images.githubusercontent.com/2662304/48323827-b4c17580-e636-11e8-842c-0ee72fcb4115.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is how it works:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Function&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;th align="center"&gt;Documentation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;Collect&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;Multiple independent data collection workers are collecting metrics from their sources using the optimal protocol for each application and push the metrics to the database. Each data collection worker has lockless write access to the metrics it collects.&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="collectors/#data-collection-plugins"&gt;&lt;code&gt;collectors&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;Store&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;Metrics are first stored in RAM in a custom database engine that then "spills" historical metrics to disk for efficient long-term metrics storage.&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="database/#database"&gt;&lt;code&gt;database&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;Check&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;A lockless independent watchdog is evaluating &lt;strong&gt;health checks&lt;/strong&gt; on the collected metrics, triggers alarms, maintains a health transaction log and dispatches alarm notifications.&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="health/#health-monitoring"&gt;&lt;code&gt;health&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;Stream&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;A lockless independent worker is streaming metrics, in full detail and in real-time, to remote Netdata servers, as soon as they are collected.&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="streaming/#streaming-and-replication"&gt;&lt;code&gt;streaming&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;Archive&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;A lockless independent worker is down-sampling the metrics and pushes them to &lt;strong&gt;backend&lt;/strong&gt; time-series databases.&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="backends/"&gt;&lt;code&gt;backends&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;Query&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;Multiple independent workers are attached to the &lt;a href="web/server/#web-server"&gt;internal web server&lt;/a&gt;, servicing API requests, including &lt;a href="web/api/queries/#database-queries"&gt;data queries&lt;/a&gt;.&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="web/api/#api"&gt;&lt;code&gt;web/api&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The result is a highly efficient, low-latency system, supporting multiple readers and one writer on each metric.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-infographic" class="anchor" aria-hidden="true" href="#infographic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Infographic&lt;/h2&gt;
&lt;p&gt;This is a high level overview of Netdata feature set and architecture.
Click it to to interact with it (it has direct links to our documentation).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://my-netdata.io/infographic.html" rel="nofollow"&gt;&lt;img src="https://user-images.githubusercontent.com/43294513/60951037-8ba5d180-a2f8-11e9-906e-e27356f168bc.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2662304/48346998-96cf3180-e685-11e8-9f4e-059d23aa3aa5.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/2662304/48346998-96cf3180-e685-11e8-9f4e-059d23aa3aa5.gif" alt="finger-video" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is what you should expect from Netdata:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-general" class="anchor" aria-hidden="true" href="#general"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1s granularity&lt;/strong&gt; - The highest possible resolution for all metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unlimited metrics&lt;/strong&gt; - Netdata collects all the available metrics—the more, the better.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1% CPU utilization of a single core&lt;/strong&gt; - It's unbelievably optimized.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A few MB of RAM&lt;/strong&gt; - The low-memory round-robin option uses 25MB RAM, and you can &lt;a href="database/"&gt;resize it&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Minimal disk I/O&lt;/strong&gt; - While running, Netdata only writes historical metrics and reads &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;access&lt;/code&gt; logs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zero configuration&lt;/strong&gt; - Netdata auto-detects everything, and can collect up to 10,000 metrics per server out of the
box.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zero maintenance&lt;/strong&gt; - You just run it. Netdata does the rest.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zero dependencies&lt;/strong&gt; - Netdata runs a custom web server for its static web files and its web API (though its
plugins may require additional libraries, depending on the applications monitored).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scales to infinity&lt;/strong&gt; - You can install it on all your servers, containers, VMs, and IoT devices. Metrics are not
centralized by default, so there is no limit.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Several operating modes&lt;/strong&gt; - Autonomous host monitoring (the default), headless data collector, forwarding proxy,
store and forward proxy, central multi-host monitoring, in all possible configurations. Each node may have different
metrics retention policies and run with or without health monitoring.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-health-monitoring--alarms" class="anchor" aria-hidden="true" href="#health-monitoring--alarms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Health Monitoring &amp;amp; Alarms&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sophisticated alerting&lt;/strong&gt; - Netdata comes with hundreds of alarms &lt;strong&gt;out of the box&lt;/strong&gt;! It supports dynamic thresholds, hysteresis, alarm templates, multiple role-based notification methods, and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Notifications&lt;/strong&gt;: &lt;a href="health/notifications/alerta/"&gt;alerta.io&lt;/a&gt;, &lt;a href="health/notifications/awssns/"&gt;amazon sns&lt;/a&gt;, &lt;a href="health/notifications/discord/"&gt;discordapp.com&lt;/a&gt;, &lt;a href="health/notifications/email/"&gt;email&lt;/a&gt;, &lt;a href="health/notifications/flock/"&gt;flock.com&lt;/a&gt;, &lt;a href="health/notifications/hangouts/"&gt;hangouts&lt;/a&gt;, &lt;a href="health/notifications/irc/"&gt;irc&lt;/a&gt;, &lt;a href="health/notifications/kavenegar/"&gt;kavenegar.com&lt;/a&gt;, &lt;a href="health/notifications/messagebird/"&gt;messagebird.com&lt;/a&gt;, &lt;a href="health/notifications/pagerduty/"&gt;pagerduty.com&lt;/a&gt;, &lt;a href="health/notifications/prowl/"&gt;prowl&lt;/a&gt;, &lt;a href="health/notifications/pushbullet/"&gt;pushbullet.com&lt;/a&gt;, &lt;a href="health/notifications/pushover/"&gt;pushover.net&lt;/a&gt;, &lt;a href="health/notifications/rocketchat/"&gt;rocket.chat&lt;/a&gt;, &lt;a href="health/notifications/slack/"&gt;slack.com&lt;/a&gt;, &lt;a href="health/notifications/smstools3/"&gt;smstools3&lt;/a&gt;, &lt;a href="health/notifications/syslog/"&gt;syslog&lt;/a&gt;, &lt;a href="health/notifications/telegram/"&gt;telegram.org&lt;/a&gt;, &lt;a href="health/notifications/twilio/"&gt;twilio.com&lt;/a&gt;, &lt;a href="health/notifications/web/"&gt;web&lt;/a&gt; and &lt;a href="health/notifications/custom/"&gt;custom notifications&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-integrations" class="anchor" aria-hidden="true" href="#integrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integrations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Time-series databases&lt;/strong&gt; - Netdata can archive its metrics to &lt;strong&gt;Graphite&lt;/strong&gt;, &lt;strong&gt;OpenTSDB&lt;/strong&gt;, &lt;strong&gt;Prometheus&lt;/strong&gt;, &lt;strong&gt;AWS Kinesis&lt;/strong&gt;, &lt;strong&gt;MongoDB&lt;/strong&gt;, &lt;strong&gt;JSON document DBs&lt;/strong&gt;, in the same or lower resolution (lower: to prevent it from congesting these servers due to the amount of data collected). Netdata also supports &lt;strong&gt;Prometheus remote write API&lt;/strong&gt;, which allows storing metrics to &lt;strong&gt;Elasticsearch&lt;/strong&gt;, &lt;strong&gt;Gnocchi&lt;/strong&gt;, &lt;strong&gt;InfluxDB&lt;/strong&gt;, &lt;strong&gt;Kafka&lt;/strong&gt;, &lt;strong&gt;PostgreSQL/TimescaleDB&lt;/strong&gt;, &lt;strong&gt;Splunk&lt;/strong&gt;, &lt;strong&gt;VictoriaMetrics&lt;/strong&gt; and a lot of other &lt;a href="https://prometheus.io/docs/operating/integrations/#remote-endpoints-and-storage" rel="nofollow"&gt;storage providers&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-visualization" class="anchor" aria-hidden="true" href="#visualization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visualization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Stunning interactive dashboards&lt;/strong&gt; - Our dashboard is mouse-, touchpad-, and touch-screen friendly in 2 themes: &lt;code&gt;slate&lt;/code&gt; (dark) and &lt;code&gt;white&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Amazingly fast visualization&lt;/strong&gt; - Even on low-end hardware, the dashboard responds to all queries in less than 1 ms per metric.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visual anomaly detection&lt;/strong&gt; - Our UI/UX emphasizes the relationships between charts so you can better detect anomalies visually.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embeddable&lt;/strong&gt; - Charts can be embedded on your web pages, wikis and blogs. You can even use &lt;a href="web/gui/confluence/"&gt;Atlassian's Confluence as a monitoring dashboard&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt; - You can build custom dashboards using simple HTML. No JavaScript needed!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-positive-and-negative-values" class="anchor" aria-hidden="true" href="#positive-and-negative-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Positive and negative values&lt;/h3&gt;
&lt;p&gt;To improve clarity on charts, Netdata dashboards present &lt;strong&gt;positive&lt;/strong&gt; values for metrics representing &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;inbound&lt;/code&gt;, &lt;code&gt;received&lt;/code&gt; and &lt;strong&gt;negative&lt;/strong&gt; values for metrics representing &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;output&lt;/code&gt;, &lt;code&gt;outbound&lt;/code&gt;, &lt;code&gt;sent&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2662304/48309090-7c5c6180-e57a-11e8-8e03-3a7538c14223.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/2662304/48309090-7c5c6180-e57a-11e8-8e03-3a7538c14223.gif" alt="positive-and-negative-values" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Netdata charts showing the bandwidth and packets of a network interface. &lt;code&gt;received&lt;/code&gt; is positive and &lt;code&gt;sent&lt;/code&gt; is negative.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-autoscaled-y-axis" class="anchor" aria-hidden="true" href="#autoscaled-y-axis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Autoscaled y-axis&lt;/h3&gt;
&lt;p&gt;Netdata charts automatically zoom vertically, to visualize the variation of each metric within the visible time-frame.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2662304/48309139-3d2f1000-e57c-11e8-9a44-b91758134b00.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/2662304/48309139-3d2f1000-e57c-11e8-9a44-b91758134b00.gif" alt="non-zero-based" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A zero-based &lt;code&gt;stacked&lt;/code&gt; chart, automatically switches to an auto-scaled &lt;code&gt;area&lt;/code&gt; chart when a single dimension is selected.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-charts-are-synchronized" class="anchor" aria-hidden="true" href="#charts-are-synchronized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Charts are synchronized&lt;/h3&gt;
&lt;p&gt;Charts on Netdata dashboards are synchronized to each other. There is no master chart. Any chart can be panned or zoomed at any time, and all other charts will follow.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2662304/48309003-b4fb3b80-e578-11e8-86f6-f505c7059c15.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/2662304/48309003-b4fb3b80-e578-11e8-86f6-f505c7059c15.gif" alt="charts-are-synchronized" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Charts are panned by dragging them with the mouse. Charts can be zoomed in/out with&lt;code&gt;SHIFT&lt;/code&gt; + &lt;code&gt;mouse wheel&lt;/code&gt; while the mouse pointer is over a chart.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The visible time-frame (pan and zoom) is propagated from Netdata server to Netdata server when navigating via the &lt;a href="registry#registry"&gt;node menu&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-highlighted-time-frame" class="anchor" aria-hidden="true" href="#highlighted-time-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Highlighted time-frame&lt;/h3&gt;
&lt;p&gt;To improve visual anomaly detection across charts, the user can highlight a time-frame (by pressing &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;mouse selection&lt;/code&gt;) on all charts.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2662304/48311876-f9093300-e5ae-11e8-9c74-e3e291741990.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/2662304/48311876-f9093300-e5ae-11e8-9c74-e3e291741990.gif" alt="highlighted-timeframe" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A highlighted time-frame can be given by pressing &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;mouse selection&lt;/code&gt; on any chart. Netdata will highlight the same range on all charts.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Highlighted ranges are propagated from Netdata server to Netdata server, when navigating via the &lt;a href="registry#registry"&gt;node menu&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-what-does-it-monitor" class="anchor" aria-hidden="true" href="#what-does-it-monitor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What does it monitor&lt;/h2&gt;
&lt;p&gt;Netdata data collection is &lt;strong&gt;extensible&lt;/strong&gt;. You can monitor anything you can get a metric for. Our &lt;a href="collectors/plugins.d/"&gt;plugin API&lt;/a&gt; supports a variety of programming languages to make nearly anything a Netdata plugin: Go, Python, Node.js, Ruby, Java, Bash, Perl, and more!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For better performance, most system-related plugins (CPU, memory, disks, filesystems, networking, etc) have been written in C.&lt;/li&gt;
&lt;li&gt;For faster development and easier contributions, most application related plugins (databases, web servers, etc) have been written in Go and Python.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-apm-application-performance-monitoring" class="anchor" aria-hidden="true" href="#apm-application-performance-monitoring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;APM (Application Performance Monitoring)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/statsd.plugin/"&gt;statsd&lt;/a&gt;&lt;/strong&gt; - Netdata is a fully featured statsd server.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/go_expvar/"&gt;Go expvar&lt;/a&gt;&lt;/strong&gt; - collects metrics exposed by applications written in the Go programming language using the expvar package.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/springboot/"&gt;Spring Boot&lt;/a&gt;&lt;/strong&gt; - monitors running Java Spring Boot applications that expose their metrics with the use of the Spring Boot Actuator included in Spring Boot library.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/uwsgi/"&gt;uWSGI&lt;/a&gt;&lt;/strong&gt; - collects performance metrics from uWSGI applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-system-resources" class="anchor" aria-hidden="true" href="#system-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Resources&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;CPU Utilization&lt;/a&gt;&lt;/strong&gt; - total and per core CPU usage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;Interrupts&lt;/a&gt;&lt;/strong&gt; - total and per core CPU interrupts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;SoftIRQs&lt;/a&gt;&lt;/strong&gt; - total and per core SoftIRQs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;SoftNet&lt;/a&gt;&lt;/strong&gt; - total and per core SoftIRQs related to network activity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;CPU Throttling&lt;/a&gt;&lt;/strong&gt; - collects per core CPU throttling.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;CPU Frequency&lt;/a&gt;&lt;/strong&gt; - collects the current CPU frequency.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;CPU Idle&lt;/a&gt;&lt;/strong&gt; - collects the time spent per processor state.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/idlejitter.plugin/"&gt;IdleJitter&lt;/a&gt;&lt;/strong&gt; - measures CPU latency.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;Entropy&lt;/a&gt;&lt;/strong&gt; - random numbers pool, using in cryptography.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;Interprocess Communication - IPC&lt;/a&gt;&lt;/strong&gt; - such as semaphores and semaphores arrays.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-memory" class="anchor" aria-hidden="true" href="#memory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;ram&lt;/a&gt;&lt;/strong&gt; - collects info about RAM usage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;swap&lt;/a&gt;&lt;/strong&gt; - collects info about swap memory usage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;available memory&lt;/a&gt;&lt;/strong&gt; - collects the amount of RAM available for userspace processes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;committed memory&lt;/a&gt;&lt;/strong&gt; - collects the amount of RAM committed to userspace processes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;Page Faults&lt;/a&gt;&lt;/strong&gt; - collects the system page faults (major and minor).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;writeback memory&lt;/a&gt;&lt;/strong&gt; - collects the system dirty memory and writeback activity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;huge pages&lt;/a&gt;&lt;/strong&gt; - collects the amount of RAM used for huge pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;KSM&lt;/a&gt;&lt;/strong&gt; - collects info about Kernel Same Merging (memory dedupper).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;Numa&lt;/a&gt;&lt;/strong&gt; - collects Numa info on systems that support it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;slab&lt;/a&gt;&lt;/strong&gt; - collects info about the Linux kernel memory usage.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-disks" class="anchor" aria-hidden="true" href="#disks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disks&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;block devices&lt;/a&gt;&lt;/strong&gt; - per disk: I/O, operations, backlog, utilization, space, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;BCACHE&lt;/a&gt;&lt;/strong&gt; - detailed performance of SSD caching devices.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;DiskSpace&lt;/a&gt;&lt;/strong&gt; - monitors disk space usage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;mdstat&lt;/a&gt;&lt;/strong&gt; - software RAID.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/hddtemp/"&gt;hddtemp&lt;/a&gt;&lt;/strong&gt; - disk temperatures.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/smartd_log/"&gt;smartd&lt;/a&gt;&lt;/strong&gt; - disk S.M.A.R.T. values.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;device mapper&lt;/a&gt;&lt;/strong&gt; - naming disks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;Veritas Volume Manager&lt;/a&gt;&lt;/strong&gt; - naming disks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/megacli/"&gt;megacli&lt;/a&gt;&lt;/strong&gt; - adapter, physical drives and battery stats.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/adaptec_raid/"&gt;adaptec_raid&lt;/a&gt;&lt;/strong&gt; -  logical and physical devices health metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/ioping.plugin/"&gt;ioping&lt;/a&gt;&lt;/strong&gt; - to measure disk read/write latency.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-filesystems" class="anchor" aria-hidden="true" href="#filesystems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filesystems&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;BTRFS&lt;/a&gt;&lt;/strong&gt; - detailed disk space allocation and usage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/ceph/"&gt;Ceph&lt;/a&gt;&lt;/strong&gt; - OSD usage, Pool usage, number of objects, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;NFS file servers and clients&lt;/a&gt;&lt;/strong&gt; - NFS v2, v3, v4: I/O, cache, read ahead, RPC calls&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/samba/"&gt;Samba&lt;/a&gt;&lt;/strong&gt; - performance metrics of Samba SMB2 file sharing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;ZFS&lt;/a&gt;&lt;/strong&gt; - detailed performance and resource usage.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-networking" class="anchor" aria-hidden="true" href="#networking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Networking&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;Network Stack&lt;/a&gt;&lt;/strong&gt; - everything about the networking stack (both IPv4 and IPv6 for all protocols: TCP, UDP, SCTP, UDPLite, ICMP, Multicast, Broadcast, etc), and all network interfaces (per interface: bandwidth, packets, errors, drops).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;Netfilter&lt;/a&gt;&lt;/strong&gt; - everything about the netfilter connection tracker.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;SynProxy&lt;/a&gt;&lt;/strong&gt; - collects performance data about the linux SYNPROXY (DDoS).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/nfacct.plugin/"&gt;NFacct&lt;/a&gt;&lt;/strong&gt; - collects accounting data from iptables.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/tc.plugin/"&gt;Network QoS&lt;/a&gt;&lt;/strong&gt; - the only tool that visualizes network &lt;code&gt;tc&lt;/code&gt; classes in real-time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/fping.plugin/"&gt;FPing&lt;/a&gt;&lt;/strong&gt; - to measure latency and packet loss between any number of hosts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/isc_dhcpd/"&gt;ISC dhcpd&lt;/a&gt;&lt;/strong&gt; - pools utilization, leases, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/charts.d.plugin/ap/"&gt;AP&lt;/a&gt;&lt;/strong&gt; - collects Linux access point performance data (&lt;code&gt;hostapd&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/node.d.plugin/snmp/"&gt;SNMP&lt;/a&gt;&lt;/strong&gt; - SNMP devices can be monitored too (although you will need to configure these).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/portcheck/"&gt;port_check&lt;/a&gt;&lt;/strong&gt; - checks TCP ports for availability and response time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-virtual-private-networks" class="anchor" aria-hidden="true" href="#virtual-private-networks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Virtual Private Networks&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/ovpn_status_log/"&gt;OpenVPN&lt;/a&gt;&lt;/strong&gt; - collects status per tunnel.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/charts.d.plugin/libreswan/"&gt;LibreSwan&lt;/a&gt;&lt;/strong&gt; - collects metrics per IPSEC tunnel.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/tor/"&gt;Tor&lt;/a&gt;&lt;/strong&gt; - collects Tor traffic statistics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-processes" class="anchor" aria-hidden="true" href="#processes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Processes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;System Processes&lt;/a&gt;&lt;/strong&gt; - running, blocked, forks, active.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/apps.plugin/"&gt;Applications&lt;/a&gt;&lt;/strong&gt; - by grouping the process tree and reporting CPU, memory, disk reads, disk writes, swap, threads, pipes, sockets - per process group.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/cgroups.plugin/"&gt;systemd&lt;/a&gt;&lt;/strong&gt; - monitors systemd services using CGROUPS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-users" class="anchor" aria-hidden="true" href="#users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Users&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/apps.plugin/"&gt;Users and User Groups resource usage&lt;/a&gt;&lt;/strong&gt; - by summarizing the process tree per user and group, reporting: CPU, memory, disk reads, disk writes, swap, threads, pipes, sockets.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/logind/"&gt;logind&lt;/a&gt;&lt;/strong&gt; - collects sessions, users and seats connected.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-containers-and-vms" class="anchor" aria-hidden="true" href="#containers-and-vms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Containers and VMs&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/cgroups.plugin/"&gt;Containers&lt;/a&gt;&lt;/strong&gt; - collects resource usage for all kinds of containers, using CGROUPS (systemd-nspawn, lxc, lxd, docker, kubernetes, etc).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/cgroups.plugin/"&gt;libvirt VMs&lt;/a&gt;&lt;/strong&gt; - collects resource usage for all kinds of VMs, using CGROUPS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/dockerd/"&gt;dockerd&lt;/a&gt;&lt;/strong&gt; - collects docker health metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-web-servers" class="anchor" aria-hidden="true" href="#web-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web Servers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/apache/"&gt;Apache and lighttpd&lt;/a&gt;&lt;/strong&gt; - &lt;code&gt;mod-status&lt;/code&gt; (v2.2, v2.4) and cache log statistics, for multiple servers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/ipfs/"&gt;IPFS&lt;/a&gt;&lt;/strong&gt; - bandwidth, peers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/litespeed/"&gt;LiteSpeed&lt;/a&gt;&lt;/strong&gt; - reads the litespeed rtreport files to collect metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/nginx/"&gt;Nginx&lt;/a&gt;&lt;/strong&gt; - &lt;code&gt;stub-status&lt;/code&gt;, for multiple servers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/nginx_plus/"&gt;Nginx+&lt;/a&gt;&lt;/strong&gt; - connects to multiple nginx_plus servers (local or remote) to collect real-time performance metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/phpfpm/"&gt;PHP-FPM&lt;/a&gt;&lt;/strong&gt; - multiple instances, each reporting connections, requests, performance, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/tomcat/"&gt;Tomcat&lt;/a&gt;&lt;/strong&gt; - accesses, threads, free memory, volume, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/web_log/"&gt;web server &lt;code&gt;access.log&lt;/code&gt; files&lt;/a&gt;&lt;/strong&gt; - extracting in real-time, web server and proxy performance metrics and applying several health checks, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/httpcheck/"&gt;HTTP check&lt;/a&gt;&lt;/strong&gt; - checks one or more web servers for HTTP status code and returned content.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-proxies-balancers-accelerators" class="anchor" aria-hidden="true" href="#proxies-balancers-accelerators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Proxies, Balancers, Accelerators&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/haproxy/"&gt;HAproxy&lt;/a&gt;&lt;/strong&gt; - bandwidth, sessions, backends, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/squid/"&gt;Squid&lt;/a&gt;&lt;/strong&gt; - multiple servers, each showing: clients bandwidth and requests, servers bandwidth and requests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/traefik/"&gt;Traefik&lt;/a&gt;&lt;/strong&gt; - connects to multiple traefik instances (local or remote) to collect API metrics (response status code, response time, average response time and server uptime).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/varnish/"&gt;Varnish&lt;/a&gt;&lt;/strong&gt; - threads, sessions, hits, objects, backends, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;IPVS&lt;/a&gt;&lt;/strong&gt; - collects metrics from the Linux IPVS load balancer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-database-servers" class="anchor" aria-hidden="true" href="#database-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Servers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/couchdb/"&gt;CouchDB&lt;/a&gt;&lt;/strong&gt; - reads/writes, request methods, status codes, tasks, replication, per-db, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/memcached/"&gt;MemCached&lt;/a&gt;&lt;/strong&gt; - multiple servers, each showing: bandwidth, connections, items, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/mongodb/"&gt;MongoDB&lt;/a&gt;&lt;/strong&gt; - operations, clients, transactions, cursors, connections, asserts, locks, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/mysql/"&gt;MySQL and mariadb&lt;/a&gt;&lt;/strong&gt; - multiple servers, each showing: bandwidth, queries/s, handlers, locks, issues, tmp operations, connections, binlog metrics, threads, innodb metrics, and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/postgres/"&gt;PostgreSQL&lt;/a&gt;&lt;/strong&gt; - multiple servers, each showing: per database statistics (connections, tuples read - written - returned, transactions, locks), backend processes, indexes, tables, write ahead, background writer and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/proxysql/"&gt;Proxy SQL&lt;/a&gt;&lt;/strong&gt; - collects Proxy SQL backend and frontend performance metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/redis/"&gt;Redis&lt;/a&gt;&lt;/strong&gt; - multiple servers, each showing: operations, hit rate, memory, keys, clients, slaves.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/rethinkdbs/"&gt;RethinkDB&lt;/a&gt;&lt;/strong&gt; - connects to multiple rethinkdb servers (local or remote) to collect real-time metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-message-brokers" class="anchor" aria-hidden="true" href="#message-brokers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Message Brokers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/beanstalk/"&gt;beanstalkd&lt;/a&gt;&lt;/strong&gt; - global and per tube monitoring.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/rabbitmq/"&gt;RabbitMQ&lt;/a&gt;&lt;/strong&gt; - performance and health metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-search-and-indexing" class="anchor" aria-hidden="true" href="#search-and-indexing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Search and Indexing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/elasticsearch/"&gt;ElasticSearch&lt;/a&gt;&lt;/strong&gt; - search and index performance, latency, timings, cluster statistics, threads statistics, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-dns-servers" class="anchor" aria-hidden="true" href="#dns-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DNS Servers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/bind_rndc/"&gt;bind_rndc&lt;/a&gt;&lt;/strong&gt; - parses &lt;code&gt;named.stats&lt;/code&gt; dump file to collect real-time performance metrics. All versions of bind after 9.6 are supported.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/dnsdist/"&gt;dnsdist&lt;/a&gt;&lt;/strong&gt; - performance and health metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/node.d.plugin/named/"&gt;ISC Bind (named)&lt;/a&gt;&lt;/strong&gt; - multiple servers, each showing: clients, requests, queries, updates, failures and several per view metrics. All versions of bind after 9.9.10 are supported.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/nsd/"&gt;NSD&lt;/a&gt;&lt;/strong&gt; - queries, zones, protocols, query types, transfers, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/powerdns/"&gt;PowerDNS&lt;/a&gt;&lt;/strong&gt; - queries, answers, cache, latency, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/unbound/"&gt;unbound&lt;/a&gt;&lt;/strong&gt; - performance and resource usage metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/dns_query_time/"&gt;dns_query_time&lt;/a&gt;&lt;/strong&gt; - DNS query time statistics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-time-servers" class="anchor" aria-hidden="true" href="#time-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Time Servers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/chrony/"&gt;chrony&lt;/a&gt;&lt;/strong&gt; - uses the &lt;code&gt;chronyc&lt;/code&gt; command to collect chrony statistics (Frequency, Last offset, RMS offset, Residual freq, Root delay, Root dispersion, Skew, System time).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/ntpd/"&gt;ntpd&lt;/a&gt;&lt;/strong&gt; - connects to multiple ntpd servers (local or remote) to provide statistics of system variables and optional also peer variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-mail-servers" class="anchor" aria-hidden="true" href="#mail-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mail Servers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/dovecot/"&gt;Dovecot&lt;/a&gt;&lt;/strong&gt; - POP3/IMAP servers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/exim/"&gt;Exim&lt;/a&gt;&lt;/strong&gt; - message queue (emails queued).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/postfix/"&gt;Postfix&lt;/a&gt;&lt;/strong&gt; - message queue (entries, size).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-hardware-sensors" class="anchor" aria-hidden="true" href="#hardware-sensors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hardware Sensors&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/freeipmi.plugin/"&gt;IPMI&lt;/a&gt;&lt;/strong&gt; - enterprise hardware sensors and events.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/sensors/"&gt;lm-sensors&lt;/a&gt;&lt;/strong&gt; - temperature, voltage, fans, power, humidity, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/nvidia_smi/"&gt;Nvidia&lt;/a&gt;&lt;/strong&gt; - collects information for Nvidia GPUs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/charts.d.plugin/sensors/"&gt;RPi&lt;/a&gt;&lt;/strong&gt; - Raspberry Pi temperature sensors.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/w1sensor/"&gt;w1sensor&lt;/a&gt;&lt;/strong&gt; - collects data from connected 1-Wire sensors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-upses" class="anchor" aria-hidden="true" href="#upses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UPSes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/charts.d.plugin/apcupsd/"&gt;apcupsd&lt;/a&gt;&lt;/strong&gt; - load, charge, battery voltage, temperature, utility metrics, output metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/charts.d.plugin/nut/"&gt;NUT&lt;/a&gt;&lt;/strong&gt; - load, charge, battery voltage, temperature, utility metrics, output metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/proc.plugin/"&gt;Linux Power Supply&lt;/a&gt;&lt;/strong&gt; - collects metrics reported by power supply drivers on Linux.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-social-sharing-servers" class="anchor" aria-hidden="true" href="#social-sharing-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Social Sharing Servers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/retroshare/"&gt;RetroShare&lt;/a&gt;&lt;/strong&gt; - connects to multiple retroshare servers (local or remote) to collect real-time performance metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/fail2ban/"&gt;Fail2Ban&lt;/a&gt;&lt;/strong&gt; - monitors the fail2ban log file to check all bans for all active jails.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-authentication-authorization-accounting-aaa-radius-ldap-servers" class="anchor" aria-hidden="true" href="#authentication-authorization-accounting-aaa-radius-ldap-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authentication, Authorization, Accounting (AAA, RADIUS, LDAP) Servers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/freeradius/"&gt;FreeRadius&lt;/a&gt;&lt;/strong&gt; - uses the &lt;code&gt;radclient&lt;/code&gt; command to provide freeradius statistics (authentication, accounting, proxy-authentication, proxy-accounting).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-telephony-servers" class="anchor" aria-hidden="true" href="#telephony-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Telephony Servers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/charts.d.plugin/opensips/"&gt;opensips&lt;/a&gt;&lt;/strong&gt; - connects to an opensips server (localhost only) to collect real-time performance metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-household-appliances" class="anchor" aria-hidden="true" href="#household-appliances"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Household Appliances&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/node.d.plugin/sma_webbox/"&gt;SMA webbox&lt;/a&gt;&lt;/strong&gt; - connects to multiple remote SMA webboxes to collect real-time performance metrics of the photovoltaic (solar) power generation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/node.d.plugin/fronius/"&gt;Fronius&lt;/a&gt;&lt;/strong&gt; - connects to multiple remote Fronius Symo servers to collect real-time performance metrics of the photovoltaic (solar) power generation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/node.d.plugin/stiebeleltron/"&gt;StiebelEltron&lt;/a&gt;&lt;/strong&gt; - collects the temperatures and other metrics from your Stiebel Eltron heating system using their Internet Service Gateway (ISG web).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-game-servers" class="anchor" aria-hidden="true" href="#game-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Game Servers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/spigotmc/"&gt;SpigotMC&lt;/a&gt;&lt;/strong&gt; - monitors Spigot Minecraft server ticks per second and number of online players using the Minecraft remote console.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-distributed-computing" class="anchor" aria-hidden="true" href="#distributed-computing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distributed Computing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/boinc/"&gt;BOINC&lt;/a&gt;&lt;/strong&gt; - monitors task states for local and remote BOINC client software using the remote GUI RPC interface. Also provides alarms for a handful of error conditions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-media-streaming-servers" class="anchor" aria-hidden="true" href="#media-streaming-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Media Streaming Servers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/icecast/"&gt;IceCast&lt;/a&gt;&lt;/strong&gt; - collects the number of listeners for active sources.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-monitoring-systems" class="anchor" aria-hidden="true" href="#monitoring-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Monitoring Systems&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/monit/"&gt;Monit&lt;/a&gt;&lt;/strong&gt; - collects metrics about monit targets (filesystems, applications, networks).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-provisioning-systems" class="anchor" aria-hidden="true" href="#provisioning-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Provisioning Systems&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="collectors/python.d.plugin/puppet/"&gt;Puppet&lt;/a&gt;&lt;/strong&gt; - connects to multiple Puppet Server and Puppet DB instances (local or remote) to collect real-time status metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can easily extend Netdata, by writing plugins that collect data from any source, using any computer language.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The Netdata documentation is at &lt;a href="https://docs.netdata.cloud" rel="nofollow"&gt;https://docs.netdata.cloud&lt;/a&gt;, but you can also find each page inside of Netdata's
repository itself in Markdown (&lt;code&gt;.md&lt;/code&gt;) files. You can find all our documentation by navigating the repository.&lt;/p&gt;
&lt;p&gt;Here is a quick list of notable documents:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Directory&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="packaging/installer/"&gt;&lt;code&gt;installer&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Instructions to install Netdata on your systems.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="packaging/docker/"&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Instructions to install Netdata using docker.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="daemon/"&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Information about the Netdata daemon and its configuration.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="collectors/"&gt;&lt;code&gt;collectors&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Information about data collection plugins.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="health/"&gt;&lt;code&gt;health&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;How Netdata's health monitoring works, how to create your own alarms and how to configure alarm notification methods.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="streaming/"&gt;&lt;code&gt;streaming&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;How to build hierarchies of Netdata servers, by streaming metrics between them.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="backends/"&gt;&lt;code&gt;backends&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Long term archiving of metrics to industry-standard time-series databases, like &lt;code&gt;prometheus&lt;/code&gt;, &lt;code&gt;graphite&lt;/code&gt;, &lt;code&gt;opentsdb&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="web/api/"&gt;&lt;code&gt;web/api&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Learn how to query the Netdata API and the queries it supports.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="web/api/badges/"&gt;&lt;code&gt;web/api/badges&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Learn how to generate badges (SVG images) from live data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="web/gui/custom/"&gt;&lt;code&gt;web/gui/custom&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Learn how to create custom Netdata dashboards.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="web/gui/confluence/"&gt;&lt;code&gt;web/gui/confluence&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Learn how to create Netdata dashboards on Atlassian's Confluence.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can also check all the other directories. Most of them have plenty of documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;We welcome &lt;a href="CONTRIBUTING.md"&gt;contributions&lt;/a&gt;. Feel free to join the team!&lt;/p&gt;
&lt;p&gt;To report bugs or get help, use &lt;a href="https://github.com/netdata/netdata/issues"&gt;GitHub's issues&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also find Netdata on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/linuxnetdata/" rel="nofollow"&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/linuxnetdata" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackshare.io/netdata" rel="nofollow"&gt;StackShare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/company/my-netdata.io/" rel="nofollow"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.producthunt.com/posts/netdata-monitoring-agent/" rel="nofollow"&gt;Product Hunt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://repology.org/metapackage/netdata/versions" rel="nofollow"&gt;Repology&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Netdata is &lt;a href="LICENSE"&gt;GPLv3+&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Netdata re-distributes other open-source tools and libraries. Please check the &lt;a href="REDISTRIBUTED.md"&gt;third party licenses&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-is-it-any-good" class="anchor" aria-hidden="true" href="#is-it-any-good"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Is it any good?&lt;/h2&gt;
&lt;p&gt;Yes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;When people first hear about a new product, they frequently ask if it is any good. A Hacker News user &lt;a href="https://news.ycombinator.com/item?id=3067434" rel="nofollow"&gt;remarked&lt;/a&gt;:&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note to self: Starting immediately, all raganwald projects will have a “Is it any good?” section in the readme, and the answer shall be “yes.".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, we follow the tradition...&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-is-it-awesome" class="anchor" aria-hidden="true" href="#is-it-awesome"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Is it awesome?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/netdata/netdata/stargazers"&gt;These people&lt;/a&gt; seem to like it.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>netdata</author><guid isPermaLink="false">https://github.com/netdata/netdata</guid><pubDate>Thu, 26 Dec 2019 00:05:00 GMT</pubDate></item><item><title>jarun/nnn #6 in C, This month</title><link>https://github.com/jarun/nnn</link><description>&lt;p&gt;&lt;i&gt;:dolphin: The missing terminal file manager for X.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content-nnn---type-less-do-more-wayyy-faster" class="anchor" aria-hidden="true" href="#nnn---type-less-do-more-wayyy-faster"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nnn - &lt;i&gt;type less, do more, wayyy faster&lt;/i&gt;&lt;/h1&gt;
&lt;p align="center"&gt;
&lt;a href="https://github.com/jarun/nnn/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/18b943470ae3352cbdef0c60fb019d35282b1544/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6a6172756e2f6e6e6e2e7376673f6d61784167653d363030" alt="Latest release" data-canonical-src="https://img.shields.io/github/release/jarun/nnn.svg?maxAge=600" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://repology.org/project/nnn/versions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b6c50298eacbb6eb531dc1225a3b10fb6d00dca7/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f74696e792d7265706f732f6e6e6e2e737667" alt="Availability" data-canonical-src="https://repology.org/badge/tiny-repos/nnn.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/jarun/nnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/37db593059bd9da597d3d4372b0ad69ceece98f4/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6a6172756e2f6e6e6e2f6d61737465722e7376673f6c6162656c3d747261766973" alt="Travis Status" data-canonical-src="https://img.shields.io/travis/jarun/nnn/master.svg?label=travis" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/jarun/workflows/nnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/79031f9d0927a50a3a5b3bc80b07f5efcc4447ed/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f6a6172756e2f6e6e6e2e7376673f6c6162656c3d636972636c656369" alt="CircleCI Status" data-canonical-src="https://img.shields.io/circleci/project/github/jarun/nnn.svg?label=circleci" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://en.wikipedia.org/wiki/Privacy-invasive_software" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/45f221b30d361f86537eb09f8ea94795418f5d46/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707269766163792de29c932d6372696d736f6e" alt="Privacy Awareness" data-canonical-src="https://img.shields.io/badge/privacy-✓-crimson" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/jarun/nnn/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/0994a626d3e23c840a4ce2ec05783c1e88cf69f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d425344253230322d2d436c617573652d79656c6c6f772e7376673f6d61784167653d32353932303030" alt="License" data-canonical-src="https://img.shields.io/badge/license-BSD%202--Clause-yellow.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=RMLTQ76JSXJ4Q" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/091a000ee8ff6640d0e39066767e64382617d7be/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f50617950616c2d646f6e6174652d3165623066632e737667" alt="Donate via PayPal!" data-canonical-src="https://img.shields.io/badge/PayPal-donate-1eb0fc.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;&lt;a href="https://www.youtube.com/watch?v=U2n5aGqou9E" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d7abd98b23e90b9b4c295e2b15b7150b53cdd5a0/68747470733a2f2f692e696d6775722e636f6d2f4d5057706d6f732e706e67" data-canonical-src="https://i.imgur.com/MPWpmos.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;i&gt;navigate-as-you-type &amp;amp; du (click to see demo video)&lt;/i&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; is a full-featured terminal file manager. It's tiny and nearly 0-config with an &lt;a href="https://github.com/jarun/nnn/wiki/Performance"&gt;incredible performance&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; is also a du analyzer, an app launcher, a batch renamer and a file picker. The &lt;a href="https://github.com/jarun/nnn/tree/master/plugins#nnn-plugins"&gt;plugin repository&lt;/a&gt; has tons of plugins and documentation to extend the capabilities further. You can &lt;em&gt;plug&lt;/em&gt; new functionality &lt;em&gt;and play&lt;/em&gt; with a custom keybind instantly. There's an independent &lt;a href="https://github.com/mcchrish/nnn.vim"&gt;(neo)vim plugin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It runs smoothly on the Raspberry Pi, Termux &lt;a href="https://www.youtube.com/watch?v=AbaauM7gUJw" rel="nofollow"&gt;on Android&lt;/a&gt;, Linux, macOS, BSD, Cygwin, WSL and works seamlessly with DEs and GUI utilities.&lt;/p&gt;
&lt;p&gt;Visit the &lt;a href="https://github.com/jarun/nnn/wiki"&gt;Wiki&lt;/a&gt; for concepts, program usage, how-tos and troubleshooting.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Modes
&lt;ul&gt;
&lt;li&gt;Light (default), detail&lt;/li&gt;
&lt;li&gt;Disk usage analyzer (block/apparent)&lt;/li&gt;
&lt;li&gt;File picker, (neo)vim plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Navigation
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Navigate-as-you-type&lt;/em&gt; with dir auto-select&lt;/li&gt;
&lt;li&gt;Contexts (&lt;em&gt;aka&lt;/em&gt; tabs/workspaces) with custom colors&lt;/li&gt;
&lt;li&gt;Sessions, bookmarks; pin and visit a dir&lt;/li&gt;
&lt;li&gt;Remote mounts (needs sshfs, rclone)&lt;/li&gt;
&lt;li&gt;Familiar shortcuts (arrows, &lt;kbd&gt;~&lt;/kbd&gt;, &lt;kbd&gt;-&lt;/kbd&gt;, &lt;kbd&gt;@&lt;/kbd&gt;), quick reference&lt;/li&gt;
&lt;li&gt;CD on quit (&lt;em&gt;easy&lt;/em&gt; shell integration)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sorting
&lt;ul&gt;
&lt;li&gt;Ordered pure numeric names by default (visit &lt;em&gt;/proc&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Case-insensitive version (&lt;em&gt;aka&lt;/em&gt; natural) sort&lt;/li&gt;
&lt;li&gt;By file name, modification/access time, size, extension&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Search
&lt;ul&gt;
&lt;li&gt;Instant filtering with &lt;em&gt;search-as-you-type&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Regex and substring (default) matches&lt;/li&gt;
&lt;li&gt;Subtree search to open or edit files (using plugin)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mimes
&lt;ul&gt;
&lt;li&gt;Open with desktop opener or specify a custom app&lt;/li&gt;
&lt;li&gt;Create, list, extract, mount (FUSE based) archives&lt;/li&gt;
&lt;li&gt;Option to open all text files in EDITOR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Information
&lt;ul&gt;
&lt;li&gt;Detailed file information&lt;/li&gt;
&lt;li&gt;Media information (using plugin)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Convenience
&lt;ul&gt;
&lt;li&gt;Run plugins and commands with custom keybinds&lt;/li&gt;
&lt;li&gt;FreeDesktop compliant trash (needs trash-cli)&lt;/li&gt;
&lt;li&gt;Cross-dir file/all/range selection&lt;/li&gt;
&lt;li&gt;Batch renamer (feature-limited) for selection or dir&lt;/li&gt;
&lt;li&gt;Copy (as), move (as), delete, archive, link selection&lt;/li&gt;
&lt;li&gt;Notification on cp, mv, rm completion&lt;/li&gt;
&lt;li&gt;Copy file paths to system clipboard on select&lt;/li&gt;
&lt;li&gt;Create (with parents), rename, duplicate (anywhere) files and dirs&lt;/li&gt;
&lt;li&gt;Launch GUI apps, run commands, execute file, spawn a shell&lt;/li&gt;
&lt;li&gt;Hovered file set as &lt;code&gt;$nnn&lt;/code&gt; at prompt and spawned shell&lt;/li&gt;
&lt;li&gt;Lock terminal (needs a locker)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Privacy-aware (no unconfirmed user data collection)&lt;/li&gt;
&lt;li&gt;Minimal deps, minimal config (with sensible defaults)&lt;/li&gt;
&lt;li&gt;Widely available&lt;/li&gt;
&lt;li&gt;Unicode support&lt;/li&gt;
&lt;li&gt;Follows Linux kernel coding style&lt;/li&gt;
&lt;li&gt;Highly optimized, static analysis integrated code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install the &lt;a href="https://github.com/jarun/nnn#utility-dependencies"&gt;utilities you may need&lt;/a&gt; based on your regular workflows.&lt;/li&gt;
&lt;li&gt;Configure &lt;a href="https://github.com/jarun/nnn/wiki/Basic-use-cases#configure-cd-on-quit"&gt;cd on quit&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Optionally open all text files in &lt;code&gt;$VISUAL&lt;/code&gt; (else &lt;code&gt;$EDITOR&lt;/code&gt;, fallback vi): &lt;code&gt;export NNN_USE_EDITOR=1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For additional functionality &lt;a href="https://github.com/jarun/nnn/tree/master/plugins#installing-plugins"&gt;install plugins&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To copy selected file paths to system clipboard and show notis on cp, mv, rm completion use option &lt;code&gt;-x&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For a strictly CLI-only experience, see plugin &lt;code&gt;nuke&lt;/code&gt;. It's a sample opener you can customize.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Don't memorize keys. Arrows (or &lt;kbd&gt;h&lt;/kbd&gt; &lt;kbd&gt;j&lt;/kbd&gt; &lt;kbd&gt;k&lt;/kbd&gt; &lt;kbd&gt;l&lt;/kbd&gt;), &lt;kbd&gt;/&lt;/kbd&gt; and &lt;kbd&gt;q&lt;/kbd&gt; suffice. Press &lt;kbd&gt;?&lt;/kbd&gt; to list shortcuts anytime.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-library-dependencies" class="anchor" aria-hidden="true" href="#library-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Library dependencies&lt;/h4&gt;
&lt;p&gt;A curses library with wide char support (e.g. ncursesw), libreadline (optional) and standard libc.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-utility-dependencies" class="anchor" aria-hidden="true" href="#utility-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Utility dependencies&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Dependency&lt;/th&gt;
&lt;th&gt;Installation&lt;/th&gt;
&lt;th&gt;Operation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;xdg-open (Linux), open(1) (macOS), cygstart (Cygwin)&lt;/td&gt;
&lt;td&gt;base&lt;/td&gt;
&lt;td&gt;desktop opener&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file, coreutils (cp, mv, rm), xargs&lt;/td&gt;
&lt;td&gt;base&lt;/td&gt;
&lt;td&gt;file type, copy, move and remove&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tar, (un)zip [atool/bsdtar for more formats]&lt;/td&gt;
&lt;td&gt;base&lt;/td&gt;
&lt;td&gt;create, list, extract tar, gzip, bzip2, zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;archivemount, fusermount(3)&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;mount, unmount archives&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sshfs, &lt;a href="https://rclone.org/" rel="nofollow"&gt;rclone&lt;/a&gt;, fusermount(3)&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;mount, unmount remotes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;trash-cli&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;trash files (default action: rm)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vlock (Linux), bashlock (macOS), lock(1) (BSD)&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;terminal locker (fallback: &lt;a href="https://github.com/abishekvashok/cmatrix"&gt;cmatrix&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;advcpmv (Linux) (&lt;a href="https://github.com/jarun/nnn/wiki/Advanced-use-cases#show-cp-mv-progress"&gt;integration&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;copy, move progress&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$VISUAL&lt;/code&gt; (else &lt;code&gt;$EDITOR&lt;/code&gt;), &lt;code&gt;$PAGER&lt;/code&gt;, &lt;code&gt;$SHELL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;fallback vi, less, sh&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-from-a-package-manager" class="anchor" aria-hidden="true" href="#from-a-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From a package manager&lt;/h4&gt;
&lt;p&gt;Install &lt;code&gt;nnn&lt;/code&gt; from your package manager. If the version available is dated try an alternative installation method.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Packaging status (expand)&lt;/summary&gt;
&lt;p&gt;
&lt;br&gt;
&lt;a href="https://repology.org/project/nnn/versions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bfbef78a779d5f143146ad0570030f2928688b54/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f766572746963616c2d616c6c7265706f732f6e6e6e2e737667" alt="Packaging status" data-canonical-src="https://repology.org/badge/vertical-allrepos/nnn.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
Unlisted packagers:
&lt;p&gt;
&lt;br&gt;
● CentOS (&lt;code&gt;yum --enablerepo=epel install nnn&lt;/code&gt;)&lt;br&gt;
● &lt;a href="https://notabug.org/milislinux/milis/src/master/talimatname/genel/n/nnn/talimat" rel="nofollow"&gt;Milis Linux&lt;/a&gt; (&lt;code&gt;mps kur nnn&lt;/code&gt;)&lt;br&gt;
● &lt;a href="https://www.nutyx.org/en/?type=pkg&amp;amp;branch=rolling&amp;amp;arch=x86_64&amp;amp;searchpkg=nnn" rel="nofollow"&gt;NuTyX&lt;/a&gt; (&lt;code&gt;cards install nnn&lt;/code&gt;)&lt;br&gt;
● &lt;a href="http://codex.sourcemage.org/test/shell-term-fm/nnn/" rel="nofollow"&gt;Source Mage&lt;/a&gt; (&lt;code&gt;cast nnn&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-release-packages" class="anchor" aria-hidden="true" href="#release-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release packages&lt;/h4&gt;
&lt;p&gt;Packages for Arch Linux, CentOS, Debian, Fedora and Ubuntu are auto-generated with the &lt;a href="https://github.com/jarun/nnn/releases/latest"&gt;latest stable release&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-from-source" class="anchor" aria-hidden="true" href="#from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From source&lt;/h4&gt;
&lt;p&gt;Download the latest stable release or clone this repository (&lt;em&gt;risky&lt;/em&gt;), install deps and compile. On Ubuntu 18.04:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install pkg-config libncursesw5-dev libreadline-dev
$ sudo make strip install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To compile &lt;em&gt;without&lt;/em&gt; libreadline:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install pkg-config libncursesw5-dev
$ sudo make O_NORL=1 strip install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;PREFIX&lt;/code&gt; is supported, in case you want to install to a different location.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/jarun/nnn/wiki/Developer-guides"&gt;developer guides&lt;/a&gt; for source verification, compilation notes on the Pi, Cygwin and other tips.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-shell-completion" class="anchor" aria-hidden="true" href="#shell-completion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shell completion&lt;/h4&gt;
&lt;p&gt;Completion scripts for Bash, Fish and Zsh are &lt;a href="misc/auto-completion"&gt;available&lt;/a&gt;. Refer to your shell's manual for installation instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-elsewhere" class="anchor" aria-hidden="true" href="#elsewhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elsewhere&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Nnn_(file_manager)" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Nnn" rel="nofollow"&gt;ArchWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fossmint.com/nnn-linux-terminal-file-browser/" rel="nofollow"&gt;FOSSMint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ghacks.net/2019/11/01/nnn-is-an-excellent-command-line-based-file-manager-for-linux-macos-and-bsds/" rel="nofollow"&gt;gHacks Tech News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hacker News [&lt;a href="https://news.ycombinator.com/item?id=18520898" rel="nofollow"&gt;1&lt;/a&gt;] [&lt;a href="https://news.ycombinator.com/item?id=19850656" rel="nofollow"&gt;2&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itsfoss.com/nnn-file-browser-linux/" rel="nofollow"&gt;It's FOSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LinuxLinks [&lt;a href="https://www.linuxlinks.com/nnn-fast-and-flexible-file-manager/" rel="nofollow"&gt;1&lt;/a&gt;] [&lt;a href="https://www.linuxlinks.com/bestconsolefilemanagers/" rel="nofollow"&gt;2&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://suckless.org/rocks/" rel="nofollow"&gt;Suckless Rocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fullcirclemagazine.org/issue-135/" rel="nofollow"&gt;Ubuntu Full Circle Magazine - Issue 135&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-developers" class="anchor" aria-hidden="true" href="#developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jarun"&gt;Arun Prakash Jana&lt;/a&gt; (Copyright © 2016-2019)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0xACE"&gt;0xACE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/annagrram"&gt;Anna Arad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KlzXS"&gt;KlzXS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maximbaz"&gt;Maxim Baz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;and other contributors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; is actively developed. Visit the to the &lt;a href="https://github.com/jarun/nnn/issues/386"&gt;ToDo list&lt;/a&gt; to contribute or see the features in progress.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jarun</author><guid isPermaLink="false">https://github.com/jarun/nnn</guid><pubDate>Thu, 26 Dec 2019 00:06:00 GMT</pubDate></item><item><title>pjreddie/darknet #7 in C, This month</title><link>https://github.com/pjreddie/darknet</link><description>&lt;p&gt;&lt;i&gt;Convolutional Neural Networks&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e69d4118b20a42de4e23b9549f9a6ec6dbbb0814/687474703a2f2f706a7265646469652e636f6d2f6d656469612f66696c65732f6461726b6e65742d626c61636b2d736d616c6c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e69d4118b20a42de4e23b9549f9a6ec6dbbb0814/687474703a2f2f706a7265646469652e636f6d2f6d656469612f66696c65732f6461726b6e65742d626c61636b2d736d616c6c2e706e67" alt="Darknet Logo" data-canonical-src="http://pjreddie.com/media/files/darknet-black-small.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-darknet" class="anchor" aria-hidden="true" href="#darknet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Darknet&lt;/h1&gt;
&lt;p&gt;Darknet is an open source neural network framework written in C and CUDA. It is fast, easy to install, and supports CPU and GPU computation.&lt;/p&gt;
&lt;p&gt;For more information see the &lt;a href="http://pjreddie.com/darknet" rel="nofollow"&gt;Darknet project website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For questions or issues please use the &lt;a href="https://groups.google.com/forum/#!forum/darknet" rel="nofollow"&gt;Google Group&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pjreddie</author><guid isPermaLink="false">https://github.com/pjreddie/darknet</guid><pubDate>Thu, 26 Dec 2019 00:07:00 GMT</pubDate></item><item><title>openwrt/openwrt #8 in C, This month</title><link>https://github.com/openwrt/openwrt</link><description>&lt;p&gt;&lt;i&gt;This repository is a mirror of https://git.openwrt.org/openwrt/openwrt.git It is for reference only and is not active for check-ins or for reporting issues.  We will continue to accept Pull Requests here. They will be merged via staging trees then into openwrt.git. All issues should be reported at: https://bugs.openwrt.org&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;  _______                     ________        __
 |       |.-----.-----.-----.|  |  |  |.----.|  |_
 |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|
 |_______||   __|_____|__|__||________||__|  |____|
          |__| W I R E L E S S   F R E E D O M
 -----------------------------------------------------

This is the buildsystem for the OpenWrt Linux distribution.

To build your own firmware you need a Linux, BSD or MacOSX system (case
sensitive filesystem required). Cygwin is unsupported because of the lack
of a case sensitive file system.

You need gcc, binutils, bzip2, flex, python3.5+, perl, make, find, grep, diff,
unzip, gawk, getopt, subversion, libz-dev and libc headers installed.

1. Run "./scripts/feeds update -a" to obtain all the latest package definitions
defined in feeds.conf / feeds.conf.default

2. Run "./scripts/feeds install -a" to install symlinks for all obtained
packages into package/feeds/

3. Run "make menuconfig" to select your preferred configuration for the
toolchain, target system &amp;amp; firmware packages.

4. Run "make" to build your firmware. This will download all sources, build
the cross-compile toolchain and then cross-compile the Linux kernel &amp;amp; all
chosen applications for your target system.

Sunshine!
	Your OpenWrt Community
	&lt;a href="http://www.openwrt.org" rel="nofollow"&gt;http://www.openwrt.org&lt;/a&gt;


&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>openwrt</author><guid isPermaLink="false">https://github.com/openwrt/openwrt</guid><pubDate>Thu, 26 Dec 2019 00:08:00 GMT</pubDate></item><item><title>tmux/tmux #9 in C, This month</title><link>https://github.com/tmux/tmux</link><description>&lt;p&gt;&lt;i&gt;tmux source code&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path=".github/README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-welcome-to-tmux" class="anchor" aria-hidden="true" href="#welcome-to-tmux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to tmux!&lt;/h1&gt;
&lt;p&gt;tmux is a terminal multiplexer: it enables a number of terminals to be created,
accessed, and controlled from a single screen. tmux may be detached from a
screen and continue running in the background, then later reattached.&lt;/p&gt;
&lt;p&gt;This release runs on OpenBSD, FreeBSD, NetBSD, Linux, OS X and Solaris.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;tmux depends on &lt;a href="https://libevent.org" rel="nofollow"&gt;libevent&lt;/a&gt; 2.x, available from &lt;a href="https://github.com/libevent/libevent/releases/latest"&gt;this
page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It also depends on &lt;a href="https://www.gnu.org/software/ncurses/" rel="nofollow"&gt;ncurses&lt;/a&gt;, available
from &lt;a href="https://invisible-mirror.net/archives/ncurses/" rel="nofollow"&gt;this page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-from-release-tarball" class="anchor" aria-hidden="true" href="#from-release-tarball"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From release tarball&lt;/h3&gt;
&lt;p&gt;To build and install tmux from a release tarball, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./configure &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make
sudo make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;tmux can use the utempter library to update utmp(5), if it is installed - run
configure with &lt;code&gt;--enable-utempter&lt;/code&gt; to enable this.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-from-version-control" class="anchor" aria-hidden="true" href="#from-version-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From version control&lt;/h3&gt;
&lt;p&gt;To get and build the latest from version control - note that this requires
&lt;code&gt;autoconf&lt;/code&gt;, &lt;code&gt;automake&lt;/code&gt; and &lt;code&gt;pkg-config&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/tmux/tmux.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; tmux
sh autogen.sh
./configure &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Bug reports, feature suggestions and especially code contributions are most
welcome. Please send by email to:&lt;/p&gt;
&lt;p&gt;&lt;a href="mailto:tmux-users@googlegroups.com"&gt;tmux-users@googlegroups.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Or open a GitHub issue or pull request. &lt;strong&gt;Please read &lt;a href="CONTRIBUTING.md"&gt;this
document&lt;/a&gt; before opening an issue.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is &lt;a href="https://github.com/tmux/tmux/wiki/Contributing"&gt;a list of suggestions for contributions&lt;/a&gt;.
Please feel free to ask on the mailing list if you're thinking of working on something or need
further information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;For documentation on using tmux, see the tmux.1 manpage. View it from the
source tree with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;nroff -mdoc tmux.1&lt;span class="pl-k"&gt;|&lt;/span&gt;less&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A small example configuration is in &lt;code&gt;example_tmux.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And a bash(1) completion file at:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/imomaliev/tmux-bash-completion"&gt;https://github.com/imomaliev/tmux-bash-completion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For debugging, run tmux with &lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;-vv&lt;/code&gt; to generate server and client log
files in the current directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;The tmux mailing list for general discussion and bug reports is:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://groups.google.com/forum/#!forum/tmux-users" rel="nofollow"&gt;https://groups.google.com/forum/#!forum/tmux-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Subscribe by sending an email to:&lt;/p&gt;
&lt;p&gt;&lt;a href="mailto:tmux-users+subscribe@googlegroups.com"&gt;tmux-users+subscribe@googlegroups.com&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tmux</author><guid isPermaLink="false">https://github.com/tmux/tmux</guid><pubDate>Thu, 26 Dec 2019 00:09:00 GMT</pubDate></item><item><title>zephyrproject-rtos/zephyr #10 in C, This month</title><link>https://github.com/zephyrproject-rtos/zephyr</link><description>&lt;p&gt;&lt;i&gt;Primary Git Repository for the Zephyr Project. Zephyr is a new generation, scalable, optimized, secure RTOS for multiple hardware architectures.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="https://www.zephyrproject.org" rel="nofollow"&gt;
  &lt;p align="center"&gt;
    &lt;img src="doc/images/Zephyr-Project.png" style="max-width:100%;"&gt;
  &lt;/p&gt;
&lt;/a&gt;

&lt;a href="https://bestpractices.coreinfrastructure.org/projects/74" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b972176ff3cc1b05418042ea4ba7ea5ada4c002/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f37342f6261646765" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/74/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e6dac3ced16d1df7fda34ae359303e08c6167b7f/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3538666662326238626161356533303730303265316437392f62616467653f6272616e63683d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/e6dac3ced16d1df7fda34ae359303e08c6167b7f/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3538666662326238626161356533303730303265316437392f62616467653f6272616e63683d6d6173746572" data-canonical-src="https://api.shippable.com/projects/58ffb2b8baa5e307002e1d79/badge?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The Zephyr Project is a scalable real-time operating system (RTOS) supporting
multiple hardware architectures, optimized for resource constrained devices,
and built with security in mind.&lt;/p&gt;
&lt;p&gt;The Zephyr OS is based on a small-footprint kernel designed for use on
resource-constrained systems: from simple embedded environmental sensors and
LED wearables to sophisticated smart watches and IoT wireless gateways.&lt;/p&gt;
&lt;p&gt;The Zephyr kernel supports multiple architectures, including ARM Cortex-M,
Intel x86, ARC, Nios II, Tensilica Xtensa, and RISC-V, and a large number of
&lt;a href="http://docs.zephyrproject.org/latest/boards/index.html" rel="nofollow"&gt;supported boards&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-getting-started"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Welcome to Zephyr! See the &lt;a href="http://docs.zephyrproject.org/latest/introduction/index.html" rel="nofollow"&gt;Introduction to Zephyr&lt;/a&gt; for a high-level overview,
and the documentation's &lt;a href="http://docs.zephyrproject.org/latest/getting_started/index.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt; to start developing.&lt;/p&gt;
&lt;a name="user-content-community-support"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-community-support" class="anchor" aria-hidden="true" href="#community-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Support&lt;/h2&gt;
&lt;p&gt;Community support is provided via mailing lists and Slack; see the Resources
below for details.&lt;/p&gt;
&lt;a name="user-content-resources"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;Here's a quick summary of resources to help you find your way around:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Help&lt;/strong&gt;: &lt;a href="https://docs.zephyrproject.org/latest/guides/getting-help.html" rel="nofollow"&gt;Asking for Help Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href="http://docs.zephyrproject.org" rel="nofollow"&gt;http://docs.zephyrproject.org&lt;/a&gt; (&lt;a href="http://docs.zephyrproject.org/latest/getting_started/index.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source Code&lt;/strong&gt;: &lt;a href="https://github.com/zephyrproject-rtos/zephyr"&gt;https://github.com/zephyrproject-rtos/zephyr&lt;/a&gt; is the main
repository; &lt;a href="https://elixir.bootlin.com/zephyr/latest/source" rel="nofollow"&gt;https://elixir.bootlin.com/zephyr/latest/source&lt;/a&gt; contains a
searchable index&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Releases&lt;/strong&gt;: &lt;a href="https://zephyrproject.org/developers/#downloads" rel="nofollow"&gt;https://zephyrproject.org/developers/#downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Samples and example code&lt;/strong&gt;: see &lt;a href="http://docs.zephyrproject.org/latest/samples/index.html" rel="nofollow"&gt;Sample and Demo Code Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mailing Lists&lt;/strong&gt;: &lt;a href="mailto:users@lists.zephyrproject.org"&gt;users@lists.zephyrproject.org&lt;/a&gt; and
&lt;a href="mailto:devel@lists.zephyrproject.org"&gt;devel@lists.zephyrproject.org&lt;/a&gt; are the main user and developer mailing lists,
respectively. You can join the developer's list and search its archives at
&lt;a href="https://lists.zephyrproject.org/g/devel" rel="nofollow"&gt;Zephyr Development mailing list&lt;/a&gt;. The other &lt;a href="https://lists.zephyrproject.org/g/main/subgroups" rel="nofollow"&gt;Zephyr mailing list
subgroups&lt;/a&gt; have their own archives and sign-up pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nightly CI Build Status&lt;/strong&gt;: &lt;a href="https://lists.zephyrproject.org/g/builds" rel="nofollow"&gt;https://lists.zephyrproject.org/g/builds&lt;/a&gt;
The &lt;a href="mailto:builds@lists.zephyrproject.org"&gt;builds@lists.zephyrproject.org&lt;/a&gt; mailing list archives the CI
(shippable) nightly build results.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Zephyr's Slack workspace is &lt;a href="https://zephyrproject.slack.com" rel="nofollow"&gt;https://zephyrproject.slack.com&lt;/a&gt;.  Use
this &lt;a href="https://tinyurl.com/y5glwylp" rel="nofollow"&gt;Slack Invite&lt;/a&gt; to register.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contributing&lt;/strong&gt;: see the &lt;a href="http://docs.zephyrproject.org/latest/contribute/index.html" rel="nofollow"&gt;Contribution Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wiki&lt;/strong&gt;: &lt;a href="https://github.com/zephyrproject-rtos/zephyr/wiki"&gt;Zephyr GitHub wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href="https://github.com/zephyrproject-rtos/zephyr/issues"&gt;https://github.com/zephyrproject-rtos/zephyr/issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security Issues&lt;/strong&gt;: Email &lt;a href="mailto:vulnerabilities@zephyrproject.org"&gt;vulnerabilities@zephyrproject.org&lt;/a&gt; to report
security issues; also see our &lt;a href="http://docs.zephyrproject.org/latest/security/index.html" rel="nofollow"&gt;Security&lt;/a&gt; documentation. Security issues are
tracked separately at &lt;a href="https://zephyrprojectsec.atlassian.net" rel="nofollow"&gt;https://zephyrprojectsec.atlassian.net&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zephyr Project Website&lt;/strong&gt;: &lt;a href="https://zephyrproject.org" rel="nofollow"&gt;https://zephyrproject.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>zephyrproject-rtos</author><guid isPermaLink="false">https://github.com/zephyrproject-rtos/zephyr</guid><pubDate>Thu, 26 Dec 2019 00:10:00 GMT</pubDate></item><item><title>FFmpeg/FFmpeg #11 in C, This month</title><link>https://github.com/FFmpeg/FFmpeg</link><description>&lt;p&gt;&lt;i&gt;Mirror of git://source.ffmpeg.org/ffmpeg.git&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ffmpeg-readme" class="anchor" aria-hidden="true" href="#ffmpeg-readme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FFmpeg README&lt;/h1&gt;
&lt;p&gt;FFmpeg is a collection of libraries and tools to process multimedia content
such as audio, video, subtitles and related metadata.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-libraries" class="anchor" aria-hidden="true" href="#libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Libraries&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libavcodec&lt;/code&gt; provides implementation of a wider range of codecs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libavformat&lt;/code&gt; implements streaming protocols, container formats and basic I/O access.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libavutil&lt;/code&gt; includes hashers, decompressors and miscellaneous utility functions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libavfilter&lt;/code&gt; provides a mean to alter decoded Audio and Video through chain of filters.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libavdevice&lt;/code&gt; provides an abstraction to access capture and playback devices.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libswresample&lt;/code&gt; implements audio mixing and resampling routines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libswscale&lt;/code&gt; implements color conversion and scaling routines.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ffmpeg.org/ffmpeg.html" rel="nofollow"&gt;ffmpeg&lt;/a&gt; is a command line toolbox to
manipulate, convert and stream multimedia content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ffmpeg.org/ffplay.html" rel="nofollow"&gt;ffplay&lt;/a&gt; is a minimalistic multimedia player.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ffmpeg.org/ffprobe.html" rel="nofollow"&gt;ffprobe&lt;/a&gt; is a simple analysis tool to inspect
multimedia content.&lt;/li&gt;
&lt;li&gt;Additional small tools such as &lt;code&gt;aviocat&lt;/code&gt;, &lt;code&gt;ismindex&lt;/code&gt; and &lt;code&gt;qt-faststart&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The offline documentation is available in the &lt;strong&gt;doc/&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;The online documentation is available in the main &lt;a href="https://ffmpeg.org" rel="nofollow"&gt;website&lt;/a&gt;
and in the &lt;a href="https://trac.ffmpeg.org" rel="nofollow"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h3&gt;
&lt;p&gt;Coding examples are available in the &lt;strong&gt;doc/examples&lt;/strong&gt; directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;FFmpeg codebase is mainly LGPL-licensed with optional components licensed under
GPL. Please refer to the LICENSE file for detailed information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Patches should be submitted to the ffmpeg-devel mailing list using
&lt;code&gt;git format-patch&lt;/code&gt; or &lt;code&gt;git send-email&lt;/code&gt;. Github pull requests should be
avoided because they are not part of our review process and will be ignored.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FFmpeg</author><guid isPermaLink="false">https://github.com/FFmpeg/FFmpeg</guid><pubDate>Thu, 26 Dec 2019 00:11:00 GMT</pubDate></item><item><title>micropython/micropython #12 in C, This month</title><link>https://github.com/micropython/micropython</link><description>&lt;p&gt;&lt;i&gt;MicroPython - a lean and efficient Python implementation for microcontrollers and constrained systems&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/micropython/micropython" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5134d05f6dd511adb7fc9847532e8a7b4704a04e/68747470733a2f2f7472617669732d63692e6f72672f6d6963726f707974686f6e2f6d6963726f707974686f6e2e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/micropython/micropython.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/micropython/micropython?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58ea07629a38b6fe6fc115ddb82bfc39f1f5a665/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d6963726f707974686f6e2f6d6963726f707974686f6e2f62616467652e706e673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/micropython/micropython/badge.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-micropython-project" class="anchor" aria-hidden="true" href="#the-micropython-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The MicroPython project&lt;/h1&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/micropython/micropython/master/logo/upython-with-micro.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/micropython/micropython/master/logo/upython-with-micro.jpg" alt="MicroPython Logo" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;This is the MicroPython project, which aims to put an implementation
of Python 3.x on microcontrollers and small embedded systems.
You can find the official website at &lt;a href="http://www.micropython.org" rel="nofollow"&gt;micropython.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;WARNING: this project is in beta stage and is subject to changes of the
code-base, including project-wide name changes and API changes.&lt;/p&gt;
&lt;p&gt;MicroPython implements the entire Python 3.4 syntax (including exceptions,
&lt;code&gt;with&lt;/code&gt;, &lt;code&gt;yield from&lt;/code&gt;, etc., and additionally &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; keywords from
Python 3.5). The following core datatypes are provided: &lt;code&gt;str&lt;/code&gt; (including
basic Unicode support), &lt;code&gt;bytes&lt;/code&gt;, &lt;code&gt;bytearray&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;,
&lt;code&gt;frozenset&lt;/code&gt;, &lt;code&gt;array.array&lt;/code&gt;, &lt;code&gt;collections.namedtuple&lt;/code&gt;, classes and instances.
Builtin modules include &lt;code&gt;sys&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, and &lt;code&gt;struct&lt;/code&gt;, etc. Select ports have
support for &lt;code&gt;_thread&lt;/code&gt; module (multithreading). Note that only a subset of
Python 3 functionality is implemented for the data types and modules.&lt;/p&gt;
&lt;p&gt;MicroPython can execute scripts in textual source form or from precompiled
bytecode, in both cases either from an on-device filesystem or "frozen" into
the MicroPython executable.&lt;/p&gt;
&lt;p&gt;See the repository &lt;a href="http://github.com/micropython/pyboard"&gt;http://github.com/micropython/pyboard&lt;/a&gt; for the MicroPython
board (PyBoard), the officially supported reference electronic circuit board.&lt;/p&gt;
&lt;p&gt;Major components in this repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;py/ -- the core Python implementation, including compiler, runtime, and
core library.&lt;/li&gt;
&lt;li&gt;mpy-cross/ -- the MicroPython cross-compiler which is used to turn scripts
into precompiled bytecode.&lt;/li&gt;
&lt;li&gt;ports/unix/ -- a version of MicroPython that runs on Unix.&lt;/li&gt;
&lt;li&gt;ports/stm32/ -- a version of MicroPython that runs on the PyBoard and similar
STM32 boards (using ST's Cube HAL drivers).&lt;/li&gt;
&lt;li&gt;ports/minimal/ -- a minimal MicroPython port. Start with this if you want
to port MicroPython to another microcontroller.&lt;/li&gt;
&lt;li&gt;tests/ -- test framework and test scripts.&lt;/li&gt;
&lt;li&gt;docs/ -- user documentation in Sphinx reStructuredText format. Rendered
HTML documentation is available at &lt;a href="http://docs.micropython.org" rel="nofollow"&gt;http://docs.micropython.org&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ports/bare-arm/ -- a bare minimum version of MicroPython for ARM MCUs. Used
mostly to control code size.&lt;/li&gt;
&lt;li&gt;ports/teensy/ -- a version of MicroPython that runs on the Teensy 3.1
(preliminary but functional).&lt;/li&gt;
&lt;li&gt;ports/pic16bit/ -- a version of MicroPython for 16-bit PIC microcontrollers.&lt;/li&gt;
&lt;li&gt;ports/cc3200/ -- a version of MicroPython that runs on the CC3200 from TI.&lt;/li&gt;
&lt;li&gt;ports/esp8266/ -- a version of MicroPython that runs on Espressif's ESP8266 SoC.&lt;/li&gt;
&lt;li&gt;ports/esp32/ -- a version of MicroPython that runs on Espressif's ESP32 SoC.&lt;/li&gt;
&lt;li&gt;ports/nrf/ -- a version of MicroPython that runs on Nordic's nRF51 and nRF52 MCUs.&lt;/li&gt;
&lt;li&gt;extmod/ -- additional (non-core) modules implemented in C.&lt;/li&gt;
&lt;li&gt;tools/ -- various tools, including the pyboard.py module.&lt;/li&gt;
&lt;li&gt;examples/ -- a few example Python scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The subdirectories above may include READMEs with additional info.&lt;/p&gt;
&lt;p&gt;"make" is used to build the components, or "gmake" on BSD-based systems.
You will also need bash, gcc, and Python 3.3+ available as the command &lt;code&gt;python3&lt;/code&gt;
(if your system only has Python 2.7 then invoke make with the additional option
&lt;code&gt;PYTHON=python2&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-micropython-cross-compiler-mpy-cross" class="anchor" aria-hidden="true" href="#the-micropython-cross-compiler-mpy-cross"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The MicroPython cross-compiler, mpy-cross&lt;/h2&gt;
&lt;p&gt;Most ports require the MicroPython cross-compiler to be built first.  This
program, called mpy-cross, is used to pre-compile Python scripts to .mpy
files which can then be included (frozen) into the firmware/executable for
a port.  To build mpy-cross use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd mpy-cross
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-the-unix-version" class="anchor" aria-hidden="true" href="#the-unix-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Unix version&lt;/h2&gt;
&lt;p&gt;The "unix" port requires a standard Unix environment with gcc and GNU make.
x86 and x64 architectures are supported (i.e. x86 32- and 64-bit), as well
as ARM and MIPS. Making full-featured port to another architecture requires
writing some assembly code for the exception handling and garbage collection.
Alternatively, fallback implementation based on setjmp/longjmp can be used.&lt;/p&gt;
&lt;p&gt;To build (see section below for required dependencies):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ports/unix
$ make submodules
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then to give it a try:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./micropython
&amp;gt;&amp;gt;&amp;gt; list(5 * x + y for x in range(10) for y in [4, 2, 1])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use &lt;code&gt;CTRL-D&lt;/code&gt; (i.e. EOF) to exit the shell.
Learn about command-line options (in particular, how to increase heap size
which may be needed for larger applications):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./micropython --help
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run complete testsuite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unix version comes with a builtin package manager called upip, e.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./micropython -m upip install micropython-pystone
$ ./micropython -m pystone
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Browse available modules on
&lt;a href="https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=micropython" rel="nofollow"&gt;PyPI&lt;/a&gt;.
Standard library modules come from
&lt;a href="https://github.com/micropython/micropython-lib"&gt;micropython-lib&lt;/a&gt; project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-external-dependencies" class="anchor" aria-hidden="true" href="#external-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External dependencies&lt;/h2&gt;
&lt;p&gt;Building MicroPython ports may require some dependencies installed.&lt;/p&gt;
&lt;p&gt;For Unix port, &lt;code&gt;libffi&lt;/code&gt; library and &lt;code&gt;pkg-config&lt;/code&gt; tool are required. On
Debian/Ubuntu/Mint derivative Linux distros, install &lt;code&gt;build-essential&lt;/code&gt;
(includes toolchain and make), &lt;code&gt;libffi-dev&lt;/code&gt;, and &lt;code&gt;pkg-config&lt;/code&gt; packages.&lt;/p&gt;
&lt;p&gt;Other dependencies can be built together with MicroPython. This may
be required to enable extra features or capabilities, and in recent
versions of MicroPython, these may be enabled by default. To build
these additional dependencies, in the port directory you're
interested in (e.g. &lt;code&gt;ports/unix/&lt;/code&gt;) first execute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make submodules
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will fetch all the relevant git submodules (sub repositories) that
the port needs.  Use the same command to get the latest versions of
submodules as they are updated from time to time. After that execute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make deplibs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will build all available dependencies (regardless whether they
are used or not). If you intend to build MicroPython with additional
options (like cross-compiling), the same set of options should be passed
to &lt;code&gt;make deplibs&lt;/code&gt;. To actually enable/disable use of dependencies, edit
&lt;code&gt;ports/unix/mpconfigport.mk&lt;/code&gt; file, which has inline descriptions of the options.
For example, to build SSL module (required for &lt;code&gt;upip&lt;/code&gt; tool described above,
and so enabled by dfeault), &lt;code&gt;MICROPY_PY_USSL&lt;/code&gt; should be set to 1.&lt;/p&gt;
&lt;p&gt;For some ports, building required dependences is transparent, and happens
automatically.  But they still need to be fetched with the &lt;code&gt;make submodules&lt;/code&gt;
command.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-stm32-version" class="anchor" aria-hidden="true" href="#the-stm32-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The STM32 version&lt;/h2&gt;
&lt;p&gt;The "stm32" port requires an ARM compiler, arm-none-eabi-gcc, and associated
bin-utils.  For those using Arch Linux, you need arm-none-eabi-binutils,
arm-none-eabi-gcc and arm-none-eabi-newlib packages.  Otherwise, try here:
&lt;a href="https://launchpad.net/gcc-arm-embedded" rel="nofollow"&gt;https://launchpad.net/gcc-arm-embedded&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To build:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ports/stm32
$ make submodules
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You then need to get your board into DFU mode.  On the pyboard, connect the
3V3 pin to the P1/DFU pin with a wire (on PYBv1.0 they are next to each other
on the bottom left of the board, second row from the bottom).&lt;/p&gt;
&lt;p&gt;Then to flash the code via USB DFU to your device:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will use the included &lt;code&gt;tools/pydfu.py&lt;/code&gt; script.  If flashing the firmware
does not work it may be because you don't have the correct permissions, and
need to use &lt;code&gt;sudo make deploy&lt;/code&gt;.
See the README.md file in the ports/stm32/ directory for further details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;MicroPython is an open-source project and welcomes contributions. To be
productive, please be sure to follow the
&lt;a href="https://github.com/micropython/micropython/wiki/ContributorGuidelines"&gt;Contributors' Guidelines&lt;/a&gt;
and the &lt;a href="https://github.com/micropython/micropython/blob/master/CODECONVENTIONS.md"&gt;Code Conventions&lt;/a&gt;.
Note that MicroPython is licenced under the MIT license, and all contributions
should follow this license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>micropython</author><guid isPermaLink="false">https://github.com/micropython/micropython</guid><pubDate>Thu, 26 Dec 2019 00:12:00 GMT</pubDate></item><item><title>Atmosphere-NX/Atmosphere #13 in C, This month</title><link>https://github.com/Atmosphere-NX/Atmosphere</link><description>&lt;p&gt;&lt;i&gt;Atmosphère is a work-in-progress customized firmware for the Nintendo Switch.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="img/banner.png?raw=true"&gt;&lt;img src="img/banner.png?raw=true" alt="Banner" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a131f62d28b8a90dd5de5d0063154a7735c7bf5a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76322d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/a131f62d28b8a90dd5de5d0063154a7735c7bf5a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76322d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-GPLv2-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discordapp.com/invite/ZdqEhed" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b4175720ede4f2621aa066ffbabb70ae30044679/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d446973636f72642d627269676874677265656e2e737667" alt="Chat on Discord" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Atmosphère is a work-in-progress customized firmware for the Nintendo Switch.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-components" class="anchor" aria-hidden="true" href="#components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Components&lt;/h1&gt;
&lt;p&gt;Atmosphère consists of multiple components, each of which replaces/modifies a different component of the system:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fusée: First-stage Loader, responsible for loading and validating stage 2 (custom TrustZone) plus package2 (Kernel/FIRM sysmodules), and patching them as needed. This replaces all functionality normally in Package1loader/NX Bootloader.
&lt;ul&gt;
&lt;li&gt;Sept: Payload used to enable support for runtime key derivation on 7.0.0.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exosphère: Customized TrustZone, to run a customized Secure Monitor&lt;/li&gt;
&lt;li&gt;Thermosphère: EL2 EmuNAND support, i.e. backing up and using virtualized/redirected NAND images&lt;/li&gt;
&lt;li&gt;Stratosphère: Custom Sysmodule(s), both Rosalina style to extend the kernel/provide new features, and of the loader reimplementation style to hook important system actions&lt;/li&gt;
&lt;li&gt;Troposphère: Application-level Horizon OS patches, used to implement desirable CFW features&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h1&gt;
&lt;p&gt;This software is licensed under the terms of the GPLv2, with exemptions for specific projects noted below.&lt;/p&gt;
&lt;p&gt;You can find a copy of the license in the &lt;a href="LICENSE"&gt;LICENSE file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exemptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://github.com/yuzu-emu/yuzu"&gt;yuzu emulator project&lt;/a&gt; is exempt from GPLv2 licensing and may (at its option) instead license any source code authored for the Atmosphère project as GPLv2 or later.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h1&gt;
&lt;p&gt;Atmosphère is currently being developed and maintained by &lt;strong&gt;SciresM&lt;/strong&gt;, &lt;strong&gt;TuxSH&lt;/strong&gt;, &lt;strong&gt;hexkyz&lt;/strong&gt;, and &lt;strong&gt;fincs&lt;/strong&gt;.&lt;br&gt;
In no particular order, we credit the following for their invaluable contributions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;switchbrew&lt;/strong&gt; for the &lt;a href="https://github.com/switchbrew/libnx"&gt;libnx&lt;/a&gt; project and the extensive &lt;a href="http://switchbrew.org" rel="nofollow"&gt;documentation, research and tool development&lt;/a&gt; pertaining to the Nintendo Switch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;devkitPro&lt;/strong&gt; for the &lt;a href="https://devkitpro.org/" rel="nofollow"&gt;devkitA64&lt;/a&gt; toolchain and libnx support.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ReSwitched Team&lt;/strong&gt; for additional &lt;a href="https://reswitched.team/" rel="nofollow"&gt;documentation, research and tool development&lt;/a&gt; pertaining to the Nintendo Switch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ChaN&lt;/strong&gt; for the &lt;a href="http://elm-chan.org/fsw/ff/00index_e.html" rel="nofollow"&gt;FatFs&lt;/a&gt; module.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Marcus Geelnard&lt;/strong&gt; for the &lt;a href="https://sourceforge.net/projects/bcl/files/bcl/bcl-1.2.0" rel="nofollow"&gt;bcl-1.2.0&lt;/a&gt; library.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;naehrwert&lt;/strong&gt; and &lt;strong&gt;st4rk&lt;/strong&gt; for the original &lt;a href="https://github.com/nwert/hekate"&gt;hekate&lt;/a&gt; project and its hwinit code base.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CTCaer&lt;/strong&gt; for the continued &lt;a href="https://github.com/CTCaer/hekate"&gt;hekate&lt;/a&gt; project's fork and the &lt;a href="https://github.com/CTCaer/minerva_tc"&gt;minerva_tc&lt;/a&gt; project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;m4xw&lt;/strong&gt; for development of the &lt;a href="https://github.com/m4xw/emummc"&gt;emuMMC&lt;/a&gt; project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Riley&lt;/strong&gt; for suggesting "Atmosphere" as a Horizon OS reimplementation+customization project name.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hedgeberg&lt;/strong&gt; for research and hardware testing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lioncash&lt;/strong&gt; for code cleanup and general improvements.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;jaames&lt;/strong&gt; for designing and providing Atmosphère's graphical resources.&lt;/li&gt;
&lt;li&gt;Everyone who submitted entries for Atmosphère's &lt;a href="https://github.com/Atmosphere-NX/Atmosphere-splashes"&gt;splash design contest&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;All those who actively contribute to the Atmosphère repository.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Atmosphere-NX</author><guid isPermaLink="false">https://github.com/Atmosphere-NX/Atmosphere</guid><pubDate>Thu, 26 Dec 2019 00:13:00 GMT</pubDate></item><item><title>libuv/libuv #14 in C, This month</title><link>https://github.com/libuv/libuv</link><description>&lt;p&gt;&lt;i&gt;Cross-platform asynchronous I/O&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/libuv/libuv/master/img/banner.png"&gt;&lt;img src="https://raw.githubusercontent.com/libuv/libuv/master/img/banner.png" alt="libuv" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;libuv is a multi-platform support library with a focus on asynchronous I/O. It
was primarily developed for use by &lt;a href="http://nodejs.org/" rel="nofollow"&gt;Node.js&lt;/a&gt;, but it's also
used by &lt;a href="http://luvit.io/" rel="nofollow"&gt;Luvit&lt;/a&gt;, &lt;a href="http://julialang.org/" rel="nofollow"&gt;Julia&lt;/a&gt;,
&lt;a href="https://github.com/saghul/pyuv"&gt;pyuv&lt;/a&gt;, and &lt;a href="https://github.com/libuv/libuv/wiki/Projects-that-use-libuv"&gt;others&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feature-highlights" class="anchor" aria-hidden="true" href="#feature-highlights"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature highlights&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Full-featured event loop backed by epoll, kqueue, IOCP, event ports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asynchronous TCP and UDP sockets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asynchronous DNS resolution&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asynchronous file and file system operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;File system events&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ANSI escape code controlled TTY&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IPC with socket sharing, using Unix domain sockets or named pipes (Windows)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Child processes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Thread pool&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Signal handling&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;High resolution clock&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Threading and synchronization primitives&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h2&gt;
&lt;p&gt;Starting with version 1.0.0 libuv follows the &lt;a href="http://semver.org/" rel="nofollow"&gt;semantic versioning&lt;/a&gt;
scheme. The API change and backwards compatibility rules are those indicated by
SemVer. libuv will keep a stable ABI across major releases.&lt;/p&gt;
&lt;p&gt;The ABI/API changes can be tracked &lt;a href="http://abi-laboratory.pro/tracker/timeline/libuv/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h2&gt;
&lt;p&gt;libuv is licensed under the MIT license. Check the &lt;a href="LICENSE"&gt;LICENSE file&lt;/a&gt;.
The documentation is licensed under the CC BY 4.0 license. Check the &lt;a href="LICENSE-docs"&gt;LICENSE-docs file&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/libuv/help"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://groups.google.com/group/libuv" rel="nofollow"&gt;Mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://webchat.freenode.net?channels=libuv&amp;amp;uio=d4" rel="nofollow"&gt;IRC chatroom (#libuv@irc.freenode.org)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-official-documentation" class="anchor" aria-hidden="true" href="#official-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official documentation&lt;/h3&gt;
&lt;p&gt;Located in the docs/ subdirectory. It uses the &lt;a href="http://sphinx-doc.org/" rel="nofollow"&gt;Sphinx&lt;/a&gt;
framework, which makes it possible to build the documentation in multiple
formats.&lt;/p&gt;
&lt;p&gt;Show different supported building options:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make &lt;span class="pl-c1"&gt;help&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as HTML:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make html&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as HTML and live reload it when it changes (this requires
sphinx-autobuild to be installed and is only supported on Unix):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make livehtml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as man pages:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make man&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as ePub:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make epub&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: Windows users need to use make.bat instead of plain 'make'.&lt;/p&gt;
&lt;p&gt;Documentation can be browsed online &lt;a href="http://docs.libuv.org" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/libuv/libuv/tree/master/test"&gt;tests and benchmarks&lt;/a&gt;
also serve as API specification and usage examples.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other-resources" class="anchor" aria-hidden="true" href="#other-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=nGn60vDSxQ4" rel="nofollow"&gt;LXJS 2012 talk&lt;/a&gt;
— High-level introductory talk about libuv.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thlorenz/libuv-dox"&gt;libuv-dox&lt;/a&gt;
— Documenting types and methods of libuv, mostly by reading uv.h.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thlorenz/learnuv"&gt;learnuv&lt;/a&gt;
— Learn uv for fun and profit, a self guided workshop to libuv.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These resources are not handled by libuv maintainers and might be out of
date. Please verify it before opening new issues.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-downloading" class="anchor" aria-hidden="true" href="#downloading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading&lt;/h2&gt;
&lt;p&gt;libuv can be downloaded either from the
&lt;a href="https://github.com/libuv/libuv"&gt;GitHub repository&lt;/a&gt;
or from the &lt;a href="http://dist.libuv.org/dist/" rel="nofollow"&gt;downloads site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before verifying the git tags or signature files, importing the relevant keys
is necessary. Key IDs are listed in the
&lt;a href="https://github.com/libuv/libuv/blob/master/MAINTAINERS.md"&gt;MAINTAINERS&lt;/a&gt;
file, but are also available as git blob objects for easier use.&lt;/p&gt;
&lt;p&gt;Importing a key the usual way:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gpg --keyserver pool.sks-keyservers.net --recv-keys AE9BC059&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Importing a key from a git blob object:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git show pubkey-saghul &lt;span class="pl-k"&gt;|&lt;/span&gt; gpg --import&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-verifying-releases" class="anchor" aria-hidden="true" href="#verifying-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verifying releases&lt;/h3&gt;
&lt;p&gt;Git tags are signed with the developer's key, they can be verified as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git verify-tag v1.6.1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starting with libuv 1.7.0, the tarballs stored in the
&lt;a href="http://dist.libuv.org/dist/" rel="nofollow"&gt;downloads site&lt;/a&gt; are signed and an accompanying
signature file sit alongside each. Once both the release tarball and the
signature file are downloaded, the file can be verified as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gpg --verify libuv-1.7.0.tar.gz.sign&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-build-instructions" class="anchor" aria-hidden="true" href="#build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Instructions&lt;/h2&gt;
&lt;p&gt;For GCC there are two build methods: via autotools or via &lt;a href="http://code.google.com/p/gyp/" rel="nofollow"&gt;GYP&lt;/a&gt;.
GYP is a meta-build system which can generate MSVS, Makefile, and XCode
backends. It is best used for integration into other projects.&lt;/p&gt;
&lt;p&gt;To build with autotools:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ sh autogen.sh
$ ./configure
$ make
$ make check
$ make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build with &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mkdir -p out/cmake &lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; out/cmake   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; create build directory&lt;/span&gt;
$ cmake ../.. -DBUILD_TESTING=ON      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; generate project with test&lt;/span&gt;
$ cmake --build &lt;span class="pl-c1"&gt;.&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; build&lt;/span&gt;
$ ctest -C Debug --output-on-failure  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run tests&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or manually run tests:&lt;/span&gt;
$ ./out/cmake/uv_run_tests    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; shared library build&lt;/span&gt;
$ ./out/cmake/uv_run_tests_a  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; static library build&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build with GYP, first run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://chromium.googlesource.com/external/gyp build/gyp&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/" rel="nofollow"&gt;Python 2.6 or 2.7&lt;/a&gt; as it is required
by &lt;a href="http://code.google.com/p/gyp/" rel="nofollow"&gt;GYP&lt;/a&gt;.
If python is not in your path, set the environment variable &lt;code&gt;PYTHON&lt;/code&gt; to its
location. For example: &lt;code&gt;set PYTHON=C:\Python27\python.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;One of:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://visualstudio.microsoft.com/visual-cpp-build-tools/" rel="nofollow"&gt;Visual C++ Build Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visualstudio.com/vs/older-downloads/" rel="nofollow"&gt;Visual Studio 2015 Update 3&lt;/a&gt;, all editions
including the Community edition (remember to select
"Common Tools for Visual C++ 2015" feature during installation).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visualstudio.com/downloads/" rel="nofollow"&gt;Visual Studio 2017&lt;/a&gt;, any edition (including the Build Tools SKU).
&lt;strong&gt;Required Components:&lt;/strong&gt; "MSbuild", "VC++ 2017 v141 toolset" and one of the
Windows SDKs (10 or 8.1).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Basic Unix tools required for some tests,
&lt;a href="http://git-scm.com/download/win" rel="nofollow"&gt;Git for Windows&lt;/a&gt; includes Git Bash
and tools which can be included in the global &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To build, launch a git shell (e.g. Cmd or PowerShell), run &lt;code&gt;vcbuild.bat&lt;/code&gt;
(to build with VS2017 you need to explicitly add a &lt;code&gt;vs2017&lt;/code&gt; argument),
which will checkout the GYP code into &lt;code&gt;build/gyp&lt;/code&gt;, generate &lt;code&gt;uv.sln&lt;/code&gt;
as well as the necesery related project files, and start building.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild vs2017&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the tests:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To see all the options that could passed to &lt;code&gt;vcbuild&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild &lt;span class="pl-c1"&gt;help&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;vcbuild.bat [debug/release] [test/bench] [clean] [noprojgen] [nobuild] [vs2017] [x86/x64] [static/shared]&lt;/span&gt;
&lt;span class="pl-c1"&gt;Examples:&lt;/span&gt;
&lt;span class="pl-c1"&gt;  vcbuild.bat              : builds debug build&lt;/span&gt;
&lt;span class="pl-c1"&gt;  vcbuild.bat test         : builds debug build and runs tests&lt;/span&gt;
&lt;span class="pl-c1"&gt;  vcbuild.bat release bench: builds release build and runs benchmarks&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-unix" class="anchor" aria-hidden="true" href="#unix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unix&lt;/h3&gt;
&lt;p&gt;For Debug builds (recommended) run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f make
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Release builds run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f make
$ BUILDTYPE=Release make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;./gyp_uv.py -f make -Dtarget_arch=x32&lt;/code&gt; to build &lt;a href="https://en.wikipedia.org/wiki/X32_ABI" rel="nofollow"&gt;x32&lt;/a&gt; binaries.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-os-x" class="anchor" aria-hidden="true" href="#os-x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OS X&lt;/h3&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f xcode
$ xcodebuild -ARCHS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x86_64&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; -project out/uv.xcodeproj -configuration Release -alltargets&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using Homebrew:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew install --HEAD libuv&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note to OS X users:&lt;/p&gt;
&lt;p&gt;Make sure that you specify the architecture you wish to build for in the
"ARCHS" flag. You can specify more than one by delimiting with a space
(e.g. "x86_64 i386").&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h3&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;p&gt;For arm&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-arm NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for arm64&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-arm64 NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for x86&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-x86 NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for x86_64&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-x86_64 NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default API level is 24, but a different one can be selected as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-arm &lt;span class="pl-k"&gt;~&lt;/span&gt;/android-ndk-r15b gyp 21
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note for UNIX users: compile your project with &lt;code&gt;-D_LARGEFILE_SOURCE&lt;/code&gt; and
&lt;code&gt;-D_FILE_OFFSET_BITS=64&lt;/code&gt;. GYP builds take care of that automatically.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-ninja" class="anchor" aria-hidden="true" href="#using-ninja"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Ninja&lt;/h3&gt;
&lt;p&gt;To use ninja for build on ninja supported platforms, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f ninja
$ ninja -C out/Debug     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;for debug build OR&lt;/span&gt;
$ ninja -C out/Release&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h4&gt;
&lt;p&gt;Build (includes tests):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f make
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-run-all-tests" class="anchor" aria-hidden="true" href="#run-all-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run all tests&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./out/Debug/run-tests&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-run-one-test" class="anchor" aria-hidden="true" href="#run-one-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run one test&lt;/h4&gt;
&lt;p&gt;The list of all tests is in &lt;code&gt;test/test-list.h&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This invocation will cause the &lt;code&gt;run-tests&lt;/code&gt; driver to fork and execute &lt;code&gt;TEST_NAME&lt;/code&gt; in a child process:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./out/Debug/run-tests TEST_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This invocation will cause the &lt;code&gt;run-tests&lt;/code&gt; driver to execute the test within the &lt;code&gt;run-tests&lt;/code&gt; process:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./out/Debug/run-tests TEST_NAME TEST_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-debugging-tools" class="anchor" aria-hidden="true" href="#debugging-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging tools&lt;/h4&gt;
&lt;p&gt;When running the test from within the &lt;code&gt;run-tests&lt;/code&gt; process (&lt;code&gt;run-tests TEST_NAME TEST_NAME&lt;/code&gt;), tools like gdb and valgrind work normally.
When running the test from a child of the &lt;code&gt;run-tests&lt;/code&gt; process (&lt;code&gt;run-tests TEST_NAME&lt;/code&gt;), use these tools in a fork-aware manner.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-fork-aware-gdb" class="anchor" aria-hidden="true" href="#fork-aware-gdb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fork-aware gdb&lt;/h5&gt;
&lt;p&gt;Use the &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/Forks.html" rel="nofollow"&gt;follow-fork-mode&lt;/a&gt; setting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gdb --args out/Debug/run-tests TEST_NAME

(gdb) set follow-fork-mode child
...
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-fork-aware-valgrind" class="anchor" aria-hidden="true" href="#fork-aware-valgrind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fork-aware valgrind&lt;/h5&gt;
&lt;p&gt;Use the &lt;code&gt;--trace-children=yes&lt;/code&gt; parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ valgrind --trace-children=yes -v --tool=memcheck --leak-check=full --track-origins=yes --leak-resolution=high --show-reachable=yes --log-file=memcheck-%p.log out/Debug/run-tests TEST_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-running-benchmarks" class="anchor" aria-hidden="true" href="#running-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running benchmarks&lt;/h3&gt;
&lt;p&gt;See the section on running tests.
The benchmark driver is &lt;code&gt;out/Debug/run-benchmarks&lt;/code&gt; and the benchmarks are listed in &lt;code&gt;test/benchmark-list.h&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Platforms&lt;/h2&gt;
&lt;p&gt;Check the &lt;a href="SUPPORTED_PLATFORMS.md"&gt;SUPPORTED_PLATFORMS file&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-aix-notes" class="anchor" aria-hidden="true" href="#aix-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AIX Notes&lt;/h3&gt;
&lt;p&gt;AIX compilation using IBM XL C/C++ requires version 12.1 or greater.&lt;/p&gt;
&lt;p&gt;AIX support for filesystem events requires the non-default IBM &lt;code&gt;bos.ahafs&lt;/code&gt;
package to be installed.  This package provides the AIX Event Infrastructure
that is detected by &lt;code&gt;autoconf&lt;/code&gt;.
&lt;a href="http://www.ibm.com/developerworks/aix/library/au-aix_event_infrastructure/" rel="nofollow"&gt;IBM documentation&lt;/a&gt;
describes the package in more detail.&lt;/p&gt;
&lt;p&gt;AIX support for filesystem events is not compiled when building with &lt;code&gt;gyp&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-zos-notes" class="anchor" aria-hidden="true" href="#zos-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;z/OS Notes&lt;/h3&gt;
&lt;p&gt;z/OS creates System V semaphores and message queues. These persist on the system
after the process terminates unless the event loop is closed.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;ipcrm&lt;/code&gt; command to manually clear up System V resources.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-patches" class="anchor" aria-hidden="true" href="#patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Patches&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/libuv/libuv/blob/master/CONTRIBUTING.md"&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>libuv</author><guid isPermaLink="false">https://github.com/libuv/libuv</guid><pubDate>Thu, 26 Dec 2019 00:14:00 GMT</pubDate></item><item><title>ShadowsocksR-Live/shadowsocksr-native #15 in C, This month</title><link>https://github.com/ShadowsocksR-Live/shadowsocksr-native</link><description>&lt;p&gt;&lt;i&gt;从容翻越党国敏感日 ShadowsocksR (SSR) native implementation for all platforms, GFW terminator&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/30504070?s=200&amp;amp;v=4"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/30504070?s=200&amp;amp;v=4" alt="shadowsocksr-native" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;&lt;a id="user-content-shadowsocksr-native" class="anchor" aria-hidden="true" href="#shadowsocksr-native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ShadowsocksR-native&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/ShadowsocksR-Live/Lobby" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/61dd9184ff6b7a8a36266b8b2d00b8b3de299ce7/68747470733a2f2f63646e30332e6769747465722e696d2f5f732f393137376230322f696d616765732f66617669636f6e2d726561642e69636f" alt="Join the chat at https://gitter.im/ShadowsocksR-Live/" data-canonical-src="https://cdn03.gitter.im/_s/9177b02/images/favicon-read.ico" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ShadowsocksR-Live/shadowsocksr-native/wiki"&gt;新特性: GFW 终结者 SSRoT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://palitechsociety.blogspot.com/2019/08/shadowsocksr-over-tls-ssrot-server.html" rel="nofollow"&gt;New feature: GFW terminator SSRoT English tutorial&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-index" class="anchor" aria-hidden="true" href="#index"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Index&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#protocols--obfuscators"&gt;Protocols &amp;amp; obfuscators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build"&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sample-configure-file"&gt;Sample configure file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cmake"&gt;cmake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy-server"&gt;Deploy server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-intro" class="anchor" aria-hidden="true" href="#intro"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intro&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ShadowsocksR-native&lt;/strong&gt; is a lightweight secured SOCKS5 proxy for embedded devices and low-end boxes.
It's derived from &lt;a href="http://shadowsocks.org" rel="nofollow"&gt;Shadowsocks-libev&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is a port of &lt;a href="https://github.com/ShadowsocksR-Live/shadowsocksr"&gt;ShadowsocksR&lt;/a&gt;
created by &lt;a href="https://github.com/breakwa11"&gt;@breakwa11&lt;/a&gt;,
which is maintained by &lt;a href="https://github.com/ssrlive"&gt;@ssrlive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Current version: 0.4 | &lt;a href="debian/changelog"&gt;Changelog&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;ShadowsocksR-native is written in pure C and only depends on
&lt;a href="https://github.com/libuv/libuv"&gt;libuv&lt;/a&gt; ,
&lt;a href="https://github.com/ARMmbed/mbedtls"&gt;mbedTLS&lt;/a&gt; ,
&lt;a href="https://github.com/jedisct1/libsodium"&gt;libsodium&lt;/a&gt; and
&lt;a href="https://github.com/json-c/json-c"&gt;json-c&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In normal usage, the memory footprint is about 600KB and the CPU utilization is
no more than 5% on a low-end router (Buffalo WHR-G300N V2 with a 400MHz MIPS CPU,
32MB memory and 4MB flash).&lt;/p&gt;
&lt;p&gt;For a full list of feature comparison between different versions of shadowsocks,
refer to the &lt;a href="https://github.com/shadowsocksr-live/shadowsocksr-native/wiki/"&gt;Wiki page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-encrypto-method" class="anchor" aria-hidden="true" href="#encrypto-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Encrypto method&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rc4&lt;/td&gt;
&lt;td&gt;rc4-md5-6&lt;/td&gt;
&lt;td&gt;rc4-md5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aes-128-cfb&lt;/td&gt;
&lt;td&gt;aes-192-cfb&lt;/td&gt;
&lt;td&gt;aes-256-cfb&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aes-128-ctr&lt;/td&gt;
&lt;td&gt;aes-192-ctr&lt;/td&gt;
&lt;td&gt;aes-256-ctr&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;camellia-128-cfb&lt;/td&gt;
&lt;td&gt;camellia-192-cfb&lt;/td&gt;
&lt;td&gt;camellia-256-cfb&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bf-cfb&lt;/td&gt;
&lt;td&gt;cast5-cfb&lt;/td&gt;
&lt;td&gt;des-cfb&lt;/td&gt;
&lt;td&gt;idea-cfb&lt;/td&gt;
&lt;td&gt;rc2-cfb&lt;/td&gt;
&lt;td&gt;seed-cfb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;salsa20&lt;/td&gt;
&lt;td&gt;chacha20&lt;/td&gt;
&lt;td&gt;chacha20-ietf&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-protocols--obfuscators" class="anchor" aria-hidden="true" href="#protocols--obfuscators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protocols &amp;amp; obfuscators&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Protocols&lt;/th&gt;
&lt;th&gt;obfuscators&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;origin&lt;/td&gt;
&lt;td&gt;plain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_sha1_v4&lt;/td&gt;
&lt;td&gt;http_simple&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_aes128_sha1&lt;/td&gt;
&lt;td&gt;http_post&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_aes128_md5&lt;/td&gt;
&lt;td&gt;http_mix&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_chain_a&lt;/td&gt;
&lt;td&gt;tls1.2_ticket_auth&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_chain_b&lt;/td&gt;
&lt;td&gt;tls1.2_ticket_fastauth&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_chain_c/d/e/f&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;progress of data flow&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+-----------------------------------------------------------------------------+
|                +--------------------------------------------------------+   |
|                |               +------------------------------------+   |   |
|                |               |            +-------------------+   |   |   |
|  obfuscator    |   encryptor   |  protocol  |     user data     |   |   |   |
|   |            |       |       |      |     +-------------------+   |   |   |
|   |            |       |       +------+-----------------------------+   |   |
|   |            +-------+--------------+---------------------------------+   |
+---+--------------------+--------------+-------------------------------------+
    |                    |              |                                            
    +-- server_encode    +-- encrypt    +-- server_pre_encrypt       &amp;lt;&amp;lt;&amp;lt;=== user data
    |                    |              |                                            
    +-- server_decode    +-- decrypt    +-- server_post_decrypt      ===&amp;gt;&amp;gt;&amp;gt; user data
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-distribution-specific-guide" class="anchor" aria-hidden="true" href="#distribution-specific-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distribution-specific guide&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#debian--ubuntu"&gt;Debian &amp;amp; Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fedora--rhel"&gt;Fedora &amp;amp; RHEL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#centos"&gt;CentOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos"&gt;macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-debian--ubuntu" class="anchor" aria-hidden="true" href="#debian--ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debian &amp;amp; Ubuntu&lt;/h3&gt;
&lt;p&gt;For Unix-like systems, especially Debian-based systems,
e.g. Ubuntu, Debian or Linux Mint, you can build the binary like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Debian / Ubuntu&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; sudo su                       # using root account&lt;/span&gt;
sudo apt-get update -y
sudo apt-get upgrade -y
sudo apt-get install --no-install-recommends build-essential autoconf libtool asciidoc xmlto -y
sudo apt-get install git gcc g++ cmake automake -y
sudo apt-get -f install -y

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; cd /                          # switch to root directory&lt;/span&gt;
git clone https://github.com/ShadowsocksR-Live/shadowsocksr-native.git
mv shadowsocksr-native ssr-n  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rename shadowsocksr-native to ssr-n&lt;/span&gt;
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ssr-n                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; enter ssr-n directory. &lt;/span&gt;
git submodule update --init
git submodule foreach -q &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; build ShadowsocksR-native&lt;/span&gt;
mkdir build &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
cmake .. &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; make install&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; /bin/cp -rfa src/ssr-* /usr/bin&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The target binaries are &lt;code&gt;ssr-n/build/src/ssr-server&lt;/code&gt;, &lt;code&gt;ssr-n/build/src/ssr-client&lt;/code&gt; and &lt;code&gt;ssr-n/build/src/ssr-local&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-centos" class="anchor" aria-hidden="true" href="#centos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CentOS&lt;/h3&gt;
&lt;p&gt;CentOS 7 only. we don't support CentOS 6.x, it's too old.&lt;/p&gt;
&lt;p&gt;Before build &lt;code&gt;ssr-Native&lt;/code&gt;, we must install &lt;code&gt;cmake&lt;/code&gt; 3.x first. following &lt;a href="#cmake"&gt;this&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; CentOS / Fedora / RHEL&lt;/span&gt;
sudo su
yum install wget git gcc gcc-c++ autoconf automake libtool make asciidoc xmlto -y
curl https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh -o a.sh
sh a.sh --prefix=/usr/ --exclude-subdir &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf a.sh
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /
git clone https://github.com/ShadowsocksR-Live/shadowsocksr-native.git
mv shadowsocksr-native ssr-n
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ssr-n
git submodule update --init
git submodule foreach -q &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

cmake &lt;span class="pl-c1"&gt;.&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; make install&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; /bin/cp -rfa src/ssr-* /usr/bin&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The target binaries are &lt;code&gt;ssr-n/src/ssr-server&lt;/code&gt;, &lt;code&gt;ssr-n/src/ssr-client&lt;/code&gt; and &lt;code&gt;ssr-n/src/ssr-local&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h3&gt;
&lt;p&gt;For macOS, we must download/install/run &lt;a href="https://developer.apple.com/xcode/" rel="nofollow"&gt;Xcode&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;Then use &lt;a href="http://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt; to install or build.&lt;/p&gt;
&lt;p&gt;Install Homebrew and tools:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ruby -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
brew install git cmake automake libtool
brew upgrade git cmake automake libtool&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now get source code and build it.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/ShadowsocksR-Live/shadowsocksr-native.git
mv shadowsocksr-native ssr-n
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ssr-n
git submodule update --init
git submodule foreach -q &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

cmake &lt;span class="pl-c1"&gt;.&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The target binaries are &lt;code&gt;ssr-n/src/ssr-server&lt;/code&gt;, &lt;code&gt;ssr-n/src/ssr-client&lt;/code&gt; and &lt;code&gt;ssr-n/src/ssr-local&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;For Windows, chekout the project using the following commands then open win32/ssr-native.sln with Visual Studio 2010. Enjoy it!&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/ShadowsocksR-Live/shadowsocksr-native.git 
git submodule update --init
git submodule foreach -q &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;For a detailed and complete list of all supported arguments, you may refer to the
man pages of the applications, respectively.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    ssr-[client|local|server]

       [-c &amp;lt;config_file&amp;gt;]         The path to config file

       [-d]                       Run in background as a daemon.

       [-h]                       Show this help message.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-sample-configure-file" class="anchor" aria-hidden="true" href="#sample-configure-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample configure file&lt;/h2&gt;
&lt;p&gt;config.json&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;method&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;aes-128-ctr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;protocol&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;auth_aes128_md5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;protocol_param&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;obfs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tls1.2_ticket_auth&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;obfs_param&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;udp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;timeout&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;300&lt;/span&gt;,

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server_settings&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;listen_address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.0.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;listen_port&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;12475&lt;/span&gt;
    },

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;client_settings&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12.34.56.78&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server_port&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;12475&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;listen_address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.0.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;listen_port&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1080&lt;/span&gt;
    },

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;over_tls_settings&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;enable&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server_domain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;goodsitesample.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;path&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/udg151df/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root_cert_file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cmake" class="anchor" aria-hidden="true" href="#cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cmake&lt;/h2&gt;
&lt;p&gt;In the CentOS 7, the cmake version is too old to work with ShadowsocksR-Native.
So we must install it by ourselves.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo su
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /
curl https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.sh -o a.sh
sh a.sh  --prefix=/usr/ --exclude-subdir
rm -rf a.sh
cmake --version&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the &lt;code&gt;cmake --version&lt;/code&gt; command will output message likes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake version 3.14.5
CMake suite maintained and supported by Kitware (kitware.com/cmake).
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-deploy-server" class="anchor" aria-hidden="true" href="#deploy-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deploy server&lt;/h2&gt;
&lt;p&gt;Supporting &lt;code&gt;CentOS 7&lt;/code&gt; / &lt;code&gt;Debian&lt;/code&gt; / &lt;code&gt;Ubuntu&lt;/code&gt; with the following commands&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo su
wget --no-check-certificate https://raw.githubusercontent.com/ShadowsocksR-Live/shadowsocksr-native/master/install/ssrn-install.sh
chmod +x ssrn-install.sh
./ssrn-install.sh 2&amp;gt;&amp;amp;1 | tee ssr-n.log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After installation, we can view the status with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl status ssr-native.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And we can view or edit the configuration with &lt;code&gt;cat&lt;/code&gt; or &lt;code&gt;vi&lt;/code&gt; in &lt;code&gt;root&lt;/code&gt; privilege&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat /etc/ssr-native/config.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After we changed the server configuration, we must restart the service to make the changes take effect.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl restart ssr-native.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To stop the server, please run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl stop ssr-native.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To uninstall the server, use the following command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./ssrn-install.sh uninstall
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ShadowsocksR-Live</author><guid isPermaLink="false">https://github.com/ShadowsocksR-Live/shadowsocksr-native</guid><pubDate>Thu, 26 Dec 2019 00:15:00 GMT</pubDate></item><item><title>processhacker/processhacker #16 in C, This month</title><link>https://github.com/processhacker/processhacker</link><description>&lt;p&gt;&lt;i&gt;A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/processhacker/processhacker" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc6eb10cb9bb28d0f5d6eb44424372a4201f1a8e/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f70726f636573736861636b65722f70726f636573736861636b65722e7376673f7374796c653d666f722d7468652d6261646765" alt="Build status" data-canonical-src="https://img.shields.io/appveyor/ci/processhacker/processhacker.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/processhacker/processhacker/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/89d3aca771fef90704d799059981f2b44c6245fe/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f70726f636573736861636b65722f70726f636573736861636b65722e7376673f7374796c653d666f722d7468652d626164676526636f6c6f723d626c7565" alt="Build contributors" data-canonical-src="https://img.shields.io/github/contributors/processhacker/processhacker.svg?style=for-the-badge&amp;amp;color=blue" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c58fa6cdb455908295f111bcac700294e07f292/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c76332d626c75652e7376673f7374796c653d666f722d7468652d6261646765" alt="Licence" data-canonical-src="https://img.shields.io/badge/license-GPLv3-blue.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/processhacker/processhacker/releases"&gt;&lt;img src="https://camo.githubusercontent.com/5f606117e8ed1aaaee5478d64bf78408748b302c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f70726f636573736861636b65722f70726f636573736861636b65722f746f74616c2e7376673f7374796c653d666f722d7468652d626164676526636f6c6f723d726564" alt="Github stats" data-canonical-src="https://img.shields.io/github/downloads/processhacker/processhacker/total.svg?style=for-the-badge&amp;amp;color=red" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://sourceforge.net/projects/processhacker/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc4ac6d1eeac470a9680fef36652914199a9e3a7/68747470733a2f2f696d672e736869656c64732e696f2f736f75726365666f7267652f64742f70726f636573736861636b65722e7376673f7374796c653d666f722d7468652d626164676526636f6c6f723d726564" alt="SourceForge stats" data-canonical-src="https://img.shields.io/sourceforge/dt/processhacker.svg?style=for-the-badge&amp;amp;color=red" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/processhacker2/processhacker/master/ProcessHacker/resources/ProcessHacker.png"&gt;&lt;img src="https://raw.githubusercontent.com/processhacker2/processhacker/master/ProcessHacker/resources/ProcessHacker.png" alt="Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-process-hacker" class="anchor" aria-hidden="true" href="#process-hacker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Process Hacker&lt;/h2&gt;
&lt;p&gt;A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://processhacker.sourceforge.io/" rel="nofollow"&gt;Official Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wj32.org/processhacker/nightly.php" rel="nofollow"&gt;Nightly Builds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System requirements&lt;/h2&gt;
&lt;p&gt;Windows 7 or higher, 32-bit or 64-bit.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A detailed overview of system activity with highlighting.&lt;/li&gt;
&lt;li&gt;Graphs and statistics allow you quickly to track down resource hogs and runaway processes.&lt;/li&gt;
&lt;li&gt;Can't edit or delete a file? Discover which processes are using that file.&lt;/li&gt;
&lt;li&gt;See what programs have active network connections, and close them if necessary.&lt;/li&gt;
&lt;li&gt;Get real-time information on disk access.&lt;/li&gt;
&lt;li&gt;View detailed stack traces with kernel-mode, WOW64 and .NET support.&lt;/li&gt;
&lt;li&gt;Go beyond services.msc: create, edit and control services.&lt;/li&gt;
&lt;li&gt;Small, portable and no installation required.&lt;/li&gt;
&lt;li&gt;100% &lt;a href="http://www.gnu.org/philosophy/free-sw.en.html" rel="nofollow"&gt;Free Software&lt;/a&gt; (&lt;a href="http://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;GPL v3&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-project" class="anchor" aria-hidden="true" href="#building-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the project&lt;/h2&gt;
&lt;p&gt;Requires Visual Studio (2017 or later).&lt;/p&gt;
&lt;p&gt;Execute &lt;code&gt;build_release.cmd&lt;/code&gt; located in the &lt;code&gt;build&lt;/code&gt; directory to compile the project or load the &lt;code&gt;ProcessHacker.sln&lt;/code&gt; and &lt;code&gt;Plugins.sln&lt;/code&gt; solutions if you prefer building the project using Visual Studio.&lt;/p&gt;
&lt;p&gt;You can download the free &lt;a href="https://www.visualstudio.com/vs/community/" rel="nofollow"&gt;Visual Studio Community Edition&lt;/a&gt;
to build, run or develop Process Hacker.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-information" class="anchor" aria-hidden="true" href="#additional-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional information&lt;/h2&gt;
&lt;p&gt;You cannot run the 32-bit version of Process Hacker on a
64-bit system and expect it to work correctly, unlike other programs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-enhancementsbugs" class="anchor" aria-hidden="true" href="#enhancementsbugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enhancements/Bugs&lt;/h2&gt;
&lt;p&gt;Please use the &lt;a href="https://github.com/processhacker2/processhacker/issues"&gt;GitHub issue tracker&lt;/a&gt;
for reporting problems or suggesting new features.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-settings" class="anchor" aria-hidden="true" href="#settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Settings&lt;/h2&gt;
&lt;p&gt;If you are running Process Hacker from a USB drive, you may want to
save Process Hacker's settings there as well. To do this, create a
blank file named "ProcessHacker.exe.settings.xml" in the same
directory as ProcessHacker.exe. You can do this using Windows Explorer:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure "Hide extensions for known file types" is unticked in
Tools &amp;gt; Folder options &amp;gt; View.&lt;/li&gt;
&lt;li&gt;Right-click in the folder and choose New &amp;gt; Text Document.&lt;/li&gt;
&lt;li&gt;Rename the file to ProcessHacker.exe.settings.xml (delete the ".txt"
extension).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Plugins can be configured from Hacker &amp;gt; Plugins.&lt;/p&gt;
&lt;p&gt;If you experience any crashes involving plugins, make sure they
are up to date.&lt;/p&gt;
&lt;p&gt;Disk and Network information provided by the ExtendedTools plugin is
only available when running Process Hacker with administrative
rights.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-kprocesshacker" class="anchor" aria-hidden="true" href="#kprocesshacker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KProcessHacker&lt;/h2&gt;
&lt;p&gt;Process Hacker uses a kernel-mode driver, KProcessHacker, to
assist with certain functionality. This includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Capturing kernel-mode stack traces&lt;/li&gt;
&lt;li&gt;More efficiently enumerating process handles&lt;/li&gt;
&lt;li&gt;Retrieving names for file handles&lt;/li&gt;
&lt;li&gt;Retrieving names for EtwRegistration objects&lt;/li&gt;
&lt;li&gt;Setting handle attributes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that by default, KProcessHacker only allows connections from
processes with administrative privileges (SeDebugPrivilege). To allow Process Hacker
to show details for all processes when it is not running as administrator:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In Registry Editor, navigate to:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\KProcessHacker3&lt;/li&gt;
&lt;li&gt;Under this key, create a key named Parameters if it does not exist.&lt;/li&gt;
&lt;li&gt;Create a DWORD value named SecurityLevel and set it to 2. If you are
not using an official build, you may need to set it to 0 instead.&lt;/li&gt;
&lt;li&gt;Restart the KProcessHacker3 service (sc stop KProcessHacker3,
sc start KProcessHacker3).&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>processhacker</author><guid isPermaLink="false">https://github.com/processhacker/processhacker</guid><pubDate>Thu, 26 Dec 2019 00:16:00 GMT</pubDate></item><item><title>videolan/vlc #17 in C, This month</title><link>https://github.com/videolan/vlc</link><description>&lt;p&gt;&lt;i&gt;VLC media player - All pull requests are ignored, please follow https://wiki.videolan.org/Sending_Patches_VLC/&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;README for the VLC media player
===============================

VLC is a popular libre and open source media player and multimedia engine,
used by a large number of individuals, professionals, companies and
institutions. Using open source technologies and libraries, VLC has been
ported to most computing platforms, including GNU/Linux, Windows, Mac OS X,
BSD, iOS and Android.
VLC can play most multimedia files, discs, streams, allows playback from
devices, and is able to convert to or stream in various formats.
The VideoLAN project was started at the university École Centrale Paris who
relicensed VLC under the GPLv2 license in February 2001. Since then, VLC has
been downloaded close to one billion times.

Links:
======

The VLC web site  . . . . . &lt;a href="http://www.videolan.org/" rel="nofollow"&gt;http://www.videolan.org/&lt;/a&gt;
Support . . . . . . . . . . &lt;a href="http://www.videolan.org/support/" rel="nofollow"&gt;http://www.videolan.org/support/&lt;/a&gt;
Forums  . . . . . . . . . . &lt;a href="https://forum.videolan.org/" rel="nofollow"&gt;https://forum.videolan.org/&lt;/a&gt;
Wiki  . . . . . . . . . . . &lt;a href="https://wiki.videolan.org/" rel="nofollow"&gt;https://wiki.videolan.org/&lt;/a&gt;
The Developers site . . . . &lt;a href="https://wiki.videolan.org/Developers_Corner" rel="nofollow"&gt;https://wiki.videolan.org/Developers_Corner&lt;/a&gt;
VLC hacking guide . . . . . &lt;a href="https://wiki.videolan.org/Hacker_Guide" rel="nofollow"&gt;https://wiki.videolan.org/Hacker_Guide&lt;/a&gt;
Bugtracker  . . . . . . . . &lt;a href="https://trac.videolan.org/vlc/" rel="nofollow"&gt;https://trac.videolan.org/vlc/&lt;/a&gt;
The VideoLAN web site . . . &lt;a href="http://www.videolan.org/" rel="nofollow"&gt;http://www.videolan.org/&lt;/a&gt;

Source Code Content:
===================
ABOUT-NLS          - Notes on the Free Translation Project.
AUTHORS            - VLC authors.
COPYING            - The GPL license.
COPYING.LIB        - The LGPL license.
INSTALL            - Installation and building instructions.
NEWS               - Important modifications between the releases.
README             - This file.
THANKS             - VLC contributors.

bin/               - VLC binaries.
bindings/          - libVLC bindings to other languages.
compat/            - compatibility library for operating systems missing
                     essential functionalities.
contrib/           - Facilities for retrieving external libraries and building
                     them for systems that don't have the right versions.
doc/               - Miscellaneous documentation.
extras/analyser    - Code analyser and editor specific files.
extras/buildsystem - different buildsystems specific files.
extras/misc        - Files that don't fit in the other extras/ categories.
extras/package     - VLC packaging specific files such as spec files.
extras/tools/      - Facilities for retrieving external building tools needed
                     for systems that don't have the right versions.
include/           - Header files.
lib/               - libVLC source code.
modules/           - VLC plugins and modules. Most of the code is here.
po/                - VLC translations.
share/             - Common Resources files.
src/               - libvlccore source code.
test/              - testing system.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>videolan</author><guid isPermaLink="false">https://github.com/videolan/vlc</guid><pubDate>Thu, 26 Dec 2019 00:17:00 GMT</pubDate></item><item><title>openresty/lua-nginx-module #18 in C, This month</title><link>https://github.com/openresty/lua-nginx-module</link><description>&lt;p&gt;&lt;i&gt;Embed the Power of Lua into NGINX HTTP servers&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-name" class="anchor" aria-hidden="true" href="#name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Name&lt;/h1&gt;
&lt;p&gt;ngx_http_lua_module - Embed the power of Lua into Nginx HTTP Servers.&lt;/p&gt;
&lt;p&gt;This module is a core component of &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;. If you are using this module,
then you are essentially using OpenResty.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This module is not distributed with the Nginx source.&lt;/em&gt; See
&lt;a href="#installation"&gt;the installation instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#name"&gt;Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#status"&gt;Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#version"&gt;Version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#synopsis"&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#description"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#typical-uses"&gt;Typical Uses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-compatibility"&gt;Nginx Compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#building-as-a-dynamic-module"&gt;Building as a dynamic module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c-macro-configurations"&gt;C Macro Configurations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#english-mailing-list"&gt;English Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chinese-mailing-list"&gt;Chinese Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-repository"&gt;Code Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bugs-and-patches"&gt;Bugs and Patches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-environment-variable-support"&gt;System Environment Variable Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-10-support"&gt;HTTP 1.0 support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#statically-linking-pure-lua-modules"&gt;Statically Linking Pure Lua Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-sharing-within-an-nginx-worker"&gt;Data Sharing within an Nginx Worker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#known-issues"&gt;Known Issues&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tcp-socket-connect-operation-issues"&gt;TCP socket connect operation issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua-coroutine-yieldingresuming"&gt;Lua Coroutine Yielding/Resuming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua-variable-scope"&gt;Lua Variable Scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;Locations Configured by Subrequest Directives of Other Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cosockets-not-available-everywhere"&gt;Cosockets Not Available Everywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#special-escaping-sequences"&gt;Special Escaping Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mixing-with-ssi-not-supported"&gt;Mixing with SSI Not Supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spdy-mode-not-fully-supported"&gt;SPDY Mode Not Fully Supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#missing-data-on-short-circuited-requests"&gt;Missing data on short circuited requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changes"&gt;Changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#test-suite"&gt;Test Suite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copyright-and-license"&gt;Copyright and License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#see-also"&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#directives"&gt;Directives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#obsolete-sections"&gt;Obsolete Sections&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#special-pcre-sequences"&gt;Special PCRE Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lualuajit-bytecode-support"&gt;Lua/LuaJIT bytecode support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h1&gt;
&lt;p&gt;Production ready.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-version" class="anchor" aria-hidden="true" href="#version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version&lt;/h1&gt;
&lt;p&gt;This document describes ngx_lua
&lt;a href="https://github.com/openresty/lua-nginx-module/tags"&gt;v0.10.16&lt;/a&gt;, which is not
released yet.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Synopsis&lt;/h1&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# set search paths for pure Lua external libraries (';;' is the default path):&lt;/span&gt;
 &lt;span class="pl-k"&gt;lua_package_path&lt;/span&gt; &lt;span class="pl-s"&gt;'/foo/bar/?.lua;/blah/?.lua;;'&lt;/span&gt;;

 &lt;span class="pl-c"&gt;# set search paths for Lua external libraries written in C (can also use ';;'):&lt;/span&gt;
 &lt;span class="pl-k"&gt;lua_package_cpath&lt;/span&gt; &lt;span class="pl-s"&gt;'/bar/baz/?.so;/blah/blah/?.so;;'&lt;/span&gt;;

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua_content &lt;/span&gt;{
         &lt;span class="pl-c"&gt;# MIME type determined by default_type:&lt;/span&gt;
         &lt;span class="pl-k"&gt;default_type&lt;/span&gt; &lt;span class="pl-s"&gt;'text/plain'&lt;/span&gt;;

         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.say('Hello,world!')
         }
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/nginx_var &lt;/span&gt;{
         &lt;span class="pl-c"&gt;# MIME type determined by default_type:&lt;/span&gt;
         &lt;span class="pl-k"&gt;default_type&lt;/span&gt; &lt;span class="pl-s"&gt;'text/plain'&lt;/span&gt;;

         &lt;span class="pl-c"&gt;# try access /nginx_var?a=hello,world&lt;/span&gt;
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.say(ngx.var.arg_a)
         }
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /request_body &lt;/span&gt;{
         &lt;span class="pl-k"&gt;client_max_body_size&lt;/span&gt; &lt;span class="pl-c1"&gt;50k&lt;/span&gt;;
         &lt;span class="pl-k"&gt;client_body_buffer_size&lt;/span&gt; &lt;span class="pl-c1"&gt;50k&lt;/span&gt;;

         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.req.read_body()  -- &lt;span class="pl-k"&gt;explicitly&lt;/span&gt; read the req body
             &lt;span class="pl-k"&gt;local&lt;/span&gt; data = ngx.req.get_body_data()
             &lt;span class="pl-k"&gt;if&lt;/span&gt; data then
                 ngx.say("&lt;span class="pl-k"&gt;body&lt;/span&gt; data:&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.print(data)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 return&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             -- body may get buffered in a temp file:&lt;/span&gt;
&lt;span class="pl-s"&gt;             local file = ngx.req.get_body_file()&lt;/span&gt;
&lt;span class="pl-s"&gt;             if file then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;body is in file &lt;span class="pl-s"&gt;", file)&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;no body found&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     # transparent non-blocking I/O in Lua via subrequests&lt;/span&gt;
&lt;span class="pl-s"&gt;     # (well, a better way is to use cosockets)&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /lua {&lt;/span&gt;
&lt;span class="pl-s"&gt;         # MIME type determined by default_type:&lt;/span&gt;
&lt;span class="pl-s"&gt;         default_type 'text/plain';&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;             local res = ngx.location.capture("&lt;/span&gt;/some_other_location&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             if res then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;status: &lt;span class="pl-s"&gt;", res.status)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;body:&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /foo {&lt;/span&gt;
&lt;span class="pl-s"&gt;         rewrite_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;             res = ngx.location.capture("&lt;/span&gt;/memc&lt;span class="pl-s"&gt;",&lt;/span&gt;
&lt;span class="pl-s"&gt;                 { args = { cmd = "&lt;/span&gt;incr&lt;span class="pl-s"&gt;", key = ngx.var.uri } }&lt;/span&gt;
&lt;span class="pl-s"&gt;             )&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         proxy_pass http://blah.blah.com;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /mixed {&lt;/span&gt;
&lt;span class="pl-s"&gt;         rewrite_by_lua_file /path/to/rewrite.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;         access_by_lua_file /path/to/access.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_file /path/to/content.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     # use nginx var in code path&lt;/span&gt;
&lt;span class="pl-s"&gt;     # CAUTION: contents in nginx var must be carefully filtered,&lt;/span&gt;
&lt;span class="pl-s"&gt;     # otherwise there'll be great security risk!&lt;/span&gt;
&lt;span class="pl-s"&gt;     location ~ ^/app/([-_a-zA-Z0-9/]+) {&lt;/span&gt;
&lt;span class="pl-s"&gt;         set &lt;span class="pl-smi"&gt;$path&lt;/span&gt; &lt;span class="pl-smi"&gt;$1&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_file /path/to/lua/app/root/&lt;span class="pl-smi"&gt;$path&lt;/span&gt;.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location / {&lt;/span&gt;
&lt;span class="pl-s"&gt;        client_max_body_size 100k;&lt;/span&gt;
&lt;span class="pl-s"&gt;        client_body_buffer_size 100k;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        access_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- check the client IP address is in our black list&lt;/span&gt;
&lt;span class="pl-s"&gt;            if ngx.var.remote_addr == "&lt;/span&gt;132.5.72.3&lt;span class="pl-s"&gt;" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                ngx.exit(ngx.HTTP_FORBIDDEN)&lt;/span&gt;
&lt;span class="pl-s"&gt;            end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- check if the URI contains bad words&lt;/span&gt;
&lt;span class="pl-s"&gt;            if ngx.var.uri and&lt;/span&gt;
&lt;span class="pl-s"&gt;                   string.match(ngx.var.request_body, "&lt;/span&gt;evil&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;            then&lt;/span&gt;
&lt;span class="pl-s"&gt;                return ngx.redirect("&lt;/span&gt;/terms_of_use.html&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;            end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- tests passed&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        # proxy_pass/fastcgi_pass/etc settings&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h1&gt;
&lt;p&gt;This module embeds &lt;a href="https://luajit.org/luajit.html" rel="nofollow"&gt;LuaJIT 2.0/2.1&lt;/a&gt; into Nginx.
It is a core component of &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;. If you are using
this module, then you are essentially using OpenResty.&lt;/p&gt;
&lt;p&gt;Since version &lt;code&gt;v0.10.16&lt;/code&gt; of this module, the standard Lua
interpreter (also known as "PUC-Rio Lua") is not supported anymore. This
document interchangeably uses the terms "Lua" and "LuaJIT" to refer to the
LuaJIT interpreter.&lt;/p&gt;
&lt;p&gt;By leveraging Nginx's subrequests, this module allows the integration of the
powerful Lua threads (known as Lua "coroutines") into the Nginx event model.&lt;/p&gt;
&lt;p&gt;Unlike &lt;a href="https://httpd.apache.org/docs/trunk/mod/mod_lua.html" rel="nofollow"&gt;Apache's mod_lua&lt;/a&gt;
and &lt;a href="http://redmine.lighttpd.net/wiki/1/Docs:ModMagnet" rel="nofollow"&gt;Lighttpd's mod_magnet&lt;/a&gt;,
Lua code executed using this module can be &lt;em&gt;100% non-blocking&lt;/em&gt; on network
traffic as long as the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; provided by
this module is used to handle requests to upstream services such as MySQL,
PostgreSQL, Memcached, Redis, or upstream HTTP web services.&lt;/p&gt;
&lt;p&gt;At least the following Lua libraries and Nginx modules can be used with this
module:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-memcached"&gt;lua-resty-memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-mysql"&gt;lua-resty-mysql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-redis"&gt;lua-resty-redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-dns"&gt;lua-resty-dns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-upload"&gt;lua-resty-upload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lock"&gt;lua-resty-lock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cloudflare/lua-resty-logger-socket"&gt;lua-resty-logger-socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lrucache"&gt;lua-resty-lrucache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-string"&gt;lua-resty-string&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/memc-nginx-module"&gt;ngx_memc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_postgres"&gt;ngx_postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/redis2-nginx-module"&gt;ngx_redis2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.nginx.org/HttpRedisModule" rel="nofollow"&gt;ngx_redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_fastcgi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Almost any Nginx modules can be used with this ngx_lua module by means of
&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; or
&lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; but it is
recommended to use those &lt;code&gt;lua-resty-*&lt;/code&gt; libraries instead of creating
subrequests to access the Nginx upstream modules because the former is usually
much more flexible and memory-efficient.&lt;/p&gt;
&lt;p&gt;The Lua interpreter (also known as "Lua State" or "LuaJIT VM instance") is
shared across all the requests in a single Nginx worker process to minimize
memory use. Request contexts are segregated using lightweight Lua coroutines.&lt;/p&gt;
&lt;p&gt;Loaded Lua modules persist in the Nginx worker process level resulting in a
small memory footprint in Lua even when under heavy loads.&lt;/p&gt;
&lt;p&gt;This module is plugged into Nginx's "http" subsystem so it can only speaks
downstream communication protocols in the HTTP family (HTTP 0.9/1.0/1.1/2.0,
WebSockets, etc...).  If you want to do generic TCP communications with the
downstream clients, then you should use the
&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua&lt;/a&gt;
module instead, which offers a compatible Lua API.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-typical-uses" class="anchor" aria-hidden="true" href="#typical-uses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Typical Uses&lt;/h1&gt;
&lt;p&gt;Just to name a few:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mashup'ing and processing outputs of various Nginx upstream outputs (proxy, drizzle, postgres, redis, memcached, and etc) in Lua,&lt;/li&gt;
&lt;li&gt;doing arbitrarily complex access control and security checks in Lua before requests actually reach the upstream backends,&lt;/li&gt;
&lt;li&gt;manipulating response headers in an arbitrary way (by Lua)&lt;/li&gt;
&lt;li&gt;fetching backend information from external storage backends (like redis, memcached, mysql, postgresql) and use that information to choose which upstream backend to access on-the-fly,&lt;/li&gt;
&lt;li&gt;coding up arbitrarily complex web applications in a content handler using synchronous but still non-blocking access to the database backends and other storage,&lt;/li&gt;
&lt;li&gt;doing very complex URL dispatch in Lua at rewrite phase,&lt;/li&gt;
&lt;li&gt;using Lua to implement advanced caching mechanism for Nginx's subrequests and arbitrary locations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The possibilities are unlimited as the module allows bringing together various
elements within Nginx as well as exposing the power of the Lua language to the
user. The module provides the full flexibility of scripting while offering
performance levels comparable with native C language programs both in terms of
CPU time as well as memory footprint thanks to LuaJIT 2.x.&lt;/p&gt;
&lt;p&gt;Other scripting language implementations typically struggle to match this
performance level.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-nginx-compatibility" class="anchor" aria-hidden="true" href="#nginx-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx Compatibility&lt;/h1&gt;
&lt;p&gt;The latest version of this module is compatible with the following versions of Nginx:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.17.x  (last tested: 1.17.4)&lt;/li&gt;
&lt;li&gt;1.15.x  (last tested: 1.15.8)&lt;/li&gt;
&lt;li&gt;1.14.x&lt;/li&gt;
&lt;li&gt;1.13.x  (last tested: 1.13.6)&lt;/li&gt;
&lt;li&gt;1.12.x&lt;/li&gt;
&lt;li&gt;1.11.x  (last tested: 1.11.2)&lt;/li&gt;
&lt;li&gt;1.10.x&lt;/li&gt;
&lt;li&gt;1.9.x (last tested: 1.9.15)&lt;/li&gt;
&lt;li&gt;1.8.x&lt;/li&gt;
&lt;li&gt;1.7.x (last tested: 1.7.10)&lt;/li&gt;
&lt;li&gt;1.6.x&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nginx cores older than 1.6.0 (exclusive) are &lt;em&gt;not&lt;/em&gt; supported.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;It is &lt;em&gt;highly&lt;/em&gt; recommended to use &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty releases&lt;/a&gt;
which bundle Nginx, ngx_lua (this module), LuaJIT, as well as other powerful
companion Nginx modules and Lua libraries.&lt;/p&gt;
&lt;p&gt;It is discouraged to build this module with Nginx yourself since it is tricky
to set up exactly right.&lt;/p&gt;
&lt;p&gt;Note that Nginx, LuaJIT, and OpenSSL official releases have various limitations
and long standing bugs that can cause some of this module's features to be
disabled, not work properly, or run slower. Official OpenResty releases are
recommended because they bundle &lt;a href="https://github.com/openresty/luajit2"&gt;OpenResty's optimized LuaJIT 2.1 fork&lt;/a&gt; and
&lt;a href="https://github.com/openresty/openresty/tree/master/patches"&gt;Nginx/OpenSSL
patches&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, ngx_lua can be manually compiled into Nginx:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LuaJIT can be downloaded from the &lt;a href="https://github.com/openresty/luajit2/releases"&gt;latest release of OpenResty's LuaJIT fork&lt;/a&gt;. The official LuaJIT 2.x releases are also supported, although performance will be significantly lower for reasons elaborated above&lt;/li&gt;
&lt;li&gt;Download the latest version of the ngx_devel_kit (NDK) module &lt;a href="https://github.com/simplresty/ngx_devel_kit/tags"&gt;HERE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the latest version of ngx_lua &lt;a href="https://github.com/openresty/lua-nginx-module/tags"&gt;HERE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the latest supported version of Nginx &lt;a href="https://nginx.org/" rel="nofollow"&gt;HERE&lt;/a&gt; (See &lt;a href="#nginx-compatibility"&gt;Nginx Compatibility&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Build the source with this module:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; wget &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://nginx.org/download/nginx-1.13.6.tar.gz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
 tar -xzvf nginx-1.13.6.tar.gz
 &lt;span class="pl-c1"&gt;cd&lt;/span&gt; nginx-1.13.6/

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; tell nginx's build system where to find LuaJIT 2.0:&lt;/span&gt;
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_LIB=/path/to/luajit/lib
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_INC=/path/to/luajit/include/luajit-2.0

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; tell nginx's build system where to find LuaJIT 2.1:&lt;/span&gt;
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_LIB=/path/to/luajit/lib
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_INC=/path/to/luajit/include/luajit-2.1

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Here we assume Nginx is to be installed under /opt/nginx/.&lt;/span&gt;
 ./configure --prefix=/opt/nginx \
         --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Wl,-rpath,/path/to/luajit/lib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
         --add-module=/path/to/ngx_devel_kit \
         --add-module=/path/to/lua-nginx-module

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Note that you may also want to add `./configure` options which are used in your&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; current nginx build.&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; You can get usually those options using command nginx -V&lt;/span&gt;

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; you can change the parallism number 2 below to fit the number of spare CPU cores in your&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; machine.&lt;/span&gt;
 make -j2
 make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-as-a-dynamic-module" class="anchor" aria-hidden="true" href="#building-as-a-dynamic-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building as a dynamic module&lt;/h2&gt;
&lt;p&gt;Starting from NGINX 1.9.11, you can also compile this module as a dynamic module, by using the &lt;code&gt;--add-dynamic-module=PATH&lt;/code&gt; option instead of &lt;code&gt;--add-module=PATH&lt;/code&gt; on the
&lt;code&gt;./configure&lt;/code&gt; command line above. And then you can explicitly load the module in your &lt;code&gt;nginx.conf&lt;/code&gt; via the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#load_module" rel="nofollow"&gt;load_module&lt;/a&gt;
directive, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;load_module&lt;/span&gt; /path/to/modules/ndk_http_module.so;  &lt;span class="pl-c"&gt;# assuming NDK is built as a dynamic module too&lt;/span&gt;
 &lt;span class="pl-k"&gt;load_module&lt;/span&gt; /path/to/modules/ngx_http_lua_module.so;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-c-macro-configurations" class="anchor" aria-hidden="true" href="#c-macro-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C Macro Configurations&lt;/h2&gt;
&lt;p&gt;While building this module either via OpenResty or with the Nginx core, you can define the following C macros via the C compiler options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NGX_LUA_USE_ASSERT&lt;/code&gt;
When defined, will enable assertions in the ngx_lua C code base. Recommended for debugging or testing builds. It can introduce some (small) runtime overhead when enabled. This macro was first introduced in the &lt;code&gt;v0.9.10&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NGX_LUA_ABORT_AT_PANIC&lt;/code&gt;
When the LuaJIT VM panics, ngx_lua will instruct the current nginx worker process to quit gracefully by default. By specifying this C macro, ngx_lua will abort the current nginx worker process (which usually result in a core dump file) immediately. This option is useful for debugging VM panics. This option was first introduced in the &lt;code&gt;v0.9.8&lt;/code&gt; release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To enable one or more of these macros, just pass extra C compiler options to the &lt;code&gt;./configure&lt;/code&gt; script of either Nginx or OpenResty. For instance,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-cc-opt="-DNGX_LUA_USE_ASSERT -DNGX_LUA_ABORT_AT_PANIC"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-english-mailing-list" class="anchor" aria-hidden="true" href="#english-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;English Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty-en" rel="nofollow"&gt;openresty-en&lt;/a&gt; mailing list is for English speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-chinese-mailing-list" class="anchor" aria-hidden="true" href="#chinese-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chinese Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty" rel="nofollow"&gt;openresty&lt;/a&gt; mailing list is for Chinese speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-code-repository" class="anchor" aria-hidden="true" href="#code-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Repository&lt;/h1&gt;
&lt;p&gt;The code repository of this project is hosted on GitHub at
&lt;a href="https://github.com/openresty/lua-nginx-module"&gt;openresty/lua-nginx-module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-bugs-and-patches" class="anchor" aria-hidden="true" href="#bugs-and-patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs and Patches&lt;/h1&gt;
&lt;p&gt;Please submit bug reports, wishlists, or patches by&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;creating a ticket on the &lt;a href="https://github.com/openresty/lua-nginx-module/issues"&gt;GitHub Issue Tracker&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;or posting to the &lt;a href="#community"&gt;OpenResty community&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-luajit-bytecode-support" class="anchor" aria-hidden="true" href="#luajit-bytecode-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LuaJIT bytecode support&lt;/h1&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, all &lt;code&gt;*_by_lua_file&lt;/code&gt; configure directives (such as &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;) support loading LuaJIT 2.0/2.1 raw bytecode files directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -b /path/to/input_file.lua /path/to/output_file.ljbc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;-bg&lt;/code&gt; option can be used to include debug information in the LuaJIT bytecode file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -bg /path/to/input_file.lua /path/to/output_file.ljbc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please refer to the official LuaJIT documentation on the &lt;code&gt;-b&lt;/code&gt; option for more details:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://luajit.org/running.html#opt_b" rel="nofollow"&gt;https://luajit.org/running.html#opt_b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that the bytecode files generated by LuaJIT 2.1 is &lt;em&gt;not&lt;/em&gt; compatible with
LuaJIT 2.0, and vice versa. The support for LuaJIT 2.1 bytecode was first added
in ngx_lua v0.9.3.&lt;/p&gt;
&lt;p&gt;Attempts to load standard Lua 5.1 bytecode files into ngx_lua instances linked
to LuaJIT 2.0/2.1 (or vice versa) will result in an Nginx error message such as
the one below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[error] 13909#0: *1 failed to load Lua inlined code: bad byte-code header in /path/to/test_file.luac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Loading bytecode files via the Lua primitives like &lt;code&gt;require&lt;/code&gt; and
&lt;code&gt;dofile&lt;/code&gt; should always work as expected.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-system-environment-variable-support" class="anchor" aria-hidden="true" href="#system-environment-variable-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Environment Variable Support&lt;/h1&gt;
&lt;p&gt;If you want to access the system environment variable, say, &lt;code&gt;foo&lt;/code&gt;, in Lua via the standard Lua API &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.getenv" rel="nofollow"&gt;os.getenv&lt;/a&gt;, then you should also list this environment variable name in your &lt;code&gt;nginx.conf&lt;/code&gt; file via the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#env" rel="nofollow"&gt;env directive&lt;/a&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;env&lt;/span&gt; foo;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-http-10-support" class="anchor" aria-hidden="true" href="#http-10-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP 1.0 support&lt;/h1&gt;
&lt;p&gt;The HTTP 1.0 protocol does not support chunked output and requires an explicit &lt;code&gt;Content-Length&lt;/code&gt; header when the response body is not empty in order to support the HTTP 1.0 keep-alive.
So when a HTTP 1.0 request is made and the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive is turned &lt;code&gt;on&lt;/code&gt;, ngx_lua will buffer the
output of &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; calls and also postpone sending response headers until all the response body output is received.
At that time ngx_lua can calculate the total length of the body and construct a proper &lt;code&gt;Content-Length&lt;/code&gt; header to return to the HTTP 1.0 client.
If the &lt;code&gt;Content-Length&lt;/code&gt; response header is set in the running Lua code, however, this buffering will be disabled even if the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive is turned &lt;code&gt;on&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For large streaming output responses, it is important to disable the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive to minimise memory usage.&lt;/p&gt;
&lt;p&gt;Note that common HTTP benchmark tools such as &lt;code&gt;ab&lt;/code&gt; and &lt;code&gt;http_load&lt;/code&gt; issue HTTP 1.0 requests by default.
To force &lt;code&gt;curl&lt;/code&gt; to send HTTP 1.0 requests, use the &lt;code&gt;-0&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-statically-linking-pure-lua-modules" class="anchor" aria-hidden="true" href="#statically-linking-pure-lua-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Statically Linking Pure Lua Modules&lt;/h1&gt;
&lt;p&gt;With LuaJIT 2.x, it is possible to statically link the bytecode of pure Lua
modules into the Nginx executable.&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;luajit&lt;/code&gt; executable to compile &lt;code&gt;.lua&lt;/code&gt; Lua
module files to &lt;code&gt;.o&lt;/code&gt; object files containing the exported bytecode
data, and then link the &lt;code&gt;.o&lt;/code&gt; files directly in your Nginx build.&lt;/p&gt;
&lt;p&gt;Below is a trivial example to demonstrate this. Consider that we have the following &lt;code&gt;.lua&lt;/code&gt; file named &lt;code&gt;foo.lua&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; foo.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.go&lt;/span&gt;()
     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello from foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then we compile this &lt;code&gt;.lua&lt;/code&gt; file to &lt;code&gt;foo.o&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -bg foo.lua foo.o&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What matters here is the name of the &lt;code&gt;.lua&lt;/code&gt; file, which determines how you use this module later on the Lua land. The file name &lt;code&gt;foo.o&lt;/code&gt; does not matter at all except the &lt;code&gt;.o&lt;/code&gt; file extension (which tells &lt;code&gt;luajit&lt;/code&gt; what output format is used). If you want to strip the Lua debug information from the resulting bytecode, you can just specify the &lt;code&gt;-b&lt;/code&gt; option above instead of &lt;code&gt;-bg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then when building Nginx or OpenResty, pass the &lt;code&gt;--with-ld-opt="foo.o"&lt;/code&gt; option to the &lt;code&gt;./configure&lt;/code&gt; script:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/foo.o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, you can just do the following in any Lua code run by ngx_lua:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 foo.&lt;span class="pl-c1"&gt;go&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this piece of code no longer depends on the external &lt;code&gt;foo.lua&lt;/code&gt; file any more because it has already been compiled into the &lt;code&gt;nginx&lt;/code&gt; executable.&lt;/p&gt;
&lt;p&gt;If you want to use dot in the Lua module name when calling &lt;code&gt;require&lt;/code&gt;, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you need to rename the &lt;code&gt;foo.lua&lt;/code&gt; file to &lt;code&gt;resty_foo.lua&lt;/code&gt; before compiling it down to a &lt;code&gt;.o&lt;/code&gt; file with the &lt;code&gt;luajit&lt;/code&gt; command-line utility.&lt;/p&gt;
&lt;p&gt;It is important to use exactly the same version of LuaJIT when compiling &lt;code&gt;.lua&lt;/code&gt; files to &lt;code&gt;.o&lt;/code&gt; files as building nginx + ngx_lua. This is because the LuaJIT bytecode format may be incompatible between different LuaJIT versions. When the bytecode format is incompatible, you will see a Lua runtime error saying that the Lua module is not found.&lt;/p&gt;
&lt;p&gt;When you have multiple &lt;code&gt;.lua&lt;/code&gt; files to compile and link, then just specify their &lt;code&gt;.o&lt;/code&gt; files at the same time in the value of the &lt;code&gt;--with-ld-opt&lt;/code&gt; option. For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/foo.o /path/to/bar.o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have too many &lt;code&gt;.o&lt;/code&gt; files, then it might not be feasible to name them all in a single command. In this case, you can build a static library (or archive) for your &lt;code&gt;.o&lt;/code&gt; files, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ar rcus libmyluafiles.a &lt;span class="pl-k"&gt;*&lt;/span&gt;.o&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you can link the &lt;code&gt;myluafiles&lt;/code&gt; archive as a whole to your nginx executable:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure \
     --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-L/path/to/lib -Wl,--whole-archive -lmyluafiles -Wl,--no-whole-archive&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;/path/to/lib&lt;/code&gt; is the path of the directory containing the &lt;code&gt;libmyluafiles.a&lt;/code&gt; file. It should be noted that the linker option &lt;code&gt;--whole-archive&lt;/code&gt; is required here because otherwise our archive will be skipped because no symbols in our archive are mentioned in the main parts of the nginx executable.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-data-sharing-within-an-nginx-worker" class="anchor" aria-hidden="true" href="#data-sharing-within-an-nginx-worker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Sharing within an Nginx Worker&lt;/h1&gt;
&lt;p&gt;To globally share data among all the requests handled by the same Nginx worker
process, encapsulate the shared data into a Lua module, use the Lua
&lt;code&gt;require&lt;/code&gt; builtin to import the module, and then manipulate the
shared data in Lua. This works because required Lua modules are loaded only
once and all coroutines will share the same copy of the module (both its code
and data).&lt;/p&gt;
&lt;p&gt;Note that the use of global Lua variables is &lt;em&gt;strongly discouraged&lt;/em&gt;, as it may
lead to unexpected race conditions between concurrent requests.&lt;/p&gt;
&lt;p&gt;Here is a small example on sharing data within an Nginx worker via a Lua module:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mydata.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;local&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     dog &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
     cat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;,
     pig &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;,
 }

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.get_age&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; data[name]
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then accessing it from &lt;code&gt;nginx.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; mydata = require &lt;span class="pl-s"&gt;"mydata"&lt;/span&gt;
         ngx.say(mydata.get_age("dog"))
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;mydata&lt;/code&gt; module in this example will only be loaded and run on the first request to the location &lt;code&gt;/lua&lt;/code&gt;,
and all subsequent requests to the same Nginx worker process will use the reloaded instance of the
module as well as the same copy of the data in it, until a &lt;code&gt;HUP&lt;/code&gt; signal is sent to the Nginx master process to force a reload.
This data sharing technique is essential for high performance Lua applications based on this module.&lt;/p&gt;
&lt;p&gt;Note that this data sharing is on a &lt;em&gt;per-worker&lt;/em&gt; basis and not on a &lt;em&gt;per-server&lt;/em&gt; basis. That is, when there are multiple Nginx worker processes under an Nginx master, data sharing cannot cross the process boundary between these workers.&lt;/p&gt;
&lt;p&gt;It is usually recommended to share read-only data this way. You can also share changeable data among all the concurrent requests of each Nginx worker process as
long as there is &lt;em&gt;no&lt;/em&gt; nonblocking I/O operations (including &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;)
in the middle of your calculations. As long as you do not give the
control back to the Nginx event loop and ngx_lua's light thread
scheduler (even implicitly), there can never be any race conditions in
between. For this reason, always be very careful when you want to share changeable data on the
worker level. Buggy optimizations can easily lead to hard-to-debug
race conditions under load.&lt;/p&gt;
&lt;p&gt;If server-wide data sharing is required, then use one or more of the following approaches:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; API provided by this module.&lt;/li&gt;
&lt;li&gt;Use only a single Nginx worker and a single server (this is however not recommended when there is a multi core CPU or multiple CPUs in a single machine).&lt;/li&gt;
&lt;li&gt;Use data storage mechanisms such as &lt;code&gt;memcached&lt;/code&gt;, &lt;code&gt;redis&lt;/code&gt;, &lt;code&gt;MySQL&lt;/code&gt; or &lt;code&gt;PostgreSQL&lt;/code&gt;. &lt;a href="https://openresty.org" rel="nofollow"&gt;The OpenResty official releases&lt;/a&gt; come with a set of companion Nginx modules and Lua libraries that provide interfaces with these data storage mechanisms.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcp-socket-connect-operation-issues" class="anchor" aria-hidden="true" href="#tcp-socket-connect-operation-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TCP socket connect operation issues&lt;/h2&gt;
&lt;p&gt;The &lt;a href="#tcpsockconnect"&gt;tcpsock:connect&lt;/a&gt; method may indicate &lt;code&gt;success&lt;/code&gt; despite connection failures such as with &lt;code&gt;Connection Refused&lt;/code&gt; errors.&lt;/p&gt;
&lt;p&gt;However, later attempts to manipulate the cosocket object will fail and return the actual error status message generated by the failed connect operation.&lt;/p&gt;
&lt;p&gt;This issue is due to limitations in the Nginx event model and only appears to affect Mac OS X.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua-coroutine-yieldingresuming" class="anchor" aria-hidden="true" href="#lua-coroutine-yieldingresuming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua Coroutine Yielding/Resuming&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Because Lua's &lt;code&gt;dofile&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; builtins are currently implemented as C functions in LuaJIT 2.0/2.1, if the Lua file being loaded by &lt;code&gt;dofile&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; invokes &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture*&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, or other API functions requiring yielding in the &lt;em&gt;top-level&lt;/em&gt; scope of the Lua file, then the Lua error "attempt to yield across C-call boundary" will be raised. To avoid this, put these calls requiring yielding into your own Lua functions in the Lua file instead of the top-level scope of the file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua-variable-scope" class="anchor" aria-hidden="true" href="#lua-variable-scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua Variable Scope&lt;/h2&gt;
&lt;p&gt;Care must be taken when importing modules, and this form should be used:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; xxx &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xxx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;instead of the old deprecated form:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xxx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is the reason: by design, the global environment has exactly the same lifetime as the Nginx request handler associated with it. Each request handler has its own set of Lua global variables and that is the idea of request isolation. The Lua module is actually loaded by the first Nginx request handler and is cached by the &lt;code&gt;require()&lt;/code&gt; built-in in the &lt;code&gt;package.loaded&lt;/code&gt; table for later reference, and the &lt;code&gt;module()&lt;/code&gt; builtin used by some Lua modules has the side effect of setting a global variable to the loaded module table. But this global variable will be cleared at the end of the request handler,  and every subsequent request handler all has its own (clean) global environment. So one will get Lua exception for accessing the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;The use of Lua global variables is a generally inadvisable in the ngx_lua context as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the misuse of Lua globals has detrimental side effects on concurrent requests when such variables should instead be local in scope,&lt;/li&gt;
&lt;li&gt;Lua global variables require Lua table look-ups in the global environment which is computationally expensive, and&lt;/li&gt;
&lt;li&gt;some Lua global variable references may include typing errors which make such difficult to debug.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It is therefore &lt;em&gt;highly&lt;/em&gt; recommended to always declare such within an appropriate local scope instead.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Avoid&lt;/span&gt;
 foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Recommended&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Avoid&lt;/span&gt;
 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;() &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Recommended&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;() &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To find all instances of Lua global variables in your Lua code, run the &lt;a href="https://github.com/openresty/nginx-devel-utils/blob/master/lua-releng"&gt;lua-releng tool&lt;/a&gt; across all &lt;code&gt;.lua&lt;/code&gt; source files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ lua-releng
Checking use of Lua global variables in file lib/foo/bar.lua ...
        1       [1489]  SETGLOBAL       7 -1    ; contains
        55      [1506]  GETGLOBAL       7 -3    ; setvar
        3       [1545]  GETGLOBAL       3 -4    ; varexpand
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output says that the line 1489 of file &lt;code&gt;lib/foo/bar.lua&lt;/code&gt; writes to a global variable named &lt;code&gt;contains&lt;/code&gt;, the line 1506 reads from the global variable &lt;code&gt;setvar&lt;/code&gt;, and line 1545 reads the global &lt;code&gt;varexpand&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This tool will guarantee that local variables in the Lua module functions are all declared with the &lt;code&gt;local&lt;/code&gt; keyword, otherwise a runtime exception will be thrown. It prevents undesirable race conditions while accessing such variables. See &lt;a href="#data-sharing-within-an-nginx-worker"&gt;Data Sharing within an Nginx Worker&lt;/a&gt; for the reasons behind this.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-locations-configured-by-subrequest-directives-of-other-modules" class="anchor" aria-hidden="true" href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Locations Configured by Subrequest Directives of Other Modules&lt;/h2&gt;
&lt;p&gt;The &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; directives cannot capture locations that include the &lt;a href="http://nginx.org/en/docs/http/ngx_http_addition_module.html#add_before_body" rel="nofollow"&gt;add_before_body&lt;/a&gt;, &lt;a href="http://nginx.org/en/docs/http/ngx_http_addition_module.html#add_after_body" rel="nofollow"&gt;add_after_body&lt;/a&gt;, &lt;a href="https://nginx.org/en/docs/http/ngx_http_auth_request_module.html#auth_request" rel="nofollow"&gt;auth_request&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_location"&gt;echo_location&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_location_async"&gt;echo_location_async&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_subrequest"&gt;echo_subrequest&lt;/a&gt;, or &lt;a href="http://github.com/openresty/echo-nginx-module#echo_subrequest_async"&gt;echo_subrequest_async&lt;/a&gt; directives.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/bar"&lt;/span&gt;)
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/bar &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo_location&lt;/span&gt; /blah;
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/blah &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"Success!"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; $ &lt;span class="pl-k"&gt;curl&lt;/span&gt; -i http://example.com/foo&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will not work as expected.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cosockets-not-available-everywhere" class="anchor" aria-hidden="true" href="#cosockets-not-available-everywhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cosockets Not Available Everywhere&lt;/h2&gt;
&lt;p&gt;Due to internal limitations in the Nginx core, the cosocket API is disabled in the following contexts: &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt;, &lt;a href="#log_by_lua"&gt;log_by_lua*&lt;/a&gt;, &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, and &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The cosockets are currently also disabled in the &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; and &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt; directive contexts but we may add support for these contexts in the future because there is no limitation in the Nginx core (or the limitation might be worked around).&lt;/p&gt;
&lt;p&gt;There exists a workaround, however, when the original context does &lt;em&gt;not&lt;/em&gt; need to wait for the cosocket results. That is, creating a zero-delay timer via the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API and do the cosocket results in the timer handler, which runs asynchronously as to the original context creating the timer.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-special-escaping-sequences" class="anchor" aria-hidden="true" href="#special-escaping-sequences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Escaping Sequences&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Following the &lt;code&gt;v0.9.17&lt;/code&gt; release, this pitfall can be avoided by using the &lt;code&gt;*_by_lua_block {}&lt;/code&gt; configuration directives.&lt;/p&gt;
&lt;p&gt;PCRE sequences such as &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt;, or &lt;code&gt;\w&lt;/code&gt;, require special attention because in string literals, the backslash character, &lt;code&gt;\&lt;/code&gt;, is stripped out by both the Lua language parser and by the Nginx config file parser before processing if not within a &lt;code&gt;*_by_lua_block {}&lt;/code&gt; directive. So the following snippet will not work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 ? &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
 ?     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         local regex = "\d+"  -- THIS IS WRONG OUTSIDE OF A *_by_lua_block DIRECTIVE&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt; ?     '&lt;/span&gt;;
 ? }
 &lt;span class="pl-c"&gt;# evaluates to "not matched!"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid this, &lt;em&gt;double&lt;/em&gt; escape the backslash:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = "\\\\d+"&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, &lt;code&gt;\\\\d+&lt;/code&gt; is stripped down to &lt;code&gt;\\d+&lt;/code&gt; by the Nginx config file parser and this is further stripped down to &lt;code&gt;\d+&lt;/code&gt; by the Lua language parser before running.&lt;/p&gt;
&lt;p&gt;Alternatively, the regex pattern can be presented as a long-bracketed Lua string literal by encasing it in "long brackets", &lt;code&gt;[[...]]&lt;/code&gt;, in which case backslashes have to only be escaped once for the Nginx config file parser.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = [[\\d+]]&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, &lt;code&gt;[[\\d+]]&lt;/code&gt; is stripped down to &lt;code&gt;[[\d+]]&lt;/code&gt; by the Nginx config file parser and this is processed correctly.&lt;/p&gt;
&lt;p&gt;Note that a longer from of the long bracket, &lt;code&gt;[=[...]=]&lt;/code&gt;, may be required if the regex pattern contains &lt;code&gt;[...]&lt;/code&gt; sequences.
The &lt;code&gt;[=[...]=]&lt;/code&gt; form may be used as the default form if desired.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = [=[[0-9]+]=]&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternative approach to escaping PCRE sequences is to ensure that Lua code is placed in external script files and executed using the various &lt;code&gt;*_by_lua_file&lt;/code&gt; directives.
With this approach, the backslashes are only stripped by the Lua language parser and therefore only need to be escaped once each.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; test.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; regex &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;d+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, regex)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Within external script files, PCRE sequences presented as long-bracketed Lua string literals do not require modification.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; test.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; regex &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;[[&lt;/span&gt;\d+&lt;span class="pl-pds"&gt;]]&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, regex)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As noted earlier, PCRE sequences presented within &lt;code&gt;*_by_lua_block {}&lt;/code&gt; directives (available following the &lt;code&gt;v0.9.17&lt;/code&gt; release) do not require modification.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; regex = [[\d+]]
         &lt;span class="pl-k"&gt;local&lt;/span&gt; m = ngx.re.match(&lt;span class="pl-s"&gt;"hello, 1234"&lt;/span&gt;, regex)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; m then ngx.say(m[0]) else ngx.say(&lt;span class="pl-s"&gt;"not matched!"&lt;/span&gt;) end
     }
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mixing-with-ssi-not-supported" class="anchor" aria-hidden="true" href="#mixing-with-ssi-not-supported"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mixing with SSI Not Supported&lt;/h2&gt;
&lt;p&gt;Mixing SSI with ngx_lua in the same Nginx request is not supported at all. Just use ngx_lua exclusively. Everything you can do with SSI can be done atop ngx_lua anyway and it can be more efficient when using ngx_lua.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-spdy-mode-not-fully-supported" class="anchor" aria-hidden="true" href="#spdy-mode-not-fully-supported"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SPDY Mode Not Fully Supported&lt;/h2&gt;
&lt;p&gt;Certain Lua APIs provided by ngx_lua do not work in Nginx's SPDY mode yet: &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;, &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-missing-data-on-short-circuited-requests" class="anchor" aria-hidden="true" href="#missing-data-on-short-circuited-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Missing data on short circuited requests&lt;/h2&gt;
&lt;p&gt;Nginx may terminate a request early with (at least):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;400 (Bad Request)&lt;/li&gt;
&lt;li&gt;405 (Not Allowed)&lt;/li&gt;
&lt;li&gt;408 (Request Timeout)&lt;/li&gt;
&lt;li&gt;413 (Request Entity Too Large)&lt;/li&gt;
&lt;li&gt;414 (Request URI Too Large)&lt;/li&gt;
&lt;li&gt;494 (Request Headers Too Large)&lt;/li&gt;
&lt;li&gt;499 (Client Closed Request)&lt;/li&gt;
&lt;li&gt;500 (Internal Server Error)&lt;/li&gt;
&lt;li&gt;501 (Not Implemented)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means that phases that normally run are skipped, such as the rewrite or
access phase. This also means that later phases that are run regardless, e.g.
&lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;, will not have access to information that is normally set in those
phases.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;cosocket: implement LuaSocket's unconnected UDP API.&lt;/li&gt;
&lt;li&gt;cosocket: add support in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;cosocket: implement the &lt;code&gt;bind()&lt;/code&gt; method for stream-typed cosockets.&lt;/li&gt;
&lt;li&gt;cosocket: review and merge aviramc's &lt;a href="https://github.com/openresty/lua-nginx-module/pull/290"&gt;patch&lt;/a&gt; for adding the &lt;code&gt;bsdrecv&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;cosocket: add configure options for different strategies of handling the cosocket connection exceeding in the pools.&lt;/li&gt;
&lt;li&gt;review and apply vadim-pavlov's patch for &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;'s &lt;code&gt;extra_headers&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;ngx_hash_t&lt;/code&gt; to optimize the built-in header look-up process for &lt;a href="#ngxreqset_header"&gt;ngx.req.set_header&lt;/a&gt;, &lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt;, and etc.&lt;/li&gt;
&lt;li&gt;add directives to run Lua codes when Nginx stops.&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;ignore_resp_headers&lt;/code&gt;, &lt;code&gt;ignore_resp_body&lt;/code&gt;, and &lt;code&gt;ignore_resp&lt;/code&gt; options to &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; methods, to allow micro performance tuning on the user side.&lt;/li&gt;
&lt;li&gt;add automatic Lua code time slicing support by yielding and resuming the Lua VM actively via Lua's debug hooks.&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;stat&lt;/code&gt; mode similar to &lt;a href="https://httpd.apache.org/docs/trunk/mod/mod_lua.html" rel="nofollow"&gt;mod_lua&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;cosocket: add client SSL certificate support.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-changes" class="anchor" aria-hidden="true" href="#changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changes&lt;/h1&gt;
&lt;p&gt;The changes made in every release of this module are listed in the change logs of the OpenResty bundle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/#Changes" rel="nofollow"&gt;https://openresty.org/#Changes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-test-suite" class="anchor" aria-hidden="true" href="#test-suite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test Suite&lt;/h1&gt;
&lt;p&gt;The following dependencies are required to run the test suite:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Nginx version &amp;gt;= 1.4.2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perl modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Test::Nginx: &lt;a href="https://github.com/openresty/test-nginx"&gt;https://github.com/openresty/test-nginx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nginx modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/set-misc-nginx-module"&gt;ngx_set_misc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mdounin.ru/files/ngx_http_auth_request_module-0.2.tar.gz" rel="nofollow"&gt;ngx_auth_request&lt;/a&gt; (this is not needed if you're using Nginx 1.5.4+.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/echo-nginx-module"&gt;ngx_echo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/memc-nginx-module"&gt;ngx_memc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/srcache-nginx-module"&gt;ngx_srcache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ngx_lua (i.e., this module)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-upstream-nginx-module"&gt;ngx_lua_upstream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/headers-more-nginx-module"&gt;ngx_headers_more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/drizzle-nginx-module"&gt;ngx_drizzle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/rds-json-nginx-module"&gt;ngx_rds_json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_coolkit"&gt;ngx_coolkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/redis2-nginx-module"&gt;ngx_redis2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The order in which these modules are added during configuration is important because the position of any filter module in the
filtering chain determines the final output, for example. The correct adding order is shown above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;3rd-party Lua libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" rel="nofollow"&gt;lua-cjson&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Applications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mysql: create database 'ngx_test', grant all privileges to user 'ngx_test', password is 'ngx_test'&lt;/li&gt;
&lt;li&gt;memcached: listening on the default port, 11211.&lt;/li&gt;
&lt;li&gt;redis: listening on the default port, 6379.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See also the &lt;a href="https://github.com/openresty/lua-nginx-module/blob/master/util/build.sh"&gt;developer build script&lt;/a&gt; for more details on setting up the testing environment.&lt;/p&gt;
&lt;p&gt;To run the whole test suite in the default testing mode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /path/to/lua-nginx-module
export PATH=/path/to/your/nginx/sbin:$PATH
prove -I/path/to/test-nginx/lib -r t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run specific test files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /path/to/lua-nginx-module
export PATH=/path/to/your/nginx/sbin:$PATH
prove -I/path/to/test-nginx/lib t/002-content.t t/003-errors.t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run a specific test block in a particular test file, add the line &lt;code&gt;--- ONLY&lt;/code&gt; to the test block you want to run, and then use the &lt;code&gt;prove&lt;/code&gt; utility to run that &lt;code&gt;.t&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;There are also various testing modes based on mockeagain, valgrind, and etc. Refer to the &lt;a href="https://search.cpan.org/perldoc?Test::Nginx" rel="nofollow"&gt;Test::Nginx documentation&lt;/a&gt; for more details for various advanced testing modes. See also the test reports for the Nginx test cluster running on Amazon EC2: &lt;a href="https://qa.openresty.org" rel="nofollow"&gt;https://qa.openresty.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h1&gt;
&lt;p&gt;This module is licensed under the BSD license.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2009-2017, by Xiaozhe Wang (chaoslawful) &lt;a href="mailto:chaoslawful@gmail.com"&gt;chaoslawful@gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2009-2019, by Yichun "agentzh" Zhang (章亦春) &lt;a href="mailto:agentzh@gmail.com"&gt;agentzh@gmail.com&lt;/a&gt;, OpenResty Inc.&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See Also&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua_module&lt;/a&gt; for an official port of this module for the Nginx "stream" subsystem (doing generic downstream TCP communications).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-memcached"&gt;lua-resty-memcached&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-redis"&gt;lua-resty-redis&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-mysql"&gt;lua-resty-mysql&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-upload"&gt;lua-resty-upload&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-dns"&gt;lua-resty-dns&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket&lt;/a&gt; library for both WebSocket server and client, based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-string"&gt;lua-resty-string&lt;/a&gt; library based on &lt;a href="https://luajit.org/ext_ffi.html" rel="nofollow"&gt;LuaJIT FFI&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lock"&gt;lua-resty-lock&lt;/a&gt; library for a nonblocking simple lock API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cloudflare/lua-resty-cookie"&gt;lua-resty-cookie&lt;/a&gt; library for HTTP cookie manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#RoutingMySQLQueriesBasedOnURIArgs" rel="nofollow"&gt;Routing requests to different MySQL queries based on URI arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#DynamicRoutingBasedOnRedis" rel="nofollow"&gt;Dynamic Routing Based on Redis and Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#UsingLuaRocks" rel="nofollow"&gt;Using LuaRocks with ngx_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-nginx-module/wiki/Introduction"&gt;Introduction to ngx_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/echo-nginx-module"&gt;echo-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/drizzle-nginx-module"&gt;drizzle-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_postgres"&gt;postgres-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/memc-nginx-module"&gt;memc-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org" rel="nofollow"&gt;The OpenResty bundle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/nginx-systemtap-toolkit"&gt;Nginx Systemtap Toolkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-directives" class="anchor" aria-hidden="true" href="#directives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Directives&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#lua_load_resty_core"&gt;lua_load_resty_core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_capture_error_log"&gt;lua_capture_error_log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_use_default_type"&gt;lua_use_default_type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_malloc_trim"&gt;lua_malloc_trim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_regex_cache_max_entries"&gt;lua_regex_cache_max_entries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_regex_match_limit"&gt;lua_regex_match_limit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_package_path"&gt;lua_package_path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_package_cpath"&gt;lua_package_cpath&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua_block"&gt;init_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua_file"&gt;init_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua_block"&gt;init_worker_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua_file"&gt;init_worker_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua_block"&gt;set_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua_block"&gt;content_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_block"&gt;rewrite_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_file"&gt;rewrite_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_block"&gt;access_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_file"&gt;access_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua_block"&gt;header_filter_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua_file"&gt;header_filter_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua_block"&gt;body_filter_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua_file"&gt;body_filter_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua_block"&gt;log_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua_file"&gt;log_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#balancer_by_lua_file"&gt;balancer_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_certificate_by_lua_file"&gt;ssl_certificate_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_fetch_by_lua_file"&gt;ssl_session_fetch_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_store_by_lua_file"&gt;ssl_session_store_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_send_lowat"&gt;lua_socket_send_lowat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_buffer_size"&gt;lua_socket_buffer_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_log_errors"&gt;lua_socket_log_errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_ciphers"&gt;lua_ssl_ciphers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_crl"&gt;lua_ssl_crl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_protocols"&gt;lua_ssl_protocols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_no_postpone"&gt;access_by_lua_no_postpone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_transform_underscores_in_response_headers"&gt;lua_transform_underscores_in_response_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_sa_restart"&gt;lua_sa_restart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The basic building blocks of scripting Nginx with Lua are directives. Directives are used to specify when the user Lua code is run and
how the result will be used. Below is a diagram showing the order in which directives are executed.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/2137369/15272097/77d1c09e-1a37-11e6-97ef-d9767035fc3e.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2137369/15272097/77d1c09e-1a37-11e6-97ef-d9767035fc3e.png" alt="Lua Nginx Modules Directives" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_load_resty_core" class="anchor" aria-hidden="true" href="#lua_load_resty_core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_load_resty_core&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_load_resty_core on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_load_resty_core on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive is deprecated since the &lt;code&gt;v0.10.16&lt;/code&gt; release of this
module. The &lt;code&gt;resty.core&lt;/code&gt; module from
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; is now mandatorily
loaded during the Lua VM initialization. Specifying this directive will have no
effect.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.15&lt;/code&gt; release and
used to optionally load the &lt;code&gt;resty.core&lt;/code&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_capture_error_log" class="anchor" aria-hidden="true" href="#lua_capture_error_log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_capture_error_log&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_capture_error_log size&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;none&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables a buffer of the specified &lt;code&gt;size&lt;/code&gt; for capturing all the Nginx error log message data (not just those produced
by this module or the Nginx http subsystem, but everything) without touching files or disks.&lt;/p&gt;
&lt;p&gt;You can use units like &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;m&lt;/code&gt; in the &lt;code&gt;size&lt;/code&gt; value, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_capture_error_log&lt;/span&gt; 100k;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a rule of thumb, a 4KB buffer can usually hold about 20 typical error log messages. So do the maths!&lt;/p&gt;
&lt;p&gt;This buffer never grows. If it is full, new error log messages will replace the oldest ones in the buffer.&lt;/p&gt;
&lt;p&gt;The size of the buffer must be bigger than the maximum length of a single error log message (which is 4K in OpenResty and 2K in stock NGINX).&lt;/p&gt;
&lt;p&gt;You can read the messages in the buffer on the Lua land via the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#get_logs"&gt;get_logs()&lt;/a&gt;
function of the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#readme"&gt;ngx.errlog&lt;/a&gt;
module of the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#readme"&gt;lua-resty-core&lt;/a&gt;
library. This Lua API function will return the captured error log messages and
also remove these already read from the global capturing buffer, making room
for any new error log data. For this reason, the user should not configure this
buffer to be too big if the user read the buffered error log data fast enough.&lt;/p&gt;
&lt;p&gt;Note that the log level specified in the standard &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive
&lt;em&gt;does&lt;/em&gt; have effect on this capturing facility. It only captures log
messages of a level no lower than the specified log level in the &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive.
The user can still choose to set an even higher filtering log level on the fly via the Lua API function
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#set_filter_level"&gt;errlog.set_filter_level&lt;/a&gt;.
So it is more flexible than the static &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;It is worth noting that there is no way to capture the debugging logs
without building OpenResty or Nginx with the &lt;code&gt;./configure&lt;/code&gt;
option &lt;code&gt;--with-debug&lt;/code&gt;. And enabling debugging logs is
strongly discouraged in production builds due to high overhead.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_use_default_type" class="anchor" aria-hidden="true" href="#lua_use_default_type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_use_default_type&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_use_default_type on | off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_use_default_type on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies whether to use the MIME type specified by the &lt;a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#default_type" rel="nofollow"&gt;default_type&lt;/a&gt; directive for the default value of the &lt;code&gt;Content-Type&lt;/code&gt; response header. Deactivate this directive if a default &lt;code&gt;Content-Type&lt;/code&gt; response header for Lua request handlers is not desired.&lt;/p&gt;
&lt;p&gt;This directive is turned on by default.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_malloc_trim" class="anchor" aria-hidden="true" href="#lua_malloc_trim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_malloc_trim&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_malloc_trim &amp;lt;request-count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_malloc_trim 1000&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Asks the underlying &lt;code&gt;libc&lt;/code&gt; runtime library to release its cached free memory back to the operating system every
&lt;code&gt;N&lt;/code&gt; requests processed by the Nginx core. By default, &lt;code&gt;N&lt;/code&gt; is 1000. You can configure the request count
by using your own numbers. Smaller numbers mean more frequent releases, which may introduce higher CPU time consumption and
smaller memory footprint while larger numbers usually lead to less CPU time overhead and relatively larger memory footprint.
Just tune the number for your own use cases.&lt;/p&gt;
&lt;p&gt;Configuring the argument to &lt;code&gt;0&lt;/code&gt; essentially turns off the periodical memory trimming altogether.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_malloc_trim&lt;/span&gt; 0;  &lt;span class="pl-c"&gt;# turn off trimming completely&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The current implementation uses an Nginx log phase handler to do the request counting. So the appearance of the
&lt;a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#log_subrequest" rel="nofollow"&gt;log_subrequest on&lt;/a&gt; directives in &lt;code&gt;nginx.conf&lt;/code&gt;
may make the counting faster when subrequests are involved. By default, only "main requests" count.&lt;/p&gt;
&lt;p&gt;Note that this directive does &lt;em&gt;not&lt;/em&gt; affect the memory allocated by LuaJIT's own allocator based on the &lt;code&gt;mmap&lt;/code&gt;
system call.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_code_cache" class="anchor" aria-hidden="true" href="#lua_code_cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_code_cache&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_code_cache on | off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_code_cache on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables or disables the Lua code cache for Lua code in &lt;code&gt;*_by_lua_file&lt;/code&gt; directives (like &lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt; and
&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;) and Lua modules.&lt;/p&gt;
&lt;p&gt;When turning off, every request served by ngx_lua will run in a separate Lua VM instance, starting from the &lt;code&gt;0.9.3&lt;/code&gt; release. So the Lua files referenced in &lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt;,
&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;, &lt;a href="#access_by_lua_file"&gt;access_by_lua_file&lt;/a&gt;,
and etc will not be cached
and all Lua modules used will be loaded from scratch. With this in place, developers can adopt an edit-and-refresh approach.&lt;/p&gt;
&lt;p&gt;Please note however, that Lua code written inlined within nginx.conf
such as those specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;, &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;,
&lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, and &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; will not be updated when you edit the inlined Lua code in your &lt;code&gt;nginx.conf&lt;/code&gt; file because only the Nginx config file parser can correctly parse the &lt;code&gt;nginx.conf&lt;/code&gt;
file and the only way is to reload the config file
by sending a &lt;code&gt;HUP&lt;/code&gt; signal or just to restart Nginx.&lt;/p&gt;
&lt;p&gt;Even when the code cache is enabled, Lua files which are loaded by &lt;code&gt;dofile&lt;/code&gt; or &lt;code&gt;loadfile&lt;/code&gt;
in *_by_lua_file cannot be cached (unless you cache the results yourself). Usually you can either use the &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;
or &lt;a href="#init-by_lua_file"&gt;init_by_lua_file&lt;/a&gt; directives to load all such files or just make these Lua files true Lua modules
and load them via &lt;code&gt;require&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The ngx_lua module does not support the &lt;code&gt;stat&lt;/code&gt; mode available with the
Apache &lt;code&gt;mod_lua&lt;/code&gt; module (yet).&lt;/p&gt;
&lt;p&gt;Disabling the Lua code cache is strongly
discouraged for production use and should only be used during
development as it has a significant negative impact on overall performance. For example, the performance of a "hello world" Lua example can drop by an order of magnitude after disabling the Lua code cache.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_regex_cache_max_entries" class="anchor" aria-hidden="true" href="#lua_regex_cache_max_entries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_regex_cache_max_entries&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_regex_cache_max_entries &amp;lt;num&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_regex_cache_max_entries 1024&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the maximum number of entries allowed in the worker process level compiled regex cache.&lt;/p&gt;
&lt;p&gt;The regular expressions used in &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;, &lt;a href="#ngxregmatch"&gt;ngx.re.gmatch&lt;/a&gt;, &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;, and &lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt; will be cached within this cache if the regex option &lt;code&gt;o&lt;/code&gt; (i.e., compile-once flag) is specified.&lt;/p&gt;
&lt;p&gt;The default number of entries allowed is 1024 and when this limit is reached, new regular expressions will not be cached (as if the &lt;code&gt;o&lt;/code&gt; option was not specified) and there will be one, and only one, warning in the &lt;code&gt;error.log&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2011/08/27 23:18:26 [warn] 31997#0: *1 lua exceeding regex cache max entries (1024), ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using the &lt;code&gt;ngx.re.*&lt;/code&gt; implementation of &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; by loading the &lt;code&gt;resty.core.regex&lt;/code&gt; module (or just the &lt;code&gt;resty.core&lt;/code&gt; module), then an LRU cache is used for the regex cache being used here.&lt;/p&gt;
&lt;p&gt;Do not activate the &lt;code&gt;o&lt;/code&gt; option for regular expressions (and/or &lt;code&gt;replace&lt;/code&gt; string arguments for &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt; and &lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt;) that are generated &lt;em&gt;on the fly&lt;/em&gt; and give rise to infinite variations to avoid hitting the specified limit.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_regex_match_limit" class="anchor" aria-hidden="true" href="#lua_regex_match_limit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_regex_match_limit&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_regex_match_limit &amp;lt;num&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_regex_match_limit 0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the "match limit" used by the PCRE library when executing the &lt;a href="#ngxrematch"&gt;ngx.re API&lt;/a&gt;. To quote the PCRE manpage, "the limit ... has the effect of limiting the amount of backtracking that can take place."&lt;/p&gt;
&lt;p&gt;When the limit is hit, the error string "pcre_exec() failed: -8" will be returned by the &lt;a href="#ngxrematch"&gt;ngx.re API&lt;/a&gt; functions on the Lua land.&lt;/p&gt;
&lt;p&gt;When setting the limit to 0, the default "match limit" when compiling the PCRE library is used. And this is the default value of this directive.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_package_path" class="anchor" aria-hidden="true" href="#lua_package_path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_package_path&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_package_path &amp;lt;lua-style-path-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;The content of LUA_PATH environment variable or Lua's compiled-in defaults.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the Lua module search path used by scripts specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;,
&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; and others. The path string is in standard Lua path form, and &lt;code&gt;;;&lt;/code&gt;
can be used to stand for the original search paths.&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, the special notation &lt;code&gt;$prefix&lt;/code&gt; or &lt;code&gt;${prefix}&lt;/code&gt; can be used in the search path string to indicate the path of the &lt;code&gt;server prefix&lt;/code&gt; usually determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_package_cpath" class="anchor" aria-hidden="true" href="#lua_package_cpath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_package_cpath&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_package_cpath &amp;lt;lua-style-cpath-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;The content of LUA_CPATH environment variable or Lua's compiled-in defaults.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the Lua C-module search path used by scripts specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;,
&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; and others. The cpath string is in standard Lua cpath form, and &lt;code&gt;;;&lt;/code&gt;
can be used to stand for the original cpath.&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, the special notation &lt;code&gt;$prefix&lt;/code&gt; or &lt;code&gt;${prefix}&lt;/code&gt; can be used in the search path string to indicate the path of the &lt;code&gt;server prefix&lt;/code&gt; usually determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua" class="anchor" aria-hidden="true" href="#init_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#init_by_lua_block"&gt;init_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the Lua code specified by the argument &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; on the global Lua VM level when the Nginx master process (if any) is loading the Nginx config file.&lt;/p&gt;
&lt;p&gt;When Nginx receives the &lt;code&gt;HUP&lt;/code&gt; signal and starts reloading the config file, the Lua VM will also be re-created and &lt;code&gt;init_by_lua&lt;/code&gt; will run again on the new Lua VM. In case that the &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; directive is turned off (default on), the &lt;code&gt;init_by_lua&lt;/code&gt; handler will run upon every request because in this special mode a standalone Lua VM is always created for each request.&lt;/p&gt;
&lt;p&gt;Usually you can pre-load Lua modules at server start-up by means of this hook and take advantage of modern operating systems' copy-on-write (COW) optimization. Here is an example for pre-loading Lua modules:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# this runs before forking out nginx worker processes:&lt;/span&gt;
 &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; { require &lt;span class="pl-s"&gt;"cjson"&lt;/span&gt; }

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /api &lt;/span&gt;{
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             -- &lt;span class="pl-k"&gt;the&lt;/span&gt; following require() will just  return
             -- &lt;span class="pl-k"&gt;the&lt;/span&gt; alrady loaded module from package.loaded:
             ngx.say(&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;"cjson"&lt;/span&gt;.encode{dog = 5, cat = 6})
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also initialize the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; shm storage at this phase. Here is an example for this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;1m&lt;/span&gt;;

 &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; {
     &lt;span class="pl-k"&gt;local&lt;/span&gt; dogs = ngx.shared.dogs;
     dogs:&lt;span class="pl-k"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;"Tom"&lt;/span&gt;, 56)
 }

 server {
     location = /api {
         content_by_lua_block {
             local dogs = ngx.shared.dogs;
             ngx.say(dogs:get("Tom"))
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But note that, the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt;'s shm storage will not be cleared through a config reload (via the &lt;code&gt;HUP&lt;/code&gt; signal, for example). So if you do &lt;em&gt;not&lt;/em&gt; want to re-initialize the shm storage in your &lt;code&gt;init_by_lua&lt;/code&gt; code in this case, then you just need to set a custom flag in the shm storage and always check the flag in your &lt;code&gt;init_by_lua&lt;/code&gt; code.&lt;/p&gt;
&lt;p&gt;Because the Lua code in this context runs before Nginx forks its worker processes (if any), data or code loaded here will enjoy the &lt;a href="https://en.wikipedia.org/wiki/Copy-on-write" rel="nofollow"&gt;Copy-on-write (COW)&lt;/a&gt; feature provided by many operating systems among all the worker processes, thus saving a lot of memory.&lt;/p&gt;
&lt;p&gt;Do &lt;em&gt;not&lt;/em&gt; initialize your own Lua global variables in this context because use of Lua global variables have performance penalties and can lead to global namespace pollution (see the &lt;a href="#lua-variable-scope"&gt;Lua Variable Scope&lt;/a&gt; section for more details). The recommended way is to use proper &lt;a href="https://www.lua.org/manual/5.1/manual.html#5.3" rel="nofollow"&gt;Lua module&lt;/a&gt; files (but do not use the standard Lua function &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-module" rel="nofollow"&gt;module()&lt;/a&gt; to define Lua modules because it pollutes the global namespace as well) and call &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-require" rel="nofollow"&gt;require()&lt;/a&gt; to load your own module files in &lt;code&gt;init_by_lua&lt;/code&gt; or other contexts (&lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-require" rel="nofollow"&gt;require()&lt;/a&gt; does cache the loaded Lua modules in the global &lt;code&gt;package.loaded&lt;/code&gt; table in the Lua registry so your modules will only loaded once for the whole Lua VM instance).&lt;/p&gt;
&lt;p&gt;Only a small set of the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; is supported in this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logging APIs: &lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt; and &lt;a href="#print"&gt;print&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Shared Dictionary API: &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More Nginx APIs for Lua may be supported in this context upon future user requests.&lt;/p&gt;
&lt;p&gt;Basically you can safely use Lua libraries that do blocking I/O in this very context because blocking the master process during server start-up is completely okay. Even the Nginx core does blocking I/O (at least on resolving upstream's host names) at the configure-loading phase.&lt;/p&gt;
&lt;p&gt;You should be very careful about potential security vulnerabilities in your Lua code registered in this context because the Nginx master process is often run under the &lt;code&gt;root&lt;/code&gt; account.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua_block" class="anchor" aria-hidden="true" href="#init_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua_file" class="anchor" aria-hidden="true" href="#init_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code or &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua" class="anchor" aria-hidden="true" href="#init_worker_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#init_worker_by_lua_block"&gt;init_worker_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the specified Lua code upon every Nginx worker process's startup when the master process is enabled. When the master process is disabled, this hook will just run after &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This hook is often used to create per-worker reoccurring timers (via the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; Lua API), either for backend health-check or other timed routine work. Below is an example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_worker_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;     local delay = 3  -- in seconds&lt;/span&gt;
&lt;span class="pl-s"&gt;     local new_timer = ngx.timer.at&lt;/span&gt;
&lt;span class="pl-s"&gt;     local log = ngx.log&lt;/span&gt;
&lt;span class="pl-s"&gt;     local ERR = ngx.ERR&lt;/span&gt;
&lt;span class="pl-s"&gt;     local check&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     check = function(premature)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if not premature then&lt;/span&gt;
&lt;span class="pl-s"&gt;             -- do the health check or other routine work&lt;/span&gt;
&lt;span class="pl-s"&gt;             local ok, err = new_timer(delay, check)&lt;/span&gt;
&lt;span class="pl-s"&gt;             if not ok then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log(ERR, "failed to create timer: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 return&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     local hdl, err = new_timer(delay, check)&lt;/span&gt;
&lt;span class="pl-s"&gt;     if not hdl then&lt;/span&gt;
&lt;span class="pl-s"&gt;         log(ERR, "failed to create timer: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;         return&lt;/span&gt;
&lt;span class="pl-s"&gt;     end&lt;/span&gt;
&lt;span class="pl-s"&gt; '&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua_block" class="anchor" aria-hidden="true" href="#init_worker_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_worker_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua_file" class="anchor" aria-hidden="true" href="#init_worker_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua_file &amp;lt;lua-file-path&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;, but accepts the file path to a Lua source file or Lua bytecode file.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua" class="anchor" aria-hidden="true" href="#set_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua $res &amp;lt;lua-script-str&amp;gt; [$arg1 $arg2 ...]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#set_by_lua_block"&gt;set_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Executes code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; with optional input arguments &lt;code&gt;$arg1 $arg2 ...&lt;/code&gt;, and returns string output to &lt;code&gt;$res&lt;/code&gt;.
The code in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; can make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and can retrieve input arguments from the &lt;code&gt;ngx.arg&lt;/code&gt; table (index starts from &lt;code&gt;1&lt;/code&gt; and increases sequentially).&lt;/p&gt;
&lt;p&gt;This directive is designed to execute short, fast running code blocks as the Nginx event loop is blocked during code execution. Time consuming code sequences should therefore be avoided.&lt;/p&gt;
&lt;p&gt;This directive is implemented by injecting custom commands into the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s command list. Because &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt; does not support nonblocking I/O in its commands, Lua APIs requiring yielding the current Lua "light thread" cannot work in this directive.&lt;/p&gt;
&lt;p&gt;At least the following API functions are currently disabled within the context of &lt;code&gt;set_by_lua&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Sleeping API function &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, note that this directive can only write out a value to a single Nginx variable at
a time. However, a workaround is possible using the &lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt; interface.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$diff&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# we have to predefine the $diff variable here&lt;/span&gt;

     &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$sum&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local a = 32&lt;/span&gt;
&lt;span class="pl-s"&gt;         local b = 56&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.var.diff = a - b;  -- write to &lt;span class="pl-smi"&gt;$diff&lt;/span&gt; directly&lt;/span&gt;
&lt;span class="pl-s"&gt;         return a + b;          -- return the &lt;span class="pl-smi"&gt;$sum&lt;/span&gt; value normally&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"sum = &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;, diff = &lt;span class="pl-smi"&gt;$diff&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive can be freely mixed with all directives of the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;, &lt;a href="http://github.com/openresty/set-misc-nginx-module"&gt;set-misc-nginx-module&lt;/a&gt;, and &lt;a href="http://github.com/openresty/array-var-nginx-module"&gt;array-var-nginx-module&lt;/a&gt; modules. All of these directives will run in the same order as they appear in the config file.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$foo&lt;/span&gt; &lt;span class="pl-s"&gt;32&lt;/span&gt;;
 &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$bar&lt;/span&gt; &lt;span class="pl-s"&gt;'return tonumber(ngx.var.foo) + 1'&lt;/span&gt;;
 &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$baz&lt;/span&gt; &lt;span class="pl-s"&gt;"bar: &lt;span class="pl-smi"&gt;$bar&lt;/span&gt;"&lt;/span&gt;;  &lt;span class="pl-c"&gt;# $baz == "bar: 33"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, Nginx variable interpolation is disabled in the &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; argument of this directive and therefore, the dollar sign character (&lt;code&gt;$&lt;/code&gt;) can be used directly.&lt;/p&gt;
&lt;p&gt;This directive requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua_block" class="anchor" aria-hidden="true" href="#set_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua_block $res { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt; directive except that&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;this directive inlines the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping), and&lt;/li&gt;
&lt;li&gt;this directive does not support extra arguments after the Lua script as in &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;set_by_lua_block&lt;/span&gt; &lt;span class="pl-smi"&gt;$res&lt;/span&gt; { return &lt;span class="pl-s"&gt;32&lt;/span&gt; + math.cos(32) }
 &lt;span class="pl-c"&gt;# $res now has the value "32.834223360507" or alike.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No special escaping is required in the Lua code block.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua_file" class="anchor" aria-hidden="true" href="#set_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua_file $res &amp;lt;path-to-lua-script-file&amp;gt; [$arg1 $arg2 ...]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variable interpolation is supported in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; argument string of this directive. But special care must be taken for injection attacks.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by
switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;This directive requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua" class="anchor" aria-hidden="true" href="#content_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#content_by_lua_block"&gt;content_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as a "content handler" and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Do not use this directive and other content handler directives in the same location. For example, this directive and the &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass" rel="nofollow"&gt;proxy_pass&lt;/a&gt; directive should not be used in the same location.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua_block" class="anchor" aria-hidden="true" href="#content_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
     ngx.say("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua_file" class="anchor" aria-hidden="true" href="#content_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by
switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# CAUTION: contents in nginx var must be carefully filtered,&lt;/span&gt;
 &lt;span class="pl-c"&gt;# otherwise there'll be great security risk!&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; ~ &lt;span class="pl-sr"&gt;^/app/([-_a-zA-Z0-9/]+) &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$path&lt;/span&gt; &lt;span class="pl-smi"&gt;$1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_file&lt;/span&gt; /path/to/lua/app/root/&lt;span class="pl-smi"&gt;$path&lt;/span&gt;.lua;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But be very careful about malicious user inputs and always carefully validate or filter out the user-supplied path components.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua" class="anchor" aria-hidden="true" href="#rewrite_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#rewrite_by_lua_block"&gt;rewrite_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as a rewrite phase handler and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Note that this handler always runs &lt;em&gt;after&lt;/em&gt; the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;. So the following will work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;""&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.var.b = tonumber(ngx.var.a) + 1'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;because &lt;code&gt;set $a 12&lt;/code&gt; and &lt;code&gt;set $b ""&lt;/code&gt; run &lt;em&gt;before&lt;/em&gt; &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, the following will not work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ?  &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
 ?      &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
 ?      &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
 ?      &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.var.b = tonumber(ngx.var.a) + 1'&lt;/span&gt;;
 ?      &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;$b&lt;/span&gt; = &lt;span class="pl-s"&gt;'13'&lt;/span&gt;) {
 ?         &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/bar redirect;
 ?         &lt;span class="pl-c1"&gt;break&lt;/span&gt;;
 ?      }
 ?
 ?      &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 ?  }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;because &lt;code&gt;if&lt;/code&gt; runs &lt;em&gt;before&lt;/em&gt; &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; even if it is placed after &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; in the config.&lt;/p&gt;
&lt;p&gt;The right way of doing this is as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.var.b = tonumber(ngx.var.a) + 1&lt;/span&gt;
&lt;span class="pl-s"&gt;         if tonumber(ngx.var.b) == 13 then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return ngx.redirect("/bar");&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;a href="http://www.grid.net.ru/nginx/eval.en.html" rel="nofollow"&gt;ngx_eval&lt;/a&gt; module can be approximated by using &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;eval&lt;/span&gt; &lt;span class="pl-smi"&gt;$res&lt;/span&gt; {
         &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://foo.com/check-spam;
     }

     &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;$res&lt;/span&gt; = &lt;span class="pl-s"&gt;'spam'&lt;/span&gt;) {
         &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/terms-of-use.html redirect;
     }

     &lt;span class="pl-k"&gt;fastcgi_pass&lt;/span&gt; ...;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be implemented in ngx_lua as:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /check-spam &lt;/span&gt;{
     &lt;span class="pl-k"&gt;internal&lt;/span&gt;;
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://foo.com/check-spam;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/check-spam")&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.body == "spam" then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return ngx.redirect("/terms-of-use.html")&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;fastcgi_pass&lt;/span&gt; ...;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just as any other rewrite phase handlers, &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; also runs in subrequests.&lt;/p&gt;
&lt;p&gt;Note that when calling &lt;code&gt;ngx.exit(ngx.OK)&lt;/code&gt; within a &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler, the Nginx request processing control flow will still continue to the content handler. To terminate the current request from within a &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler, calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with status &amp;gt;= 200 (&lt;code&gt;ngx.HTTP_OK&lt;/code&gt;) and status &amp;lt; 300 (&lt;code&gt;ngx.HTTP_SPECIAL_RESPONSE&lt;/code&gt;) for successful quits and &lt;code&gt;ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/code&gt; (or its friends) for failures.&lt;/p&gt;
&lt;p&gt;If the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive is used to change the URI and initiate location re-lookups (internal redirections), then any &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; or &lt;a href="#rewrite_by_lua_file"&gt;rewrite_by_lua_file&lt;/a&gt; code sequences within the current location will not be executed. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/bar;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.exit(503)'&lt;/span&gt;;
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/bar &lt;/span&gt;{
     ...
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here the Lua code &lt;code&gt;ngx.exit(503)&lt;/code&gt; will never run. This will be the case if &lt;code&gt;rewrite ^ /bar last&lt;/code&gt; is used as this will similarly initiate an internal redirection. If the &lt;code&gt;break&lt;/code&gt; modifier is used instead, there will be no internal redirection and the &lt;code&gt;rewrite_by_lua&lt;/code&gt; code will be executed.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rewrite_by_lua&lt;/code&gt; code will always run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase unless &lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt; is turned on.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_block" class="anchor" aria-hidden="true" href="#rewrite_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
     do_something("hello, world!\nhiya\n")
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_file" class="anchor" aria-hidden="true" href="#rewrite_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached and the Nginx config must be reloaded each time the Lua source file is modified. The Lua code cache can be temporarily disabled during development by switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rewrite_by_lua_file&lt;/code&gt; code will always run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase unless &lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt; is turned on.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch just as in &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua" class="anchor" aria-hidden="true" href="#access_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#access_by_lua_block"&gt;access_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as an access phase handler and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Note that this handler always runs &lt;em&gt;after&lt;/em&gt; the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_access_module.html" rel="nofollow"&gt;ngx_http_access_module&lt;/a&gt;. So the following will work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;deny&lt;/span&gt;    &lt;span class="pl-s"&gt;192.168.1.1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;allow&lt;/span&gt;   &lt;span class="pl-s"&gt;192.168.1.0&lt;/span&gt;&lt;span class="pl-c1"&gt;/24&lt;/span&gt;;
     &lt;span class="pl-k"&gt;allow&lt;/span&gt;   &lt;span class="pl-s"&gt;10.1.1.0&lt;/span&gt;&lt;span class="pl-c1"&gt;/16&lt;/span&gt;;
     &lt;span class="pl-k"&gt;deny&lt;/span&gt;   &lt;span class="pl-c1"&gt; all&lt;/span&gt;;

     &lt;span class="pl-k"&gt;access_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/mysql", { ... })&lt;/span&gt;
&lt;span class="pl-s"&gt;         ...&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, if a client IP address is in the blacklist, it will be denied before the MySQL query for more complex authentication is executed by &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that the &lt;a href="http://mdounin.ru/hg/ngx_http_auth_request_module/" rel="nofollow"&gt;ngx_auth_request&lt;/a&gt; module can be approximated by using &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;auth_request&lt;/span&gt; /auth;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/postgres_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be implemented in ngx_lua as:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;access_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/auth")&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.status == ngx.HTTP_OK then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.status == ngx.HTTP_FORBIDDEN then&lt;/span&gt;
&lt;span class="pl-s"&gt;             ngx.exit(res.status)&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/postgres_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As with other access phase handlers, &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; will &lt;em&gt;not&lt;/em&gt; run in subrequests.&lt;/p&gt;
&lt;p&gt;Note that when calling &lt;code&gt;ngx.exit(ngx.OK)&lt;/code&gt; within a &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; handler, the Nginx request processing control flow will still continue to the content handler. To terminate the current request from within a &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; handler, calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with status &amp;gt;= 200 (&lt;code&gt;ngx.HTTP_OK&lt;/code&gt;) and status &amp;lt; 300 (&lt;code&gt;ngx.HTTP_SPECIAL_RESPONSE&lt;/code&gt;) for successful quits and &lt;code&gt;ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/code&gt; (or its friends) for failures.&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;v0.9.20&lt;/code&gt; release, you can use the &lt;a href="#access_by_lua_no_postpone"&gt;access_by_lua_no_postpone&lt;/a&gt;
directive to control when to run this handler inside the "access" request-processing phase
of Nginx.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_block" class="anchor" aria-hidden="true" href="#access_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;access_by_lua_block&lt;/span&gt; {
     do_something("hello, world!\nhiya\n")
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_file" class="anchor" aria-hidden="true" href="#access_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid repeatedly reloading Nginx.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch just as in &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua" class="anchor" aria-hidden="true" href="#header_filter_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#header_filter_by_lua_block"&gt;header_filter_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Uses Lua code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; to define an output header filter.&lt;/p&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt; and &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of overriding a response header (or adding one if absent) in our Lua header filter:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;
     &lt;span class="pl-k"&gt;header_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.header.Foo = "blah"'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.2.1rc20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua_block" class="anchor" aria-hidden="true" href="#header_filter_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; {
     ngx.header["content-length"] = &lt;span class="pl-k"&gt;nil&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua_file" class="anchor" aria-hidden="true" href="#header_filter_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.2.1rc20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua" class="anchor" aria-hidden="true" href="#body_filter_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#body_filter_by_lua_block"&gt;body_filter_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Uses Lua code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; to define an output body filter.&lt;/p&gt;
&lt;p&gt;The input data chunk is passed via &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[1] (as a Lua string value) and the "eof" flag indicating the end of the response body data stream is passed via &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[2] (as a Lua boolean value).&lt;/p&gt;
&lt;p&gt;Behind the scene, the "eof" flag is just the &lt;code&gt;last_buf&lt;/code&gt; (for main requests) or &lt;code&gt;last_in_chain&lt;/code&gt; (for subrequests) flag of the Nginx chain link buffers. (Before the &lt;code&gt;v0.7.14&lt;/code&gt; release, the "eof" flag does not work at all in subrequests.)&lt;/p&gt;
&lt;p&gt;The output data stream can be aborted immediately by running the following Lua statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;ERROR&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will truncate the response body and usually result in incomplete and also invalid responses.&lt;/p&gt;
&lt;p&gt;The Lua code can pass its own modified version of the input data chunk to the downstream Nginx output body filters by overriding &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[1] with a Lua string or a Lua table of strings. For example, to transform all the lowercase letters in the response body, we can just write:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;
     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.arg[1] = string.upper(ngx.arg[1])'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When setting &lt;code&gt;nil&lt;/code&gt; or an empty Lua string value to &lt;code&gt;ngx.arg[1]&lt;/code&gt;, no data chunk will be passed to the downstream Nginx output filters at all.&lt;/p&gt;
&lt;p&gt;Likewise, new "eof" flag can also be specified by setting a boolean value to &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[2]. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/t &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; hello world;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; hiya globe;

     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local chunk = ngx.arg[1]&lt;/span&gt;
&lt;span class="pl-s"&gt;         if string.match(chunk, "hello") then&lt;/span&gt;
&lt;span class="pl-s"&gt;             ngx.arg[2] = true  -- new eof&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         -- just throw away any remaining chunk data&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.arg[1] = nil&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /t&lt;/code&gt; will just return the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is, when the body filter sees a chunk containing the word "hello", then it will set the "eof" flag to true immediately, resulting in truncated but still valid responses.&lt;/p&gt;
&lt;p&gt;When the Lua code may change the length of the response body, then it is required to always clear out the &lt;code&gt;Content-Length&lt;/code&gt; response header (if any) in a header filter to enforce streaming output, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-c"&gt;# fastcgi_pass/proxy_pass/...&lt;/span&gt;

     &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; { ngx.header.content_length = nil }
     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.arg[1] = string.len(ngx.arg[1]) .. "\\n"'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context due to the limitations in Nginx output filter's current implementation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; and &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nginx output filters may be called multiple times for a single request because response body may be delivered in chunks. Thus, the Lua code specified by in this directive may also run multiple times in the lifetime of a single HTTP request.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua_block" class="anchor" aria-hidden="true" href="#body_filter_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua_block { lua-script-str }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;body_filter_by_lua_block&lt;/span&gt; {
     &lt;span class="pl-k"&gt;local&lt;/span&gt; data, eof = ngx.arg[1], ngx.arg[2]
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua_file" class="anchor" aria-hidden="true" href="#body_filter_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua" class="anchor" aria-hidden="true" href="#log_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#log_by_lua_block"&gt;log_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the Lua source code inlined as the &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; at the &lt;code&gt;log&lt;/code&gt; request processing phase. This does not replace the current access logs, but runs before.&lt;/p&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of gathering average data for &lt;a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_response_time" rel="nofollow"&gt;$upstream_response_time&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; log_dict &lt;span class="pl-c1"&gt;5M&lt;/span&gt;;

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
         &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;

         &lt;span class="pl-k"&gt;log_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;             local log_dict = ngx.shared.log_dict&lt;/span&gt;
&lt;span class="pl-s"&gt;             local upstream_time = tonumber(ngx.var.upstream_response_time)&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             local sum = log_dict:get("upstream_time-sum") or 0&lt;/span&gt;
&lt;span class="pl-s"&gt;             sum = sum + upstream_time&lt;/span&gt;
&lt;span class="pl-s"&gt;             log_dict:set("upstream_time-sum", sum)&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             local newval, err = log_dict:incr("upstream_time-nb", 1)&lt;/span&gt;
&lt;span class="pl-s"&gt;             if not newval and err == "not found" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log_dict:add("upstream_time-nb", 0)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log_dict:incr("upstream_time-nb", 1)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         '&lt;/span&gt;;
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /status &lt;/span&gt;{
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             &lt;span class="pl-k"&gt;local&lt;/span&gt; log_dict = ngx.shared.log_dict
             &lt;span class="pl-k"&gt;local&lt;/span&gt; sum = log_dict:get(&lt;span class="pl-s"&gt;"upstream_time-sum"&lt;/span&gt;)
             &lt;span class="pl-k"&gt;local&lt;/span&gt; nb = log_dict:get(&lt;span class="pl-s"&gt;"upstream_time-nb"&lt;/span&gt;)

             &lt;span class="pl-k"&gt;if&lt;/span&gt; nb and sum then
                 ngx.say("&lt;span class="pl-k"&gt;average&lt;/span&gt; upstream response time: &lt;span class="pl-s"&gt;", sum / nb,&lt;/span&gt;
&lt;span class="pl-s"&gt;                         "&lt;/span&gt; (&lt;span class="pl-s"&gt;", nb, "&lt;/span&gt; reqs)&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;no data yet&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc31&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua_block" class="anchor" aria-hidden="true" href="#log_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;log_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua_file" class="anchor" aria-hidden="true" href="#log_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc31&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-balancer_by_lua_block" class="anchor" aria-hidden="true" href="#balancer_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;balancer_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;balancer_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;upstream&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code as an upstream balancer for any upstream entities defined
by the &lt;code&gt;upstream {}&lt;/code&gt; configuration block.&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;upstream&lt;/span&gt; &lt;span class="pl-en"&gt;foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;server&lt;/span&gt; &lt;span class="pl-s"&gt;127.0.0.1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;balancer_by_lua_block&lt;/span&gt; {
         -- &lt;span class="pl-k"&gt;use&lt;/span&gt; Lua to do something interesting here
         -- as &lt;span class="pl-s"&gt;a&lt;/span&gt; dynamic balancer
     }
 }

 server {
     location / {
         proxy_pass http://foo;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resulting Lua load balancer can work with any existing Nginx upstream modules
like &lt;a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_proxy&lt;/a&gt; and
&lt;a href="https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_fastcgi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, the Lua load balancer can work with the standard upstream connection pool mechanism,
i.e., the standard &lt;a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" rel="nofollow"&gt;keepalive&lt;/a&gt; directive.
Just ensure that the &lt;a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" rel="nofollow"&gt;keepalive&lt;/a&gt; directive
is used &lt;em&gt;after&lt;/em&gt; this &lt;code&gt;balancer_by_lua_block&lt;/code&gt; directive in a single &lt;code&gt;upstream {}&lt;/code&gt; configuration block.&lt;/p&gt;
&lt;p&gt;The Lua load balancer can totally ignore the list of servers defined in the &lt;code&gt;upstream {}&lt;/code&gt; block
and select peer from a completely dynamic server list (even changing per request) via the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/balancer.md"&gt;ngx.balancer&lt;/a&gt; module
from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;The Lua code handler registered by this directive might get called more than once in a single
downstream request when the Nginx upstream mechanism retries the request on conditions
specified by directives like the &lt;a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream" rel="nofollow"&gt;proxy_next_upstream&lt;/a&gt;
directive.&lt;/p&gt;
&lt;p&gt;This Lua code execution context does not support yielding, so Lua APIs that may yield
(like cosockets and "light threads") are disabled in this context. One can usually work
around this limitation by doing such operations in an earlier phase handler (like
&lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;) and passing along the result into this context
via the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-balancer_by_lua_file" class="anchor" aria-hidden="true" href="#balancer_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;balancer_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;balancer_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;upstream&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_need_request_body" class="anchor" aria-hidden="true" href="#lua_need_request_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_need_request_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_need_request_body &amp;lt;on|off&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Determines whether to force the request body data to be read before running rewrite/access/access_by_lua* or not. The Nginx core does not read the client request body by default and if request body data is required, then this directive should be turned &lt;code&gt;on&lt;/code&gt; or the &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; function should be called within the Lua code.&lt;/p&gt;
&lt;p&gt;To read the request body data within the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body" rel="nofollow"&gt;$request_body&lt;/a&gt; variable,
&lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; must have the same value as &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;. Because when the content length exceeds &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; but less than &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;, Nginx will buffer the data into a temporary file on the disk, which will lead to empty value in the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body" rel="nofollow"&gt;$request_body&lt;/a&gt; variable.&lt;/p&gt;
&lt;p&gt;If the current location includes &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; directives,
then the request body will be read just before the &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; code is run (and also at the
&lt;code&gt;rewrite&lt;/code&gt; phase). Similarly, if only &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; is specified,
the request body will not be read until the content handler's Lua code is
about to run (i.e., the request body will be read during the content phase).&lt;/p&gt;
&lt;p&gt;It is recommended however, to use the &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; and &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; functions for finer control over the request body reading process instead.&lt;/p&gt;
&lt;p&gt;This also applies to &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_certificate_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_certificate_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_certificate_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_certificate_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs user Lua code when Nginx is about to start the SSL handshake for the downstream
SSL (https) connections.&lt;/p&gt;
&lt;p&gt;It is particularly useful for setting the SSL certificate chain and the corresponding private key on a per-request
basis. It is also useful to load such handshake configurations nonblockingly from the remote (for example,
with the &lt;a href="#ngxsockettcp"&gt;cosocket&lt;/a&gt; API). And one can also do per-request OCSP stapling handling in pure
Lua here as well.&lt;/p&gt;
&lt;p&gt;Another typical use case is to do SSL handshake traffic control nonblockingly in this context,
with the help of the &lt;a href="https://github.com/openresty/lua-resty-limit-traffic"&gt;lua-resty-limit-traffic#readme&lt;/a&gt;
library, for example.&lt;/p&gt;
&lt;p&gt;One can also do interesting things with the SSL handshake requests from the client side, like
rejecting old SSL clients using the SSLv3 protocol or even below selectively.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
and &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;ngx.ocsp&lt;/a&gt; Lua modules
provided by the &lt;a href="https://github.com/openresty/lua-resty-core/#readme"&gt;lua-resty-core&lt;/a&gt;
library are particularly useful in this context. You can use the Lua API offered by these two Lua modules
to manipulate the SSL certificate chain and private key for the current SSL connection
being initiated.&lt;/p&gt;
&lt;p&gt;This Lua handler does not run at all, however, when Nginx/OpenSSL successfully resumes
the SSL session via SSL session IDs or TLS session tickets for the current SSL connection. In
other words, this Lua handler only runs when Nginx has to initiate a full SSL handshake.&lt;/p&gt;
&lt;p&gt;Below is a trivial example using the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt; module
at the same time:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;listen&lt;/span&gt; &lt;span class="pl-s"&gt;443&lt;/span&gt; ssl;
     &lt;span class="pl-k"&gt;server_name&lt;/span&gt;   test.com;

     &lt;span class="pl-k"&gt;ssl_certificate_by_lua_block&lt;/span&gt; {
         print("&lt;span class="pl-k"&gt;About&lt;/span&gt; to initiate &lt;span class="pl-s"&gt;a&lt;/span&gt; new SSL handshake!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location / {&lt;/span&gt;
&lt;span class="pl-s"&gt;         root html;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See more complicated examples in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
and &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;ngx.ocsp&lt;/a&gt;
Lua modules' official documentation.&lt;/p&gt;
&lt;p&gt;Uncaught Lua exceptions in the user Lua code immediately abort the current SSL session, so does the
&lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; call with an error code like &lt;code&gt;ngx.ERROR&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This Lua code execution context &lt;em&gt;does&lt;/em&gt; support yielding, so Lua APIs that may yield
(like cosockets, sleeping, and "light threads")
are enabled in this context.&lt;/p&gt;
&lt;p&gt;Note, however, you still need to configure the &lt;a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate" rel="nofollow"&gt;ssl_certificate&lt;/a&gt; and
&lt;a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate_key" rel="nofollow"&gt;ssl_certificate_key&lt;/a&gt;
directives even though you will not use this static certificate and private key at all. This is
because the NGINX core requires their appearance otherwise you are seeing the following error
while starting NGINX:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nginx: [emerg] no ssl configured for the server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This directive requires OpenSSL 1.0.2e or greater.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;official pre-built
packages&lt;/a&gt; for
&lt;a href="https://openresty.org/" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.9.7.2 or later, then everything should
work out of the box.&lt;/p&gt;
&lt;p&gt;If you are not using one of the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;OpenSSL
packages&lt;/a&gt; provided by
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;, you will need to apply patches to OpenSSL
in order to use this directive:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/openssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/openssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similarly, if you are not using the Nginx core shipped with
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.9.7.2 or later, you will need to apply
patches to the standard Nginx core:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/nginx-ssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/nginx-ssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_certificate_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_certificate_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_certificate_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_certificate_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_fetch_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_session_fetch_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_fetch_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_fetch_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code to look up and load the SSL session (if any) according to the session ID
provided by the current SSL handshake request for the downstream.&lt;/p&gt;
&lt;p&gt;The Lua API for obtaining the current session ID and loading a cached SSL session data
is provided in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl/session.md"&gt;ngx.ssl.session&lt;/a&gt;
Lua module shipped with the &lt;a href="https://github.com/openresty/lua-resty-core#readme"&gt;lua-resty-core&lt;/a&gt;
library.&lt;/p&gt;
&lt;p&gt;Lua APIs that may yield, like &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt; and &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;,
are enabled in this context.&lt;/p&gt;
&lt;p&gt;This hook, together with the &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt; hook,
can be used to implement distributed caching mechanisms in pure Lua (based
on the &lt;a href="#ngxsockettcp"&gt;cosocket&lt;/a&gt; API, for example). If a cached SSL session is found
and loaded into the current SSL connection context,
SSL session resumption can then get immediately initiated and bypass the full SSL handshake process which is very expensive in terms of CPU time.&lt;/p&gt;
&lt;p&gt;Please note that TLS session tickets are very different and it is the clients' responsibility
to cache the SSL session state when session tickets are used. SSL session resumptions based on
TLS session tickets would happen automatically without going through this hook (nor the
&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt; hook). This hook is mainly
for older or less capable SSL clients that can only do SSL sessions by session IDs.&lt;/p&gt;
&lt;p&gt;When &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt; is specified at the same time,
this hook usually runs before &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.
When the SSL session is found and successfully loaded for the current SSL connection,
SSL session resumption will happen and thus bypass the &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;
hook completely. In this case, Nginx also bypasses the &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;
hook, for obvious reasons.&lt;/p&gt;
&lt;p&gt;To easily test this hook locally with a modern web browser, you can temporarily put the following line
in your https server block to disable the TLS session ticket support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl_session_tickets off;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But do not forget to comment this line out before publishing your site to the world.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;official pre-built packages&lt;/a&gt; for &lt;a href="https://openresty.org/" rel="nofollow"&gt;OpenResty&lt;/a&gt;
1.11.2.1 or later, then everything should work out of the box.&lt;/p&gt;
&lt;p&gt;If you are not using one of the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;OpenSSL
packages&lt;/a&gt; provided by
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;, you will need to apply patches to OpenSSL
in order to use this directive:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/openssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/openssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similarly, if you are not using the Nginx core shipped with
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.11.2.1 or later, you will need to apply
patches to the standard Nginx core:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/nginx-ssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/nginx-ssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that this directive can only be used in the &lt;strong&gt;http context&lt;/strong&gt; starting
with the &lt;code&gt;v0.10.7&lt;/code&gt; release since SSL session resumption happens
before server name dispatch.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_fetch_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_session_fetch_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_fetch_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_fetch_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or rather, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_store_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_session_store_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_store_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_store_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-after-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code to fetch and save the SSL session (if any) according to the session ID
provided by the current SSL handshake request for the downstream. The saved or cached SSL
session data can be used for future SSL connections to resume SSL sessions without going
through the full SSL handshake process (which is very expensive in terms of CPU time).&lt;/p&gt;
&lt;p&gt;Lua APIs that may yield, like &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt; and &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;,
are &lt;em&gt;disabled&lt;/em&gt; in this context. You can still, however, use the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API
to create 0-delay timers to save the SSL session data asynchronously to external services (like &lt;code&gt;redis&lt;/code&gt; or &lt;code&gt;memcached&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The Lua API for obtaining the current session ID and the associated session state data
is provided in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl/session.md#readme"&gt;ngx.ssl.session&lt;/a&gt;
Lua module shipped with the &lt;a href="https://github.com/openresty/lua-resty-core#readme"&gt;lua-resty-core&lt;/a&gt;
library.&lt;/p&gt;
&lt;p&gt;To easily test this hook locally with a modern web browser, you can temporarily put the following line
in your https server block to disable the TLS session ticket support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl_session_tickets off;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But do not forget to comment this line out before publishing your site to the world.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_store_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_session_store_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_store_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_store_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-after-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or rather, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_shared_dict" class="anchor" aria-hidden="true" href="#lua_shared_dict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_shared_dict&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_shared_dict &amp;lt;name&amp;gt; &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Declares a shared memory zone, &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, to serve as storage for the shm based Lua dictionary &lt;code&gt;ngx.shared.&amp;lt;name&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Shared memory zones are always shared by all the Nginx worker processes in the current Nginx server instance.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; argument accepts size units such as &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;m&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;http&lt;/span&gt; {
     &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;10m&lt;/span&gt;;
     ...
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The hard-coded minimum size is 8KB while the practical minimum size depends
on actual user data set (some people start with 12KB).&lt;/p&gt;
&lt;p&gt;See &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_connect_timeout" class="anchor" aria-hidden="true" href="#lua_socket_connect_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_connect_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_connect_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_connect_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method and can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_send_timeout" class="anchor" aria-hidden="true" href="#lua_socket_send_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_send_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_send_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_send_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_send_lowat" class="anchor" aria-hidden="true" href="#lua_socket_send_lowat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_send_lowat&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_send_lowat &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_send_lowat 0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the &lt;code&gt;lowat&lt;/code&gt; (low water) value for the cosocket send buffer.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_read_timeout" class="anchor" aria-hidden="true" href="#lua_socket_read_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_read_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_read_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_read_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt; method and iterator functions returned by the &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt; method. This setting can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_buffer_size" class="anchor" aria-hidden="true" href="#lua_socket_buffer_size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_buffer_size&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_buffer_size &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_buffer_size 4k/8k&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the buffer size used by cosocket reading operations.&lt;/p&gt;
&lt;p&gt;This buffer does not have to be that big to hold everything at the same time because cosocket supports 100% non-buffered reading and parsing. So even &lt;code&gt;1&lt;/code&gt; byte buffer size should still work everywhere but the performance could be terrible.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_pool_size" class="anchor" aria-hidden="true" href="#lua_socket_pool_size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_pool_size&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_pool_size &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_pool_size 30&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the size limit (in terms of connection count) for every cosocket connection pool associated with every remote server (i.e., identified by either the host-port pair or the unix domain socket file path).&lt;/p&gt;
&lt;p&gt;Default to 30 connections for every pool.&lt;/p&gt;
&lt;p&gt;When the connection pool exceeds the available size limit, the least recently used (idle) connection already in the pool will be closed to make room for the current connection.&lt;/p&gt;
&lt;p&gt;Note that the cosocket connection pool is per Nginx worker process rather than per Nginx server instance, so size limit specified here also applies to every single Nginx worker process.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_keepalive_timeout" class="anchor" aria-hidden="true" href="#lua_socket_keepalive_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_keepalive_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_keepalive_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_keepalive_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default maximal idle time of the connections in the cosocket built-in connection pool. When this timeout reaches, idle connections will be closed and removed from the pool. This setting can be overridden by cosocket objects' &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_log_errors" class="anchor" aria-hidden="true" href="#lua_socket_log_errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_log_errors&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_log_errors on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_log_errors on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive can be used to toggle error logging when a failure occurs for the TCP or UDP cosockets. If you are already doing proper error handling and logging in your Lua code, then it is recommended to turn this directive off to prevent data flushing in your Nginx error log files (which is usually rather expensive).&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_ciphers" class="anchor" aria-hidden="true" href="#lua_ssl_ciphers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_ciphers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_ciphers &amp;lt;ciphers&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_ciphers DEFAULT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the enabled ciphers for requests to a SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method. The ciphers are specified in the format understood by the OpenSSL library.&lt;/p&gt;
&lt;p&gt;The full list can be viewed using the “openssl ciphers” command.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_crl" class="anchor" aria-hidden="true" href="#lua_ssl_crl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_crl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_crl &amp;lt;file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies a file with revoked certificates (CRL) in the PEM format used to verify the certificate of the SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_protocols" class="anchor" aria-hidden="true" href="#lua_ssl_protocols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_protocols&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2] [TLSv1.3]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables the specified protocols for requests to a SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The support for the &lt;code&gt;TLSv1.3&lt;/code&gt; parameter requires version &lt;code&gt;v0.10.12&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; OpenSSL 1.1.1.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_trusted_certificate" class="anchor" aria-hidden="true" href="#lua_ssl_trusted_certificate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_trusted_certificate&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_trusted_certificate &amp;lt;file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies a file path with trusted CA certificates in the PEM format used to verify the certificate of the SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_verify_depth" class="anchor" aria-hidden="true" href="#lua_ssl_verify_depth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_verify_depth&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_verify_depth &amp;lt;number&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_verify_depth 1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the verification depth in the server certificates chain.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_http10_buffering" class="anchor" aria-hidden="true" href="#lua_http10_buffering"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_http10_buffering&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_http10_buffering on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_http10_buffering on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables or disables automatic response buffering for HTTP 1.0 (or older) requests. This buffering mechanism is mainly used for HTTP 1.0 keep-alive which relies on a proper &lt;code&gt;Content-Length&lt;/code&gt; response header.&lt;/p&gt;
&lt;p&gt;If the Lua code explicitly sets a &lt;code&gt;Content-Length&lt;/code&gt; response header before sending the headers (either explicitly via &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or implicitly via the first &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; or &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; call), then the HTTP 1.0 response buffering will be disabled even when this directive is turned on.&lt;/p&gt;
&lt;p&gt;To output very large response data in a streaming fashion (via the &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt; call, for example), this directive MUST be turned off to minimize memory usage.&lt;/p&gt;
&lt;p&gt;This directive is turned &lt;code&gt;on&lt;/code&gt; by default.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_no_postpone" class="anchor" aria-hidden="true" href="#rewrite_by_lua_no_postpone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_no_postpone&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_no_postpone on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_no_postpone off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether or not to disable postponing &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; directives to run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase. By default, this directive is turned off and the Lua code is postponed to run at the end of the &lt;code&gt;rewrite&lt;/code&gt; phase.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_no_postpone" class="anchor" aria-hidden="true" href="#access_by_lua_no_postpone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_no_postpone&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_no_postpone on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;access_by_lua_no_postpone off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether or not to disable postponing &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt; directives to run at the end of the &lt;code&gt;access&lt;/code&gt; request-processing phase. By default, this directive is turned off and the Lua code is postponed to run at the end of the &lt;code&gt;access&lt;/code&gt; phase.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_transform_underscores_in_response_headers" class="anchor" aria-hidden="true" href="#lua_transform_underscores_in_response_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_transform_underscores_in_response_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_transform_underscores_in_response_headers on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_transform_underscores_in_response_headers on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether to transform underscores (&lt;code&gt;_&lt;/code&gt;) in the response header names specified in the &lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt; API to hypens (&lt;code&gt;-&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_check_client_abort" class="anchor" aria-hidden="true" href="#lua_check_client_abort"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_check_client_abort&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_check_client_abort on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_check_client_abort off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls whether to check for premature client connection abortion.&lt;/p&gt;
&lt;p&gt;When this directive is on, the ngx_lua module will monitor the premature connection close event on the downstream connections and when there is such an event, it will call the user Lua function callback (registered by &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;) or just stop and clean up all the Lua "light threads" running in the current request's request handler when there is no user callback function registered.&lt;/p&gt;
&lt;p&gt;According to the current implementation, however, if the client closes the connection before the Lua code finishes reading the request body data via &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;, then ngx_lua will neither stop all the running "light threads" nor call the user callback (if &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt; has been called). Instead, the reading operation on &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; will just return the error message "client aborted" as the second return value (the first return value is surely &lt;code&gt;nil&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;When TCP keepalive is disabled, it is relying on the client side to close the socket gracefully (by sending a &lt;code&gt;FIN&lt;/code&gt; packet or something like that). For (soft) real-time web applications, it is highly recommended to configure the &lt;a href="http://tldp.org/HOWTO/TCP-Keepalive-HOWTO/overview.html" rel="nofollow"&gt;TCP keepalive&lt;/a&gt; support in your system's TCP stack implementation in order to detect "half-open" TCP connections in time.&lt;/p&gt;
&lt;p&gt;For example, on Linux, you can configure the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#listen" rel="nofollow"&gt;listen&lt;/a&gt; directive in your &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;listen&lt;/span&gt; &lt;span class="pl-s"&gt;80&lt;/span&gt; so_keepalive=2s:2s:8;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On FreeBSD, you can only tune the system-wide configuration for TCP keepalive, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sysctl net.inet.tcp.keepintvl=2000
# sysctl net.inet.tcp.keepidle=2000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.7.4&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_max_pending_timers" class="anchor" aria-hidden="true" href="#lua_max_pending_timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_max_pending_timers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_max_pending_timers &amp;lt;count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_max_pending_timers 1024&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the maximum number of pending timers allowed.&lt;/p&gt;
&lt;p&gt;Pending timers are those timers that have not expired yet.&lt;/p&gt;
&lt;p&gt;When exceeding this limit, the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; call will immediately return &lt;code&gt;nil&lt;/code&gt; and the error string "too many pending timers".&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_max_running_timers" class="anchor" aria-hidden="true" href="#lua_max_running_timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_max_running_timers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_max_running_timers &amp;lt;count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_max_running_timers 256&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the maximum number of "running timers" allowed.&lt;/p&gt;
&lt;p&gt;Running timers are those timers whose user callback functions are still running.&lt;/p&gt;
&lt;p&gt;When exceeding this limit, Nginx will stop running the callbacks of newly expired timers and log an error message "N lua_max_running_timers are not enough" where "N" is the current value of this directive.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_sa_restart" class="anchor" aria-hidden="true" href="#lua_sa_restart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_sa_restart&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_sa_restart on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_sa_restart on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When enabled, this module will set the &lt;code&gt;SA_RESTART&lt;/code&gt; flag on Nginx workers signal dispositions.&lt;/p&gt;
&lt;p&gt;This allows Lua I/O primitives to not be interrupted by Nginx's handling of various signals.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-nginx-api-for-lua" class="anchor" aria-hidden="true" href="#nginx-api-for-lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx API for Lua&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-constants"&gt;Core constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-method-constants"&gt;HTTP method constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-log-level-constants"&gt;Nginx log level constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#print"&gt;print&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxstatus"&gt;ngx.status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrespget_headers"&gt;ngx.resp.get_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqis_internal"&gt;ngx.req.is_internal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqstart_time"&gt;ngx.req.start_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqhttp_version"&gt;ngx.req.http_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqraw_header"&gt;ngx.req.raw_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_method"&gt;ngx.req.get_method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_method"&gt;ngx.req.set_method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_uri_args"&gt;ngx.req.set_uri_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_uri_args"&gt;ngx.req.get_uri_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_post_args"&gt;ngx.req.get_post_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_header"&gt;ngx.req.set_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqclear_header"&gt;ngx.req.clear_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_body_file"&gt;ngx.req.set_body_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxheaders_sent"&gt;ngx.headers_sent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxeof"&gt;ngx.eof&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxescape_uri"&gt;ngx.escape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxunescape_uri"&gt;ngx.unescape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxdecode_args"&gt;ngx.decode_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxencode_base64"&gt;ngx.encode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxdecode_base64"&gt;ngx.decode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxhmac_sha1"&gt;ngx.hmac_sha1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxmd5_bin"&gt;ngx.md5_bin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsha1_bin"&gt;ngx.sha1_bin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxquote_sql_str"&gt;ngx.quote_sql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtoday"&gt;ngx.today&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocaltime"&gt;ngx.localtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxutctime"&gt;ngx.utctime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcookie_time"&gt;ngx.cookie_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxhttp_time"&gt;ngx.http_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxparse_http_time"&gt;ngx.parse_http_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxis_subrequest"&gt;ngx.is_subrequest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrefind"&gt;ngx.re.find&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxregmatch"&gt;ngx.re.gmatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget"&gt;ngx.shared.DICT.get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_stale"&gt;ngx.shared.DICT.get_stale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictset"&gt;ngx.shared.DICT.set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_set"&gt;ngx.shared.DICT.safe_set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictadd"&gt;ngx.shared.DICT.add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_add"&gt;ngx.shared.DICT.safe_add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictreplace"&gt;ngx.shared.DICT.replace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictdelete"&gt;ngx.shared.DICT.delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictincr"&gt;ngx.shared.DICT.incr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpush"&gt;ngx.shared.DICT.lpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpush"&gt;ngx.shared.DICT.rpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpop"&gt;ngx.shared.DICT.lpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpop"&gt;ngx.shared.DICT.rpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictllen"&gt;ngx.shared.DICT.llen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictttl"&gt;ngx.shared.DICT.ttl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictexpire"&gt;ngx.shared.DICT.expire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_all"&gt;ngx.shared.DICT.flush_all&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_expired"&gt;ngx.shared.DICT.flush_expired&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_keys"&gt;ngx.shared.DICT.get_keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictcapacity"&gt;ngx.shared.DICT.capacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictfree_space"&gt;ngx.shared.DICT.free_space&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksetpeername"&gt;udpsock:setpeername&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksend"&gt;udpsock:send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockreceive"&gt;udpsock:receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockclose"&gt;udpsock:close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksettimeout"&gt;udpsock:settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketstream"&gt;ngx.socket.stream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockconnect"&gt;tcpsock:connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksend"&gt;tcpsock:send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceive"&gt;tcpsock:receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveany"&gt;tcpsock:receiveany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveuntil"&gt;tcpsock:receiveuntil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockclose"&gt;tcpsock:close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeout"&gt;tcpsock:settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeouts"&gt;tcpsock:settimeouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetoption"&gt;tcpsock:setoption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetkeepalive"&gt;tcpsock:setkeepalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockgetreusedtimes"&gt;tcpsock:getreusedtimes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketconnect"&gt;ngx.socket.connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxget_phase"&gt;ngx.get_phase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadkill"&gt;ngx.thread.kill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerevery"&gt;ngx.timer.every&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerrunning_count"&gt;ngx.timer.running_count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerpending_count"&gt;ngx.timer.pending_count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigsubsystem"&gt;ngx.config.subsystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigdebug"&gt;ngx.config.debug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigprefix"&gt;ngx.config.prefix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfignginx_version"&gt;ngx.config.nginx_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfignginx_configure"&gt;ngx.config.nginx_configure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigngx_lua_version"&gt;ngx.config.ngx_lua_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerexiting"&gt;ngx.worker.exiting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerpid"&gt;ngx.worker.pid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkercount"&gt;ngx.worker.count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerid"&gt;ngx.worker.id&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsemaphore"&gt;ngx.semaphore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxbalancer"&gt;ngx.balancer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxssl"&gt;ngx.ssl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxocsp"&gt;ngx.ocsp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ndkset_vardirective"&gt;ndk.set_var.DIRECTIVE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutineresume"&gt;coroutine.resume&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutineyield"&gt;coroutine.yield&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinewrap"&gt;coroutine.wrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinerunning"&gt;coroutine.running&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinestatus"&gt;coroutine.status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The various &lt;code&gt;*_by_lua&lt;/code&gt;, &lt;code&gt;*_by_lua_block&lt;/code&gt; and &lt;code&gt;*_by_lua_file&lt;/code&gt; configuration directives serve as gateways to the Lua API within the &lt;code&gt;nginx.conf&lt;/code&gt; file. The Nginx Lua API described below can only be called within the user Lua code run in the context of these configuration directives.&lt;/p&gt;
&lt;p&gt;The API is exposed to Lua in the form of two standard packages &lt;code&gt;ngx&lt;/code&gt; and &lt;code&gt;ndk&lt;/code&gt;. These packages are in the default global scope within ngx_lua and are always available within ngx_lua directives.&lt;/p&gt;
&lt;p&gt;The packages can be introduced into external Lua modules like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; say &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;say&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.foo&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;say&lt;/span&gt;(a)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use of the &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-package.seeall" rel="nofollow"&gt;package.seeall&lt;/a&gt; flag is strongly discouraged due to its various bad side-effects.&lt;/p&gt;
&lt;p&gt;It is also possible to directly require the packages in external Lua modules:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ngx &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ngx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ndk &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ndk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The ability to require these packages was introduced in the &lt;code&gt;v0.2.1rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Network I/O operations in user code should only be done through the Nginx Lua API calls as the Nginx event loop may be blocked and performance drop off dramatically otherwise. Disk operations with relatively small amount of data can be done using the standard Lua &lt;code&gt;io&lt;/code&gt; library but huge file reading and writing should be avoided wherever possible as they may block the Nginx process significantly. Delegating all network and disk I/O operations to Nginx's subrequests (via the &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; method and similar) is strongly recommended for maximum performance.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxarg" class="anchor" aria-hidden="true" href="#ngxarg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.arg&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val = ngx.arg[index]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When this is used in the context of the &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt; directives, this table is read-only and holds the input arguments to the config directives:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; value &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;arg&lt;/span&gt;[n]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is an example&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;32&lt;/span&gt;;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;56&lt;/span&gt;;

     &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;
         '&lt;span class="pl-c1"&gt;return&lt;/span&gt; tonumber(ngx.arg[1]) + tonumber(ngx.arg[2])&lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     echo &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that writes out &lt;code&gt;88&lt;/code&gt;, the sum of &lt;code&gt;32&lt;/code&gt; and &lt;code&gt;56&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When this table is used in the context of &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua*&lt;/a&gt;, the first element holds the input data chunk to the output filter code and the second element holds the boolean flag for the "eof" flag indicating the end of the whole output data stream.&lt;/p&gt;
&lt;p&gt;The data chunk and "eof" flag passed to the downstream Nginx output filters can also be overridden by assigning values directly to the corresponding table elements. When setting &lt;code&gt;nil&lt;/code&gt; or an empty Lua string value to &lt;code&gt;ngx.arg[1]&lt;/code&gt;, no data chunk will be passed to the downstream Nginx output filters at all.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxvarvariable" class="anchor" aria-hidden="true" href="#ngxvarvariable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.var.VARIABLE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.var.VAR_NAME&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Read and write Nginx variable values.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.var.some_nginx_variable_name
 ngx.var.&lt;span class="pl-k"&gt;some_nginx_variable_name&lt;/span&gt; = value&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that only already defined Nginx variables can be written to.
For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$my_var&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# this line is required to create $my_var at config time&lt;/span&gt;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.var.&lt;span class="pl-k"&gt;my_var&lt;/span&gt; = &lt;span class="pl-s"&gt;123&lt;/span&gt;;
         ...
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, Nginx variables cannot be created on-the-fly.&lt;/p&gt;
&lt;p&gt;Some special Nginx variables like &lt;code&gt;$args&lt;/code&gt; and &lt;code&gt;$limit_rate&lt;/code&gt; can be assigned a value,
many others are not, like &lt;code&gt;$query_string&lt;/code&gt;, &lt;code&gt;$arg_PARAMETER&lt;/code&gt;, and &lt;code&gt;$http_NAME&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Nginx regex group capturing variables &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt;, and etc, can be read by this
interface as well, by writing &lt;code&gt;ngx.var[1]&lt;/code&gt;, &lt;code&gt;ngx.var[2]&lt;/code&gt;, &lt;code&gt;ngx.var[3]&lt;/code&gt;, and etc.&lt;/p&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.var.Foo&lt;/code&gt; to a &lt;code&gt;nil&lt;/code&gt; value will unset the &lt;code&gt;$Foo&lt;/code&gt; Nginx variable.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; When reading from an Nginx variable, Nginx will allocate memory in the per-request memory pool which is freed only at request termination. So when you need to read from an Nginx variable repeatedly in your Lua code, cache the Nginx variable value to your own Lua variable, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; val &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;some_var&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;- use the val repeatedly later&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to prevent (temporary) memory leaking within the current request's lifetime. Another way of caching the result is to use the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table.&lt;/p&gt;
&lt;p&gt;Undefined Nginx variables are evaluated to &lt;code&gt;nil&lt;/code&gt; while uninitialized (but defined) Nginx variables are evaluated to an empty Lua string.&lt;/p&gt;
&lt;p&gt;This API requires a relatively expensive metamethod call and it is recommended to avoid using it on hot code paths.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-core-constants" class="anchor" aria-hidden="true" href="#core-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, *log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-c1"&gt;OK&lt;/span&gt; (&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;ERROR&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;AGAIN&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;DONE&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;DECLINED&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that only three of these constants are utilized by the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; (i.e., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; accepts &lt;code&gt;ngx.OK&lt;/code&gt;, &lt;code&gt;ngx.ERROR&lt;/code&gt;, and &lt;code&gt;ngx.DECLINED&lt;/code&gt; as input).&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-smi"&gt;null&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;ngx.null&lt;/code&gt; constant is a &lt;code&gt;NULL&lt;/code&gt; light userdata usually used to represent nil values in Lua tables etc and is similar to the &lt;a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" rel="nofollow"&gt;lua-cjson&lt;/a&gt; library's &lt;code&gt;cjson.null&lt;/code&gt; constant. This constant was first introduced in the &lt;code&gt;v0.5.0rc5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.DECLINED&lt;/code&gt; constant was first introduced in the &lt;code&gt;v0.5.0rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-http-method-constants" class="anchor" aria-hidden="true" href="#http-method-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP method constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ngx.HTTP_GET
  ngx.HTTP_HEAD
  ngx.HTTP_PUT
  ngx.HTTP_POST
  ngx.HTTP_DELETE
  ngx.HTTP_OPTIONS   (added in the v0.5.0rc24 release)
  ngx.HTTP_MKCOL     (added in the v0.8.2 release)
  ngx.HTTP_COPY      (added in the v0.8.2 release)
  ngx.HTTP_MOVE      (added in the v0.8.2 release)
  ngx.HTTP_PROPFIND  (added in the v0.8.2 release)
  ngx.HTTP_PROPPATCH (added in the v0.8.2 release)
  ngx.HTTP_LOCK      (added in the v0.8.2 release)
  ngx.HTTP_UNLOCK    (added in the v0.8.2 release)
  ngx.HTTP_PATCH     (added in the v0.8.2 release)
  ngx.HTTP_TRACE     (added in the v0.8.2 release)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These constants are usually used in &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; method calls.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-http-status-constants" class="anchor" aria-hidden="true" href="#http-status-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP status constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt;   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CONTINUE (100) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SWITCHING_PROTOCOLS (101) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_OK (200)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CREATED (201)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_ACCEPTED (202) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NO_CONTENT (204) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PARTIAL_CONTENT (206) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SPECIAL_RESPONSE (300)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_MOVED_PERMANENTLY (301)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_MOVED_TEMPORARILY (302)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SEE_OTHER (303)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_MODIFIED (304)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_TEMPORARY_REDIRECT (307) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PERMANENT_REDIRECT (308)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_BAD_REQUEST (400)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_UNAUTHORIZED (401)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PAYMENT_REQUIRED (402) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_FORBIDDEN (403)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_FOUND (404)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_ALLOWED (405)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_ACCEPTABLE (406) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_REQUEST_TIMEOUT (408) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CONFLICT (409) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_GONE (410)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_UPGRADE_REQUIRED (426) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_TOO_MANY_REQUESTS (429) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CLOSE (444) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_ILLEGAL (451) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_INTERNAL_SERVER_ERROR (500)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_METHOD_NOT_IMPLEMENTED (501)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_BAD_GATEWAY (502) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SERVICE_UNAVAILABLE (503)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_GATEWAY_TIMEOUT (504) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.3.1rc38 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_VERSION_NOT_SUPPORTED (505) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_INSUFFICIENT_STORAGE (507) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nginx-log-level-constants" class="anchor" aria-hidden="true" href="#nginx-log-level-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx log level constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-smi"&gt;STDERR&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;EMERG&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;ALERT&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;CRIT&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;WARN&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;NOTICE&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;INFO&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;DEBUG&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These constants are usually used by the &lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-print" class="anchor" aria-hidden="true" href="#print"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;print&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;print(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Writes argument values into the Nginx &lt;code&gt;error.log&lt;/code&gt; file with the &lt;code&gt;ngx.NOTICE&lt;/code&gt; log level.&lt;/p&gt;
&lt;p&gt;It is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;NOTICE&lt;/span&gt;, &lt;span class="pl-c1"&gt;...&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; arguments are accepted and result in literal &lt;code&gt;"nil"&lt;/code&gt; strings while Lua booleans result in literal &lt;code&gt;"true"&lt;/code&gt; or &lt;code&gt;"false"&lt;/code&gt; strings. And the &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;There is a hard coded &lt;code&gt;2048&lt;/code&gt; byte limitation on error message lengths in the Nginx core. This limit includes trailing newlines and leading time stamps. If the message size exceeds this limit, Nginx will truncate the message text accordingly. This limit can be manually modified by editing the &lt;code&gt;NGX_MAX_ERROR_STR&lt;/code&gt; macro definition in the &lt;code&gt;src/core/ngx_log.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxctx" class="anchor" aria-hidden="true" href="#ngxctx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ctx&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This table can be used to store per-request Lua context data and has a life time identical to the current request (as with the Nginx variables).&lt;/p&gt;
&lt;p&gt;Consider the following example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = 76
     }
     &lt;span class="pl-k"&gt;access_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = ngx.ctx.foo + 3
     }
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say(ngx.ctx.foo)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /test&lt;/code&gt; will yield the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; 79&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, the &lt;code&gt;ngx.ctx.foo&lt;/code&gt; entry persists across the rewrite, access, and content phases of a request.&lt;/p&gt;
&lt;p&gt;Every request, including subrequests, has its own copy of the table. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;sub&lt;/span&gt; pre: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.ctx.blah = 32&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;sub post: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt; location /main {&lt;/span&gt;
&lt;span class="pl-s"&gt;     content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.ctx.blah = 73&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;main pre: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("&lt;/span&gt;/sub&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;main post: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /main&lt;/code&gt; will give the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; main pre: 73
 sub pre: nil
 sub post: 32
 main post: 73&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, modification of the &lt;code&gt;ngx.ctx.blah&lt;/code&gt; entry in the subrequest does not affect the one in the parent request. This is because they have two separate versions of &lt;code&gt;ngx.ctx.blah&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Internal redirection will destroy the original request &lt;code&gt;ngx.ctx&lt;/code&gt; data (if any) and the new request will have an empty &lt;code&gt;ngx.ctx&lt;/code&gt; table. For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/new &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say(ngx.ctx.foo)
     }
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/orig &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"hello"&lt;/span&gt;
         ngx.exec("/new")
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /orig&lt;/code&gt; will give&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; nil&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;rather than the original &lt;code&gt;"hello"&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Arbitrary data values, including Lua closures and nested tables, can be inserted into this "magic" table. It also allows the registration of custom meta methods.&lt;/p&gt;
&lt;p&gt;Overriding &lt;code&gt;ngx.ctx&lt;/code&gt; with a new Lua table is also supported, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;, bar &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;54&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When being used in the context of &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt;, this table just has the same lifetime of the current Lua handler.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.ctx&lt;/code&gt; lookup requires relatively expensive metamethod calls and it is much slower than explicitly passing per-request data along by your own function arguments. So do not abuse this API for saving your own function arguments because it usually has quite some performance impact.&lt;/p&gt;
&lt;p&gt;Because of the metamethod magic, never "local" the &lt;code&gt;ngx.ctx&lt;/code&gt; table outside your Lua function scope on the Lua module level due to &lt;a href="#data-sharing-within-an-nginx-worker"&gt;worker-level data sharing&lt;/a&gt;. For example, the following is bad:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mymodule.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; the following line is bad since ngx.ctx is a per-request&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; data while this &amp;lt;code&amp;gt;ctx&amp;lt;/code&amp;gt; variable is on the Lua module level&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; and thus is per-nginx-worker.&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;ctx&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.main&lt;/span&gt;()
     ctx.&lt;span class="pl-smi"&gt;foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the following instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mymodule.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.main&lt;/span&gt;(&lt;span class="pl-smi"&gt;ctx&lt;/span&gt;)
     ctx.&lt;span class="pl-smi"&gt;foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, let the caller pass the &lt;code&gt;ctx&lt;/code&gt; table explicitly via a function argument.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocationcapture" class="anchor" aria-hidden="true" href="#ngxlocationcapture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.location.capture&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res = ngx.location.capture(uri, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Issues a synchronous but still non-blocking &lt;em&gt;Nginx Subrequest&lt;/em&gt; using &lt;code&gt;uri&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Nginx's subrequests provide a powerful way to make non-blocking internal requests to other locations configured with disk file directory or &lt;em&gt;any&lt;/em&gt; other Nginx C modules like &lt;code&gt;ngx_proxy&lt;/code&gt;, &lt;code&gt;ngx_fastcgi&lt;/code&gt;, &lt;code&gt;ngx_memc&lt;/code&gt;,
&lt;code&gt;ngx_postgres&lt;/code&gt;, &lt;code&gt;ngx_drizzle&lt;/code&gt;, and even ngx_lua itself and etc etc etc.&lt;/p&gt;
&lt;p&gt;Also note that subrequests just mimic the HTTP interface but there is &lt;em&gt;no&lt;/em&gt; extra HTTP/TCP traffic &lt;em&gt;nor&lt;/em&gt; IPC involved. Everything works internally, efficiently, on the C level.&lt;/p&gt;
&lt;p&gt;Subrequests are completely different from HTTP 301/302 redirection (via &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;) and internal redirection (via &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;You should always read the request body (by either calling &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; or configuring &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; on) before initiating a subrequest.&lt;/p&gt;
&lt;p&gt;This API function (as well as &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;) always buffers the whole response body of the subrequest in memory. Thus, you should use &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;
and streaming processing instead if you have to handle large subrequest responses.&lt;/p&gt;
&lt;p&gt;Here is a basic example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(uri)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Returns a Lua table with 4 slots: &lt;code&gt;res.status&lt;/code&gt;, &lt;code&gt;res.header&lt;/code&gt;, &lt;code&gt;res.body&lt;/code&gt;, and &lt;code&gt;res.truncated&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.status&lt;/code&gt; holds the response status code for the subrequest response.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.header&lt;/code&gt; holds all the response headers of the
subrequest and it is a normal Lua table. For multi-value response headers,
the value is a Lua (array) table that holds all the values in the order that
they appear. For instance, if the subrequest response headers contain the following
lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Set-Cookie: a=3
 Set-Cookie: foo=bar
 Set-Cookie: baz=blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;res.header["Set-Cookie"]&lt;/code&gt; will be evaluated to the table value
&lt;code&gt;{"a=3", "foo=bar", "baz=blah"}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.body&lt;/code&gt; holds the subrequest's response body data, which might be truncated. You always need to check the &lt;code&gt;res.truncated&lt;/code&gt; boolean flag to see if &lt;code&gt;res.body&lt;/code&gt; contains truncated data. The data truncation here can only be caused by those unrecoverable errors in your subrequests like the cases that the remote end aborts the connection prematurely in the middle of the response body data stream or a read timeout happens when your subrequest is receiving the response body data from the remote.&lt;/p&gt;
&lt;p&gt;URI query strings can be concatenated to URI itself, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo/bar?a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Named locations like &lt;code&gt;@foo&lt;/code&gt; are not allowed due to a limitation in
the Nginx core. Use normal locations combined with the &lt;code&gt;internal&lt;/code&gt; directive to
prepare internal-only locations.&lt;/p&gt;
&lt;p&gt;An optional option table can be fed as the second
argument, which supports the options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt;
specify the subrequest's request method, which only accepts constants like &lt;code&gt;ngx.HTTP_POST&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;body&lt;/code&gt;
specify the subrequest's request body (string value only).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;args&lt;/code&gt;
specify the subrequest's URI query arguments (both string value and Lua tables are accepted)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctx&lt;/code&gt;
specify a Lua table to be the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table for the subrequest. It can be the current request's &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table, which effectively makes the parent and its subrequest to share exactly the same context table. This option was first introduced in the &lt;code&gt;v0.3.1rc25&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vars&lt;/code&gt;
take a Lua table which holds the values to set the specified Nginx variables in the subrequest as this option's value. This option was first introduced in the &lt;code&gt;v0.3.1rc31&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copy_all_vars&lt;/code&gt;
specify whether to copy over all the Nginx variable values of the current request to the subrequest in question. modifications of the Nginx variables in the subrequest will not affect the current (parent) request. This option was first introduced in the &lt;code&gt;v0.3.1rc31&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;share_all_vars&lt;/code&gt;
specify whether to share all the Nginx variables of the subrequest with the current (parent) request. modifications of the Nginx variables in the subrequest will affect the current (parent) request. Enabling this option may lead to hard-to-debug issues due to bad side-effects and is considered bad and harmful. Only enable this option when you completely know what you are doing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;always_forward_body&lt;/code&gt;
when set to true, the current (parent) request's request body will always be forwarded to the subrequest being created if the &lt;code&gt;body&lt;/code&gt; option is not specified. The request body read by either &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body()&lt;/a&gt; or &lt;a href="#lua_need_request_body"&gt;lua_need_request_body on&lt;/a&gt; will be directly forwarded to the subrequest without copying the whole request body data when creating the subrequest (no matter the request body data is buffered in memory buffers or temporary files). By default, this option is &lt;code&gt;false&lt;/code&gt; and when the &lt;code&gt;body&lt;/code&gt; option is not specified, the request body of the current (parent) request is only forwarded when the subrequest takes the &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt; request method.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Issuing a POST subrequest, for example, can be done as follows&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo/bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { method &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_POST&lt;/span&gt;, body &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See HTTP method constants methods other than POST.
The &lt;code&gt;method&lt;/code&gt; option is &lt;code&gt;ngx.HTTP_GET&lt;/code&gt; by default.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;args&lt;/code&gt; option can specify extra URI arguments, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { args &lt;span class="pl-k"&gt;=&lt;/span&gt; { b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, c &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; } }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&amp;amp;b=3&amp;amp;c=%3a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that is, this method will escape argument keys and values according to URI rules and
concatenate them together into a complete query string. The format for the Lua table passed as the &lt;code&gt;args&lt;/code&gt; argument is identical to the format used in the &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;args&lt;/code&gt; option can also take plain query strings:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b=3&amp;amp;c=%3a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is functionally identical to the previous examples.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;share_all_vars&lt;/code&gt; option controls whether to share Nginx variables among the current request and its subrequests.
If this option is set to &lt;code&gt;true&lt;/code&gt;, then the current request and associated subrequests will share the same Nginx variable scope. Hence, changes to Nginx variables made by a subrequest will affect the current request.&lt;/p&gt;
&lt;p&gt;Care should be taken in using this option as variable scope sharing can have unexpected side effects. The &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;vars&lt;/code&gt;, or &lt;code&gt;copy_all_vars&lt;/code&gt; options are generally preferable instead.&lt;/p&gt;
&lt;p&gt;This option is set to &lt;code&gt;false&lt;/code&gt; by default&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$dog&lt;/span&gt; world"&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; dog: &lt;span class="pl-smi"&gt;$dog&lt;/span&gt;"&lt;/span&gt;;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/other"&lt;/span&gt;,
             { &lt;span class="pl-k"&gt;share_all_vars&lt;/span&gt; =&lt;span class="pl-c1"&gt; true&lt;/span&gt; });

         ngx.print(res.body)
         ngx.say(ngx.var.uri, ": ", ngx.var.dog)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Accessing location &lt;code&gt;/lua&lt;/code&gt; gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/other dog: hello world
/lua: hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;copy_all_vars&lt;/code&gt; option provides a copy of the parent request's Nginx variables to subrequests when such subrequests are issued. Changes made to these variables by such subrequests will not affect the parent request or any other subrequests sharing the parent request's variables.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$dog&lt;/span&gt; world"&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; dog: &lt;span class="pl-smi"&gt;$dog&lt;/span&gt;"&lt;/span&gt;;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/other"&lt;/span&gt;,
             { &lt;span class="pl-k"&gt;copy_all_vars&lt;/span&gt; =&lt;span class="pl-c1"&gt; true&lt;/span&gt; });

         ngx.print(res.body)
         ngx.say(ngx.var.uri, ": ", ngx.var.dog)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Request &lt;code&gt;GET /lua&lt;/code&gt; will give the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/other dog: hello world
/lua: hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that if both &lt;code&gt;share_all_vars&lt;/code&gt; and &lt;code&gt;copy_all_vars&lt;/code&gt; are set to true, then &lt;code&gt;share_all_vars&lt;/code&gt; takes precedence.&lt;/p&gt;
&lt;p&gt;In addition to the two settings above, it is possible to specify
values for variables in the subrequest using the &lt;code&gt;vars&lt;/code&gt; option. These
variables are set after the sharing or copying of variables has been
evaluated, and provides a more efficient method of passing specific
values to a subrequest over encoding them as URL arguments and
unescaping them in the Nginx config file.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;dog&lt;/span&gt; = &lt;span class="pl-s"&gt;", ngx.var.dog)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;cat = &lt;span class="pl-s"&gt;", ngx.var.cat)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt; location /lua {&lt;/span&gt;
&lt;span class="pl-s"&gt;     set &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; '';&lt;/span&gt;
&lt;span class="pl-s"&gt;     set &lt;span class="pl-smi"&gt;$cat&lt;/span&gt; '';&lt;/span&gt;
&lt;span class="pl-s"&gt;     content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;         res = ngx.location.capture("&lt;/span&gt;/other&lt;span class="pl-s"&gt;",&lt;/span&gt;
&lt;span class="pl-s"&gt;             { vars = { dog = "&lt;/span&gt;hello&lt;span class="pl-s"&gt;", cat = 32 }});&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Accessing &lt;code&gt;/lua&lt;/code&gt; will yield the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dog = hello
cat = 32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;ctx&lt;/code&gt; option can be used to specify a custom Lua table to serve as the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table for the subrequest.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"bar"&lt;/span&gt;;
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx = {}
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/sub"&lt;/span&gt;, { ctx = ctx })

         ngx.say(ctx.foo);
         ngx.say(ngx.ctx.foo);
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then request &lt;code&gt;GET /lua&lt;/code&gt; gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bar
nil
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is also possible to use this &lt;code&gt;ctx&lt;/code&gt; option to share the same &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table between the current (parent) request and the subrequest:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"bar"&lt;/span&gt;;
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/sub"&lt;/span&gt;, { ctx = ngx.ctx })
         ngx.say(ngx.ctx.foo);
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Request &lt;code&gt;GET /lua&lt;/code&gt; yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that subrequests issued by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; inherit all the
request headers of the current request by default and that this may have unexpected side effects on the
subrequest responses. For example, when using the standard &lt;code&gt;ngx_proxy&lt;/code&gt; module to serve
subrequests, an "Accept-Encoding: gzip" header in the main request may result
in gzipped responses that cannot be handled properly in Lua code. Original request headers should be ignored by setting
&lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers" rel="nofollow"&gt;proxy_pass_request_headers&lt;/a&gt; to &lt;code&gt;off&lt;/code&gt; in subrequest locations.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;body&lt;/code&gt; option is not specified and the &lt;code&gt;always_forward_body&lt;/code&gt; option is false (the default value), the &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; subrequests will inherit the request bodies of the parent request (if any).&lt;/p&gt;
&lt;p&gt;There is a hard-coded upper limit on the number of concurrent subrequests possible for every main request. In older versions of Nginx, the limit was &lt;code&gt;50&lt;/code&gt; concurrent subrequests and in more recent versions, Nginx &lt;code&gt;1.1.x&lt;/code&gt; onwards, this was increased to &lt;code&gt;200&lt;/code&gt; concurrent subrequests. When this limit is exceeded, the following error message is added to the &lt;code&gt;error.log&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[error] 13983#0: *1 subrequests cycle while processing "/uri"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The limit can be manually modified if required by editing the definition of the &lt;code&gt;NGX_HTTP_MAX_SUBREQUESTS&lt;/code&gt; macro in the &lt;code&gt;nginx/src/http/ngx_http_request.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;Please also refer to restrictions on capturing locations configured by &lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;subrequest directives of other modules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocationcapture_multi" class="anchor" aria-hidden="true" href="#ngxlocationcapture_multi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.location.capture_multi&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res1, res2, ... = ngx.location.capture_multi({ {uri, options?}, {uri, options?}, ... })&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;, but supports multiple subrequests running in parallel.&lt;/p&gt;
&lt;p&gt;This function issues several parallel subrequests specified by the input table and returns their results in the same order. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res1, res2, res3 &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;{
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } },
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { method &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_POST&lt;/span&gt;, body &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } },
 }

 &lt;span class="pl-k"&gt;if&lt;/span&gt; res1.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_OK&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;if&lt;/span&gt; res2.&lt;span class="pl-smi"&gt;body&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BLAH&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function will not return until all the subrequests terminate.
The total latency is the longest latency of the individual subrequests rather than the sum.&lt;/p&gt;
&lt;p&gt;Lua tables can be used for both requests and responses when the number of subrequests to be issued is not known in advance:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; construct the requests table&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; reqs &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/mysql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/postgres&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/redis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/memcached&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; issue all the requests at once and wait until they all return&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; resps &lt;span class="pl-k"&gt;=&lt;/span&gt; { ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;(reqs) }

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; loop over the responses table&lt;/span&gt;
 &lt;span class="pl-k"&gt;for&lt;/span&gt; i, resp &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;ipairs&lt;/span&gt;(resps) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; process the response table "resp"&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; function is just a special form
of this function. Logically speaking, the &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; can be implemented like this&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-smi"&gt;capture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
     &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;uri&lt;/span&gt;, &lt;span class="pl-smi"&gt;args&lt;/span&gt;)
         &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;({ {uri, args} })
     &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please also refer to restrictions on capturing locations configured by &lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;subrequest directives of other modules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxstatus" class="anchor" aria-hidden="true" href="#ngxstatus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.status&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Read and write the current request's response status. This should be called
before sending out the response headers.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_CREATED&lt;/span&gt;
 status &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.status&lt;/code&gt; after the response header is sent out has no effect but leaving an error message in your Nginx's error log file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;attempt to set ngx.status after sending out response headers
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxheaderheader" class="anchor" aria-hidden="true" href="#ngxheaderheader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.header.HEADER&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.header.HEADER = VALUE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.header.HEADER&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set, add to, or clear the current request's &lt;code&gt;HEADER&lt;/code&gt; response header that is to be sent.&lt;/p&gt;
&lt;p&gt;Underscores (&lt;code&gt;_&lt;/code&gt;) in the header names will be replaced by hyphens (&lt;code&gt;-&lt;/code&gt;) by default. This transformation can be turned off via the &lt;a href="#lua_transform_underscores_in_response_headers"&gt;lua_transform_underscores_in_response_headers&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;The header names are matched case-insensitively.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; equivalent to ngx.header["Content-Type"] = 'text/plain'&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;

 ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blah blah&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multi-value headers can be set this way:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Set-Cookie&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a=32; path=/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b=4; path=/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Set-Cookie: a=32&lt;span class="pl-k"&gt;;&lt;/span&gt; path=/
 Set-Cookie: b=4&lt;span class="pl-k"&gt;;&lt;/span&gt; path=/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in the response headers.&lt;/p&gt;
&lt;p&gt;Only Lua tables are accepted (Only the last element in the table will take effect for standard headers such as &lt;code&gt;Content-Type&lt;/code&gt; that only accept a single value).&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting a slot to &lt;code&gt;nil&lt;/code&gt; effectively removes it from the response headers:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The same applies to assigning an empty table:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.header.HEADER&lt;/code&gt; after sending out response headers (either explicitly with &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or implicitly with &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; and similar) will log an error message.&lt;/p&gt;
&lt;p&gt;Reading &lt;code&gt;ngx.header.HEADER&lt;/code&gt; will return the value of the response header named &lt;code&gt;HEADER&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Underscores (&lt;code&gt;_&lt;/code&gt;) in the header names will also be replaced by dashes (&lt;code&gt;-&lt;/code&gt;) and the header names will be matched case-insensitively. If the response header is not present at all, &lt;code&gt;nil&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;This is particularly useful in the context of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$footer&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;;

     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://some-backend;

     &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;if&lt;/span&gt; ngx.header[&lt;span class="pl-s"&gt;"X-My-Header"&lt;/span&gt;] == &lt;span class="pl-s"&gt;"blah"&lt;/span&gt; then
             ngx.var.&lt;span class="pl-k"&gt;footer&lt;/span&gt; = &lt;span class="pl-s"&gt;"some value"&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }

     &lt;span class="pl-k"&gt;echo_after_body&lt;/span&gt; &lt;span class="pl-smi"&gt;$footer&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multi-value headers, all of the values of header will be collected in order and returned as a Lua table. For example, response headers&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Foo: bar
Foo: baz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will result in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to be returned when reading &lt;code&gt;ngx.header.Foo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;ngx.header&lt;/code&gt; is not a normal Lua table and as such, it is not possible to iterate through it using the Lua &lt;code&gt;ipairs&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;Note: &lt;code&gt;HEADER&lt;/code&gt; and &lt;code&gt;VALUE&lt;/code&gt; will be truncated if they
contain the &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; characters. The truncated values
will contain all characters up to (and excluding) the first occurrence of
&lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For reading &lt;em&gt;request&lt;/em&gt; headers, use the &lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrespget_headers" class="anchor" aria-hidden="true" href="#ngxrespget_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.resp.get_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;headers, err = ngx.resp.get_headers(max_headers?, raw?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current response headers for the current request.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; h, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;resp&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current response here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;for&lt;/span&gt; k, v &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;pairs&lt;/span&gt;(h) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function has the same signature as &lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt; except getting response headers instead of request headers.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 response headers are parsed by default (including those with the same name) and that additional response headers are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqis_internal" class="anchor" aria-hidden="true" href="#ngxreqis_internal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.is_internal&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;is_internal = ngx.req.is_internal()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a boolean indicating whether the current request is an "internal request", i.e.,
a request initiated from inside the current Nginx server instead of from the client side.&lt;/p&gt;
&lt;p&gt;Subrequests are all internal requests and so are requests after internal redirects.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqstart_time" class="anchor" aria-hidden="true" href="#ngxreqstart_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.start_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.req.start_time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a floating-point number representing the timestamp (including milliseconds as the decimal part) when the current request was created.&lt;/p&gt;
&lt;p&gt;The following example emulates the &lt;code&gt;$request_time&lt;/code&gt; variable value (provided by &lt;a href="http://nginx.org/en/docs/http/ngx_http_log_module.html" rel="nofollow"&gt;ngx_http_log_module&lt;/a&gt;) in pure Lua:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; request_time &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;now&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;start_time&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.7.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt; and &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqhttp_version" class="anchor" aria-hidden="true" href="#ngxreqhttp_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.http_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;num = ngx.req.http_version()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the HTTP version number for the current request as a Lua number.&lt;/p&gt;
&lt;p&gt;Current possible values are 2.0, 1.0, 1.1, and 0.9. Returns &lt;code&gt;nil&lt;/code&gt; for unrecognized values.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.7.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqraw_header" class="anchor" aria-hidden="true" href="#ngxreqraw_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.raw_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.req.raw_header(no_request_line?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the original raw HTTP protocol header received by the Nginx server.&lt;/p&gt;
&lt;p&gt;By default, the request line and trailing &lt;code&gt;CR LF&lt;/code&gt; terminator will also be included. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;raw_header&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /t HTTP/1.1
Host: localhost
Connection: close
Foo: bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can specify the optional
&lt;code&gt;no_request_line&lt;/code&gt; argument as a &lt;code&gt;true&lt;/code&gt; value to exclude the request line from the result. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;raw_header&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;outputs something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host: localhost
Connection: close
Foo: bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.7.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This method does not work in HTTP/2 requests yet.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_method" class="anchor" aria-hidden="true" href="#ngxreqget_method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_method&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;method_name = ngx.req.get_method()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, balancer_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the current request's request method name. Strings like &lt;code&gt;"GET"&lt;/code&gt; and &lt;code&gt;"POST"&lt;/code&gt; are returned instead of numerical &lt;a href="#http-method-constants"&gt;method constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If the current request is an Nginx subrequest, then the subrequest's method name will be returned.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_method"&gt;ngx.req.set_method&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_method" class="anchor" aria-hidden="true" href="#ngxreqset_method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_method&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_method(method_id)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Overrides the current request's request method with the &lt;code&gt;method_id&lt;/code&gt; argument. Currently only numerical &lt;a href="#http-method-constants"&gt;method constants&lt;/a&gt; are supported, like &lt;code&gt;ngx.HTTP_POST&lt;/code&gt; and &lt;code&gt;ngx.HTTP_GET&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the current request is an Nginx subrequest, then the subrequest's method will be overridden.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_method"&gt;ngx.req.get_method&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_uri" class="anchor" aria-hidden="true" href="#ngxreqset_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_uri(uri, jump?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Rewrite the current request's (parsed) URI by the &lt;code&gt;uri&lt;/code&gt; argument. The &lt;code&gt;uri&lt;/code&gt; argument must be a Lua string and cannot be of zero length, or a Lua exception will be thrown.&lt;/p&gt;
&lt;p&gt;The optional boolean &lt;code&gt;jump&lt;/code&gt; argument can trigger location rematch (or location jump) as &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive, that is, when &lt;code&gt;jump&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (default to &lt;code&gt;false&lt;/code&gt;), this function will never return and it will tell Nginx to try re-searching locations with the new URI value at the later &lt;code&gt;post-rewrite&lt;/code&gt; phase and jumping to the new location.&lt;/p&gt;
&lt;p&gt;Location jump will not be triggered otherwise, and only the current request's URI will be modified, which is also the default behavior. This function will return but with no returned values when the &lt;code&gt;jump&lt;/code&gt; argument is &lt;code&gt;false&lt;/code&gt; or absent altogether.&lt;/p&gt;
&lt;p&gt;For example, the following Nginx config snippet&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo&lt;span class="pl-c1"&gt; last&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded in Lua like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, Nginx config&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo break;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded in Lua as&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or equivalently,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;jump&lt;/code&gt; argument can only be set to &lt;code&gt;true&lt;/code&gt; in &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt;. Use of jump in other contexts is prohibited and will throw out a Lua exception.&lt;/p&gt;
&lt;p&gt;A more sophisticated example involving regex substitutions is as follows&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; uri = ngx.re.sub(ngx.var.uri, &lt;span class="pl-s"&gt;"^/test/(.*)"&lt;/span&gt;, &lt;span class="pl-s"&gt;"/&lt;span class="pl-smi"&gt;$1&lt;/span&gt;"&lt;/span&gt;, &lt;span class="pl-s"&gt;"o"&lt;/span&gt;)
         ngx.req.set_uri(uri)
     }
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://my_backend;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which is functionally equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^/test/(.*) &lt;/span&gt;/&lt;span class="pl-smi"&gt;$1&lt;/span&gt; break;
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://my_backend;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that it is not possible to use this interface to rewrite URI arguments and that &lt;a href="#ngxreqset_uri_args"&gt;ngx.req.set_uri_args&lt;/a&gt; should be used for this instead. For instance, Nginx config&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo?a=3?&lt;span class="pl-c1"&gt; last&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded as&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.req.set_uri_args("a=3")
 ngx.req.set_uri("/foo", true)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.req.set_uri_args({&lt;span class="pl-k"&gt;a&lt;/span&gt; = 3})
 ngx.req.set_uri("/foo", true)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This interface was first introduced in the &lt;code&gt;v0.3.1rc14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_uri_args" class="anchor" aria-hidden="true" href="#ngxreqset_uri_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_uri_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_uri_args(args)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Rewrite the current request's URI query arguments by the &lt;code&gt;args&lt;/code&gt; argument. The &lt;code&gt;args&lt;/code&gt; argument can be either a Lua string, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=hello%20world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or a Lua table holding the query arguments' key-value pairs, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;({ a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where in the latter case, this method will escape argument keys and values according to the URI escaping rule.&lt;/p&gt;
&lt;p&gt;Multi-value arguments are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;({ a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;} })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which will result in a query string like &lt;code&gt;a=3&amp;amp;b=5&amp;amp;b=6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This interface was first introduced in the &lt;code&gt;v0.3.1rc13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_uri_args" class="anchor" aria-hidden="true" href="#ngxreqget_uri_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_uri_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;args, err = ngx.req.get_uri_args(max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request URL query arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err = ngx.req.get_uri_args()

         &lt;span class="pl-k"&gt;if&lt;/span&gt; err == &lt;span class="pl-s"&gt;"truncated"&lt;/span&gt; then
             -- &lt;span class="pl-k"&gt;one&lt;/span&gt; can choose to ignore or reject the current request here
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         &lt;span class="pl-k"&gt;for&lt;/span&gt; key, val in pairs(args) do
             &lt;span class="pl-k"&gt;if&lt;/span&gt; type(val) == &lt;span class="pl-s"&gt;"table"&lt;/span&gt; then
                 ngx.say(key, ": ", table.concat(val, ", "))
             &lt;span class="pl-k"&gt;else&lt;/span&gt;
                 ngx.say(key, ": ", val)
             &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /test?foo=bar&amp;amp;bar=baz&amp;amp;bar=blah&lt;/code&gt; will yield the response body&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: bar
 bar: baz, blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple occurrences of an argument key will result in a table value holding all the values for that key in order.&lt;/p&gt;
&lt;p&gt;Keys and values are unescaped according to URI escaping rules. In the settings above, &lt;code&gt;GET /test?a%20b=1%61+2&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; a b: 1a 2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments without the &lt;code&gt;=&amp;lt;value&amp;gt;&lt;/code&gt; parts are treated as boolean arguments. &lt;code&gt;GET /test?foo&amp;amp;bar&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
 bar: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, they will take Lua boolean values &lt;code&gt;true&lt;/code&gt;. However, they are different from arguments taking empty string values. &lt;code&gt;GET /test?foo=&amp;amp;bar=&lt;/code&gt; will give something like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo:
 bar:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Empty key arguments are discarded. &lt;code&gt;GET /test?=hello&amp;amp;=world&lt;/code&gt; will yield an empty output for instance.&lt;/p&gt;
&lt;p&gt;Updating query arguments via the Nginx variable &lt;code&gt;$args&lt;/code&gt; (or &lt;code&gt;ngx.var.args&lt;/code&gt; in Lua) at runtime is also supported:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=42&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here the &lt;code&gt;args&lt;/code&gt; table will always look like&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;regardless of the actual request query string.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 request arguments are parsed by default (including those with the same name) and that additional request arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_args&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_post_args" class="anchor" aria-hidden="true" href="#ngxreqget_post_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_post_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;args, err = ngx.req.get_post_args(max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request POST query arguments (of the MIME type &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;). Call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; to read the request body first or turn on the &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; directive to avoid errors.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.req.read_body()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err = ngx.req.get_post_args()

         &lt;span class="pl-k"&gt;if&lt;/span&gt; err == &lt;span class="pl-s"&gt;"truncated"&lt;/span&gt; then
             -- &lt;span class="pl-k"&gt;one&lt;/span&gt; can choose to ignore or reject the current request here
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         &lt;span class="pl-k"&gt;if&lt;/span&gt; not args then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to get post args: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         for key, val in pairs(args) do&lt;/span&gt;
&lt;span class="pl-s"&gt;             if type(val) == "&lt;/span&gt;table&lt;span class="pl-s"&gt;" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say(key, "&lt;/span&gt;: &lt;span class="pl-s"&gt;", table.concat(val, "&lt;/span&gt;, &lt;span class="pl-s"&gt;"))&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say(key, "&lt;/span&gt;: &lt;span class="pl-s"&gt;", val)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Post request with the body 'foo=bar&amp;amp;bar=baz&amp;amp;bar=blah'&lt;/span&gt;
 $ curl --data &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo=bar&amp;amp;bar=baz&amp;amp;bar=blah&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; localhost/test&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield the response body like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: bar
 bar: baz, blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple occurrences of an argument key will result in a table value holding all of the values for that key in order.&lt;/p&gt;
&lt;p&gt;Keys and values will be unescaped according to URI escaping rules.&lt;/p&gt;
&lt;p&gt;With the settings above,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; POST request with body 'a%20b=1%61+2'&lt;/span&gt;
 $ curl -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a%20b=1%61+2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; localhost/test&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; a b: 1a 2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments without the &lt;code&gt;=&amp;lt;value&amp;gt;&lt;/code&gt; parts are treated as boolean arguments. &lt;code&gt;POST /test&lt;/code&gt; with the request body &lt;code&gt;foo&amp;amp;bar&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
 bar: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, they will take Lua boolean values &lt;code&gt;true&lt;/code&gt;. However, they are different from arguments taking empty string values. &lt;code&gt;POST /test&lt;/code&gt; with request body &lt;code&gt;foo=&amp;amp;bar=&lt;/code&gt; will return something like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo:
 bar:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Empty key arguments are discarded. &lt;code&gt;POST /test&lt;/code&gt; with body &lt;code&gt;=hello&amp;amp;=world&lt;/code&gt; will yield empty outputs for instance.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 request arguments are parsed by default (including those with the same name) and that additional request arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_args&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_headers" class="anchor" aria-hidden="true" href="#ngxreqget_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;headers, err = ngx.req.get_headers(max_headers?, raw?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request headers.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; h, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;for&lt;/span&gt; k, v &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;pairs&lt;/span&gt;(h) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To read an individual header:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Host: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Host&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;a href="#ngxvarvariable"&gt;ngx.var.HEADER&lt;/a&gt; API call, which uses core &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_http_" rel="nofollow"&gt;$http_HEADER&lt;/a&gt; variables, may be more preferable for reading individual request headers.&lt;/p&gt;
&lt;p&gt;For multiple instances of request headers such as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Foo: foo
 Foo: bar
 Foo: baz&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the value of &lt;code&gt;ngx.req.get_headers()["Foo"]&lt;/code&gt; will be a Lua (array) table such as:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that a maximum of 100 request headers are parsed by default (including those with the same name) and that additional request headers are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_headers&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; headers, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request headers received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; headers, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_headers&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.6.9&lt;/code&gt; release, all the header names in the Lua table returned are converted to the pure lower-case form by default, unless the &lt;code&gt;raw&lt;/code&gt; argument is set to &lt;code&gt;true&lt;/code&gt; (default to &lt;code&gt;false&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Also, by default, an &lt;code&gt;__index&lt;/code&gt; metamethod is added to the resulting Lua table and will normalize the keys to a pure lowercase form with all underscores converted to dashes in case of a lookup miss. For example, if a request header &lt;code&gt;My-Foo-Header&lt;/code&gt; is present, then the following invocations will all pick up the value of this header correctly:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers.&lt;span class="pl-smi"&gt;my_foo_header&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My-Foo-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my-foo-header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;__index&lt;/code&gt; metamethod will not be added when the &lt;code&gt;raw&lt;/code&gt; argument is set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_header" class="anchor" aria-hidden="true" href="#ngxreqset_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_header(header_name, header_value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request header named &lt;code&gt;header_name&lt;/code&gt; to value &lt;code&gt;header_value&lt;/code&gt;, overriding any existing ones.&lt;/p&gt;
&lt;p&gt;By default, all the subrequests subsequently initiated by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; will inherit the new header.&lt;/p&gt;
&lt;p&gt;Here is an example of setting the &lt;code&gt;Content-Type&lt;/code&gt; header:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;header_value&lt;/code&gt; can take an array list of values,
for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will produce two new request headers:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Foo: a
 Foo: abc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and old &lt;code&gt;Foo&lt;/code&gt; headers will be overridden if there is any.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;header_value&lt;/code&gt; argument is &lt;code&gt;nil&lt;/code&gt;, the request header will be removed. So&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;clear_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqclear_header" class="anchor" aria-hidden="true" href="#ngxreqclear_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.clear_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.clear_header(header_name)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Clears the current request's request header named &lt;code&gt;header_name&lt;/code&gt;. None of the current request's existing subrequests will be affected but subsequently initiated subrequests will inherit the change by default.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqread_body" class="anchor" aria-hidden="true" href="#ngxreqread_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.read_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.read_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Reads the client request body synchronously without blocking the Nginx event loop.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;read_body&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; args &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the request body is already read previously by turning on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; or by using other modules, then this function does not run and returns immediately.&lt;/p&gt;
&lt;p&gt;If the request body has already been explicitly discarded, either by the &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; function or other modules, this function does not run and returns immediately.&lt;/p&gt;
&lt;p&gt;In case of errors, such as connection errors while reading the data, this method will throw out a Lua exception &lt;em&gt;or&lt;/em&gt; terminate the current request with a 500 status code immediately.&lt;/p&gt;
&lt;p&gt;The request body data read using this function can be retrieved later via &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt; or, alternatively, the temporary file name for the body data cached to disk using &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;. This depends on&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;whether the current request body is already larger than the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;and whether &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only" rel="nofollow"&gt;client_body_in_file_only&lt;/a&gt; has been switched on.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In cases where current request may have a request body and the request body data is not required, The &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; function must be used to explicitly discard the request body to avoid breaking things under HTTP 1.1 keepalive or HTTP 1.1 pipelining.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqdiscard_body" class="anchor" aria-hidden="true" href="#ngxreqdiscard_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.discard_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.discard_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly discard the request body, i.e., read the data on the connection and throw it away immediately (without using the request body by any means).&lt;/p&gt;
&lt;p&gt;This function is an asynchronous call and returns immediately.&lt;/p&gt;
&lt;p&gt;If the request body has already been read, this function does nothing and returns immediately.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_body_data" class="anchor" aria-hidden="true" href="#ngxreqget_body_data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_body_data&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data = ngx.req.get_body_data()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves in-memory request body data. It returns a Lua string rather than a Lua table holding all the parsed query arguments. Use the &lt;a href="#ngxreqget_post_args"&gt;ngx.req.get_post_args&lt;/a&gt; function instead if a Lua table is required.&lt;/p&gt;
&lt;p&gt;This function returns &lt;code&gt;nil&lt;/code&gt; if&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the request body has not been read,&lt;/li&gt;
&lt;li&gt;the request body has been read into disk temporary files,&lt;/li&gt;
&lt;li&gt;or the request body has zero size.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however).&lt;/p&gt;
&lt;p&gt;If the request body has been read into disk files, try calling the &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;To force in-memory request bodies, try setting &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; to the same size value in &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that calling this function instead of using &lt;code&gt;ngx.var.request_body&lt;/code&gt; or &lt;code&gt;ngx.var.echo_request_body&lt;/code&gt; is more efficient because it can save one dynamic memory allocation and one data copy.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_body_file" class="anchor" aria-hidden="true" href="#ngxreqget_body_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_body_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;file_name = ngx.req.get_body_file()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the file name for the in-file request body data. Returns &lt;code&gt;nil&lt;/code&gt; if the request body has not been read or has been read into memory.&lt;/p&gt;
&lt;p&gt;The returned file is read only and is usually cleaned up by Nginx's memory pool. It should not be manually modified, renamed, or removed in Lua code.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however).&lt;/p&gt;
&lt;p&gt;If the request body has been read into memory, try calling the &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;To force in-file request bodies, try turning on &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only" rel="nofollow"&gt;client_body_in_file_only&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_body_data" class="anchor" aria-hidden="true" href="#ngxreqset_body_data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_body_data&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_body_data(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request body using the in-memory data specified by the &lt;code&gt;data&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however). Additionally, the request body must not have been previously discarded by &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Whether the previous request body has been read into memory or buffered into a disk file, it will be freed or the disk file will be cleaned up immediately, respectively.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_body_file"&gt;ngx.req.set_body_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_body_file" class="anchor" aria-hidden="true" href="#ngxreqset_body_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_body_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_body_file(file_name, auto_clean?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request body using the in-file data specified by the &lt;code&gt;file_name&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however). Additionally, the request body must not have been previously discarded by &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If the optional &lt;code&gt;auto_clean&lt;/code&gt; argument is given a &lt;code&gt;true&lt;/code&gt; value, then this file will be removed at request completion or the next time this function or &lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt; are called in the same request. The &lt;code&gt;auto_clean&lt;/code&gt; is default to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Please ensure that the file specified by the &lt;code&gt;file_name&lt;/code&gt; argument exists and is readable by an Nginx worker process by setting its permission properly to avoid Lua exception errors.&lt;/p&gt;
&lt;p&gt;Whether the previous request body has been read into memory or buffered into a disk file, it will be freed or the disk file will be cleaned up immediately, respectively.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqinit_body" class="anchor" aria-hidden="true" href="#ngxreqinit_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.init_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.init_body(buffer_size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates a new blank request body for the current request and inializes the buffer for later request body data writing via the &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt; and &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; APIs.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;buffer_size&lt;/code&gt; argument is specified, then its value will be used for the size of the memory buffer for body writing with &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;. If the argument is omitted, then the value specified by the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; directive will be used instead.&lt;/p&gt;
&lt;p&gt;When the data can no longer be hold in the memory buffer for the request body, then the data will be flushed onto a temporary file just like the standard request body reader in the Nginx core.&lt;/p&gt;
&lt;p&gt;It is important to always call the &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; after all the data has been appended onto the current request body. Also, when this function is used together with &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;, it is required to call &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; &lt;em&gt;before&lt;/em&gt; this function, or you will get the "request body already exists" error message.&lt;/p&gt;
&lt;p&gt;The usage of this function is often like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;init_body&lt;/span&gt;(&lt;span class="pl-c1"&gt;128&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; buffer is 128KB&lt;/span&gt;
 &lt;span class="pl-k"&gt;for&lt;/span&gt; chunk &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;next_data_chunk&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
     ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;append_body&lt;/span&gt;(chunk) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; each chunk can be 4KB&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;finish_body&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;, &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqappend_body" class="anchor" aria-hidden="true" href="#ngxreqappend_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.append_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.append_body(data_chunk)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Append new data chunk specified by the &lt;code&gt;data_chunk&lt;/code&gt; argument onto the existing request body created by the &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt; call.&lt;/p&gt;
&lt;p&gt;When the data can no longer be hold in the memory buffer for the request body, then the data will be flushed onto a temporary file just like the standard request body reader in the Nginx core.&lt;/p&gt;
&lt;p&gt;It is important to always call the &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; after all the data has been appended onto the current request body.&lt;/p&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;, &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqfinish_body" class="anchor" aria-hidden="true" href="#ngxreqfinish_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.finish_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.finish_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Completes the construction process of the new request body created by the &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt; and &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt; calls.&lt;/p&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;, &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqsocket" class="anchor" aria-hidden="true" href="#ngxreqsocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.socket&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.req.socket()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.req.socket(raw)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a read-only cosocket object that wraps the downstream connection. Only &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt; and &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt; methods are supported on this object.&lt;/p&gt;
&lt;p&gt;In case of error, &lt;code&gt;nil&lt;/code&gt; will be returned as well as a string describing the error.&lt;/p&gt;
&lt;p&gt;The socket object returned by this method is usually used to read the current request's body in a streaming fashion. Do not turn on the &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; directive, and do not mix this call with &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; and &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If any request body data has been pre-read into the Nginx core request header buffer, the resulting cosocket object will take care of this to avoid potential data loss resulting from such pre-reading.
Chunked request bodies are not yet supported in this API.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.9.0&lt;/code&gt; release, this function accepts an optional boolean &lt;code&gt;raw&lt;/code&gt; argument. When this argument is &lt;code&gt;true&lt;/code&gt;, this function returns a full-duplex cosocket object wrapping around the raw downstream connection socket, upon which you can call the &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;, and &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;raw&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;, it is required that no pending data from any previous &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;, or &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; calls exists. So if you have these downstream output calls previously, you should call &lt;a href="#ngxflush"&gt;ngx.flush(true)&lt;/a&gt; before calling &lt;code&gt;ngx.req.socket(true)&lt;/code&gt; to ensure that there is no pending output data. If the request body has not been read yet, then this "raw socket" can also be used to read the request body.&lt;/p&gt;
&lt;p&gt;You can use the "raw request socket" returned by &lt;code&gt;ngx.req.socket(true)&lt;/code&gt; to implement fancy protocols like &lt;a href="https://en.wikipedia.org/wiki/WebSocket" rel="nofollow"&gt;WebSocket&lt;/a&gt;, or just emit your own raw HTTP response header or body data. You can refer to the &lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket library&lt;/a&gt; for a real world example.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxexec" class="anchor" aria-hidden="true" href="#ngxexec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.exec&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.exec(uri, args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Does an internal redirect to &lt;code&gt;uri&lt;/code&gt; with &lt;code&gt;args&lt;/code&gt; and is similar to the &lt;a href="http://github.com/openresty/echo-nginx-module#echo_exec"&gt;echo_exec&lt;/a&gt; directive of the &lt;a href="http://github.com/openresty/echo-nginx-module"&gt;echo-nginx-module&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a=3&amp;amp;b=5&amp;amp;c=6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location?a=3&amp;amp;b=5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c=6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The optional second &lt;code&gt;args&lt;/code&gt; can be used to specify extra URI query arguments, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=hello%20world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, a Lua table can be passed for the &lt;code&gt;args&lt;/code&gt; argument for ngx_lua to carry out URI escaping and string concatenation.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result is exactly the same as the previous example.&lt;/p&gt;
&lt;p&gt;The format for the Lua table passed as the &lt;code&gt;args&lt;/code&gt; argument is identical to the format used in the &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;Named locations are also supported but the second &lt;code&gt;args&lt;/code&gt; argument will be ignored if present and the querystring for the new target is inherited from the referring location (if any).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GET /foo/file.php?a=hello&lt;/code&gt; will return "hello" and not "goodbye" in the example below&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.exec("@bar", "a=goodbye");
     }
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;@bar &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args = ngx.req.get_uri_args()
         &lt;span class="pl-k"&gt;for&lt;/span&gt; key, val in pairs(args) do
             &lt;span class="pl-k"&gt;if&lt;/span&gt; key == &lt;span class="pl-s"&gt;"a"&lt;/span&gt; then
                 ngx.say(val)
             &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;code&gt;ngx.exec&lt;/code&gt; method is different from &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt; in that
it is purely an internal redirect and that no new external HTTP traffic is involved.&lt;/p&gt;
&lt;p&gt;Also note that this method call terminates the processing of the current request and that it &lt;em&gt;must&lt;/em&gt; be called before &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or explicit response body
outputs by either &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.exec(...)&lt;/code&gt; be adopted when this method call is used in contexts other than &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt; to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxredirect" class="anchor" aria-hidden="true" href="#ngxredirect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.redirect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.redirect(uri, status?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Issue an &lt;code&gt;HTTP 301&lt;/code&gt; or &lt;code&gt;302&lt;/code&gt; redirection to &lt;code&gt;uri&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Notice: the &lt;code&gt;uri&lt;/code&gt; should not contains &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt;, otherwise, the characters after &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; will be truncated, including the &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; bytes themself.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;uri&lt;/code&gt; argument will be truncated if it contains the
&lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; characters. The truncated value will contain
all characters up to (and excluding) the first occurrence of &lt;code&gt;\r&lt;/code&gt; or
&lt;code&gt;\n&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;status&lt;/code&gt; parameter specifies the HTTP status code to be used. The following status codes are supported right now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;301&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;302&lt;/code&gt; (default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;303&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;307&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;308&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is &lt;code&gt;302&lt;/code&gt; (&lt;code&gt;ngx.HTTP_MOVED_TEMPORARILY&lt;/code&gt;) by default.&lt;/p&gt;
&lt;p&gt;Here is an example assuming the current server name is &lt;code&gt;localhost&lt;/code&gt; and that it is listening on port 1984:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;HTTP_MOVED_TEMPORARILY&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Redirecting arbitrary external URLs is also supported, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can also use the numerical code directly as the second &lt;code&gt;status&lt;/code&gt; argument:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;301&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method is similar to the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive with the &lt;code&gt;redirect&lt;/code&gt; modifier in the standard
&lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;, for example, this &lt;code&gt;nginx.conf&lt;/code&gt; snippet&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo? redirect;  &lt;span class="pl-c"&gt;# nginx config&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to the following Lua code&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Lua code&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;while&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo? permanent;  &lt;span class="pl-c"&gt;# nginx config&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;HTTP_MOVED_PERMANENTLY&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Lua code&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;URI arguments can be specified as well, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this method call terminates the processing of the current request and that it &lt;em&gt;must&lt;/em&gt; be called before &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or explicit response body
outputs by either &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.redirect(...)&lt;/code&gt; be adopted when this method call is used in contexts other than &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt; to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsend_headers" class="anchor" aria-hidden="true" href="#ngxsend_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.send_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.send_headers()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly send out the response headers.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Note that there is normally no need to manually send out response headers as ngx_lua will automatically send headers out
before content is output with &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; or &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or when &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt; exits normally.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxheaders_sent" class="anchor" aria-hidden="true" href="#ngxheaders_sent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.headers_sent&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.headers_sent&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the response headers have been sent (by ngx_lua), and &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;This API was first introduced in ngx_lua v0.3.1rc6.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxprint" class="anchor" aria-hidden="true" href="#ngxprint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.print&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.print(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Emits arguments concatenated to the HTTP client (as response body). If response headers have not been sent, this function will send headers out first and then output body data.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; values will output &lt;code&gt;"nil"&lt;/code&gt; strings and Lua boolean values will output &lt;code&gt;"true"&lt;/code&gt; and &lt;code&gt;"false"&lt;/code&gt; literal strings respectively.&lt;/p&gt;
&lt;p&gt;Nested arrays of strings are permitted and the elements in the arrays will be sent one by one:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; table &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
     {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; or &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
         {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;}}
 }
 ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(table)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; hello, world: &lt;span class="pl-c1"&gt;true&lt;/span&gt; or false: nil&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Non-array table arguments will cause a Lua exception to be thrown.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;This is an asynchronous call and will return immediately without waiting for all the data to be written into the system send buffer. To run in synchronous mode, call &lt;code&gt;ngx.flush(true)&lt;/code&gt; after calling &lt;code&gt;ngx.print&lt;/code&gt;. This can be particularly useful for streaming output. See &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Please note that both &lt;code&gt;ngx.print&lt;/code&gt; and &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; will always invoke the whole Nginx output body filter chain, which is an expensive operation. So be careful when calling either of these two in a tight loop; buffer the data yourself in Lua and save the calls.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsay" class="anchor" aria-hidden="true" href="#ngxsay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.say&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.say(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just as &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; but also emit a trailing newline.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlog" class="anchor" aria-hidden="true" href="#ngxlog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.log&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.log(log_level, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Log arguments concatenated to error.log with the given logging level.&lt;/p&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; arguments are accepted and result in literal &lt;code&gt;"nil"&lt;/code&gt; string while Lua booleans result in literal &lt;code&gt;"true"&lt;/code&gt; or &lt;code&gt;"false"&lt;/code&gt; string outputs. And the &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;log_level&lt;/code&gt; argument can take constants like &lt;code&gt;ngx.ERR&lt;/code&gt; and &lt;code&gt;ngx.WARN&lt;/code&gt;. Check out &lt;a href="#nginx-log-level-constants"&gt;Nginx log level constants&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;There is a hard coded &lt;code&gt;2048&lt;/code&gt; byte limitation on error message lengths in the Nginx core. This limit includes trailing newlines and leading time stamps. If the message size exceeds this limit, Nginx will truncate the message text accordingly. This limit can be manually modified by editing the &lt;code&gt;NGX_MAX_ERROR_STR&lt;/code&gt; macro definition in the &lt;code&gt;src/core/ngx_log.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxflush" class="anchor" aria-hidden="true" href="#ngxflush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.flush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.flush(wait?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes response output to the client.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ngx.flush&lt;/code&gt; accepts an optional boolean &lt;code&gt;wait&lt;/code&gt; argument (Default: &lt;code&gt;false&lt;/code&gt;) first introduced in the &lt;code&gt;v0.3.1rc34&lt;/code&gt; release. When called with the default argument, it issues an asynchronous call (Returns immediately without waiting for output data to be written into the system send buffer). Calling the function with the &lt;code&gt;wait&lt;/code&gt; argument set to &lt;code&gt;true&lt;/code&gt; switches to synchronous mode.&lt;/p&gt;
&lt;p&gt;In synchronous mode, the function will not return until all output data has been written into the system send buffer or until the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#send_timeout" rel="nofollow"&gt;send_timeout&lt;/a&gt; setting has expired. Note that using the Lua coroutine mechanism means that this function does not block the Nginx event loop even in the synchronous mode.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;ngx.flush(true)&lt;/code&gt; is called immediately after &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, it causes the latter functions to run in synchronous mode. This can be particularly useful for streaming output.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;ngx.flush&lt;/code&gt; is not functional when in the HTTP 1.0 output buffering mode. See &lt;a href="#http-10-support"&gt;HTTP 1.0 support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxexit" class="anchor" aria-hidden="true" href="#ngxexit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.exit&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.exit(status)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;status &amp;gt;= 200&lt;/code&gt; (i.e., &lt;code&gt;ngx.HTTP_OK&lt;/code&gt; and above), it will interrupt the execution of the current request and return status code to Nginx.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;status == 0&lt;/code&gt; (i.e., &lt;code&gt;ngx.OK&lt;/code&gt;), it will only quit the current phase handler (or the content handler if the &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt; directive is used) and continue to run later phases (if any) for the current request.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;status&lt;/code&gt; argument can be &lt;code&gt;ngx.OK&lt;/code&gt;, &lt;code&gt;ngx.ERROR&lt;/code&gt;, &lt;code&gt;ngx.HTTP_NOT_FOUND&lt;/code&gt;,
&lt;code&gt;ngx.HTTP_MOVED_TEMPORARILY&lt;/code&gt;, or other &lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To return an error page with custom contents, use code snippets like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_GONE&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This is our own content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; to cause quit the whole request rather than the current phase handler&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;HTTP_OK&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The effect in action:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; $ curl -i http://localhost/test
 HTTP/1.1 410 Gone
 Server: nginx/1.0.6
 Date: Thu, 15 Sep 2011 00:51:48 GMT
 Content-Type: text/plain
 Transfer-Encoding: chunked
 Connection: keep-alive

 This is our own content&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Number literals can be used directly as the argument, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;501&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that while this method accepts all &lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt; as input, it only accepts &lt;code&gt;ngx.OK&lt;/code&gt; and &lt;code&gt;ngx.ERROR&lt;/code&gt; of the &lt;a href="#core-constants"&gt;core constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also note that this method call terminates the processing of the current request and that it is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.exit(...)&lt;/code&gt; be used to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;When being used in the contexts of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua*&lt;/a&gt;, and
&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;, &lt;code&gt;ngx.exit()&lt;/code&gt; is
an asynchronous operation and will return immediately. This behavior may change in future and it is recommended that users always use &lt;code&gt;return&lt;/code&gt; in combination as suggested above.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxeof" class="anchor" aria-hidden="true" href="#ngxeof"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.eof&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.eof()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly specify the end of the response output stream. In the case of HTTP 1.1 chunked encoded output, it will just trigger the Nginx core to send out the "last chunk".&lt;/p&gt;
&lt;p&gt;When you disable the HTTP 1.1 keep-alive feature for your downstream connections, you can rely on well written HTTP clients to close the connection actively for you when you call this method. This trick can be used do back-ground jobs without letting the HTTP clients to wait on the connection, as in the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /async &lt;/span&gt;{
     &lt;span class="pl-k"&gt;keepalive_timeout&lt;/span&gt; &lt;span class="pl-s"&gt;0&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;got&lt;/span&gt; the task!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.eof()  -- well written HTTP clients will close the connection at this point&lt;/span&gt;
&lt;span class="pl-s"&gt;         -- access MySQL, PostgreSQL, Redis, Memcached, and etc here...&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But if you create subrequests to access other locations configured by Nginx upstream modules, then you should configure those upstream modules to ignore client connection abortions if they are not by default. For example, by default the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; will terminate both the subrequest and the main request as soon as the client closes the connection, so it is important to turn on the &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_client_abort" rel="nofollow"&gt;proxy_ignore_client_abort&lt;/a&gt; directive in your location block configured by &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;proxy_ignore_client_abort&lt;/span&gt;&lt;span class="pl-c1"&gt; on&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A better way to do background jobs is to use the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsleep" class="anchor" aria-hidden="true" href="#ngxsleep"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.sleep&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.sleep(seconds)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sleeps for the specified seconds without blocking. One can specify time resolution up to 0.001 seconds (i.e., one milliseconds).&lt;/p&gt;
&lt;p&gt;Behind the scene, this method makes use of the Nginx timers.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.7.20&lt;/code&gt; release, The &lt;code&gt;0&lt;/code&gt; time argument can also be specified.&lt;/p&gt;
&lt;p&gt;This method was introduced in the &lt;code&gt;0.5.0rc30&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxescape_uri" class="anchor" aria-hidden="true" href="#ngxescape_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.escape_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.escape_uri(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Escape &lt;code&gt;str&lt;/code&gt; as a URI component.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxunescape_uri" class="anchor" aria-hidden="true" href="#ngxunescape_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.unescape_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.unescape_uri(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unescape &lt;code&gt;str&lt;/code&gt; as an escaped URI component.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ngx.&lt;span class="pl-c1"&gt;unescape_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b%20r56+7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;b r56 7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxencode_args" class="anchor" aria-hidden="true" href="#ngxencode_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.encode_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.encode_args(table)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encode the Lua table to a query args string according to the URI encoded rules.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;foo=3&amp;amp;b%20r=hello%20world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The table keys must be Lua strings.&lt;/p&gt;
&lt;p&gt;Multi-value query args are also supported. Just use a Lua table for the argument's value, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({baz &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baz=32&amp;amp;baz=hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the value table is empty and the effect is equivalent to the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Boolean argument values are also supported, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a&amp;amp;b=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the argument value is &lt;code&gt;false&lt;/code&gt;, then the effect is equivalent to the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.3.1rc27&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxdecode_args" class="anchor" aria-hidden="true" href="#ngxdecode_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.decode_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;table, err = ngx.decode_args(str, max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Decodes a URI encoded query-string into a Lua table. This is the inverse function of &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;max_args&lt;/code&gt; argument can be used to specify the maximum number of arguments parsed from the &lt;code&gt;str&lt;/code&gt; argument. By default, a maximum of 100 request arguments are parsed (including those with the same name) and that additional URI arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;decode_args&lt;/span&gt;(str, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;This method was introduced in the &lt;code&gt;v0.5.0rc29&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxencode_base64" class="anchor" aria-hidden="true" href="#ngxencode_base64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.encode_base64&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.encode_base64(str, no_padding?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encodes &lt;code&gt;str&lt;/code&gt; to a base64 digest.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.9.16&lt;/code&gt; release, an optional boolean-typed &lt;code&gt;no_padding&lt;/code&gt; argument can be specified to control whether the base64 padding should be appended to the resulting digest (default to &lt;code&gt;false&lt;/code&gt;, i.e., with padding enabled).&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxdecode_base64" class="anchor" aria-hidden="true" href="#ngxdecode_base64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.decode_base64&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.decode_base64(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Decodes the &lt;code&gt;str&lt;/code&gt; argument as a base64 digest to the raw form. Returns &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;str&lt;/code&gt; is not well formed.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcrc32_short" class="anchor" aria-hidden="true" href="#ngxcrc32_short"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.crc32_short&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;intval = ngx.crc32_short(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Calculates the CRC-32 (Cyclic Redundancy Code) digest for the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This method performs better on relatively short &lt;code&gt;str&lt;/code&gt; inputs (i.e., less than 30 ~ 60 bytes), as compared to &lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;. The result is exactly the same as &lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Behind the scene, it is just a thin wrapper around the &lt;code&gt;ngx_crc32_short&lt;/code&gt; function defined in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.3.1rc8&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcrc32_long" class="anchor" aria-hidden="true" href="#ngxcrc32_long"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.crc32_long&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;intval = ngx.crc32_long(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Calculates the CRC-32 (Cyclic Redundancy Code) digest for the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This method performs better on relatively long &lt;code&gt;str&lt;/code&gt; inputs (i.e., longer than 30 ~ 60 bytes), as compared to &lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;.  The result is exactly the same as &lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Behind the scene, it is just a thin wrapper around the &lt;code&gt;ngx_crc32_long&lt;/code&gt; function defined in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.3.1rc8&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxhmac_sha1" class="anchor" aria-hidden="true" href="#ngxhmac_sha1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.hmac_sha1&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.hmac_sha1(secret_key, str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Computes the &lt;a href="https://en.wikipedia.org/wiki/HMAC" rel="nofollow"&gt;HMAC-SHA1&lt;/a&gt; digest of the argument &lt;code&gt;str&lt;/code&gt; and turns the result using the secret key &lt;code&gt;&amp;lt;secret_key&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The raw binary form of the &lt;code&gt;HMAC-SHA1&lt;/code&gt; digest will be generated, use &lt;a href="#ngxencode_base64"&gt;ngx.encode_base64&lt;/a&gt;, for example, to encode the result to a textual representation if desired.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;thisisverysecretstuff&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; src &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some string we want to sign&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; digest &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;hmac_sha1&lt;/span&gt;(key, src)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ngx.&lt;span class="pl-c1"&gt;encode_base64&lt;/span&gt;(digest))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;R/pvxzHC4NLtj7S+kXFg/NePTmk=
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This API requires the OpenSSL library enabled in the Nginx build (usually by passing the &lt;code&gt;--with-http_ssl_module&lt;/code&gt; option to the &lt;code&gt;./configure&lt;/code&gt; script).&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc29&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxmd5" class="anchor" aria-hidden="true" href="#ngxmd5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.md5&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.md5(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the hexadecimal representation of the MD5 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /md5 &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; { ngx.say(ngx.md5(&lt;span class="pl-s"&gt;"hello"&lt;/span&gt;)) }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;5d41402abc4b2a76b9719d911017c592
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See &lt;a href="#ngxmd5_bin"&gt;ngx.md5_bin&lt;/a&gt; if the raw binary MD5 digest is required.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxmd5_bin" class="anchor" aria-hidden="true" href="#ngxmd5_bin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.md5_bin&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.md5_bin(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the binary form of the MD5 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt; if the hexadecimal form of the MD5 digest is required.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsha1_bin" class="anchor" aria-hidden="true" href="#ngxsha1_bin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.sha1_bin&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.sha1_bin(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the binary form of the SHA-1 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This function requires SHA-1 support in the Nginx build. (This usually just means OpenSSL should be installed while building Nginx).&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.0rc6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxquote_sql_str" class="anchor" aria-hidden="true" href="#ngxquote_sql_str"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.quote_sql_str&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;quoted_value = ngx.quote_sql_str(raw_value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a quoted SQL string literal according to the MySQL quoting rules.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtoday" class="anchor" aria-hidden="true" href="#ngxtoday"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.today&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.today()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns current date (in the format &lt;code&gt;yyyy-mm-dd&lt;/code&gt;) from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;This is the local time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtime" class="anchor" aria-hidden="true" href="#ngxtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the elapsed seconds from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;Updates of the Nginx time cache can be forced by calling &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxnow" class="anchor" aria-hidden="true" href="#ngxnow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.now&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.now()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a floating-point number for the elapsed time in seconds (including milliseconds as the decimal part) from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;You can forcibly update the Nginx time cache by calling &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;This API was first introduced in &lt;code&gt;v0.3.1rc32&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxupdate_time" class="anchor" aria-hidden="true" href="#ngxupdate_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.update_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.update_time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Forcibly updates the Nginx current time cache. This call involves a syscall and thus has some overhead, so do not abuse it.&lt;/p&gt;
&lt;p&gt;This API was first introduced in &lt;code&gt;v0.3.1rc32&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocaltime" class="anchor" aria-hidden="true" href="#ngxlocaltime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.localtime&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.localtime()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the current time stamp (in the format &lt;code&gt;yyyy-mm-dd hh:mm:ss&lt;/code&gt;) of the Nginx cached time (no syscall involved unlike Lua's &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.date" rel="nofollow"&gt;os.date&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;This is the local time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxutctime" class="anchor" aria-hidden="true" href="#ngxutctime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.utctime&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.utctime()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the current time stamp (in the format &lt;code&gt;yyyy-mm-dd hh:mm:ss&lt;/code&gt;) of the Nginx cached time (no syscall involved unlike Lua's &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.date" rel="nofollow"&gt;os.date&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;This is the UTC time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcookie_time" class="anchor" aria-hidden="true" href="#ngxcookie_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.cookie_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.cookie_time(sec)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a formatted string can be used as the cookie expiration time. The parameter &lt;code&gt;sec&lt;/code&gt; is the time stamp in seconds (like those returned from &lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.say(ngx.cookie_time(1290079655))
     -- &lt;span class="pl-k"&gt;yields&lt;/span&gt; &lt;span class="pl-s"&gt;"Thu, 18-Nov-10 11:27:35 GMT"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxhttp_time" class="anchor" aria-hidden="true" href="#ngxhttp_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.http_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.http_time(sec)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a formated string can be used as the http header time (for example, being used in &lt;code&gt;Last-Modified&lt;/code&gt; header). The parameter &lt;code&gt;sec&lt;/code&gt; is the time stamp in seconds (like those returned from &lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.say(ngx.http_time(1290079655))
     -- &lt;span class="pl-k"&gt;yields&lt;/span&gt; &lt;span class="pl-s"&gt;"Thu, 18 Nov 2010 11:27:35 GMT"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxparse_http_time" class="anchor" aria-hidden="true" href="#ngxparse_http_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.parse_http_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;sec = ngx.parse_http_time(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Parse the http time string (as returned by &lt;a href="#ngxhttp_time"&gt;ngx.http_time&lt;/a&gt;) into seconds. Returns the seconds or &lt;code&gt;nil&lt;/code&gt; if the input string is in bad forms.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; time = ngx.parse_http_time(&lt;span class="pl-s"&gt;"Thu, 18 Nov 2010 11:27:35 GMT"&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; time == nil then
     ...
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxis_subrequest" class="anchor" aria-hidden="true" href="#ngxis_subrequest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.is_subrequest&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.is_subrequest&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the current request is an Nginx subrequest, or &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrematch" class="anchor" aria-hidden="true" href="#ngxrematch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.match&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;captures, err = ngx.re.match(subject, regex, options?, ctx?, res_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Matches the &lt;code&gt;subject&lt;/code&gt; string using the Perl compatible regular expression &lt;code&gt;regex&lt;/code&gt; with the optional &lt;code&gt;options&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Only the first occurrence of the match is returned, or &lt;code&gt;nil&lt;/code&gt; if no match is found. In case of errors, like seeing a bad regular expression or exceeding the PCRE stack limit, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;When a match is found, a Lua table &lt;code&gt;captures&lt;/code&gt; is returned, where &lt;code&gt;captures[0]&lt;/code&gt; holds the whole substring being matched, and &lt;code&gt;captures[1]&lt;/code&gt; holds the first parenthesized sub-pattern's capturing, &lt;code&gt;captures[2]&lt;/code&gt; the second, and so on.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;

 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;match not found&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == "1"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Named captures are also supported since the &lt;code&gt;v0.7.14&lt;/code&gt; release
and are returned in the same Lua table as key-value pairs as the numbered captures.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])(?&amp;lt;remaining&amp;gt;[0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == "1"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[2] == "234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m["remaining"] == "234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unmatched subpatterns will have &lt;code&gt;false&lt;/code&gt; values in their &lt;code&gt;captures&lt;/code&gt; table fields.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(world)|(hello)|(?&amp;lt;named&amp;gt;howdy)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "hello"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == false&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[2] == "hello"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[3] == false&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m["named"] == false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Specify &lt;code&gt;options&lt;/code&gt; to control how the match operation will be performed. The following option characters are supported:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a             anchored mode (only match from the beginning)

d             enable the DFA mode (or the longest token match semantics).
              this requires PCRE 6.0+ or else a Lua exception will be thrown.
              first introduced in ngx_lua v0.3.1rc30.

D             enable duplicate named pattern support. This allows named
              subpattern names to be repeated, returning the captures in
              an array-like Lua table. for example,
                local m = ngx.re.match("hello, world",
                                       "(?&amp;lt;named&amp;gt;\w+), (?&amp;lt;named&amp;gt;\w+)",
                                       "D")
                -- m["named"] == {"hello", "world"}
              this option was first introduced in the v0.7.14 release.
              this option requires at least PCRE 8.12.

i             case insensitive mode (similar to Perl's /i modifier)

j             enable PCRE JIT compilation, this requires PCRE 8.21+ which
              must be built with the --enable-jit option. for optimum performance,
              this option should always be used together with the 'o' option.
              first introduced in ngx_lua v0.3.1rc30.

J             enable the PCRE Javascript compatible mode. this option was
              first introduced in the v0.7.14 release. this option requires
              at least PCRE 8.12.

m             multi-line mode (similar to Perl's /m modifier)

o             compile-once mode (similar to Perl's /o modifier),
              to enable the worker-process-level compiled-regex cache

s             single-line mode (similar to Perl's /s modifier)

u             UTF-8 mode. this requires PCRE to be built with
              the --enable-utf8 option or else a Lua exception will be thrown.

U             similar to "u" but disables PCRE's UTF-8 validity check on
              the subject string. first introduced in ngx_lua v0.8.1.

x             extended mode (similar to Perl's /x modifier)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These options can be combined:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err = ngx.re.match(&lt;span class="pl-s"&gt;"hello, world"&lt;/span&gt;, &lt;span class="pl-s"&gt;"HEL LO"&lt;/span&gt;, &lt;span class="pl-s"&gt;"ix"&lt;/span&gt;)
 -- m[0] == "hello"&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err = ngx.re.match(&lt;span class="pl-s"&gt;"hello, 美好生活"&lt;/span&gt;, &lt;span class="pl-s"&gt;"HELLO, (.{2})"&lt;/span&gt;, &lt;span class="pl-s"&gt;"iu"&lt;/span&gt;)
 -- m[0] == "hello, 美好"
 -- m[1] == "美好"&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;o&lt;/code&gt; option is useful for performance tuning, because the regex pattern in question will only be compiled once, cached in the worker-process level, and shared among all requests in the current Nginx worker process. The upper limit of the regex cache can be tuned via the &lt;a href="#lua_regex_cache_max_entries"&gt;lua_regex_cache_max_entries&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;The optional fourth argument, &lt;code&gt;ctx&lt;/code&gt;, can be a Lua table holding an optional &lt;code&gt;pos&lt;/code&gt; field. When the &lt;code&gt;pos&lt;/code&gt; field in the &lt;code&gt;ctx&lt;/code&gt; table argument is specified, &lt;code&gt;ngx.re.match&lt;/code&gt; will start matching from that offset (starting from 1). Regardless of the presence of the &lt;code&gt;pos&lt;/code&gt; field in the &lt;code&gt;ctx&lt;/code&gt; table, &lt;code&gt;ngx.re.match&lt;/code&gt; will always set this &lt;code&gt;pos&lt;/code&gt; field to the position &lt;em&gt;after&lt;/em&gt; the substring matched by the whole pattern in case of a successful match. When match fails, the &lt;code&gt;ctx&lt;/code&gt; table will be left intact.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1234, hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ctx)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] = "1234"&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; ctx.pos == 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; { pos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1234, hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ctx)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] = "234"&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; ctx.pos == 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;ctx&lt;/code&gt; table argument combined with the &lt;code&gt;a&lt;/code&gt; regex modifier can be used to construct a lexer atop &lt;code&gt;ngx.re.match&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that, the &lt;code&gt;options&lt;/code&gt; argument is not optional when the &lt;code&gt;ctx&lt;/code&gt; argument is specified and that the empty Lua string (&lt;code&gt;""&lt;/code&gt;) must be used as placeholder for &lt;code&gt;options&lt;/code&gt; if no meaningful regex options are required.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To confirm that PCRE JIT is enabled, activate the Nginx debug log by adding the &lt;code&gt;--with-debug&lt;/code&gt; option to Nginx or OpenResty's &lt;code&gt;./configure&lt;/code&gt; script. Then, enable the "debug" error log level in &lt;code&gt;error_log&lt;/code&gt; directive. The following message will be generated if PCRE JIT is enabled:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pcre JIT compiling result: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Starting from the &lt;code&gt;0.9.4&lt;/code&gt; release, this function also accepts a 5th argument, &lt;code&gt;res_table&lt;/code&gt;, for letting the caller supply the Lua table used to hold all the capturing results. Starting from &lt;code&gt;0.9.6&lt;/code&gt;, it is the caller's responsibility to ensure this table is empty. This is very useful for recycling Lua tables and saving GC and table allocation overhead.&lt;/p&gt;
&lt;p&gt;This feature was introduced in the &lt;code&gt;v0.2.1rc11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrefind" class="anchor" aria-hidden="true" href="#ngxrefind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.find&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;from, to, err = ngx.re.find(subject, regex, options?, ctx?, nth?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt; but only returns the beginning index (&lt;code&gt;from&lt;/code&gt;) and end index (&lt;code&gt;to&lt;/code&gt;) of the matched substring. The returned indexes are 1-based and can be fed directly into the &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-string.sub" rel="nofollow"&gt;string.sub&lt;/a&gt; API function to obtain the matched substring.&lt;/p&gt;
&lt;p&gt;In case of errors (like bad regexes or any PCRE runtime errors), this API function returns two &lt;code&gt;nil&lt;/code&gt; values followed by a string describing the error.&lt;/p&gt;
&lt;p&gt;If no match is found, this function just returns a &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Below is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; from, to, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(s, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; from &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;from: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, from)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;to: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, to)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;matched: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;string.sub&lt;/span&gt;(s, from, to))
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example produces the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from: 8
to: 11
matched: 1234
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Because this API function does not create new Lua strings nor new Lua tables, it is much faster than &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;. It should be used wherever possible.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.9.3&lt;/code&gt; release, an optional 5th argument, &lt;code&gt;nth&lt;/code&gt;, is supported to specify which (submatch) capture's indexes to return. When &lt;code&gt;nth&lt;/code&gt; is 0 (which is the default), the indexes for the whole matched substring is returned; when &lt;code&gt;nth&lt;/code&gt; is 1, then the 1st submatch capture's indexes are returned; when &lt;code&gt;nth&lt;/code&gt; is 2, then the 2nd submatch capture is returned, and so on. When the specified submatch does not have a match, then two &lt;code&gt;nil&lt;/code&gt; values will be returned. Below is an example for this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; str &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; from, to &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(str, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])([0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; from &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;matched 2nd submatch: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;string.sub&lt;/span&gt;(str, from, to))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; yields "234"&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This API function was first introduced in the &lt;code&gt;v0.9.2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxregmatch" class="anchor" aria-hidden="true" href="#ngxregmatch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.gmatch&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;iterator, err = ngx.re.gmatch(subject, regex, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;, but returns a Lua iterator instead, so as to let the user programmer iterate all the matches over the &lt;code&gt;&amp;lt;subject&amp;gt;&lt;/code&gt; string argument with the PCRE &lt;code&gt;regex&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In case of errors, like seeing an ill-formed regular expression, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;Here is a small example to demonstrate its basic usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; iterator, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gmatch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; iterator &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; m
 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == m[1] == "hello"&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == m[1] == "world"&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m == nil&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More often we just put it into a Lua loop:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; it, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gmatch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; it &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;it&lt;/span&gt;()
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; no match found (any more)&lt;/span&gt;
         &lt;span class="pl-k"&gt;break&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; found a match&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;])
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The optional &lt;code&gt;options&lt;/code&gt; argument takes exactly the same semantics as the &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The current implementation requires that the iterator returned should only be used in a single request. That is, one should &lt;em&gt;not&lt;/em&gt; assign it to a variable belonging to persistent namespace like a Lua package.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxresub" class="anchor" aria-hidden="true" href="#ngxresub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.sub&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr, n, err = ngx.re.sub(subject, regex, replace, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Substitutes the first match of the Perl compatible regular expression &lt;code&gt;regex&lt;/code&gt; on the &lt;code&gt;subject&lt;/code&gt; argument string with the string or function argument &lt;code&gt;replace&lt;/code&gt;. The optional &lt;code&gt;options&lt;/code&gt; argument has exactly the same meaning as in &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This method returns the resulting new string as well as the number of successful substitutions. In case of failures, like syntax errors in the regular expressions or the &lt;code&gt;&amp;lt;replace&amp;gt;&lt;/code&gt; string argument, it will return &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;replace&lt;/code&gt; is a string, then it is treated as a special template for string replacement. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[$0][$1]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; newstr &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, [12][1]34"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;$0&lt;/code&gt; referring to the whole substring matched by the pattern and &lt;code&gt;$1&lt;/code&gt; referring to the first parenthesized capturing substring.&lt;/p&gt;
&lt;p&gt;Curly braces can also be used to disambiguate variable names from the background string literals:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${0}00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, 100234"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Literal dollar sign characters (&lt;code&gt;$&lt;/code&gt;) in the &lt;code&gt;replace&lt;/code&gt; string argument can be escaped by another dollar sign, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, $234"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Do not use backlashes to escape dollar signs; it will not work as expected.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;replace&lt;/code&gt; argument is of type "function", then it will be invoked with the "match table" as the argument to generate the replace string literal for substitution. The "match table" fed into the &lt;code&gt;replace&lt;/code&gt; function is exactly the same as the return value of &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; func &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;m&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;][&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;( [0-9] ) [0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, func, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, [12][1]34"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The dollar sign characters in the return value of the &lt;code&gt;replace&lt;/code&gt; function argument are not special at all.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxregsub" class="anchor" aria-hidden="true" href="#ngxregsub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.gsub&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr, n, err = ngx.re.gsub(subject, regex, replace, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;, but does global substitution.&lt;/p&gt;
&lt;p&gt;Here is some examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gsub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z])[a-z]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[$0,$1]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; newstr &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "[hello,h], [world,w]"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 2&lt;/span&gt;
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; func &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;m&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gsub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z])[a-z]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, func, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "[hello,h], [world,w]"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc15&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddict" class="anchor" aria-hidden="true" href="#ngxshareddict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;dict = ngx.shared.DICT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;dict = ngx.shared[name_var]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fetching the shm-based Lua dictionary object for the shared memory zone named &lt;code&gt;DICT&lt;/code&gt; defined by the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;Shared memory zones are always shared by all the Nginx worker processes in the current Nginx server instance.&lt;/p&gt;
&lt;p&gt;The resulting object &lt;code&gt;dict&lt;/code&gt; has the following methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_stale"&gt;get_stale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_set"&gt;safe_set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_add"&gt;safe_add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictreplace"&gt;replace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictdelete"&gt;delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictincr"&gt;incr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpush"&gt;lpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpush"&gt;rpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpop"&gt;lpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpop"&gt;rpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictllen"&gt;llen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictttl"&gt;ttl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictexpire"&gt;expire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_all"&gt;flush_all&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_expired"&gt;flush_expired&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_keys"&gt;get_keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictcapacity"&gt;capacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictfree_space"&gt;free_space&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All these methods are &lt;em&gt;atomic&lt;/em&gt; operations, that is, safe from concurrent accesses from multiple Nginx worker processes for the same &lt;code&gt;lua_shared_dict&lt;/code&gt; zone.&lt;/p&gt;
&lt;p&gt;Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;http&lt;/span&gt; {
     &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;10m&lt;/span&gt;;
     &lt;span class="pl-k"&gt;server&lt;/span&gt; {
         &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/set &lt;/span&gt;{
             &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
                 &lt;span class="pl-k"&gt;local&lt;/span&gt; dogs = ngx.shared.dogs
                 dogs:&lt;span class="pl-k"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;"Jim"&lt;/span&gt;, 8)
                 ngx.say(&lt;span class="pl-s"&gt;"STORED"&lt;/span&gt;)
             }
         }
         location /get {
             content_by_lua_block {
                 local dogs = ngx.shared.dogs
                 ngx.say(dogs:get(&lt;span class="pl-s"&gt;"Jim"&lt;/span&gt;))
             }
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let us test it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; $ curl localhost/set
 STORED

 $ curl localhost/get
 8

 $ curl localhost/get
 8&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The number &lt;code&gt;8&lt;/code&gt; will be consistently output when accessing &lt;code&gt;/get&lt;/code&gt; regardless of how many Nginx workers there are because the &lt;code&gt;dogs&lt;/code&gt; dictionary resides in the shared memory and visible to &lt;em&gt;all&lt;/em&gt; of the worker processes.&lt;/p&gt;
&lt;p&gt;The shared dictionary will retain its contents through a server config reload (either by sending the &lt;code&gt;HUP&lt;/code&gt; signal to the Nginx process or by using the &lt;code&gt;-s reload&lt;/code&gt; command-line option).&lt;/p&gt;
&lt;p&gt;The contents in the dictionary storage will be lost, however, when the Nginx server quits.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget" class="anchor" aria-hidden="true" href="#ngxshareddictget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value, flags = ngx.shared.DICT:get(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieving the value in the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; for the key &lt;code&gt;key&lt;/code&gt;. If the key does not exist or has expired, then &lt;code&gt;nil&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;In case of errors, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;The value returned will have the original data type when they were inserted into the dictionary, for example, Lua booleans, numbers, or strings.&lt;/p&gt;
&lt;p&gt;The first argument to this method must be the dictionary object itself, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; value, flags &lt;span class="pl-k"&gt;=&lt;/span&gt; cats.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(cats, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use Lua's syntactic sugar for method calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; value, flags &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These two forms are fundamentally equivalent.&lt;/p&gt;
&lt;p&gt;If the user flags is &lt;code&gt;0&lt;/code&gt; (the default), then no flags value will be returned.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget_stale" class="anchor" aria-hidden="true" href="#ngxshareddictget_stale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get_stale&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value, flags, stale = ngx.shared.DICT:get_stale(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt; method but returns the value even if the key has already expired.&lt;/p&gt;
&lt;p&gt;Returns a 3rd value, &lt;code&gt;stale&lt;/code&gt;, indicating whether the key has expired or not.&lt;/p&gt;
&lt;p&gt;Note that the value of an expired key is not guaranteed to be available so one should never rely on the availability of expired items.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;0.8.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictset" class="anchor" aria-hidden="true" href="#ngxshareddictset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.set&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:set(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unconditionally sets a key-value pair into the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns three values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;success&lt;/code&gt;: boolean value to indicate whether the key-value pair is stored or not.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;err&lt;/code&gt;: textual error message, can be &lt;code&gt;"no memory"&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forcible&lt;/code&gt;: a boolean value to indicate whether other valid items have been removed forcibly when out of storage in the shared memory zone.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; argument inserted can be Lua booleans, numbers, strings, or &lt;code&gt;nil&lt;/code&gt;. Their value type will also be stored into the dictionary and the same data type can be retrieved later via the &lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;exptime&lt;/code&gt; argument specifies expiration time (in seconds) for the inserted key-value pair. The time resolution is &lt;code&gt;0.001&lt;/code&gt; seconds. If the &lt;code&gt;exptime&lt;/code&gt; takes the value &lt;code&gt;0&lt;/code&gt; (which is the default), then the item will never expire.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;flags&lt;/code&gt; argument specifies a user flags value associated with the entry to be stored. It can also be retrieved later with the value. The user flags is stored as an unsigned 32-bit integer internally. Defaults to &lt;code&gt;0&lt;/code&gt;. The user flags argument was first introduced in the &lt;code&gt;v0.5.0rc2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;When it fails to allocate memory for the current key-value item, then &lt;code&gt;set&lt;/code&gt; will try removing existing items in the storage according to the Least-Recently Used (LRU) algorithm. Note that, LRU takes priority over expiration time here. If up to tens of existing items have been removed and the storage left is still insufficient (either due to the total capacity limit specified by &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; or memory segmentation), then the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;no memory&lt;/code&gt; and &lt;code&gt;success&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If this method succeeds in storing the current item by forcibly removing other not-yet-expired items in the dictionary via LRU, the &lt;code&gt;forcible&lt;/code&gt; return value will be &lt;code&gt;true&lt;/code&gt;. If it stores the item without forcibly removing other valid items, then the return value &lt;code&gt;forcible&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The first argument to this method must be the dictionary object itself, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err, forcible &lt;span class="pl-k"&gt;=&lt;/span&gt; cats.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(cats, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;it is a nice cat!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use Lua's syntactic sugar for method calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err, forcible &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;it is a nice cat!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These two forms are fundamentally equivalent.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Please note that while internally the key-value pair is set atomically, the atomicity does not go across the method call boundary.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictsafe_set" class="anchor" aria-hidden="true" href="#ngxshareddictsafe_set"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.safe_set&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.shared.DICT:safe_set(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictadd" class="anchor" aria-hidden="true" href="#ngxshareddictadd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.add&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:add(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but only stores the key-value pair into the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; if the key does &lt;em&gt;not&lt;/em&gt; exist.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;key&lt;/code&gt; argument already exists in the dictionary (and not expired for sure), the &lt;code&gt;success&lt;/code&gt; return value will be &lt;code&gt;false&lt;/code&gt; and the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;"exists"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictsafe_add" class="anchor" aria-hidden="true" href="#ngxshareddictsafe_add"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.safe_add&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.shared.DICT:safe_add(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt; method, but never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictreplace" class="anchor" aria-hidden="true" href="#ngxshareddictreplace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.replace&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:replace(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but only stores the key-value pair into the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; if the key &lt;em&gt;does&lt;/em&gt; exist.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;key&lt;/code&gt; argument does &lt;em&gt;not&lt;/em&gt; exist in the dictionary (or expired already), the &lt;code&gt;success&lt;/code&gt; return value will be &lt;code&gt;false&lt;/code&gt; and the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictdelete" class="anchor" aria-hidden="true" href="#ngxshareddictdelete"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.delete&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.shared.DICT:delete(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unconditionally removes the key-value pair from the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is equivalent to &lt;code&gt;ngx.shared.DICT:set(key, nil)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictincr" class="anchor" aria-hidden="true" href="#ngxshareddictincr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.incr&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newval, err, forcible? = ngx.shared.DICT:incr(key, value, init?, init_ttl?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;optional requirement:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Increments the (numerical) value for &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; by the step value &lt;code&gt;value&lt;/code&gt;. Returns the new resulting number if the operation is successfully completed or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;When the key does not exist or has already expired in the shared dictionary,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;if the &lt;code&gt;init&lt;/code&gt; argument is not specified or takes the value &lt;code&gt;nil&lt;/code&gt;, this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;, or&lt;/li&gt;
&lt;li&gt;if the &lt;code&gt;init&lt;/code&gt; argument takes a number value, this method will create a new &lt;code&gt;key&lt;/code&gt; with the value &lt;code&gt;init + value&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Like the &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt; method, it also overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init_ttl&lt;/code&gt; argument specifies expiration time (in seconds) of the value when it is initialized via the &lt;code&gt;init&lt;/code&gt; argument. The time resolution is &lt;code&gt;0.001&lt;/code&gt; seconds. If &lt;code&gt;init_ttl&lt;/code&gt; takes the value &lt;code&gt;0&lt;/code&gt; (which is the default), then the item will never expire. This argument cannot be provided without providing the &lt;code&gt;init&lt;/code&gt; argument as well, and has no effect if the value already exists (e.g., if it was previously inserted via &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; or the likes).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Usage of the &lt;code&gt;init_ttl&lt;/code&gt; argument requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newval, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;incr&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black_cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)

 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(newval) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 1&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; val, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black_cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(val) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;forcible&lt;/code&gt; return value will always be &lt;code&gt;nil&lt;/code&gt; when the &lt;code&gt;init&lt;/code&gt; argument is not specified.&lt;/p&gt;
&lt;p&gt;If this method succeeds in storing the current item by forcibly removing other not-yet-expired items in the dictionary via LRU, the &lt;code&gt;forcible&lt;/code&gt; return value will be &lt;code&gt;true&lt;/code&gt;. If it stores the item without forcibly removing other valid items, then the return value &lt;code&gt;forcible&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the original value is not a valid Lua number in the dictionary, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"not a number"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; argument and &lt;code&gt;init&lt;/code&gt; argument can be any valid Lua numbers, like negative numbers or floating-point numbers.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init&lt;/code&gt; parameter was first added in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init_ttl&lt;/code&gt; parameter was introduced in the &lt;code&gt;v0.10.12rc2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictlpush" class="anchor" aria-hidden="true" href="#ngxshareddictlpush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.lpush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;length, err = ngx.shared.DICT:lpush(key, value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Inserts the specified (numerical or string) &lt;code&gt;value&lt;/code&gt; at the head of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns the number of elements in the list after the push operation.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it is created as an empty list before performing the push operation. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictrpush" class="anchor" aria-hidden="true" href="#ngxshareddictrpush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.rpush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;length, err = ngx.shared.DICT:rpush(key, value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictlpush"&gt;lpush&lt;/a&gt; method, but inserts the specified (numerical or string) &lt;code&gt;value&lt;/code&gt; at the tail of the list named &lt;code&gt;key&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictlpop" class="anchor" aria-hidden="true" href="#ngxshareddictlpop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.lpop&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val, err = ngx.shared.DICT:lpop(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Removes and returns the first element of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it will return &lt;code&gt;nil&lt;/code&gt;. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictrpop" class="anchor" aria-hidden="true" href="#ngxshareddictrpop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.rpop&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val, err = ngx.shared.DICT:rpop(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Removes and returns the last element of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it will return &lt;code&gt;nil&lt;/code&gt;. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictllen" class="anchor" aria-hidden="true" href="#ngxshareddictllen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.llen&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;len, err = ngx.shared.DICT:llen(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of elements in the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If key does not exist, it is interpreted as an empty list and 0 is returned. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictttl" class="anchor" aria-hidden="true" href="#ngxshareddictttl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.ttl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ttl, err = ngx.shared.DICT:ttl(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the remaining TTL (time-to-live in seconds) of a key-value pair in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns the TTL as a number if the operation is successfully completed or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;If the key does not exist (or has already expired), this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The TTL is originally determined by the &lt;code&gt;exptime&lt;/code&gt; argument of the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt;, &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt;, &lt;a href="#ngxshareddictreplace"&gt;replace&lt;/a&gt; (and the likes) methods. It has a time resolution of &lt;code&gt;0.001&lt;/code&gt; seconds. A value of &lt;code&gt;0&lt;/code&gt; means that the item will never expire.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a nice cat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ttl, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;ttl&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ttl) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 0.3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictexpire" class="anchor" aria-hidden="true" href="#ngxshareddictexpire"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.expire&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err = ngx.shared.DICT:expire(key, exptime)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Updates the &lt;code&gt;exptime&lt;/code&gt; (in second) of a key-value pair in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns a boolean indicating success if the operation completes or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;If the key does not exist, this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;exptime&lt;/code&gt; argument has a resolution of &lt;code&gt;0.001&lt;/code&gt; seconds. If &lt;code&gt;exptime&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, then the item will never expire.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a nice cat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)

 succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;expire&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; val, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(val) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; "a nice cat"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictflush_all" class="anchor" aria-hidden="true" href="#ngxshareddictflush_all"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.flush_all&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.shared.DICT:flush_all()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes out all the items in the dictionary. This method does not actuall free up all the memory blocks in the dictionary but just marks all the existing items as expired.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddictflush_expired"&gt;ngx.shared.DICT.flush_expired&lt;/a&gt; and &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictflush_expired" class="anchor" aria-hidden="true" href="#ngxshareddictflush_expired"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.flush_expired&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;flushed = ngx.shared.DICT:flush_expired(max_count?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes out the expired items in the dictionary, up to the maximal number specified by the optional &lt;code&gt;max_count&lt;/code&gt; argument. When the &lt;code&gt;max_count&lt;/code&gt; argument is given &lt;code&gt;0&lt;/code&gt; or not given at all, then it means unlimited. Returns the number of items that have actually been flushed.&lt;/p&gt;
&lt;p&gt;Unlike the &lt;a href="#ngxshareddictflush_all"&gt;flush_all&lt;/a&gt; method, this method actually frees up the memory used by the expired items.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.6.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddictflush_all"&gt;ngx.shared.DICT.flush_all&lt;/a&gt; and &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget_keys" class="anchor" aria-hidden="true" href="#ngxshareddictget_keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get_keys&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;keys = ngx.shared.DICT:get_keys(max_count?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fetch a list of the keys from the dictionary, up to &lt;code&gt;&amp;lt;max_count&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default, only the first 1024 keys (if any) are returned. When the &lt;code&gt;&amp;lt;max_count&amp;gt;&lt;/code&gt; argument is given the value &lt;code&gt;0&lt;/code&gt;, then all the keys will be returned even there is more than 1024 keys in the dictionary.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; Avoid calling this method on dictionaries with a very large number of keys as it may lock the dictionary for significant amount of time and block Nginx worker processes trying to access the dictionary.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictcapacity" class="anchor" aria-hidden="true" href="#ngxshareddictcapacity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.capacity&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;capacity_bytes = ngx.shared.DICT:capacity()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the capacity in bytes for the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; declared with
the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core.shdict&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; capacity_bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;capacity&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;This feature requires at least Nginx core version &lt;code&gt;0.7.3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictfree_space" class="anchor" aria-hidden="true" href="#ngxshareddictfree_space"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.free_space&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;free_page_bytes = ngx.shared.DICT:free_space()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the free page size in bytes for the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The memory for ngx.shared.DICT is allocated via the Nginx slab allocator which has each slot for
data size ranges like ~8, 9~16, 17~32, ..., 1025~2048, 2048~ bytes. And pages are assigned to a slot if there
is no room in already assigned pages for the slot.&lt;/p&gt;
&lt;p&gt;So even if the return value of the &lt;code&gt;free_space&lt;/code&gt; method is zero, there may be room in already assigned pages, so
you may successfully set a new key value pair to the shared dict without getting &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;forcible&lt;/code&gt; or
non nil &lt;code&gt;err&lt;/code&gt; from the &lt;code&gt;ngx.shared.DICT.set&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, if already assigned pages for a slot are full and a new key value pair is added to the
slot and there is no free page, you may get &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;forcible&lt;/code&gt; or non nil &lt;code&gt;err&lt;/code&gt; from the
&lt;code&gt;ngx.shared.DICT.set&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core.shdict&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; free_page_bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;free_space&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;This feature requires at least Nginx core version &lt;code&gt;1.11.7&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketudp" class="anchor" aria-hidden="true" href="#ngxsocketudp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.udp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;udpsock = ngx.socket.udp()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates and returns a UDP or datagram-oriented unix domain socket object (also known as one type of the "cosocket" objects). The following methods are supported on this object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#udpsocksetpeername"&gt;setpeername&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksend"&gt;send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockreceive"&gt;receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockclose"&gt;close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is intended to be compatible with the UDP API of the &lt;a href="http://w3.impa.br/~diego/software/luasocket/udp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; library but is 100% nonblocking out of the box.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksetpeername" class="anchor" aria-hidden="true" href="#udpsocksetpeername"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:setpeername&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:setpeername(host, port)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:setpeername("unix:/path/to/unix-domain.socket")&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Attempts to connect a UDP socket object to a remote server or to a datagram unix domain socket file. Because the datagram protocol is actually connection-less, this method does not really establish a "connection", but only just set the name of the remote peer for subsequent read/write operations.&lt;/p&gt;
&lt;p&gt;Both IP addresses and domain names can be specified as the &lt;code&gt;host&lt;/code&gt; argument. In case of domain names, this method will use Nginx core's dynamic resolver to parse the domain name without blocking and it is required to configure the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver" rel="nofollow"&gt;resolver&lt;/a&gt; directive in the &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;  &lt;span class="pl-c"&gt;# use Google's public DNS nameserver&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the nameserver returns multiple IP addresses for the host name, this method will pick up one randomly.&lt;/p&gt;
&lt;p&gt;In case of error, the method returns &lt;code&gt;nil&lt;/code&gt; followed by a string describing the error. In case of success, the method returns &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example for connecting to a UDP (memcached) server:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;

     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; sock = ngx.socket.udp()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = sock:setpeername(&lt;span class="pl-s"&gt;"my.memcached.server.domain"&lt;/span&gt;, 11211)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to connect to memcached: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;successfully connected to memcached!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         sock:close()&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since the &lt;code&gt;v0.7.18&lt;/code&gt; release, connecting to a datagram unix domain socket file is also possible on Linux:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;udp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;setpeername&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:/tmp/some-datagram-service.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect to the datagram unix domain socket: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;assuming the datagram service is listening on the unix domain socket file &lt;code&gt;/tmp/some-datagram-service.sock&lt;/code&gt; and the client socket will use the "autobind" feature on Linux.&lt;/p&gt;
&lt;p&gt;Calling this method on an already connected socket object will cause the original connection to be closed first.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksend" class="anchor" aria-hidden="true" href="#udpsocksend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:send&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:send(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sends data on the current UDP or datagram unix domain socket object.&lt;/p&gt;
&lt;p&gt;In case of success, it returns &lt;code&gt;1&lt;/code&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;The input argument &lt;code&gt;data&lt;/code&gt; can either be a Lua string or a (nested) Lua table holding string fragments. In case of table arguments, this method will copy all the string elements piece by piece to the underlying Nginx socket send buffers, which is usually optimal than doing string concatenation operations on the Lua land.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsockreceive" class="anchor" aria-hidden="true" href="#udpsockreceive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:receive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err = udpsock:receive(size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Receives data from the UDP or datagram unix domain socket object with an optional receive buffer size argument, &lt;code&gt;size&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;size&lt;/code&gt; argument is specified, then this method will use this size as the receive buffer size. But when this size is greater than &lt;code&gt;8192&lt;/code&gt;, then &lt;code&gt;8192&lt;/code&gt; will be used instead.&lt;/p&gt;
&lt;p&gt;If no argument is specified, then the maximal buffer size, &lt;code&gt;8192&lt;/code&gt; is assumed.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receive&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a packet: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a packet: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsockclose" class="anchor" aria-hidden="true" href="#udpsockclose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:close&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:close()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Closes the current UDP or datagram unix domain socket. It returns the &lt;code&gt;1&lt;/code&gt; in case of success and returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Socket objects that have not invoked this method (and associated connections) will be closed when the socket object is released by the Lua GC (Garbage Collector) or the current client HTTP request finishes processing.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksettimeout" class="anchor" aria-hidden="true" href="#udpsocksettimeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:settimeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;udpsock:settimeout(time)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the timeout value in milliseconds for subsequent socket operations (like &lt;a href="#udpsockreceive"&gt;receive&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method takes priority over those config directives, like &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketstream" class="anchor" aria-hidden="true" href="#ngxsocketstream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.stream&lt;/h2&gt;
&lt;p&gt;Just an alias to &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;. If the stream-typed cosocket may also connect to a unix domain
socket, then this API name is preferred.&lt;/p&gt;
&lt;p&gt;This API function was first added to the &lt;code&gt;v0.10.1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsockettcp" class="anchor" aria-hidden="true" href="#ngxsockettcp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.tcp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock = ngx.socket.tcp()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates and returns a TCP or stream-oriented unix domain socket object (also known as one type of the "cosocket" objects). The following methods are supported on this object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksslhandshake"&gt;sslhandshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksend"&gt;send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockclose"&gt;close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetoption"&gt;setoption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveany"&gt;receiveany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockgetreusedtimes"&gt;getreusedtimes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is intended to be compatible with the TCP API of the &lt;a href="http://w3.impa.br/~diego/software/luasocket/tcp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; library but is 100% nonblocking out of the box. Also, we introduce some new APIs to provide more functionalities.&lt;/p&gt;
&lt;p&gt;The cosocket object created by this API function has exactly the same lifetime as the Lua handler creating it. So never pass the cosocket object to any other Lua handler (including ngx.timer callback functions) and never share the cosocket object between different Nginx requests.&lt;/p&gt;
&lt;p&gt;For every cosocket object's underlying connection, if you do not
explicitly close it (via &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt;) or put it back to the connection
pool (via &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt;), then it is automatically closed when one of
the following two events happens:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the current request handler completes, or&lt;/li&gt;
&lt;li&gt;the Lua cosocket object value gets collected by the Lua GC.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fatal errors in cosocket operations always automatically close the current
connection (note that, read timeout error is the only error that is
not fatal), and if you call &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt; on a closed connection, you will get
the "closed" error.&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;0.9.9&lt;/code&gt; release, the cosocket object here is full-duplex, that is, a reader "light thread" and a writer "light thread" can operate on a single cosocket object simultaneously (both "light threads" must belong to the same Lua handler though, see reasons above). But you cannot have two "light threads" both reading (or writing or connecting) the same cosocket, otherwise you might get an error like "socket busy reading" when calling the methods of the cosocket object.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockconnect" class="anchor" aria-hidden="true" href="#tcpsockconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:connect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:connect(host, port, options_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:connect("unix:/path/to/unix-domain.socket", options_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Attempts to connect a TCP socket object to a remote server or to a stream unix domain socket file without blocking.&lt;/p&gt;
&lt;p&gt;Before actually resolving the host name and connecting to the remote backend, this method will always look up the connection pool for matched idle connections created by previous calls of this method (or the &lt;a href="#ngxsocketconnect"&gt;ngx.socket.connect&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;Both IP addresses and domain names can be specified as the &lt;code&gt;host&lt;/code&gt; argument. In case of domain names, this method will use Nginx core's dynamic resolver to parse the domain name without blocking and it is required to configure the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver" rel="nofollow"&gt;resolver&lt;/a&gt; directive in the &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;  &lt;span class="pl-c"&gt;# use Google's public DNS nameserver&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the nameserver returns multiple IP addresses for the host name, this method will pick up one randomly.&lt;/p&gt;
&lt;p&gt;In case of error, the method returns &lt;code&gt;nil&lt;/code&gt; followed by a string describing the error. In case of success, the method returns &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example for connecting to a TCP server:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;

     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; sock = ngx.socket.tcp()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = sock:connect(&lt;span class="pl-s"&gt;"www.google.com"&lt;/span&gt;, 80)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to connect to google: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;successfully connected to google!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         sock:close()&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Connecting to a Unix Domain Socket file is also possible:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:/tmp/memcached.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect to the memcached unix domain socket: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;assuming memcached (or something else) is listening on the unix domain socket file &lt;code&gt;/tmp/memcached.sock&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Timeout for the connecting operation is controlled by the &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(host, port)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;Calling this method on an already connected socket object will cause the original connection to be closed first.&lt;/p&gt;
&lt;p&gt;An optional Lua table can be specified as the last argument to this method to specify various connect options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool&lt;/code&gt;
specify a custom name for the connection pool being used. If omitted, then the connection pool name will be generated from the string template &lt;code&gt;"&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;"&lt;/code&gt; or &lt;code&gt;"&amp;lt;unix-socket-path&amp;gt;"&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool_size&lt;/code&gt;
specify the size of the connection pool. If omitted and no
&lt;code&gt;backlog&lt;/code&gt; option was provided, no pool will be created. If omitted
but &lt;code&gt;backlog&lt;/code&gt; was provided, the pool will be created with a default
size equal to the value of the &lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt;
directive.
The connection pool holds up to &lt;code&gt;pool_size&lt;/code&gt; alive connections
ready to be reused by subsequent calls to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, but
note that there is no upper limit to the total number of opened connections
outside of the pool. If you need to restrict the total number of opened
connections, specify the &lt;code&gt;backlog&lt;/code&gt; option.
When the connection pool would exceed its size limit, the least recently used
(kept-alive) connection already in the pool will be closed to make room for
the current connection.
Note that the cosocket connection pool is per Nginx worker process rather
than per Nginx server instance, so the size limit specified here also applies
to every single Nginx worker process. Also note that the size of the connection
pool cannot be changed once it has been created.
This option was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;backlog&lt;/code&gt;
if specified, this module will limit the total number of opened connections
for this pool. No more connections than &lt;code&gt;pool_size&lt;/code&gt; can be opened
for this pool at any time. If the connection pool is full, subsequent
connect operations will be queued into a queue equal to this option's
value (the "backlog" queue).
If the number of queued connect operations is equal to &lt;code&gt;backlog&lt;/code&gt;,
subsequent connect operations will fail and return &lt;code&gt;nil&lt;/code&gt; plus the
error string &lt;code&gt;"too many waiting connect operations"&lt;/code&gt;.
The queued connect operations will be resumed once the number of connections
in the pool is less than &lt;code&gt;pool_size&lt;/code&gt;.
The queued connect operation will abort once they have been queued for more
than &lt;code&gt;connect_timeout&lt;/code&gt;, controlled by
&lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt;, and will return &lt;code&gt;nil&lt;/code&gt; plus
the error string &lt;code&gt;"timeout"&lt;/code&gt;.
This option was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The support for the options table argument was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksslhandshake" class="anchor" aria-hidden="true" href="#tcpsocksslhandshake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:sslhandshake&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;session, err = tcpsock:sslhandshake(reused_session?, server_name?, ssl_verify?, send_status_req?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Does SSL/TLS handshake on the currently established connection.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;reused_session&lt;/code&gt; argument can take a former SSL
session userdata returned by a previous &lt;code&gt;sslhandshake&lt;/code&gt;
call for exactly the same target. For short-lived connections, reusing SSL
sessions can usually speed up the handshake by one order by magnitude but it
is not so useful if the connection pool is enabled. This argument defaults to
&lt;code&gt;nil&lt;/code&gt;. If this argument takes the boolean &lt;code&gt;false&lt;/code&gt; value, no SSL session
userdata would return by this call and only a Lua boolean will be returned as
the first return value; otherwise the current SSL session will
always be returned as the first argument in case of successes.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;server_name&lt;/code&gt; argument is used to specify the server
name for the new TLS extension Server Name Indication (SNI). Use of SNI can
make different servers share the same IP address on the server side. Also,
when SSL verification is enabled, this &lt;code&gt;server_name&lt;/code&gt; argument is
also used to validate the server name specified in the server certificate sent from
the remote.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;ssl_verify&lt;/code&gt; argument takes a Lua boolean value to
control whether to perform SSL verification. When set to &lt;code&gt;true&lt;/code&gt;, the server
certificate will be verified according to the CA certificates specified by
the &lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt; directive.
You may also need to adjust the &lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;
directive to control how deep we should follow along the certificate chain.
Also, when the &lt;code&gt;ssl_verify&lt;/code&gt; argument is true and the
&lt;code&gt;server_name&lt;/code&gt; argument is also specified, the latter will be used
to validate the server name in the server certificate.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;send_status_req&lt;/code&gt; argument takes a boolean that controls whether to send
the OCSP status request in the SSL handshake request (which is for requesting OCSP stapling).&lt;/p&gt;
&lt;p&gt;For connections that have already done SSL/TLS handshake, this method returns
immediately.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksend" class="anchor" aria-hidden="true" href="#tcpsocksend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:send&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;bytes, err = tcpsock:send(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sends data without blocking on the current TCP or Unix Domain Socket connection.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation that will not return until &lt;em&gt;all&lt;/em&gt; the data has been flushed into the system socket send buffer or an error occurs.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the total number of bytes that have been sent. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;The input argument &lt;code&gt;data&lt;/code&gt; can either be a Lua string or a (nested) Lua table holding string fragments. In case of table arguments, this method will copy all the string elements piece by piece to the underlying Nginx socket send buffers, which is usually optimal than doing string concatenation operations on the Lua land.&lt;/p&gt;
&lt;p&gt;Timeout for the sending operation is controlled by the &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; bytes, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;send&lt;/span&gt;(request)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;In case of any connection errors, this method always automatically closes the current connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceive" class="anchor" aria-hidden="true" href="#tcpsockreceive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err, partial = tcpsock:receive(size)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err, partial = tcpsock:receive(pattern?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Receives data from the connected socket according to the reading pattern or size.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation just like the &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error and the partial data received so far.&lt;/p&gt;
&lt;p&gt;If a number-like argument is specified (including strings that look like numbers), then it is interpreted as a size. This method will not return until it reads exactly this size of data or an error occurs.&lt;/p&gt;
&lt;p&gt;If a non-number-like string argument is specified, then it is interpreted as a "pattern". The following patterns are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;'*a'&lt;/code&gt;: reads from the socket until the connection is closed. No end-of-line translation is performed;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'*l'&lt;/code&gt;: reads a line of text from the socket. The line is terminated by a &lt;code&gt;Line Feed&lt;/code&gt; (LF) character (ASCII 10), optionally preceded by a &lt;code&gt;Carriage Return&lt;/code&gt; (CR) character (ASCII 13). The CR and LF characters are not included in the returned line. In fact, all CR characters are ignored by the pattern.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If no argument is specified, then it is assumed to be the pattern &lt;code&gt;'*l'&lt;/code&gt;, that is, the line reading pattern.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; line, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receive&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; line &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.8.8&lt;/code&gt; release, this method no longer automatically closes the current connection when the read timeout error happens. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceiveany" class="anchor" aria-hidden="true" href="#tcpsockreceiveany"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receiveany&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err = tcpsock:receiveany(max)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns any data received by the connected socket, at most &lt;code&gt;max&lt;/code&gt; bytes.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation just like the &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;If the received data is more than this size, this method will return with exactly this size of data.
The remaining data in the underlying receive buffer could be returned in the next reading operation.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeouts&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout for connect/read/write&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveany&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; read any data, at most 10K&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read any data: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method doesn't automatically close the current connection when the read timeout error occurs. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceiveuntil" class="anchor" aria-hidden="true" href="#tcpsockreceiveuntil"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receiveuntil&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;iterator = tcpsock:receiveuntil(pattern, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This method returns an iterator Lua function that can be called to read the data stream until it sees the specified pattern or an error occurs.&lt;/p&gt;
&lt;p&gt;Here is an example for using this method to read a data stream with the boundary sequence &lt;code&gt;--abcedhb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;--abcedhb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When called without any argument, the iterator function returns the received data right &lt;em&gt;before&lt;/em&gt; the specified pattern string in the incoming data stream. So for the example above, if the incoming data stream is &lt;code&gt;'hello, world! -agentzh\r\n--abcedhb blah blah'&lt;/code&gt;, then the string &lt;code&gt;'hello, world! -agentzh'&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;In case of error, the iterator function will return &lt;code&gt;nil&lt;/code&gt; along with a string describing the error and the partial data bytes that have been read so far.&lt;/p&gt;
&lt;p&gt;The iterator function can be called multiple times and can be mixed safely with other cosocket method calls or other iterator function calls.&lt;/p&gt;
&lt;p&gt;The iterator function behaves differently (i.e., like a real iterator) when it is called with a &lt;code&gt;size&lt;/code&gt; argument. That is, it will read that &lt;code&gt;size&lt;/code&gt; of data on each invocation and will return &lt;code&gt;nil&lt;/code&gt; at the last invocation (either sees the boundary pattern or meets an error). For the last successful invocation of the iterator function, the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;nil&lt;/code&gt; too. The iterator function will be reset after the last successful invocation that returns &lt;code&gt;nil&lt;/code&gt; data and &lt;code&gt;nil&lt;/code&gt; error. Consider the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;--abcedhb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

 &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;)
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
             ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
             &lt;span class="pl-k"&gt;break&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
         &lt;span class="pl-k"&gt;break&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read chunk: [&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then for the incoming data stream &lt;code&gt;'hello, world! -agentzh\r\n--abcedhb blah blah'&lt;/code&gt;, we shall get the following output from the sample code above:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;read chunk: [hell]
read chunk: [o, w]
read chunk: [orld]
read chunk: [! -a]
read chunk: [gent]
read chunk: [zh]
read done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that, the actual data returned &lt;em&gt;might&lt;/em&gt; be a little longer than the size limit specified by the &lt;code&gt;size&lt;/code&gt; argument when the boundary pattern has ambiguity for streaming parsing. Near the boundary of the data stream, the data string actually returned could also be shorter than the size limit.&lt;/p&gt;
&lt;p&gt;Timeout for the iterator function's reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; readline &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

 sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 line, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;readline&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; line &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling the iterator function (note that the &lt;code&gt;receiveuntil&lt;/code&gt; call is irrelevant here).&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.1&lt;/code&gt; release, this method also takes an optional &lt;code&gt;options&lt;/code&gt; table argument to control the behavior. The following options are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inclusive&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;inclusive&lt;/code&gt; takes a boolean value to control whether to include the pattern string in the returned data string. Default to &lt;code&gt;false&lt;/code&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; tcpsock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_END_&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { inclusive &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; })
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;()
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then for the input data stream &lt;code&gt;"hello world _END_ blah blah blah"&lt;/code&gt;, then the example above will output &lt;code&gt;hello world _END_&lt;/code&gt;, including the pattern string &lt;code&gt;_END_&lt;/code&gt; itself.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.8.8&lt;/code&gt; release, this method no longer automatically closes the current connection when the read timeout error happens. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockclose" class="anchor" aria-hidden="true" href="#tcpsockclose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:close&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:close()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Closes the current TCP or stream unix domain socket. It returns the &lt;code&gt;1&lt;/code&gt; in case of success and returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Note that there is no need to call this method on socket objects that have invoked the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method because the socket object is already closed (and the current connection is saved into the built-in connection pool).&lt;/p&gt;
&lt;p&gt;Socket objects that have not invoked this method (and associated connections) will be closed when the socket object is released by the Lua GC (Garbage Collector) or the current client HTTP request finishes processing.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksettimeout" class="anchor" aria-hidden="true" href="#tcpsocksettimeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:settimeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:settimeout(time)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the timeout value in milliseconds for subsequent socket operations (&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, and iterators returned from &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method take priority over those specified via config directives (i.e. &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;, &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;, and &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Note that this method does &lt;em&gt;not&lt;/em&gt; affect the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; setting; the &lt;code&gt;timeout&lt;/code&gt; argument to the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method should be used for this purpose instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksettimeouts" class="anchor" aria-hidden="true" href="#tcpsocksettimeouts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:settimeouts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:settimeouts(connect_timeout, send_timeout, read_timeout)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Respectively sets the connect, send, and read timeout thresholds (in milliseconds) for subsequent socket
operations (&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt;, &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, and iterators returned from &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method take priority over those specified via config directives (i.e. &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;, &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;, and &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It is recommended to use &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; instead of &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that this method does &lt;em&gt;not&lt;/em&gt; affect the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; setting; the &lt;code&gt;timeout&lt;/code&gt; argument to the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method should be used for this purpose instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksetoption" class="anchor" aria-hidden="true" href="#tcpsocksetoption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:setoption&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:setoption(option, value?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function is added for &lt;a href="http://w3.impa.br/~diego/software/luasocket/tcp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; API compatibility and does nothing for now. Its functionality will be implemented in future.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksetkeepalive" class="anchor" aria-hidden="true" href="#tcpsocksetkeepalive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:setkeepalive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:setkeepalive(timeout?, size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Puts the current socket's connection immediately into the cosocket built-in connection pool and keep it alive until other &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method calls request it or the associated maximal idle timeout is expired.&lt;/p&gt;
&lt;p&gt;The first optional argument, &lt;code&gt;timeout&lt;/code&gt;, can be used to specify the maximal idle timeout (in milliseconds) for the current connection. If omitted, the default setting in the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; config directive will be used. If the &lt;code&gt;0&lt;/code&gt; value is given, then the timeout interval is unlimited.&lt;/p&gt;
&lt;p&gt;The second optional argument &lt;code&gt;size&lt;/code&gt; is considered deprecated since
the &lt;code&gt;v0.10.14&lt;/code&gt; release of this module, in favor of the
&lt;code&gt;pool_size&lt;/code&gt; option of the &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method.
Since the &lt;code&gt;v0.10.14&lt;/code&gt; release, this option will only take effect if
the call to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; did not already create a connection
pool.
When this option takes effect (no connection pool was previously created by
&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;), it will specify the size of the connection pool,
and create it.
If omitted (and no pool was previously created), the default size is the value
of the &lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt; directive.
The connection pool holds up to &lt;code&gt;size&lt;/code&gt; alive connections ready to be
reused by subsequent calls to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, but note that there
is no upper limit to the total number of opened connections outside of the
pool.
When the connection pool would exceed its size limit, the least recently used
(kept-alive) connection already in the pool will be closed to make room for
the current connection.
Note that the cosocket connection pool is per Nginx worker process rather
than per Nginx server instance, so the size limit specified here also applies
to every single Nginx worker process. Also note that the size of the connection
pool cannot be changed once it has been created.
If you need to restrict the total number of opened connections, specify both
the &lt;code&gt;pool_size&lt;/code&gt; and &lt;code&gt;backlog&lt;/code&gt; option in the call to
&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In case of success, this method returns &lt;code&gt;1&lt;/code&gt;; otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;When the system receive buffer for the current connection has unread data, then this method will return the "connection in dubious state" error message (as the second return value) because the previous session has unread data left behind for the next session and the connection is not safe to be reused.&lt;/p&gt;
&lt;p&gt;This method also makes the current cosocket object enter the "closed" state, so there is no need to manually call the &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt; method on it afterwards.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockgetreusedtimes" class="anchor" aria-hidden="true" href="#tcpsockgetreusedtimes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:getreusedtimes&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count, err = tcpsock:getreusedtimes()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This method returns the (successfully) reused times for the current connection. In case of error, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;If the current connection does not come from the built-in connection pool, then this method always returns &lt;code&gt;0&lt;/code&gt;, that is, the connection has never been reused (yet). If the connection comes from the connection pool, then the return value is always non-zero. So this method can also be used to determine if the current connection comes from the pool.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketconnect" class="anchor" aria-hidden="true" href="#ngxsocketconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.connect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.socket.connect(host, port)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.socket.connect("unix:/path/to/unix-domain.socket")&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function is a shortcut for combining &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp()&lt;/a&gt; and the &lt;a href="#tcpsockconnect"&gt;connect()&lt;/a&gt; method call in a single operation. It is actually implemented like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-c1"&gt;...&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, err
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;return&lt;/span&gt; sock&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is no way to use the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method to specify connecting timeout for this method and the &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt; directive must be set at configure time instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxget_phase" class="anchor" aria-hidden="true" href="#ngxget_phase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.get_phase&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.get_phase()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the current running phase name. Possible return values are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;init&lt;/code&gt;
for the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init_worker&lt;/code&gt;
for the context of &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_cert&lt;/code&gt;
for the context of &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_fetch&lt;/code&gt;
for the context of &lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_store&lt;/code&gt;
for the context of &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;
for the context of &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rewrite&lt;/code&gt;
for the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;balancer&lt;/code&gt;
for the context of &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;access&lt;/code&gt;
for the context of &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;content&lt;/code&gt;
for the context of &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;header_filter&lt;/code&gt;
for the context of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;body_filter&lt;/code&gt;
for the context of &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log&lt;/code&gt;
for the context of &lt;a href="#log_by_lua"&gt;log_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timer&lt;/code&gt;
for the context of user callback functions for &lt;a href="#ngxtimerat"&gt;ngx.timer.*&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.5.10&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadspawn" class="anchor" aria-hidden="true" href="#ngxthreadspawn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.spawn&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = ngx.thread.spawn(func, arg1, arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Spawns a new user "light thread" with the Lua function &lt;code&gt;func&lt;/code&gt; as well as those optional arguments &lt;code&gt;arg1&lt;/code&gt;, &lt;code&gt;arg2&lt;/code&gt;, and etc. Returns a Lua thread (or Lua coroutine) object represents this "light thread".&lt;/p&gt;
&lt;p&gt;"Light threads" are just a special kind of Lua coroutines that are scheduled by the ngx_lua module.&lt;/p&gt;
&lt;p&gt;Before &lt;code&gt;ngx.thread.spawn&lt;/code&gt; returns, the &lt;code&gt;func&lt;/code&gt; will be called with those optional arguments until it returns, aborts with an error, or gets yielded due to I/O operations via the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; (like &lt;a href="#tcpsockreceive"&gt;tcpsock:receive&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;After &lt;code&gt;ngx.thread.spawn&lt;/code&gt; returns, the newly-created "light thread" will keep running asynchronously usually at various I/O events.&lt;/p&gt;
&lt;p&gt;All the Lua code chunks running by &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;, &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, and &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; are in a boilerplate "light thread" created automatically by ngx_lua. Such boilerplate "light thread" are also called "entry threads".&lt;/p&gt;
&lt;p&gt;By default, the corresponding Nginx handler (e.g., &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler) will not terminate until&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;both the "entry thread" and all the user "light threads" terminates,&lt;/li&gt;
&lt;li&gt;a "light thread" (either the "entry thread" or a user "light thread" aborts by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;, or &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri(uri, true)&lt;/a&gt;, or&lt;/li&gt;
&lt;li&gt;the "entry thread" terminates with a Lua error.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When the user "light thread" terminates with a Lua error, however, it will not abort other running "light threads" like the "entry thread" does.&lt;/p&gt;
&lt;p&gt;Due to the limitation in the Nginx subrequest model, it is not allowed to abort a running Nginx subrequest in general. So it is also prohibited to abort a running "light thread" that is pending on one ore more Nginx subrequests. You must call &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt; to wait for those "light thread" to terminate before quitting the "world". A notable exception here is that you can abort pending subrequests by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with and only with the status code &lt;code&gt;ngx.ERROR&lt;/code&gt; (-1), &lt;code&gt;408&lt;/code&gt;, &lt;code&gt;444&lt;/code&gt;, or &lt;code&gt;499&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The "light threads" are not scheduled in a pre-emptive way. In other words, no time-slicing is performed automatically. A "light thread" will keep running exclusively on the CPU until&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;a (nonblocking) I/O operation cannot be completed in a single run,&lt;/li&gt;
&lt;li&gt;it calls &lt;a href="#coroutineyield"&gt;coroutine.yield&lt;/a&gt; to actively give up execution, or&lt;/li&gt;
&lt;li&gt;it is aborted by a Lua error or an invocation of &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;, or &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri(uri, true)&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the first two cases, the "light thread" will usually be resumed later by the ngx_lua scheduler unless a "stop-the-world" event happens.&lt;/p&gt;
&lt;p&gt;User "light threads" can create "light threads" themselves. And normal user coroutines created by &lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt; can also create "light threads". The coroutine (be it a normal Lua coroutine or a "light thread") that directly spawns the "light thread" is called the "parent coroutine" for the "light thread" newly spawned.&lt;/p&gt;
&lt;p&gt;The "parent coroutine" can call &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt; to wait on the termination of its child "light thread".&lt;/p&gt;
&lt;p&gt;You can call coroutine.status() and coroutine.yield() on the "light thread" coroutines.&lt;/p&gt;
&lt;p&gt;The status of the "light thread" coroutine can be "zombie" if&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the current "light thread" already terminates (either successfully or with an error),&lt;/li&gt;
&lt;li&gt;its parent coroutine is still alive, and&lt;/li&gt;
&lt;li&gt;its parent coroutine is not waiting on it with &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following example demonstrates the use of coroutine.yield() in the "light thread" coroutines
to do manual time-slicing:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; yield &lt;span class="pl-k"&gt;=&lt;/span&gt; coroutine.&lt;span class="pl-smi"&gt;yield&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;coroutine.running&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;coroutine.running&lt;/span&gt;()
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(f)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then it will generate the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0
1
f 1
2
f 2
3
f 3
4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;"Light threads" are mostly useful for making concurrent upstream requests in a single Nginx request handler, much like a generalized version of &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; that can work with all the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt;. The following example demonstrates parallel requests to MySQL, Memcached, and upstream HTTP services in a single Lua handler, and outputting the results in the order that they actually return (similar to Facebook's BigPipe model):&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; query mysql, memcached, and a remote http service at the same time,&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; output the results in the order that they&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; actually return the results.&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; mysql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.mysql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; memcached &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.memcached&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_mysql&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; mysql:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()
     db:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;{
                 host &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 port &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3306&lt;/span&gt;,
                 database &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;monty&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mypass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
               }
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err, errno, sqlstate &lt;span class="pl-k"&gt;=&lt;/span&gt;
             db:&lt;span class="pl-c1"&gt;query&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;select * from cats order by id asc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     db:&lt;span class="pl-c1"&gt;set_keepalive&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mysql done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_memcached&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; memc &lt;span class="pl-k"&gt;=&lt;/span&gt; memcached:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()
     memc:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;11211&lt;/span&gt;)
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; memc:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some_key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;memcached done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_http&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/my-http-proxy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;body&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_mysql)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 1&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_memcached)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 2&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_http)       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.7.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadwait" class="anchor" aria-hidden="true" href="#ngxthreadwait"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.wait&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, res1, res2, ... = ngx.thread.wait(thread1, thread2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Waits on one or more child "light threads" and returns the results of the first "light thread" that terminates (either successfully or with an error).&lt;/p&gt;
&lt;p&gt;The arguments &lt;code&gt;thread1&lt;/code&gt;, &lt;code&gt;thread2&lt;/code&gt;, and etc are the Lua thread objects returned by earlier calls of &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The return values have exactly the same meaning as &lt;a href="#coroutineresume"&gt;coroutine.resume&lt;/a&gt;, that is, the first value returned is a boolean value indicating whether the "light thread" terminates successfully or not, and subsequent values returned are the return values of the user Lua function that was used to spawn the "light thread" (in case of success) or the error object (in case of failure).&lt;/p&gt;
&lt;p&gt;Only the direct "parent coroutine" can wait on its child "light thread", otherwise a Lua exception will be raised.&lt;/p&gt;
&lt;p&gt;The following example demonstrates the use of &lt;code&gt;ngx.thread.wait&lt;/code&gt; and &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; to emulate &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; capture &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-smi"&gt;capture&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; spawn &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-smi"&gt;spawn&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; wait &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-smi"&gt;wait&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; say &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;say&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt;(&lt;span class="pl-smi"&gt;uri&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;capture&lt;/span&gt;(uri)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; threads &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 }

 &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;#&lt;/span&gt;threads &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, res &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;wait&lt;/span&gt;(threads[i])
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: failed to run: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
     &lt;span class="pl-k"&gt;else&lt;/span&gt;
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: status: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;status&lt;/span&gt;)
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: body: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;body&lt;/span&gt;)
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here it essentially implements the "wait all" model.&lt;/p&gt;
&lt;p&gt;And below is an example demonstrating the "wait any" model:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f: hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g: hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; tf, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(f)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; tf &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to spawn thread f: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f thread created: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;coroutine.status&lt;/span&gt;(tf))

 &lt;span class="pl-k"&gt;local&lt;/span&gt; tg, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(g)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; tg &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to spawn thread g: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g thread created: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;coroutine.status&lt;/span&gt;(tg))

 ok, res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;wait&lt;/span&gt;(tf, tg)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to wait: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;res: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; stop the "world", aborting other running threads&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;OK&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And it will generate the following output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;f thread created: running
g thread created: running
g: hello
res: g done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.7.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadkill" class="anchor" aria-hidden="true" href="#ngxthreadkill"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.kill&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.thread.kill(thread)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Kills a running "light thread" created by &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;. Returns a true value when successful or &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;According to the current implementation, only the parent coroutine (or "light thread") can kill a thread. Also, a running "light thread" with pending Nginx subrequests (initiated by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; for example) cannot be killed due to a limitation in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.9.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxon_abort" class="anchor" aria-hidden="true" href="#ngxon_abort"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.on_abort&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.on_abort(callback)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Registers a user Lua function as the callback which gets called automatically when the client closes the (downstream) connection prematurely.&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;1&lt;/code&gt; if the callback is registered successfully or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;All the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; can be used in the callback function because the function is run in a special "light thread", just as those "light threads" created by &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The callback function can decide what to do with the client abortion event all by itself. For example, it can simply ignore the event by doing nothing and the current Lua request handler will continue executing without interruptions. And the callback function can also decide to terminate everything by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;my_cleanup&lt;/span&gt;()
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; custom cleanup work goes here, like cancelling a pending DB transaction&lt;/span&gt;

     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; now abort all the "light threads" running in the current request handler&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;499&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;on_abort&lt;/span&gt;(my_cleanup)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to register the on_abort callback: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When &lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt; is set to &lt;code&gt;off&lt;/code&gt; (which is the default), then this function call will always return the error message "lua_check_client_abort is off".&lt;/p&gt;
&lt;p&gt;According to the current implementation, this function can only be called once in a single request handler; subsequent calls will return the error message "duplicate call".&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.7.4&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerat" class="anchor" aria-hidden="true" href="#ngxtimerat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.at&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;hdl, err = ngx.timer.at(delay, callback, user_arg1, user_arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates an Nginx timer with a user callback function as well as optional user arguments.&lt;/p&gt;
&lt;p&gt;The first argument, &lt;code&gt;delay&lt;/code&gt;, specifies the delay for the timer,
in seconds. One can specify fractional seconds like &lt;code&gt;0.001&lt;/code&gt; to mean 1
millisecond here. &lt;code&gt;0&lt;/code&gt; delay can also be specified, in which case the
timer will immediately expire when the current handler yields
execution.&lt;/p&gt;
&lt;p&gt;The second argument, &lt;code&gt;callback&lt;/code&gt;, can
be any Lua function, which will be invoked later in a background
"light thread" after the delay specified. The user callback will be
called automatically by the Nginx core with the arguments &lt;code&gt;premature&lt;/code&gt;,
&lt;code&gt;user_arg1&lt;/code&gt;, &lt;code&gt;user_arg2&lt;/code&gt;, and etc, where the &lt;code&gt;premature&lt;/code&gt;
argument takes a boolean value indicating whether it is a premature timer
expiration or not, and &lt;code&gt;user_arg1&lt;/code&gt;, &lt;code&gt;user_arg2&lt;/code&gt;, and etc, are
those (extra) user arguments specified when calling &lt;code&gt;ngx.timer.at&lt;/code&gt;
as the remaining arguments.&lt;/p&gt;
&lt;p&gt;Premature timer expiration happens when the Nginx worker process is
trying to shut down, as in an Nginx configuration reload triggered by
the &lt;code&gt;HUP&lt;/code&gt; signal or in an Nginx server shutdown. When the Nginx worker
is trying to shut down, one can no longer call &lt;code&gt;ngx.timer.at&lt;/code&gt; to
create new timers with nonzero delays and in that case &lt;code&gt;ngx.timer.at&lt;/code&gt; will return a "conditional false" value and
a string describing the error, that is, "process exiting".&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;v0.9.3&lt;/code&gt; release, it is allowed to create zero-delay timers even when the Nginx worker process starts shutting down.&lt;/p&gt;
&lt;p&gt;When a timer expires, the user Lua code in the timer callback is
running in a "light thread" detached completely from the original
request creating the timer. So objects with the same lifetime as the
request creating them, like &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;, cannot be shared between the
original request and the timer user callback function.&lt;/p&gt;
&lt;p&gt;Here is a simple example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     ...
     &lt;span class="pl-k"&gt;log_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; function push_data(premature, uri, args, status)
             -- &lt;span class="pl-k"&gt;push&lt;/span&gt; the data uri, args, and status to the remote
             -- &lt;span class="pl-k"&gt;via&lt;/span&gt; ngx.socket.tcp or ngx.socket.udp
             -- (&lt;span class="pl-k"&gt;one&lt;/span&gt; may want to buffer the data in Lua &lt;span class="pl-s"&gt;a&lt;/span&gt; bit to
             -- &lt;span class="pl-k"&gt;save&lt;/span&gt; I/O operations)
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = ngx.timer.at(0, push_data,
                                      ngx.var.uri, ngx.var.args, ngx.header.status)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.log(ngx.ERR, "&lt;span class="pl-k"&gt;failed&lt;/span&gt; to create timer: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One can also create infinite re-occurring timers, for instance, a timer getting triggered every &lt;code&gt;5&lt;/code&gt; seconds, by calling &lt;code&gt;ngx.timer.at&lt;/code&gt; recursively in the timer callback function. Here is such an example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; delay &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; handler
 handler &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;premature&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; do some routine job in Lua just like a cron job&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; premature &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;timer&lt;/span&gt;.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(delay, handler)
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to create the timer: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;timer&lt;/span&gt;.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(delay, handler)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to create the timer: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is recommended, however, to use the &lt;a href="#ngxtimerevery"&gt;ngx.timer.every&lt;/a&gt; API function
instead for creating recurring timers since it is more robust.&lt;/p&gt;
&lt;p&gt;Because timer callbacks run in the background and their running time
will not add to any client request's response time, they can easily
accumulate in the server and exhaust system resources due to either
Lua programming mistakes or just too much client traffic. To prevent
extreme consequences like crashing the Nginx server, there are
built-in limitations on both the number of "pending timers" and the
number of "running timers" in an Nginx worker process. The "pending
timers" here mean timers that have not yet been expired and "running
timers" are those whose user callbacks are currently running.&lt;/p&gt;
&lt;p&gt;The maximal number of pending timers allowed in an Nginx
worker is controlled by the &lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt;
directive. The maximal number of running timers is controlled by the
&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;According to the current implementation, each "running timer" will
take one (fake) connection record from the global connection record
list configured by the standard &lt;a href="http://nginx.org/en/docs/ngx_core_module.html#worker_connections" rel="nofollow"&gt;worker_connections&lt;/a&gt; directive in
&lt;code&gt;nginx.conf&lt;/code&gt;. So ensure that the
&lt;a href="http://nginx.org/en/docs/ngx_core_module.html#worker_connections" rel="nofollow"&gt;worker_connections&lt;/a&gt; directive is set to
a large enough value that takes into account both the real connections
and fake connections required by timer callbacks (as limited by the
&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt; directive).&lt;/p&gt;
&lt;p&gt;A lot of the Lua APIs for Nginx are enabled in the context of the timer
callbacks, like stream/datagram cosockets (&lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;), shared
memory dictionaries (&lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;), user coroutines (&lt;a href="#coroutinecreate"&gt;coroutine.*&lt;/a&gt;),
user "light threads" (&lt;a href="#ngxthreadspawn"&gt;ngx.thread.*&lt;/a&gt;), &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt;/&lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;,
&lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt;/&lt;a href="#ngxsha1_bin"&gt;ngx.sha1_bin&lt;/a&gt;, are all allowed. But the subrequest API (like
&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;), the &lt;a href="#ngxreqstart_time"&gt;ngx.req.*&lt;/a&gt; API, the downstream output API
(like &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;, and &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt;) are explicitly disabled in
this context.&lt;/p&gt;
&lt;p&gt;You can pass most of the standard Lua values (nils, booleans, numbers, strings, tables, closures, file handles, and etc) into the timer callback, either explicitly as user arguments or implicitly as upvalues for the callback closure. There are several exceptions, however: you &lt;em&gt;cannot&lt;/em&gt; pass any thread objects returned by &lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt; and &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt; or any cosocket objects returned by &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;, &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; because these objects' lifetime is bound to the request context creating them while the timer callback is detached from the creating request's context (by design) and runs in its own (fake) request context. If you try to share the thread or cosocket objects across the boundary of the creating request, then you will get the "no co ctx found" error (for threads) or "bad request" (for cosockets). It is fine, however, to create all these objects inside your timer callback.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerevery" class="anchor" aria-hidden="true" href="#ngxtimerevery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.every&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;hdl, err = ngx.timer.every(delay, callback, user_arg1, user_arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API function, but&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;delay&lt;/code&gt; &lt;em&gt;cannot&lt;/em&gt; be zero,&lt;/li&gt;
&lt;li&gt;timer will be created every &lt;code&gt;delay&lt;/code&gt; seconds until the current Nginx worker process starts exiting.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When success, returns a "conditional true" value (but not a &lt;code&gt;true&lt;/code&gt;). Otherwise, returns a "conditional false" value and a string describing the error.&lt;/p&gt;
&lt;p&gt;This API also respect the &lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt; and &lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.10.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerrunning_count" class="anchor" aria-hidden="true" href="#ngxtimerrunning_count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.running_count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.timer.running_count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of timers currently running.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerpending_count" class="anchor" aria-hidden="true" href="#ngxtimerpending_count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.pending_count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.timer.pending_count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of pending timers.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigsubsystem" class="anchor" aria-hidden="true" href="#ngxconfigsubsystem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.subsystem&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;subsystem = ngx.config.subsystem&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This string field indicates the current Nginx subsystem the current Lua environment is based on. For this module, this field always takes the string value &lt;code&gt;"http"&lt;/code&gt;. For
&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua_module&lt;/a&gt;, however, this field takes the value &lt;code&gt;"stream"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This field was first introduced in the &lt;code&gt;0.10.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigdebug" class="anchor" aria-hidden="true" href="#ngxconfigdebug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.debug&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;debug = ngx.config.debug&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This boolean field indicates whether the current Nginx is a debug build, i.e., being built by the &lt;code&gt;./configure&lt;/code&gt; option &lt;code&gt;--with-debug&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This field was first introduced in the &lt;code&gt;0.8.7&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigprefix" class="anchor" aria-hidden="true" href="#ngxconfigprefix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.prefix&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;prefix = ngx.config.prefix()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the Nginx server "prefix" path, as determined by the &lt;code&gt;-p&lt;/code&gt; command-line option when running the Nginx executable, or the path specified by the &lt;code&gt;--prefix&lt;/code&gt; command-line option when building Nginx with the &lt;code&gt;./configure&lt;/code&gt; script.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfignginx_version" class="anchor" aria-hidden="true" href="#ngxconfignginx_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.nginx_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ver = ngx.config.nginx_version&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This field take an integral value indicating the version number of the current Nginx core being used. For example, the version number &lt;code&gt;1.4.3&lt;/code&gt; results in the Lua number 1004003.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfignginx_configure" class="anchor" aria-hidden="true" href="#ngxconfignginx_configure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.nginx_configure&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.config.nginx_configure()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a string for the Nginx &lt;code&gt;./configure&lt;/code&gt; command's arguments string.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigngx_lua_version" class="anchor" aria-hidden="true" href="#ngxconfigngx_lua_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.ngx_lua_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ver = ngx.config.ngx_lua_version&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This field take an integral value indicating the version number of the current &lt;code&gt;ngx_lua&lt;/code&gt; module being used. For example, the version number &lt;code&gt;0.9.3&lt;/code&gt; results in the Lua number 9003.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerexiting" class="anchor" aria-hidden="true" href="#ngxworkerexiting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.exiting&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;exiting = ngx.worker.exiting()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a boolean value indicating whether the current Nginx worker process already starts exiting. Nginx worker process exiting happens on Nginx server quit or configuration reload (aka HUP reload).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerpid" class="anchor" aria-hidden="true" href="#ngxworkerpid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.pid&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;pid = ngx.worker.pid()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a Lua number for the process ID (PID) of the current Nginx worker process. This API is more efficient than &lt;code&gt;ngx.var.pid&lt;/code&gt; and can be used in contexts where the &lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt; API cannot be used (like &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkercount" class="anchor" aria-hidden="true" href="#ngxworkercount"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.worker.count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the total number of the Nginx worker processes (i.e., the value configured
by the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#worker_processes" rel="nofollow"&gt;worker_processes&lt;/a&gt;
directive in &lt;code&gt;nginx.conf&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerid" class="anchor" aria-hidden="true" href="#ngxworkerid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.id&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.worker.id()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the ordinal number of the current Nginx worker processes (starting from number 0).&lt;/p&gt;
&lt;p&gt;So if the total number of workers is &lt;code&gt;N&lt;/code&gt;, then this method may return a number between 0
and &lt;code&gt;N - 1&lt;/code&gt; (inclusive).&lt;/p&gt;
&lt;p&gt;This function returns meaningful values only for Nginx 1.9.1+. With earlier versions of Nginx, it
always returns &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxworkercount"&gt;ngx.worker.count&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsemaphore" class="anchor" aria-hidden="true" href="#ngxsemaphore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.semaphore&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local semaphore = require "ngx.semaphore"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a Lua module that implements a classic-style semaphore API for efficient synchronizations among
different "light threads". Sharing the same semaphore among different "light threads" created in different (request)
contexts are also supported as long as the "light threads" reside in the same Nginx worker process
and the &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; directive is turned on (which is the default).&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/semaphore.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.semaphore&lt;/code&gt; Lua module in &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxbalancer" class="anchor" aria-hidden="true" href="#ngxbalancer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.balancer&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local balancer = require "ngx.balancer"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a Lua module that provides a Lua API to allow defining completely dynamic load balancers
in pure Lua.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/balancer.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.balancer&lt;/code&gt; Lua module in &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxssl" class="anchor" aria-hidden="true" href="#ngxssl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ssl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local ssl = require "ngx.ssl"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This Lua module provides API functions to control the SSL handshake process in contexts like
&lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.ssl&lt;/code&gt; Lua module for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxocsp" class="anchor" aria-hidden="true" href="#ngxocsp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ocsp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local ocsp = require "ngx.ocsp"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This Lua module provides API to perform OCSP queries, OCSP response validations, and
OCSP stapling planting.&lt;/p&gt;
&lt;p&gt;Usually, this module is used together with the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
module in the
context of &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.ocsp&lt;/code&gt; Lua module for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ndkset_vardirective" class="anchor" aria-hidden="true" href="#ndkset_vardirective"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ndk.set_var.DIRECTIVE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res = ndk.set_var.DIRECTIVE_NAME&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This mechanism allows calling other Nginx C modules' directives that are implemented by &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;Nginx Devel Kit&lt;/a&gt; (NDK)'s set_var submodule's &lt;code&gt;ndk_set_var_value&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, the following &lt;a href="http://github.com/openresty/set-misc-nginx-module"&gt;set-misc-nginx-module&lt;/a&gt; directives can be invoked this way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_sql_str"&gt;set_quote_sql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_pgsql_str"&gt;set_quote_pgsql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_json_str"&gt;set_quote_json_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_unescape_uri"&gt;set_unescape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_escape_uri"&gt;set_escape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base32"&gt;set_encode_base32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base32"&gt;set_decode_base32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_encode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_decode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_encode_hex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_decode_hex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_sha1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_md5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ndk.&lt;span class="pl-smi"&gt;set_var&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_escape_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a/b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; now res == 'a%2fb'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, the following directives provided by &lt;a href="http://github.com/openresty/encrypted-session-nginx-module"&gt;encrypted-session-nginx-module&lt;/a&gt; can be invoked from within Lua too:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/encrypted-session-nginx-module#set_encrypt_session"&gt;set_encrypt_session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/encrypted-session-nginx-module#set_decrypt_session"&gt;set_decrypt_session&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This feature requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinecreate" class="anchor" aria-hidden="true" href="#coroutinecreate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.create&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.create(f)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates a user Lua coroutines with a Lua function, and returns a coroutine object.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.create" rel="nofollow"&gt;coroutine.create&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutineresume" class="anchor" aria-hidden="true" href="#coroutineresume"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.resume&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, ... = coroutine.resume(co, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Resumes the executation of a user Lua coroutine object previously yielded or just created.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.resume" rel="nofollow"&gt;coroutine.resume&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutineyield" class="anchor" aria-hidden="true" href="#coroutineyield"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.yield&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;... = coroutine.yield(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Yields the execution of the current user Lua coroutine.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.yield" rel="nofollow"&gt;coroutine.yield&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinewrap" class="anchor" aria-hidden="true" href="#coroutinewrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.wrap&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.wrap(f)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.wrap" rel="nofollow"&gt;coroutine.wrap&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinerunning" class="anchor" aria-hidden="true" href="#coroutinerunning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.running&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.running()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Identical to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.running" rel="nofollow"&gt;coroutine.running&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinestatus" class="anchor" aria-hidden="true" href="#coroutinestatus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.status&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;status = coroutine.status(co)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Identical to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.status" rel="nofollow"&gt;coroutine.status&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-obsolete-sections" class="anchor" aria-hidden="true" href="#obsolete-sections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obsolete Sections&lt;/h1&gt;
&lt;p&gt;This section is just holding obsolete documentation sections that have been either renamed or removed so that existing links over the web are still valid.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-special-pcre-sequences" class="anchor" aria-hidden="true" href="#special-pcre-sequences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special PCRE Sequences&lt;/h2&gt;
&lt;p&gt;This section has been renamed to &lt;a href="#special-escaping-sequences"&gt;Special Escaping Sequences&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lualuajit-bytecode-support" class="anchor" aria-hidden="true" href="#lualuajit-bytecode-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua/LuaJIT bytecode support&lt;/h2&gt;
&lt;p&gt;This section has been renamed to
&lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode support&lt;/a&gt;. As of version
&lt;code&gt;v0.10.16&lt;/code&gt; of this module, the standard Lua interpreter (also known
as "PUC-Rio Lua") is not supported anymore.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openresty</author><guid isPermaLink="false">https://github.com/openresty/lua-nginx-module</guid><pubDate>Thu, 26 Dec 2019 00:18:00 GMT</pubDate></item><item><title>esp8266/Arduino #19 in C, This month</title><link>https://github.com/esp8266/Arduino</link><description>&lt;p&gt;&lt;i&gt;ESP8266 core for Arduino&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-arduino-core-for-esp8266-wifi-chip" class="anchor" aria-hidden="true" href="#arduino-core-for-esp8266-wifi-chip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arduino core for ESP8266 WiFi chip&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-quick-links" class="anchor" aria-hidden="true" href="#quick-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arduino-esp8266.readthedocs.io/en/2.6.3/" rel="nofollow"&gt;Latest release documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/" rel="nofollow"&gt;Current "git version" documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/installing.html#using-git-version" rel="nofollow"&gt;Install git version&lt;/a&gt; (&lt;a href="doc/installing.rst#using-git-version"&gt;sources&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-arduino-on-esp8266" class="anchor" aria-hidden="true" href="#arduino-on-esp8266"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arduino on ESP8266&lt;/h1&gt;
&lt;p&gt;This project brings support for the ESP8266 chip to the Arduino environment. It lets you write sketches, using familiar Arduino functions and libraries, and run them directly on ESP8266, with no external microcontroller required.&lt;/p&gt;
&lt;p&gt;ESP8266 Arduino core comes with libraries to communicate over WiFi using TCP and UDP, set up HTTP, mDNS, SSDP, and DNS servers, do OTA updates, use a file system in flash memory, and work with SD cards, servos, SPI and I2C peripherals.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Installing options:
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installing-with-boards-manager"&gt;Using Boards Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-git-version"&gt;Using git version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-platformio"&gt;Using PlatformIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-with-make"&gt;Building with make&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issues-and-support"&gt;Issues and support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license-and-credits"&gt;License and credits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installing-with-boards-manager" class="anchor" aria-hidden="true" href="#installing-with-boards-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing with Boards Manager&lt;/h3&gt;
&lt;p&gt;Starting with 1.6.4, Arduino allows installation of third-party platform packages using Boards Manager. We have packages available for Windows, Mac OS, and Linux (32 and 64 bit).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the current upstream Arduino IDE at the 1.8.7 level or later. The current version is on the &lt;a href="https://www.arduino.cc/en/main/software" rel="nofollow"&gt;Arduino website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Start Arduino and open the Preferences window.&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;https://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt; into the &lt;em&gt;Additional Board Manager URLs&lt;/em&gt; field. You can add multiple URLs, separating them with commas.&lt;/li&gt;
&lt;li&gt;Open Boards Manager from Tools &amp;gt; Board menu and install &lt;em&gt;esp8266&lt;/em&gt; platform (and don't forget to select your ESP8266 board from Tools &amp;gt; Board menu after installation).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-latest-release-" class="anchor" aria-hidden="true" href="#latest-release-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest release &lt;a href="https://github.com/esp8266/Arduino/releases/latest/"&gt;&lt;img src="https://camo.githubusercontent.com/27457a237f37ff4856f7cf9daf0ee82d1347ddb5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f657370383236362f41726475696e6f2e737667" alt="Latest release" data-canonical-src="https://img.shields.io/github/release/esp8266/Arduino.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Boards manager link: &lt;code&gt;https://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Documentation: &lt;a href="https://arduino-esp8266.readthedocs.io/en/2.6.3/" rel="nofollow"&gt;https://arduino-esp8266.readthedocs.io/en/2.6.3/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-git-version" class="anchor" aria-hidden="true" href="#using-git-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using git version&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/esp8266/Arduino" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0832c7036e70ae03371e34f7e8f23f414f4fc37b/68747470733a2f2f7472617669732d63692e6f72672f657370383236362f41726475696e6f2e737667" alt="Linux build status" data-canonical-src="https://travis-ci.org/esp8266/Arduino.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also known as latest git or master branch.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the current upstream Arduino IDE at the 1.8 level or later. The current version is on the &lt;a href="https://www.arduino.cc/en/main/software" rel="nofollow"&gt;Arduino website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/installing.html#using-git-version" rel="nofollow"&gt;instructions in the documentation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-platformio" class="anchor" aria-hidden="true" href="#using-platformio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using PlatformIO&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platformio.org?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;PlatformIO&lt;/a&gt; is an open source ecosystem for IoT
development with a cross-platform build system, a library manager, and full support
for Espressif (ESP8266) development. It works on the following popular host operating systems: macOS, Windows,
Linux 32/64, and Linux ARM (like Raspberry Pi, BeagleBone, CubieBoard).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/what-is-platformio.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;What is PlatformIO?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://platformio.org/platformio-ide?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;PlatformIO IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/core.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;PlatformIO Core&lt;/a&gt; (command line tool)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/platforms/espressif8266.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;Advanced usage&lt;/a&gt; -
custom settings, uploading to SPIFFS, Over-the-Air (OTA), staging version&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/ide.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;Integration with Cloud and Standalone IDEs&lt;/a&gt; -
Cloud9, Codeanywhere, Eclipse Che (Codenvy), Atom, CLion, Eclipse, Emacs, NetBeans, Qt Creator, Sublime Text, VIM, Visual Studio, and VSCode&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/platforms/espressif8266.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266#examples" rel="nofollow"&gt;Project Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-make" class="anchor" aria-hidden="true" href="#building-with-make"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with make&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/plerup/makeEspArduino"&gt;makeEspArduino&lt;/a&gt; is a generic makefile for any ESP8266 Arduino project.
Using make instead of the Arduino IDE makes it easier to do automated and production builds.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;p&gt;Documentation for latest development version: &lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/" rel="nofollow"&gt;https://arduino-esp8266.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issues-and-support" class="anchor" aria-hidden="true" href="#issues-and-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues and support&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.esp8266.com/u/arduinoanswers" rel="nofollow"&gt;ESP8266 Community Forum&lt;/a&gt; is a well-established community for questions and answers about Arduino for ESP8266. If you need help, have a "How do I..." type question, have a problem with a 3rd party library not hosted in this repo, or just want to discuss how to approach a problem, please ask there.&lt;/p&gt;
&lt;p&gt;If you find the forum useful, please consider supporting it with a donation. &lt;br&gt;
&lt;a href="https://www.paypal.com/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=4M56YCWV6PX66" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11b2f47d7b4af17ef3a803f57c37de3ac82ac039/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70617970616c2d646f6e6174652d79656c6c6f772e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/paypal-donate-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you encounter an issue which you think is a bug in the ESP8266 Arduino Core or the associated libraries, or if you want to propose an enhancement, you are welcome to submit it here on Github: &lt;a href="https://github.com/esp8266/Arduino/issues"&gt;https://github.com/esp8266/Arduino/issues&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please provide as much context as possible, as well as the information requested in the issue template:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ESP8266 Arduino core version which you are using (you can check it in Boards Manager)&lt;/li&gt;
&lt;li&gt;your sketch code; please wrap it into a code block, see &lt;a href="https://help.github.com/articles/basic-writing-and-formatting-syntax/#quoting-code"&gt;Github markdown manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;when encountering an issue that happens at run time, attach the serial output. Wrap it into a code block, just like the code.&lt;/li&gt;
&lt;li&gt;for issues that happen at compile time, enable verbose compiler output in the IDE preferences, and attach that output (also inside a code block)&lt;/li&gt;
&lt;li&gt;ESP8266 development board model&lt;/li&gt;
&lt;li&gt;IDE settings (board choice, flash size)&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;For minor fixes of code and documentation, please go ahead and submit a pull request.  A gentle introduction to the process can be found &lt;a href="https://www.freecodecamp.org/news/a-simple-git-guide-and-cheat-sheet-for-open-source-contributors/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out the list of issues that are easy to fix — &lt;a href="https://github.com/esp8266/Arduino/issues?q=is%3Aopen+is%3Aissue+label%3A%22level%3A+easy%22"&gt;easy issues pending&lt;/a&gt;. Working on them is a great way to move the project forward.&lt;/p&gt;
&lt;p&gt;Larger changes (rewriting parts of existing code from scratch, adding new functions to the core, adding new libraries) should generally be discussed by opening an issue first.&lt;/p&gt;
&lt;p&gt;Feature branches with lots of small commits (especially titled "oops", "fix typo", "forgot to add file", etc.) should be squashed before opening a pull request. At the same time, please refrain from putting multiple unrelated changes into a single pull request.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license-and-credits" class="anchor" aria-hidden="true" href="#license-and-credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License and credits&lt;/h3&gt;
&lt;p&gt;Arduino IDE is developed and maintained by the Arduino team. The IDE is licensed under GPL.&lt;/p&gt;
&lt;p&gt;ESP8266 core includes an xtensa gcc toolchain, which is also under GPL.&lt;/p&gt;
&lt;p&gt;Esptool.py was initially created by Fredrik Ahlberg (@themadinventor, @kongo), and is currently maintained by Angus Gratton (@projectgus) under GPL 2.0 license.&lt;/p&gt;
&lt;p&gt;Espressif SDK included in this build is under Espressif MIT License.&lt;/p&gt;
&lt;p&gt;ESP8266 core files are licensed under LGPL.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pellepl/spiffs"&gt;SPI Flash File System (SPIFFS)&lt;/a&gt; written by Peter Andersson is used in this project. It is distributed under the MIT license.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rhempel/umm_malloc"&gt;umm_malloc&lt;/a&gt; memory management library written by Ralph Hempel is used in this project. It is distributed under the MIT license.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plerup/espsoftwareserial"&gt;SoftwareSerial&lt;/a&gt; library and examples written by Peter Lerup. Distributed under LGPL 2.1.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://axtls.sourceforge.net/" rel="nofollow"&gt;axTLS&lt;/a&gt; library written by Cameron Rich, built from &lt;a href="https://github.com/igrr/axtls-8266"&gt;https://github.com/igrr/axtls-8266&lt;/a&gt;, is used in this project. It is distributed under &lt;a href="https://github.com/igrr/axtls-8266/blob/master/LICENSE"&gt;BSD license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bearssl.org" rel="nofollow"&gt;BearSSL&lt;/a&gt; library written by Thomas Pornin, built from &lt;a href="https://github.com/earlephilhower/bearssl-esp8266"&gt;https://github.com/earlephilhower/bearssl-esp8266&lt;/a&gt;, is used in this project.  It is distributed under the &lt;a href="https://bearssl.org/#legal-details" rel="nofollow"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ARMmbed/littlefs"&gt;LittleFS&lt;/a&gt; library written by ARM Limited and released under the &lt;a href="https://github.com/ARMmbed/littlefs/blob/master/LICENSE.md"&gt;BSD 3-clause license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pfalcon/uzlib"&gt;uzlib&lt;/a&gt; library written and (c) 2014-2018 Paul Sokolovsky, licensed under the ZLib license (&lt;a href="https://www.zlib.net/zlib_license.html" rel="nofollow"&gt;https://www.zlib.net/zlib_license.html&lt;/a&gt;). uzlib is based on: tinf library by Joergen Ibsen (Deflate decompression); Deflate Static Huffman tree routines by Simon Tatham; LZ77 compressor by Paul Sokolovsky; with library integrated and maintained by Paul Sokolovsky.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other-useful-links" class="anchor" aria-hidden="true" href="#other-useful-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other useful links&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/earlephilhower/esp-quick-toolchain"&gt;Toolchain repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/d-a-v/esp82xx-nonos-linklayer"&gt;Lwip link layer repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plerup/espsoftwareserial"&gt;SoftwareSerial repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mytrain/arduino-esp8266-serial-plugin"&gt;Serial Monitor Arduino IDE plugin&lt;/a&gt; Original discussion &lt;a href="https://github.com/esp8266/Arduino/issues/1360"&gt;here&lt;/a&gt;, quick download &lt;a href="http://mytrain.fr/cms//images/mytrain/private/ESP8266SM.v3.zip" rel="nofollow"&gt;there&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>esp8266</author><guid isPermaLink="false">https://github.com/esp8266/Arduino</guid><pubDate>Thu, 26 Dec 2019 00:19:00 GMT</pubDate></item><item><title>LukeSmithxyz/st #20 in C, This month</title><link>https://github.com/LukeSmithxyz/st</link><description>&lt;p&gt;&lt;i&gt;Luke's fork of the suckless simple terminal (st) with vim bindings and Xresource compatibility.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lukes-build-of-st---the-simple-suckless-terminal" class="anchor" aria-hidden="true" href="#lukes-build-of-st---the-simple-suckless-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Luke's build of st - the simple (suckless) terminal&lt;/h1&gt;
&lt;p&gt;The &lt;a href="https://st.suckless.org/" rel="nofollow"&gt;suckless terminal (st)&lt;/a&gt; with some additional features that make it literally the best terminal emulator ever:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-unique-features-using-dmenu" class="anchor" aria-hidden="true" href="#unique-features-using-dmenu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unique features (using dmenu)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;follow urls&lt;/strong&gt; by pressing &lt;code&gt;alt-l&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;copy urls&lt;/strong&gt; in the same way with &lt;code&gt;alt-y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;copy the output of commands&lt;/strong&gt; with &lt;code&gt;alt-o&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-bindings-for" class="anchor" aria-hidden="true" href="#bindings-for"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bindings for&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;scrollback&lt;/strong&gt; with &lt;code&gt;alt-↑/↓&lt;/code&gt; or &lt;code&gt;alt-pageup/down&lt;/code&gt; or &lt;code&gt;shift&lt;/code&gt; while scrolling the mouse&lt;/li&gt;
&lt;li&gt;OR &lt;strong&gt;vim-bindings&lt;/strong&gt;: scroll up/down in history with &lt;code&gt;alt-k&lt;/code&gt; and &lt;code&gt;alt-j&lt;/code&gt;. Faster with &lt;code&gt;alt-u&lt;/code&gt;/&lt;code&gt;alt-d&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zoom/change font size&lt;/strong&gt;: same bindings as above, but holding down shift as well. &lt;code&gt;alt-home&lt;/code&gt; returns to default&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;copy text&lt;/strong&gt; with &lt;code&gt;alt-c&lt;/code&gt;, &lt;strong&gt;paste&lt;/strong&gt; is &lt;code&gt;alt-v&lt;/code&gt; or &lt;code&gt;shift-insert&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-pretty-stuff" class="anchor" aria-hidden="true" href="#pretty-stuff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pretty stuff&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Compatibility with &lt;code&gt;Xresources&lt;/code&gt; and &lt;code&gt;pywal&lt;/code&gt; for dynamic colors. The &lt;code&gt;Xdefaults&lt;/code&gt; file shows a usage example.&lt;/li&gt;
&lt;li&gt;Default &lt;a href="https://github.com/morhetz/gruvbox"&gt;gruvbox&lt;/a&gt; colors otherwise.&lt;/li&gt;
&lt;li&gt;Transparency/alpha, which is also adjustable from your &lt;code&gt;Xresources&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Default font is system "mono" at 16pt, meaning the font will match your system font.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-other-st-patches" class="anchor" aria-hidden="true" href="#other-st-patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other st patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vertcenter&lt;/li&gt;
&lt;li&gt;Scrollback&lt;/li&gt;
&lt;li&gt;font2&lt;/li&gt;
&lt;li&gt;updated to latest version 0.8.2&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation-for-newbs" class="anchor" aria-hidden="true" href="#installation-for-newbs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation for newbs&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/LukeSmithxyz/st
cd st
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Users of Arch-based distros can also install it from the AUR as &lt;a href="https://aur.archlinux.org/packages/st-luke-git/" rel="nofollow"&gt;st-luke-git&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Obviously, &lt;code&gt;make&lt;/code&gt; is required to build. &lt;code&gt;fontconfig&lt;/code&gt; is required for the default build, since it asks &lt;code&gt;fontconfig&lt;/code&gt; for your system monospace font.  It might be obvious, but &lt;code&gt;libX11&lt;/code&gt; and &lt;code&gt;libXft&lt;/code&gt; are required as well. Chances are, you have all of this installed already.&lt;/p&gt;
&lt;p&gt;On OpenBSD, be sure to edit &lt;code&gt;config.mk&lt;/code&gt; first and remove &lt;code&gt;-lrt&lt;/code&gt; from the &lt;code&gt;$LIBS&lt;/code&gt; before compiling.&lt;/p&gt;
&lt;p&gt;Be sure to have a composite manager (&lt;code&gt;xcompmgr&lt;/code&gt;, &lt;code&gt;compton&lt;/code&gt;, etc.) running if you want transparency.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-configure-dynamically-with-xresources" class="anchor" aria-hidden="true" href="#how-to-configure-dynamically-with-xresources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to configure dynamically with Xresources&lt;/h2&gt;
&lt;p&gt;For many key variables, this build of &lt;code&gt;st&lt;/code&gt; will look for X settings set in either &lt;code&gt;~/.Xdefaults&lt;/code&gt; or &lt;code&gt;~/.Xresources&lt;/code&gt;. You must run &lt;code&gt;xrdb&lt;/code&gt; on one of these files to load the settings.&lt;/p&gt;
&lt;p&gt;For example, you can define your desired fonts, transparency or colors:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*.font:	Liberation Mono:pixelsize=12:antialias=true:autohint=true;
*.alpha: 0.9
*.color0: #111
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;alpha&lt;/code&gt; value (for transparency) goes from &lt;code&gt;0&lt;/code&gt; (transparent) to &lt;code&gt;1&lt;/code&gt; (opaque).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-colors" class="anchor" aria-hidden="true" href="#colors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Colors&lt;/h3&gt;
&lt;p&gt;To be clear about the color settings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This build will use gruvbox colors by default and as a fallback.&lt;/li&gt;
&lt;li&gt;If there are Xresources colors defined, those will take priority.&lt;/li&gt;
&lt;li&gt;But if &lt;code&gt;wal&lt;/code&gt; has run in your session, its colors will take priority.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that when you run &lt;code&gt;wal&lt;/code&gt;, it will negate the transparency of existing windows, but new windows will continue with the previously defined transparency.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Luke Smith &lt;a href="mailto:luke@lukesmith.xyz"&gt;luke@lukesmith.xyz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lukesmith.xyz" rel="nofollow"&gt;https://lukesmith.xyz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>LukeSmithxyz</author><guid isPermaLink="false">https://github.com/LukeSmithxyz/st</guid><pubDate>Thu, 26 Dec 2019 00:20:00 GMT</pubDate></item><item><title>nmap/nmap #21 in C, This month</title><link>https://github.com/nmap/nmap</link><description>&lt;p&gt;&lt;i&gt;Nmap - the Network Mapper. Github mirror of official SVN repository.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nmap-" class="anchor" aria-hidden="true" href="#nmap-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nmap &lt;a href="https://travis-ci.org/nmap/nmap" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6480a649b08887206364d41909c67f2c928ee012/68747470733a2f2f7472617669732d63692e6f72672f6e6d61702f6e6d61702e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/nmap/nmap.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Nmap is released under a custom license, which is based on (but not compatible
with) GPLv2. The Nmap license allows free usage by end users, and we also offer
a commercial license for companies that wish to redistribute Nmap technology
with their products. See &lt;a href="https://nmap.org/book/man-legal.html" rel="nofollow"&gt;Nmap Copyright and Licensing&lt;/a&gt;
for full details.&lt;/p&gt;
&lt;p&gt;The latest version of this software as well as binary installers for Windows,
macOS, and Linux (RPM) are available from
&lt;a href="https://nmap.org/download.html" rel="nofollow"&gt;Nmap.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Full documentation is also available
&lt;a href="https://nmap.org/docs.html" rel="nofollow"&gt;on the Nmap.org website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Questions and suggestions may be sent to
&lt;a href="https://nmap.org/mailman/listinfo/dev" rel="nofollow"&gt;the Nmap-dev mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;Ideally, you should be able to just type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For far more in-depth compilation, installation, and removal notes, read the
&lt;a href="https://nmap.org/book/install.html" rel="nofollow"&gt;Nmap Install Guide&lt;/a&gt; on Nmap.org.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-nmap" class="anchor" aria-hidden="true" href="#using-nmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Nmap&lt;/h2&gt;
&lt;p&gt;Nmap has a lot of features, but getting started is as easy as running &lt;code&gt;nmap scanme.nmap.org&lt;/code&gt;. Running &lt;code&gt;nmap&lt;/code&gt; without any parameters will give a helpful
list of the most common options, which are discussed in depth in &lt;a href="https://nmap.org/book/man.html" rel="nofollow"&gt;the man
page&lt;/a&gt;. Users who prefer a graphical interface
can use the included &lt;a href="https://nmap.org/zenmap/" rel="nofollow"&gt;Zenmap front-end&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Information about filing bug reports and contributing to the Nmap project can
be found in the &lt;a href="HACKING"&gt;HACKING&lt;/a&gt; and &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;
files.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nmap</author><guid isPermaLink="false">https://github.com/nmap/nmap</guid><pubDate>Thu, 26 Dec 2019 00:21:00 GMT</pubDate></item><item><title>LuaJIT/LuaJIT #22 in C, This month</title><link>https://github.com/LuaJIT/LuaJIT</link><description>&lt;p&gt;&lt;i&gt;Mirror of the LuaJIT git repository&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;README for LuaJIT 2.1.0-beta3
-----------------------------

LuaJIT is a Just-In-Time (JIT) compiler for the Lua programming language.

Project Homepage: &lt;a href="http://luajit.org/" rel="nofollow"&gt;http://luajit.org/&lt;/a&gt;

LuaJIT is Copyright (C) 2005-2017 Mike Pall.
LuaJIT is free software, released under the MIT license.
See full Copyright Notice in the COPYRIGHT file or in luajit.h.

Documentation for LuaJIT is available in HTML format.
Please point your favorite browser to:

 doc/luajit.html

&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>LuaJIT</author><guid isPermaLink="false">https://github.com/LuaJIT/LuaJIT</guid><pubDate>Thu, 26 Dec 2019 00:22:00 GMT</pubDate></item><item><title>QSCTech/zju-icicles #23 in C, This month</title><link>https://github.com/QSCTech/zju-icicles</link><description>&lt;p&gt;&lt;i&gt;浙江大学课程攻略共享计划&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-浙江大学课程攻略共享计划" class="anchor" aria-hidden="true" href="#浙江大学课程攻略共享计划"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;浙江大学课程攻略共享计划&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-前言" class="anchor" aria-hidden="true" href="#前言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;前言&lt;/h2&gt;
&lt;p&gt;来到一所大学，从第一次接触许多课，直到一门一门完成，这个过程中我们时常收集起许多资料和情报。&lt;/p&gt;
&lt;p&gt;有些是需要在网上搜索的电子书，每次见到一门新课程，Google 一下教材名称，有的可以立即找到，有的却是要花费许多眼力；有些是历年试卷或者 A4 纸，前人精心收集制作，抱着能对他人有用的想法公开，却需要在各个群或者 CC98 中摸索以至于从学长手中代代相传；有些是上完一门课才恍然领悟的技巧，原来这门课重点如此，当初本可以更轻松地完成得更好……&lt;/p&gt;
&lt;p&gt;我也曾很努力地收集各种课程资料，但到最后，某些重要信息的得到却往往依然是纯属偶然。这种状态时常令我感到后怕与不安。我也曾在课程结束后终于有了些许方法与总结，但这些想法无处诉说，最终只能把花费时间与精力才换来的经验耗散在了漫漫的遗忘之中。&lt;/p&gt;
&lt;p&gt;我为这一年一年，这么多人孤军奋战的重复劳动感到不平。&lt;/p&gt;
&lt;p&gt;我希望能够将这些隐晦的、不确定的、口口相传的资料和经验，变为公开的、易于获取的和大家能够共同完善、积累的共享资料。&lt;/p&gt;
&lt;p&gt;我希望只要是前人走过的弯路，后人就不必再走。这是我的信念，也是我建立这个项目的原因。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-特性" class="anchor" aria-hidden="true" href="#特性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;特性&lt;/h2&gt;
&lt;p&gt;本项目至今为止收录了以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选课攻略&lt;/li&gt;
&lt;li&gt;电子版教材&lt;/li&gt;
&lt;li&gt;平时作业答案&lt;/li&gt;
&lt;li&gt;历年试卷&lt;/li&gt;
&lt;li&gt;复习资料&lt;/li&gt;
&lt;li&gt;开卷考试 A4 纸&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;等等。目前项目已覆盖大多数计科的专业课程。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-平台" class="anchor" aria-hidden="true" href="#平台"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;平台&lt;/h2&gt;
&lt;p&gt;为什么采用 GitHub 项目作为平台呢？我有以下一些考虑。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QQ 群大多为年级和专业所分隔，无法长期共同地保有；况且群文件也缺乏组织。&lt;/li&gt;
&lt;li&gt;GitHub 项目可以使用目录进行文件组织，并且每个目录均可以在显示文件列表的同时显示一个 README，十分适合本项目的需求。&lt;/li&gt;
&lt;li&gt;GitHub 带有便捷的 Issue 和 Pull Request 协作功能，并且可以方便地对贡献的质量进行监督和调整。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-贡献" class="anchor" aria-hidden="true" href="#贡献"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;贡献&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;欢迎贡献！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;欢迎贡献！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;欢迎贡献！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——因为很重要所以说了三遍&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Issue、PR、纠错、资料、选课/考试攻略，完全欢迎！&lt;/p&gt;
&lt;p&gt;来自大家的关注、维护和贡献，才是让这个浙江大学独有的攻略本继续存在的动力~&lt;/p&gt;
&lt;p&gt;提交 PR：Fork 本项目，然后在 GitHub 网页端点击 Upload File 上传文件，发起 PR 即可。留意一下项目的文件组织喔。&lt;/p&gt;
&lt;p&gt;或者也可以直接附加在 Issue 中，由维护者进行添加。&lt;/p&gt;
&lt;p&gt;对于教师的评价请一律使用姓名拼音首字母缩写；至于教师提供的课件就不用上传了，因为每年说不定会有更新的嘛。&lt;/p&gt;
&lt;p&gt;由于本项目体积很大，故可以采用在Github Web端直接上传的方式，具体操作如下：&lt;/p&gt;
&lt;ol start="0"&gt;
&lt;li&gt;
&lt;p&gt;首先Fork本项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上传文件到已有文件夹：打开对应文件夹，点击绿色Download按钮旁的upload，上传你的文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上传文件到新文件夹：打开任意文件夹，点击绿色Download按钮旁的upload，&lt;strong&gt;把浏览器地址栏中文件夹名称改为你想要新建的文件夹名称，然后回车&lt;/strong&gt;，上传你的文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-警告" class="anchor" aria-hidden="true" href="#警告"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;警告&lt;/h2&gt;
&lt;p&gt;下列内容为不适合上传的内容。如果你认为缺少这些资料将会影响资源的完整性，请优先考虑放在校内资源平台，或联系你的教师并由教师发布。建议你撰写一个 README 文档并放置一些链接或指引文字来帮助找到这些资源。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;盗版电子书/付费电子书&lt;/li&gt;
&lt;li&gt;盗版/破解版/绿色版付费软件及其安装包&lt;/li&gt;
&lt;li&gt;课程/教师主页上列出的内容（请在获得教师许可后上传）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你认为本仓库的一些文件侵犯了您的权益，请 &lt;a href="mailto:tech@zjuqsc.com"&gt;向我们发送邮件&lt;/a&gt; 。我们将会从仓库中彻底清除这些文件。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-许可" class="anchor" aria-hidden="true" href="#许可"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;许可&lt;/h2&gt;
&lt;p&gt;由贡献者编写部分的许可如下：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh" rel="nofollow"&gt;CC-BY-NC-SA：署名-非商业性使用-相同方式共享&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;资料仅供参考，请自己判断其适用性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其他部分的版权归属于其各自的作者。&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>QSCTech</author><guid isPermaLink="false">https://github.com/QSCTech/zju-icicles</guid><pubDate>Thu, 26 Dec 2019 00:23:00 GMT</pubDate></item><item><title>nothings/stb #24 in C, This month</title><link>https://github.com/nothings/stb</link><description>&lt;p&gt;&lt;i&gt;stb single-file public domain libraries for C/C++&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-stb" class="anchor" aria-hidden="true" href="#stb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;stb&lt;/h1&gt;
&lt;p&gt;single-file public domain (or MIT licensed) libraries for C/C++&lt;/p&gt;
&lt;p&gt;Noteworthy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;image loader: &lt;a href="stb_image.h"&gt;stb_image.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;image writer: &lt;a href="stb_image_write.h"&gt;stb_image_write.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;image resizer: &lt;a href="stb_image_resize.h"&gt;stb_image_resize.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;font text rasterizer: &lt;a href="stb_truetype.h"&gt;stb_truetype.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;typesafe containers: &lt;a href="stb_ds.h"&gt;stb_ds.h&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most libraries by stb, except: stb_dxt by Fabian "ryg" Giesen, stb_image_resize
by Jorge L. "VinoBS" Rodriguez, and stb_sprintf by Jeff Roberts.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-stb_libs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;library&lt;/th&gt;
&lt;th&gt;lastest version&lt;/th&gt;
&lt;th&gt;category&lt;/th&gt;
&lt;th&gt;LoC&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_vorbis.c"&gt;stb_vorbis.c&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.17&lt;/td&gt;
&lt;td&gt;audio&lt;/td&gt;
&lt;td&gt;5502&lt;/td&gt;
&lt;td&gt;decode ogg vorbis files from file/memory to float/16-bit signed output&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_image.h"&gt;stb_image.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.23&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;7559&lt;/td&gt;
&lt;td&gt;image loading/decoding from file/memory: JPG, PNG, TGA, BMP, PSD, GIF, HDR, PIC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_truetype.h"&gt;stb_truetype.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.22&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;4888&lt;/td&gt;
&lt;td&gt;parse, decode, and rasterize characters from truetype fonts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_image_write.h"&gt;stb_image_write.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.13&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;1619&lt;/td&gt;
&lt;td&gt;image writing to disk: PNG, TGA, BMP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_image_resize.h"&gt;stb_image_resize.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.96&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;2630&lt;/td&gt;
&lt;td&gt;resize images larger/smaller with good quality&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_rect_pack.h"&gt;stb_rect_pack.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;628&lt;/td&gt;
&lt;td&gt;simple 2D rectangle packer with decent quality&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_ds.h"&gt;stb_ds.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.62&lt;/td&gt;
&lt;td&gt;utility&lt;/td&gt;
&lt;td&gt;1723&lt;/td&gt;
&lt;td&gt;typesafe dynamic array and hash tables for C, will compile in C++&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_sprintf.h"&gt;stb_sprintf.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.06&lt;/td&gt;
&lt;td&gt;utility&lt;/td&gt;
&lt;td&gt;1860&lt;/td&gt;
&lt;td&gt;fast sprintf, snprintf for C/C++&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stretchy_buffer.h"&gt;stretchy_buffer.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.03&lt;/td&gt;
&lt;td&gt;utility&lt;/td&gt;
&lt;td&gt;262&lt;/td&gt;
&lt;td&gt;typesafe dynamic array for C (i.e. approximation to vector&amp;lt;&amp;gt;), doesn't compile as C++&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_textedit.h"&gt;stb_textedit.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.13&lt;/td&gt;
&lt;td&gt;user interface&lt;/td&gt;
&lt;td&gt;1404&lt;/td&gt;
&lt;td&gt;guts of a text editor for games etc implementing them from scratch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_voxel_render.h"&gt;stb_voxel_render.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.88&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;3806&lt;/td&gt;
&lt;td&gt;Minecraft-esque voxel rendering "engine" with many more features&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_dxt.h"&gt;stb_dxt.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.08b&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;728&lt;/td&gt;
&lt;td&gt;Fabian "ryg" Giesen's real-time DXT compressor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_perlin.h"&gt;stb_perlin.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.4&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;427&lt;/td&gt;
&lt;td&gt;revised Perlin noise (3D input, 1D output)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_easy_font.h"&gt;stb_easy_font.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;303&lt;/td&gt;
&lt;td&gt;quick-and-dirty easy-to-deploy bitmap font for printing frame rate, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_tilemap_editor.h"&gt;stb_tilemap_editor.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.41&lt;/td&gt;
&lt;td&gt;game dev&lt;/td&gt;
&lt;td&gt;4161&lt;/td&gt;
&lt;td&gt;embeddable tilemap editor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_herringbone_wang_tile.h"&gt;stb_herringbone_wa...&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.7&lt;/td&gt;
&lt;td&gt;game dev&lt;/td&gt;
&lt;td&gt;1221&lt;/td&gt;
&lt;td&gt;herringbone Wang tile map generator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_c_lexer.h"&gt;stb_c_lexer.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.11&lt;/td&gt;
&lt;td&gt;parsing&lt;/td&gt;
&lt;td&gt;966&lt;/td&gt;
&lt;td&gt;simplify writing parsers for C-like languages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_divide.h"&gt;stb_divide.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.92&lt;/td&gt;
&lt;td&gt;math&lt;/td&gt;
&lt;td&gt;421&lt;/td&gt;
&lt;td&gt;more useful 32-bit modulus e.g. "euclidean divide"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_connected_components.h"&gt;stb_connected_comp...&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.96&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;1049&lt;/td&gt;
&lt;td&gt;incrementally compute reachability on grids&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb.h"&gt;stb.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.35&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;14453&lt;/td&gt;
&lt;td&gt;helper functions for C, mostly redundant in C++; basically author's personal stuff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_leakcheck.h"&gt;stb_leakcheck.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;190&lt;/td&gt;
&lt;td&gt;quick-and-dirty malloc/free leak-checking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_include.h"&gt;stb_include.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.01&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;288&lt;/td&gt;
&lt;td&gt;implement recursive #include support, particularly for GLSL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Total libraries: 22&lt;br&gt;
Total lines of C code: 56088&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-whats-the-license" class="anchor" aria-hidden="true" href="#whats-the-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the license?&lt;/h4&gt;
&lt;p&gt;These libraries are in the public domain. You can do anything you
want with them. You have no legal obligation
to do anything else, although I appreciate attribution.&lt;/p&gt;
&lt;p&gt;They are also licensed under the MIT open source license, if you have lawyers
who are unhappy with public domain. Every source file includes an explicit
dual-license for you to choose from.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content--are-there-other-single-file-public-domainopen-source-libraries-with-minimal-dependencies-out-there" class="anchor" aria-hidden="true" href="#-are-there-other-single-file-public-domainopen-source-libraries-with-minimal-dependencies-out-there"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-other_libs"&gt;&lt;/a&gt; Are there other single-file public-domain/open source libraries with minimal dependencies out there?&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/nothings/single_file_libs"&gt;Yes.&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-if-i-wrap-an-stb-library-in-a-new-library-does-the-new-library-have-to-be-public-domainmit" class="anchor" aria-hidden="true" href="#if-i-wrap-an-stb-library-in-a-new-library-does-the-new-library-have-to-be-public-domainmit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If I wrap an stb library in a new library, does the new library have to be public domain/MIT?&lt;/h4&gt;
&lt;p&gt;No, because it's public domain you can freely relicense it to whatever license your new
library wants to be.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-whats-the-deal-with-sse-support-in-gcc-based-compilers" class="anchor" aria-hidden="true" href="#whats-the-deal-with-sse-support-in-gcc-based-compilers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the deal with SSE support in GCC-based compilers?&lt;/h4&gt;
&lt;p&gt;stb_image will either use SSE2 (if you compile with -msse2) or
will not use any SIMD at all, rather than trying to detect the
processor at runtime and handle it correctly. As I understand it,
the approved path in GCC for runtime-detection require
you to use multiple source files, one for each CPU configuration.
Because stb_image is a header-file library that compiles in only
one source file, there's no approved way to build both an
SSE-enabled and a non-SSE-enabled variation.&lt;/p&gt;
&lt;p&gt;While we've tried to work around it, we've had multiple issues over
the years due to specific versions of gcc breaking what we're doing,
so we've given up on it. See &lt;a href="https://github.com/nothings/stb/issues/280"&gt;https://github.com/nothings/stb/issues/280&lt;/a&gt;
and &lt;a href="https://github.com/nothings/stb/issues/410"&gt;https://github.com/nothings/stb/issues/410&lt;/a&gt; for examples.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-some-of-these-libraries-seem-redundant-to-existing-open-source-libraries-are-they-better-somehow" class="anchor" aria-hidden="true" href="#some-of-these-libraries-seem-redundant-to-existing-open-source-libraries-are-they-better-somehow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some of these libraries seem redundant to existing open source libraries. Are they better somehow?&lt;/h4&gt;
&lt;p&gt;Generally they're only better in that they're easier to integrate,
easier to use, and easier to release (single file; good API; no
attribution requirement). They may be less featureful, slower,
and/or use more memory. If you're already using an equivalent
library, there's probably no good reason to switch.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-can-i-link-directly-to-the-table-of-stb-libraries" class="anchor" aria-hidden="true" href="#can-i-link-directly-to-the-table-of-stb-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I link directly to the table of stb libraries?&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/nothings/stb#stb_libs"&gt;this URL&lt;/a&gt; to link directly to that list.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-do-you-list-lines-of-code-its-a-terrible-metric" class="anchor" aria-hidden="true" href="#why-do-you-list-lines-of-code-its-a-terrible-metric"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why do you list "lines of code"? It's a terrible metric.&lt;/h4&gt;
&lt;p&gt;Just to give you some idea of the internal complexity of the library,
to help you manage your expectations, or to let you know what you're
getting into. While not all the libraries are written in the same
style, they're certainly similar styles, and so comparisons between
the libraries are probably still meaningful.&lt;/p&gt;
&lt;p&gt;Note though that the lines do include both the implementation, the
part that corresponds to a header file, and the documentation.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-single-file-headers" class="anchor" aria-hidden="true" href="#why-single-file-headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why single-file headers?&lt;/h4&gt;
&lt;p&gt;Windows doesn't have standard directories where libraries
live. That makes deploying libraries in Windows a lot more
painful than open source developers on Unix-derivates generally
realize. (It also makes library dependencies a lot worse in Windows.)&lt;/p&gt;
&lt;p&gt;There's also a common problem in Windows where a library was built
against a different version of the runtime library, which causes
link conflicts and confusion. Shipping the libs as headers means
you normally just compile them straight into your project without
making libraries, thus sidestepping that problem.&lt;/p&gt;
&lt;p&gt;Making them a single file makes it very easy to just
drop them into a project that needs them. (Of course you can
still put them in a proper shared library tree if you want.)&lt;/p&gt;
&lt;p&gt;Why not two files, one a header and one an implementation?
The difference between 10 files and 9 files is not a big deal,
but the difference between 2 files and 1 file is a big deal.
You don't need to zip or tar the files up, you don't have to
remember to attach &lt;em&gt;two&lt;/em&gt; files, etc.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-stb-is-this-something-to-do-with-set-top-boxes" class="anchor" aria-hidden="true" href="#why-stb-is-this-something-to-do-with-set-top-boxes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why "stb"? Is this something to do with Set-Top Boxes?&lt;/h4&gt;
&lt;p&gt;No, they are just the initials for my name, Sean T. Barrett.
This was not chosen out of egomania, but as a moderately sane
way of namespacing the filenames and source function names.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-will-you-add-more-image-types-to-stb_imageh" class="anchor" aria-hidden="true" href="#will-you-add-more-image-types-to-stb_imageh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Will you add more image types to stb_image.h?&lt;/h4&gt;
&lt;p&gt;If people submit them, I generally add them, but the goal of stb_image
is less for applications like image viewer apps (which need to support
every type of image under the sun) and more for things like games which
can choose what images to use, so I may decline to add them if they're
too rare or if the size of implementation vs. apparent benefit is too low.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-do-you-have-any-advice-on-how-to-create-my-own-single-file-library" class="anchor" aria-hidden="true" href="#do-you-have-any-advice-on-how-to-create-my-own-single-file-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Do you have any advice on how to create my own single-file library?&lt;/h4&gt;
&lt;p&gt;Yes. &lt;a href="https://github.com/nothings/stb/blob/master/docs/stb_howto.txt"&gt;https://github.com/nothings/stb/blob/master/docs/stb_howto.txt&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-public-domain" class="anchor" aria-hidden="true" href="#why-public-domain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why public domain?&lt;/h4&gt;
&lt;p&gt;I prefer it over GPL, LGPL, BSD, zlib, etc. for many reasons.
Some of them are listed here:
&lt;a href="https://github.com/nothings/stb/blob/master/docs/why_public_domain.md"&gt;https://github.com/nothings/stb/blob/master/docs/why_public_domain.md&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-c" class="anchor" aria-hidden="true" href="#why-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why C?&lt;/h4&gt;
&lt;p&gt;Primarily, because I use C, not C++. But it does also make it easier
for other people to use them from other languages.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-not-c99-stdinth-declare-anywhere-etc" class="anchor" aria-hidden="true" href="#why-not-c99-stdinth-declare-anywhere-etc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why not C99? stdint.h, declare-anywhere, etc.&lt;/h4&gt;
&lt;p&gt;I still use MSVC 6 (1998) as my IDE because it has better human factors
for me than later versions of MSVC.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nothings</author><guid isPermaLink="false">https://github.com/nothings/stb</guid><pubDate>Thu, 26 Dec 2019 00:24:00 GMT</pubDate></item><item><title>cesanta/mongoose #25 in C, This month</title><link>https://github.com/cesanta/mongoose</link><description>&lt;p&gt;&lt;i&gt;Mongoose Embedded Web Server Library - Mongoose is more than an embedded webserver. It is a multi-protocol embedded networking library with functions including TCP, HTTP client and server, WebSocket client and server,  MQTT client and broker and much more.  &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mongoose---embedded-web-server--embedded-networking-library" class="anchor" aria-hidden="true" href="#mongoose---embedded-web-server--embedded-networking-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mongoose - Embedded Web Server / Embedded Networking Library&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3a820112c4e6c1629904ae08acebe62a1f638cf2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c5f322d677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3a820112c4e6c1629904ae08acebe62a1f638cf2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c5f322d677265656e2e737667" alt="" title="License" data-canonical-src="https://img.shields.io/badge/license-GPL_2-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mongoose is ideal for embedded environments. It has been designed
for connecting devices and bringing them online. On the market since 2004,
used by vast number of open source and
commercial products - it even runs on the International Space station!
Mongoose makes embedded network programming fast, robust, and easy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cesanta.com/download.html" rel="nofollow"&gt;Download Mongoose Source Code here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Looking for a complete IoT firmware solution?&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://mongoose-os.com" rel="nofollow"&gt;Mongoose OS&lt;/a&gt; - open source embedded operating system for low-power connected microcontrollers. Secure, designed for Internet of Things, complete environment for prototyping, development and managing.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cesanta/mongoose/tree/master/examples"&gt;Study mongoose example code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cesanta.com/docs/overview/intro.html" rel="nofollow"&gt;Read User Guide and API reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://community.mongoose-os.com/" rel="nofollow"&gt;Support Forum - ask your technical questions here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cesanta.com/licensing.html" rel="nofollow"&gt;Commercial licensing and support available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cesanta/mongoose/releases"&gt;Check our latest releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Cross-platform: works on Linux/UNIX, MacOS, QNX, eCos, Windows, Android,
iPhone, FreeRTOS (TI CC3200, ESP8266), etc&lt;/li&gt;
&lt;li&gt;Supported hardware platforms: TI CC3200, TI MSP432, NRF52, STM32, PIC32, ESP8266, ESP32 and more&lt;/li&gt;
&lt;li&gt;Builtin protocols:
&lt;ul&gt;
&lt;li&gt;plain TCP, plain UDP, SSL/TLS (over TCP, one-way or two-way)&lt;/li&gt;
&lt;li&gt;HTTP client, HTTP server&lt;/li&gt;
&lt;li&gt;WebSocket client, WebSocket server&lt;/li&gt;
&lt;li&gt;MQTT client, MQTT broker&lt;/li&gt;
&lt;li&gt;CoAP client, CoAP server&lt;/li&gt;
&lt;li&gt;DNS client, DNS server, async DNS resolver&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Single-threaded, asynchronous, non-blocking core with simple event-based API&lt;/li&gt;
&lt;li&gt;Native support for &lt;a href="http://www.picotcp.com" rel="nofollow"&gt;PicoTCP embedded TCP/IP stack&lt;/a&gt;,
&lt;a href="https://en.wikipedia.org/wiki/LwIP" rel="nofollow"&gt;LWIP embedded TCP/IP stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tiny static and run-time footprint&lt;/li&gt;
&lt;li&gt;Source code is both ISO C and ISO C++ compliant&lt;/li&gt;
&lt;li&gt;Very easy to integrate: just copy
&lt;a href="https://raw.githubusercontent.com/cesanta/mongoose/master/mongoose.c" rel="nofollow"&gt;mongoose.c&lt;/a&gt; and
&lt;a href="https://raw.githubusercontent.com/cesanta/mongoose/master/mongoose.h" rel="nofollow"&gt;mongoose.h&lt;/a&gt;
files to your build tree&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h1&gt;
&lt;p&gt;Mongoose is released under Commercial and &lt;a href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html" rel="nofollow"&gt;GNU GPL v.2&lt;/a&gt; open source licenses.&lt;/p&gt;
&lt;p&gt;Commercial Projects: &lt;a href="https://www.cesanta.com/contact.html" rel="nofollow"&gt;Contact us for commercial license.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-dashboard-example" class="anchor" aria-hidden="true" href="#dashboard-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dashboard Example&lt;/h1&gt;
&lt;p&gt;Mongoose is often used to implement device dashboards and real-time
data exchange over Websocket. Here is a dashboard example that illustrates
the functionality:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a2690a3ad06c94897c5a5a12e6d6d73d1e39de34/687474703a2f2f7777772e636573616e74612e636f6d2f696d616765732f64617368626f6172642e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a2690a3ad06c94897c5a5a12e6d6d73d1e39de34/687474703a2f2f7777772e636573616e74612e636f6d2f696d616765732f64617368626f6172642e706e67" alt="" data-canonical-src="http://www.cesanta.com/images/dashboard.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cesanta.com/contact.html" rel="nofollow"&gt;Developing a new product? Contact us today to discuss how Mongoose can help.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;p&gt;To submit contributions, sign &lt;a href="https://cesanta.com/cla.html" rel="nofollow"&gt;Cesanta CLA&lt;/a&gt;
and send GitHub pull request.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-looking-for-a-pre-compiled-mongoose-web-server-windows-or-mac-binary" class="anchor" aria-hidden="true" href="#looking-for-a-pre-compiled-mongoose-web-server-windows-or-mac-binary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Looking for a pre-compiled Mongoose web server Windows or Mac binary?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cesanta.com/binary.html" rel="nofollow"&gt;Download pre-compiled Mongoose web server binary.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cesanta</author><guid isPermaLink="false">https://github.com/cesanta/mongoose</guid><pubDate>Thu, 26 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>