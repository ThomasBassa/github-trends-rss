<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C, This month</title><link>https://github.com/trending/c?since=monthly</link><description>The top repositories on GitHub for c, measured monthly</description><pubDate>Sat, 01 Feb 2020 01:11:22 GMT</pubDate><lastBuildDate>Sat, 01 Feb 2020 01:11:22 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>Tencent/TencentOS-tiny #1 in C, This month</title><link>https://github.com/Tencent/TencentOS-tiny</link><description>&lt;p&gt;&lt;i&gt;腾讯物联网终端操作系统&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./doc/image/introduction/TencentOS_tiny_log.png"&gt;&lt;img src="./doc/image/introduction/TencentOS_tiny_log.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Tencent/TencentOS-tiny/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/43ebe0af6641302a6fb0791f90d60986556e9229/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4253442d626c75652e737667" alt="license" data-canonical-src="http://img.shields.io/badge/license-BSD-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Tencent/TencentOS-tiny/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/a56a4d6198416d6ce12b4b534a2bf1f4ba4ff2e4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d626c75652e737667" alt="PRs Welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/Tencent/TencentOS-tiny" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1a64a6b6e339472e0abe66ac5dcd031cdf25d558/68747470733a2f2f7472617669732d63692e6f72672f54656e63656e742f54656e63656e744f532d74696e792e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://travis-ci.org/Tencent/TencentOS-tiny.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="README_en.md"&gt;(English Documents Available)&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-一tencentos-tiny-简介" class="anchor" aria-hidden="true" href="#一tencentos-tiny-简介"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一、TencentOS Tiny 简介&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cloud.tencent.com/product/tos-tiny" rel="nofollow"&gt;TencentOS tiny&lt;/a&gt;是腾讯面向物联网领域开发的实时操作系统，具有低功耗，低资源占用，模块化，安全可靠等特点，可有效提升物联网终端产品开发效率。TencentOS tiny 提供精简的 RTOS 内核，内核组件可裁剪可配置，可快速移植到多种主流 MCU (如STM32全系列)及模组芯片上。而且，基于RTOS内核提供了丰富的物联网组件，内部集成主流物联网协议栈（如 CoAP/MQTT/TLS/DTLS/LoRaWAN/NB-IoT 等），可助力物联网终端设备及业务快速接入腾讯云物联网平台。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-1tencentos-tiny整体架构" class="anchor" aria-hidden="true" href="#1tencentos-tiny整体架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1、TencentOS tiny整体架构&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./doc/image/introduction/TencentOS_tiny_Architecture.png"&gt;&lt;img src="./doc/image/introduction/TencentOS_tiny_Architecture.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
TencentOS tiny 主体架构图，从下到上主要包括：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CPU 库&lt;/strong&gt; ：TencentOS tiny 支持的 CPU IP 核架构，当前主要支持 ARM Cortex M0/3/4/7。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;驱动管理层&lt;/strong&gt; ：包括板级支持包（BSP，主要由 MCU 芯片厂家开发与维护）、硬件抽象（HAL，主要由 TencentOS tiny提供，方便不同芯片的适配与移植）、设备驱动（Drivers，例如 Wi-Fi、GPRS、LoRa 等模块的驱动程序）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内核&lt;/strong&gt; ：TencentOS tiny 实时内核包括任务管理、实时调度、时间管理、中断管理、内存管理、异常处理、软件定时器、链表、消息队列、信号量、互斥锁、事件标志等模块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IoT 协议栈&lt;/strong&gt;：TencentOS tiny 提供 lwip、AT Adapter、SAL 层，支持不同的网络硬件，例如以太网、串口 Wi-Fi、GPRS、NB-IoT、4G等通信模块。TCP/IP 网络协议栈上提供常用的物联网协议栈，例如 CoAP、MQTT，支撑终端业务快速接入腾讯云。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安全框架&lt;/strong&gt;：TencentOS tiny 为了确保物联网终端数据传输安全以及设备认证安全，提供了完整的安全解决方案。安全框架提供的 DTLS 和 TLS 安全协议，加固了 COAP 及 MQTT 的传输层，可确保物联网终端在对接腾讯云时实现安全认证和数据加密；另外针对低资源的终端硬件，安全框架还提供与腾讯云 IoTHub 配套的密钥认证方案，确保资源受限设备也能在一定程度上实现设备安全认证。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;组件框架&lt;/strong&gt;：TencentOS tiny 提供文件系统、KV 存储、自组网、JS 引擎、低功耗框架、设备框架、OTA、调试工具链等一系列组件，供用户根据业务场景选用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开放 API（规划开发中）&lt;/strong&gt;：TencentOS tiny 将在协议中间件和框架层上提供开放 API 函数，方便用户调用中间件功能，使用户无需过多关心中间件具体实现，快速对接腾讯云，实现终端业务上云的需求，期望最大程度减少终端物联网产品开发周期，节省开发成本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例应用&lt;/strong&gt;：TencentOS tiny 提供的示例代码，模块测试代码等，方便用户参考使用。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-2tencentos-tiny优势" class="anchor" aria-hidden="true" href="#2tencentos-tiny优势"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2、TencentOS tiny优势&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-1小体积" class="anchor" aria-hidden="true" href="#1小体积"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(1).小体积&lt;/h3&gt;
&lt;p&gt;最小内核：RAM 0.6KB，ROM 1.8KB
典型LoraWAN及传感器应用：RAM 3.3KB，ROM 12KB&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2低功耗" class="anchor" aria-hidden="true" href="#2低功耗"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(2).低功耗&lt;/h3&gt;
&lt;p&gt;休眠最低功耗低至2 uA
支持外设功耗管理框架&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3丰富的iot组件" class="anchor" aria-hidden="true" href="#3丰富的iot组件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(3).丰富的IoT组件&lt;/h3&gt;
&lt;p&gt;集成主流IoT协议栈
多种通信模组SAL层适配框架；
支持OTA升级
提供简单易用端云API，加速用户业务接入腾讯云&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-4可靠的安全框架" class="anchor" aria-hidden="true" href="#4可靠的安全框架"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(4).可靠的安全框架&lt;/h3&gt;
&lt;p&gt;多样化的安全分级方案
均衡安全需求&amp;amp;成本控制&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5良好的可移植性" class="anchor" aria-hidden="true" href="#5良好的可移植性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(5).良好的可移植性&lt;/h3&gt;
&lt;p&gt;内核及IoT组件高度解耦，提供标准适配层
提供自动化移植工具，提升开发效率&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-6便捷的调试手段" class="anchor" aria-hidden="true" href="#6便捷的调试手段"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(6).便捷的调试手段&lt;/h3&gt;
&lt;p&gt;提供云化的最后一屏调试功能
故障现场信息自动上传云平台，方便开发人员调试分析&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3tencentos-tiny携手合作伙伴共建iot生态" class="anchor" aria-hidden="true" href="#3tencentos-tiny携手合作伙伴共建iot生态"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3、TencentOS tiny携手合作伙伴共建IoT生态&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./doc/image/introduction/Partners.png"&gt;&lt;img src="./doc/image/introduction/Partners.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TencentOS tiny目前支持STM32、NXP、华大半导体、国民技术、GD32、Nordic、TI等主流MCU。当前已完成两套官方定制开发板设计，支持全系列STM32 NUCLEO官方评估板内核移植。TencentOS tiny 将携手合作伙伴为物联网终端厂家提供更优质的IoT终端软件解决方案，方便各种物联网设备快速接入腾讯云，共同扩展IoT生态，更好地支撑智慧城市、智能水表、智能家居、智能穿戴、车联网等多种行业应用。&lt;/p&gt;
&lt;p&gt;欢迎IoT相关项目合作，有合作需求的请邮件联系TencentOS tiny官方工作人员，邮箱地址 ： &lt;a href="mailto:supowang@tencent.com"&gt;supowang@tencent.com&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-二tencentos-tiny-代码目录" class="anchor" aria-hidden="true" href="#二tencentos-tiny-代码目录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二、TencentOS tiny 代码目录&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/09.TencentOS_tiny_code_directory_description.md"&gt;TencentOS tiny代码目录说明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-三tencentos-tiny-参考文档" class="anchor" aria-hidden="true" href="#三tencentos-tiny-参考文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;三、TencentOS tiny 参考文档&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-1移植指南" class="anchor" aria-hidden="true" href="#1移植指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1、移植指南&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/10.TencentOS_tiny_porting_guide_keil.md"&gt;TencentOS tiny移植指南（KEIL版本）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/11.TencentOS_tiny_porting_guide_iar.md"&gt;TencentOS tiny移植指南（IAR版本）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/12.TencentOS_tiny_porting_guide_gcc.md"&gt;TencentOS tiny移植指南（GCC版本）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-2tencentos-tiny-开发指南" class="anchor" aria-hidden="true" href="#2tencentos-tiny-开发指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2、TencentOS tiny 开发指南&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/04.TencentOS_tiny_Development_Guide.md"&gt;TencentOS tiny内核开发指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/05.TencentOS_tiny_SDK_documentation.md"&gt;TencentOS tiny API参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/08.The_development_Guide_for_use_TencentOS_tiny_connect_to_Tencent_Cloud_IoTHub.md"&gt;TencentOS tiny对接腾讯云IoTHub开发指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-四tencentos-tiny-开源协议" class="anchor" aria-hidden="true" href="#四tencentos-tiny-开源协议"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四、TencentOS tiny 开源协议&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;TencentOS tiny 遵循 &lt;a href="LICENSE"&gt;BSD-3开源许可协议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-五tencentos-tiny-支持的物联网平台" class="anchor" aria-hidden="true" href="#五tencentos-tiny-支持的物联网平台"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;五、TencentOS tiny 支持的物联网平台&lt;/h1&gt;
&lt;p&gt;TencentOS tiny能支持物联网终端设备和业务快速接入&lt;a href="https://cloud.tencent.com/product/iotexplorer" rel="nofollow"&gt;腾讯云物联网平台IoT Explorer&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;TencentOS tiny结合腾讯云物联网开发平台IoT Explorer，已经构筑起连接通讯芯片到云开发的能力，加上已经建设完成的国内最大规模LoRa网络，腾讯彻底打通从芯片通讯开发、网络支撑服务，物理设备定义管理，数据分析和多场景应用开发等全链条IoT云开发服务能力，重新定义了物联网开发模式，助力亿级设备多方式多模式低门槛接入腾讯云服务。作为物联网基础设施建设服务者，腾讯将持续打造开放的物联网生态体系，促进物联网生态良性发展。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-六tencentos-tiny-快速入门参考" class="anchor" aria-hidden="true" href="#六tencentos-tiny-快速入门参考"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;六、TencentOS tiny 快速入门参考&lt;/h1&gt;
&lt;p&gt;TencentOS tiny联合合作伙伴(南京厚德物联网)设计了定制开发板，如下图：
&lt;a target="_blank" rel="noopener noreferrer" href="./doc/image/introduction/EVB_MX.png"&gt;&lt;img src="./doc/image/introduction/EVB_MX.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.holdiot.com/product/showproduct.php?id=8" rel="nofollow"&gt;TencentOS tiny定制开发板介绍页&lt;/a&gt;，开发者可以基于定制开发板进行快速入门学习，点击下载参考文档&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/15.TencentOS_tiny_Custom_Development_Board_Getting_Started_Guide.pdf"&gt;TencentOS-tiny定制开发板入门指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-七贡献代码" class="anchor" aria-hidden="true" href="#七贡献代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;七、贡献代码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;在您自己的GitHub账户下Fork TencentOS tiny 开源项目；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="2"&gt;
&lt;li&gt;根据您的需求在本地clone 一份TencentOS tiny 代码；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="3"&gt;
&lt;li&gt;您修改或者新增功能后，push 到您fork的远程分支；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="4"&gt;
&lt;li&gt;创建 pull request，向TencentOS tiny官方开发分支提交合入请求；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="5"&gt;
&lt;li&gt;TencentOS tiny研发团队会定期review代码，通过测试后合入。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-八加入tencentos-tiny官方qq技术交流群" class="anchor" aria-hidden="true" href="#八加入tencentos-tiny官方qq技术交流群"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;八、加入TencentOS tiny官方QQ技术交流群&lt;/h1&gt;
&lt;p&gt;扫码加群，请备注TencentOS tiny开发者，工作人员会根据备注进行审核：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./doc/image/introduction/qq.png"&gt;&lt;img src="./doc/image/introduction/qq.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-九第三方开发者评测" class="anchor" aria-hidden="true" href="#九第三方开发者评测"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;九、第三方开发者评测&lt;/h1&gt;
&lt;p&gt;1.基于TencentOS tiny 的环境监测实战项目
&lt;a href="https://www.bilibili.com/video/av73782956?from=search&amp;amp;seid=4421984671929108231" rel="nofollow"&gt;【TencentOS tiny】环境监测实战项目最终完整版&lt;/a&gt;
感谢阿正的贡献&lt;/p&gt;
&lt;p&gt;2.基于野火stm32f103开发板上移植的TencentOS tiny 例程、源码剖析、视频讲解。
感谢CSDN博客专家杰杰的贡献&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-简单上手" class="anchor" aria-hidden="true" href="#简单上手"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;简单上手：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/101034426" rel="nofollow"&gt;超详细的 TencentOS tiny 移植到STM32F103全教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-深度源码分析" class="anchor" aria-hidden="true" href="#深度源码分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;深度源码分析：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/99618912" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（1）——task&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/99665883" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（2）——调度器&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/99687678" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（3）——队列&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/99781093" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（4）——消息队列&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/100052643" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（5）——信号量&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/100056641" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（6）——互斥锁&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/100492219" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（7）——事件&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/101846089" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（8）——软件定时器&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-配套例程" class="anchor" aria-hidden="true" href="#配套例程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;配套例程：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/hello-world"&gt;【TencentOS tiny学习】例程（0）——hello world&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/01-task"&gt;【TencentOS tiny学习】例程（1）——task&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/02-queue"&gt;【TencentOS tiny学习】例程（2）——队列&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/03-msg_queue"&gt;【TencentOS tiny学习】例程（3）——消息队列&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/04-sem"&gt;【TencentOS tiny学习】例程（4）——信号量&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/05-mutex"&gt;【TencentOS tiny学习】例程（5）——互斥锁&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/06-event"&gt;【TencentOS tiny学习】例程（6）——事件&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/07-timer"&gt;【TencentOS tiny学习】例程（7）——软件定时器&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/08-mmblk"&gt;【TencentOS tiny学习】例程（8）——内存池&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/09-mmheap"&gt;【TencentOS tiny学习】例程（9）——内存堆&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-视频教程" class="anchor" aria-hidden="true" href="#视频教程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;视频教程：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596?from=search&amp;amp;seid=10160676184801585522" rel="nofollow"&gt;【TencentOS tiny学习】视频汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=1" rel="nofollow"&gt;【视频】01-初识TencentOS tiny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=2" rel="nofollow"&gt;【视频】02-TencentOS tiny基础知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=3" rel="nofollow"&gt;【视频】03-TencentOS tiny移植&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=4" rel="nofollow"&gt;【视频】04-TencentOS tiny任务-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=5" rel="nofollow"&gt;【视频】05-TencentOS tiny任务-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=6" rel="nofollow"&gt;【视频】06-TencentOS tiny队列-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=7" rel="nofollow"&gt;【视频】07-TencentOS tiny队列-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=8" rel="nofollow"&gt;【视频】08-TencentOS tiny消息队列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=9" rel="nofollow"&gt;【视频】09-TencentOS tiny信号量-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=10" rel="nofollow"&gt;【视频】10-TencentOS tiny信号量-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=11" rel="nofollow"&gt;【视频】11-TencentOS tiny互斥锁-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=12" rel="nofollow"&gt;【视频】12-TencentOS tiny互斥锁-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=13" rel="nofollow"&gt;【视频】13-TencentOS tiny互斥锁-3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=14" rel="nofollow"&gt;【视频】14-TencentOS tiny事件-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=15" rel="nofollow"&gt;【视频】15-TencentOS tiny事件-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=16" rel="nofollow"&gt;【视频】16-TencentOS tiny软件定时器-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=11" rel="nofollow"&gt;【视频】17-TencentOS tiny软件定时器-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=18" rel="nofollow"&gt;【视频】18-TencentOS tiny软件定时器-3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-相关ppt资料" class="anchor" aria-hidden="true" href="#相关ppt资料"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;相关PPT资料：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/PPT"&gt;【TencentOS tiny学习】视频PPT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Tencent</author><guid isPermaLink="false">https://github.com/Tencent/TencentOS-tiny</guid><pubDate>Sat, 01 Feb 2020 00:01:00 GMT</pubDate></item><item><title>leandromoreira/ffmpeg-libav-tutorial #2 in C, This month</title><link>https://github.com/leandromoreira/ffmpeg-libav-tutorial</link><description>&lt;p&gt;&lt;i&gt;FFmpeg libav tutorial - learn how media works from basic to transmuxing, transcoding and more&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://img.shields.io/badge/license-BSD--3--Clause-blue.svg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/274d07206c413193cf01e32de7f897d98da66ca2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4253442d2d332d2d436c617573652d626c75652e737667" alt="license" data-canonical-src="https://img.shields.io/badge/license-BSD--3--Clause-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I was looking for a tutorial/book that would teach me how to start to use &lt;a href="https://www.ffmpeg.org/" rel="nofollow"&gt;FFmpeg&lt;/a&gt; as a library (a.k.a. libav) and then I found the &lt;a href="http://dranger.com/ffmpeg/" rel="nofollow"&gt;"How to write a video player in less than 1k lines"&lt;/a&gt; tutorial.
Unfortunately it was deprecated, so I decided to write this one.&lt;/p&gt;
&lt;p&gt;Most of the code in here will be in c &lt;strong&gt;but don't worry&lt;/strong&gt;: you can easily understand and apply it to your preferred language.
FFmpeg libav has lots of bindings for many languages like &lt;a href="https://mikeboers.github.io/PyAV/" rel="nofollow"&gt;python&lt;/a&gt;, &lt;a href="https://github.com/imkira/go-libav"&gt;go&lt;/a&gt; and even if your language doesn't have it, you can still support it through the &lt;code&gt;ffi&lt;/code&gt; (here's an example with &lt;a href="https://github.com/daurnimator/ffmpeg-lua-ffi/blob/master/init.lua"&gt;Lua&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We'll start with a quick lesson about what is video, audio, codec and container and then we'll go to a crash course on how to use &lt;code&gt;FFmpeg&lt;/code&gt; command line and finally we'll write code, feel free to skip directly to&lt;a href="http://newmediarockstars.com/wp-content/uploads/2015/11/nintendo-direct-iwata.jpg" rel="nofollow"&gt; &lt;/a&gt;the section &lt;a href="#learn-ffmpeg-libav-the-hard-way"&gt;Learn FFmpeg libav the Hard Way.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some people used to say that the Internet video streaming is the future of the traditional TV, in any case, the FFmpeg is something that is worth studying.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#video---what-you-see"&gt;video - what you see!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#audio---what-you-listen"&gt;audio - what you listen!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#codec---shrinking-data"&gt;codec - shrinking data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#container---a-comfy-place-for-audio-and-video"&gt;container - a comfy place for audio and video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ffmpeg---command-line"&gt;FFmpeg - command line&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ffmpeg-command-line-tool-101"&gt;FFmpeg command line tool 101&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#common-video-operations"&gt;Common video operations&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transcoding"&gt;Transcoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transmuxing"&gt;Transmuxing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transrating"&gt;Transrating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transsizing"&gt;Transsizing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bonus-round-adaptive-streaming"&gt;Bonus Round: Adaptive Streaming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#going-beyond"&gt;Going beyond&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#learn-ffmpeg-libav-the-hard-way"&gt;Learn FFmpeg libav the Hard Way&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-0---the-infamous-hello-world"&gt;Chapter 0 - The infamous hello world&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ffmpeg-libav-architecture"&gt;FFmpeg libav architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-1---syncing-audio-and-video"&gt;Chapter 1 - timing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-2---remuxing"&gt;Chapter 2 - remuxing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-3---transcoding"&gt;Chapter 3 - transcoding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-intro" class="anchor" aria-hidden="true" href="#intro"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intro&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-video---what-you-see" class="anchor" aria-hidden="true" href="#video---what-you-see"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;video - what you see!&lt;/h2&gt;
&lt;p&gt;If you have a sequence series of images and change them at a given frequency (let's say &lt;a href="https://www.filmindependent.org/blog/hacking-film-24-frames-per-second/" rel="nofollow"&gt;24 images per second&lt;/a&gt;), you will create an &lt;a href="https://en.wikipedia.org/wiki/Persistence_of_vision" rel="nofollow"&gt;illusion of movement&lt;/a&gt;.
In summary this is the very basic idea behind a video: &lt;strong&gt;a series of pictures / frames running at a given rate&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/966d1f292c623eb0714881944f7c089025bbb049/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f312f31662f4c696e6e65745f6b696e656f67726170685f313838362e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/966d1f292c623eb0714881944f7c089025bbb049/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f312f31662f4c696e6e65745f6b696e656f67726170685f313838362e6a7067" title="flip book" height="280" data-canonical-src="https://upload.wikimedia.org/wikipedia/commons/1/1f/Linnet_kineograph_1886.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Zeitgenössische Illustration (1886)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-audio---what-you-listen" class="anchor" aria-hidden="true" href="#audio---what-you-listen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;audio - what you listen!&lt;/h2&gt;
&lt;p&gt;Although a muted video can express a variety of feelings, adding sound to it brings more pleasure to the experience.&lt;/p&gt;
&lt;p&gt;Sound is the vibration that propagates as a wave of pressure, through the air or any other transmission medium, such as a gas, liquid or solid.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In a digital audio system, a microphone converts sound to an analog electrical signal, then an analog-to-digital converter (ADC) — typically using &lt;a href="https://en.wikipedia.org/wiki/Pulse-code_modulation" rel="nofollow"&gt;pulse-code modulation (PCM)&lt;/a&gt; - converts the analog signal into a digital signal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0ba780b908e6545646bc84e7ccd149f42c505517/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f632f63372f4350542d536f756e642d4144432d4441432e7376672f36343070782d4350542d536f756e642d4144432d4441432e7376672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0ba780b908e6545646bc84e7ccd149f42c505517/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f632f63372f4350542d536f756e642d4144432d4441432e7376672f36343070782d4350542d536f756e642d4144432d4441432e7376672e706e67" alt="audio analog to digital" title="audio analog to digital" data-canonical-src="https://upload.wikimedia.org/wikipedia/commons/thumb/c/c7/CPT-Sound-ADC-DAC.svg/640px-CPT-Sound-ADC-DAC.svg.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:CPT-Sound-ADC-DAC.svg" rel="nofollow"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-codec---shrinking-data" class="anchor" aria-hidden="true" href="#codec---shrinking-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;codec - shrinking data&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;CODEC is an electronic circuit or software that &lt;strong&gt;compresses or decompresses digital audio/video.&lt;/strong&gt; It converts raw (uncompressed) digital audio/video to a compressed format or vice versa.
&lt;a href="https://en.wikipedia.org/wiki/Video_codec" rel="nofollow"&gt;https://en.wikipedia.org/wiki/Video_codec&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But if we chose to pack millions of images in a single file and called it a movie, we might end up with a huge file. Let's do the math:&lt;/p&gt;
&lt;p&gt;Suppose we are creating a video with a resolution of &lt;code&gt;1080 x 1920&lt;/code&gt; (height x width) and that we'll spend &lt;code&gt;3 bytes&lt;/code&gt; per pixel (the minimal point at a screen) to encode the color (or &lt;a href="https://en.wikipedia.org/wiki/Color_depth#True_color_.2824-bit.29" rel="nofollow"&gt;24 bit color&lt;/a&gt;, what gives us 16,777,216 different colors) and this video runs at &lt;code&gt;24 frames per second&lt;/code&gt; and it is &lt;code&gt;30 minutes&lt;/code&gt; long.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;toppf = &lt;span class="pl-c1"&gt;1080&lt;/span&gt; * &lt;span class="pl-c1"&gt;1920&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;total_of_pixels_per_frame&lt;/span&gt;
cpp = &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;cost_per_pixel&lt;/span&gt;
tis = &lt;span class="pl-c1"&gt;30&lt;/span&gt; * &lt;span class="pl-c1"&gt;60&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;time_in_seconds&lt;/span&gt;
fps = &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;frames_per_second&lt;/span&gt;

required_storage = tis * fps * toppf * cpp&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This video would require approximately &lt;code&gt;250.28GB&lt;/code&gt; of storage or &lt;code&gt;1.11Gbps&lt;/code&gt; of bandwidth! That's why we need to use a &lt;a href="https://github.com/leandromoreira/digital_video_introduction#how-does-a-video-codec-work"&gt;CODEC&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-container---a-comfy-place-for-audio-and-video" class="anchor" aria-hidden="true" href="#container---a-comfy-place-for-audio-and-video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;container - a comfy place for audio and video&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;A container or wrapper format is a metafile format whose specification describes how different elements of data and metadata coexist in a computer file.
&lt;a href="https://en.wikipedia.org/wiki/Digital_container_format" rel="nofollow"&gt;https://en.wikipedia.org/wiki/Digital_container_format&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A &lt;strong&gt;single file that contains all the streams&lt;/strong&gt; (mostly the audio and video) and it also provides &lt;strong&gt;synchronization and general metadata&lt;/strong&gt;, such as title, resolution and etc.&lt;/p&gt;
&lt;p&gt;Usually we can infer the format of a file by looking at its extension: for instance a &lt;code&gt;video.webm&lt;/code&gt; is probably a video using the container &lt;a href="https://www.webmproject.org/" rel="nofollow"&gt;&lt;code&gt;webm&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/container.png"&gt;&lt;img src="/img/container.png" alt="container" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-ffmpeg---command-line" class="anchor" aria-hidden="true" href="#ffmpeg---command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FFmpeg - command line&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A complete, cross-platform solution to record, convert and stream audio and video.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To work with multimedia we can use the AMAZING tool/library called &lt;a href="https://www.ffmpeg.org/" rel="nofollow"&gt;FFmpeg&lt;/a&gt;. Chances are you already know/use it directly or indirectly (do you use &lt;a href="https://www.chromium.org/developers/design-documents/video" rel="nofollow"&gt;Chrome?&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It has a command line program called &lt;code&gt;ffmpeg&lt;/code&gt;, a very simple yet powerful binary.
For instance, you can convert from &lt;code&gt;mp4&lt;/code&gt; to the container &lt;code&gt;avi&lt;/code&gt; just by typing the follow command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ffmpeg -i input.mp4 output.avi&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We just made a &lt;strong&gt;remuxing&lt;/strong&gt; here, which is converting from one container to another one.
Technically FFmpeg could also be doing a transcoding but we'll talk about that later.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ffmpeg-command-line-tool-101" class="anchor" aria-hidden="true" href="#ffmpeg-command-line-tool-101"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FFmpeg command line tool 101&lt;/h2&gt;
&lt;p&gt;FFmpeg does have a &lt;a href="https://www.ffmpeg.org/ffmpeg.html" rel="nofollow"&gt;documentation&lt;/a&gt; that does a great job of explaining how it works.&lt;/p&gt;
&lt;p&gt;To make things short, the FFmpeg command line program expects the following argument format to perform its actions &lt;code&gt;ffmpeg {1} {2} -i {3} {4} {5}&lt;/code&gt;, where:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;global options&lt;/li&gt;
&lt;li&gt;input file options&lt;/li&gt;
&lt;li&gt;input url&lt;/li&gt;
&lt;li&gt;output file options&lt;/li&gt;
&lt;li&gt;output url&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The parts 2, 3, 4 and 5 can be as many as you need.
It's easier to understand this argument format in action:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; WARNING: this file is around 300MB&lt;/span&gt;
$ wget -O bunny_1080p_60fps.mp4 http://distribution.bbb3d.renderfarming.net/video/mp4/bbb_sunflower_1080p_60fps_normal.mp4

$ ffmpeg \
-y &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; global options&lt;/span&gt;
-c:a libfdk_aac -c:v libx264 &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; input options&lt;/span&gt;
-i bunny_1080p_60fps.mp4 &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; input url&lt;/span&gt;
-c:v libvpx-vp9 -c:a libvorbis &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; output options&lt;/span&gt;
bunny_1080p_60fps_vp9.webm &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; output url&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command takes an input file &lt;code&gt;mp4&lt;/code&gt; containing two streams (an audio encoded with &lt;code&gt;aac&lt;/code&gt; CODEC and a video encoded using &lt;code&gt;h264&lt;/code&gt; CODEC) and convert it to &lt;code&gt;webm&lt;/code&gt;, changing its audio and video CODECs too.&lt;/p&gt;
&lt;p&gt;We could simplify the command above but then be aware that FFmpeg will adopt or guess the default values for you.
For instance when you just type &lt;code&gt;ffmpeg -i input.avi output.mp4&lt;/code&gt; what audio/video CODEC does it use to produce the &lt;code&gt;output.mp4&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Werner Robitza wrote a must read/execute &lt;a href="http://slhck.info/ffmpeg-encoding-course/#/" rel="nofollow"&gt;tutorial about encoding and editing with FFmpeg&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-common-video-operations" class="anchor" aria-hidden="true" href="#common-video-operations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common video operations&lt;/h1&gt;
&lt;p&gt;While working with audio/video we usually do a set of tasks with the media.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-transcoding" class="anchor" aria-hidden="true" href="#transcoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transcoding&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/transcoding.png"&gt;&lt;img src="/img/transcoding.png" alt="transcoding" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What?&lt;/strong&gt; the act of converting one of the streams (audio or video) from one CODEC to another one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; sometimes some devices (TVs, smartphones, console and etc) doesn't support X but Y and newer CODECs provide better compression rate.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How?&lt;/strong&gt; converting an &lt;code&gt;H264&lt;/code&gt; (AVC) video to an &lt;code&gt;H265&lt;/code&gt; (HEVC).&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ffmpeg \
-i bunny_1080p_60fps.mp4 \
-c:v libx265 \
bunny_1080p_60fps_h265.mp4&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-transmuxing" class="anchor" aria-hidden="true" href="#transmuxing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transmuxing&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/transmuxing.png"&gt;&lt;img src="/img/transmuxing.png" alt="transmuxing" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What?&lt;/strong&gt; the act of converting from one format (container) to another one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; sometimes some devices (TVs, smartphones, console and etc) doesn't support X but Y and sometimes newer containers provide modern required features.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How?&lt;/strong&gt; converting a &lt;code&gt;mp4&lt;/code&gt; to a &lt;code&gt;webm&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ffmpeg \
-i bunny_1080p_60fps.mp4 \
-c copy &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; just saying to ffmpeg to skip encoding&lt;/span&gt;
bunny_1080p_60fps.webm&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-transrating" class="anchor" aria-hidden="true" href="#transrating"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transrating&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/transrating.png"&gt;&lt;img src="/img/transrating.png" alt="transrating" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What?&lt;/strong&gt; the act of changing the bit rate, or producing other renditions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; people will try to watch your video in a &lt;code&gt;2G&lt;/code&gt; (edge) connection using a less powerful smartphone or in a &lt;code&gt;fiber&lt;/code&gt; Internet connection on their 4K TVs therefore you should offer more than one rendition of the same video with different bit rate.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How?&lt;/strong&gt; producing a rendition with bit rate between 3856K and 2000K.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ffmpeg \
-i bunny_1080p_60fps.mp4 \
-minrate 964K -maxrate 3856K -bufsize 2000K \
bunny_1080p_60fps_transrating_964_3856.mp4&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Usually we'll be using transrating with transsizing. Werner Robitza wrote another must read/execute &lt;a href="http://slhck.info/posts/" rel="nofollow"&gt;series of posts about FFmpeg rate control&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-transsizing" class="anchor" aria-hidden="true" href="#transsizing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transsizing&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/transsizing.png"&gt;&lt;img src="/img/transsizing.png" alt="transsizing" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What?&lt;/strong&gt; the act of converting from one resolution to another one. As said before transsizing is often used with transrating.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; reasons are about the same as for the transrating.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How?&lt;/strong&gt; converting a &lt;code&gt;1080p&lt;/code&gt; to a &lt;code&gt;480p&lt;/code&gt; resolution.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ffmpeg \
-i bunny_1080p_60fps.mp4 \
-vf scale=480:-1 \
bunny_1080p_60fps_transsizing_480.mp4&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-bonus-round-adaptive-streaming" class="anchor" aria-hidden="true" href="#bonus-round-adaptive-streaming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bonus Round: Adaptive Streaming&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/adaptive-streaming.png"&gt;&lt;img src="/img/adaptive-streaming.png" alt="adaptive streaming" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What?&lt;/strong&gt; the act of producing many resolutions (bit rates) and split the media into chunks and serve them via http.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; to provide a flexible media that can be watched on a low end smartphone or on a 4K TV, it's also easy to scale and deploy but it can add latency.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How?&lt;/strong&gt; creating an adaptive WebM using DASH.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; video streams&lt;/span&gt;
$ ffmpeg -i bunny_1080p_60fps.mp4 -c:v libvpx-vp9 -s 160x90 -b:v 250k -keyint_min 150 -g 150 -an -f webm -dash 1 video_160x90_250k.webm

$ ffmpeg -i bunny_1080p_60fps.mp4 -c:v libvpx-vp9 -s 320x180 -b:v 500k -keyint_min 150 -g 150 -an -f webm -dash 1 video_320x180_500k.webm

$ ffmpeg -i bunny_1080p_60fps.mp4 -c:v libvpx-vp9 -s 640x360 -b:v 750k -keyint_min 150 -g 150 -an -f webm -dash 1 video_640x360_750k.webm

$ ffmpeg -i bunny_1080p_60fps.mp4 -c:v libvpx-vp9 -s 640x360 -b:v 1000k -keyint_min 150 -g 150 -an -f webm -dash 1 video_640x360_1000k.webm

$ ffmpeg -i bunny_1080p_60fps.mp4 -c:v libvpx-vp9 -s 1280x720 -b:v 1500k -keyint_min 150 -g 150 -an -f webm -dash 1 video_1280x720_1500k.webm

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; audio streams&lt;/span&gt;
$ ffmpeg -i bunny_1080p_60fps.mp4 -c:a libvorbis -b:a 128k -vn -f webm -dash 1 audio_128k.webm

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; the DASH manifest&lt;/span&gt;
$ ffmpeg \
 -f webm_dash_manifest -i video_160x90_250k.webm \
 -f webm_dash_manifest -i video_320x180_500k.webm \
 -f webm_dash_manifest -i video_640x360_750k.webm \
 -f webm_dash_manifest -i video_640x360_1000k.webm \
 -f webm_dash_manifest -i video_1280x720_500k.webm \
 -f webm_dash_manifest -i audio_128k.webm \
 -c copy -map 0 -map 1 -map 2 -map 3 -map 4 -map 5 \
 -f webm_dash_manifest \
 -adaptation_sets &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id=0,streams=0,1,2,3,4 id=1,streams=5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
 manifest.mpd&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PS: I stole this example from the &lt;a href="http://wiki.webmproject.org/adaptive-streaming/instructions-to-playback-adaptive-webm-using-dash" rel="nofollow"&gt;Instructions to playback Adaptive WebM using DASH&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-going-beyond" class="anchor" aria-hidden="true" href="#going-beyond"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Going beyond&lt;/h2&gt;
&lt;p&gt;There are &lt;a href="https://github.com/leandromoreira/digital_video_introduction/blob/master/encoding_pratical_examples.md#split-and-merge-smoothly"&gt;many and many other usages for FFmpeg&lt;/a&gt;.
I use it in conjunction with &lt;em&gt;iMovie&lt;/em&gt; to produce/edit some videos for YouTube and you can certainly use it professionally.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-learn-ffmpeg-libav-the-hard-way" class="anchor" aria-hidden="true" href="#learn-ffmpeg-libav-the-hard-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn FFmpeg libav the Hard Way&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Don't you wonder sometimes 'bout sound and vision?
&lt;strong&gt;David Robert Jones&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since the &lt;a href="#ffmpeg---command-line"&gt;FFmpeg&lt;/a&gt; is so useful as a command line tool to do essential tasks over the media files, how can we use it in our programs?&lt;/p&gt;
&lt;p&gt;FFmpeg is &lt;a href="https://www.ffmpeg.org/doxygen/trunk/index.html" rel="nofollow"&gt;composed by several libraries&lt;/a&gt; that can be integrated into our own programs.
Usually, when you install FFmpeg, it installs automatically all these libraries. I'll be referring to the set of these libraries as &lt;strong&gt;FFmpeg libav&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This title is a homage to Zed Shaw's series &lt;a href="https://learncodethehardway.org/" rel="nofollow"&gt;Learn X the Hard Way&lt;/a&gt;, particularly his book Learn C the Hard Way.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-chapter-0---the-infamous-hello-world" class="anchor" aria-hidden="true" href="#chapter-0---the-infamous-hello-world"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chapter 0 - The infamous hello world&lt;/h2&gt;
&lt;p&gt;This hello world actually won't show the message &lt;code&gt;"hello world"&lt;/code&gt; in the terminal &lt;g-emoji class="g-emoji" alias="tongue" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f445.png"&gt;👅&lt;/g-emoji&gt;
Instead we're going to &lt;strong&gt;print out information about the video&lt;/strong&gt;, things like its format (container), duration, resolution, audio channels and, in the end, we'll &lt;strong&gt;decode some frames and save them as image files&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ffmpeg-libav-architecture" class="anchor" aria-hidden="true" href="#ffmpeg-libav-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FFmpeg libav architecture&lt;/h3&gt;
&lt;p&gt;But before we start to code, let's learn how &lt;strong&gt;FFmpeg libav architecture&lt;/strong&gt; works and how its components communicate with others.&lt;/p&gt;
&lt;p&gt;Here's a diagram of the process of decoding a video:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/decoding.png"&gt;&lt;img src="/img/decoding.png" alt="ffmpeg libav architecture - decoding process" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You'll first need to load your media file into a component called &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVFormatContext.html" rel="nofollow"&gt;&lt;code&gt;AVFormatContext&lt;/code&gt;&lt;/a&gt; (the video container is also known as format).
It actually doesn't fully load the whole file: it often only reads the header.&lt;/p&gt;
&lt;p&gt;Once we loaded the minimal &lt;strong&gt;header of our container&lt;/strong&gt;, we can access its streams (think of them as a rudimentary audio and video data).
Each stream will be available in a component called &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVStream.html" rel="nofollow"&gt;&lt;code&gt;AVStream&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Stream is a fancy name for a continuous flow of data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Suppose our video has two streams: an audio encoded with &lt;a href="https://en.wikipedia.org/wiki/Advanced_Audio_Coding" rel="nofollow"&gt;AAC CODEC&lt;/a&gt; and a video encoded with &lt;a href="https://en.wikipedia.org/wiki/H.264/MPEG-4_AVC" rel="nofollow"&gt;H264 (AVC) CODEC&lt;/a&gt;. From each stream we can extract &lt;strong&gt;pieces (slices) of data&lt;/strong&gt; called packets that will be loaded into components named &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVPacket.html" rel="nofollow"&gt;&lt;code&gt;AVPacket&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;data inside the packets are still coded&lt;/strong&gt; (compressed) and in order to decode the packets, we need to pass them to a specific &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVCodec.html" rel="nofollow"&gt;&lt;code&gt;AVCodec&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;AVCodec&lt;/code&gt; will decode them into &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVFrame.html" rel="nofollow"&gt;&lt;code&gt;AVFrame&lt;/code&gt;&lt;/a&gt; and finally, this component gives us &lt;strong&gt;the uncompressed frame&lt;/strong&gt;.  Noticed that the same terminology/process is used either by audio and video stream.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;p&gt;Since some people were &lt;a href="https://github.com/leandromoreira/ffmpeg-libav-tutorial/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+compiling"&gt;facing issues while compiling or running the examples&lt;/a&gt; &lt;strong&gt;we're going to use &lt;a href="https://docs.docker.com/install/" rel="nofollow"&gt;&lt;code&gt;Docker&lt;/code&gt;&lt;/a&gt; as our development/runner environment,&lt;/strong&gt; we'll also use the big buck bunny video so if you don't have it locally just run the command &lt;code&gt;make fetch_small_bunny_video&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-chapter-0---code-walkthrough" class="anchor" aria-hidden="true" href="#chapter-0---code-walkthrough"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chapter 0 - code walkthrough&lt;/h3&gt;
&lt;blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-tldr-show-me-the-code-and-execution" class="anchor" aria-hidden="true" href="#tldr-show-me-the-code-and-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TLDR; show me the &lt;a href="/0_hello_world.c"&gt;code&lt;/a&gt; and execution.&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make run_hello&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;We'll skip some details, but don't worry: the &lt;a href="/0_hello_world.c"&gt;source code is available at github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We're going to allocate memory to the component &lt;a href="http://ffmpeg.org/doxygen/trunk/structAVFormatContext.html" rel="nofollow"&gt;&lt;code&gt;AVFormatContext&lt;/code&gt;&lt;/a&gt; that will hold  information about the format (container).&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;AVFormatContext *pFormatContext = avformat_alloc_context();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we're going to open the file and read its header and fill the &lt;code&gt;AVFormatContext&lt;/code&gt; with minimal information about the format (notice that usually the codecs are not opened).
The function used to do this is &lt;a href="http://ffmpeg.org/doxygen/trunk/group__lavf__decoding.html#ga31d601155e9035d5b0e7efedc894ee49" rel="nofollow"&gt;&lt;code&gt;avformat_open_input&lt;/code&gt;&lt;/a&gt;. It expects an &lt;code&gt;AVFormatContext&lt;/code&gt;, a &lt;code&gt;filename&lt;/code&gt; and two optional arguments: the &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVInputFormat.html" rel="nofollow"&gt;&lt;code&gt;AVInputFormat&lt;/code&gt;&lt;/a&gt; (if you pass &lt;code&gt;NULL&lt;/code&gt;, FFmpeg will guess the format) and the &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVDictionary.html" rel="nofollow"&gt;&lt;code&gt;AVDictionary&lt;/code&gt;&lt;/a&gt; (which are the options to the demuxer).&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;avformat_open_input&lt;/span&gt;(&amp;amp;pFormatContext, filename, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can print the format name and the media duration:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Format &lt;span class="pl-c1"&gt;%s&lt;/span&gt;, duration &lt;span class="pl-c1"&gt;%lld&lt;/span&gt; us&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pFormatContext-&amp;gt;iformat-&amp;gt;long_name, pFormatContext-&amp;gt;duration);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To access the &lt;code&gt;streams&lt;/code&gt;, we need to read data from the media. The function &lt;a href="https://ffmpeg.org/doxygen/trunk/group__lavf__decoding.html#gad42172e27cddafb81096939783b157bb" rel="nofollow"&gt;&lt;code&gt;avformat_find_stream_info&lt;/code&gt;&lt;/a&gt; does that.
Now, the &lt;code&gt;pFormatContext-&amp;gt;nb_streams&lt;/code&gt; will hold the amount of streams and the &lt;code&gt;pFormatContext-&amp;gt;streams[i]&lt;/code&gt; will give us the &lt;code&gt;i&lt;/code&gt; stream (an &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVStream.html" rel="nofollow"&gt;&lt;code&gt;AVStream&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;avformat_find_stream_info&lt;/span&gt;(pFormatContext,  &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we'll loop through all the streams.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; pFormatContext-&amp;gt;nb_streams; i++)
{
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For each stream, we're going to keep the &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVCodecParameters.html" rel="nofollow"&gt;&lt;code&gt;AVCodecParameters&lt;/code&gt;&lt;/a&gt;, which describes the properties of a codec used by the stream &lt;code&gt;i&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;AVCodecParameters *pLocalCodecParameters = pFormatContext-&amp;gt;streams[i]-&amp;gt;codecpar;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the codec properties we can look up the proper CODEC querying the function &lt;a href="https://ffmpeg.org/doxygen/trunk/group__lavc__decoding.html#ga19a0ca553277f019dd5b0fec6e1f9dca" rel="nofollow"&gt;&lt;code&gt;avcodec_find_decoder&lt;/code&gt;&lt;/a&gt; and find the registered decoder for the codec id and return an &lt;a href="http://ffmpeg.org/doxygen/trunk/structAVCodec.html" rel="nofollow"&gt;&lt;code&gt;AVCodec&lt;/code&gt;&lt;/a&gt;, the component that knows how to en&lt;strong&gt;CO&lt;/strong&gt;de and &lt;strong&gt;DEC&lt;/strong&gt;ode the stream.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;AVCodec *pLocalCodec = avcodec_find_decoder(pLocalCodecParameters-&amp;gt;codec_id);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can print information about the codecs.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; specific for video and audio&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; (pLocalCodecParameters-&amp;gt;codec_type == AVMEDIA_TYPE_VIDEO) {
  &lt;span class="pl-c1"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Video Codec: resolution &lt;span class="pl-c1"&gt;%d&lt;/span&gt; x &lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pLocalCodecParameters-&amp;gt;&lt;span class="pl-smi"&gt;width&lt;/span&gt;, pLocalCodecParameters-&amp;gt;&lt;span class="pl-smi"&gt;height&lt;/span&gt;);
} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (pLocalCodecParameters-&amp;gt;codec_type == AVMEDIA_TYPE_AUDIO) {
  &lt;span class="pl-c1"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Audio Codec: &lt;span class="pl-c1"&gt;%d&lt;/span&gt; channels, sample rate &lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pLocalCodecParameters-&amp;gt;&lt;span class="pl-smi"&gt;channels&lt;/span&gt;, pLocalCodecParameters-&amp;gt;&lt;span class="pl-smi"&gt;sample_rate&lt;/span&gt;);
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; general&lt;/span&gt;
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\t&lt;/span&gt;Codec &lt;span class="pl-c1"&gt;%s&lt;/span&gt; ID &lt;span class="pl-c1"&gt;%d&lt;/span&gt; bit_rate &lt;span class="pl-c1"&gt;%lld&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pLocalCodec-&amp;gt;long_name, pLocalCodec-&amp;gt;id, pCodecParameters-&amp;gt;bit_rate);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the codec, we can allocate memory for the &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVCodecContext.html" rel="nofollow"&gt;&lt;code&gt;AVCodecContext&lt;/code&gt;&lt;/a&gt;, which will hold the context for our decode/encode process, but then we need to fill this codec context with CODEC parameters; we do that with &lt;a href="https://ffmpeg.org/doxygen/trunk/group__lavc__core.html#gac7b282f51540ca7a99416a3ba6ee0d16" rel="nofollow"&gt;&lt;code&gt;avcodec_parameters_to_context&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once we filled the codec context, we need to open the codec. We call the function &lt;a href="https://ffmpeg.org/doxygen/trunk/group__lavc__core.html#ga11f785a188d7d9df71621001465b0f1d" rel="nofollow"&gt;&lt;code&gt;avcodec_open2&lt;/code&gt;&lt;/a&gt; and then we can use it.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;AVCodecContext *pCodecContext = avcodec_alloc_context3(pCodec);
&lt;span class="pl-en"&gt;avcodec_parameters_to_context&lt;/span&gt;(pCodecContext, pCodecParameters);
&lt;span class="pl-en"&gt;avcodec_open2&lt;/span&gt;(pCodecContext, pCodec, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we're going to read the packets from the stream and decode them into frames but first, we need to allocate memory for both components, the &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVPacket.html" rel="nofollow"&gt;&lt;code&gt;AVPacket&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVFrame.html" rel="nofollow"&gt;&lt;code&gt;AVFrame&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;AVPacket *pPacket = av_packet_alloc();
AVFrame *pFrame = av_frame_alloc();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's feed our packets from the streams with the function &lt;a href="https://ffmpeg.org/doxygen/trunk/group__lavf__decoding.html#ga4fdb3084415a82e3810de6ee60e46a61" rel="nofollow"&gt;&lt;code&gt;av_read_frame&lt;/code&gt;&lt;/a&gt; while it has packets.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;while&lt;/span&gt; (av_read_frame(pFormatContext, pPacket) &amp;gt;= &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's &lt;strong&gt;send the raw data packet&lt;/strong&gt; (compressed frame) to the decoder, through the codec context, using the function &lt;a href="https://ffmpeg.org/doxygen/trunk/group__lavc__decoding.html#ga58bc4bf1e0ac59e27362597e467efff3" rel="nofollow"&gt;&lt;code&gt;avcodec_send_packet&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;avcodec_send_packet&lt;/span&gt;(pCodecContext, pPacket);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And let's &lt;strong&gt;receive the raw data frame&lt;/strong&gt; (uncompressed frame) from the decoder, through the same codec context, using the function &lt;a href="https://ffmpeg.org/doxygen/trunk/group__lavc__decoding.html#ga11e6542c4e66d3028668788a1a74217c" rel="nofollow"&gt;&lt;code&gt;avcodec_receive_frame&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;avcodec_receive_frame&lt;/span&gt;(pCodecContext, pFrame);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can print the frame number, the &lt;a href="https://en.wikipedia.org/wiki/Presentation_timestamp" rel="nofollow"&gt;PTS&lt;/a&gt;, DTS, &lt;a href="https://en.wikipedia.org/wiki/Video_compression_picture_types" rel="nofollow"&gt;frame type&lt;/a&gt; and etc.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;printf&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Frame &lt;span class="pl-c1"&gt;%c&lt;/span&gt; (&lt;span class="pl-c1"&gt;%d&lt;/span&gt;) pts &lt;span class="pl-c1"&gt;%d&lt;/span&gt; dts &lt;span class="pl-c1"&gt;%d&lt;/span&gt; key_frame &lt;span class="pl-c1"&gt;%d&lt;/span&gt; [coded_picture_number &lt;span class="pl-c1"&gt;%d&lt;/span&gt;, display_picture_number &lt;span class="pl-c1"&gt;%d&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-en"&gt;av_get_picture_type_char&lt;/span&gt;(pFrame-&amp;gt;pict_type),
    pCodecContext-&amp;gt;frame_number,
    pFrame-&amp;gt;pts,
    pFrame-&amp;gt;pkt_dts,
    pFrame-&amp;gt;key_frame,
    pFrame-&amp;gt;coded_picture_number,
    pFrame-&amp;gt;display_picture_number
);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally we can save our decoded frame into a &lt;a href="https://en.wikipedia.org/wiki/Netpbm_format#PGM_example" rel="nofollow"&gt;simple gray image&lt;/a&gt;. The process is very simple, we'll use the &lt;code&gt;pFrame-&amp;gt;data&lt;/code&gt; where the index is related to the &lt;a href="https://en.wikipedia.org/wiki/YCbCr" rel="nofollow"&gt;planes Y, Cb and Cr&lt;/a&gt;, we just picked &lt;code&gt;0&lt;/code&gt; (Y) to save our gray image.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;save_gray_frame&lt;/span&gt;(pFrame-&amp;gt;data[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], pFrame-&amp;gt;linesize[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], pFrame-&amp;gt;width, pFrame-&amp;gt;height, frame_filename);

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;save_gray_frame&lt;/span&gt;(&lt;span class="pl-k"&gt;unsigned&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *buf, &lt;span class="pl-k"&gt;int&lt;/span&gt; wrap, &lt;span class="pl-k"&gt;int&lt;/span&gt; xsize, &lt;span class="pl-k"&gt;int&lt;/span&gt; ysize, &lt;span class="pl-k"&gt;char&lt;/span&gt; *filename)
{
    &lt;span class="pl-c1"&gt;FILE&lt;/span&gt; *f;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; i;
    f = &lt;span class="pl-c1"&gt;fopen&lt;/span&gt;(filename,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;w&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; writing the minimal required header for a pgm file format&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; portable graymap format -&amp;gt; https://en.wikipedia.org/wiki/Netpbm_format#PGM_example&lt;/span&gt;
    &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(f, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;P5&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt; &lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, xsize, ysize, &lt;span class="pl-c1"&gt;255&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; writing line by line&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; ysize; i++)
        &lt;span class="pl-c1"&gt;fwrite&lt;/span&gt;(buf + i * wrap, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, xsize, f);
    &lt;span class="pl-c1"&gt;fclose&lt;/span&gt;(f);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And voilà! Now we have a gray scale image with 2MB:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/generated_frame.png"&gt;&lt;img src="/img/generated_frame.png" alt="saved frame" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-chapter-1---syncing-audio-and-video" class="anchor" aria-hidden="true" href="#chapter-1---syncing-audio-and-video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chapter 1 - syncing audio and video&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Be the player&lt;/strong&gt; - a young JS developer writing a new MSE video player.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Before we move to &lt;a href="#chapter-2---transcoding"&gt;code a transcoding example&lt;/a&gt; let's talk about &lt;strong&gt;timing&lt;/strong&gt;, or how a video player knows the right time to play a frame.&lt;/p&gt;
&lt;p&gt;In the last example, we saved some frames that can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/hello_world_frames/frame0.png"&gt;&lt;img src="/img/hello_world_frames/frame0.png" alt="frame 0" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="/img/hello_world_frames/frame1.png"&gt;&lt;img src="/img/hello_world_frames/frame1.png" alt="frame 1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="/img/hello_world_frames/frame2.png"&gt;&lt;img src="/img/hello_world_frames/frame2.png" alt="frame 2" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="/img/hello_world_frames/frame3.png"&gt;&lt;img src="/img/hello_world_frames/frame3.png" alt="frame 3" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="/img/hello_world_frames/frame4.png"&gt;&lt;img src="/img/hello_world_frames/frame4.png" alt="frame 4" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="/img/hello_world_frames/frame5.png"&gt;&lt;img src="/img/hello_world_frames/frame5.png" alt="frame 5" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When we're designing a video player we need to &lt;strong&gt;play each frame at a given pace&lt;/strong&gt;, otherwise it would be hard to pleasantly see the video either because it's playing so fast or so slow.&lt;/p&gt;
&lt;p&gt;Therefore we need to introduce some logic to play each frame smoothly. For that matter, each frame has a &lt;strong&gt;presentation timestamp&lt;/strong&gt; (PTS) which is an increasing number factored in a &lt;strong&gt;timebase&lt;/strong&gt; that is a rational number (where the denominator is known as &lt;strong&gt;timescale&lt;/strong&gt;) divisible by the &lt;strong&gt;frame rate (fps)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;It's easier to understand when we look at some examples, let's simulate some scenarios.&lt;/p&gt;
&lt;p&gt;For a &lt;code&gt;fps=60/1&lt;/code&gt; and &lt;code&gt;timebase=1/60000&lt;/code&gt; each PTS will increase &lt;code&gt;timescale / fps = 1000&lt;/code&gt; therefore the &lt;strong&gt;PTS real time&lt;/strong&gt; for each frame could be (supposing it started at 0):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;frame=0, PTS = 0, PTS_TIME = 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame=1, PTS = 1000, PTS_TIME = PTS * timebase = 0.016&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame=2, PTS = 2000, PTS_TIME = PTS * timebase = 0.033&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For almost the same scenario but with a timebase equal to &lt;code&gt;1/60&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;frame=0, PTS = 0, PTS_TIME = 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame=1, PTS = 1, PTS_TIME = PTS * timebase = 0.016&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame=2, PTS = 2, PTS_TIME = PTS * timebase = 0.033&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame=3, PTS = 3, PTS_TIME = PTS * timebase = 0.050&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a &lt;code&gt;fps=25/1&lt;/code&gt; and &lt;code&gt;timebase=1/75&lt;/code&gt; each PTS will increase &lt;code&gt;timescale / fps = 3&lt;/code&gt; and the PTS time could be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;frame=0, PTS = 0, PTS_TIME = 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame=1, PTS = 3, PTS_TIME = PTS * timebase = 0.04&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame=2, PTS = 6, PTS_TIME = PTS * timebase = 0.08&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame=3, PTS = 9, PTS_TIME = PTS * timebase = 0.12&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame=24, PTS = 72, PTS_TIME = PTS * timebase = 0.96&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame=4064, PTS = 12192, PTS_TIME = PTS * timebase = 162.56&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now with the &lt;code&gt;pts_time&lt;/code&gt; we can find a way to render this synched with audio &lt;code&gt;pts_time&lt;/code&gt; or with a system clock. The FFmpeg libav provides these info through its API:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fps = &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVStream.html#a946e1e9b89eeeae4cab8a833b482c1ad" rel="nofollow"&gt;&lt;code&gt;AVStream-&amp;gt;avg_frame_rate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tbr = &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVStream.html#ad63fb11cc1415e278e09ddc676e8a1ad" rel="nofollow"&gt;&lt;code&gt;AVStream-&amp;gt;r_frame_rate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tbn = &lt;a href="https://ffmpeg.org/doxygen/trunk/structAVStream.html#a9db755451f14e2bf590d4b85d82b32e6" rel="nofollow"&gt;&lt;code&gt;AVStream-&amp;gt;time_base&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just out of curiosity, the frames we saved were sent in a DTS order (frames: 1,6,4,2,3,5) but played at a PTS order (frames: 1,2,3,4,5). Also, notice how cheap are B-Frames in comparison to P or I-Frames.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LOG: AVStream-&amp;gt;r_frame_rate 60/1
LOG: AVStream-&amp;gt;time_base 1/60000
...
LOG: Frame 1 (type=I, size=153797 bytes) pts 6000 key_frame 1 [DTS 0]
LOG: Frame 2 (type=B, size=8117 bytes) pts 7000 key_frame 0 [DTS 3]
LOG: Frame 3 (type=B, size=8226 bytes) pts 8000 key_frame 0 [DTS 4]
LOG: Frame 4 (type=B, size=17699 bytes) pts 9000 key_frame 0 [DTS 2]
LOG: Frame 5 (type=B, size=6253 bytes) pts 10000 key_frame 0 [DTS 5]
LOG: Frame 6 (type=P, size=34992 bytes) pts 11000 key_frame 0 [DTS 1]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-chapter-2---remuxing" class="anchor" aria-hidden="true" href="#chapter-2---remuxing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chapter 2 - remuxing&lt;/h2&gt;
&lt;p&gt;Remuxing is the act of changing from one format (container) to another, for instance, we can change a &lt;a href="https://en.wikipedia.org/wiki/MPEG-4_Part_14" rel="nofollow"&gt;MPEG-4&lt;/a&gt; video to a &lt;a href="https://en.wikipedia.org/wiki/MPEG_transport_stream" rel="nofollow"&gt;MPEG-TS&lt;/a&gt; one without much pain using FFmpeg:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ffmpeg input.mp4 -c copy output.ts&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It'll demux the mp4 but it won't decode or encode it (&lt;code&gt;-c copy&lt;/code&gt;) and in the end, it'll mux it into a &lt;code&gt;mpegts&lt;/code&gt; file. If you don't provide the format &lt;code&gt;-f&lt;/code&gt; the ffmpeg will try to guess it based on the file's extension.&lt;/p&gt;
&lt;p&gt;The general usage of FFmpeg or the libav follows a pattern/architecture or workflow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://ffmpeg.org/doxygen/trunk/protocols_8c.html" rel="nofollow"&gt;protocol layer&lt;/a&gt;&lt;/strong&gt; - it accepts an &lt;code&gt;input&lt;/code&gt; (a &lt;code&gt;file&lt;/code&gt; for instance but it could be a &lt;code&gt;rtmp&lt;/code&gt; or &lt;code&gt;HTTP&lt;/code&gt; input as well)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://ffmpeg.org/doxygen/trunk/group__libavf.html" rel="nofollow"&gt;format layer&lt;/a&gt;&lt;/strong&gt; - it &lt;code&gt;demuxes&lt;/code&gt; its content, revealing mostly metadata and its streams&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://ffmpeg.org/doxygen/trunk/group__libavc.html" rel="nofollow"&gt;codec layer&lt;/a&gt;&lt;/strong&gt; - it &lt;code&gt;decodes&lt;/code&gt; its compressed streams data &lt;sup&gt;&lt;em&gt;optional&lt;/em&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://ffmpeg.org/doxygen/trunk/group__lavfi.html" rel="nofollow"&gt;pixel layer&lt;/a&gt;&lt;/strong&gt; - it can also apply some &lt;code&gt;filters&lt;/code&gt; to the raw frames (like resizing)&lt;sup&gt;&lt;em&gt;optional&lt;/em&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;and then it does the reverse path&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://ffmpeg.org/doxygen/trunk/group__libavc.html" rel="nofollow"&gt;codec layer&lt;/a&gt;&lt;/strong&gt; - it &lt;code&gt;encodes&lt;/code&gt; (or &lt;code&gt;re-encodes&lt;/code&gt; or even &lt;code&gt;transcodes&lt;/code&gt;) the raw frames&lt;sup&gt;&lt;em&gt;optional&lt;/em&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://ffmpeg.org/doxygen/trunk/group__libavf.html" rel="nofollow"&gt;format layer&lt;/a&gt;&lt;/strong&gt; - it &lt;code&gt;muxes&lt;/code&gt; (or &lt;code&gt;remuxes&lt;/code&gt;) the raw streams (the compressed data)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://ffmpeg.org/doxygen/trunk/protocols_8c.html" rel="nofollow"&gt;protocol layer&lt;/a&gt;&lt;/strong&gt; - and finally the muxed data is sent to an &lt;code&gt;output&lt;/code&gt; (another file or maybe a network remote server)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/ffmpeg_libav_workflow.jpeg"&gt;&lt;img src="/img/ffmpeg_libav_workflow.jpeg" alt="ffmpeg libav workflow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This graph is strongly inspired by &lt;a href="http://leixiaohua1020.github.io/#ffmpeg-development-examples" rel="nofollow"&gt;Leixiaohua's&lt;/a&gt; and &lt;a href="https://slhck.info/ffmpeg-encoding-course/#/9" rel="nofollow"&gt;Slhck's&lt;/a&gt; works.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now let's code an example using libav to provide the same effect as in &lt;code&gt;ffmpeg input.mp4 -c copy output.ts&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We're going to read from an input (&lt;code&gt;input_format_context&lt;/code&gt;) and change it to another output (&lt;code&gt;output_format_context&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;AVFormatContext *input_format_context = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
AVFormatContext *output_format_context = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We start doing the usually allocate memory and open the input format. For this specific case, we're going to open an input file and allocate memory for an output file.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; ((ret = avformat_open_input(&amp;amp;input_format_context, in_filename, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)) &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
  &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Could not open input file '&lt;span class="pl-c1"&gt;%s&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, in_filename);
  &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
}
&lt;span class="pl-k"&gt;if&lt;/span&gt; ((ret = avformat_find_stream_info(input_format_context, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)) &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
  &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed to retrieve input stream information&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
}

&lt;span class="pl-en"&gt;avformat_alloc_output_context2&lt;/span&gt;(&amp;amp;output_format_context, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;, out_filename);
&lt;span class="pl-k"&gt;if&lt;/span&gt; (!output_format_context) {
  &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Could not create output context&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  ret = AVERROR_UNKNOWN;
  &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We're going to remux only the video, audio and subtitle types of streams so we're holding what streams we'll be using into an array of indexes.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;number_of_streams = input_format_context-&amp;gt;nb_streams;
streams_list = av_mallocz_array(number_of_streams, &lt;span class="pl-k"&gt;sizeof&lt;/span&gt;(*streams_list));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just after we allocated the required memory, we're going to loop throughout all the streams and for each one we need to create new out stream into our output format context, using the &lt;a href="https://ffmpeg.org/doxygen/trunk/group__lavf__core.html#gadcb0fd3e507d9b58fe78f61f8ad39827" rel="nofollow"&gt;avformat_new_stream&lt;/a&gt; function. Notice that we're marking all the streams that aren't video, audio or subtitle so we can skip them after.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; (i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; input_format_context-&amp;gt;nb_streams; i++) {
  AVStream *out_stream;
  AVStream *in_stream = input_format_context-&amp;gt;&lt;span class="pl-smi"&gt;streams&lt;/span&gt;[i];
  AVCodecParameters *in_codecpar = in_stream-&amp;gt;&lt;span class="pl-smi"&gt;codecpar&lt;/span&gt;;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (in_codecpar-&amp;gt;&lt;span class="pl-smi"&gt;codec_type&lt;/span&gt; != AVMEDIA_TYPE_AUDIO &amp;amp;&amp;amp;
      in_codecpar-&amp;gt;&lt;span class="pl-smi"&gt;codec_type&lt;/span&gt; != AVMEDIA_TYPE_VIDEO &amp;amp;&amp;amp;
      in_codecpar-&amp;gt;&lt;span class="pl-smi"&gt;codec_type&lt;/span&gt; != AVMEDIA_TYPE_SUBTITLE) {
    streams_list[i] = -&lt;span class="pl-c1"&gt;1&lt;/span&gt;;
    &lt;span class="pl-k"&gt;continue&lt;/span&gt;;
  }
  streams_list[i] = stream_index++;
  out_stream = &lt;span class="pl-c1"&gt;avformat_new_stream&lt;/span&gt;(output_format_context, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (!out_stream) {
    &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed allocating output stream&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    ret = AVERROR_UNKNOWN;
    &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
  }
  ret = &lt;span class="pl-c1"&gt;avcodec_parameters_copy&lt;/span&gt;(out_stream-&amp;gt;&lt;span class="pl-smi"&gt;codecpar&lt;/span&gt;, in_codecpar);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (ret &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed to copy codec parameters&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can create the output file.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (!(output_format_context-&amp;gt;oformat-&amp;gt;flags &amp;amp; AVFMT_NOFILE)) {
  ret = &lt;span class="pl-c1"&gt;avio_open&lt;/span&gt;(&amp;amp;output_format_context-&amp;gt;&lt;span class="pl-smi"&gt;pb&lt;/span&gt;, out_filename, AVIO_FLAG_WRITE);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (ret &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Could not open output file '&lt;span class="pl-c1"&gt;%s&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, out_filename);
    &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
  }
}

ret = avformat_write_header(output_format_context, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);
&lt;span class="pl-k"&gt;if&lt;/span&gt; (ret &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
  &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Error occurred when opening output file&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that, we can copy the streams, packet by packet, from our input to our output streams. We'll loop while it has packets (&lt;code&gt;av_read_frame&lt;/code&gt;), for each packet we need to re-calculate the PTS and DTS to finally write it (&lt;code&gt;av_interleaved_write_frame&lt;/code&gt;) to our output format context.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;while&lt;/span&gt; (&lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
  AVStream *in_stream, *out_stream;
  ret = &lt;span class="pl-c1"&gt;av_read_frame&lt;/span&gt;(input_format_context, &amp;amp;packet);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (ret &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
    &lt;span class="pl-k"&gt;break&lt;/span&gt;;
  in_stream  = input_format_context-&amp;gt;&lt;span class="pl-smi"&gt;streams&lt;/span&gt;[packet.&lt;span class="pl-smi"&gt;stream_index&lt;/span&gt;];
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (packet.&lt;span class="pl-smi"&gt;stream_index&lt;/span&gt; &amp;gt;= number_of_streams || streams_list[packet.&lt;span class="pl-smi"&gt;stream_index&lt;/span&gt;] &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;av_packet_unref&lt;/span&gt;(&amp;amp;packet);
    &lt;span class="pl-k"&gt;continue&lt;/span&gt;;
  }
  packet.&lt;span class="pl-smi"&gt;stream_index&lt;/span&gt; = streams_list[packet.&lt;span class="pl-smi"&gt;stream_index&lt;/span&gt;];
  out_stream = output_format_context-&amp;gt;&lt;span class="pl-smi"&gt;streams&lt;/span&gt;[packet.&lt;span class="pl-smi"&gt;stream_index&lt;/span&gt;];
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; copy packet &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  packet.&lt;span class="pl-smi"&gt;pts&lt;/span&gt; = &lt;span class="pl-c1"&gt;av_rescale_q_rnd&lt;/span&gt;(packet.&lt;span class="pl-smi"&gt;pts&lt;/span&gt;, in_stream-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;, out_stream-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;, AV_ROUND_NEAR_INF|AV_ROUND_PASS_MINMAX);
  packet.&lt;span class="pl-smi"&gt;dts&lt;/span&gt; = &lt;span class="pl-c1"&gt;av_rescale_q_rnd&lt;/span&gt;(packet.&lt;span class="pl-smi"&gt;dts&lt;/span&gt;, in_stream-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;, out_stream-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;, AV_ROUND_NEAR_INF|AV_ROUND_PASS_MINMAX);
  packet.&lt;span class="pl-smi"&gt;duration&lt;/span&gt; = &lt;span class="pl-c1"&gt;av_rescale_q&lt;/span&gt;(packet.&lt;span class="pl-smi"&gt;duration&lt;/span&gt;, in_stream-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;, out_stream-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;);
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; https://ffmpeg.org/doxygen/trunk/structAVPacket.html#ab5793d8195cf4789dfb3913b7a693903&lt;/span&gt;
  packet.&lt;span class="pl-smi"&gt;pos&lt;/span&gt; = -&lt;span class="pl-c1"&gt;1&lt;/span&gt;;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;https://ffmpeg.org/doxygen/trunk/group__lavf__encoding.html#ga37352ed2c63493c38219d935e71db6c1&lt;/span&gt;
  ret = &lt;span class="pl-c1"&gt;av_interleaved_write_frame&lt;/span&gt;(output_format_context, &amp;amp;packet);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (ret &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Error muxing packet&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;break&lt;/span&gt;;
  }
  &lt;span class="pl-c1"&gt;av_packet_unref&lt;/span&gt;(&amp;amp;packet);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To finalize we need to write the stream trailer to an output media file with &lt;a href="https://ffmpeg.org/doxygen/trunk/group__lavf__encoding.html#ga7f14007e7dc8f481f054b21614dfec13" rel="nofollow"&gt;av_write_trailer&lt;/a&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;av_write_trailer&lt;/span&gt;(output_format_context);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we're ready to test it and the first test will be a format (video container) conversion from a MP4 to a MPEG-TS video file. We're basically making the command line &lt;code&gt;ffmpeg input.mp4 -c copy output.ts&lt;/code&gt; with libav.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make run_remuxing_ts&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's working!!! don't you trust me?! you shouldn't, we can check it with &lt;code&gt;ffprobe&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ffprobe -i remuxed_small_bunny_1080p_60fps.ts

Input &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;0, mpegts, from 'remuxed_small_bunny_1080p_60fps.ts':&lt;/span&gt;
  Duration: 00:00:10.03, start: 0.000000, bitrate: 2751 kb/s
  Program 1
    Metadata:
      service_name    &lt;span class="pl-c1"&gt;:&lt;/span&gt; Service01
      service_provider: FFmpeg
    Stream &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;0:0[0x100]: Video: h264 (High) ([27][0][0][0] / 0x001B), yuv420p(progressive), 1920x1080 [SAR 1:1 DAR 16:9], 60 fps, 60 tbr, 90k tbn, 120 tbc&lt;/span&gt;
    Stream &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;0:1[0x101]: Audio: ac3 ([129][0][0][0] / 0x0081), 48000 Hz, 5.1(side), fltp, 320 kb/s&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To sum up what we did here in a graph, we can revisit our initial &lt;a href="https://github.com/leandromoreira/ffmpeg-libav-tutorial#ffmpeg-libav-architecture"&gt;idea about how libav works&lt;/a&gt; but showing that we skipped the codec part.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/remuxing_libav_components.png"&gt;&lt;img src="/img/remuxing_libav_components.png" alt="remuxing libav components" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before we end this chapter I'd like to show an important part of the remuxing process, &lt;strong&gt;you can pass options to the muxer&lt;/strong&gt;. Let's say we want to delivery &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Apps/Fundamentals/Audio_and_video_delivery/Setting_up_adaptive_streaming_media_sources#MPEG-DASH_Encoding" rel="nofollow"&gt;MPEG-DASH&lt;/a&gt; format for that matter we need to use &lt;a href="https://stackoverflow.com/a/35180327" rel="nofollow"&gt;fragmented mp4&lt;/a&gt; (sometimes referred as &lt;code&gt;fmp4&lt;/code&gt;) instead of MPEG-TS or plain MPEG-4.&lt;/p&gt;
&lt;p&gt;With the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Source_Extensions_API/Transcoding_assets_for_MSE#Fragmenting" rel="nofollow"&gt;command line we can do that easily&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffmpeg -i non_fragmented.mp4 -movflags frag_keyframe+empty_moov+default_base_moof fragmented.mp4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Almost equally easy as the command line is the libav version of it, we just need to pass the options when write the output header, just before the packets copy.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;AVDictionary* opts = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
&lt;span class="pl-en"&gt;av_dict_set&lt;/span&gt;(&amp;amp;opts, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;movflags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;frag_keyframe+empty_moov+default_base_moof&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
ret = avformat_write_header(output_format_context, &amp;amp;opts);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now can generate this fragmented mp4 file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make run_remuxing_fragmented_mp4&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But to make sure that I'm not lying to you. You can use the amazing site/tool &lt;a href="http://download.tsi.telecom-paristech.fr/gpac/mp4box.js/filereader.html" rel="nofollow"&gt;gpac/mp4box.js&lt;/a&gt; or the site &lt;a href="http://mp4parser.com/" rel="nofollow"&gt;http://mp4parser.com/&lt;/a&gt; to see the differences, first load up the "common" mp4.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/boxes_normal_mp4.png"&gt;&lt;img src="/img/boxes_normal_mp4.png" alt="mp4 boxes" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you can see it has a single &lt;code&gt;mdat&lt;/code&gt; atom/box, &lt;strong&gt;this is place where the video and audio frames are&lt;/strong&gt;. Now load the fragmented mp4 to see which how it spreads the &lt;code&gt;mdat&lt;/code&gt; boxes.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/boxes_fragmente_mp4.png"&gt;&lt;img src="/img/boxes_fragmente_mp4.png" alt="fragmented mp4 boxes" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-chapter-3---transcoding" class="anchor" aria-hidden="true" href="#chapter-3---transcoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chapter 3 - transcoding&lt;/h2&gt;
&lt;blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-tldr-show-me-the-code-and-execution-1" class="anchor" aria-hidden="true" href="#tldr-show-me-the-code-and-execution-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TLDR; show me the &lt;a href="/3_transcoding.c"&gt;code&lt;/a&gt; and execution.&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make run_transcoding&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We'll skip some details, but don't worry: the &lt;a href="/3_transcoding.c"&gt;source code is available at github&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this chapter, we're going to create a minimalist transcoder, written in C, that can convert videos coded in H264 to H265 using &lt;strong&gt;FFmpeg/libav&lt;/strong&gt; library specifically &lt;a href="https://ffmpeg.org/libavcodec.html" rel="nofollow"&gt;libavcodec&lt;/a&gt;, libavformat, and libavutil.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/transcoding_flow.png"&gt;&lt;img src="/img/transcoding_flow.png" alt="media transcoding flow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Just a quick recap:&lt;/em&gt; The &lt;a href="https://www.ffmpeg.org/doxygen/trunk/structAVFormatContext.html" rel="nofollow"&gt;&lt;strong&gt;AVFormatContext&lt;/strong&gt;&lt;/a&gt; is the abstraction for the format of the media file, aka container (ex: MKV, MP4, Webm, TS). The &lt;a href="https://www.ffmpeg.org/doxygen/trunk/structAVStream.html" rel="nofollow"&gt;&lt;strong&gt;AVStream&lt;/strong&gt;&lt;/a&gt; represents each type of data for a given format (ex: audio, video, subtitle, metadata). The &lt;a href="https://www.ffmpeg.org/doxygen/trunk/structAVPacket.html" rel="nofollow"&gt;&lt;strong&gt;AVPacket&lt;/strong&gt;&lt;/a&gt; is a slice of compressed data obtained from the &lt;code&gt;AVStream&lt;/code&gt; that can be decoded by an &lt;a href="https://www.ffmpeg.org/doxygen/trunk/structAVCodec.html" rel="nofollow"&gt;&lt;strong&gt;AVCodec&lt;/strong&gt;&lt;/a&gt; (ex: av1, h264, vp9, hevc) generating a raw data called &lt;a href="https://www.ffmpeg.org/doxygen/trunk/structAVFrame.html" rel="nofollow"&gt;&lt;strong&gt;AVFrame&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-transmuxing-1" class="anchor" aria-hidden="true" href="#transmuxing-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transmuxing&lt;/h3&gt;
&lt;p&gt;Let's start with the simple transmuxing operation and then we can build upon this code, the first step is to &lt;strong&gt;load the input file&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allocate an AVFormatContext&lt;/span&gt;
avfc = avformat_alloc_context();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Open an input stream and read the header.&lt;/span&gt;
&lt;span class="pl-en"&gt;avformat_open_input&lt;/span&gt;(avfc, in_filename, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read packets of a media file to get stream information.&lt;/span&gt;
&lt;span class="pl-en"&gt;avformat_find_stream_info&lt;/span&gt;(avfc, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we're going to set up the decoder, the &lt;code&gt;AVFormatContext&lt;/code&gt; will give us access to all the &lt;code&gt;AVStream&lt;/code&gt; components and for each one of them, we can get their &lt;code&gt;AVCodec&lt;/code&gt; and create the particular &lt;code&gt;AVCodecContext&lt;/code&gt; and finally we can open the given codec so we can proceed to the decoding process.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;a href="https://www.ffmpeg.org/doxygen/trunk/structAVCodecContext.html" rel="nofollow"&gt;&lt;strong&gt;AVCodecContext&lt;/strong&gt;&lt;/a&gt; holds data about media configuration such as bit rate, frame rate, sample rate, channels, height, and many others.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; avfc-&amp;gt;nb_streams; i++)
{
  AVStream *avs = avfc-&amp;gt;&lt;span class="pl-smi"&gt;streams&lt;/span&gt;[i];
  AVCodec *avc = &lt;span class="pl-c1"&gt;avcodec_find_decoder&lt;/span&gt;(avs-&amp;gt;&lt;span class="pl-smi"&gt;codecpar&lt;/span&gt;-&amp;gt;&lt;span class="pl-smi"&gt;codec_id&lt;/span&gt;);
  AVCodecContext *avcc = &lt;span class="pl-c1"&gt;avcodec_alloc_context3&lt;/span&gt;(*avc);
  &lt;span class="pl-c1"&gt;avcodec_parameters_to_context&lt;/span&gt;(*avcc, avs-&amp;gt;&lt;span class="pl-smi"&gt;codecpar&lt;/span&gt;);
  &lt;span class="pl-c1"&gt;avcodec_open2&lt;/span&gt;(*avcc, *avc, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We need to prepare the output media file for transmuxing as well, we first &lt;strong&gt;allocate memory&lt;/strong&gt; for the output &lt;code&gt;AVFormatContext&lt;/code&gt;. We create &lt;strong&gt;each stream&lt;/strong&gt; in the output format. In order to pack the stream properly, we &lt;strong&gt;copy the codec parameters&lt;/strong&gt; from the decoder.&lt;/p&gt;
&lt;p&gt;We &lt;strong&gt;set the flag&lt;/strong&gt; &lt;code&gt;AV_CODEC_FLAG_GLOBAL_HEADER&lt;/code&gt; which tells the encoder that it can use the global headers and finally we open the output &lt;strong&gt;file for write&lt;/strong&gt; and persist the headers.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;avformat_alloc_output_context2&lt;/span&gt;(&amp;amp;encoder_avfc, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;, out_filename);

AVStream *avs = avformat_new_stream(encoder_avfc, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);
&lt;span class="pl-en"&gt;avcodec_parameters_copy&lt;/span&gt;(avs-&amp;gt;codecpar, decoder_avs-&amp;gt;codecpar);

&lt;span class="pl-k"&gt;if&lt;/span&gt; (encoder_avfc-&amp;gt;oformat-&amp;gt;flags &amp;amp; AVFMT_GLOBALHEADER)
  encoder_avfc-&amp;gt;flags |= AV_CODEC_FLAG_GLOBAL_HEADER;

&lt;span class="pl-en"&gt;avio_open&lt;/span&gt;(&amp;amp;encoder_avfc-&amp;gt;pb, encoder-&amp;gt;filename, AVIO_FLAG_WRITE);
&lt;span class="pl-en"&gt;avformat_write_header&lt;/span&gt;(encoder-&amp;gt;avfc, &amp;amp;muxer_opts);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We're getting the &lt;code&gt;AVPacket&lt;/code&gt;'s from the decoder, adjusting the timestamps, and write the packet properly to the output file. Even though the function &lt;code&gt;av_interleaved_write_frame&lt;/code&gt; says "write frame" we are storing the packet. We finish the transmuxing process by writing the stream trailer to the file.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;AVFrame *input_frame = av_frame_alloc();
AVPacket *input_packet = av_packet_alloc();

&lt;span class="pl-k"&gt;while&lt;/span&gt; (av_read_frame(decoder_avfc, input_packet) &amp;gt;= &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
{
  &lt;span class="pl-c1"&gt;av_packet_rescale_ts&lt;/span&gt;(input_packet, decoder_video_avs-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;, encoder_video_avs-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;);
  &lt;span class="pl-c1"&gt;av_interleaved_write_frame&lt;/span&gt;(*avfc, input_packet) &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;));
}

&lt;span class="pl-en"&gt;av_write_trailer&lt;/span&gt;(encoder_avfc);&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-transcoding-1" class="anchor" aria-hidden="true" href="#transcoding-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transcoding&lt;/h3&gt;
&lt;p&gt;The previous section showed a simple transmuxer program, now we're going to add the capability to encode files, specifically we're going to enable it to transcode videos from &lt;code&gt;h264&lt;/code&gt; to &lt;code&gt;h265&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After we prepared the decoder but before we arrange the output media file we're going to set up the encoder.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create the video &lt;code&gt;AVStream&lt;/code&gt; in the encoder, &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavf__core.html#gadcb0fd3e507d9b58fe78f61f8ad39827" rel="nofollow"&gt;&lt;code&gt;avformat_new_stream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;AVCodec&lt;/code&gt; called &lt;code&gt;libx265&lt;/code&gt;, &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavc__encoding.html#gaa614ffc38511c104bdff4a3afa086d37" rel="nofollow"&gt;&lt;code&gt;avcodec_find_encoder_by_name&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create the &lt;code&gt;AVCodecContext&lt;/code&gt; based in the created codec, &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavc__core.html#gae80afec6f26df6607eaacf39b561c315" rel="nofollow"&gt;&lt;code&gt;avcodec_alloc_context3&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set up basic attributes for the transcoding session, and&lt;/li&gt;
&lt;li&gt;Open the codec and copy parameters from the context to the stream. &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavc__core.html#ga11f785a188d7d9df71621001465b0f1d" rel="nofollow"&gt;&lt;code&gt;avcodec_open2&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavc__core.html#ga0c7058f764778615e7978a1821ab3cfe" rel="nofollow"&gt;&lt;code&gt;avcodec_parameters_from_context&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;AVRational input_framerate = av_guess_frame_rate(decoder_avfc, decoder_video_avs, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);
AVStream *video_avs = avformat_new_stream(encoder_avfc, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);

&lt;span class="pl-k"&gt;char&lt;/span&gt; *codec_name = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;libx265&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;char&lt;/span&gt; *codec_priv_key = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x265-params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; we're going to use internal options for the x265&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; it disables the scene change detection and fix then&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GOP on 60 frames.&lt;/span&gt;
&lt;span class="pl-k"&gt;char&lt;/span&gt; *codec_priv_value = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;keyint=60:min-keyint=60:scenecut=0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

AVCodec *video_avc = avcodec_find_encoder_by_name(codec_name);
AVCodecContext *video_avcc = avcodec_alloc_context3(video_avc);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; encoder codec params&lt;/span&gt;
&lt;span class="pl-en"&gt;av_opt_set&lt;/span&gt;(sc-&amp;gt;video_avcc-&amp;gt;priv_data, codec_priv_key, codec_priv_value, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
video_avcc-&amp;gt;height = decoder_ctx-&amp;gt;height;
video_avcc-&amp;gt;width = decoder_ctx-&amp;gt;width;
video_avcc-&amp;gt;pix_fmt = video_avc-&amp;gt;pix_fmts[&lt;span class="pl-c1"&gt;0&lt;/span&gt;];
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; control rate&lt;/span&gt;
video_avcc-&amp;gt;bit_rate = &lt;span class="pl-c1"&gt;2&lt;/span&gt; * &lt;span class="pl-c1"&gt;1000&lt;/span&gt; * &lt;span class="pl-c1"&gt;1000&lt;/span&gt;;
video_avcc-&amp;gt;rc_buffer_size = &lt;span class="pl-c1"&gt;4&lt;/span&gt; * &lt;span class="pl-c1"&gt;1000&lt;/span&gt; * &lt;span class="pl-c1"&gt;1000&lt;/span&gt;;
video_avcc-&amp;gt;rc_max_rate = &lt;span class="pl-c1"&gt;2&lt;/span&gt; * &lt;span class="pl-c1"&gt;1000&lt;/span&gt; * &lt;span class="pl-c1"&gt;1000&lt;/span&gt;;
video_avcc-&amp;gt;rc_min_rate = &lt;span class="pl-c1"&gt;2.5&lt;/span&gt; * &lt;span class="pl-c1"&gt;1000&lt;/span&gt; * &lt;span class="pl-c1"&gt;1000&lt;/span&gt;;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; time base&lt;/span&gt;
video_avcc-&amp;gt;time_base = av_inv_q(input_framerate);
video_avs-&amp;gt;time_base = sc-&amp;gt;video_avcc-&amp;gt;time_base;

&lt;span class="pl-en"&gt;avcodec_open2&lt;/span&gt;(sc-&amp;gt;video_avcc, sc-&amp;gt;video_avc, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);
&lt;span class="pl-en"&gt;avcodec_parameters_from_context&lt;/span&gt;(sc-&amp;gt;video_avs-&amp;gt;codecpar, sc-&amp;gt;video_avcc);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We need to expand our decoding loop for the video stream transcoding:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send the empty &lt;code&gt;AVPacket&lt;/code&gt; to the decoder, &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavc__decoding.html#ga58bc4bf1e0ac59e27362597e467efff3" rel="nofollow"&gt;&lt;code&gt;avcodec_send_packet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Receive the uncompressed &lt;code&gt;AVFrame&lt;/code&gt;, &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavc__decoding.html#ga11e6542c4e66d3028668788a1a74217c" rel="nofollow"&gt;&lt;code&gt;avcodec_receive_frame&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Start to transcode this raw frame,&lt;/li&gt;
&lt;li&gt;Send the raw frame, &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavc__decoding.html#ga9395cb802a5febf1f00df31497779169" rel="nofollow"&gt;&lt;code&gt;avcodec_send_frame&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Receive the compressed, based on our codec, &lt;code&gt;AVPacket&lt;/code&gt;, &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavc__decoding.html#ga5b8eff59cf259747cf0b31563e38ded6" rel="nofollow"&gt;&lt;code&gt;avcodec_receive_packet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set up the timestamp, and &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavc__packet.html#gae5c86e4d93f6e7aa62ef2c60763ea67e" rel="nofollow"&gt;&lt;code&gt;av_packet_rescale_ts&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Write it to the output file. &lt;a href="https://www.ffmpeg.org/doxygen/trunk/group__lavf__encoding.html#ga37352ed2c63493c38219d935e71db6c1" rel="nofollow"&gt;&lt;code&gt;av_interleaved_write_frame&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;AVFrame *input_frame = av_frame_alloc();
AVPacket *input_packet = av_packet_alloc();

&lt;span class="pl-k"&gt;while&lt;/span&gt; (av_read_frame(decoder_avfc, input_packet) &amp;gt;= &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
{
  &lt;span class="pl-k"&gt;int&lt;/span&gt; response = &lt;span class="pl-c1"&gt;avcodec_send_packet&lt;/span&gt;(decoder_video_avcc, input_packet);
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (response &amp;gt;= &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    response = &lt;span class="pl-c1"&gt;avcodec_receive_frame&lt;/span&gt;(decoder_video_avcc, input_frame);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (response == &lt;span class="pl-c1"&gt;AVERROR&lt;/span&gt;(EAGAIN) || response == AVERROR_EOF) {
      &lt;span class="pl-k"&gt;break&lt;/span&gt;;
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (response &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;return&lt;/span&gt; response;
    }
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (response &amp;gt;= &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
      &lt;span class="pl-c1"&gt;encode&lt;/span&gt;(encoder_avfc, decoder_video_avs, encoder_video_avs, decoder_video_avcc, input_packet-&amp;gt;&lt;span class="pl-smi"&gt;stream_index&lt;/span&gt;);
    }
    &lt;span class="pl-c1"&gt;av_frame_unref&lt;/span&gt;(input_frame);
  }
  &lt;span class="pl-c1"&gt;av_packet_unref&lt;/span&gt;(input_packet);
}
&lt;span class="pl-en"&gt;av_write_trailer&lt;/span&gt;(encoder_avfc);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; used function&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(AVFormatContext *avfc, AVStream *dec_video_avs, AVStream *enc_video_avs, AVCodecContext video_avcc &lt;span class="pl-k"&gt;int&lt;/span&gt; index) {
  AVPacket *output_packet = &lt;span class="pl-c1"&gt;av_packet_alloc&lt;/span&gt;();
  &lt;span class="pl-k"&gt;int&lt;/span&gt; response = &lt;span class="pl-c1"&gt;avcodec_send_frame&lt;/span&gt;(video_avcc, input_frame);

  &lt;span class="pl-k"&gt;while&lt;/span&gt; (response &amp;gt;= &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    response = &lt;span class="pl-c1"&gt;avcodec_receive_packet&lt;/span&gt;(video_avcc, output_packet);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (response == &lt;span class="pl-c1"&gt;AVERROR&lt;/span&gt;(EAGAIN) || response == AVERROR_EOF) {
      &lt;span class="pl-k"&gt;break&lt;/span&gt;;
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (response &amp;lt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;return&lt;/span&gt; -&lt;span class="pl-c1"&gt;1&lt;/span&gt;;
    }

    output_packet-&amp;gt;&lt;span class="pl-smi"&gt;stream_index&lt;/span&gt; = &lt;span class="pl-c1"&gt;index&lt;/span&gt;;
    output_packet-&amp;gt;&lt;span class="pl-smi"&gt;duration&lt;/span&gt; = enc_video_avs-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;.&lt;span class="pl-smi"&gt;den&lt;/span&gt; / enc_video_avs-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;.&lt;span class="pl-smi"&gt;num&lt;/span&gt; / dec_video_avs-&amp;gt;&lt;span class="pl-smi"&gt;avg_frame_rate&lt;/span&gt;.&lt;span class="pl-smi"&gt;num&lt;/span&gt; * dec_video_avs-&amp;gt;&lt;span class="pl-smi"&gt;avg_frame_rate&lt;/span&gt;.&lt;span class="pl-smi"&gt;den&lt;/span&gt;;

    &lt;span class="pl-c1"&gt;av_packet_rescale_ts&lt;/span&gt;(output_packet, dec_video_avs-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;, enc_video_avs-&amp;gt;&lt;span class="pl-smi"&gt;time_base&lt;/span&gt;);
    response = &lt;span class="pl-c1"&gt;av_interleaved_write_frame&lt;/span&gt;(avfc, output_packet);
  }
  &lt;span class="pl-c1"&gt;av_packet_unref&lt;/span&gt;(output_packet);
  &lt;span class="pl-c1"&gt;av_packet_free&lt;/span&gt;(&amp;amp;output_packet);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We converted the media stream from &lt;code&gt;h264&lt;/code&gt; to &lt;code&gt;h265&lt;/code&gt;, as expected the &lt;code&gt;h265&lt;/code&gt; version of the media file is smaller than the &lt;code&gt;h264&lt;/code&gt; however the &lt;a href="/3_transcoding.c"&gt;created program&lt;/a&gt; is capable of:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;   * H264 -&amp;gt; H265&lt;/span&gt;
&lt;span class="pl-c"&gt;   * Audio -&amp;gt; remuxed (untouched)&lt;/span&gt;
&lt;span class="pl-c"&gt;   * MP4 - MP4&lt;/span&gt;
&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  StreamingParams sp = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;};
  sp.copy_audio = &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
  sp.copy_video = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  sp.video_codec = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;libx265&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.codec_priv_key = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x265-params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.codec_priv_value = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;keyint=60:min-keyint=60:scenecut=0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;   * H264 -&amp;gt; H264 (fixed gop)&lt;/span&gt;
&lt;span class="pl-c"&gt;   * Audio -&amp;gt; remuxed (untouched)&lt;/span&gt;
&lt;span class="pl-c"&gt;   * MP4 - MP4&lt;/span&gt;
&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  StreamingParams sp = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;};
  sp.copy_audio = &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
  sp.copy_video = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  sp.video_codec = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;libx264&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.codec_priv_key = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x264-params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.codec_priv_value = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;keyint=60:min-keyint=60:scenecut=0:force-cfr=1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;   * H264 -&amp;gt; H264 (fixed gop)&lt;/span&gt;
&lt;span class="pl-c"&gt;   * Audio -&amp;gt; remuxed (untouched)&lt;/span&gt;
&lt;span class="pl-c"&gt;   * MP4 - fragmented MP4&lt;/span&gt;
&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  StreamingParams sp = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;};
  sp.copy_audio = &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
  sp.copy_video = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  sp.video_codec = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;libx264&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.codec_priv_key = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x264-params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.codec_priv_value = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;keyint=60:min-keyint=60:scenecut=0:force-cfr=1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.muxer_opt_key = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;movflags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.muxer_opt_value = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;frag_keyframe+empty_moov+default_base_moof&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;   * H264 -&amp;gt; H264 (fixed gop)&lt;/span&gt;
&lt;span class="pl-c"&gt;   * Audio -&amp;gt; AAC&lt;/span&gt;
&lt;span class="pl-c"&gt;   * MP4 - MPEG-TS&lt;/span&gt;
&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  StreamingParams sp = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;};
  sp.copy_audio = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  sp.copy_video = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  sp.video_codec = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;libx264&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.codec_priv_key = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x264-params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.codec_priv_value = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;keyint=60:min-keyint=60:scenecut=0:force-cfr=1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.audio_codec = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;aac&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  sp.output_extension = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.ts&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; WIP :P  -&amp;gt; it's not playing on VLC, the final bit rate is huge&lt;/span&gt;
&lt;span class="pl-c"&gt;   * H264 -&amp;gt; VP9&lt;/span&gt;
&lt;span class="pl-c"&gt;   * Audio -&amp;gt; Vorbis&lt;/span&gt;
&lt;span class="pl-c"&gt;   * MP4 - WebM&lt;/span&gt;
&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;StreamingParams sp = {0};&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;sp.copy_audio = 0;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;sp.copy_video = 0;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;sp.video_codec = "libvpx-vp9";&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;sp.audio_codec = "libvorbis";&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;sp.output_extension = ".webm";&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Now, to be honest, this was &lt;a href="https://github.com/leandromoreira/ffmpeg-libav-tutorial/pull/54"&gt;harder than I thought&lt;/a&gt; it'd be and I had to dig into the &lt;a href="https://github.com/leandromoreira/ffmpeg-libav-tutorial/pull/54#issuecomment-570746749"&gt;FFmpeg command line source code&lt;/a&gt; and test it a lot and I think I'm missing something because I had to enforce &lt;code&gt;force-cfr&lt;/code&gt; for the &lt;code&gt;h264&lt;/code&gt; to work and I'm still seeing some warning messages like &lt;code&gt;warning messages (forced frame type (5) at 80 was changed to frame type (3))&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>leandromoreira</author><guid isPermaLink="false">https://github.com/leandromoreira/ffmpeg-libav-tutorial</guid><pubDate>Sat, 01 Feb 2020 00:02:00 GMT</pubDate></item><item><title>libretro/RetroArch #3 in C, This month</title><link>https://github.com/libretro/RetroArch</link><description>&lt;p&gt;&lt;i&gt;Cross-platform, sophisticated frontend for the libretro API. Licensed GPLv3.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/libretro/RetroArch" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bdae2ad579a27e2928a006f685f6cb73861c7da/68747470733a2f2f7472617669732d63692e6f72672f6c6962726574726f2f526574726f417263682e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/libretro/RetroArch.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/retroarch" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3060b2ca558a553cfc7d667534f9107ac3a384cf/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f383933362f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/8936/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-retroarch" class="anchor" aria-hidden="true" href="#retroarch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RetroArch&lt;/h1&gt;
&lt;p&gt;RetroArch is the reference frontend for the libretro API.
Popular examples of implementations for this API includes video game system emulators and game engines as well as
more generalized 3D programs.
These programs are instantiated as dynamic libraries. We refer to these as "libretro cores".&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/aa76b4e604ec30630baad56a52d07e7b1d27af40/687474703a2f2f692e696d6775722e636f6d2f424d52317878722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/aa76b4e604ec30630baad56a52d07e7b1d27af40/687474703a2f2f692e696d6775722e636f6d2f424d52317878722e706e67" alt="XMB menu driver" title="XMB menu driver" data-canonical-src="http://i.imgur.com/BMR1xxr.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d2a3119fb0d6698aa1203428c2661e27311f4ecc/687474703a2f2f692e696d6775722e636f6d2f58334362424b612e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d2a3119fb0d6698aa1203428c2661e27311f4ecc/687474703a2f2f692e696d6775722e636f6d2f58334362424b612e706e67" alt="rgui menu driver" title="rgui menu driver" data-canonical-src="http://i.imgur.com/X3CbBKa.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/187549afc1a33ac05d3007a49893d751e0b4a22f/687474703a2f2f692e696d6775722e636f6d2f6f6f71763872772e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/187549afc1a33ac05d3007a49893d751e0b4a22f/687474703a2f2f692e696d6775722e636f6d2f6f6f71763872772e706e67" alt="glui menu driver" title="glui menu driver" data-canonical-src="http://i.imgur.com/ooqv8rw.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-libretro" class="anchor" aria-hidden="true" href="#libretro"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libretro&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://libretro.com" rel="nofollow"&gt;libretro&lt;/a&gt; is an API that exposes generic audio/video/input callbacks.
A frontend for libretro (such as RetroArch) handles video output, audio output, input and application lifecycle.
A libretro core written in portable C or C++ can run seamlessly on many platforms with very little to no porting effort.&lt;/p&gt;
&lt;p&gt;While RetroArch is the reference frontend for libretro, several other projects have used the libretro
interface to include support for emulators and/or game engines. libretro is completely open and free for anyone to use.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/libretro/RetroArch/blob/master/libretro-common/include/libretro.h"&gt;libretro API header&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-binaries" class="anchor" aria-hidden="true" href="#binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binaries&lt;/h2&gt;
&lt;p&gt;Latest binaries are currently hosted on the &lt;a href="http://buildbot.libretro.com/" rel="nofollow"&gt;buildbot&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;To reach developers, either make an issue here on GitHub, make a thread on the &lt;a href="http://www.libretro.com/forums/" rel="nofollow"&gt;forum&lt;/a&gt;, chat on &lt;a href="https://discord.gg/C4amCeV" rel="nofollow"&gt;discord&lt;/a&gt;, or visit our IRC channel: #retroarch @ irc.freenode.org.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="https://docs.libretro.com/" rel="nofollow"&gt;Documentation Center&lt;/a&gt;. On Unix, man-pages are provided.
More developer-centric stuff is found &lt;a href="https://github.com/libretro/libretro.github.com/wiki/Documentation-devs"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cg/HLSL shaders: &lt;a href="https://github.com/libretro/common-shaders"&gt;common-shaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;slang shaders: &lt;a href="https://github.com/libretro/slang-shaders"&gt;slang-shaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GLSL shaders: &lt;a href="https://github.com/libretro/glsl-shaders"&gt;glsl-shaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Helper scripts to build libretro implementations: &lt;a href="https://github.com/libretro/libretro-super"&gt;libretro-super&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub mirrors of projects, useful for generating diff files: &lt;a href="https://github.com/libretro-mirrors/"&gt;libretro-mirrors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-philosophy" class="anchor" aria-hidden="true" href="#philosophy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Philosophy&lt;/h2&gt;
&lt;p&gt;RetroArch attempts to be small and lean
while still having all the useful core features expected from an emulator.
It is designed to be very portable and features a gamepad-centric and touchscreen UI.
It also has a full-featured command-line interface.&lt;/p&gt;
&lt;p&gt;In some areas, RetroArch goes beyond and emphasizes on not-so-common technical features such as multi-pass shader support,
real-time rewind (Braid-style), video recording (using FFmpeg), run-ahead input latency removal, etc.&lt;/p&gt;
&lt;p&gt;RetroArch also emphasizes being easy to integrate into various launcher frontends.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-platforms" class="anchor" aria-hidden="true" href="#platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platforms&lt;/h2&gt;
&lt;p&gt;RetroArch has been ported to the following platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DOS&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Emscripten (WebAssembly and JavaScript)&lt;/li&gt;
&lt;li&gt;FreeBSD&lt;/li&gt;
&lt;li&gt;NetBSD&lt;/li&gt;
&lt;li&gt;OpenBSD&lt;/li&gt;
&lt;li&gt;Haiku&lt;/li&gt;
&lt;li&gt;Solaris&lt;/li&gt;
&lt;li&gt;macOS (PPC, x86-32 and x86-64)&lt;/li&gt;
&lt;li&gt;PlayStation 3&lt;/li&gt;
&lt;li&gt;PlayStation Portable&lt;/li&gt;
&lt;li&gt;PlayStation Vita&lt;/li&gt;
&lt;li&gt;Original Microsoft Xbox&lt;/li&gt;
&lt;li&gt;Microsoft Xbox 360 (Libxenon/XeXDK)&lt;/li&gt;
&lt;li&gt;Nintendo GameCube&lt;/li&gt;
&lt;li&gt;Nintendo Wii&lt;/li&gt;
&lt;li&gt;Nintendo Wii U&lt;/li&gt;
&lt;li&gt;Nintendo 3DS&lt;/li&gt;
&lt;li&gt;Nintendo Switch&lt;/li&gt;
&lt;li&gt;Nintendo NES/SNES Classic Edition&lt;/li&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;li&gt;iOS&lt;/li&gt;
&lt;li&gt;Blackberry&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies-pc" class="anchor" aria-hidden="true" href="#dependencies-pc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies (PC)&lt;/h2&gt;
&lt;p&gt;There are no true hard dependencies per se.&lt;/p&gt;
&lt;p&gt;On Windows, RetroArch can run with only Win32 as dependency.&lt;/p&gt;
&lt;p&gt;On Linux, there are no true dependencies. For optimal usage, the
following dependencies come as recommended:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GL headers / Vulkan headers&lt;/li&gt;
&lt;li&gt;X11 headers and libs, or EGL/KMS/GBM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OSX port of RetroArch requires latest versions of XCode to build.&lt;/p&gt;
&lt;p&gt;RetroArch can utilize these libraries if enabled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nvidia-cg-toolkit&lt;/li&gt;
&lt;li&gt;libfreetype2 (TTF font rendering on screen)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RetroArch needs at least one of these audio driver libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ALSA&lt;/li&gt;
&lt;li&gt;OSS&lt;/li&gt;
&lt;li&gt;RoarAudio&lt;/li&gt;
&lt;li&gt;RSound&lt;/li&gt;
&lt;li&gt;OpenAL&lt;/li&gt;
&lt;li&gt;JACK&lt;/li&gt;
&lt;li&gt;SDL&lt;/li&gt;
&lt;li&gt;PulseAudio&lt;/li&gt;
&lt;li&gt;XAudio2 (Win32, Xbox 360)&lt;/li&gt;
&lt;li&gt;DirectSound (Win32, Xbox 1)&lt;/li&gt;
&lt;li&gt;CoreAudio (OSX, iOS)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To run properly, RetroArch requires a libretro implementation present; however, as it's typically loaded
dynamically, it's not required at build time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies-console-ports-mobile" class="anchor" aria-hidden="true" href="#dependencies-console-ports-mobile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies (Console ports, mobile)&lt;/h2&gt;
&lt;p&gt;Console ports have their own dependencies, but generally do not require
anything other than what the respective SDKs provide.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuring" class="anchor" aria-hidden="true" href="#configuring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring&lt;/h2&gt;
&lt;p&gt;The default configuration is defined in &lt;code&gt;config.def.h&lt;/code&gt;.
It is not recommended to change this unless you know what you're doing.
These can later be tweaked by using a config file.
A sample configuration file is installed to &lt;code&gt;/etc/retroarch.cfg&lt;/code&gt;. This is the system-wide config file.&lt;/p&gt;
&lt;p&gt;RetroArch will on startup create a config file in &lt;code&gt;$XDG\_CONFIG\_HOME/retroarch/retroarch.cfg&lt;/code&gt; if it does not exist.
Users only need to configure a certain option if the desired value deviates from the value defined in config.def.h.&lt;/p&gt;
&lt;p&gt;To configure joypads, use the built-in menu or the &lt;code&gt;retroarch-joyconfig&lt;/code&gt; command-line tool.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-and-installing" class="anchor" aria-hidden="true" href="#compiling-and-installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling and installing&lt;/h2&gt;
&lt;p&gt;Instructions for compiling and installing RetroArch can be found in the &lt;a href="https://docs.libretro.com/" rel="nofollow"&gt;Libretro/RetroArch Documentation Center&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-crt-15khz-resolution-switching" class="anchor" aria-hidden="true" href="#crt-15khz-resolution-switching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CRT 15Khz Resolution Switching&lt;/h2&gt;
&lt;p&gt;CRT SwitchRes will turn on, on the fly. However, you will need to restart RetroArch to disable it. With CRT SwitchRes enable RetroArch will start in 2560 x 480 @ 60.&lt;/p&gt;
&lt;p&gt;If you are running Windows, before enabling the CRT SwitchRes options please make sure you have installed CRTEmudriver and installed some modelines. The minimum modelines for all games to switch correctly are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2560 x 192 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 200 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 240 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 224 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 237 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 256 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 254 @ 55.000000&lt;/li&gt;
&lt;li&gt;2560 x 448 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 480 @ 60.000000&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Install these modelines replacing 2560 with your desired super resolution. The above resolutions are NTSC only so if you would be playing any PAL content please add PAL modelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2560 x 192 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 200 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 240 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 224 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 288 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 237 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 254 @ 55.000000&lt;/li&gt;
&lt;li&gt;2560 x 448 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 480 @ 50.000000&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some games will require higher PAL resolutions which should also be installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2560 x 512 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 576 @ 50.000000&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ideally install all these modelines and everything will work great.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-super-resolutions" class="anchor" aria-hidden="true" href="#super-resolutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Super Resolutions&lt;/h2&gt;
&lt;p&gt;The default super resolution is 2560. It is displayed just under the CRT switch option, which can be found in video settings. This can be changed within the retroarch.cfg. The only compatible resolutions are 1920, 2560 and 3840. Any other resolutions will be ignored and native switching will be activated.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-native-resolutions" class="anchor" aria-hidden="true" href="#native-resolutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Native Resolutions&lt;/h2&gt;
&lt;p&gt;If native resolutions are activated you will need a whole new set of modelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;256 x 240 @ 50.006977 SNESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 448 @ 50.006977 SNESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 224 @ 50.006977 SNESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 240 @ 50.006977 SNESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 448 @ 50.006977 SNESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 240 @ 60.098812 SNESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 448 @ 60.098812 SNESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 240 @ 60.098812 SNESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 224 @ 60.098812 SNESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 448 @ 60.098812 SNESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 192 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 224 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 224 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 240 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 448 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 480 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 192 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 224 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 224 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 240 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 288 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 448 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 480 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 576 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 288 @ 49.701458 MSYSpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 240 @ 60.098812 NESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 240 @ 50.006977 NESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 237 @ 60.130001 N64ntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 240 @ 60.130001 N64ntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 480 @ 60.130001 N64ntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 288 @ 50.000000 N64pal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 480 @ 50.000000 N64pal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 576 @ 50.000000 N64pal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 252 @ 49.759998 PSXpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 252 @ 49.759998 PSXpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;384 x 252 @ 49.759998 PSXpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 252 @ 49.759998 PSXpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 540 @ 49.759998 PSXpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;384 x 240 @ 59.941002 PSXntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 480 @ 59.941002 PSXntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;352 x 240 @ 59.820000 Saturn/SGFX_NTSCp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;704 x 240 @ 59.820000 SaturnNTSCp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;352 x 480 @ 59.820000 SaturnNTSCi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;704 x 480 @ 59.820000 SaturnNTSCi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;352 x 288 @ 49.701458 SaturnPALp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;704 x 288 @ 49.701458 SaturnPALp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;352 x 576 @ 49.701458 SaturnPALi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;704 x 576 @ 49.701458 SaturnPALi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;240 x 160 @ 59.730000 GBA&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 200 @ 60.000000 Doom&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;// Arcade&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;400 x 254 @ 54.706841 MK&lt;/li&gt;
&lt;li&gt;384 x 224 @ 59.637405 CPS1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These modelines are more accurate giving exact hz. However, some games may have unwanted results. This is due to mid-scanline resolution changes on the original hardware. For the best results super resolutions are the way to go.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-crt-resolution-switching--mame" class="anchor" aria-hidden="true" href="#crt-resolution-switching--mame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CRT resolution switching &amp;amp; MAME&lt;/h2&gt;
&lt;p&gt;Some arcade resolutions can be very different from consumer CRTs. There is resolution detection to ensure MAME games will be displayed in the closest available resolution but drawn at their native resolution within this resolution. Meaning that the MAME game will look just like the original hardware.&lt;/p&gt;
&lt;p&gt;MAME ROMs that run in a vertical aspect like DoDonPachi need to be rotated within MAME before resolution switching and aspect correction will work. Do this before enabling CRT SwitchRes so that RetroArch will run in your desktop resolution. Once you have rotated any games that may need it turn CRT SwitchRes on.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>libretro</author><guid isPermaLink="false">https://github.com/libretro/RetroArch</guid><pubDate>Sat, 01 Feb 2020 00:03:00 GMT</pubDate></item><item><title>zfsonlinux/zfs #4 in C, This month</title><link>https://github.com/zfsonlinux/zfs</link><description>&lt;p&gt;&lt;i&gt;ZFS on Linux - the official OpenZFS implementation for Linux.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a070ee9b76d12e9769d66d76a49adb4fea1cb4d2/68747470733a2f2f7a66736f6e6c696e75782e6f72672f696d616765732f7a66732d6c696e75782e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a070ee9b76d12e9769d66d76a49adb4fea1cb4d2/68747470733a2f2f7a66736f6e6c696e75782e6f72672f696d616765732f7a66732d6c696e75782e706e67" alt="img" data-canonical-src="https://zfsonlinux.org/images/zfs-linux.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ZFS on Linux is an advanced file system and volume manager which was originally
developed for Solaris and is now maintained by the OpenZFS community.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/zfsonlinux/zfs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ef39aa9bc2b3a7660f44baa0cdca6059b335c625/68747470733a2f2f636f6465636f762e696f2f67682f7a66736f6e6c696e75782f7a66732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/zfsonlinux/zfs/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/zfsonlinux-zfs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f0420942cbdee3149041d9678ab2ef2949af4ec/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f313937332f62616467652e737667" alt="coverity" data-canonical-src="https://scan.coverity.com/projects/1973/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-official-resources" class="anchor" aria-hidden="true" href="#official-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zfsonlinux.org" rel="nofollow"&gt;Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zfsonlinux/zfs/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zfsonlinux/zfs/wiki/Mailing-Lists"&gt;Mailing lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://open-zfs.org/" rel="nofollow"&gt;OpenZFS site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;Full documentation for installing ZoL on your favorite Linux distribution can
be found at &lt;a href="https://zfsonlinux.org/" rel="nofollow"&gt;our site&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contribute--develop" class="anchor" aria-hidden="true" href="#contribute--develop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute &amp;amp; Develop&lt;/h1&gt;
&lt;p&gt;We have a separate document with &lt;a href="./.github/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-release" class="anchor" aria-hidden="true" href="#release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release&lt;/h1&gt;
&lt;p&gt;ZFS on Linux is released under a CDDL license.&lt;br&gt;
For more details see the NOTICE, LICENSE and COPYRIGHT files; &lt;code&gt;UCRL-CODE-235197&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-supported-kernels" class="anchor" aria-hidden="true" href="#supported-kernels"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Kernels&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;META&lt;/code&gt; file contains the officially recognized supported kernel versions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zfsonlinux</author><guid isPermaLink="false">https://github.com/zfsonlinux/zfs</guid><pubDate>Sat, 01 Feb 2020 00:04:00 GMT</pubDate></item><item><title>Meituan-Dianping/Logan #5 in C, This month</title><link>https://github.com/Meituan-Dianping/Logan</link><description>&lt;p&gt;&lt;i&gt;Logan is a lightweight case logging system based on mobile platform.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-logan" class="anchor" aria-hidden="true" href="#logan"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logan&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Meituan-Dianping/Logan/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4d7e802861ee34f2db3a98f8558278fb2a7a106/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="license" data-canonical-src="https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Meituan-Dianping/Logan/releases"&gt;&lt;img src="https://camo.githubusercontent.com/108d89f0627246c3900984a9b43b6a87d9557da6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f4d65697475616e2d4469616e70696e672f4c6f67616e2e7376673f6d61784167653d323539323030303f7374796c653d666c61742d737175617265" alt="Release Version" data-canonical-src="https://img.shields.io/github/release/Meituan-Dianping/Logan.svg?maxAge=2592000?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Meituan-Dianping/Logan/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/d4e0f63e9613ee474a7dfdc23c240b9795712c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667" alt="PRs Welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Meituan-Dianping/Logan/wiki"&gt;&lt;img src="https://camo.githubusercontent.com/3430e0ef1a287e0ff3f22e0e1ee6c3c76cd4c2af/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506c6174666f726d2d253230694f53253230253743253230416e64726f69642532302537432532305765622532302d627269676874677265656e2e737667" alt="Platform Support" data-canonical-src="https://img.shields.io/badge/Platform-%20iOS%20%7C%20Android%20%7C%20Web%20-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Logan is a front-end logging system, which can run in multi environment like Android, iOS, Web etc.&lt;/p&gt;
&lt;p&gt;&lt;a href="./README-zh.md"&gt;中文说明&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Android SDK - &lt;a href="https://github.com/Meituan-Dianping/Logan/tree/master/Example/Logan-Android"&gt;Android SDK&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;iOS SDK - &lt;a href="https://github.com/Meituan-Dianping/Logan/tree/master/Logan/iOS"&gt;iOS SDK&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Web SDK - &lt;a href="https://github.com/Meituan-Dianping/Logan/tree/master/Logan/WebSDK"&gt;Web SDK&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Website - &lt;a href="https://github.com/Meituan-Dianping/Logan/tree/master/Logan/LoganSite"&gt;Website&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Server - &lt;a href="https://github.com/Meituan-Dianping/Logan/tree/master/Logan/Server"&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/logan_arch.png"&gt;&lt;img src="./img/logan_arch.png" alt="Logan" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-android-sdk" class="anchor" aria-hidden="true" href="#android-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android SDK&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;If you want to build the source, make sure your NDK version is not higher than &lt;strong&gt;16.1.4479499&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;Add the following content in the project &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;compile &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.dianping.android.sdk:logan:1.2.4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You must init Logan before you use it&lt;/strong&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;LoganConfig&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;LoganConfig&lt;/span&gt;.&lt;span class="pl-smi"&gt;Builder&lt;/span&gt;()
        .setCachePath(getApplicationContext()&lt;span class="pl-k"&gt;.&lt;/span&gt;getFilesDir()&lt;span class="pl-k"&gt;.&lt;/span&gt;getAbsolutePath())
        .setPath(getApplicationContext()&lt;span class="pl-k"&gt;.&lt;/span&gt;getExternalFilesDir(&lt;span class="pl-c1"&gt;null&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;getAbsolutePath()
                &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;File&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;separator &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;logan_v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .setEncryptKey16(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0123456789012345&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;getBytes())
        .setEncryptIV16(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0123456789012345&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;getBytes())
        .build();
&lt;span class="pl-smi"&gt;Logan&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;init(config);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you init Logan, you can use Logan to write a log. Like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Logan&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;w(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test logan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logan.w method has two parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;String log&lt;/strong&gt;: What you want to write;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;int type&lt;/strong&gt;: Log type. This is very important, best practices below content will show you how to using log type parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: The type value "1" is already used internally by logan. It is recommended that the business party's log type use the new type value.&lt;/p&gt;
&lt;p&gt;If you want to write log to file immediately, you need to call flush function:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Logan&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;f();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to see all of the log file information, you need to call getAllFilesInfo function:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Map&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;Long&lt;/span&gt;&amp;gt;&lt;/span&gt; map &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Logan&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;getAllFilesInfo();&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;key: Log file date;&lt;/li&gt;
&lt;li&gt;value: Log file size(Bytes).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-upload" class="anchor" aria-hidden="true" href="#upload"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upload&lt;/h4&gt;
&lt;p&gt;this upload method is recommend, you can use this method upload your logs directly into your server. we also provide logan server source code ,you can find it in Logan open souce Repository.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://openlogan.inf.test.sankuai.com/logan/upload.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-smi"&gt;Logan&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;s(url, loganTodaysDate(), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testAppId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testUnionid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testdDviceId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testBuildVersion&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testAppVersion&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;SendLogCallback&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;onLogSendCompleted&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-v"&gt;statusCode&lt;/span&gt;, &lt;span class="pl-k"&gt;byte&lt;/span&gt;[] &lt;span class="pl-v"&gt;data&lt;/span&gt;) {
        &lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt; resultData &lt;span class="pl-k"&gt;=&lt;/span&gt; data &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;(data) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Log&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;d(&lt;span class="pl-c1"&gt;TAG&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;upload result, httpCode: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; statusCode &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;, details: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; resultData);
    }
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logan internal provides logging upload mechanism, in view of the need to upload the log to do the preprocessing. If you want to upload log file, you need to implement a SendLogRunnable:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;RealSendLogRunnable&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;SendLogRunnable&lt;/span&gt; {

    &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;sendLog&lt;/span&gt;(&lt;span class="pl-smi"&gt;File&lt;/span&gt; &lt;span class="pl-v"&gt;logFile&lt;/span&gt;) {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logFile: After the pretreatment is going to upload the log file&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Must Call finish after send log&lt;/span&gt;
      finish();
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (logFile&lt;span class="pl-k"&gt;.&lt;/span&gt;getName()&lt;span class="pl-k"&gt;.&lt;/span&gt;contains(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.copy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
				logFile&lt;span class="pl-k"&gt;.&lt;/span&gt;delete();
			}
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE: You must call finish method after send log&lt;/strong&gt;. As written in the code above&lt;/p&gt;
&lt;p&gt;Finally you need to call Logan.s method:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Logan&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;s(date, mSendLogRunnable);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One of the first parameter is date array(yyyy-MM-dd).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-permission" class="anchor" aria-hidden="true" href="#permission"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Permission&lt;/h3&gt;
&lt;p&gt;If you upload log file to server, you need INTERNET permission.&lt;/p&gt;
&lt;p&gt;If you write log to SD card or read log info from SD card, you need WRITE_EXTERNAL_STORAGE and READ_EXTERNAL_STORAGE permission&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-r8--proguard" class="anchor" aria-hidden="true" href="#r8--proguard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R8 / ProGuard&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;-keep class com.dianping.logan.CLoganProtocol {
    native &amp;lt;methods&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-ios--macos-sdk" class="anchor" aria-hidden="true" href="#ios--macos-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS &amp;amp; macOS SDK&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation-1" class="anchor" aria-hidden="true" href="#installation-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;Logan supports CocoaPods methods for installing the library in a project.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-podfile" class="anchor" aria-hidden="true" href="#podfile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Podfile&lt;/h4&gt;
&lt;p&gt;Import Logan in Xcode project, add Logan in podfile.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;TargetName&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Logan&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.2.5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-logan-init" class="anchor" aria-hidden="true" href="#logan-init"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logan Init&lt;/h3&gt;
&lt;p&gt;You must init Logan before you use it:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Logan.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; important!!! you must replace this key and iv by your own.change key and iv at new version is more secure. we will provide a more secure way to protect your logs in the future.&lt;/span&gt;
&lt;span class="pl-c1"&gt;NSData&lt;/span&gt; *keydata = [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;0123456789012345&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;dataUsingEncoding:&lt;/span&gt;&lt;span class="pl-c1"&gt;NSUTF8StringEncoding&lt;/span&gt;]; 
&lt;span class="pl-c1"&gt;NSData&lt;/span&gt; *ivdata = [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;0123456789012345&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;dataUsingEncoding:&lt;/span&gt;&lt;span class="pl-c1"&gt;NSUTF8StringEncoding&lt;/span&gt;];
&lt;span class="pl-c1"&gt;uint64_t&lt;/span&gt; file_max = &lt;span class="pl-c1"&gt;10&lt;/span&gt; * &lt;span class="pl-c1"&gt;1024&lt;/span&gt; * &lt;span class="pl-c1"&gt;1024&lt;/span&gt;;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logan init，incoming 16-bit key，16-bit iv，largest written to the file size(byte)&lt;/span&gt;
&lt;span class="pl-en"&gt;loganInit&lt;/span&gt;(keydata, ivdata, file_max);

#&lt;span class="pl-k"&gt;if&lt;/span&gt; DEBUG
&lt;span class="pl-en"&gt;loganUseASL&lt;/span&gt;(&lt;span class="pl-c1"&gt;YES&lt;/span&gt;);
#&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-usage-1" class="anchor" aria-hidden="true" href="#usage-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;Write a log:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;logan&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;this is a test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;logan method has two parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;String log&lt;/strong&gt;：What you want to write;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;int type&lt;/strong&gt;：Log type. This is very important, best practices below content will show you how to using log type parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to write log to file immediately, you need to call flush function:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;loganFlush&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to see all of the log file information, you need to call loganAllFilesInfo function:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;NSDictionary&lt;/span&gt; *map = loganAllFilesInfo();&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;key Log file date;&lt;/li&gt;
&lt;li&gt;value: Log file size(Bytes).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-upload-1" class="anchor" aria-hidden="true" href="#upload-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upload&lt;/h4&gt;
&lt;p&gt;this upload method is recommend, you can use this method upload your logs directly into your server. we also provide logan server source code ,you can find it in Logan open souce Repository.&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;	&lt;span class="pl-en"&gt;loganUpload&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;https://openlogan.inf.test.sankuai.com/logan/upload.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, loganTodaysDate(), @"testAppId", @"testUnionId",@"testDeviceId", ^(&lt;span class="pl-c1"&gt;NSData&lt;/span&gt; * _Nullable data, &lt;span class="pl-c1"&gt;NSURLResponse&lt;/span&gt; * _Nullable response, &lt;span class="pl-c1"&gt;NSError&lt;/span&gt; * _Nullable error) {
		&lt;span class="pl-k"&gt;if&lt;/span&gt;(error){
			&lt;span class="pl-c1"&gt;NSLog&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;&lt;span class="pl-c1"&gt;%@&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,error);
		}&lt;span class="pl-k"&gt;else&lt;/span&gt;{
			&lt;span class="pl-c1"&gt;NSLog&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;upload succeed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
		}
	});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logan provides a method for obtaining log files and performs preprocessing operations on the logs that need to be uploaded. Log  can be uploaded by implementing the network upload function.&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;    &lt;span class="pl-en"&gt;loganUploadFilePath&lt;/span&gt;(loganTodaysDate(), ^(&lt;span class="pl-c1"&gt;NSString&lt;/span&gt; *_Nullable filePatch) {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (filePatch == &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) {
            &lt;span class="pl-k"&gt;return&lt;/span&gt;;
        }
        &lt;span class="pl-c1"&gt;NSString&lt;/span&gt; *urlStr = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;http://127.0.0.1:3000/logupload&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        &lt;span class="pl-c1"&gt;NSURL&lt;/span&gt; *url = [&lt;span class="pl-c1"&gt;NSURL&lt;/span&gt; &lt;span class="pl-c1"&gt;URLWithString:&lt;/span&gt;urlStr];
        &lt;span class="pl-c1"&gt;NSMutableURLRequest&lt;/span&gt; *req = [[&lt;span class="pl-c1"&gt;NSMutableURLRequest&lt;/span&gt; &lt;span class="pl-c1"&gt;alloc&lt;/span&gt;] &lt;span class="pl-c1"&gt;initWithURL:&lt;/span&gt;url &lt;span class="pl-c1"&gt;cachePolicy:&lt;/span&gt;&lt;span class="pl-c1"&gt;NSURLRequestReloadIgnoringCacheData&lt;/span&gt; &lt;span class="pl-c1"&gt;timeoutInterval:&lt;/span&gt;&lt;span class="pl-c1"&gt;60&lt;/span&gt;];
        [req &lt;span class="pl-c1"&gt;setHTTPMethod:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;POST&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
        [req &lt;span class="pl-c1"&gt;addValue:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;binary/octet-stream&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;forHTTPHeaderField:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
        &lt;span class="pl-c1"&gt;NSURL&lt;/span&gt; *fileUrl = [&lt;span class="pl-c1"&gt;NSURL&lt;/span&gt; &lt;span class="pl-c1"&gt;fileURLWithPath:&lt;/span&gt;filePatch];
        &lt;span class="pl-c1"&gt;NSURLSessionUploadTask&lt;/span&gt; *task = [[&lt;span class="pl-c1"&gt;NSURLSession&lt;/span&gt; &lt;span class="pl-c1"&gt;sharedSession&lt;/span&gt;] &lt;span class="pl-c1"&gt;uploadTaskWithRequest:&lt;/span&gt;req &lt;span class="pl-c1"&gt;fromFile:&lt;/span&gt;fileUrl &lt;span class="pl-c1"&gt;completionHandler:&lt;/span&gt;^(&lt;span class="pl-c1"&gt;NSData&lt;/span&gt; *_Nullable data, &lt;span class="pl-c1"&gt;NSURLResponse&lt;/span&gt; *_Nullable response, &lt;span class="pl-c1"&gt;NSError&lt;/span&gt; *_Nullable error) {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (error == &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) {
                &lt;span class="pl-c1"&gt;NSLog&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;upload success&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
            } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
                &lt;span class="pl-c1"&gt;NSLog&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;upload failed. error:&lt;span class="pl-c1"&gt;%@&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, error);
            }
        }];
        [task &lt;span class="pl-c1"&gt;resume&lt;/span&gt;];
    });&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-web-sdk" class="anchor" aria-hidden="true" href="#web-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web SDK&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Meituan-Dianping/Logan/tree/master/Logan/WebSDK"&gt;Web SDK ReadMe&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-website" class="anchor" aria-hidden="true" href="#website"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Website&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Meituan-Dianping/Logan/tree/master/Logan/LoganSite"&gt;Website ReadMe&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-server" class="anchor" aria-hidden="true" href="#server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Server&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Meituan-Dianping/Logan/tree/master/Logan/Server"&gt;Server ReadMe&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Meituan-Dianping/Logan/wiki/How-to-use-demo"&gt;How to use demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Meituan-Dianping/Logan/wiki/Log-protocol"&gt;Log protocol&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-best-practices" class="anchor" aria-hidden="true" href="#best-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Best Practices&lt;/h1&gt;
&lt;p&gt;Before Logan available, log report system is relatively scattered.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/before_logan.png"&gt;&lt;img src="./img/before_logan.png" alt="Before_Logan" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To put it simply, the traditional idea is to piece together the problems that appear in the logs of each system, but the new idea is to aggregate and analyze all the logs generated by the user to find the scenes with problems.&lt;/p&gt;
&lt;p&gt;The Logan core system consists of four modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Input&lt;/li&gt;
&lt;li&gt;Storage&lt;/li&gt;
&lt;li&gt;BackEnd&lt;/li&gt;
&lt;li&gt;FrontEnd&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/logan_process.png"&gt;&lt;img src="./img/logan_process.png" alt="Logan_Process" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The new case analysis process is as follows:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/logan_case.png"&gt;&lt;img src="./img/logan_case.png" alt="Logan_Case" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-article" class="anchor" aria-hidden="true" href="#article"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Article&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://tech.meituan.com/Logan.html" rel="nofollow"&gt;A lightweight case logging system based on mobile platform developed by Meituan-Dianping — Logan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tech.meituan.com/logan_open_source.html" rel="nofollow"&gt;Logan: Open Source&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-feature" class="anchor" aria-hidden="true" href="#feature"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature&lt;/h1&gt;
&lt;p&gt;In the future, we will provide a data platform based on Logan big data, including advanced functions such as machine learning, troubleshooting log solution, and big data feature analysis.&lt;/p&gt;
&lt;p&gt;Finally, we hope to provide a more complete integrated case analysis ecosystem.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/logan_system.png"&gt;&lt;img src="./img/logan_system.png" alt="Logan_System" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Module&lt;/th&gt;
&lt;th align="center"&gt;Open Source&lt;/th&gt;
&lt;th align="center"&gt;Processing&lt;/th&gt;
&lt;th align="center"&gt;Planning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;iOS &amp;amp; macOS&lt;/td&gt;
&lt;td align="center"&gt;√&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Android&lt;/td&gt;
&lt;td align="center"&gt;√&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Web&lt;/td&gt;
&lt;td align="center"&gt;√&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Back End&lt;/td&gt;
&lt;td align="center"&gt;√&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Front End&lt;/td&gt;
&lt;td align="center"&gt;√&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Mini Programs&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;√&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;For more information about contributing PRs and issues, see our &lt;a href="./CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-mobile" class="anchor" aria-hidden="true" href="#mobile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mobile&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;White Bai&lt;/strong&gt; - &lt;a href="https://github.com/baitian0521"&gt;baitian0521&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Richard Cao&lt;/strong&gt; - &lt;a href="https://github.com/Richard-Cao"&gt;Richard-Cao&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;jiangteng&lt;/strong&gt; - &lt;a href="https://github.com/jiangteng"&gt;jiangteng&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;yangxiangnan&lt;/strong&gt; - &lt;a href="https://github.com/yangxiangnan"&gt;yangxiangnan&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mr-xiaojun&lt;/strong&gt; - &lt;a href="https://github.com/Mr-xiaojun"&gt;Mr-xiaojun&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;luoheng&lt;/strong&gt; - &lt;a href="https://github.com/luoheng158"&gt;luoheng158&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-web" class="anchor" aria-hidden="true" href="#web"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sylvia&lt;/strong&gt; - &lt;a href="https://github.com/sylvia1106"&gt;sylvia1106&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Retrospection&lt;/strong&gt; - &lt;a href="https://github.com/Retrospection"&gt;Retrospection&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-server-1" class="anchor" aria-hidden="true" href="#server-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Server&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;yuanchao.he&lt;/strong&gt; - &lt;a href="https://github.com/he-yuanchao"&gt;he-yuanchao&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;zhilin.luo&lt;/strong&gt; - &lt;a href="https://github.com/zlLuo"&gt;zlLuo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See also the list of &lt;a href="https://github.com/Meituan-Dianping/Logan/graphs/contributors"&gt;contributors&lt;/a&gt; who participated in this project.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Logan is licensed under the MIT License - see the &lt;a href="https://github.com/Meituan-Dianping/Logan/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ARMmbed/mbedtls"&gt;mbedtls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DaveGamble/cJSON"&gt;cJSON&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Meituan-Dianping</author><guid isPermaLink="false">https://github.com/Meituan-Dianping/Logan</guid><pubDate>Sat, 01 Feb 2020 00:05:00 GMT</pubDate></item><item><title>wasm3/wasm3 #6 in C, This month</title><link>https://github.com/wasm3/wasm3</link><description>&lt;p&gt;&lt;i&gt;🚀 The fastest WebAssembly interpreter&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/extra/screenshot-android.png"&gt;&lt;img align="right" width="30%" src="/extra/screenshot-android.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content--wasm3" class="anchor" aria-hidden="true" href="#-wasm3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/extra/wasm-symbol.svg"&gt;&lt;img src="/extra/wasm-symbol.svg" width="32" height="32" style="max-width:100%;"&gt;&lt;/a&gt; Wasm3&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://wapm.io/package/vshymanskyy/wasm3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/066038977d8cd89e30d4754b0ab5db0f1e8c7f78/68747470733a2f2f7761706d2e696f2f7061636b6167652f767368796d616e736b79792f7761736d332f62616467652e737667" alt="WAPM" data-canonical-src="https://wapm.io/package/vshymanskyy/wasm3/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/wasm3/wasm3/issues"&gt;&lt;img src="https://camo.githubusercontent.com/3a4139c3341961786a3bab09da52ba14cffe5381/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f7761736d332f7761736d333f7374796c653d666c61742d737175617265266c6162656c3d69737375657326636f6c6f723d73756363657373" alt="GitHub issues" data-canonical-src="https://img.shields.io/github/issues-raw/wasm3/wasm3?style=flat-square&amp;amp;label=issues&amp;amp;color=success" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/wasm3/wasm3/actions"&gt;&lt;img src="https://camo.githubusercontent.com/6a9720fa6298f9a3f510d672256594d39b0e6145/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f7761736d332f7761736d332f74657374732f6d61737465723f7374796c653d666c61742d737175617265266c6f676f3d676974687562266c6162656c3d7465737473" alt="Tests status" data-canonical-src="https://img.shields.io/github/workflow/status/wasm3/wasm3/tests/master?style=flat-square&amp;amp;logo=github&amp;amp;label=tests" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/wasm3/wasm3"&gt;&lt;img src="https://camo.githubusercontent.com/1f56ad213727d81f61f73f94c92304115edc6eb8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75653f7374796c653d666c61742d737175617265" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-MIT-blue?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A high performance WebAssembly interpreter written in C.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;∼ 8x faster&lt;/strong&gt; than other known wasm interpreters&lt;br&gt;
&lt;strong&gt;∼ 4-5x slower&lt;/strong&gt; than state of the art wasm &lt;code&gt;JIT&lt;/code&gt; engines&lt;br&gt;
&lt;strong&gt;∼ 12x slower&lt;/strong&gt; than native execution&lt;br&gt;
&lt;sub&gt;* Based on &lt;a href="./docs/Performance.md"&gt;&lt;strong&gt;CoreMark 1.0&lt;/strong&gt; benchmark&lt;/a&gt;. Your mileage may vary.&lt;/sub&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/wasm3_engine" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3a5cf4abefa520654de6efd13c11191db00e0ef/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f7761736d335f656e67696e653f7374796c653d666c61742d73717561726526636f6c6f723d316461316632266c6162656c3d74776974746572266c6f676f3d74776974746572" alt="Twitter" data-canonical-src="https://img.shields.io/twitter/follow/wasm3_engine?style=flat-square&amp;amp;color=1da1f2&amp;amp;label=twitter&amp;amp;logo=twitter" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/qmZjgnd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/154fa7cce478e43e3ea64c0fc590d5d950fb431e/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3637313431353634353037333730323932353f7374796c653d666c61742d737175617265266c6f676f3d646973636f726426636f6c6f723d373238396461266c6162656c3d646973636f7264" alt="Discord" data-canonical-src="https://img.shields.io/discord/671415645073702925?style=flat-square&amp;amp;logo=discord&amp;amp;color=7289da&amp;amp;label=discord" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://t.me/joinchat/DD8s3xVG8Vj_LxRDm52eTQ" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2232a99a772bd8975f4ae74f8b339ee932f0c096/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f74656c656772616d2d636861742d3030383863633f7374796c653d666c61742d737175617265266c6f676f3d74656c656772616d" alt="Telegram" data-canonical-src="https://img.shields.io/badge/telegram-chat-0088cc?style=flat-square&amp;amp;logo=telegram" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Here's an online demo and a small &lt;a href="https://wapm.io/package/vshymanskyy/wasm3" rel="nofollow"&gt;getting started guide&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://webassembly.sh/?run-command=wapm%20install%20vshymanskyy/wasm3" rel="nofollow"&gt;&lt;img src="extra/button.png" alt="LIVE DEMO" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;wasm3&lt;/code&gt; passes the &lt;a href="https://github.com/WebAssembly/spec/tree/master/test/core"&gt;WebAssembly spec testsuite&lt;/a&gt; and is able to run many &lt;code&gt;WASI&lt;/code&gt; apps.&lt;/p&gt;
&lt;p&gt;Minimum useful system requirements: &lt;strong&gt;~64Kb&lt;/strong&gt; for code and &lt;strong&gt;~10Kb&lt;/strong&gt; RAM&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wasm3&lt;/code&gt; runs on a wide range of architectures (&lt;code&gt;x86&lt;/code&gt;, &lt;code&gt;x64&lt;/code&gt;, &lt;code&gt;ARM&lt;/code&gt;, &lt;code&gt;MIPS&lt;/code&gt;, &lt;code&gt;RISC-V&lt;/code&gt;, &lt;code&gt;Xtensa&lt;/code&gt;, &lt;code&gt;ARC32&lt;/code&gt;) and &lt;a href="/platforms"&gt;platforms&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7f5bed56b38bd4a117d7a5b656abe311a3662a69/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6c696e75782e737667"&gt;&lt;img src="https://camo.githubusercontent.com/7f5bed56b38bd4a117d7a5b656abe311a3662a69/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6c696e75782e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/linux.svg" style="max-width:100%;"&gt;&lt;/a&gt; Linux,
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ccb4a2937d0f8566bbf00231b4a3f70c2e7f4207/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f77696e646f77732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/ccb4a2937d0f8566bbf00231b4a3f70c2e7f4207/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f77696e646f77732e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/windows.svg" style="max-width:100%;"&gt;&lt;/a&gt; Windows,
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/faad054fb2610ff55ac4f472d461e791e39e42be/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6170706c652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/faad054fb2610ff55ac4f472d461e791e39e42be/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6170706c652e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/apple.svg" style="max-width:100%;"&gt;&lt;/a&gt; OS X&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/68a9159b1c337ad66fa4523732be2e23dcd896eb/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f616e64726f69642e737667"&gt;&lt;img src="https://camo.githubusercontent.com/68a9159b1c337ad66fa4523732be2e23dcd896eb/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f616e64726f69642e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/android.svg" style="max-width:100%;"&gt;&lt;/a&gt; Android,
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/faad054fb2610ff55ac4f472d461e791e39e42be/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6170706c652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/faad054fb2610ff55ac4f472d461e791e39e42be/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6170706c652e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/apple.svg" style="max-width:100%;"&gt;&lt;/a&gt; iOS&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ecb25d1195d7491b55ca4507dab1d11e7b99c61f/68747470733a2f2f63646e2e7261776769742e636f6d2f6665617468657269636f6e732f666561746865722f6d61737465722f69636f6e732f776966692e737667"&gt;&lt;img src="https://camo.githubusercontent.com/ecb25d1195d7491b55ca4507dab1d11e7b99c61f/68747470733a2f2f63646e2e7261776769742e636f6d2f6665617468657269636f6e732f666561746865722f6d61737465722f69636f6e732f776966692e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/feathericons/feather/master/icons/wifi.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;strong&gt;OpenWRT&lt;/strong&gt;-enabled routers&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1d6c44ef9b755131a58aaf65f102350cec3d3ac5/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f72617370626572727970692e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1d6c44ef9b755131a58aaf65f102350cec3d3ac5/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f72617370626572727970692e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/raspberrypi.svg" style="max-width:100%;"&gt;&lt;/a&gt; Raspberry Pi, Orange Pi and other &lt;strong&gt;SBC&lt;/strong&gt;s&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5eb27cf1d6d49e2536d441cdbfcda87253e23ffc/68747470733a2f2f63646e2e7261776769742e636f6d2f6665617468657269636f6e732f666561746865722f6d61737465722f69636f6e732f6370752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/5eb27cf1d6d49e2536d441cdbfcda87253e23ffc/68747470733a2f2f63646e2e7261776769742e636f6d2f6665617468657269636f6e732f666561746865722f6d61737465722f69636f6e732f6370752e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/feathericons/feather/master/icons/cpu.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;strong&gt;MCU&lt;/strong&gt;s: Arduino, ESP8266, ESP32, Particle, ... &lt;a href="./docs/Hardware.md"&gt;see full list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d5669eb588d0e0bbaae8f99b8f764ccc0a30ad5e/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6d6f7a696c6c6166697265666f782e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d5669eb588d0e0bbaae8f99b8f764ccc0a30ad5e/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6d6f7a696c6c6166697265666f782e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/mozillafirefox.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7c4f7c988d8c1ba719de21251c974ce0c7fa9de9/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f676f6f676c656368726f6d652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/7c4f7c988d8c1ba719de21251c974ce0c7fa9de9/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f676f6f676c656368726f6d652e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/googlechrome.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bb3acc29f50d9de82f3804d5b0dfc978d38e9cc8/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f7361666172692e737667"&gt;&lt;img src="https://camo.githubusercontent.com/bb3acc29f50d9de82f3804d5b0dfc978d38e9cc8/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f7361666172692e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/safari.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/72745eeef4a16ce81f29c9d92a5174ec0b4917bf/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6d6963726f736f6674656467652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/72745eeef4a16ce81f29c9d92a5174ec0b4917bf/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6d6963726f736f6674656467652e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/microsoftedge.svg" style="max-width:100%;"&gt;&lt;/a&gt; Browsers... yes, using WebAssembly itself!&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="extra/wasm-symbol.svg"&gt;&lt;img src="extra/wasm-symbol.svg" width="18" height="18" style="max-width:100%;"&gt;&lt;/a&gt; &lt;code&gt;wasm3&lt;/code&gt; can execute &lt;code&gt;wasm3&lt;/code&gt; (self-hosting)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-libraries" class="anchor" aria-hidden="true" href="#libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Libraries&lt;/h2&gt;
&lt;p&gt;Wasm3 can be used as a library for:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wasm3/wasm3"&gt;&lt;img src="https://camo.githubusercontent.com/45bf48b2cdc26778c411cad89c864f8188bb4603/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f63706c7573706c75732e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/cplusplus.svg" style="max-width:100%;"&gt; C/C++&lt;/a&gt; │
&lt;a href="https://github.com/matiasinsaurralde/go-wasm3"&gt;&lt;img src="https://camo.githubusercontent.com/d73bb4e2239ff85c5008fa882e989b7bfd4eb866/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f676f2e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/go.svg" style="max-width:100%;"&gt; GoLang&lt;/a&gt; │
&lt;a href="https://github.com/Veykril/wasm3-rs"&gt;&lt;img src="https://camo.githubusercontent.com/f62a208334986e0f561e7c6af22e5f20f89db956/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f727573742e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/rust.svg" style="max-width:100%;"&gt; Rust&lt;/a&gt; │
&lt;a href="https://github.com/wasm3/wasm3-arduino"&gt;&lt;img src="https://camo.githubusercontent.com/da44b9c492ce93f37d3781e03356403da88069e9/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f61726475696e6f2e737667" width="18" height="18" data-canonical-src="https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/arduino.svg" style="max-width:100%;"&gt; Arduino, PlatformIO, Particle&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Why use a "slow interpreter" versus a "fast JIT"?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In many situations, speed is not the main concern. Runtime executable size, code density, memory usage, startup latency can be all improved with the interpreter approach. Portability and security are much easier to achieve and maintain. Additionally, development impedance is much lower. A simple library like Wasm3 is easy to compile and integrate into an existing project. (Wasm3 builds in a just few seconds). Finally, on some platforms (i.e. iOS and WebAssembly itself) you can't generate executable code pages in runtime, so JIT is unavailable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why would you want to run WASM on microcontrollers?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Wasm3 started as a research project and remains so by many means. Evaluating the engine in different environments is part of the research. Given that we have &lt;code&gt;Lua&lt;/code&gt;, &lt;code&gt;JS&lt;/code&gt;, &lt;code&gt;Python&lt;/code&gt;, &lt;code&gt;Lisp&lt;/code&gt;, &lt;code&gt;...&lt;/code&gt; running on MCUs, &lt;code&gt;WebAssembly&lt;/code&gt; is actually a promising alternative. It provides toolchain decoupling as well as a completely sandboxed, well-defined, predictible environment. Among practical use cases we can list &lt;code&gt;edge computing&lt;/code&gt;, &lt;code&gt;scripting&lt;/code&gt;, running &lt;code&gt;IoT rules&lt;/code&gt;, &lt;code&gt;smart contracts&lt;/code&gt;, etc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-further-resources" class="anchor" aria-hidden="true" href="#further-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Further Resources&lt;/h2&gt;
&lt;p&gt;&lt;a href="./docs/Development.md"&gt;Build and Development instructions&lt;/a&gt;&lt;br&gt;
&lt;a href="./docs/Testing.md"&gt;Testing &amp;amp; Fuzzing&lt;/a&gt;&lt;br&gt;
&lt;a href="./docs/Performance.md"&gt;Performance&lt;/a&gt;&lt;br&gt;
&lt;a href="./docs/Interpreter.md"&gt;Interpreter Architecture&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;This project is released under The MIT License (MIT)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>wasm3</author><guid isPermaLink="false">https://github.com/wasm3/wasm3</guid><pubDate>Sat, 01 Feb 2020 00:06:00 GMT</pubDate></item><item><title>Genymobile/scrcpy #7 in C, This month</title><link>https://github.com/Genymobile/scrcpy</link><description>&lt;p&gt;&lt;i&gt;Display and control your Android device&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-scrcpy-v1121" class="anchor" aria-hidden="true" href="#scrcpy-v1121"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;scrcpy (v1.12.1)&lt;/h1&gt;
&lt;p&gt;This application provides display and control of Android devices connected on
USB (or &lt;a href="https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/" rel="nofollow"&gt;over TCP/IP&lt;/a&gt;). It does not require any &lt;em&gt;root&lt;/em&gt; access.
It works on &lt;em&gt;GNU/Linux&lt;/em&gt;, &lt;em&gt;Windows&lt;/em&gt; and &lt;em&gt;macOS&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/screenshot-debian-600.jpg"&gt;&lt;img src="assets/screenshot-debian-600.jpg" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It focuses on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lightness&lt;/strong&gt; (native, displays only the device screen)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;performance&lt;/strong&gt; (30~60fps)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;quality&lt;/strong&gt; (1920×1080 or above)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;low latency&lt;/strong&gt; (&lt;a href="https://github.com/Genymobile/scrcpy/pull/646"&gt;35~70ms&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;low startup time&lt;/strong&gt; (~1 second to display the first image)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;non-intrusiveness&lt;/strong&gt; (nothing is left installed on the device)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;The Android device requires at least API 21 (Android 5.0).&lt;/p&gt;
&lt;p&gt;Make sure you &lt;a href="https://developer.android.com/studio/command-line/adb.html#Enabling" rel="nofollow"&gt;enabled adb debugging&lt;/a&gt; on your device(s).&lt;/p&gt;
&lt;p&gt;On some devices, you also need to enable &lt;a href="https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323"&gt;an additional option&lt;/a&gt; to
control it using keyboard and mouse.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get-the-app" class="anchor" aria-hidden="true" href="#get-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get the app&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h3&gt;
&lt;p&gt;In Debian (&lt;em&gt;testing&lt;/em&gt; and &lt;em&gt;sid&lt;/em&gt; for now):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt install scrcpy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Snappy_(package_manager)" rel="nofollow"&gt;Snap&lt;/a&gt; package is available: &lt;a href="https://snapstats.org/snaps/scrcpy" rel="nofollow"&gt;&lt;code&gt;scrcpy&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For Arch Linux, an &lt;a href="https://wiki.archlinux.org/index.php/Arch_User_Repository" rel="nofollow"&gt;AUR&lt;/a&gt; package is available: &lt;a href="https://aur.archlinux.org/packages/scrcpy/" rel="nofollow"&gt;&lt;code&gt;scrcpy&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For Gentoo, an &lt;a href="https://wiki.gentoo.org/wiki/Ebuild" rel="nofollow"&gt;Ebuild&lt;/a&gt; is available: &lt;a href="https://github.com/maggu2810/maggu2810-overlay/tree/master/app-mobilephone/scrcpy"&gt;&lt;code&gt;scrcpy/&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You could also &lt;a href="BUILD.md"&gt;build the app manually&lt;/a&gt; (don't worry, it's not that
hard).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;For Windows, for simplicity, prebuilt archives with all the dependencies
(including &lt;code&gt;adb&lt;/code&gt;) are available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Genymobile/scrcpy/releases/download/v1.12.1/scrcpy-win32-v1.12.1.zip"&gt;&lt;code&gt;scrcpy-win32-v1.12.1.zip&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(SHA-256: 0f4b3b063536b50a2df05dc42c760f9cc0093a9a26dbdf02d8232c74dab43480)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Genymobile/scrcpy/releases/download/v1.12.1/scrcpy-win64-v1.12.1.zip"&gt;&lt;code&gt;scrcpy-win64-v1.12.1.zip&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(SHA-256: 57d34b6d16cfd9fe169bc37c4df58ebd256d05c1ea3febc63d9cb0a027ab47c9)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also &lt;a href="BUILD.md"&gt;build the app manually&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h3&gt;
&lt;p&gt;The application is available in &lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;. Just install it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install scrcpy&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need &lt;code&gt;adb&lt;/code&gt;, accessible from your &lt;code&gt;PATH&lt;/code&gt;. If you don't have it yet:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew cask install android-platform-tools&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also &lt;a href="BUILD.md"&gt;build the app manually&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-run" class="anchor" aria-hidden="true" href="#run"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run&lt;/h2&gt;
&lt;p&gt;Plug an Android device, and execute:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It accepts command-line arguments, listed by:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --help&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-capture-configuration" class="anchor" aria-hidden="true" href="#capture-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Capture configuration&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-reduce-size" class="anchor" aria-hidden="true" href="#reduce-size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reduce size&lt;/h4&gt;
&lt;p&gt;Sometimes, it is useful to mirror an Android device at a lower definition to
increase performance.&lt;/p&gt;
&lt;p&gt;To limit both the width and height to some value (e.g. 1024):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --max-size 1024
scrcpy -m 1024  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; short version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The other dimension is computed to that the device aspect ratio is preserved.
That way, a device in 1920×1080 will be mirrored at 1024×576.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-change-bit-rate" class="anchor" aria-hidden="true" href="#change-bit-rate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change bit-rate&lt;/h4&gt;
&lt;p&gt;The default bit-rate is 8 Mbps. To change the video bitrate (e.g. to 2 Mbps):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --bit-rate 2M
scrcpy -b 2M  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; short version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-limit-frame-rate" class="anchor" aria-hidden="true" href="#limit-frame-rate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limit frame rate&lt;/h4&gt;
&lt;p&gt;On devices with Android &amp;gt;= 10, the capture frame rate can be limited:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --max-fps 15&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-crop" class="anchor" aria-hidden="true" href="#crop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Crop&lt;/h4&gt;
&lt;p&gt;The device screen may be cropped to mirror only part of the screen.&lt;/p&gt;
&lt;p&gt;This is useful for example to mirror only one eye of the Oculus Go:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --crop 1224:1440:0:0   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 1224x1440 at offset (0,0)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;code&gt;--max-size&lt;/code&gt; is also specified, resizing is applied after cropping.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-recording" class="anchor" aria-hidden="true" href="#recording"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recording&lt;/h3&gt;
&lt;p&gt;It is possible to record the screen while mirroring:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --record file.mp4
scrcpy -r file.mkv&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To disable mirroring while recording:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --no-display --record file.mp4
scrcpy -Nr file.mkv
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; interrupt recording with Ctrl+C&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Ctrl+C does not terminate properly on Windows, so disconnect the device&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;"Skipped frames" are recorded, even if they are not displayed in real time (for
performance reasons). Frames are &lt;em&gt;timestamped&lt;/em&gt; on the device, so &lt;a href="https://en.wikipedia.org/wiki/Packet_delay_variation" rel="nofollow"&gt;packet delay
variation&lt;/a&gt; does not impact the recorded file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-connection" class="anchor" aria-hidden="true" href="#connection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connection&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-wireless" class="anchor" aria-hidden="true" href="#wireless"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wireless&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Scrcpy&lt;/em&gt; uses &lt;code&gt;adb&lt;/code&gt; to communicate with the device, and &lt;code&gt;adb&lt;/code&gt; can &lt;a href="https://developer.android.com/studio/command-line/adb.html#wireless" rel="nofollow"&gt;connect&lt;/a&gt; to a
device over TCP/IP:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Connect the device to the same Wi-Fi as your computer.&lt;/li&gt;
&lt;li&gt;Get your device IP address (in Settings → About phone → Status).&lt;/li&gt;
&lt;li&gt;Enable adb over TCP/IP on your device: &lt;code&gt;adb tcpip 5555&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Unplug your device.&lt;/li&gt;
&lt;li&gt;Connect to your device: &lt;code&gt;adb connect DEVICE_IP:5555&lt;/code&gt; &lt;em&gt;(replace &lt;code&gt;DEVICE_IP&lt;/code&gt;)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;scrcpy&lt;/code&gt; as usual.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It may be useful to decrease the bit-rate and the definition:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --bit-rate 2M --max-size 800
scrcpy -b2M -m800  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; short version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-multi-devices" class="anchor" aria-hidden="true" href="#multi-devices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-devices&lt;/h4&gt;
&lt;p&gt;If several devices are listed in &lt;code&gt;adb devices&lt;/code&gt;, you must specify the &lt;em&gt;serial&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --serial 0123456789abcdef
scrcpy -s 0123456789abcdef  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; short version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can start several instances of &lt;em&gt;scrcpy&lt;/em&gt; for several devices.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ssh-tunnel" class="anchor" aria-hidden="true" href="#ssh-tunnel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSH tunnel&lt;/h4&gt;
&lt;p&gt;To connect to a remote device, it is possible to connect a local &lt;code&gt;adb&lt;/code&gt; client to
a remote &lt;code&gt;adb&lt;/code&gt; server (provided they use the same version of the &lt;em&gt;adb&lt;/em&gt;
protocol):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;adb kill-server    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; kill the local adb server on 5037&lt;/span&gt;
ssh -CN -L5037:localhost:5037 -R27183:localhost:27183 your_remote_computer
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; keep this open&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From another terminal:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Like for wireless connections, it may be useful to reduce quality:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scrcpy -b2M -m800 --max-fps 15
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-window-configuration" class="anchor" aria-hidden="true" href="#window-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Window configuration&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-title" class="anchor" aria-hidden="true" href="#title"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Title&lt;/h4&gt;
&lt;p&gt;By default, the window title is the device model. It can be changed:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --window-title &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;My device&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-position-and-size" class="anchor" aria-hidden="true" href="#position-and-size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Position and size&lt;/h4&gt;
&lt;p&gt;The initial window position and size may be specified:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --window-x 100 --window-y 100 --window-width 800 --window-height 600&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-borderless" class="anchor" aria-hidden="true" href="#borderless"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Borderless&lt;/h4&gt;
&lt;p&gt;To disable window decorations:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --window-borderless&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-always-on-top" class="anchor" aria-hidden="true" href="#always-on-top"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Always on top&lt;/h4&gt;
&lt;p&gt;To keep the scrcpy window always on top:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --always-on-top&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-fullscreen" class="anchor" aria-hidden="true" href="#fullscreen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fullscreen&lt;/h4&gt;
&lt;p&gt;The app may be started directly in fullscreen:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --fullscreen
scrcpy -f  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; short version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Fullscreen can then be toggled dynamically with &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other-mirroring-options" class="anchor" aria-hidden="true" href="#other-mirroring-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other mirroring options&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-read-only" class="anchor" aria-hidden="true" href="#read-only"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Read-only&lt;/h4&gt;
&lt;p&gt;To disable controls (everything which can interact with the device: input keys,
mouse events, drag&amp;amp;drop files):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --no-control
scrcpy -n&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-turn-screen-off" class="anchor" aria-hidden="true" href="#turn-screen-off"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Turn screen off&lt;/h4&gt;
&lt;p&gt;It is possible to turn the device screen off while mirroring on start with a
command-line option:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --turn-screen-off
scrcpy -S&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or by pressing &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;o&lt;/code&gt; at any time.&lt;/p&gt;
&lt;p&gt;To turn it back on, press &lt;code&gt;POWER&lt;/code&gt; (or &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt;).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-render-expired-frames" class="anchor" aria-hidden="true" href="#render-expired-frames"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Render expired frames&lt;/h4&gt;
&lt;p&gt;By default, to minimize latency, &lt;em&gt;scrcpy&lt;/em&gt; always renders the last decoded frame
available, and drops any previous one.&lt;/p&gt;
&lt;p&gt;To force the rendering of all frames (at a cost of a possible increased
latency), use:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --render-expired-frames&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-show-touches" class="anchor" aria-hidden="true" href="#show-touches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show touches&lt;/h4&gt;
&lt;p&gt;For presentations, it may be useful to show physical touches (on the physical
device).&lt;/p&gt;
&lt;p&gt;Android provides this feature in &lt;em&gt;Developers options&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Scrcpy&lt;/em&gt; provides an option to enable this feature on start and disable on exit:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --show-touches
scrcpy -t&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that it only shows &lt;em&gt;physical&lt;/em&gt; touches (with the finger on the device).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-input-control" class="anchor" aria-hidden="true" href="#input-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input control&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-rotate-device-screen" class="anchor" aria-hidden="true" href="#rotate-device-screen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rotate device screen&lt;/h4&gt;
&lt;p&gt;Press &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;r&lt;/code&gt; to switch between portrait and landscape modes.&lt;/p&gt;
&lt;p&gt;Note that it rotates only if the application in foreground supports the
requested orientation.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-copy-paste" class="anchor" aria-hidden="true" href="#copy-paste"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copy-paste&lt;/h4&gt;
&lt;p&gt;It is possible to synchronize clipboards between the computer and the device, in
both directions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt; copies the device clipboard to the computer clipboard;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt; copies the computer clipboard to the device clipboard;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt; &lt;em&gt;pastes&lt;/em&gt; the computer clipboard as a sequence of text events (but
breaks non-ASCII characters).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-text-injection-preference" class="anchor" aria-hidden="true" href="#text-injection-preference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Text injection preference&lt;/h4&gt;
&lt;p&gt;There are two kinds of &lt;a href="https://blog.rom1v.com/2018/03/introducing-scrcpy/#handle-text-input" rel="nofollow"&gt;events&lt;/a&gt; generated when typing text:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;key events&lt;/em&gt;, signaling that a key is pressed or released;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;text events&lt;/em&gt;, signaling that a text has been entered.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By default, letters are injected using key events, so that the keyboard behaves
as expected in games (typically for WASD keys).&lt;/p&gt;
&lt;p&gt;But this may &lt;a href="https://github.com/Genymobile/scrcpy/issues/650#issuecomment-512945343"&gt;cause issues&lt;/a&gt;. If you encounter such a problem, you
can avoid it by:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --prefer-text&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(but this will break keyboard behavior in games)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-file-drop" class="anchor" aria-hidden="true" href="#file-drop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;File drop&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-install-apk" class="anchor" aria-hidden="true" href="#install-apk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install APK&lt;/h4&gt;
&lt;p&gt;To install an APK, drag &amp;amp; drop an APK file (ending with &lt;code&gt;.apk&lt;/code&gt;) to the &lt;em&gt;scrcpy&lt;/em&gt;
window.&lt;/p&gt;
&lt;p&gt;There is no visual feedback, a log is printed to the console.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-push-file-to-device" class="anchor" aria-hidden="true" href="#push-file-to-device"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push file to device&lt;/h4&gt;
&lt;p&gt;To push a file to &lt;code&gt;/sdcard/&lt;/code&gt; on the device, drag &amp;amp; drop a (non-APK) file to the
&lt;em&gt;scrcpy&lt;/em&gt; window.&lt;/p&gt;
&lt;p&gt;There is no visual feedback, a log is printed to the console.&lt;/p&gt;
&lt;p&gt;The target directory can be changed on start:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scrcpy --push-target /sdcard/foo/bar/&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-audio-forwarding" class="anchor" aria-hidden="true" href="#audio-forwarding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Audio forwarding&lt;/h3&gt;
&lt;p&gt;Audio is not forwarded by &lt;em&gt;scrcpy&lt;/em&gt;. Use &lt;a href="https://github.com/rom1v/usbaudio"&gt;USBaudio&lt;/a&gt; (Linux-only).&lt;/p&gt;
&lt;p&gt;Also see &lt;a href="https://github.com/Genymobile/scrcpy/issues/14"&gt;issue #14&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-shortcuts" class="anchor" aria-hidden="true" href="#shortcuts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shortcuts&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th align="left"&gt;Shortcut&lt;/th&gt;
&lt;th align="left"&gt;Shortcut (macOS)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Switch fullscreen mode&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Resize window to 1:1 (pixel-perfect)&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;g&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;g&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Resize window to remove black borders&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;x&lt;/code&gt; | &lt;em&gt;Double-click¹&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;x&lt;/code&gt;  | &lt;em&gt;Double-click¹&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;HOME&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;h&lt;/code&gt; | &lt;em&gt;Middle-click&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;h&lt;/code&gt; | &lt;em&gt;Middle-click&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;BACK&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt; | &lt;em&gt;Right-click²&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;  | &lt;em&gt;Right-click²&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;APP_SWITCH&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;s&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;s&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;MENU&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;m&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;m&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;VOLUME_UP&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;↑&lt;/code&gt; &lt;em&gt;(up)&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;↑&lt;/code&gt; &lt;em&gt;(up)&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;VOLUME_DOWN&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;↓&lt;/code&gt; &lt;em&gt;(down)&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;↓&lt;/code&gt; &lt;em&gt;(down)&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Click on &lt;code&gt;POWER&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Power on&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;Right-click²&lt;/em&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;Right-click²&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Turn device screen off (keep mirroring)&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;o&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;o&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Rotate device screen&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;r&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;r&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expand notification panel&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Collapse notification panel&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Copy device clipboard to computer&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Paste computer clipboard to device&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Copy computer clipboard to device&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Enable/disable FPS counter (on stdout)&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;i&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;i&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;¹Double-click on black borders to remove them.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;²Right-click turns the screen on if it was off, presses BACK otherwise.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-custom-paths" class="anchor" aria-hidden="true" href="#custom-paths"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom paths&lt;/h2&gt;
&lt;p&gt;To use a specific &lt;em&gt;adb&lt;/em&gt; binary, configure its path in the environment variable
&lt;code&gt;ADB&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ADB=/path/to/adb scrcpy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To override the path of the &lt;code&gt;scrcpy-server&lt;/code&gt; file, configure its path in
&lt;code&gt;SCRCPY_SERVER_PATH&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-scrcpy" class="anchor" aria-hidden="true" href="#why-scrcpy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why &lt;em&gt;scrcpy&lt;/em&gt;?&lt;/h2&gt;
&lt;p&gt;A colleague challenged me to find a name as unpronounceable as &lt;a href="https://github.com/Genymobile/gnirehtet"&gt;gnirehtet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://man7.org/linux/man-pages/man3/strcpy.3.html" rel="nofollow"&gt;&lt;code&gt;strcpy&lt;/code&gt;&lt;/a&gt; copies a &lt;strong&gt;str&lt;/strong&gt;ing; &lt;code&gt;scrcpy&lt;/code&gt; copies a &lt;strong&gt;scr&lt;/strong&gt;een.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-build" class="anchor" aria-hidden="true" href="#how-to-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to build?&lt;/h2&gt;
&lt;p&gt;See &lt;a href="BUILD.md"&gt;BUILD&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-common-issues" class="anchor" aria-hidden="true" href="#common-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common issues&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="FAQ.md"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developers" class="anchor" aria-hidden="true" href="#developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="DEVELOP.md"&gt;developers page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licence" class="anchor" aria-hidden="true" href="#licence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licence&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright (C) 2018 Genymobile
Copyright (C) 2018-2020 Romain Vimont

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-articles" class="anchor" aria-hidden="true" href="#articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rom1v.com/2018/03/introducing-scrcpy/" rel="nofollow"&gt;Introducing scrcpy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/" rel="nofollow"&gt;Scrcpy now works wirelessly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Genymobile</author><guid isPermaLink="false">https://github.com/Genymobile/scrcpy</guid><pubDate>Sat, 01 Feb 2020 00:07:00 GMT</pubDate></item><item><title>pawelsalawa/sqlitestudio #8 in C, This month</title><link>https://github.com/pawelsalawa/sqlitestudio</link><description>&lt;p&gt;&lt;i&gt;A free, open source, multi-platform SQLite database manager.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sqlitestudio" class="anchor" aria-hidden="true" href="#sqlitestudio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLiteStudio&lt;/h1&gt;
&lt;p&gt;A free, open source, multi-platform SQLite database manager written in C++, with use of Qt framework.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Most recent packages are available at Releases page: &lt;a href="https://github.com/pawelsalawa/sqlitestudio/releases"&gt;https://github.com/pawelsalawa/sqlitestudio/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Older versions (3.x.x) can be fetched from &lt;a href="https://www.dropbox.com/sh/ao4nz2qjfsz2yuy/AABwiiss3do7n0wNecuk-uyna?dl=0" rel="nofollow"&gt;this dropbox folder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Legacy versions (2.x.x) &amp;amp; Windows development dependencies &lt;a href="https://www.dropbox.com/sh/iyilxtepgswpdlm/AADmYlJ4QRYWn_eo9u4fPn0Aa?dl=0" rel="nofollow"&gt;can be found here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-want-to-contribute" class="anchor" aria-hidden="true" href="#want-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to contribute?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/pawelsalawa/sqlitestudio/wiki/How_can_I_contribute"&gt;https://github.com/pawelsalawa/sqlitestudio/wiki/How_can_I_contribute&lt;/a&gt;?&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-home-page" class="anchor" aria-hidden="true" href="#home-page"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Home page&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://sqlitestudio.pl/" rel="nofollow"&gt;https://sqlitestudio.pl/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compilation-from-sources" class="anchor" aria-hidden="true" href="#compilation-from-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compilation from sources&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/pawelsalawa/sqlitestudio/wiki/Compiling_application_from_sources"&gt;https://github.com/pawelsalawa/sqlitestudio/wiki/Compiling_application_from_sources&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-discussion-forum" class="anchor" aria-hidden="true" href="#discussion-forum"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussion forum&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://forum.sqlitestudio.pl/" rel="nofollow"&gt;https://forum.sqlitestudio.pl/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bugs--feature-requests-tracker" class="anchor" aria-hidden="true" href="#bugs--feature-requests-tracker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs &amp;amp; feature requests tracker&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/pawelsalawa/sqlitestudio/issues"&gt;https://github.com/pawelsalawa/sqlitestudio/issues&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-projects-wiki" class="anchor" aria-hidden="true" href="#projects-wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project's Wiki&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/pawelsalawa/sqlitestudio/wiki"&gt;https://github.com/pawelsalawa/sqlitestudio/wiki&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pawelsalawa</author><guid isPermaLink="false">https://github.com/pawelsalawa/sqlitestudio</guid><pubDate>Sat, 01 Feb 2020 00:08:00 GMT</pubDate></item><item><title>acidanthera/OpenCorePkg #9 in C, This month</title><link>https://github.com/acidanthera/OpenCorePkg</link><description>&lt;p&gt;&lt;i&gt;OpenCore front end&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/acidanthera/OpenCorePkg/blob/master/Docs/Logos/OpenCore_with_text_Small.png"&gt;&lt;img src="https://github.com/acidanthera/OpenCorePkg/raw/master/Docs/Logos/OpenCore_with_text_Small.png" width="200" height="48" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--" class="anchor" aria-hidden="true" href="#-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://travis-ci.com/acidanthera/OpenCorePkg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db77e5e95b6fb6d136ed05696bd9da939b16ec34/68747470733a2f2f7472617669732d63692e636f6d2f61636964616e74686572612f4f70656e436f7265506b672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/acidanthera/OpenCorePkg.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://scan.coverity.com/projects/18169" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52e7e3f4c55e4023af135a707d39f07048b2e776/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f31383136392f62616467652e7376673f666c61743d31" alt="Scan Status" data-canonical-src="https://scan.coverity.com/projects/18169/badge.svg?flat=1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;OpenCore bootloader front end.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-discussion" class="anchor" aria-hidden="true" href="#discussion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://applelife.ru/threads/razrabotka-opencore.2943955" rel="nofollow"&gt;AppleLife.ru&lt;/a&gt; in Russian&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackintosh-forum.de/forum/thread/42353-opencore-bootloader" rel="nofollow"&gt;Hackintosh-Forum.de&lt;/a&gt; in German&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.insanelymac.com/forum/topic/338527-opencore-development/" rel="nofollow"&gt;InsanelyMac.com&lt;/a&gt; in English&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.macrumors.com/threads/opencore-on-the-mac-pro.2207814/" rel="nofollow"&gt;MacRumors.com&lt;/a&gt; in English, legacy Apple hardware&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.macos86.it/showthread.php?4570-OpenCore-aka-OC-Nuovo-BootLoader" rel="nofollow"&gt;macOS86.it&lt;/a&gt; in Italian&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bbs.pcbeta.com/viewthread-1815623-1-1.html" rel="nofollow"&gt;PCbeta.com&lt;/a&gt; in Chinese&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The HermitCrabs Lab&lt;/li&gt;
&lt;li&gt;All projects providing third-party code (refer to file headers)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/al3xtjames"&gt;al3xtjames&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Andrey1970AppleLife"&gt;Andrey1970AppleLife&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Download-Fritz"&gt;Download-Fritz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Goldfish64"&gt;Goldfish64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PMHeart"&gt;PMHeart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/savvamitrofanov"&gt;savvamitrofanov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vit9696"&gt;vit9696&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>acidanthera</author><guid isPermaLink="false">https://github.com/acidanthera/OpenCorePkg</guid><pubDate>Sat, 01 Feb 2020 00:09:00 GMT</pubDate></item><item><title>git/git #10 in C, This month</title><link>https://github.com/git/git</link><description>&lt;p&gt;&lt;i&gt;Git Source Code Mirror - This is a publish-only repository and all pull requests are ignored. Please follow Documentation/SubmittingPatches procedure for any of your improvements.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://dev.azure.com/git/git/_build/latest?definitionId=11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/254dd63d83b7a6d1406ce05d85b385b4d140801b/68747470733a2f2f6465762e617a7572652e636f6d2f6769742f6769742f5f617069732f6275696c642f7374617475732f6769742e676974" alt="Build Status" data-canonical-src="https://dev.azure.com/git/git/_apis/build/status/git.git" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-git---fast-scalable-distributed-revision-control-system" class="anchor" aria-hidden="true" href="#git---fast-scalable-distributed-revision-control-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git - fast, scalable, distributed revision control system&lt;/h1&gt;
&lt;p&gt;Git is a fast, scalable, distributed revision control system with an
unusually rich command set that provides both high-level operations
and full access to internals.&lt;/p&gt;
&lt;p&gt;Git is an Open Source project covered by the GNU General Public
License version 2 (some parts of it are under different licenses,
compatible with the GPLv2). It was originally written by Linus
Torvalds with help of a group of hackers around the net.&lt;/p&gt;
&lt;p&gt;Please read the file &lt;a href="INSTALL"&gt;INSTALL&lt;/a&gt; for installation instructions.&lt;/p&gt;
&lt;p&gt;Many Git online resources are accessible from &lt;a href="https://git-scm.com/" rel="nofollow"&gt;https://git-scm.com/&lt;/a&gt;
including full documentation and Git related tools.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/gittutorial.txt"&gt;Documentation/gittutorial.txt&lt;/a&gt; to get started, then see
&lt;a href="Documentation/giteveryday.txt"&gt;Documentation/giteveryday.txt&lt;/a&gt; for a useful minimum set of commands, and
&lt;code&gt;Documentation/git-&amp;lt;commandname&amp;gt;.txt&lt;/code&gt; for documentation of each command.
If git has been correctly installed, then the tutorial can also be
read with &lt;code&gt;man gittutorial&lt;/code&gt; or &lt;code&gt;git help tutorial&lt;/code&gt;, and the
documentation of each command with &lt;code&gt;man git-&amp;lt;commandname&amp;gt;&lt;/code&gt; or &lt;code&gt;git help &amp;lt;commandname&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;CVS users may also want to read &lt;a href="Documentation/gitcvs-migration.txt"&gt;Documentation/gitcvs-migration.txt&lt;/a&gt;
(&lt;code&gt;man gitcvs-migration&lt;/code&gt; or &lt;code&gt;git help cvs-migration&lt;/code&gt; if git is
installed).&lt;/p&gt;
&lt;p&gt;The user discussion and development of Git take place on the Git
mailing list -- everyone is welcome to post bug reports, feature
requests, comments and patches to &lt;a href="mailto:git@vger.kernel.org"&gt;git@vger.kernel.org&lt;/a&gt; (read
&lt;a href="Documentation/SubmittingPatches"&gt;Documentation/SubmittingPatches&lt;/a&gt; for instructions on patch submission).
To subscribe to the list, send an email with just "subscribe git" in
the body to &lt;a href="mailto:majordomo@vger.kernel.org"&gt;majordomo@vger.kernel.org&lt;/a&gt;. The mailing list archives are
available at &lt;a href="https://lore.kernel.org/git/" rel="nofollow"&gt;https://lore.kernel.org/git/&lt;/a&gt;,
&lt;a href="http://marc.info/?l=git" rel="nofollow"&gt;http://marc.info/?l=git&lt;/a&gt; and other archival sites.&lt;/p&gt;
&lt;p&gt;Issues which are security relevant should be disclosed privately to
the Git Security mailing list &lt;a href="mailto:git-security@googlegroups.com"&gt;git-security@googlegroups.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The maintainer frequently sends the "What's cooking" reports that
list the current status of various development topics to the mailing
list.  The discussion following them give a good reference for
project status, development direction and remaining tasks.&lt;/p&gt;
&lt;p&gt;The name "git" was given by Linus Torvalds when he wrote the very
first version. He described the tool as "the stupid content tracker"
and the name as (depending on your mood):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;random three-letter combination that is pronounceable, and not
actually used by any common UNIX command.  The fact that it is a
mispronunciation of "get" may or may not be relevant.&lt;/li&gt;
&lt;li&gt;stupid. contemptible and despicable. simple. Take your pick from the
dictionary of slang.&lt;/li&gt;
&lt;li&gt;"global information tracker": you're in a good mood, and it actually
works for you. Angels sing, and a light suddenly fills the room.&lt;/li&gt;
&lt;li&gt;"goddamn idiotic truckload of sh*t": when it breaks&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>git</author><guid isPermaLink="false">https://github.com/git/git</guid><pubDate>Sat, 01 Feb 2020 00:10:00 GMT</pubDate></item><item><title>swaywm/sway #11 in C, This month</title><link>https://github.com/swaywm/sway</link><description>&lt;p&gt;&lt;i&gt;i3-compatible Wayland compositor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sway" class="anchor" aria-hidden="true" href="#sway"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sway&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/swaywm/sway/blob/master/README.md#sway--"&gt;&lt;strong&gt;English&lt;/strong&gt;&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.ja.md#sway--"&gt;日本語&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.fr.md#sway--"&gt;Français&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.uk.md#sway--"&gt;Українська&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.es.md#sway--"&gt;Español&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.pl.md#sway--"&gt;Polski&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.zh-CN.md#sway--"&gt;中文-简体&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.de.md#sway--"&gt;Deutsch&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.nl.md#sway--"&gt;Nederlands&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.ru.md#sway--"&gt;Русский&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.zh-TW.md#sway--"&gt;中文-繁體&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.pt.md#sway--"&gt;Português&lt;/a&gt; - &lt;a href="https://github.com/swaywm/sway/blob/master/README.dk.md#sway--"&gt;Danish&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sway is an &lt;a href="https://i3wm.org/" rel="nofollow"&gt;i3&lt;/a&gt;-compatible &lt;a href="http://wayland.freedesktop.org/" rel="nofollow"&gt;Wayland&lt;/a&gt; compositor.
Read the &lt;a href="https://github.com/swaywm/sway/wiki"&gt;FAQ&lt;/a&gt;. Join the &lt;a href="http://webchat.freenode.net/?channels=sway&amp;amp;uio=d4" rel="nofollow"&gt;IRC
channel&lt;/a&gt; (#sway on
irc.freenode.net).&lt;/p&gt;
&lt;p&gt;If you'd like to support sway development, please contribute to &lt;a href="https://patreon.com/sircmpwn" rel="nofollow"&gt;SirCmpwn's
Patreon page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-release-signatures" class="anchor" aria-hidden="true" href="#release-signatures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Signatures&lt;/h2&gt;
&lt;p&gt;Releases are signed with &lt;a href="http://pgp.mit.edu/pks/lookup?op=vindex&amp;amp;search=0x52CB6609B22DA89A" rel="nofollow"&gt;B22DA89A&lt;/a&gt;
and published &lt;a href="https://github.com/swaywm/sway/releases"&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-from-packages" class="anchor" aria-hidden="true" href="#from-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From Packages&lt;/h3&gt;
&lt;p&gt;Sway is available in many distributions. Try installing the "sway" package for
yours. If it's not available, check out &lt;a href="https://github.com/swaywm/sway/wiki/Unsupported-packages"&gt;this wiki page&lt;/a&gt;
for information on installation for your distributions.&lt;/p&gt;
&lt;p&gt;If you're interested in packaging sway for your distribution, stop by the IRC
channel or shoot an email to &lt;a href="mailto:sir@cmpwn.com"&gt;sir@cmpwn.com&lt;/a&gt; for advice.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from Source&lt;/h3&gt;
&lt;p&gt;Install dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;meson *&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swaywm/wlroots"&gt;wlroots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;wayland&lt;/li&gt;
&lt;li&gt;wayland-protocols *&lt;/li&gt;
&lt;li&gt;pcre&lt;/li&gt;
&lt;li&gt;json-c&lt;/li&gt;
&lt;li&gt;pango&lt;/li&gt;
&lt;li&gt;cairo&lt;/li&gt;
&lt;li&gt;gdk-pixbuf2 (optional: system tray)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.sr.ht/~sircmpwn/scdoc" rel="nofollow"&gt;scdoc&lt;/a&gt; (optional: man pages) *&lt;/li&gt;
&lt;li&gt;git *&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;*Compile-time dep&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Run these commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;meson build
ninja -C build
sudo ninja -C build install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On systems without logind, you need to suid the sway binary:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo chmod a+s /usr/local/bin/sway
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sway will drop root permissions shortly after startup.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;If you already use i3, then copy your i3 config to &lt;code&gt;~/.config/sway/config&lt;/code&gt; and
it'll work out of the box. Otherwise, copy the sample configuration file to
&lt;code&gt;~/.config/sway/config&lt;/code&gt;. It is usually located at &lt;code&gt;/etc/sway/config&lt;/code&gt;.
Run &lt;code&gt;man 5 sway&lt;/code&gt; for information on the configuration.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running" class="anchor" aria-hidden="true" href="#running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running&lt;/h2&gt;
&lt;p&gt;Run &lt;code&gt;sway&lt;/code&gt; from a TTY. Some display managers may work but are not supported by
sway (gdm is known to work fairly well).&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>swaywm</author><guid isPermaLink="false">https://github.com/swaywm/sway</guid><pubDate>Sat, 01 Feb 2020 00:11:00 GMT</pubDate></item><item><title>torvalds/linux #12 in C, This month</title><link>https://github.com/torvalds/linux</link><description>&lt;p&gt;&lt;i&gt;Linux kernel source tree&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Linux kernel
============

There are several guides for kernel developers and users. These guides can
be rendered in a number of formats, like HTML and PDF. Please read
Documentation/admin-guide/README.rst first.

In order to build the documentation, use ``make htmldocs`` or
``make pdfdocs``.  The formatted documentation can also be read online at:

    &lt;a href="https://www.kernel.org/doc/html/latest/" rel="nofollow"&gt;https://www.kernel.org/doc/html/latest/&lt;/a&gt;

There are various text files in the Documentation/ subdirectory,
several of them using the Restructured Text markup notation.

Please read the Documentation/process/changes.rst file, as it contains the
requirements for building and running the kernel, and information about
the problems which may result by upgrading your kernel.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>torvalds</author><guid isPermaLink="false">https://github.com/torvalds/linux</guid><pubDate>Sat, 01 Feb 2020 00:12:00 GMT</pubDate></item><item><title>cfenollosa/os-tutorial #13 in C, This month</title><link>https://github.com/cfenollosa/os-tutorial</link><description>&lt;p&gt;&lt;i&gt;How to create an OS from scratch&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-os-tutorial" class="anchor" aria-hidden="true" href="#os-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;os-tutorial&lt;/h1&gt;
&lt;p&gt;How to create an OS from scratch!&lt;/p&gt;
&lt;p&gt;I have always wanted to learn how to make an OS from scratch. In college I was taught
how to implement advanced features (pagination, semaphores, memory management, etc)
but:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I never got to start from my own boot sector&lt;/li&gt;
&lt;li&gt;College is hard so I don't remember most of it.&lt;/li&gt;
&lt;li&gt;I'm fed up with people who think that reading an already existing kernel, even if small, is
a good idea to learn operating systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inspired by &lt;a href="http://www.cs.bham.ac.uk/~exr/lectures/opsys/10_11/lectures/os-dev.pdf" rel="nofollow"&gt;this document&lt;/a&gt;
and the &lt;a href="http://wiki.osdev.org/" rel="nofollow"&gt;OSDev wiki&lt;/a&gt;, I'll try to make short step-by-step READMEs and
code samples for anybody to follow. Honestly, this tutorial is basically the first document but
split into smaller pieces and without the theory.&lt;/p&gt;
&lt;p&gt;Updated: more sources: &lt;a href="https://littleosbook.github.io" rel="nofollow"&gt;the little book about OS development&lt;/a&gt;,
&lt;a href="https://web.archive.org/web/20160412174753/http://www.jamesmolloy.co.uk/tutorial_html/index.html" rel="nofollow"&gt;JamesM's kernel development tutorials&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This course is a code tutorial aimed at people who are comfortable with low level computing. For example,
programmers who have curiosity on how an OS works but don't have the time or willpower to start reading the Linux kernel
top to bottom.&lt;/li&gt;
&lt;li&gt;There is little theory. Yes, this is a feature. Google is your theory lecturer. Once you pass college,
excessive theory is worse than no theory because it makes things seem more difficult than they really are.&lt;/li&gt;
&lt;li&gt;The lessons are tiny and may take 5-15 minutes to complete. Trust me and trust yourself. You can do it!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use-this-tutorial" class="anchor" aria-hidden="true" href="#how-to-use-this-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use this tutorial&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Start with the first folder and go down in order. They build on previous code, so if
you jump right to folder 05 and don't know why there is a &lt;code&gt;mov ah, 0x0e&lt;/code&gt;, it's because you missed lecture 02.
Really, just go in order. You can always skip stuff you already know.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the README and read the first line, which details the concepts you should be familiar with
before reading the code. Google concepts you are not familiar with. The second line states the goals for each lesson.
Read them, because they explain why we do what we do. The "why" is as important as the "how".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read the rest of the README. It is &lt;strong&gt;very concise&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Try to write the code files by yourself after reading the README.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Look at the code examples. They are extremely well commented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Experiment with them and try to break things. The only way to make sure you understood something is
trying to break it or replicate it with different commands.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TL;DR: First read the README on each folder, then the code files. If you're brave, try to code them yourself.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-strategy" class="anchor" aria-hidden="true" href="#strategy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strategy&lt;/h2&gt;
&lt;p&gt;We will want to do many things with our OS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boot from scratch, without GRUB - DONE!&lt;/li&gt;
&lt;li&gt;Enter 32-bit mode - DONE&lt;/li&gt;
&lt;li&gt;Jump from Assembly to C - DONE!&lt;/li&gt;
&lt;li&gt;Interrupt handling - DONE!&lt;/li&gt;
&lt;li&gt;Screen output and keyboard input - DONE!&lt;/li&gt;
&lt;li&gt;A tiny, basic &lt;code&gt;libc&lt;/code&gt; which grows to suit our needs - DONE!&lt;/li&gt;
&lt;li&gt;Memory management&lt;/li&gt;
&lt;li&gt;Write a filesystem to store files&lt;/li&gt;
&lt;li&gt;Create a very simple shell&lt;/li&gt;
&lt;li&gt;User mode&lt;/li&gt;
&lt;li&gt;Maybe we will write a simple text editor&lt;/li&gt;
&lt;li&gt;Multiple processes and scheduling&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Probably we will go through them in that order, however it's soon to tell.&lt;/p&gt;
&lt;p&gt;If we feel brave enough:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A BASIC interpreter, like in the 70s!&lt;/li&gt;
&lt;li&gt;A GUI&lt;/li&gt;
&lt;li&gt;Networking&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;This is a personal learning project, and even though it hasn't been updated for a long time, I still have hopes to get into it at some point.&lt;/p&gt;
&lt;p&gt;I'm thankful to all those who have pointed out bugs and submitted pull requests. I will need some time to review everything and I cannot guarantee that at this moment.&lt;/p&gt;
&lt;p&gt;Please feel free to fork this repo. If many of you are interested in continuing the project, let me know and I'll link the "main fork" from here.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cfenollosa</author><guid isPermaLink="false">https://github.com/cfenollosa/os-tutorial</guid><pubDate>Sat, 01 Feb 2020 00:13:00 GMT</pubDate></item><item><title>espressif/esp-idf #14 in C, This month</title><link>https://github.com/espressif/esp-idf</link><description>&lt;p&gt;&lt;i&gt;Espressif IoT Development Framework. Official development framework for ESP32.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-espressif-iot-development-framework" class="anchor" aria-hidden="true" href="#espressif-iot-development-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Espressif IoT Development Framework&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./README_CN.md"&gt;中文版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1af20a2147d12aca36403d0181d88e229da2640f/68747470733a2f2f72656164746865646f63732e636f6d2f70726f6a656374732f6573707265737369662d6573702d6964662f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.com/projects/espressif-esp-idf/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP-IDF is the official development framework for the &lt;a href="https://espressif.com/en/products/hardware/esp32/overview" rel="nofollow"&gt;ESP32&lt;/a&gt; chip.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-developing-with-esp-idf" class="anchor" aria-hidden="true" href="#developing-with-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing With ESP-IDF&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-esp-idf" class="anchor" aria-hidden="true" href="#setting-up-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Up ESP-IDF&lt;/h2&gt;
&lt;p&gt;See setup guides for detailed instructions to set up the ESP-IDF:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/stable/get-started/" rel="nofollow"&gt;Getting Started Guide for the stable ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/" rel="nofollow"&gt;Getting Started Guide for the latest (master branch) ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-non-github-forks" class="anchor" aria-hidden="true" href="#non-github-forks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-GitHub forks&lt;/h3&gt;
&lt;p&gt;ESP-IDF uses relative locations as its submodules URLs (&lt;a href=".gitmodules"&gt;.gitmodules&lt;/a&gt;). So they link to GitHub.
If ESP-IDF is forked to a Git repository which is not on GitHub, you will need to run the script
&lt;a href="tools/set-submodules-to-github.sh"&gt;tools/set-submodules-to-github.sh&lt;/a&gt; after git clone.
The script sets absolute URLs for all submodules, allowing &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to complete.
If cloning ESP-IDF from GitHub, this step is not needed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-finding-a-project" class="anchor" aria-hidden="true" href="#finding-a-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finding a Project&lt;/h2&gt;
&lt;p&gt;As well as the &lt;a href="https://github.com/espressif/esp-idf-template"&gt;esp-idf-template&lt;/a&gt; project mentioned in Getting Started, ESP-IDF comes with some example projects in the &lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;p&gt;Once you've found the project you want to work with, change to its directory and you can configure and build it.&lt;/p&gt;
&lt;p&gt;To start your own project based on an example, copy the example project directory outside of the ESP-IDF directory.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-reference" class="anchor" aria-hidden="true" href="#quick-reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Reference&lt;/h1&gt;
&lt;p&gt;See the Getting Started guide links above for a detailed setup guide. This is a quick reference for common commands when working with ESP-IDF projects:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup-build-environment" class="anchor" aria-hidden="true" href="#setup-build-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup Build Environment&lt;/h2&gt;
&lt;p&gt;(See Getting Started guide for a full list of required steps with details.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install host build dependencies mentioned in Getting Started guide.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;tools/&lt;/code&gt; directory to the PATH&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;python -m pip install -r requirements.txt&lt;/code&gt; to install Python dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-the-project" class="anchor" aria-hidden="true" href="#configuring-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py menuconfig&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Opens a text-based configuration menu for the project.&lt;/li&gt;
&lt;li&gt;Use up &amp;amp; down arrow keys to navigate the menu.&lt;/li&gt;
&lt;li&gt;Use Enter key to go into a submenu, Escape key to go out or to exit.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;?&lt;/code&gt; to see a help screen. Enter key exits the help screen.&lt;/li&gt;
&lt;li&gt;Use Space key, or &lt;code&gt;Y&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; keys to enable (Yes) and disable (No) configuration items with checkboxes "&lt;code&gt;[*]&lt;/code&gt;"&lt;/li&gt;
&lt;li&gt;Pressing &lt;code&gt;?&lt;/code&gt; while highlighting a configuration item displays help about that item.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;/&lt;/code&gt; to search the configuration items.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once done configuring, press Escape multiple times to exit and say "Yes" to save the new configuration when prompted.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-the-project" class="anchor" aria-hidden="true" href="#compiling-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;... will compile app, bootloader and generate a partition table based on the config.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-flashing-the-project" class="anchor" aria-hidden="true" href="#flashing-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flashing the Project&lt;/h2&gt;
&lt;p&gt;When the build finishes, it will print a command line to use esptool.py to flash the chip. However you can also do this automatically by running:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py -p PORT flash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replace PORT with the name of your serial port (like &lt;code&gt;COM3&lt;/code&gt; on Windows, &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; on Linux, or &lt;code&gt;/dev/cu.usbserial-X&lt;/code&gt; on MacOS. If the &lt;code&gt;-p&lt;/code&gt; option is left out, &lt;code&gt;idf.py flash&lt;/code&gt; will try to flash the first available serial port.&lt;/p&gt;
&lt;p&gt;This will flash the entire project (app, bootloader and partition table) to a new chip. The settings for serial port flashing can be configured with &lt;code&gt;idf.py menuconfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You don't need to run &lt;code&gt;idf.py build&lt;/code&gt; before running &lt;code&gt;idf.py flash&lt;/code&gt;, &lt;code&gt;idf.py flash&lt;/code&gt; will automatically rebuild anything which needs it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-viewing-serial-output" class="anchor" aria-hidden="true" href="#viewing-serial-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Viewing Serial Output&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py monitor&lt;/code&gt; target uses the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;idf_monitor tool&lt;/a&gt; to display serial output from the ESP32. idf_monitor also has a range of features to decode crash output and interact with the device. &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;Check the documentation page for details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exit the monitor by typing Ctrl-].&lt;/p&gt;
&lt;p&gt;To build, flash and monitor output in one pass, you can run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py flash monitor&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling--flashing-only-the-app" class="anchor" aria-hidden="true" href="#compiling--flashing-only-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling &amp;amp; Flashing Only the App&lt;/h2&gt;
&lt;p&gt;After the initial flash, you may just want to build and flash just your app, not the bootloader and partition table:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;idf.py app&lt;/code&gt; - build just the app.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; - flash just the app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; will automatically rebuild the app if any source files have changed.&lt;/p&gt;
&lt;p&gt;(In normal development there's no downside to reflashing the bootloader and partition table each time, if they haven't changed.)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-erasing-flash" class="anchor" aria-hidden="true" href="#erasing-flash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Erasing Flash&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py flash&lt;/code&gt; target does not erase the entire flash contents. However it is sometimes useful to set the device back to a totally erased state, particularly when making partition table changes or OTA app updates. To erase the entire flash, run &lt;code&gt;idf.py erase_flash&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This can be combined with other targets, ie &lt;code&gt;idf.py -p PORT erase_flash flash&lt;/code&gt; will erase everything and then re-flash the new app, bootloader and partition table.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Documentation for the latest version: &lt;a href="https://docs.espressif.com/projects/esp-idf/" rel="nofollow"&gt;https://docs.espressif.com/projects/esp-idf/&lt;/a&gt;. This documentation is built from the &lt;a href="docs"&gt;docs directory&lt;/a&gt; of this repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://esp32.com/" rel="nofollow"&gt;esp32.com forum&lt;/a&gt; is a place to ask questions and find community resources.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/esp-idf/issues"&gt;Check the Issues section on github&lt;/a&gt; if you find a bug or have a feature request. Please check existing Issues before opening a new one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're interested in contributing to ESP-IDF, please check the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/contribute/index.html" rel="nofollow"&gt;Contributions Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/esp-idf</guid><pubDate>Sat, 01 Feb 2020 00:14:00 GMT</pubDate></item><item><title>freebsd/freebsd #15 in C, This month</title><link>https://github.com/freebsd/freebsd</link><description>&lt;p&gt;&lt;i&gt;FreeBSD src tree (read-only mirror)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-freebsd-source" class="anchor" aria-hidden="true" href="#freebsd-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FreeBSD Source:&lt;/h2&gt;
&lt;p&gt;This is the top level of the FreeBSD source directory.  This file
was last revised on:
$FreeBSD$&lt;/p&gt;
&lt;p&gt;FreeBSD is an operating system used to power modern servers,
desktops, and embedded platforms. A large community has
continually developed it for more than thirty years. Its
advanced networking, security, and storage features have
made FreeBSD the platform of choice for many of the
busiest web sites and most pervasive embedded networking
and storage devices.&lt;/p&gt;
&lt;p&gt;For copyright information, please see the file COPYRIGHT in this
directory. Additional copyright information also exists for some
sources in this tree - please see the specific source directories for
more information.&lt;/p&gt;
&lt;p&gt;The Makefile in this directory supports a number of targets for
building components (or all) of the FreeBSD source tree.  See build(7), config(8),
&lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/makeworld.html" rel="nofollow"&gt;https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/makeworld.html&lt;/a&gt;, and
&lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/kernelconfig.html" rel="nofollow"&gt;https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/kernelconfig.html&lt;/a&gt;
for more information, including setting make(1) variables.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-source-roadmap" class="anchor" aria-hidden="true" href="#source-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Roadmap:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;bin		System/user commands.

cddl		Various commands and libraries under the Common Development
		and Distribution License.

contrib		Packages contributed by 3rd parties.

crypto		Cryptography stuff (see crypto/README).

etc		Template files for /etc.

gnu		Various commands and libraries under the GNU Public License.
		Please see gnu/COPYING* for more information.

include		System include files.

kerberos5	Kerberos5 (Heimdal) package.

lib		System libraries.

libexec		System daemons.

release		Release building Makefile &amp;amp; associated tools.

rescue		Build system for statically linked /rescue utilities.

sbin		System commands.

secure		Cryptographic libraries and commands.

share		Shared resources.

stand		Boot loader sources.

sys		Kernel sources.

sys/&amp;lt;arch&amp;gt;/conf Kernel configuration files. GENERIC is the configuration
		used in release builds. NOTES contains documentation of
		all possible entries.

tests		Regression tests which can be run by Kyua.  See tests/README
		for additional information.

tools		Utilities for regression testing and miscellaneous tasks.

usr.bin		User commands.

usr.sbin	System administration commands.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For information on synchronizing your source tree with one or more of
the FreeBSD Project's development branches, please see:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/current-stable.html" rel="nofollow"&gt;https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/current-stable.html&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>freebsd</author><guid isPermaLink="false">https://github.com/freebsd/freebsd</guid><pubDate>Sat, 01 Feb 2020 00:15:00 GMT</pubDate></item><item><title>qmk/qmk_firmware #16 in C, This month</title><link>https://github.com/qmk/qmk_firmware</link><description>&lt;p&gt;&lt;i&gt;Open-source keyboard firmware for Atmel AVR and Arm USB families&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-quantum-mechanical-keyboard-firmware" class="anchor" aria-hidden="true" href="#quantum-mechanical-keyboard-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quantum Mechanical Keyboard Firmware&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/qmk/qmk_firmware/tags"&gt;&lt;img src="https://camo.githubusercontent.com/005a8cc5adfcc19206d618115380a09cb3314d22/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f716d6b2f716d6b5f6669726d776172652e737667" alt="Current Version" data-canonical-src="https://img.shields.io/github/tag/qmk/qmk_firmware.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/qmk/qmk_firmware" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4147250bb924409bf797c2744c1d826a25e079c2/68747470733a2f2f7472617669732d63692e6f72672f716d6b2f716d6b5f6669726d776172652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/qmk/qmk_firmware.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/Uq7gcHh" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e83c9cf50c33b3ed75d93292d04e936fe12a764f/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3434303836383233303437353637373639362e737667" alt="Discord" data-canonical-src="https://img.shields.io/discord/440868230475677696.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://docs.qmk.fm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9f9a5acb55cfde5f5ec8d5c8fce65d87936e78b5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d72656164792d6f72616e67652e737667" alt="Docs Status" data-canonical-src="https://img.shields.io/badge/docs-ready-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/qmk/qmk_firmware/pulse/monthly"&gt;&lt;img src="https://camo.githubusercontent.com/d673a6b1f5c8471666f790b34e5692e2f40758ca/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f716d6b2f716d6b5f6669726d776172652e737667" alt="GitHub contributors" data-canonical-src="https://img.shields.io/github/contributors/qmk/qmk_firmware.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/qmk/qmk_firmware/"&gt;&lt;img src="https://camo.githubusercontent.com/ce360857e992e3080431dd31c3b30d73e78d7ce0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f716d6b2f716d6b5f6669726d776172652e7376673f7374796c653d736f6369616c266c6162656c3d466f726b" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/qmk/qmk_firmware.svg?style=social&amp;amp;label=Fork" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a keyboard firmware based on the &lt;a href="https://github.com/tmk/tmk_keyboard"&gt;tmk_keyboard firmware&lt;/a&gt; with some useful features for Atmel AVR and ARM controllers, and more specifically, the &lt;a href="https://olkb.com" rel="nofollow"&gt;OLKB product line&lt;/a&gt;, the &lt;a href="https://ergodox-ez.com" rel="nofollow"&gt;ErgoDox EZ&lt;/a&gt; keyboard, and the &lt;a href="https://clueboard.co" rel="nofollow"&gt;Clueboard product line&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.qmk.fm" rel="nofollow"&gt;See the official documentation on docs.qmk.fm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The docs are powered by &lt;a href="https://docsify.js.org/" rel="nofollow"&gt;Docsify&lt;/a&gt; and hosted on &lt;a href="/docs/"&gt;GitHub&lt;/a&gt;. They are also viewable offline; see &lt;a href="https://docs.qmk.fm/#/contributing?id=previewing-the-documentation" rel="nofollow"&gt;Previewing the Documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;You can request changes by making a fork and opening a &lt;a href="https://github.com/qmk/qmk_firmware/pulls"&gt;pull request&lt;/a&gt;, or by clicking the "Edit this page" link at the bottom of any page.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-keyboards" class="anchor" aria-hidden="true" href="#supported-keyboards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Keyboards&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/keyboards/planck/"&gt;Planck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/preonic/"&gt;Preonic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/ergodox_ez/"&gt;ErgoDox EZ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/clueboard/"&gt;Clueboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/clueboard/17/"&gt;Cluepad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/atreus/"&gt;Atreus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The project also includes community support for &lt;a href="/keyboards/"&gt;lots of other keyboards&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-maintainers" class="anchor" aria-hidden="true" href="#maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainers&lt;/h2&gt;
&lt;p&gt;QMK is developed and maintained by Jack Humbert of OLKB with contributions from the community, and of course, &lt;a href="https://github.com/tmk"&gt;Hasu&lt;/a&gt;. The OLKB product firmwares are maintained by &lt;a href="https://github.com/jackhumbert"&gt;Jack Humbert&lt;/a&gt;, the Ergodox EZ by &lt;a href="https://github.com/zsa"&gt;ZSA Technology Labs&lt;/a&gt;, the Clueboard by &lt;a href="https://github.com/skullydazed"&gt;Zach White&lt;/a&gt;, and the Atreus by &lt;a href="https://github.com/technomancy"&gt;Phil Hagelberg&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-official-website" class="anchor" aria-hidden="true" href="#official-website"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Website&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://qmk.fm" rel="nofollow"&gt;qmk.fm&lt;/a&gt; is the official website of QMK, where you can find links to this page, the documentation, and the keyboards supported by QMK.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>qmk</author><guid isPermaLink="false">https://github.com/qmk/qmk_firmware</guid><pubDate>Sat, 01 Feb 2020 00:16:00 GMT</pubDate></item><item><title>wine-mirror/wine #17 in C, This month</title><link>https://github.com/wine-mirror/wine</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;1. INTRODUCTION

Wine is a program which allows running Microsoft Windows programs
(including DOS, Windows 3.x, Win32, and Win64 executables) on Unix.
It consists of a program loader which loads and executes a Microsoft
Windows binary, and a library (called Winelib) that implements Windows
API calls using their Unix, X11 or Mac equivalents.  The library may also
be used for porting Windows code into native Unix executables.

Wine is free software, released under the GNU LGPL; see the file
LICENSE for the details.


2. QUICK START

From the top-level directory of the Wine source (which contains this file),
run:

./configure
make

Then either install Wine:

make install

Or run Wine directly from the build directory:

./wine notepad

Run programs as "wine program".  For more information and problem
resolution, read the rest of this file, the Wine man page, and
especially the wealth of information found at &lt;a href="https://www.winehq.org" rel="nofollow"&gt;https://www.winehq.org&lt;/a&gt;.


3. REQUIREMENTS

To compile and run Wine, you must have one of the following:

  Linux version 2.0.36 or later
  FreeBSD 8.0 or later
  Solaris x86 9 or later
  NetBSD-current
  Mac OS X 10.5 or later

As Wine requires kernel-level thread support to run, only the operating
systems mentioned above are supported.  Other operating systems which
support kernel threads may be supported in the future.

FreeBSD info:
  Wine will generally not work properly on versions before FreeBSD 8.0.
  See &lt;a href="https://wiki.freebsd.org/Wine" rel="nofollow"&gt;https://wiki.freebsd.org/Wine&lt;/a&gt; for more information.

Solaris info:
  You will most likely need to build Wine with the GNU toolchain
  (gcc, gas, etc.). Warning : installing gas does *not* ensure that it
  will be used by gcc. Recompiling gcc after installing gas or
  symlinking cc, as and ld to the gnu tools is said to be necessary.

NetBSD info:
  Make sure you have the USER_LDT, SYSVSHM, SYSVSEM, and SYSVMSG options
  turned on in your kernel.

Mac OS X info:
  You need Xcode 2.4 or later to build properly on x86.
  The Mac driver requires OS X 10.6 or later and won't be built on 10.5.


Supported file systems:
  Wine should run on most file systems. A few compatibility problems
  have also been reported using files accessed through Samba. Also,
  NTFS does not provide all the file system features needed by some
  applications.  Using a native Unix file system is recommended.

Basic requirements:
  You need to have the X11 development include files installed
  (called xlib6g-dev in Debian and XFree86-devel in Red Hat).

  Of course you also need "make" (most likely GNU make).

  You also need flex version 2.5.33 or later and bison.

Optional support libraries:
  Configure will display notices when optional libraries are not found
  on your system. See &lt;a href="https://wiki.winehq.org/Recommended_Packages" rel="nofollow"&gt;https://wiki.winehq.org/Recommended_Packages&lt;/a&gt; for
  hints about the packages you should install. On 64-bit platforms,
  you have to make sure to install the 32-bit versions of these
  libraries.


4. COMPILATION

To build Wine, do:

./configure
make

This will build the program "wine" and numerous support libraries/binaries.
The program "wine" will load and run Windows executables.
The library "libwine" ("Winelib") can be used to compile and link
Windows source code under Unix.

To see compile configuration options, do ./configure --help.

For more information, see &lt;a href="https://wiki.winehq.org/Building_Wine" rel="nofollow"&gt;https://wiki.winehq.org/Building_Wine&lt;/a&gt;


5. SETUP

Once Wine has been built correctly, you can do "make install"; this
will install the wine executable and libraries, the Wine man page, and
other needed files.

Don't forget to uninstall any conflicting previous Wine installation
first.  Try either "dpkg -r wine" or "rpm -e wine" or "make uninstall"
before installing.

Once installed, you can run the "winecfg" configuration tool. See the
Support area at &lt;a href="https://www.winehq.org/" rel="nofollow"&gt;https://www.winehq.org/&lt;/a&gt; for configuration hints.


6. RUNNING PROGRAMS

When invoking Wine, you may specify the entire path to the executable,
or a filename only.

For example: to run Notepad:

    wine notepad            (using the search Path as specified in
    wine notepad.exe         the registry to locate the file)

    wine c:\\windows\\notepad.exe      (using DOS filename syntax)

    wine ~/.wine/drive_c/windows/notepad.exe  (using Unix filename syntax)

    wine notepad.exe readme.txt          (calling program with parameters)

Wine is not perfect, so some programs may crash. If that happens you
will get a crash log that you should attach to your report when filing
a bug.


7. GETTING MORE INFORMATION

WWW:	A great deal of information about Wine is available from WineHQ at
	&lt;a href="https://www.winehq.org/" rel="nofollow"&gt;https://www.winehq.org/&lt;/a&gt; : various Wine Guides, application database,
	bug tracking. This is probably the best starting point.

FAQ:	The Wine FAQ is located at &lt;a href="https://www.winehq.org/FAQ" rel="nofollow"&gt;https://www.winehq.org/FAQ&lt;/a&gt;

Wiki:	The Wine Wiki is located at &lt;a href="https://wiki.winehq.org" rel="nofollow"&gt;https://wiki.winehq.org&lt;/a&gt;

Mailing lists:
	There are several mailing lists for Wine users and developers;
	see &lt;a href="https://www.winehq.org/forums" rel="nofollow"&gt;https://www.winehq.org/forums&lt;/a&gt; for more information.

Bugs:	Report bugs to Wine Bugzilla at &lt;a href="https://bugs.winehq.org" rel="nofollow"&gt;https://bugs.winehq.org&lt;/a&gt;
	Please search the bugzilla database to check whether your
	problem is already known or fixed before posting a bug report.

IRC:	Online help is available at channel #WineHQ on irc.freenode.net.

Git:	The current Wine development tree is available through Git.
	Go to &lt;a href="https://www.winehq.org/git" rel="nofollow"&gt;https://www.winehq.org/git&lt;/a&gt; for more information.

If you add something, or fix a bug, please send a patch (preferably
using git-format-patch) to the wine-devel@winehq.org list for
inclusion in the next release.

--
Alexandre Julliard
julliard@winehq.org
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>wine-mirror</author><guid isPermaLink="false">https://github.com/wine-mirror/wine</guid><pubDate>Sat, 01 Feb 2020 00:17:00 GMT</pubDate></item><item><title>Ralim/ts100 #18 in C, This month</title><link>https://github.com/Ralim/ts100</link><description>&lt;p&gt;&lt;i&gt;The Feature Packed Alternate Open Source firmware for the TS100 iron by miniware.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://app.codeship.com/projects/379118" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7e054bd15504441a697afdfb9d3150aee847ed3/68747470733a2f2f6170702e636f6465736869702e636f6d2f70726f6a656374732f63373764626665302d303736342d303133382d393532302d3365623335626462326232632f7374617475733f6272616e63683d6d6173746572" alt="Codeship Status for ts100" data-canonical-src="https://app.codeship.com/projects/c77dbfe0-0764-0138-9520-3eb35bdb2b2c/status?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-ts100--ts80-firmware" class="anchor" aria-hidden="true" href="#ts100--ts80-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TS100 &amp;amp; TS80 Firmware&lt;/h1&gt;
&lt;p&gt;This firmware is a fresh start for these soldering irons. Designed from the ground up as fully featured control software that leaves nothing to be desired.
It originally started back at the end of 2016 and has since seen vast improvements, especially some very smart work by community members.&lt;/p&gt;
&lt;p&gt;The firmware supports everything you would expect in the soldering iron and has the same features as the stock firmware with some nice extras packed in.
There is a comprehensive menu system in the iron that allows for adjustment of all the settings on the unit, and support for various languages is added by the community.&lt;/p&gt;
&lt;p&gt;On the TS100 there are settings to allow you to specify a cutoff voltage for different lithium-ion battery packs to protect your power source.
For the TS80 these are removed and replaced with the selection of 18W or 24W depending on what your QC power bank can support.
Otherwise, both systems work very similar and should support all the features.&lt;/p&gt;
&lt;p&gt;This project is considered feature complete for use as a soldering iron, &lt;em&gt;so please suggest any feature improvements you would like!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This firmware does &lt;strong&gt;NOT&lt;/strong&gt; support the USB port while running for changing settings. This is done through the onscreen menu only. Logos are edited using the tool or python script and uploaded in DFU mode.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-core-features" class="anchor" aria-hidden="true" href="#core-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;PID iron temperature control&lt;/li&gt;
&lt;li&gt;Automatic sleep with selectable sensitivity&lt;/li&gt;
&lt;li&gt;Motion wake support&lt;/li&gt;
&lt;li&gt;Settings menu on the unit&lt;/li&gt;
&lt;li&gt;(TS100) Set a voltage lower limit for Lithium batteries so you don't kill your battery pack&lt;/li&gt;
&lt;li&gt;(TS80 ) Set 18W or 24W settings for your power bank&lt;/li&gt;
&lt;li&gt;All settings saved to flash when you exit the menu&lt;/li&gt;
&lt;li&gt;Improved readability Fonts&lt;/li&gt;
&lt;li&gt;Use hardware features to improve reliability&lt;/li&gt;
&lt;li&gt;Can disable movement detection if desired&lt;/li&gt;
&lt;li&gt;Full tip profile calibration&lt;/li&gt;
&lt;li&gt;Boost mode lets you temporarily change the temperature when soldering (ie raise the temperature for short periods of time)&lt;/li&gt;
&lt;li&gt;(TS100) Battery charge level indicator if power source set to a lipo cell count&lt;/li&gt;
&lt;li&gt;(TS80) Power bank operating voltage is displayed&lt;/li&gt;
&lt;li&gt;Custom boot up logo support&lt;/li&gt;
&lt;li&gt;Automatic LCD rotation based on the orientation&lt;/li&gt;
&lt;li&gt;Supports both the version 1 and version 2 hardware (different accelerometers)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-upgrading-your-iron" class="anchor" aria-hidden="true" href="#upgrading-your-iron"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrading your iron&lt;/h1&gt;
&lt;p&gt;This is completely safe, but if it goes wrong just put the .hex file from the official website onto the unit and you're back to the old firmware. Downloads for the hex files to flash are available on the &lt;a href="https://github.com/Ralim/ts100/releases"&gt;releases page.&lt;/a&gt; The file you want is called &lt;em&gt;(MODEL)_EN.hex&lt;/em&gt; unless you want the translations, they are (MODEL)_&lt;em&gt;language short name&lt;/em&gt;.hex. Where (MODEL) is either TS100 or TS80.&lt;/p&gt;
&lt;p&gt;Officially the bootloader on the iron only works under Windows. However, users have reported that it does work under Mac, and can be made to work under Linux &lt;em&gt;sometimes&lt;/em&gt;. Details over on the &lt;a href="https://github.com/Ralim/ts100/wiki/Upgrading-Firmware"&gt;wiki page&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. Hold the button closest to the tip, and plug in the USB to the computer.
2. The unit will appear as a USB drive.
3. Drag the .hex file onto the USB drive.
4. The unit will disconnect and reconnect.
5. The filename will have changed to end in .RDY or .ERR
6. If it ends with .RDY you're done! Otherwise, something went wrong.
7. If it didn't work the first time, try copying the file again without disconnecting the iron, often it will work on the second shot.
8. Disconnect the USB and power up the iron. You're good to go.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For the more adventurous out there, you can also load this firmware onto the device using an SWD programmer.
On the bottom of the MCU riser PCB, there are 4 pads for programming.
There is a complete device flash backup included in this repository. (Note this includes the bootloader, so will need an SWD programmer to load onto the unit).
For the TS80 the SWD pins are used for the QC negotiation, so you can actually connect to the SWD power via the USB connector.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setting-a-custom-bootup-image" class="anchor" aria-hidden="true" href="#setting-a-custom-bootup-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting a custom bootup image&lt;/h2&gt;
&lt;p&gt;This firmware uses a different method of updating the bootup image.
This removes the need for emulating a USB drive on the iron just to allow for a bootup image to be setup.
There are further instructions on the &lt;a href="https://github.com/Ralim/ts100/wiki/Logo-Editor"&gt;wiki&lt;/a&gt;.
Instructions are kept on the wiki so that users can update the information if they find extra helpful information.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-menu-system" class="anchor" aria-hidden="true" href="#menu-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Menu System&lt;/h1&gt;
&lt;p&gt;This new firmware uses a new menu system to allow access to the settings on the device.
When on the main screen, the unit shows prompts for the two most common operations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pressing the button near the tip enters soldering mode&lt;/li&gt;
&lt;li&gt;Pressing the button near the USB enters the settings menu&lt;/li&gt;
&lt;li&gt;Holding the button near the tip will enter soldering temperature adjust mode (This is the same as the one in the soldering menu, just to let you edit before heating up)&lt;/li&gt;
&lt;li&gt;Holding the button near the USB end will show the firmware version details&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details are over in the &lt;a href="menu.md"&gt;Menu information.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;p&gt;If you love this firmware and want to continue my caffeine addiction, you can do so here (or email me for other options) : &lt;a href="https://paypal.me/RalimTek" rel="nofollow"&gt;https://paypal.me/RalimTek&lt;/a&gt;
I also want to give a shout out to all of the &lt;a href="https://github.com/Ralim/ts100/graphs/contributors"&gt;Fantastic Contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Especially to the following users, who have helped in various ways that are massively appreciated:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dhiltonp"&gt;dhiltonp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mrkvozrout"&gt;Mrkvozrout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonnieZG"&gt;jonnieZG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/federck"&gt;federck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jvitkauskas"&gt;jvitkauskas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/doegox"&gt;doegox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/perillamint"&gt;perillamint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-licence" class="anchor" aria-hidden="true" href="#licence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licence&lt;/h2&gt;
&lt;p&gt;The code in this repository that is based on the STM tools is under a BSD-like licence.
The code created by the community is GNU GPLv3. Unless noted elsewhere.
The FreeRToS is under its own licence.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-commercial-use" class="anchor" aria-hidden="true" href="#commercial-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commercial Use&lt;/h2&gt;
&lt;p&gt;This software is provided as-is, so I cannot provide any commercial support for the firmware. However, you are more than welcome to distribute links to the firmware, or provide irons with this software on them.
Please do not re-host the files, but rather link to this page, so that there are no old versions of the firmware scattered around. If this firmware does make you money, it would be nice to receive a donation, however, there is no enforcement.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Ralim</author><guid isPermaLink="false">https://github.com/Ralim/ts100</guid><pubDate>Sat, 01 Feb 2020 00:18:00 GMT</pubDate></item><item><title>stedolan/jq #19 in C, This month</title><link>https://github.com/stedolan/jq</link><description>&lt;p&gt;&lt;i&gt;Command-line JSON processor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jq" class="anchor" aria-hidden="true" href="#jq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;jq&lt;/h1&gt;
&lt;p&gt;jq is a lightweight and flexible command-line JSON processor.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://coveralls.io/github/stedolan/jq?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5710e0e1008f2f4eebcd871b87ad45eea03258f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f737465646f6c616e2f6a712f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/stedolan/jq/badge.svg?branch=master&amp;amp;service=github" style="max-width:100%;"&gt;&lt;/a&gt;,
Unix: &lt;a href="https://travis-ci.org/stedolan/jq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e226cc6f5540288a6af72c7759699df5bca13da9/68747470733a2f2f7472617669732d63692e6f72672f737465646f6c616e2f6a712e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/stedolan/jq.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;,
Windows: &lt;a href="https://ci.appveyor.com/project/stedolan/jq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15fdc82ece0d9148413288432a646b5ef2589adb/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d69383136383131633965396d7832393f7376673d74727565" alt="Windows build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/mi816811c9e9mx29?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to learn to use jq, read the documentation at
&lt;a href="https://stedolan.github.io/jq" rel="nofollow"&gt;https://stedolan.github.io/jq&lt;/a&gt;.  This
documentation is generated from the docs/ folder of this repository.
You can also try it online at &lt;a href="https://jqplay.org" rel="nofollow"&gt;jqplay.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to hack on jq, feel free, but be warned that its internals
are not well-documented at the moment. Bring a hard hat and a
shovel.  Also, read the wiki: &lt;a href="https://github.com/stedolan/jq/wiki"&gt;https://github.com/stedolan/jq/wiki&lt;/a&gt;, where
you will find cookbooks, discussion of advanced topics, internals,
release engineering, and more.&lt;/p&gt;
&lt;p&gt;Source tarball and built executable releases can be found on the
homepage and on the github release page, &lt;a href="https://github.com/stedolan/jq/releases"&gt;https://github.com/stedolan/jq/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're building directly from the latest git, you'll need flex,
bison (3.0 or newer), libtool, make, automake, and autoconf installed.
To get regexp support you'll also need to install Oniguruma or clone it as a
git submodule as per the instructions below.
(note that jq's tests require regexp support to pass).  To build, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git submodule update --init # if building from git to get oniguruma
autoreconf -fi              # if building from git
./configure --with-oniguruma=builtin
make -j8
make check
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build without bison or flex, add &lt;code&gt;--disable-maintainer-mode&lt;/code&gt; to the
./configure invocation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-oniguruma=builtin --disable-maintainer-mode
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Developers must not use &lt;code&gt;--disable-maintainer-mode&lt;/code&gt;, not when making
changes to the jq parser and/or lexer.)&lt;/p&gt;
&lt;p&gt;To build a statically linked version of jq, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make LDFLAGS=-all-static
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After make finishes, you'll be able to use &lt;code&gt;./jq&lt;/code&gt;.  You can also
install it using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you're not using the latest git version but instead building a
released tarball (available on the website), then you won't need to
run &lt;code&gt;autoreconf&lt;/code&gt; (and shouldn't), and you won't need flex or bison.&lt;/p&gt;
&lt;p&gt;To cross-compile for OS X and Windows, see docs/Rakefile's build task
and scripts/crosscompile.  You'll need a cross-compilation environment,
such as Mingw for cross-compiling for Windows.&lt;/p&gt;
&lt;p&gt;Cross-compilation requires a clean workspace, then:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# git clean ...
autoreconf -i
./configure
make distclean
scripts/crosscompile &amp;lt;name-of-build&amp;gt; &amp;lt;configure-options&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use the &lt;code&gt;--host=&lt;/code&gt; and &lt;code&gt;--target=&lt;/code&gt; ./configure options to select a
cross-compilation environment.  See also
&lt;a href="https://github.com/stedolan/jq/wiki/Cross-compilation"&gt;"Cross compilation"&lt;/a&gt; on
the wiki.&lt;/p&gt;
&lt;p&gt;Send questions to &lt;a href="https://stackoverflow.com/questions/tagged/jq" rel="nofollow"&gt;https://stackoverflow.com/questions/tagged/jq&lt;/a&gt; or to the #jq channel (&lt;a href="http://irc.lc/freenode/%23jq/" rel="nofollow"&gt;http://irc.lc/freenode/%23jq/&lt;/a&gt;) on Freenode (&lt;a href="https://webchat.freenode.net/" rel="nofollow"&gt;https://webchat.freenode.net/&lt;/a&gt;).&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>stedolan</author><guid isPermaLink="false">https://github.com/stedolan/jq</guid><pubDate>Sat, 01 Feb 2020 00:19:00 GMT</pubDate></item><item><title>zdharma/zinit #20 in C, This month</title><link>https://github.com/zdharma/zinit</link><description>&lt;p&gt;&lt;i&gt;Flexible Zsh plugin manager with clean fpath, reports, completion management, turbo mode, annexes, services, packages&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://www.paypal.me/ZdharmaInitiative" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6bbee78d610b9d7c300d515e9d6d78d879e59d7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d446f6e6174652d79656c6c6f772e7376673f6c6f6e6743616368653d74727565267374796c653d666f722d7468652d6261646765" alt="paypal" data-canonical-src="https://img.shields.io/badge/-Donate-yellow.svg?longCache=true&amp;amp;style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=D54B3S7C6HGME" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="paypal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.patreon.com/psprint" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7030366454b936b1db9ddd95af0882caccabd194/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d50617472656f6e2d6f72616e67652e7376673f6c6f6e6743616368653d74727565267374796c653d666f722d7468652d6261646765" alt="patreon" data-canonical-src="https://img.shields.io/badge/-Patreon-orange.svg?longCache=true&amp;amp;style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;New: You can request a feature when donating, even fancy or advanced ones get implemented this way. &lt;a href="DONATIONS.md"&gt;There are
reports&lt;/a&gt; about what is being done with the money received.&lt;/p&gt;
&lt;h2 align="center"&gt;&lt;a id="user-content-the-project-undergoes-a-name-change-from-zplugin-to-zinit" class="anchor" aria-hidden="true" href="#the-project-undergoes-a-name-change-from-zplugin-to-zinit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The project undergoes a name change from Zplugin to Zinit.&lt;/h2&gt;
&lt;h2 align="center"&gt;&lt;a id="user-content-please-report-any-observed-issues" class="anchor" aria-hidden="true" href="#please-report-any-observed-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Please report any observed issues.&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/zdharma/zinit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ad253895e256949e208c481ab80fdb08a95dddc/68747470733a2f2f7472617669732d63692e6f72672f7a646861726d612f7a696e69742e7376673f6272616e63683d6d6173746572" alt="Status" data-canonical-src="https://travis-ci.org/zdharma/zinit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="./LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/zdharma/zinit/releases"&gt;&lt;img src="https://camo.githubusercontent.com/2af43f1448bf8c3e4a23f896c5e3457dd511d4c3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f7a646861726d612f7a696e69742e737667" alt="" data-canonical-src="https://img.shields.io/github/tag/zdharma/zinit.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/01fc177fb531a116255dd4e1937a78e1873a228b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f792f7a646861726d612f7a696e69742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/01fc177fb531a116255dd4e1937a78e1873a228b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f792f7a646861726d612f7a696e69742e737667" alt="" data-canonical-src="https://img.shields.io/github/commit-activity/y/zdharma/zinit.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/zdharma/zinit?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c54a31d91510766b0e6c0b7584ec67c3dd1cb431/68747470733a2f2f6261646765732e6769747465722e696d2f7a646861726d612f7a696e69742e737667" alt="Join the chat at https://gitter.im/zdharma/zinit" data-canonical-src="https://badges.gitter.im/zdharma/zinit.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;  &lt;em&gt;generated with &lt;a href="https://github.com/thlorenz/doctoc"&gt;DocToc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#news"&gt;News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zinit"&gt;Zinit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zinit-wiki"&gt;Zinit Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#option-1---automatic-installation-recommended"&gt;Option 1 - Automatic Installation (Recommended)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#option-2---manual-installation"&gt;Option 2 - Manual Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example-usage"&gt;Example Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ice-modifiers"&gt;Ice Modifiers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zinit-commands"&gt;Zinit Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#updating-zinit-and-plugins"&gt;Updating Zinit and Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-oh-my-zsh-themes"&gt;Using Oh My Zsh Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#completions"&gt;Completions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#calling-compinit-without-turbo-mode"&gt;Calling &lt;code&gt;compinit&lt;/code&gt; Without Turbo Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calling-compinit-with-turbo-mode"&gt;Calling &lt;code&gt;compinit&lt;/code&gt; With Turbo Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ignoring-compdefs"&gt;Ignoring Compdefs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#disabling-system-wide-compinit-call-ubuntu"&gt;Disabling System-Wide &lt;code&gt;compinit&lt;/code&gt; Call (Ubuntu)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#zinit-module"&gt;Zinit Module&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#motivation"&gt;Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-1"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#measuring-time-of-sources"&gt;Measuring Time of &lt;code&gt;source&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#hints-and-tips"&gt;Hints and Tips&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#customizing-paths"&gt;Customizing Paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#non-github-local-plugins"&gt;Non-GitHub (Local) Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extending-git"&gt;Extending Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#preinstalling-plugins"&gt;Preinstalling Plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help-and-community"&gt;Getting Help and Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h1&gt;
&lt;details&gt;
  &lt;summary&gt;Here are the new features and updates added to zinit in the last 90 days.&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;21-01-2020&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A few tips for the project rename following the field reports (the issues created
by users):
&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;ZPLGM&lt;/code&gt; hash is now &lt;code&gt;ZINIT&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;the annexes are moved under &lt;a href="https://github.com/zinit-zsh"&gt;zinit-zsh&lt;/a&gt;
organization (it needs a logo, could you create one, if you're skilled in
graphics?).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;19-01-2020&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The name has been changed to &lt;strong&gt;Zinit&lt;/strong&gt; based on the results of the
&lt;a href="https://github.com/zdharma/zinit/issues/235"&gt;poll&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;In general, you don't have to do anything after the name change.&lt;/li&gt;
&lt;li&gt;Only a run of &lt;code&gt;zinit update --all&lt;/code&gt; might be necessary.&lt;/li&gt;
&lt;li&gt;You might also want to rename your &lt;code&gt;zplugin&lt;/code&gt; calls in &lt;code&gt;zshrc&lt;/code&gt; to &lt;code&gt;zinit&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Zinit will reuse &lt;code&gt;~/.zplugin&lt;/code&gt; directory if it exists, otherwise it'll create
&lt;code&gt;~/.zinit&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;15-01-2020&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There's a new function, &lt;code&gt;zpextract&lt;/code&gt;, which unpacks the given file. It supports many
formats (notably also &lt;code&gt;dmg&lt;/code&gt; images) – if there's a format that's unsupported please
don't hesitate to &lt;a href="https://github.com/zdharma/zinit/issues/new?template=feature_request.md"&gt;make a
request&lt;/a&gt;
for it to be added. A few facts:
&lt;ul&gt;
&lt;li&gt;the function is available only at the time of the plugin/snippet installation,&lt;/li&gt;
&lt;li&gt;it's to be used within &lt;code&gt;atclone&lt;/code&gt; and &lt;code&gt;atpull&lt;/code&gt; ices,&lt;/li&gt;
&lt;li&gt;it has an optional &lt;code&gt;--move&lt;/code&gt; option which moves all the files from a subdirectory
up one level,&lt;/li&gt;
&lt;li&gt;one other option &lt;code&gt;--norm&lt;/code&gt; prevents the archive from being deleted upon unpacking.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;snippets now aren't re-downloaded unless they're newer on the HTTP server; use
this with the &lt;code&gt;--norm&lt;/code&gt; option of &lt;code&gt;zpextract&lt;/code&gt; to prevent unnecessary updates; for
example, the &lt;a href="https://github.com/Zsh-Packages/firefox-dev"&gt;firefox-dev package&lt;/a&gt;
uses this option for this purpose,&lt;/li&gt;
&lt;li&gt;GitHub doesn't report proper &lt;code&gt;Last-Modified&lt;/code&gt; HTTP server for the files in the
repositories so the feature doesn't yet work with such files.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;13-12-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The packages have been disconnected from NPM registry and now live only on Zsh
Packages organization. Publishing to NPM isn't needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are two interesting packages,
&lt;a href="https://github.com/Zsh-Packages/any-gem"&gt;any-gem&lt;/a&gt; and
&lt;a href="https://github.com/Zsh-Packages/any-node"&gt;any-node&lt;/a&gt;. They allow to install any
Gem(s) or Node module(s) locally in a newly created plugin directory. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit pack param=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GEM -&amp;gt; rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; any-gem
zinit pack param=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;MOD -&amp;gt; doctoc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; any-node
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To have the command in zshrc, add an id-as'' ice so that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Zinit knows that the package is already installed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (also: the Unicode arrow is allowed)&lt;/span&gt;
zinit id-as=jekyll pack param=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GEM → jekyll&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; any-gem&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The binaries will be exposed without altering the PATH via shims
(&lt;a href="https://github.com/zinit-zsh/z-a-bin-gem-node"&gt;Bin-Gem-Node&lt;/a&gt; annex is needed).
Shims are correctly removed when deleting a plugin with &lt;code&gt;zinit delete …&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;11-12-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zinit now supports installing special-Zsh NPM packages! Bye-bye the long and
complex ice-lists! Check out the
&lt;a href="http://zdharma.org/zinit/wiki/NPM-Packages/" rel="nofollow"&gt;Wiki&lt;/a&gt; for an introductory document
on the feature.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;25-11-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new subcommand &lt;code&gt;run&lt;/code&gt; that executes a command in the given plugin's directory. It
has an &lt;code&gt;-l&lt;/code&gt; option that will reuse the previously provided plugin. So that it's
possible to do:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zplg run my/plugin ls
zplg run -l cat &lt;span class="pl-cce"&gt;\*&lt;/span&gt;.plugin.zsh
zplg run -l &lt;span class="pl-c1"&gt;pwd&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;07-11-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added a prefix-char: &lt;code&gt;@&lt;/code&gt; that can be used before plugins if their name collides
with one of the ice-names. For example &lt;code&gt;sharkdp/fd&lt;/code&gt; collides with the &lt;code&gt;sh&lt;/code&gt; ice
(which causes the plugin to be loaded with the POSIX &lt;code&gt;sh&lt;/code&gt; emulation applied). To
load it, do e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;null&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid from&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gh-r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; \
    mv&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exa* -&amp;gt; exa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; sbin&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  ogham/exa \
    mv&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fd* -&amp;gt; fd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; sbin&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fd/fd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  @sharkdp/fd \
    sbin&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fzf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; junegunn/fzf-bin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;i.e.: precede the plugin name with &lt;code&gt;@&lt;/code&gt;. Note: &lt;code&gt;sbin''&lt;/code&gt; is an ice added by the
&lt;a href="https://github.com/zinit/z-a-bin-gem-node"&gt;z-a-bin-gem-node&lt;/a&gt; annex, it provides
the command to the command line without altering &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="http://zdharma.org/zinit/wiki/For-Syntax/" rel="nofollow"&gt;Zinit Wiki&lt;/a&gt; for more
information on the for-syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;06-11-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new syntax, called for-syntax. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; zinit as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atload&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;print Hi!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; \
     atinit&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;print First!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; zdharma/null \
     atinit&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;print Second!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; svn OMZ::plugins/git&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;First!
Hi!
Second!
Hi!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And also:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;% print -rl &lt;span class="pl-smi"&gt;$path&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; egrep -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(/git|null)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
/root/.zinit/snippets/OMZ::plugins/git
/root/.zinit/plugins/zdharma---null&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To load in light mode, use a new &lt;code&gt;light-mode&lt;/code&gt; ice. More examples and information
can be found on the &lt;a href="http://zdharma.org/zinit/wiki/For-Syntax/" rel="nofollow"&gt;Zinit Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;03-11-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A new value for the &lt;code&gt;as''&lt;/code&gt; ice – &lt;code&gt;null&lt;/code&gt;. Specifying &lt;code&gt;as"null"&lt;/code&gt; is like specifying
&lt;code&gt;pick"/dev/null" nocompletions&lt;/code&gt;, i.e.: it disables the sourcing of the default
script file of a plugin or snippet and also disables the installation of
completions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;30-10-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new ice &lt;code&gt;trigger-load''&lt;/code&gt; – create a function that loads given plugin/snippet,
with an option (to use it, precede the ice content with &lt;code&gt;!&lt;/code&gt;) to automatically
forward the call afterwards. Example use:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Invoking the command `crasis' will load the plugin that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; provides the function `crasis', and it will be then&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; immediately invoked with the same arguments&lt;/span&gt;
zinit ice trigger-load&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!crasis&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
zinit load zdharma/zinit-crasis&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;22-10-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A new ice &lt;code&gt;countdown&lt;/code&gt; – causes an interruptable (by Ctrl-C) countdown 5…4…3…2…1…0
to be displayed before running the &lt;code&gt;atclone''&lt;/code&gt;, &lt;code&gt;atpull''&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; ices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;21-10-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;times&lt;/code&gt; command has a new option &lt;code&gt;-m&lt;/code&gt; – it shows the &lt;strong&gt;moments&lt;/strong&gt; of the plugin
load times – i.e.: how late after loading Zinit a plugin has been loaded.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;20-10-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;zinit&lt;/code&gt; completion now completes also snippets! The command &lt;code&gt;snippet&lt;/code&gt;, but
also &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;recall&lt;/code&gt;, &lt;code&gt;edit&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt;, etc. all receive such completing.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;ice&lt;/code&gt; subcommand can now be skipped – just pass in the ices, e.g.:
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit atload&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zicompinit; zicdreplay&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; blockf
zinit light zsh-users/zsh-completions&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;compile&lt;/code&gt; command is able to compile snippets.&lt;/li&gt;
&lt;li&gt;The plugins that add their subdirectories into &lt;code&gt;$fpath&lt;/code&gt; can be now &lt;code&gt;blockf&lt;/code&gt;-ed –
the functions located in the dirs will be correctly auto-loaded.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;12-10-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Special value for the &lt;code&gt;id-as''&lt;/code&gt; ice – &lt;code&gt;auto&lt;/code&gt;. It sets the plugin/snippet ID
automatically to the last component of its spec, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit ice id-as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;auto&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit load robobenklein/zinc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will load the plugin as &lt;code&gt;id-as'zinc'&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;14-09-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There's a Vim plugin which extends syntax highlighting of zsh scripts with coloring
of the Zinit commands. &lt;a href="https://github.com/zinit/zinit-vim-syntax"&gt;Project
homepage&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;13-09-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New ice &lt;code&gt;aliases&lt;/code&gt; which loads plugin with the aliases mechanism enabled. Use for
plugins that define &lt;strong&gt;and use&lt;/strong&gt; aliases in their scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;11-09-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;New ice-mods &lt;code&gt;sh&lt;/code&gt;,&lt;code&gt;bash&lt;/code&gt;,&lt;code&gt;ksh&lt;/code&gt;,&lt;code&gt;csh&lt;/code&gt; that load plugins (and snippets) with the
&lt;strong&gt;sticky emulation&lt;/strong&gt; feature of Zsh – all functions defined within the plugin will
automatically switch to the desired emulation mode before executing and switch back
thereafter. In other words it is now possible to load e.g. bash plugins with
Zinit, provided that the emulation level done by Zsh is sufficient, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit ice bash pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bash_it.sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
        atinit&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BASH_IT=&lt;span class="pl-smi"&gt;${ZINIT[PLUGINS_DIR]}&lt;/span&gt;/Bash-it---bash-it&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
        atclone&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yes n | ./install.sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit load Bash-it/bash-it&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This script loads correctly thanks to the emulation, however it isn't functional
because it uses &lt;code&gt;type -t …&lt;/code&gt; to check if a function exists.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;10-09-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new ice-mod &lt;code&gt;reset''&lt;/code&gt; that ivokes &lt;code&gt;git reset --hard&lt;/code&gt; (or the provided command)
before &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;atpull''&lt;/code&gt; ice. It can be used it to implement altering (i.e.
patching) of the plugin's files inside the &lt;code&gt;atpull''&lt;/code&gt; ice – &lt;code&gt;git&lt;/code&gt; will report no
conflicts when doing &lt;code&gt;pull&lt;/code&gt;, and the changes can be then again introduced by the
&lt;code&gt;atpull''&lt;/code&gt; ice.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Three new Zinit annexes (i.e.
&lt;a href="http://zdharma.org/zinit/wiki/Annexes/" rel="nofollow"&gt;extensions&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zinit/z-a-man"&gt;z-a-man&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generates man pages and code-documentation man pages from plugin's README.md
and source files (the code documentation is obtained from
&lt;a href="https://github.com/zdharma/zshelldoc"&gt;Zshelldoc&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zinit/z-a-test"&gt;z-a-test&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Runs tests (if detected &lt;code&gt;test&lt;/code&gt; target in a &lt;code&gt;Makefile&lt;/code&gt; or any &lt;code&gt;*.zunit&lt;/code&gt; files)
on plugin installation and non-empty update.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zinit/z-a-patch-dl"&gt;z-a-patch-dl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Allows easy download and applying of patches, to e.g. aid building a binary
program equipped in the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A new variable is being recognized by the installation script:
&lt;code&gt;$ZPLG_BIN_DIR_NAME&lt;/code&gt;. It configures the directory within &lt;code&gt;$ZPLG_HOME&lt;/code&gt; to which
Zinit should be cloned.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;09-08-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A new ice-mod &lt;code&gt;wrap-track''&lt;/code&gt; which gets &lt;code&gt;;&lt;/code&gt;-separated list of functions that are to
be tracked &lt;strong&gt;once&lt;/strong&gt; when executing. In other words you can extend the tracking
beyond the moment of loading of a plugin.&lt;/li&gt;
&lt;li&gt;The unloading of Zle widgets is now more smart – it takes into account the chains
of plugins that can overload the Zle widgets, and solves the interactions that
result out of it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;29-07-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;delete&lt;/code&gt; now supports following options:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--all&lt;/code&gt; – deletes all plugins and snippets (a purge, similar to &lt;code&gt;rm -rf ${ZINIT[PLUGINS_DIR]} ${ZINIT[SNIPPETS_DIR]}&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--clean&lt;/code&gt; – deletes only plugins and snippets that are &lt;strong&gt;currently not loaded&lt;/strong&gt;
in the current session.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;09-07-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zinit can now have &lt;strong&gt;its own plugins&lt;/strong&gt;, called &lt;strong&gt;z-plugins&lt;/strong&gt;! Check out an
example but fully functional z-plugin
&lt;a href="https://github.com/zdharma/z-p-submods"&gt;zdharma/z-p-submods&lt;/a&gt; and a document that
explains on how to implement your own z-plugin
(&lt;a href="../../wiki/Z-PLUGINS"&gt;here&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;08-07-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can now do &lt;code&gt;zinit ice wait ...&lt;/code&gt; and it will work as &lt;code&gt;zinit ice wait'0' ...&lt;/code&gt;
:) I.e. when there's no value to the &lt;code&gt;wait''&lt;/code&gt; ice then a value of &lt;code&gt;0&lt;/code&gt; is being
substituted.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;02-07-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://asciinema.org/a/254630" rel="nofollow"&gt;Cooperation of Fast-Syntax-Highlighting and
Zinit&lt;/a&gt; – a new precise highlighting for
Zinit in F-Sy-H.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;01-07-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;atclone''&lt;/code&gt;, &lt;code&gt;atpull''&lt;/code&gt; &amp;amp; &lt;code&gt;make''&lt;/code&gt; get run in the same subshell, thus an e.g.
export done in &lt;code&gt;atclone''&lt;/code&gt; will be visible during the &lt;code&gt;make&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;26-06-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;notify''&lt;/code&gt; contents gets evaluated, i.e. can contain active code like &lt;code&gt;$(tail -1 /var/log/messages)&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;23-06-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;New ice mod &lt;code&gt;subscribe''&lt;/code&gt;/&lt;code&gt;on-update-of''&lt;/code&gt; which works like the
&lt;code&gt;wait''&lt;/code&gt; ice-mod, i.e. defers loading of a plugin, but it &lt;strong&gt;looks at
modification time of the given file(s)&lt;/strong&gt;, and when it changes, it then
triggers loading of the plugin/snippet:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;% zinit ice on-update-of&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{~/files-*,/tmp/files-*}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; lucid \
    atload&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo I have been loaded&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    notify&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Yes that's true :)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
% zinit load zdharma/null
% touch &lt;span class="pl-k"&gt;~&lt;/span&gt;/files-1
The plugin has been loaded
%
Yes that&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s true :)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The plugin/snippet will be sourced as many times as the file gets updated.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;22-06-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;New ice mod &lt;code&gt;reset-prompt&lt;/code&gt; that will issue &lt;code&gt;zle .reset-prompt&lt;/code&gt; after loading the
plugin or snippet, causing the prompt to be recomputed. Useful with themes &amp;amp;
Turbo mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New ice-mod &lt;code&gt;notify''&lt;/code&gt; which will cause to display an under-prompt notification
when the plugin or snippet gets loaded. E.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;% zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid notify&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zdharma/null has been loaded&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
% zinit light zdharma/null
%
zdharma/null has been loaded&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case of problems with the loading a warning message will be output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% zinit ice notify atload'return 7'
% zinit light zdharma/null
%
notify: Plugin not loaded / loaded with problem, the return code: 7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Refer to &lt;a href="#ice-modifiers"&gt;Ice Modifiers&lt;/a&gt; section for a complete description.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;29-05-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Turbo mode, i.e. the &lt;code&gt;wait''&lt;/code&gt; ice-mode now supports a suffix – the letter &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;
or &lt;code&gt;c&lt;/code&gt;. The meaning is illustrated by the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wd.sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atinit&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo Firing 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid
zinit light mfaerevaag/wd
zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wd.sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atinit&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo Firing 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid
zinit light mfaerevaag/wd

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The output&lt;/span&gt;
Firing 2
Firing 1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As it can be seen, the second plugin has been loaded first. That's because there
are now three sub-slots (the &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;) in which the plugin/snippet loadings
can be put into. Plugins from the same time-slot with suffix &lt;code&gt;a&lt;/code&gt; will be loaded
before plugins with suffix &lt;code&gt;b&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;In other words, instead of &lt;code&gt;wait'1'&lt;/code&gt; you can enter &lt;code&gt;wait'1a'&lt;/code&gt;,
&lt;code&gt;wait'1b'&lt;/code&gt; and &lt;code&gt;wait'1c'&lt;/code&gt; – to this way &lt;strong&gt;impose order&lt;/strong&gt; on the loadings
&lt;strong&gt;regardless of the order of &lt;code&gt;zinit&lt;/code&gt; commands&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;p&gt;To see the full history check &lt;a href="CHANGELOG.md"&gt;the changelog&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-zinit" class="anchor" aria-hidden="true" href="#zinit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zinit&lt;/h1&gt;
&lt;p align="center"&gt;
&lt;a href="https://github.com/zdharma/pm-perf-test"&gt;
&lt;img width="550px" src="https://raw.githubusercontent.com/zdharma/zinit/images/startup-times.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Zinit is an elastic and fast Zshell plugin manager that will allow you to
install everything from GitHub and other sites.&lt;/p&gt;
&lt;p&gt;Zinit is currently the only plugin manager out there that has Turbo mode which yields
&lt;strong&gt;50-80% faster Zsh startup!&lt;/strong&gt; (i.e.: the shell will start up to &lt;strong&gt;5&lt;/strong&gt; times faster!). Check
out a speed comparison with other popular plugin managers
&lt;a href="https://github.com/zdharma/pm-perf-test"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Zinit gives &lt;strong&gt;reports&lt;/strong&gt; from plugin load describing what aliases, functions,
bindkeys, Zle widgets, zstyles, completions, variables, &lt;code&gt;PATH&lt;/code&gt; and &lt;code&gt;FPATH&lt;/code&gt;
elements a plugin has set up.&lt;/p&gt;
&lt;p&gt;Supported is &lt;strong&gt;unloading&lt;/strong&gt; of plugin and ability to list, (un)install and
selectively disable, enable plugin's completions.&lt;/p&gt;
&lt;p&gt;The system does not use &lt;code&gt;$FPATH&lt;/code&gt;, loading multiple plugins doesn't clutter
&lt;code&gt;$FPATH&lt;/code&gt; with the same number of entries (e.g. &lt;code&gt;10&lt;/code&gt;). Code is immune to
&lt;code&gt;KSH_ARRAYS&lt;/code&gt;. Completion management functionality is provided to allow user
to call &lt;code&gt;compinit&lt;/code&gt; only once in &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-zinit-wiki" class="anchor" aria-hidden="true" href="#zinit-wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zinit Wiki&lt;/h1&gt;
&lt;p&gt;The information in this README is complemented by the &lt;a href="http://zdharma.org/zinit/wiki/" rel="nofollow"&gt;Zinit wiki&lt;/a&gt;. The README is an introductory overview of Zinit while the wiki gives a complete and in-depth information with examples. Make sure to read it to get the most out of Zinit.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-option-1---automatic-installation-recommended" class="anchor" aria-hidden="true" href="#option-1---automatic-installation-recommended"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option 1 - Automatic Installation (Recommended)&lt;/h2&gt;
&lt;p&gt;The easiest way to install Zinit is to execute:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sh -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will install Zinit in &lt;code&gt;~/.zinit/bin&lt;/code&gt;. &lt;code&gt;.zshrc&lt;/code&gt; will be updated with three
lines of code that will be added to the bottom. The lines will be sourcing
&lt;code&gt;zinit.zsh&lt;/code&gt; and setting up completion for command &lt;code&gt;zinit&lt;/code&gt;. After installing and
reloading the shell compile Zinit with &lt;code&gt;zinit self-update&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-option-2---manual-installation" class="anchor" aria-hidden="true" href="#option-2---manual-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option 2 - Manual Installation&lt;/h2&gt;
&lt;p&gt;To manually install Zinit clone the repo to e.g. &lt;code&gt;~/.zinit/bin&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zinit
git clone https://github.com/zdharma/zinit.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zinit/bin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and source it from &lt;code&gt;.zshrc&lt;/code&gt; (above compinit):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zinit/bin/zinit.zsh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you place the &lt;code&gt;source&lt;/code&gt; below &lt;code&gt;compinit&lt;/code&gt;, then add those two lines after the &lt;code&gt;source&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;autoload -Uz _zinit
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;((&lt;/span&gt; &lt;span class="pl-smi"&gt;${+_comps}&lt;/span&gt; &lt;span class="pl-pds"&gt;))&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; _comps[zinit]=_zinit&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Various paths can be customized, see section &lt;a href="#customizing-paths"&gt;Customizing Paths&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After installing and reloading the shell compile Zinit with &lt;code&gt;zinit self-update&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://zdharma.org/zinit/wiki/INTRODUCTION/" rel="nofollow"&gt;Click here to read the introduction to Zinit&lt;/a&gt;. It explains basic usage and some of the more unique features of Zinit such as the Turbo mode. If you're new to Zinit we highly recommend you read it at least once.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Usage&lt;/h2&gt;
&lt;p&gt;After installing Zinit you can start adding some actions (load some plugins) to &lt;code&gt;~/.zshrc&lt;/code&gt;, at bottom. Some examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Two regular plugins loaded without tracking.&lt;/span&gt;
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma/fast-syntax-highlighting

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Plugin history-search-multi-word loaded with tracking.&lt;/span&gt;
zinit load zdharma/history-search-multi-word

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Load the pure theme, with zsh-async library that's bundled with it.&lt;/span&gt;
zinit ice pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;async.zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; src&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pure.zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light sindresorhus/pure

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Binary release in archive, from GitHub-releases page.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; After automatic unpacking it provides program "fzf".&lt;/span&gt;
zinit ice from&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gh-r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit load junegunn/fzf-bin

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; One other binary release, it needs renaming from `docker-compose-Linux-x86_64`.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This is done by ice-mod `mv'{from} -&amp;gt; {to}'. There are multiple packages per&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; single version, for OS X, Linux and Windows – so ice-mod `bpick' is used to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; select Linux package – in this case this is actually not needed, Zinit will&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; grep operating system name and architecture automatically when there's no `bpick'.&lt;/span&gt;
zinit ice from&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gh-r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; mv&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;docker* -&amp;gt; docker-compose&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; bpick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*linux*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit load docker/compose

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Vim repository on GitHub – a typical source code that needs compilation – Zinit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; can manage it for you if you like, run `./configure` and other `make`, etc. stuff.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Ice-mod `pick` selects a binary program to add to $PATH. You could also install the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; package under the path $ZPFX, see: http://zdharma.org/zinit/wiki/Compiling-programs&lt;/span&gt;
zinit ice as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atclone&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rm -f src/auto/config.cache; ./configure&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    atpull&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%atclone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; make pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/vim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light vim/vim

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Scripts that are built at install (there's single default make target, "install",&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; and it constructs scripts by `cat'ing a few files). The make'' ice could also be:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; `make"install PREFIX=$ZPFX"`, if "install" wouldn't be the only, default target.&lt;/span&gt;
zinit ice as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$ZPFX&lt;/span&gt;/bin/git-*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; make&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PREFIX=&lt;span class="pl-smi"&gt;$ZPFX&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light tj/git-extras

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Handle completions without loading any plugin, see "clist" command.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This one is to be ran just once, in interactive session.&lt;/span&gt;
zinit creinstall %HOME/my_completions&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For GNU ls (the binaries can be gls, gdircolors, e.g. on OS X when installing the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; coreutils package from Homebrew; you can also use https://github.com/ogham/exa)&lt;/span&gt;
zinit ice atclone&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dircolors -b LS_COLORS &amp;gt; c.zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atpull&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%atclone&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c.zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; nocompile&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
zinit light trapd00r/LS_COLORS&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://zdharma.org/zinit/wiki/LS_COLORS-explanation/" rel="nofollow"&gt;You can see an extended explanation of LS_COLORS in the wiki.&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; make'!...' -&amp;gt; run make before atclone &amp;amp; atpull&lt;/span&gt;
zinit ice as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; make&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; atclone&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./direnv hook zsh &amp;gt; zhook.zsh&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; atpull&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%atclone&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; src&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zhook.zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light direnv/direnv&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://zdharma.org/zinit/wiki/Direnv-explanation/" rel="nofollow"&gt;You can see an extended explanation of direnv in the wiki.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're interested in more examples then check out the &lt;a href="https://github.com/zdharma/zinit-configs"&gt;zinit-configs
repository&lt;/a&gt; where users have uploaded their
&lt;code&gt;~/.zshrc&lt;/code&gt; and Zinit configurations. Feel free to
&lt;a href="https://github.com/zdharma/zinit-configs/issues/new?template=request-to-add-zshrc-to-the-zinit-configs-repo.md"&gt;submit&lt;/a&gt;
your &lt;code&gt;~/.zshrc&lt;/code&gt; there if it contains Zinit commands.&lt;/p&gt;
&lt;p&gt;You can also check out the &lt;a href="http://zdharma.org/zinit/wiki/GALLERY/" rel="nofollow"&gt;Gallery of Zinit Invocations&lt;/a&gt; for some additional examples.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ice-modifiers" class="anchor" aria-hidden="true" href="#ice-modifiers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ice Modifiers&lt;/h2&gt;
&lt;p&gt;Following &lt;code&gt;ice&lt;/code&gt; modifiers are to be
&lt;a href="http://zdharma.org/zinit/wiki/Alternate-Ice-Syntax/" rel="nofollow"&gt;passed&lt;/a&gt; to &lt;code&gt;zinit ice ...&lt;/code&gt; to
obtain described effects.  The word &lt;code&gt;ice&lt;/code&gt; means something that's added (like ice to a
drink) – and in Zinit it means adding modifier to a next &lt;code&gt;zinit&lt;/code&gt; command, and also
something that's temporary because it melts – and this means that the modification will
last only for a &lt;strong&gt;single&lt;/strong&gt; next &lt;code&gt;zinit&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Some Ice-modifiers are highlighted and clicking on them will take you to the
appropriate wiki page for an extended explanation.&lt;/p&gt;
&lt;p&gt;You may safely assume a given ice works with both plugins and snippets unless
explicitly stated otherwise.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cloning-options" class="anchor" aria-hidden="true" href="#cloning-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cloning Options&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;proto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Change protocol to &lt;code&gt;git&lt;/code&gt;,&lt;code&gt;ftp&lt;/code&gt;,&lt;code&gt;ftps&lt;/code&gt;,&lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;rsync&lt;/code&gt;, etc. Default is &lt;code&gt;https&lt;/code&gt;. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt; &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Private-Repositories/" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;from&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Clone plugin from given site. Supported are &lt;code&gt;from"github"&lt;/code&gt; (default), &lt;code&gt;..."github-rel"&lt;/code&gt;, &lt;code&gt;..."gitlab"&lt;/code&gt;, &lt;code&gt;..."bitbucket"&lt;/code&gt;, &lt;code&gt;..."notabug"&lt;/code&gt; (short names: &lt;code&gt;gh&lt;/code&gt;, &lt;code&gt;gh-r&lt;/code&gt;, &lt;code&gt;gl&lt;/code&gt;, &lt;code&gt;bb&lt;/code&gt;, &lt;code&gt;nb&lt;/code&gt;). Can also be a full domain name (e.g. for GitHub enterprise). &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;ver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Used with &lt;code&gt;from"gh-r"&lt;/code&gt; (i.e. downloading a binary release, e.g. for use with &lt;code&gt;as"program"&lt;/code&gt;) – selects which version to download. Default is latest, can also be explicitly &lt;code&gt;ver"latest"&lt;/code&gt;. Works also with regular plugins, checkouts e.g. &lt;code&gt;ver"abranch"&lt;/code&gt;, i.e. a specific version. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;bpick&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Used to select which release from GitHub Releases to download, e.g. &lt;code&gt;zini ice from"gh-r" as"program" bpick"*Darwin*"; zini load docker/compose&lt;/code&gt;. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt; &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;depth&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Pass &lt;code&gt;--depth&lt;/code&gt; to &lt;code&gt;git&lt;/code&gt;, i.e. limit how much of history to download. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cloneopts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Pass the contents of &lt;code&gt;cloneopts&lt;/code&gt; to &lt;code&gt;git clone&lt;/code&gt;. Defaults to &lt;code&gt;--recursive&lt;/code&gt; i.e. Change cloning options. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt; &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;svn&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Use Subversion for downloading snippet. GitHub supports &lt;code&gt;SVN&lt;/code&gt; protocol, this allows to clone subdirectories as snippets, e.g. &lt;code&gt;zinit ice svn; zinit snippet OMZ::plugins/git&lt;/code&gt;. Other ice &lt;code&gt;pick&lt;/code&gt; can be used to select file to source (default are: &lt;code&gt;*.plugin.zsh&lt;/code&gt;, &lt;code&gt;init.zsh&lt;/code&gt;, &lt;code&gt;*.zsh-theme&lt;/code&gt;). &lt;strong&gt;Does not work with plugins.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-selection-of-files-to-source-" class="anchor" aria-hidden="true" href="#selection-of-files-to-source-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selection of Files (To Source, …)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Sourcing-multiple-files/" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;pick&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Select the file to source, or the file to set as command (when using &lt;code&gt;snippet --command&lt;/code&gt; or the ice &lt;code&gt;as"program"&lt;/code&gt;); it is a pattern, alphabetically first matched file is being chosen; e.g. &lt;code&gt;zinit ice pick"*.plugin.zsh"; zinit load …&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Sourcing-multiple-files" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;src&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Specify additional file to source after sourcing main file or after setting up command (via &lt;code&gt;as"program"&lt;/code&gt;). It is not a pattern but a plain file name.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Sourcing-multiple-files" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;multisrc&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Allows to specify multiple files for sourcing, enumerated with spaces as the separators (e.g. &lt;code&gt;multisrc'misc.zsh grep.zsh'&lt;/code&gt;) and also using brace-expansion syntax (e.g. &lt;code&gt;multisrc'{misc,grep}.zsh'&lt;/code&gt;). Supports patterns.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-conditional-loading" class="anchor" aria-hidden="true" href="#conditional-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional Loading&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Example-wait-conditions" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Postpone loading a plugin or snippet. For &lt;code&gt;wait'1'&lt;/code&gt;, loading is done &lt;code&gt;1&lt;/code&gt; second after prompt. For &lt;code&gt;wait'[[ ... ]]'&lt;/code&gt;, &lt;code&gt;wait'(( ... ))'&lt;/code&gt;, loading is done when given condition is meet. For &lt;code&gt;wait'!...'&lt;/code&gt;, prompt is reset after load. Zsh can start 80% (i.e.: 5x) faster thanks to postponed loading. &lt;strong&gt;Fact:&lt;/strong&gt; when &lt;code&gt;wait&lt;/code&gt; is used without value, it works as &lt;code&gt;wait'0'&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Multiple-prompts" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;load&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; A condition to check which should cause plugin to load. It will load once, the condition can be still true, but will not trigger second load (unless plugin is unloaded earlier, see &lt;code&gt;unload&lt;/code&gt; below). E.g.: &lt;code&gt;load'[[ $PWD = */github* ]]'&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Multiple-prompts" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;unload&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; A condition to check causing plugin to unload. It will unload once, then only if loaded again. E.g.: &lt;code&gt;unload'[[ $PWD != */github* ]]'&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cloneonly&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Don't load the plugin / snippet, only download it &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;if&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Load plugin or snippet only when given condition is fulfilled, for example: &lt;code&gt;zinit ice if'[[ -n "$commands[otool]" ]]'; zinit load ...&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;has&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Load plugin or snippet only when given command is available (in $PATH), e.g. &lt;code&gt;zinit ice has'git' ...&lt;/code&gt; &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;subscribe&lt;/code&gt; / &lt;code&gt;on-update-of&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Postpone loading of a plugin or snippet until the given file(s) get updated, e.g. &lt;code&gt;subscribe'{~/files-*,/tmp/files-*}'&lt;/code&gt; &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;trigger-load&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Creates a function that loads the associated plugin/snippet, with an option (to use it, precede the ice content with &lt;code&gt;!&lt;/code&gt;) to automatically forward the call afterwards, to a command of the same name as the function. Can obtain multiple functions to create – sparate with &lt;code&gt;;&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-plugin-output" class="anchor" aria-hidden="true" href="#plugin-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugin Output&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;silent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Mute plugin's or snippet's &lt;code&gt;stderr&lt;/code&gt; &amp;amp; &lt;code&gt;stdout&lt;/code&gt;. Also skip &lt;code&gt;Loaded ...&lt;/code&gt; message under prompt for &lt;code&gt;wait&lt;/code&gt;, etc. loaded plugins, and completion-installation messages.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;lucid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Skip &lt;code&gt;Loaded ...&lt;/code&gt; message under prompt for &lt;code&gt;wait&lt;/code&gt;, etc. loaded plugins (a subset of &lt;code&gt;silent&lt;/code&gt;).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Output given message under-prompt after successfully loading a plugin/snippet. In case of problems with the loading, output a warning message and the return code. If starts with &lt;code&gt;!&lt;/code&gt; it will then always output the given message. Hint: if the message is empty, then it will just notify about problems.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-completions" class="anchor" aria-hidden="true" href="#completions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Completions&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;blockf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Disallow plugin to modify &lt;code&gt;fpath&lt;/code&gt;. Useful when a plugin wants to provide completions in traditional way. Zinit can manage completions and plugin can be blocked from exposing them.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;nocompletions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Don't detect, install and manage completions for this plugin. Completions can be installed later with &lt;code&gt;zinit creinstall {plugin-spec}&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-command-execution-after-cloning-updating-or-loading" class="anchor" aria-hidden="true" href="#command-execution-after-cloning-updating-or-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Execution After Cloning, Updating or Loading&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;mv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Move file after cloning or after update (then, only if new commits were downloaded). Example: &lt;code&gt;mv "fzf-* -&amp;gt; fzf"&lt;/code&gt;. It uses &lt;code&gt;-&amp;gt;&lt;/code&gt; as separator for old and new file names. Works also with snippets.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Copy file after cloning or after update (then, only if new commits were downloaded). Example: &lt;code&gt;cp "docker-c* -&amp;gt; dcompose"&lt;/code&gt;. Ran after &lt;code&gt;mv&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/atload-and-other-at-ices" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;atclone&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Run command after cloning, within plugin's directory, e.g. &lt;code&gt;zinit ice atclone"echo Cloned"&lt;/code&gt;. Ran also after downloading snippet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/atload-and-other-at-ices" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;atpull&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Run command after updating (&lt;strong&gt;only if new commits are waiting for download&lt;/strong&gt;), within plugin's directory. If starts with "!" then command will be ran before &lt;code&gt;mv&lt;/code&gt; &amp;amp; &lt;code&gt;cp&lt;/code&gt; ices and before &lt;code&gt;git pull&lt;/code&gt; or &lt;code&gt;svn update&lt;/code&gt;. Otherwise it is ran after them. Can be &lt;code&gt;atpull'%atclone'&lt;/code&gt;, to repeat &lt;code&gt;atclone&lt;/code&gt; Ice-mod.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/atload-and-other-at-ices" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;atinit&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Run command after directory setup (cloning, checking it, etc.) of plugin/snippet but before loading.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/atload-and-other-at-ices" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;atload&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Run command after loading, within plugin's directory. Can be also used with snippets. Passed code can be preceded with &lt;code&gt;!&lt;/code&gt;, it will then be tracked (if using &lt;code&gt;load&lt;/code&gt;, not &lt;code&gt;light&lt;/code&gt;).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;run-atpull&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Always run the atpull hook (when updating), not only when there are new commits to be downloaded.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;nocd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Don't switch the current directory into the plugin's directory when evaluating the above ice-mods &lt;code&gt;atinit''&lt;/code&gt;,&lt;code&gt;atload''&lt;/code&gt;, etc.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Installing-with-make" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;make&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Run &lt;code&gt;make&lt;/code&gt; command after cloning/updating and executing &lt;code&gt;mv&lt;/code&gt;, &lt;code&gt;cp&lt;/code&gt;, &lt;code&gt;atpull&lt;/code&gt;, &lt;code&gt;atclone&lt;/code&gt; Ice mods. Can obtain argument, e.g. &lt;code&gt;make"install PREFIX=/opt"&lt;/code&gt;. If the value starts with &lt;code&gt;!&lt;/code&gt; then &lt;code&gt;make&lt;/code&gt; is ran before &lt;code&gt;atclone&lt;/code&gt;/&lt;code&gt;atpull&lt;/code&gt;, e.g. &lt;code&gt;make'!'&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;countdown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Causes an interruptable (by Ctrl-C) countdown 5…4…3…2…1…0 to be displayed before executing &lt;code&gt;atclone''&lt;/code&gt;,&lt;code&gt;atpull''&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; ices&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Invokes &lt;code&gt;git reset --hard HEAD&lt;/code&gt; for plugins or &lt;code&gt;svn revert&lt;/code&gt; for SVN snippets before pulling any new changes. This way &lt;code&gt;git&lt;/code&gt; or &lt;code&gt;svn&lt;/code&gt; will not report conflicts if some changes were done in e.g.: &lt;code&gt;atclone''&lt;/code&gt; ice. For file snippets and &lt;code&gt;gh-r&lt;/code&gt; plugins it invokes &lt;code&gt;rm -rf *&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-sticky-emulation-of-other-shells" class="anchor" aria-hidden="true" href="#sticky-emulation-of-other-shells"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sticky-Emulation Of Other Shells&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;sh&lt;/code&gt;, &lt;code&gt;!sh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Source the plugin's (or snippet's) script with &lt;code&gt;sh&lt;/code&gt; emulation so that also all functions declared within the file will get a &lt;em&gt;sticky&lt;/em&gt; emulation assigned – when invoked they'll execute also with the &lt;code&gt;sh&lt;/code&gt; emulation set-up. The &lt;code&gt;!sh&lt;/code&gt; version switches additional options that are rather not important from the portability perspective.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;!bash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;The same as &lt;code&gt;sh&lt;/code&gt;, but with the &lt;code&gt;SH_GLOB&lt;/code&gt; option disabled, so that Bash regular expressions work.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;ksh&lt;/code&gt;, &lt;code&gt;!ksh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;The same as &lt;code&gt;sh&lt;/code&gt;, but emulating &lt;code&gt;ksh&lt;/code&gt; shell.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;csh&lt;/code&gt;, &lt;code&gt;!csh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;The same as &lt;code&gt;sh&lt;/code&gt;, but emulating &lt;code&gt;csh&lt;/code&gt; shell.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-others" class="anchor" aria-hidden="true" href="#others"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Others&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;as&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Can be &lt;code&gt;as"program"&lt;/code&gt; (also the alias: &lt;code&gt;as"command"&lt;/code&gt;), and will cause to add script/program to &lt;code&gt;$PATH&lt;/code&gt; instead of sourcing (see &lt;code&gt;pick&lt;/code&gt;). Can also be &lt;code&gt;as"completion"&lt;/code&gt; – use with plugins or snippets in whose only underscore-starting &lt;code&gt;_*&lt;/code&gt; files you are interested in. The third possible value is &lt;code&gt;as"null"&lt;/code&gt; – a shorthand for &lt;code&gt;pick"/dev/null" nocompletions&lt;/code&gt; – i.e.: it disables the default script-file sourcing and also the installation of completions.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/id-as/" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;id-as&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Nickname a plugin or snippet, to e.g. create a short handler for long-url snippet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;compile&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Pattern (+ possible &lt;code&gt;{...}&lt;/code&gt; expansion, like &lt;code&gt;{a/*,b*}&lt;/code&gt;) to select additional files to compile, e.g. &lt;code&gt;compile"(pure|async).zsh"&lt;/code&gt; for &lt;code&gt;sindresorhus/pure&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;nocompile&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Don't try to compile &lt;code&gt;pick&lt;/code&gt;-pointed files. If passed the exclamation mark (i.e. &lt;code&gt;nocompile'!'&lt;/code&gt;), then do compile, but after &lt;code&gt;make''&lt;/code&gt; and &lt;code&gt;atclone''&lt;/code&gt; (useful if Makefile installs some scripts, to point &lt;code&gt;pick''&lt;/code&gt; at the location of their installation).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;service&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Make following plugin or snippet a &lt;em&gt;service&lt;/em&gt;, which will be ran in background, and only in single Zshell instance. See &lt;a href="https://github.com/zservices"&gt;zservices-organization&lt;/a&gt; page.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;reset-prompt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Reset the prompt after loading the plugin/snippet (by issuing &lt;code&gt;zle .reset-prompt&lt;/code&gt;). Note: normally it's sufficient to precede the value of &lt;code&gt;wait''&lt;/code&gt; ice with &lt;code&gt;!&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;bindmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; To hold &lt;code&gt;;&lt;/code&gt;-separated strings like &lt;code&gt;Key(s)A -&amp;gt; Key(s)B&lt;/code&gt;, e.g. &lt;code&gt;^R -&amp;gt; ^T; ^A -&amp;gt; ^B&lt;/code&gt;. In general, &lt;code&gt;bindmap''&lt;/code&gt;changes bindings (done with the &lt;code&gt;bindkey&lt;/code&gt; builtin) the plugin does. The example would cause the plugin to map Ctrl-T instead of Ctrl-R, and Ctrl-B instead of Ctrl-A. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;trackbinds&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Shadow but only &lt;code&gt;bindkey&lt;/code&gt; calls even with &lt;code&gt;zinit light ...&lt;/code&gt;, i.e. even with tracking disabled (fast loading), to allow &lt;code&gt;bindmap&lt;/code&gt; to remap the key-binds. The same effect has &lt;code&gt;zinit light -b ...&lt;/code&gt;, i.e. additional &lt;code&gt;-b&lt;/code&gt; option to the &lt;code&gt;light&lt;/code&gt;-subcommand. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/wrap-track" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;wrap-track&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Takes a &lt;code&gt;;&lt;/code&gt;-separated list of function names that are to be tracked (meaning gathering report and unload data) &lt;strong&gt;once&lt;/strong&gt; during execution. It works by wrapping the functions with a tracking-enabling and disabling snippet of code. In summary, &lt;code&gt;wrap-track&lt;/code&gt; allows to extend the tracking beyond the moment of loading of a plugin. Example use is to &lt;code&gt;wrap-track&lt;/code&gt; a precmd function of a prompt (like &lt;code&gt;_p9k_precmd()&lt;/code&gt; of powerlevel10k) or other plugin that &lt;em&gt;postpones its initialization till the first prompt&lt;/em&gt; (like e.g.: zsh-autosuggestions). &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;aliases&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Load the plugin with the aliases mechanism enabled. Use with plugins that define &lt;strong&gt;and use&lt;/strong&gt; aliases in their scripts.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;light-mode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Load the plugin without the tracking, i.e.: as if it would be loaded with the &lt;code&gt;light&lt;/code&gt; command. Useful for the for-syntax, where there is no &lt;code&gt;load&lt;/code&gt; nor &lt;code&gt;light&lt;/code&gt; subcommand&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-order-of-execution" class="anchor" aria-hidden="true" href="#order-of-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Order of Execution&lt;/h3&gt;
&lt;p&gt;Order of execution of related Ice-mods: &lt;code&gt;atinit&lt;/code&gt; -&amp;gt; &lt;code&gt;atpull!&lt;/code&gt; -&amp;gt; &lt;code&gt;make'!!'&lt;/code&gt; -&amp;gt; &lt;code&gt;mv&lt;/code&gt; -&amp;gt; &lt;code&gt;cp&lt;/code&gt; -&amp;gt; &lt;code&gt;make!&lt;/code&gt; -&amp;gt; &lt;code&gt;atclone&lt;/code&gt;/&lt;code&gt;atpull&lt;/code&gt; -&amp;gt; &lt;code&gt;make&lt;/code&gt; -&amp;gt; &lt;code&gt;(plugin script loading)&lt;/code&gt; -&amp;gt; &lt;code&gt;src&lt;/code&gt; -&amp;gt; &lt;code&gt;multisrc&lt;/code&gt; -&amp;gt; &lt;code&gt;atload&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-zinit-commands" class="anchor" aria-hidden="true" href="#zinit-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zinit Commands&lt;/h2&gt;
&lt;p&gt;Following commands are passed to &lt;code&gt;zinit ...&lt;/code&gt; to obtain described effects.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;-h, --help, help&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Usage information.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;man&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Manual.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-loading-and-unloading" class="anchor" aria-hidden="true" href="#loading-and-unloading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Loading and Unloading&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;load {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Load plugin, can also receive absolute local path.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;light [-b] {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Light plugin load, without reporting/tracking. &lt;code&gt;-b&lt;/code&gt; – track &lt;code&gt;bindkey&lt;/code&gt;-calls only. There's also &lt;code&gt;light-mode&lt;/code&gt; ice which can be used to induce the no-tracking (i.e.: &lt;em&gt;light&lt;/em&gt;) loading, regardless of the command used.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;unload [-q] {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Unload plugin loaded with &lt;code&gt;zinit load ...&lt;/code&gt;. &lt;code&gt;-q&lt;/code&gt; – quiet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;snippet [-f] {url}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Source local or remote file (by direct URL). &lt;code&gt;-f&lt;/code&gt; – don't use cache (force redownload).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-completions-1" class="anchor" aria-hidden="true" href="#completions-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Completions&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt; clist [&lt;em&gt;columns&lt;/em&gt;], completions [&lt;em&gt;columns&lt;/em&gt;] &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; List completions in use, with &lt;code&gt;&lt;em&gt;columns&lt;/em&gt;&lt;/code&gt; completions per line. &lt;code&gt;zpl clist 5&lt;/code&gt; will for example print 5 completions per line. Default is 3.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cdisable {cname}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Disable completion &lt;code&gt;cname&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cenable {cname}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Enable completion &lt;code&gt;cname&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;creinstall [-q] {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Install completions for plugin, can also receive absolute local path. &lt;code&gt;-q&lt;/code&gt; – quiet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cuninstall {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Uninstall completions for plugin.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;csearch&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Search for available completions from any plugin.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;compinit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Refresh installed completions.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cclear&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Clear stray and improper completions.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cdlist&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Show compdef replay list.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cdreplay [-q]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Replay compdefs (to be done after compinit). &lt;code&gt;-q&lt;/code&gt; – quiet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cdclear [-q]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Clear compdef replay list. &lt;code&gt;-q&lt;/code&gt; – quiet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-tracking-of-the-active-session" class="anchor" aria-hidden="true" href="#tracking-of-the-active-session"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tracking of the Active Session&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;dtrace, dstart&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Start tracking what's going on in session.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;dstop&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Stop tracking what's going on in session.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;dunload&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Revert changes recorded between dstart and dstop.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;dreport&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Report what was going on in session.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;dclear&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Clear report of what was going on in session.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-reports-and-statistics" class="anchor" aria-hidden="true" href="#reports-and-statistics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reports and Statistics&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;times [-s] [-m]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Statistics on plugin load times, sorted in order of loading. &lt;code&gt;-s&lt;/code&gt; – use seconds instead of milliseconds. &lt;code&gt;-m&lt;/code&gt; – show plugin loading moments.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;zstatus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Overall Zinit status.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;report {plg-spec}|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Show plugin report. &lt;code&gt;--all&lt;/code&gt; – do it for all plugins.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;loaded [keyword], list [keyword]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Show what plugins are loaded (filter with 'keyword').&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; List snippets in formatted and colorized manner. Requires &lt;strong&gt;tree&lt;/strong&gt; program.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;status {plg-spec}|URL|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Git status for plugin or svn status for snippet. &lt;code&gt;--all&lt;/code&gt; – do it for all plugins and snippets.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;recently [time-spec]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Show plugins that changed recently, argument is e.g. 1 month 2 days.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;bindkeys&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Lists bindkeys set up by each plugin.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-compiling" class="anchor" aria-hidden="true" href="#compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;compile {plg-spec}|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Compile plugin. &lt;code&gt;--all&lt;/code&gt; – compile all plugins.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;uncompile {plg-spec}|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Remove compiled version of plugin. &lt;code&gt;--all&lt;/code&gt; – do it for all plugins.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;compiled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; List plugins that are compiled.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;self-update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Updates and compiles Zinit.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;update [-q] [-r] {plg-spec}|URL|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Git update plugin or snippet.&lt;br&gt; &lt;code&gt;--all&lt;/code&gt; – update all plugins and snippets.&lt;br&gt;  &lt;code&gt;-q&lt;/code&gt; – quiet.&lt;br&gt; &lt;code&gt;-r&lt;/code&gt; | &lt;code&gt;--reset&lt;/code&gt; – run &lt;code&gt;git reset --hard&lt;/code&gt; / &lt;code&gt;svn revert&lt;/code&gt; before pulling changes.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;ice &amp;lt;ice specification&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Add ice to next command, argument is e.g. from"gitlab".&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;delete {plg-spec}|URL|--clean|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Remove plugin or snippet from disk (good to forget wrongly passed ice-mods).  &lt;br&gt; &lt;code&gt;--all&lt;/code&gt; – purge.&lt;br&gt; &lt;code&gt;--clean&lt;/code&gt; – delete plugins and snippets that are not loaded.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cd {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Cd into plugin's directory. Also support snippets if fed with URL.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;edit {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Edit plugin's file with $EDITOR.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;glance {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Look at plugin's source (pygmentize, {,source-}highlight).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;stress {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Test plugin for compatibility with set of options.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;changes {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; View plugin's git log.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;create {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Create plugin (also together with GitHub repository).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;srv {service-id} [cmd]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Control a service, command can be: stop,start,restart,next,quit; &lt;code&gt;next&lt;/code&gt; moves the service to another Zshell.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;recall {plg-spec}|URL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Fetch saved ice modifiers and construct &lt;code&gt;zinit ice ...&lt;/code&gt; command.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;env-whitelist [-v] [-h] {env..}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Allows to specify names (also patterns) of variables left unchanged during an unload. &lt;code&gt;-v&lt;/code&gt; – verbose.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;module&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Manage binary Zsh module shipped with Zinit, see &lt;code&gt;zinit module help&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;add-fpath|fpath&lt;/code&gt; &lt;code&gt;[-f|--front]&lt;/code&gt; &lt;code&gt;{plg-spec}&lt;/code&gt; &lt;code&gt;[subdirectory]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Adds given plugin (not yet snippet) directory to &lt;code&gt;$fpath&lt;/code&gt;. If the second argument is given, it is appended to the directory path. If the option &lt;code&gt;-f&lt;/code&gt;/&lt;code&gt;--front&lt;/code&gt; is given, the directory path is prepended instead of appended to &lt;code&gt;$fpath&lt;/code&gt;. The &lt;code&gt;{plg-spec}&lt;/code&gt; can be absolute path, i.e.: it's possible to also add regular directories.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;run&lt;/code&gt; &lt;code&gt;[-l]&lt;/code&gt; &lt;code&gt;[plugin]&lt;/code&gt; &lt;code&gt;{command}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Runs the given command in the given plugin's directory. If the option &lt;code&gt;-l&lt;/code&gt; will be given then the plugin should be skipped – the option will cause the previous plugin to be reused.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-updating-zinit-and-plugins" class="anchor" aria-hidden="true" href="#updating-zinit-and-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating Zinit and Plugins&lt;/h2&gt;
&lt;p&gt;To update Zinit issue &lt;code&gt;zinit self-update&lt;/code&gt; in the command line.&lt;/p&gt;
&lt;p&gt;To update all plugins and snippets, issue &lt;code&gt;zinit update&lt;/code&gt;. If you wish to update only
a single plugin/snippet instead issue &lt;code&gt;zinit update NAME_OF_PLUGIN&lt;/code&gt;. A list of
commits will be shown:&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./doc/img/update.png"&gt;&lt;img src="./doc/img/update.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Some plugins require performing an action each time they're updated. One way you can do
this is by using the &lt;code&gt;atpull&lt;/code&gt; ice modifier. For example, writing &lt;code&gt;zinit ice atpull'./configure'&lt;/code&gt; before loading a plugin will execute &lt;code&gt;./configure&lt;/code&gt; after a successful update. Refer to &lt;a href="#ice-modifiers"&gt;Ice Modifiers&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;The ice modifiers for any plugin or snippet are stored in their directory in a
&lt;code&gt;._zinit&lt;/code&gt; subdirectory, hence the plugin doesn't have to be loaded to be correctly
updated. There's one other file created there, &lt;code&gt;.zinit_lstupd&lt;/code&gt; – it holds the log of
the new commits pulled-in in the last update.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-oh-my-zsh-themes" class="anchor" aria-hidden="true" href="#using-oh-my-zsh-themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Oh My Zsh Themes&lt;/h2&gt;
&lt;p&gt;To use &lt;strong&gt;themes&lt;/strong&gt; created for Oh My Zsh you might want to first source the &lt;code&gt;git&lt;/code&gt; library there:&lt;/p&gt;
&lt;div class="highlight highlight-source-systemverilog"&gt;&lt;pre&gt;zinit snippet http&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;github.com/ohmyzsh/ohmyzsh/raw/master/lib/git.zsh&lt;/span&gt;
&lt;span class="pl-k"&gt;#&lt;/span&gt; Or using &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt; shorthand&lt;span class="pl-k"&gt;:&lt;/span&gt;
zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;lib&lt;span class="pl-k"&gt;/&lt;/span&gt;git.zsh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the library will not be loaded, then similar to following errors will be appearing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;........:1: command not found: git_prompt_status
........:1: command not found: git_prompt_short_sha
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can use the themes as snippets (&lt;code&gt;zinit snippet {file path or GitHub URL}&lt;/code&gt;).
Some themes require not only Oh My Zsh's Git &lt;strong&gt;library&lt;/strong&gt;, but also Git &lt;strong&gt;plugin&lt;/strong&gt; (error
about &lt;code&gt;current_branch&lt;/code&gt; function can be appearing). Load this Git-plugin as single-file
snippet directly from OMZ:&lt;/p&gt;
&lt;div class="highlight highlight-source-systemverilog"&gt;&lt;pre&gt;zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;plugins&lt;span class="pl-k"&gt;/&lt;/span&gt;git&lt;span class="pl-k"&gt;/&lt;/span&gt;git.plugin.zsh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Such lines should be added to &lt;code&gt;.zshrc&lt;/code&gt;. Snippets are cached locally, use &lt;code&gt;-f&lt;/code&gt; option to download
a fresh version of a snippet, or &lt;code&gt;zinit update {URL}&lt;/code&gt;. Can also use &lt;code&gt;zinit update --all&lt;/code&gt; to
update all snippets (and plugins).&lt;/p&gt;
&lt;p&gt;Most themes require &lt;code&gt;promptsubst&lt;/code&gt; option (&lt;code&gt;setopt promptsubst&lt;/code&gt; in &lt;code&gt;zshrc&lt;/code&gt;), if it isn't set, then
prompt will appear as something like: &lt;code&gt;... $(build_prompt) ...&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You might want to suppress completions provided by the git plugin by issuing &lt;code&gt;zinit cdclear -q&lt;/code&gt;
(&lt;code&gt;-q&lt;/code&gt; is for quiet) – see below &lt;strong&gt;Ignoring Compdefs&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;To summarize:&lt;/p&gt;
&lt;div class="highlight highlight-source-systemverilog"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;#&lt;/span&gt; Load &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt; &lt;span class="pl-k"&gt;Git&lt;/span&gt; &lt;span class="pl-en"&gt;library&lt;/span&gt;
zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;lib&lt;span class="pl-k"&gt;/&lt;/span&gt;git.zsh

&lt;span class="pl-k"&gt;#&lt;/span&gt; Load Git plugin from &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;
zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;plugins&lt;span class="pl-k"&gt;/&lt;/span&gt;git&lt;span class="pl-k"&gt;/&lt;/span&gt;git.plugin.zsh
zinit cdclear &lt;span class="pl-k"&gt;-&lt;/span&gt;q &lt;span class="pl-k"&gt;#&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; forget completions provided up to this moment

setopt promptsubst

&lt;span class="pl-k"&gt;#&lt;/span&gt; Load theme from &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;
zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;themes&lt;span class="pl-k"&gt;/&lt;/span&gt;dstufft.zsh&lt;span class="pl-k"&gt;-&lt;/span&gt;theme

&lt;span class="pl-k"&gt;#&lt;/span&gt; Load normal GitHub plugin with theme depending on &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt; Git library
zinit light NicoSantangelo&lt;span class="pl-k"&gt;/&lt;/span&gt;Alpharized&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also the Wiki page: &lt;a href="http://zdharma.org/zinit/wiki/Example-Oh-My-Zsh-setup/" rel="nofollow"&gt;Example Oh My Zsh
Setup&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-completions-2" class="anchor" aria-hidden="true" href="#completions-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Completions&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-calling-compinit-without-turbo-mode" class="anchor" aria-hidden="true" href="#calling-compinit-without-turbo-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calling &lt;code&gt;compinit&lt;/code&gt; Without Turbo Mode&lt;/h2&gt;
&lt;p&gt;With no Turbo mode in use, compinit can be called normally, i.e.: as &lt;code&gt;autoload compinit; compinit&lt;/code&gt;. This should be done after loading of all plugins and before possibly calling
&lt;code&gt;zinit cdreplay&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;cdreplay&lt;/code&gt; subcommand is provided to re-play all catched &lt;code&gt;compdef&lt;/code&gt; calls. The
&lt;code&gt;compdef&lt;/code&gt; calls are used to define a completion for a command. For example, &lt;code&gt;compdef _git git&lt;/code&gt; defines that the &lt;code&gt;git&lt;/code&gt; command should be completed by a &lt;code&gt;_git&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;compdef&lt;/code&gt; function is provided by &lt;code&gt;compinit&lt;/code&gt; call. As it should be called later,
after loading all of the plugins, Zinit provides its own &lt;code&gt;compdef&lt;/code&gt; function that
catches (i.e.: records in an array) the arguments of the call, so that the loaded
plugins can freely call &lt;code&gt;compdef&lt;/code&gt;. Then, the &lt;code&gt;cdreplay&lt;/code&gt; (&lt;em&gt;compdef-replay&lt;/em&gt;) can be used,
after &lt;code&gt;compinit&lt;/code&gt; will be called (and the original &lt;code&gt;compdef&lt;/code&gt; function will become
available), to execute all detected &lt;code&gt;compdef&lt;/code&gt; calls. To summarize:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zinit/bin/zinit.zsh

zinit load &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
...
compdef _gnu_generic fd  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; this will be intercepted by Zinit, because as the compinit&lt;/span&gt;
                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; isn't yet loaded, thus there's no such function `compdef'; yet&lt;/span&gt;
                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Zinit provides its own `compdef' function which saves the&lt;/span&gt;
                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; completion-definition for later possible re-run with `zinit&lt;/span&gt;
                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; cdreplay' or `zicdreplay' (the second one can be used in hooks&lt;/span&gt;
                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; like atload'', atinit'', etc.)&lt;/span&gt;
...
zinit load &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;other/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

autoload -Uz compinit
compinit

zinit cdreplay -q   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; -q is for quiet; actually run all the `compdef's saved before&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;`compinit` call (`compinit' declares the `compdef' function, so&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; it cannot be used until `compinit' is ran; Zinit solves this&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; via intercepting the `compdef'-calls and storing them for later&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; use with `zinit cdreplay')&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows to call compinit once.
Performance gains are huge, example shell startup time with double &lt;code&gt;compinit&lt;/code&gt;: &lt;strong&gt;0.980&lt;/strong&gt; sec, with
&lt;code&gt;cdreplay&lt;/code&gt; and single &lt;code&gt;compinit&lt;/code&gt;: &lt;strong&gt;0.156&lt;/strong&gt; sec.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-calling-compinit-with-turbo-mode" class="anchor" aria-hidden="true" href="#calling-compinit-with-turbo-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calling &lt;code&gt;compinit&lt;/code&gt; With Turbo Mode&lt;/h2&gt;
&lt;p&gt;If you load completions using &lt;code&gt;wait''&lt;/code&gt; Turbo mode then you can add
&lt;code&gt;atinit'zicompinit'&lt;/code&gt; to syntax-highlighting plugin (which should be the last
one loaded, as their (2 projects, &lt;a href="https://github.com/zsh-users/zsh-syntax-highlighting"&gt;z-sy-h&lt;/a&gt; &amp;amp;
&lt;a href="https://github.com/zdharma/fast-syntax-highlighting"&gt;f-sy-h&lt;/a&gt;)
documentation state), or &lt;code&gt;atload'zicompinit'&lt;/code&gt; to last
completion-related plugin. &lt;code&gt;zicompinit&lt;/code&gt; is a function that just runs &lt;code&gt;autoload compinit; compinit&lt;/code&gt;, created for convenience. There's also &lt;code&gt;zicdreplay&lt;/code&gt; which
will replay any caught compdefs so you can also do: &lt;code&gt;atinit'zicompinit; zicdreplay'&lt;/code&gt;, etc. Basically, the whole topic is the same as normal &lt;code&gt;compinit&lt;/code&gt; call,
but it is done in &lt;code&gt;atinit&lt;/code&gt; or &lt;code&gt;atload&lt;/code&gt; hook of the last related plugin with use of the
helper functions (&lt;code&gt;zicompinit&lt;/code&gt;,&lt;code&gt;zicdreplay&lt;/code&gt; &amp;amp; &lt;code&gt;zicdclear&lt;/code&gt; – see below for explanation
of the last one). To summarize:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zinit/bin/zinit.zsh

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Load using the for-syntax&lt;/span&gt;
zinit &lt;span class="pl-c1"&gt;wait&lt;/span&gt; lucid &lt;span class="pl-k"&gt;for&lt;/span&gt; \
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit &lt;span class="pl-c1"&gt;wait&lt;/span&gt; lucid &lt;span class="pl-k"&gt;for&lt;/span&gt; \
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;other/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

zinit &lt;span class="pl-c1"&gt;wait&lt;/span&gt; lucid atload&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zicompinit; zicdreplay&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; blockf &lt;span class="pl-k"&gt;for&lt;/span&gt; \
    zsh-users/zsh-completions&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-ignoring-compdefs" class="anchor" aria-hidden="true" href="#ignoring-compdefs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignoring Compdefs&lt;/h2&gt;
&lt;p&gt;If you want to ignore compdefs provided by some plugins or snippets, place their load commands
before commands loading other plugins or snippets, and issue &lt;code&gt;zinit cdclear&lt;/code&gt; (or
&lt;code&gt;zicdclear&lt;/code&gt;, designed to be used in hooks like &lt;code&gt;atload''&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-systemverilog"&gt;&lt;pre&gt;source &lt;span class="pl-k"&gt;~&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.zinit&lt;span class="pl-k"&gt;/&lt;/span&gt;bin&lt;span class="pl-k"&gt;/&lt;/span&gt;zinit.zsh
zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;plugins&lt;span class="pl-k"&gt;/&lt;/span&gt;git&lt;span class="pl-k"&gt;/&lt;/span&gt;git.plugin.zsh
zinit cdclear &lt;span class="pl-k"&gt;-&lt;/span&gt;q &lt;span class="pl-k"&gt;#&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; forget completions provided by &lt;span class="pl-k"&gt;Git&lt;/span&gt; &lt;span class="pl-en"&gt;plugin&lt;/span&gt;

zinit load &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
...
zinit load &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;other/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

autoload &lt;span class="pl-k"&gt;-&lt;/span&gt;Uz compinit
compinit
zinit cdreplay &lt;span class="pl-k"&gt;-&lt;/span&gt;q &lt;span class="pl-k"&gt;#&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; execute compdefs provided by rest of plugins
zinit cdlist &lt;span class="pl-k"&gt;#&lt;/span&gt; look at gathered compdefs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;cdreplay&lt;/code&gt; is important if you use plugins like
&lt;code&gt;OMZ::plugins/kubectl/kubectl.plugin.zsh&lt;/code&gt; or &lt;code&gt;asdf-vm/asdf&lt;/code&gt;, because those plugins call
&lt;code&gt;compdef&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disabling-system-wide-compinit-call-ubuntu" class="anchor" aria-hidden="true" href="#disabling-system-wide-compinit-call-ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disabling System-Wide &lt;code&gt;compinit&lt;/code&gt; Call (Ubuntu)&lt;/h2&gt;
&lt;p&gt;On Ubuntu users might get surprised that e.g. their completions work while they didn't
call &lt;code&gt;compinit&lt;/code&gt; in their &lt;code&gt;.zshrc&lt;/code&gt;. That's because the function is being called in
&lt;code&gt;/etc/zshrc&lt;/code&gt;. To disable this call – what is needed to avoid the slowdown and if user
loads any completion-equipped plugins, i.e. almost on 100% – add the following lines to
&lt;code&gt;~/.zshenv&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Skip the not really helping Ubuntu global compinit&lt;/span&gt;
skip_global_compinit=1&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-zinit-module" class="anchor" aria-hidden="true" href="#zinit-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zinit Module&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;p&gt;The module is a binary Zsh module (think about &lt;code&gt;zmodload&lt;/code&gt; Zsh command, it's that topic) which transparently and
automatically &lt;strong&gt;compiles sourced scripts&lt;/strong&gt;. Many plugin managers do not offer compilation of plugins, the module is
a solution to this. Even if a plugin manager does compile plugin's main script (like Zinit does), the script can
source smaller helper scripts or dependency libraries (for example, the prompt &lt;code&gt;geometry-zsh/geometry&lt;/code&gt; does that)
and there are very few solutions to that, which are demanding (e.g. specifying all helper files in plugin load
command and tracking updates to the plugin – in Zinit case: by using &lt;code&gt;compile&lt;/code&gt; ice-mod).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/zdharma/zinit/images/mod-auto-compile.png"&gt;&lt;img src="https://raw.githubusercontent.com/zdharma/zinit/images/mod-auto-compile.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-1" class="anchor" aria-hidden="true" href="#installation-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-without-zinit" class="anchor" aria-hidden="true" href="#without-zinit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Without Zinit&lt;/h3&gt;
&lt;p&gt;To install just the binary Zinit module &lt;strong&gt;standalone&lt;/strong&gt; (Zinit is not needed, the module can be used with any
other plugin manager), execute:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sh -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/mod-install.sh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This script will display what to add to &lt;code&gt;~/.zshrc&lt;/code&gt; (2 lines) and show usage instructions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-with-zinit" class="anchor" aria-hidden="true" href="#with-zinit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With Zinit&lt;/h3&gt;
&lt;p&gt;Zinit users can build the module by issuing following command instead of running above &lt;code&gt;mod-install.sh&lt;/code&gt; script
(the script is for e.g. &lt;code&gt;zgen&lt;/code&gt; users or users of any other plugin manager):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit module build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will compile the module and display instructions on what to add to &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-measuring-time-of-sources" class="anchor" aria-hidden="true" href="#measuring-time-of-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Measuring Time of &lt;code&gt;source&lt;/code&gt;s&lt;/h2&gt;
&lt;p&gt;Besides the compilation-feature, the module also measures &lt;strong&gt;duration&lt;/strong&gt; of each script sourcing. Issue &lt;code&gt;zpmod source-study&lt;/code&gt; after loading the module at top of &lt;code&gt;~/.zshrc&lt;/code&gt; to see a list of all sourced files with the time the
sourcing took in milliseconds on the left. This feature allows to profile the shell startup. Also, no script can
pass-through that check and you will obtain a complete list of all loaded scripts, like if Zshell itself was
tracking this. The list can be surprising.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h2&gt;
&lt;p&gt;To enable debug messages from the module set:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;typeset&lt;/span&gt; -g ZPLG_MOD_DEBUG=1&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-hints-and-tips" class="anchor" aria-hidden="true" href="#hints-and-tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hints and Tips&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-paths" class="anchor" aria-hidden="true" href="#customizing-paths"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing Paths&lt;/h2&gt;
&lt;p&gt;Following variables can be set to custom values, before sourcing Zinit. The
previous global variables like &lt;code&gt;$ZPLG_HOME&lt;/code&gt; have been removed to not pollute
the namespace – there's single &lt;code&gt;$ZINIT&lt;/code&gt; hash instead of &lt;code&gt;8&lt;/code&gt; string
variables. Please update your dotfiles.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;declare -A ZINIT  # initial Zinit's hash definition, if configuring before loading Zinit, and then:
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Hash Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[BIN_DIR]&lt;/td&gt;
&lt;td&gt; Where Zinit code resides, e.g.: "~/.zinit/bin"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[HOME_DIR]&lt;/td&gt;
&lt;td&gt; Where Zinit should create all working directories, e.g.: "~/.zinit"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[PLUGINS_DIR]&lt;/td&gt;
&lt;td&gt;Override single working directory – for plugins, e.g. "/opt/zsh/zinit/plugins"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[COMPLETIONS_DIR]&lt;/td&gt;
&lt;td&gt;As above, but for completion files, e.g. "/opt/zsh/zinit/root_completions"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[SNIPPETS_DIR]&lt;/td&gt;
&lt;td&gt; As above, but for snippets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[ZCOMPDUMP_PATH]&lt;/td&gt;
&lt;td&gt;Path to &lt;code&gt;.zcompdump&lt;/code&gt; file, with the file included (i.e. its name can be different)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[COMPINIT_OPTS]&lt;/td&gt;
&lt;td&gt;Options for &lt;code&gt;compinit&lt;/code&gt; call (i.e. done by &lt;code&gt;zicompinit&lt;/code&gt;), use to pass -C to speed up loading&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[MUTE_WARNINGS]&lt;/td&gt;
&lt;td&gt;If set to &lt;code&gt;1&lt;/code&gt;, then mutes some of the Zinit warnings, specifically the &lt;code&gt;plugin already registered&lt;/code&gt; warning&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There is also &lt;code&gt;$ZPFX&lt;/code&gt;, set by default to &lt;code&gt;~/.zinit/polaris&lt;/code&gt; – a directory
where software with &lt;code&gt;Makefile&lt;/code&gt;, etc. can be pointed to, by e.g. &lt;code&gt;atclone'./configure --prefix=$ZPFX'&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-non-github-local-plugins" class="anchor" aria-hidden="true" href="#non-github-local-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-GitHub (Local) Plugins&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;create&lt;/code&gt; subcommand with user name &lt;code&gt;_local&lt;/code&gt; (the default) to create plugin's
skeleton in &lt;code&gt;$ZINIT[PLUGINS_DIR]&lt;/code&gt;. It will be not connected with GitHub repository
(because of user name being &lt;code&gt;_local&lt;/code&gt;). To enter the plugin's directory use &lt;code&gt;cd&lt;/code&gt; command
with just plugin's name (without &lt;code&gt;_local&lt;/code&gt;, it's optional).&lt;/p&gt;
&lt;p&gt;If user name will not be &lt;code&gt;_local&lt;/code&gt;, then Zinit will create repository also on GitHub
and setup correct repository origin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-extending-git" class="anchor" aria-hidden="true" href="#extending-git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extending Git&lt;/h2&gt;
&lt;p&gt;There are several projects that provide git extensions. Installing them with
Zinit has many benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;all files are under &lt;code&gt;$HOME&lt;/code&gt; – no administrator rights needed,&lt;/li&gt;
&lt;li&gt;declarative setup (like Chef or Puppet) – copying &lt;code&gt;.zshrc&lt;/code&gt; to different account
brings also git-related setup,&lt;/li&gt;
&lt;li&gt;easy update by e.g. &lt;code&gt;zinit update --all&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Below is a configuration that adds multiple git extensions, loaded in Turbo mode,
two seconds after prompt:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bin/git-dsf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light zdharma/zsh-diff-so-fancy

zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;git-now&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light iwata/git-now

zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$ZPFX&lt;/span&gt;/bin/git-alias&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; make&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PREFIX=&lt;span class="pl-smi"&gt;$ZPFX&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; nocompile
zinit light tj/git-extras

zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atclone&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;perl Makefile.PL PREFIX=$ZPFX&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; atpull&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%atclone&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
            make&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;install&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$ZPFX&lt;/span&gt;/bin/git-cal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light k4rthik/git-cal&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Target directory for installed files is &lt;code&gt;$ZPFX&lt;/code&gt; (&lt;code&gt;~/.zinit/polaris&lt;/code&gt; by default).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-preinstalling-plugins" class="anchor" aria-hidden="true" href="#preinstalling-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preinstalling Plugins&lt;/h2&gt;
&lt;p&gt;If you create a Docker image that uses Zinit, or want to install Turbo-loaded
plugins before the shell starts interactively, you can invoke the
zinit-scheduler function in such a way, that it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;installs plugins without waiting for the prompt (i.e. it's script friendly),&lt;/li&gt;
&lt;li&gt;installs &lt;strong&gt;all&lt;/strong&gt; plugins instantly, without respecting the &lt;code&gt;wait''&lt;/code&gt; argument.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To accomplish this, use &lt;code&gt;burst&lt;/code&gt; argument and call &lt;code&gt;@zinit-scheduler&lt;/code&gt; function.
Example &lt;code&gt;Dockerfile&lt;/code&gt; entry:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;RUN zsh -i -c -- &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;@zinit-scheduler burst || true&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An example &lt;code&gt;Dockerfile&lt;/code&gt; can be found
&lt;a href="https://github.com/robobenklein/configs/blob/master/Dockerfile"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-help-and-community" class="anchor" aria-hidden="true" href="#getting-help-and-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help and Community&lt;/h1&gt;
&lt;p&gt;Do you need help or wish to get in touch with other Zinit users?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Visit our subreddit &lt;a href="https://www.reddit.com/r/zinit/" rel="nofollow"&gt;r/zinit&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chat with us in our IRC channel. Connect to chat.freenode.net:6697 (SSL) or chat.freenode.net:6667 and join #zinit. Following is a quick access via Webchat &lt;a href="https://kiwiirc.com/client/chat.freenode.net:+6697/#zinit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/908655b78be1caf3b277adedb9500f81e3e84bb8/68747470733a2f2f6b6977696972632e636f6d2f627574746f6e732f636861742e667265656e6f64652e6e65742f7a696e69742e706e67" alt="IRC" data-canonical-src="https://kiwiirc.com/buttons/chat.freenode.net/zinit.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or via Gitter &lt;a href="https://gitter.im/zdharma/zinit?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c54a31d91510766b0e6c0b7584ec67c3dd1cb431/68747470733a2f2f6261646765732e6769747465722e696d2f7a646861726d612f7a696e69742e737667" alt="Join the chat at https://gitter.im/zdharma/zinit" data-canonical-src="https://badges.gitter.im/zdharma/zinit.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>zdharma</author><guid isPermaLink="false">https://github.com/zdharma/zinit</guid><pubDate>Sat, 01 Feb 2020 00:20:00 GMT</pubDate></item><item><title>espressif/arduino-esp32 #21 in C, This month</title><link>https://github.com/espressif/arduino-esp32</link><description>&lt;p&gt;&lt;i&gt;Arduino core for the ESP32&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-arduino-core-for-the-esp32" class="anchor" aria-hidden="true" href="#arduino-core-for-the-esp32"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arduino core for the ESP32&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/espressif/arduino-esp32" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99b7b50e418e6ed0e37794fd520fd722396aa5e2/68747470733a2f2f7472617669732d63692e6f72672f6573707265737369662f61726475696e6f2d65737033322e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/espressif/arduino-esp32.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/espressif/arduino-esp32/workflows/ESP32%20Arduino%20CI/badge.svg"&gt;&lt;img src="https://github.com/espressif/arduino-esp32/workflows/ESP32%20Arduino%20CI/badge.svg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-need-help-or-have-a-question-join-the-chat-at-" class="anchor" aria-hidden="true" href="#need-help-or-have-a-question-join-the-chat-at-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need help or have a question? Join the chat at &lt;a href="https://gitter.im/espressif/arduino-esp32?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ff24f59c743e4e0b3c245e4dc2dbbeedf1ad306/68747470733a2f2f6261646765732e6769747465722e696d2f6573707265737369662f61726475696e6f2d65737033322e737667" alt="https://gitter.im/espressif/arduino-esp32" data-canonical-src="https://badges.gitter.im/espressif/arduino-esp32.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#development-status"&gt;Development Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-instructions"&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#decoding-exceptions"&gt;Decoding Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issuebug-report-template"&gt;Issue/Bug report template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#esp32dev-board-pinmap"&gt;ESP32Dev Board PINMAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-development-status" class="anchor" aria-hidden="true" href="#development-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development Status&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/arduino-esp32/releases/latest/"&gt;Latest stable release &lt;img src="https://camo.githubusercontent.com/8a1875aace3889f9ab48c65082f67d0a2592f85d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Release Version" data-canonical-src="https://img.shields.io/github/release/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt; &lt;img src="https://camo.githubusercontent.com/598cc61956fd795f6afeaa5f83b90b03e7b0dcaf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Release Date" data-canonical-src="https://img.shields.io/github/release-date/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1de0131ec4c1e3b3dd7b3103a06235070c1292e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/1de0131ec4c1e3b3dd7b3103a06235070c1292e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads/espressif/arduino-esp32/latest/total.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/arduino-esp32/releases/latest/"&gt;Latest development release &lt;img src="https://camo.githubusercontent.com/d887e6d3d611a266139041835312348149b19b1b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6573707265737369662f61726475696e6f2d65737033322f616c6c2e7376673f7374796c653d706c6173746963" alt="Development Version" data-canonical-src="https://img.shields.io/github/release/espressif/arduino-esp32/all.svg?style=plastic" style="max-width:100%;"&gt; &lt;img src="https://camo.githubusercontent.com/210eed8ebec694f2cbb39013624c5b256c194c02/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652d7072652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Development Date" data-canonical-src="https://img.shields.io/github/release-date-pre/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/65b7c8229e217d09829f318cbcc9b8765e5596ba/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732d7072652f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/65b7c8229e217d09829f318cbcc9b8765e5596ba/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732d7072652f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads-pre/espressif/arduino-esp32/latest/total.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Instructions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Using Arduino IDE Boards Manager (preferred)
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/boards_manager.md"&gt;Instructions for Boards Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using Arduino IDE with the development repository
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/windows.md"&gt;Instructions for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/mac.md"&gt;Instructions for Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/debian_ubuntu.md"&gt;Instructions for Debian/Ubuntu Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/fedora.md"&gt;Instructions for Fedora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/opensuse.md"&gt;Instructions for openSUSE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/platformio.md"&gt;Using PlatformIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/make.md"&gt;Building with make&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/esp-idf_component.md"&gt;Using as ESP-IDF component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/OTAWebUpdate/OTAWebUpdate.md"&gt;Using OTAWebUpdater&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-decoding-exceptions" class="anchor" aria-hidden="true" href="#decoding-exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Decoding exceptions&lt;/h3&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/me-no-dev/EspExceptionDecoder"&gt;EspExceptionDecoder&lt;/a&gt; to get meaningful call trace.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issuebug-report-template" class="anchor" aria-hidden="true" href="#issuebug-report-template"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issue/Bug report template&lt;/h3&gt;
&lt;p&gt;Before reporting an issue, make sure you've searched for similar one that was already created. Also make sure to go through all the issues labelled as &lt;a href="https://github.com/espressif/arduino-esp32/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20label%3A%22for%20reference%22%20"&gt;for reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, if you are sure no one else had the issue, follow the &lt;a href="docs/ISSUE_TEMPLATE.md"&gt;ISSUE_TEMPLATE&lt;/a&gt; while reporting any issue.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-esp32dev-board-pinmap" class="anchor" aria-hidden="true" href="#esp32dev-board-pinmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ESP32Dev Board PINMAP&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/esp32_pinmap.png"&gt;&lt;img src="docs/esp32_pinmap.png" alt="Pin Functions" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tip" class="anchor" aria-hidden="true" href="#tip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tip&lt;/h3&gt;
&lt;p&gt;Sometimes to program ESP32 via serial you must keep GPIO0 LOW during the programming process&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/arduino-esp32</guid><pubDate>Sat, 01 Feb 2020 00:21:00 GMT</pubDate></item><item><title>facebook/zstd #22 in C, This month</title><link>https://github.com/facebook/zstd</link><description>&lt;p&gt;&lt;i&gt;Zstandard - Fast real-time compression algorithm&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/facebook/zstd/dev/doc/images/zstd_logo86.png"&gt;&lt;img src="https://raw.githubusercontent.com/facebook/zstd/dev/doc/images/zstd_logo86.png" alt="Zstandard" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Zstandard&lt;/strong&gt;, or &lt;code&gt;zstd&lt;/code&gt; as short version, is a fast lossless compression algorithm,
targeting real-time compression scenarios at zlib-level and better compression ratios.
It's backed by a very fast entropy stage, provided by &lt;a href="https://github.com/Cyan4973/FiniteStateEntropy"&gt;Huff0 and FSE library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The project is provided as an open-source dual &lt;a href="LICENSE"&gt;BSD&lt;/a&gt; and &lt;a href="COPYING"&gt;GPLv2&lt;/a&gt; licensed &lt;strong&gt;C&lt;/strong&gt; library,
and a command line utility producing and decoding &lt;code&gt;.zst&lt;/code&gt;, &lt;code&gt;.gz&lt;/code&gt;, &lt;code&gt;.xz&lt;/code&gt; and &lt;code&gt;.lz4&lt;/code&gt; files.
Should your project require another programming language,
a list of known ports and bindings is provided on &lt;a href="http://www.zstd.net/#other-languages" rel="nofollow"&gt;Zstandard homepage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Development branch status:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/facebook/zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b5d141da23951adb465b2975ee9550048c703b9/68747470733a2f2f7472617669732d63692e6f72672f66616365626f6f6b2f7a7374642e7376673f6272616e63683d646576" alt="Build Status" title="Continuous Integration test suite" data-canonical-src="https://travis-ci.org/facebook/zstd.svg?branch=dev" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/YannCollet/zstd-p0yf0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24c1b80141c393a1de83716b92268d9dabc02d69/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f78743338776264786a6b356d7262656d2f6272616e63682f6465763f7376673d74727565" alt="Build status" title="Windows test suite" data-canonical-src="https://ci.appveyor.com/api/projects/status/xt38wbdxjk5mrbem/branch/dev?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/facebook/zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/17a2aa1bae71dd23de1e50ce454a985b26f08910/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b2f7a7374642f747265652f6465762e7376673f7374796c653d736869656c64" alt="Build status" title="Short test suite" data-canonical-src="https://circleci.com/gh/facebook/zstd/tree/dev.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cirrus-ci.com/github/facebook/zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce5aba60b966c76c39b58d4b64aaf8f2dc96c5ed/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f66616365626f6f6b2f7a7374642e7376673f6272616e63683d646576" alt="Build status" data-canonical-src="https://api.cirrus-ci.com/github/facebook/zstd.svg?branch=dev" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43aa9aa52b889d2a708f34c3f799f400e24fad63/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f7a7374642e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/zstd.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmarks&lt;/h2&gt;
&lt;p&gt;For reference, several fast compression algorithms were tested and compared
on a server running Arch Linux (&lt;code&gt;Linux version 5.0.5-arch1-1&lt;/code&gt;),
with a Core i9-9900K CPU @ 5.0GHz,
using &lt;a href="https://github.com/inikep/lzbench"&gt;lzbench&lt;/a&gt;, an open-source in-memory benchmark by @inikep
compiled with &lt;a href="https://gcc.gnu.org/" rel="nofollow"&gt;gcc&lt;/a&gt; 8.2.1,
on the &lt;a href="http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia" rel="nofollow"&gt;Silesia compression corpus&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compressor name&lt;/th&gt;
&lt;th&gt;Ratio&lt;/th&gt;
&lt;th&gt;Compression&lt;/th&gt;
&lt;th&gt;Decompress.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;zstd 1.4.4 -1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.884&lt;/td&gt;
&lt;td&gt;520 MB/s&lt;/td&gt;
&lt;td&gt;1600 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zlib 1.2.11 -1&lt;/td&gt;
&lt;td&gt;2.743&lt;/td&gt;
&lt;td&gt;110 MB/s&lt;/td&gt;
&lt;td&gt;440 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brotli 1.0.7 -0&lt;/td&gt;
&lt;td&gt;2.701&lt;/td&gt;
&lt;td&gt;430 MB/s&lt;/td&gt;
&lt;td&gt;470 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;quicklz 1.5.0 -1&lt;/td&gt;
&lt;td&gt;2.238&lt;/td&gt;
&lt;td&gt;600 MB/s&lt;/td&gt;
&lt;td&gt;800 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lzo1x 2.09 -1&lt;/td&gt;
&lt;td&gt;2.106&lt;/td&gt;
&lt;td&gt;680 MB/s&lt;/td&gt;
&lt;td&gt;950 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lz4 1.8.3&lt;/td&gt;
&lt;td&gt;2.101&lt;/td&gt;
&lt;td&gt;800 MB/s&lt;/td&gt;
&lt;td&gt;4220 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;snappy 1.1.4&lt;/td&gt;
&lt;td&gt;2.073&lt;/td&gt;
&lt;td&gt;580 MB/s&lt;/td&gt;
&lt;td&gt;2020 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lzf 3.6 -1&lt;/td&gt;
&lt;td&gt;2.077&lt;/td&gt;
&lt;td&gt;440 MB/s&lt;/td&gt;
&lt;td&gt;930 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Zstd can also offer stronger compression ratios at the cost of compression speed.
Speed vs Compression trade-off is configurable by small increments.
Decompression speed is preserved and remains roughly the same at all settings,
a property shared by most LZ compression algorithms, such as &lt;a href="http://www.zlib.net/" rel="nofollow"&gt;zlib&lt;/a&gt; or lzma.&lt;/p&gt;
&lt;p&gt;The following tests were run
on a server running Linux Debian (&lt;code&gt;Linux version 4.14.0-3-amd64&lt;/code&gt;)
with a Core i7-6700K CPU @ 4.0GHz,
using &lt;a href="https://github.com/inikep/lzbench"&gt;lzbench&lt;/a&gt;, an open-source in-memory benchmark by @inikep
compiled with &lt;a href="https://gcc.gnu.org/" rel="nofollow"&gt;gcc&lt;/a&gt; 7.3.0,
on the &lt;a href="http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia" rel="nofollow"&gt;Silesia compression corpus&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compression Speed vs Ratio&lt;/th&gt;
&lt;th&gt;Decompression Speed&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/CSpeed2.png"&gt;&lt;img src="doc/images/CSpeed2.png" alt="Compression Speed vs Ratio" title="Compression Speed vs Ratio" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/DSpeed3.png"&gt;&lt;img src="doc/images/DSpeed3.png" alt="Decompression Speed" title="Decompression Speed" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A few other algorithms can produce higher compression ratios at slower speeds, falling outside of the graph.
For a larger picture including slow modes, &lt;a href="doc/images/DCspeed5.png"&gt;click on this link&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-case-for-small-data-compression" class="anchor" aria-hidden="true" href="#the-case-for-small-data-compression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The case for Small Data compression&lt;/h2&gt;
&lt;p&gt;Previous charts provide results applicable to typical file and stream scenarios (several MB). Small data comes with different perspectives.&lt;/p&gt;
&lt;p&gt;The smaller the amount of data to compress, the more difficult it is to compress. This problem is common to all compression algorithms, and reason is, compression algorithms learn from past data how to compress future data. But at the beginning of a new data set, there is no "past" to build upon.&lt;/p&gt;
&lt;p&gt;To solve this situation, Zstd offers a &lt;strong&gt;training mode&lt;/strong&gt;, which can be used to tune the algorithm for a selected type of data.
Training Zstandard is achieved by providing it with a few samples (one file per sample). The result of this training is stored in a file called "dictionary", which must be loaded before compression and decompression.
Using this dictionary, the compression ratio achievable on small data improves dramatically.&lt;/p&gt;
&lt;p&gt;The following example uses the &lt;code&gt;github-users&lt;/code&gt; &lt;a href="https://github.com/facebook/zstd/releases/tag/v1.1.3"&gt;sample set&lt;/a&gt;, created from &lt;a href="https://developer.github.com/v3/users/#get-all-users"&gt;github public API&lt;/a&gt;.
It consists of roughly 10K records weighing about 1KB each.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compression Ratio&lt;/th&gt;
&lt;th&gt;Compression Speed&lt;/th&gt;
&lt;th&gt;Decompression Speed&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/dict-cr.png"&gt;&lt;img src="doc/images/dict-cr.png" alt="Compression Ratio" title="Compression Ratio" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/dict-cs.png"&gt;&lt;img src="doc/images/dict-cs.png" alt="Compression Speed" title="Compression Speed" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/dict-ds.png"&gt;&lt;img src="doc/images/dict-ds.png" alt="Decompression Speed" title="Decompression Speed" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These compression gains are achieved while simultaneously providing &lt;em&gt;faster&lt;/em&gt; compression and decompression speeds.&lt;/p&gt;
&lt;p&gt;Training works if there is some correlation in a family of small data samples. The more data-specific a dictionary is, the more efficient it is (there is no &lt;em&gt;universal dictionary&lt;/em&gt;).
Hence, deploying one dictionary per type of data will provide the greatest benefits.
Dictionary gains are mostly effective in the first few KB. Then, the compression algorithm will gradually use previously decoded content to better compress the rest of the file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dictionary-compression-how-to" class="anchor" aria-hidden="true" href="#dictionary-compression-how-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dictionary compression How To:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create the dictionary&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zstd --train FullPathToTrainingSet/* -o dictionaryName&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compress with dictionary&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zstd -D dictionaryName FILE&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Decompress with dictionary&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zstd -D dictionaryName --decompress FILE.zst&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-build-instructions" class="anchor" aria-hidden="true" href="#build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-makefile" class="anchor" aria-hidden="true" href="#makefile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Makefile&lt;/h3&gt;
&lt;p&gt;If your system is compatible with standard &lt;code&gt;make&lt;/code&gt; (or &lt;code&gt;gmake&lt;/code&gt;),
invoking &lt;code&gt;make&lt;/code&gt; in root directory will generate &lt;code&gt;zstd&lt;/code&gt; cli in root directory.&lt;/p&gt;
&lt;p&gt;Other available options include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;make install&lt;/code&gt; : create and install zstd cli, library and man pages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make check&lt;/code&gt; : create and run &lt;code&gt;zstd&lt;/code&gt;, tests its behavior on local platform&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cmake" class="anchor" aria-hidden="true" href="#cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cmake&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;cmake&lt;/code&gt; project generator is provided within &lt;code&gt;build/cmake&lt;/code&gt;.
It can generate Makefiles or other build scripts
to create &lt;code&gt;zstd&lt;/code&gt; binary, and &lt;code&gt;libzstd&lt;/code&gt; dynamic and static libraries.&lt;/p&gt;
&lt;p&gt;By default, &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; is set to &lt;code&gt;Release&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-meson" class="anchor" aria-hidden="true" href="#meson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meson&lt;/h3&gt;
&lt;p&gt;A Meson project is provided within &lt;a href="build/meson"&gt;&lt;code&gt;build/meson&lt;/code&gt;&lt;/a&gt;. Follow
build instructions in that directory.&lt;/p&gt;
&lt;p&gt;You can also take a look at &lt;a href=".travis.yml"&gt;&lt;code&gt;.travis.yml&lt;/code&gt;&lt;/a&gt; file for an
example about how Meson is used to build this project.&lt;/p&gt;
&lt;p&gt;Note that default build type is &lt;strong&gt;release&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-vcpkg" class="anchor" aria-hidden="true" href="#vcpkg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VCPKG&lt;/h3&gt;
&lt;p&gt;You can build and install zstd &lt;a href="https://github.com/Microsoft/vcpkg/"&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/vcpkg.git
cd vcpkg
./bootstrap-vcpkg.sh
./vcpkg integrate install
./vcpkg install zstd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The zstd port in vcpkg is kept up to date by Microsoft team members and community contributors.
If the version is out of date, please &lt;a href="https://github.com/Microsoft/vcpkg"&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-visual-studio-windows" class="anchor" aria-hidden="true" href="#visual-studio-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio (Windows)&lt;/h3&gt;
&lt;p&gt;Going into &lt;code&gt;build&lt;/code&gt; directory, you will find additional possibilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Projects for Visual Studio 2005, 2008 and 2010.
&lt;ul&gt;
&lt;li&gt;VS2010 project is compatible with VS2012, VS2013, VS2015 and VS2017.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Automated build scripts for Visual compiler by &lt;a href="https://github.com/KrzysFR"&gt;@KrzysFR&lt;/a&gt;, in &lt;code&gt;build/VS_scripts&lt;/code&gt;,
which will build &lt;code&gt;zstd&lt;/code&gt; cli and &lt;code&gt;libzstd&lt;/code&gt; library without any need to open Visual Studio solution.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-buck" class="anchor" aria-hidden="true" href="#buck"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Buck&lt;/h3&gt;
&lt;p&gt;You can build the zstd binary via buck by executing: &lt;code&gt;buck build programs:zstd&lt;/code&gt; from the root of the repo.
The output binary will be in &lt;code&gt;buck-out/gen/programs/&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;Zstandard is currently deployed within Facebook. It is used continuously to compress large amounts of data in multiple formats and use cases.
Zstandard is considered safe for production environments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Zstandard is dual-licensed under &lt;a href="LICENSE"&gt;BSD&lt;/a&gt; and &lt;a href="COPYING"&gt;GPLv2&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;The "dev" branch is the one where all contributions are merged before reaching "master".
If you plan to propose a patch, please commit into the "dev" branch, or its own feature branch.
Direct commit to "master" are not permitted.
For more information, please read &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/zstd</guid><pubDate>Sat, 01 Feb 2020 00:22:00 GMT</pubDate></item><item><title>bigtreetech/BIGTREETECH-TouchScreenFirmware #23 in C, This month</title><link>https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware</link><description>&lt;p&gt;&lt;i&gt;support TFT35 V1.0/V1.1/V1.2/V2.0/V3.0, TFT28, TFT24 V1.1&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-software-version" class="anchor" aria-hidden="true" href="#software-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;software version&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-vxx25" class="anchor" aria-hidden="true" href="#vxx25"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;change character encoding from GBK to UTF-8, compatible with new languages&lt;/li&gt;
&lt;li&gt;add "Preheat" menu for one button preheating(PLA, PETG, ABS)&lt;/li&gt;
&lt;li&gt;add command for Bltouch in "ABL"(automatic leveling) menu&lt;/li&gt;
&lt;li&gt;add More "menu" in printing (set RGB color, extrude for change filament, etc...)&lt;/li&gt;
&lt;li&gt;Rearranged the "Settings" menu
&lt;ul&gt;
&lt;li&gt;add silent mode(disable the buzzer)&lt;/li&gt;
&lt;li&gt;add automatic shutdown after printing feature(default disable, enable in menu "Settings-&amp;gt;Feature-&amp;gt;AutoPower" or "Printing-&amp;gt;Feature-&amp;gt;AutoPower")&lt;/li&gt;
&lt;li&gt;add smart filament detect feature (enable in menu "Settings-&amp;gt;Feature-&amp;gt;Smart ON", NEED Marlin to add "M114 E" command support, which will be merged into Mallin as soon as possible)&lt;/li&gt;
&lt;li&gt;New languages, currently supporting 11 languages: English, simplified Chinese, Russian, Japanese, Armenian, German, Czech, Spanish, French, Portuguese, Italian&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Added a Custom gcode menu&lt;/li&gt;
&lt;li&gt;Added unified menu
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware/tree/master/Copy%20to%20SD%20Card%20root%20directory%20to%20update%20-%20Unified%20Menu%20Material%20theme"&gt;unified menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/38851044/69716869-efb12100-1145-11ea-9b4e-e50a215e2def.png"&gt;&lt;img src="https://user-images.githubusercontent.com/38851044/69716869-efb12100-1145-11ea-9b4e-e50a215e2def.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware/tree/master/Copy%20to%20SD%20Card%20root%20directory%20to%20update"&gt;classic menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/38851044/69717274-b7f6a900-1146-11ea-94c4-4033f23215bb.png"&gt;&lt;img src="https://user-images.githubusercontent.com/38851044/69717274-b7f6a900-1146-11ea-94c4-4033f23215bb.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unified menu add status menu (hotend &amp;amp; bed temperature, fan speed, move speed, flow, XYZ position)&lt;/li&gt;
&lt;li&gt;Gcode file under classic menu is in icon mode, and model preview feature is added(Use with this &lt;a href="https://github.com/bigtreetech/BiQU_Tool"&gt;tool&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Gcode file under unified menu is in list mode, unable to preview the model, but more friendly for long filename&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fixed the bug that tft35 V3.0 could not connect to printer when switching from LCD12864 mode to touch screen mode&lt;/li&gt;
&lt;li&gt;Fixed the bug of printing from SD card on board&lt;/li&gt;
&lt;li&gt;Fixed print random stop when enable "keep alive" feature in Marlin&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vxx24" class="anchor" aria-hidden="true" href="#vxx24"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;add some settings (Before that, update your icons folder)&lt;/li&gt;
&lt;li&gt;Long Press Touch Screen or Rotary Encoder entry mode selection(Marlin's mode is SPI mode, touch mode is UART mode)&lt;/li&gt;
&lt;li&gt;setting -&amp;gt; more set -&amp;gt; Change 12864 background color&lt;/li&gt;
&lt;li&gt;setting -&amp;gt; more set -&amp;gt; Change 12864 font color&lt;/li&gt;
&lt;li&gt;setting -&amp;gt; more set -&amp;gt; GCODE&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vxx23" class="anchor" aria-hidden="true" href="#vxx23"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;add support TFT35 V3.0 (STM32F207)&lt;/li&gt;
&lt;li&gt;add filament runout on/off button&lt;/li&gt;
&lt;li&gt;replace Power off button with Rotate UI button&lt;/li&gt;
&lt;li&gt;improve the compatibility of smoothieware&lt;/li&gt;
&lt;li&gt;add manually leveling menu&lt;/li&gt;
&lt;li&gt;add multi-serial port function (Touch screen can be directly controlled by ESP3D)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vxx22" class="anchor" aria-hidden="true" href="#vxx22"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;clean up framework&lt;/li&gt;
&lt;li&gt;add support TFT35 V2.0 (SDIO)&lt;/li&gt;
&lt;li&gt;add function filament runout detect, power supply control&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vxx21" class="anchor" aria-hidden="true" href="#vxx21"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;fix unable to print properly from U disk(Stop printing at random)&lt;/li&gt;
&lt;li&gt;fix busy popup with "Processing" in Printing and Stop Printing&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vxx20" class="anchor" aria-hidden="true" href="#vxx20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The first version of the Integration Project&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-install-vscode-and-platformio-for-compile" class="anchor" aria-hidden="true" href="#how-to-install-vscode-and-platformio-for-compile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to install vscode and platformio for compile&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Install the compilation environment, We recommend vscode + platformio. If you have already installed it, please skip this step.  If not, please see &lt;a href="https://github.com/bigtreetech/Document/blob/master/How%20to%20install%20VScode+Platformio.md"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-compile-firmware" class="anchor" aria-hidden="true" href="#how-to-compile-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;how to compile firmware&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Please see the picture(①), which is the PlatformIO plugin, and then click ② Open Project to open the project.
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/56637513-6b258e00-669e-11e9-9fad-d0571e57499e.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/56637513-6b258e00-669e-11e9-9fad-d0571e57499e.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find the BIGTREETECH TFT35 firmware source directory , then click Open
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/56637532-77115000-669e-11e9-809b-f6bc25412f75.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/56637532-77115000-669e-11e9-809b-f6bc25412f75.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After opening the project, go to the platformio.ini file and change the default environment .
the “env_default” can be “BIGTREE_TFT35_V1_2”, “BIGTREE_TFT35_V1_1”, and “BIGTREE_TFT35_V1_0”
it depends on your hardware.
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/56637542-7d073100-669e-11e9-9e9e-1efa6b73be5d.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/56637542-7d073100-669e-11e9-9e9e-1efa6b73be5d.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After the modification is complete, press Ctrl+Alt+B, and platformio will automatically download the compiled component and compile it.
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/56637550-809ab800-669e-11e9-99d3-6b502e294688.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/56637550-809ab800-669e-11e9-99d3-6b502e294688.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After the compilation is successful, a BIQU_TFT35_V1.x.x.bin file will be generated in the .pioenvs\BIGTREE_TFT35_V1_x directory. We need copy this file to the SD card, and insert this SD Card to TFT35 Touch Screen, then reset the Touch Screen,  the firmware will be updated automatically.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-config-firmware" class="anchor" aria-hidden="true" href="#how-to-config-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;how to config firmware&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/61276962-b229a800-a7e3-11e9-83fe-ec5e944f1463.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/61276962-b229a800-a7e3-11e9-83fe-ec5e944f1463.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;
Modify the value of&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#define TOOL_NUM     1    //set in 1~6&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;#define EXTRUDER_NUM 1    //set in 1~6&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;#define FAN_NUM      1    //set in 1~6&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;to config hotend, extruder, fan number&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-update-firmware" class="anchor" aria-hidden="true" href="#how-to-update-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;how to update firmware&lt;/h1&gt;
&lt;p&gt;copy firmware(.bin), fonts(TFT24/font) and icons(TFT24/bmp) to SD Card root directory, insert SD card to touch screen, reset touch screen and then it will be updated automatically.&lt;/p&gt;
&lt;p&gt;unified menu in &lt;a href="https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware/tree/master/Copy%20to%20SD%20Card%20root%20directory%20to%20update%20-%20Unified%20Menu%20Material%20theme"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/38851044/69716869-efb12100-1145-11ea-9b4e-e50a215e2def.png"&gt;&lt;img src="https://user-images.githubusercontent.com/38851044/69716869-efb12100-1145-11ea-9b4e-e50a215e2def.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;classic menu in &lt;a href="https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware/tree/master/Copy%20to%20SD%20Card%20root%20directory%20to%20update"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/38851044/69717274-b7f6a900-1146-11ea-94c4-4033f23215bb.png"&gt;&lt;img src="https://user-images.githubusercontent.com/38851044/69717274-b7f6a900-1146-11ea-94c4-4033f23215bb.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The structure of the files in SD Card should be as follows
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/61274462-75a77d80-a7de-11e9-8e86-04d3d2abfb4d.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/61274462-75a77d80-a7de-11e9-8e86-04d3d2abfb4d.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;strong&gt;.bin&lt;/strong&gt; file is the firmware of BIGTREETECH TFT24, this file needs to be updated every time for update function&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;TFT24&lt;/strong&gt; folder contains the icons and fonts, if you want to customize them, see &lt;a href="https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware/tree/master/readme/English"&gt;here&lt;/a&gt; and update the folder by SD Card
&lt;ul&gt;
&lt;li&gt;icons: BMP format, 24/32 bit depth  (don't need update every time)&lt;/li&gt;
&lt;li&gt;fonts: this is a bitmap fonts of ASCII and unicode. (don't need update every time)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bigtreetech</author><guid isPermaLink="false">https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware</guid><pubDate>Sat, 01 Feb 2020 00:23:00 GMT</pubDate></item><item><title>libvips/libvips #24 in C, This month</title><link>https://github.com/libvips/libvips</link><description>&lt;p&gt;&lt;i&gt;A fast image processing library with low memory needs.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-libvips--an-image-processing-library" class="anchor" aria-hidden="true" href="#libvips--an-image-processing-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libvips : an image processing library&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/libvips/libvips" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d52be3aac1fd64d2e182927bc36dba1cdaa4c964/68747470733a2f2f7472617669732d63692e6f72672f6c6962766970732f6c6962766970732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/libvips/libvips.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=2&amp;amp;q=proj:libvips" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/49c3d2fef58a7c78a927b0391a0ddb473cef100e/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f6c6962766970732e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/libvips.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/jcupitt-libvips" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/39f508ca92de16be148e1a3f92ec9cb5fa8b76f9/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f363530332f62616467652e737667" alt="Coverity Status" data-canonical-src="https://scan.coverity.com/projects/6503/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;libvips is a &lt;a href="https://github.com/libvips/libvips/wiki/Why-is-libvips-quick"&gt;demand-driven, horizontally
threaded&lt;/a&gt;
image processing library. Compared to similar
libraries, &lt;a href="https://github.com/libvips/libvips/wiki/Speed-and-memory-use"&gt;libvips runs quickly and uses little
memory&lt;/a&gt;.
libvips is licensed under the &lt;a href="https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html" rel="nofollow"&gt;LGPL
2.1+&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It has around &lt;a href="http://libvips.github.io/libvips/API/current/func-list.html" rel="nofollow"&gt;300
operations&lt;/a&gt;
covering arithmetic, histograms, convolution, morphological
operations, frequency filtering, colour, resampling,
statistics and others. It supports a large range of &lt;a href="http://libvips.github.io/libvips/API/current/VipsImage.html#VipsBandFormat" rel="nofollow"&gt;numeric
types&lt;/a&gt;,
from 8-bit int to 128-bit complex. Images can have any number of bands.
It supports a good range of image formats, including JPEG, TIFF, PNG,
WebP, HEIC, FITS, Matlab, OpenEXR, PDF, SVG, HDR, PPM / PGM / PFM, CSV,
GIF, Analyze, NIfTI, DeepZoom, and OpenSlide. It can also load images via
ImageMagick or GraphicsMagick, letting it work with formats like DICOM.&lt;/p&gt;
&lt;p&gt;It comes with bindings for
&lt;a href="http://libvips.github.io/libvips/API/current/using-from-c.html" rel="nofollow"&gt;C&lt;/a&gt;,
&lt;a href="http://libvips.github.io/libvips/API/current/using-from-cpp.html" rel="nofollow"&gt;C++&lt;/a&gt;,
and the
&lt;a href="http://libvips.github.io/libvips/API/current/using-cli.html" rel="nofollow"&gt;command-line&lt;/a&gt;.
Full bindings are available for &lt;a href="https://rubygems.org/gems/ruby-vips" rel="nofollow"&gt;Ruby&lt;/a&gt;,
&lt;a href="https://pypi.python.org/pypi/pyvips" rel="nofollow"&gt;Python&lt;/a&gt;,
&lt;a href="https://github.com/libvips/php-vips"&gt;PHP&lt;/a&gt;,
&lt;a href="https://www.nuget.org/packages/NetVips" rel="nofollow"&gt;C# / .NET&lt;/a&gt;,
&lt;a href="https://github.com/davidbyttow/govips"&gt;Go&lt;/a&gt;, and
&lt;a href="https://github.com/libvips/lua-vips"&gt;Lua&lt;/a&gt;. libvips
is used as an image processing engine by &lt;a href="https://www.npmjs.org/package/sharp" rel="nofollow"&gt;sharp
(on node.js)&lt;/a&gt;,
&lt;a href="https://github.com/h2non/bimg"&gt;bimg&lt;/a&gt;, &lt;a href="https://github.com/DAddYE/vips"&gt;sharp
for Go&lt;/a&gt;, &lt;a href="http://edgeguides.rubyonrails.org/active_storage_overview.html" rel="nofollow"&gt;Ruby on
Rails&lt;/a&gt;,
&lt;a href="https://github.com/eltiare/carrierwave-vips"&gt;carrierwave-vips&lt;/a&gt;,
&lt;a href="http://www.mediawiki.org/wiki/Extension:VipsScaler" rel="nofollow"&gt;mediawiki&lt;/a&gt;,
&lt;a href="https://github.com/aferrero2707/PhotoFlow"&gt;PhotoFlow&lt;/a&gt; and others.
The official libvips GUI is &lt;a href="https://github.com/libvips/nip2"&gt;nip2&lt;/a&gt;,
a strange combination of a spreadsheet and an photo editor.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h1&gt;
&lt;p&gt;There are packages for most Unix-like operating systems, including
macOS. Check your package manager.&lt;/p&gt;
&lt;p&gt;There are binaries for Windows in
&lt;a href="https://github.com/libvips/libvips/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://libvips.github.io/libvips" rel="nofollow"&gt;libvips website&lt;/a&gt; has &lt;a href="https://libvips.github.io/libvips/install.html" rel="nofollow"&gt;detailed
install notes&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building-libvips-from-a-source-tarball" class="anchor" aria-hidden="true" href="#building-libvips-from-a-source-tarball"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building libvips from a source tarball&lt;/h1&gt;
&lt;p&gt;We keep pre-baked tarballs in
&lt;a href="https://github.com/libvips/libvips/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Untar, then in the libvips directory you should just be able to do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check the summary at the end of &lt;code&gt;configure&lt;/code&gt; carefully.  libvips must have
&lt;code&gt;build-essential&lt;/code&gt;, &lt;code&gt;pkg-config&lt;/code&gt;, &lt;code&gt;glib2.0-dev&lt;/code&gt;, &lt;code&gt;libexpat1-dev&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You'll need the dev packages for the file format support you want. For basic
jpeg and tiff support, you'll need &lt;code&gt;libtiff5-dev&lt;/code&gt;, &lt;code&gt;libjpeg-turbo8-dev&lt;/code&gt;,
and &lt;code&gt;libgsf-1-dev&lt;/code&gt;.  See the &lt;strong&gt;Dependencies&lt;/strong&gt; section below for a full list
of the things that libvips can be configured to use.&lt;/p&gt;
&lt;p&gt;Once &lt;code&gt;configure&lt;/code&gt; is looking OK, compile and install with the usual:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default this will install files to &lt;code&gt;/usr/local&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h1&gt;
&lt;p&gt;Run the test suite with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make check
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run a specific test with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pytest --verbose
pytest test/test-suite/test_foreign.py -k test_tiff
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-building-libvips-from-git" class="anchor" aria-hidden="true" href="#building-libvips-from-git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building libvips from git&lt;/h1&gt;
&lt;p&gt;Clone the latest sources with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git://github.com/libvips/libvips.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Building from git needs more packages -- you'll need at least &lt;code&gt;gtk-doc&lt;/code&gt;
and &lt;code&gt;gobject-introspection&lt;/code&gt;, see the dependencies section below. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install gtk-doc 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then build the build system with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./autogen.sh --prefix=/home/john/vips
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Debug build:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CFLAGS="-g -Wall" CXXFLAGS="-g -Wall" \
  ./configure --prefix=/home/john/vips --enable-debug
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Leak check. Use the suppressions file &lt;code&gt;supp/valgrind.supp&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export G_DEBUG=gc-friendly
valgrind --suppressions=vips-x.y.z/supp/valgrind.supp \
     --leak-check=yes \
  vips ... &amp;gt; vips-vg.log 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Memory error debug:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;valgrind --vgdb=yes --vgdb-error=0 vips  ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;valgrind threading check:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;valgrind --tool=helgrind vips ... &amp;gt; vips-vg.log 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Clang build:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CC=clang CXX=clang++ ./configure --prefix=/home/john/vips
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Clang static analysis:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scan-build ./configure --disable-introspection --disable-debug
scan-build -o scan -v make 
scan-view scan/2013-11-22-2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Clang dynamic analysis:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FLAGS="-g -O1 -fno-omit-frame-pointer"
CC=clang CXX=clang++ LD=clang \
  CFLAGS="$FLAGS" CXXFLAGS="$FLAGS" LDFLAGS=-fsanitize=address \
  ./configure --prefix=/home/john/vips 

FLAGS="-O1 -g -fsanitize=thread"
FLAGS="$FLAGS -fPIC"
FLAGS="$FLAGS -fno-omit-frame-pointer -fno-optimize-sibling-calls"
CC=clang CXX=clang++ LD=clang \
  CFLAGS="$FLAGS" CXXFLAGS="$FLAGS" \
  LDFLAGS="-fsanitize=thread -fPIC" \
  ./configure --prefix=/home/john/vips \
    --without-magick \
    --disable-introspection
G_DEBUG=gc-friendly vips copy ~/pics/k2.jpg x.jpg &amp;gt;&amp;amp; log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Build with the GCC auto-vectorizer and diagnostics (or just -O3):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FLAGS="-O2 -march=native -ffast-math"
FLAGS="$FLAGS -ftree-vectorize -fdump-tree-vect-details"
CFLAGS="$FLAGS" CXXFLAGS="$FLAGS" \
  ./configure --prefix=/home/john/vips 
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h1&gt;
&lt;p&gt;libvips has to have &lt;code&gt;glib2.0-dev&lt;/code&gt; and &lt;code&gt;libexpat1-dev&lt;/code&gt;. Other dependencies
are optional.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-optional-dependencies" class="anchor" aria-hidden="true" href="#optional-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional dependencies&lt;/h2&gt;
&lt;p&gt;If suitable versions are found, libvips will add support for the following
libraries automatically. See &lt;code&gt;./configure --help&lt;/code&gt; for a set of flags to
control library detection. Packages are generally found with &lt;code&gt;pkg-config&lt;/code&gt;,
so make sure that is working.&lt;/p&gt;
&lt;p&gt;Libraries like giflib and nifti do not use &lt;code&gt;pkg-config&lt;/code&gt; so libvips will also
look for them in the default path and in &lt;code&gt;$prefix&lt;/code&gt;. If you have installed
your own versions of these libraries in a different location, libvips will
not see them. Use switches to libvips configure like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --prefix=/Users/john/vips \
  --with-giflib-includes=/opt/local/include \
  --with-giflib-libraries=/opt/local/lib 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or perhaps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CFLAGS="-g -Wall -I/opt/local/include -L/opt/local/lib" \
  CXXFLAGS="-g -Wall -I/opt/local/include -L/opt/local/lib" \
  ./configure --prefix=/Users/john/vips 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-libjpeg" class="anchor" aria-hidden="true" href="#libjpeg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libjpeg&lt;/h3&gt;
&lt;p&gt;The IJG JPEG library. Use the &lt;code&gt;-turbo&lt;/code&gt; version if you can.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-libexif" class="anchor" aria-hidden="true" href="#libexif"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libexif&lt;/h3&gt;
&lt;p&gt;If available, libvips adds support for EXIF metadata in JPEG files.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-giflib" class="anchor" aria-hidden="true" href="#giflib"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;giflib&lt;/h3&gt;
&lt;p&gt;The standard gif loader. If this is not present, vips will try to load gifs
via imagemagick instead.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-librsvg" class="anchor" aria-hidden="true" href="#librsvg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;librsvg&lt;/h3&gt;
&lt;p&gt;The usual SVG loader. If this is not present, vips will try to load SVGs
via imagemagick instead.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pdfium" class="anchor" aria-hidden="true" href="#pdfium"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PDFium&lt;/h3&gt;
&lt;p&gt;If present, libvips will attempt to load PDFs via PDFium. This library must be
packaged by &lt;a href="https://github.com/jcupitt/docker-builds/tree/master/pdfium"&gt;https://github.com/jcupitt/docker-builds/tree/master/pdfium&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If PDFium is not detected, libvips will look for poppler-glib instead.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-poppler-glib" class="anchor" aria-hidden="true" href="#poppler-glib"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;poppler-glib&lt;/h3&gt;
&lt;p&gt;The Poppler PDF renderer, with a glib API. If this is not present, vips
will try to load PDFs via imagemagick.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-libgsf-1" class="anchor" aria-hidden="true" href="#libgsf-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libgsf-1&lt;/h3&gt;
&lt;p&gt;If available, libvips adds support for creating image pyramids with &lt;code&gt;dzsave&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-libtiff" class="anchor" aria-hidden="true" href="#libtiff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libtiff&lt;/h3&gt;
&lt;p&gt;The TIFF library. It needs to be built with support for JPEG and
ZIP compression. 3.4b037 and later are known to be OK.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fftw3" class="anchor" aria-hidden="true" href="#fftw3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fftw3&lt;/h3&gt;
&lt;p&gt;If libvips finds this library, it uses it for fourier transforms.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-lcms2" class="anchor" aria-hidden="true" href="#lcms2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lcms2&lt;/h3&gt;
&lt;p&gt;If present, &lt;code&gt;vips_icc_import()&lt;/code&gt;, &lt;code&gt;vips_icc_export()&lt;/code&gt; and &lt;code&gt;vips_icc_transform()&lt;/code&gt;
are available for transforming images with ICC profiles.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-libpng" class="anchor" aria-hidden="true" href="#libpng"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libpng&lt;/h3&gt;
&lt;p&gt;If present, libvips can load and save png files.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-libimagequant" class="anchor" aria-hidden="true" href="#libimagequant"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libimagequant&lt;/h3&gt;
&lt;p&gt;If present, libvips can write 8-bit palette-ised PNGs.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-imagemagick-or-optionally-graphicsmagick" class="anchor" aria-hidden="true" href="#imagemagick-or-optionally-graphicsmagick"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ImageMagick, or optionally GraphicsMagick&lt;/h3&gt;
&lt;p&gt;If available, libvips adds support for loading all libMagick-supported
image file types. Use &lt;code&gt;--with-magickpackage=GraphicsMagick&lt;/code&gt; to build against
graphicsmagick instead.&lt;/p&gt;
&lt;p&gt;Imagemagick 6.9+ needs to have been built with &lt;code&gt;--with-modules&lt;/code&gt;. Most packaged
IMs are, I think.&lt;/p&gt;
&lt;p&gt;If you are going to be using libvips with untrusted images, perhaps in a
web server, for example, you should consider the security implications of
enabling a package with such a large attack surface.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pangoft2" class="anchor" aria-hidden="true" href="#pangoft2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pangoft2&lt;/h3&gt;
&lt;p&gt;If available, libvips adds support for text rendering. You need the
package pangoft2 in &lt;code&gt;pkg-config --list-all&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-orc-04" class="anchor" aria-hidden="true" href="#orc-04"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;orc-0.4&lt;/h3&gt;
&lt;p&gt;If available, vips will accelerate some operations with this run-time
compiler.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-matio" class="anchor" aria-hidden="true" href="#matio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;matio&lt;/h3&gt;
&lt;p&gt;If available, vips can load images from Matlab save files.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cfitsio" class="anchor" aria-hidden="true" href="#cfitsio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cfitsio&lt;/h3&gt;
&lt;p&gt;If available, vips can load FITS images.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-libwebp" class="anchor" aria-hidden="true" href="#libwebp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libwebp&lt;/h3&gt;
&lt;p&gt;If available, vips can load and save WebP images.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-libniftiio" class="anchor" aria-hidden="true" href="#libniftiio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libniftiio&lt;/h3&gt;
&lt;p&gt;If available, vips can load and save NIFTI images.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-openexr" class="anchor" aria-hidden="true" href="#openexr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenEXR&lt;/h3&gt;
&lt;p&gt;If available, libvips will directly read (but not write, sadly)
OpenEXR images.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-openslide" class="anchor" aria-hidden="true" href="#openslide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenSlide&lt;/h3&gt;
&lt;p&gt;If available, libvips can load OpenSlide-supported virtual slide
files: Aperio, Hamamatsu, Leica, MIRAX, Sakura, Trestle, and Ventana.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-libheif" class="anchor" aria-hidden="true" href="#libheif"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libheif&lt;/h3&gt;
&lt;p&gt;If available, libvips can load and save HEIC images.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-code-contributors" class="anchor" aria-hidden="true" href="#code-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Contributors&lt;/h3&gt;
&lt;p&gt;This project exists thanks to all the people who contribute.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/libvips/libvips/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/ca78416bfd8f6c22e94eb160ad450e88eecd2d7b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/libvips/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-organizations" class="anchor" aria-hidden="true" href="#organizations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Organizations&lt;/h3&gt;
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/libvips/organization/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9aa606ae97ce9a858f805521ff4c80736f4450f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f6f7267616e697a6174696f6e2f302f6176617461722e737667" data-canonical-src="https://opencollective.com/libvips/organization/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/libvips/organization/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/23587942c7264ba3ce4f1eb19b96e2243a87b3a8/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f6f7267616e697a6174696f6e2f312f6176617461722e737667" data-canonical-src="https://opencollective.com/libvips/organization/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/libvips/organization/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c6d733fb7fc9eb5b6c7237da91bb7da52d7101e4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f6f7267616e697a6174696f6e2f322f6176617461722e737667" data-canonical-src="https://opencollective.com/libvips/organization/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/libvips/organization/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ab8207c5ceb311818e168c6a5c6cd0ac80d1375/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f6f7267616e697a6174696f6e2f332f6176617461722e737667" data-canonical-src="https://opencollective.com/libvips/organization/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/libvips/organization/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21507cf0b72c554ad77507a7631eeb5867b14b47/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f6f7267616e697a6174696f6e2f342f6176617461722e737667" data-canonical-src="https://opencollective.com/libvips/organization/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/libvips/organization/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bfb47607240de2e8230cbc2ab4d51105cdd44a2b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f6f7267616e697a6174696f6e2f352f6176617461722e737667" data-canonical-src="https://opencollective.com/libvips/organization/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/libvips/organization/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22be71ff81916d9b21cd5ad237433075defa3f46/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f6f7267616e697a6174696f6e2f362f6176617461722e737667" data-canonical-src="https://opencollective.com/libvips/organization/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/libvips/organization/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5104bd48570e00c417a243725612ed186e9203f1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f6f7267616e697a6174696f6e2f372f6176617461722e737667" data-canonical-src="https://opencollective.com/libvips/organization/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/libvips/organization/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce154af611f20385780a51e89e71cdc998a688a7/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f6f7267616e697a6174696f6e2f382f6176617461722e737667" data-canonical-src="https://opencollective.com/libvips/organization/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/libvips/organization/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/77455844ec678123208f4949b50d9068147fd0aa/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6c6962766970732f6f7267616e697a6174696f6e2f392f6176617461722e737667" data-canonical-src="https://opencollective.com/libvips/organization/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>libvips</author><guid isPermaLink="false">https://github.com/libvips/libvips</guid><pubDate>Sat, 01 Feb 2020 00:24:00 GMT</pubDate></item><item><title>coolsnowwolf/lede #25 in C, This month</title><link>https://github.com/coolsnowwolf/lede</link><description>&lt;p&gt;&lt;i&gt;Lean's OpenWrt source&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;﻿Welcome to Lean's  git source of OpenWrt and packages

中文：如何编译自己需要的 OpenWrt 固件

注意：
1. 不要用 root 用户 git 和编译！！！
2. 国内用户编译前最好准备好梯子
3. 默认登陆IP 192.168.1.1, 密码 password

编译命令如下:

1. 首先装好 Ubuntu 64bit，推荐  Ubuntu  14 LTS x64

2. 命令行输入 sudo apt-get update ，然后输入
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler

3. git clone &lt;a href="https://github.com/coolsnowwolf/lede"&gt;https://github.com/coolsnowwolf/lede&lt;/a&gt; 命令下载好源代码，然后 cd lede 进入目录

4. ./scripts/feeds update -a 
   ./scripts/feeds install -a
   make menuconfig 

5. 最后选好你要的路由，输入 make -j1 V=s （-j1 后面是线程数。第一次编译推荐用单线程，国内请尽量全局科学上网）即可开始编译你要的固件了。

本套代码保证肯定可以编译成功。里面包括了 R9 所有源代码，包括 IPK 的。

你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！

特别提示：
1.源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件，SSL 安全是互联网最后的壁垒。安全干净才是固件应该做到的；
2.如有技术问题需要讨论，欢迎加入 QQ 讨论群：OP共享技术交流群 ,号码 297253733 ，加群链接: 点击链接加入群聊【OP共享技术交流群】：&lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=5yCRuXL" rel="nofollow"&gt;https://jq.qq.com/?_wv=1027&amp;amp;k=5yCRuXL&lt;/a&gt;
3. 想学习OpenWrt开发，但是摸不着门道？自学没毅力？基础太差？怕太难学不会？跟着佐大学OpenWrt开发入门培训班助你能学有所成
报名地址：&lt;a href="http://forgotfun.org/2018/04/openwrt-training-2018.html" rel="nofollow"&gt;http://forgotfun.org/2018/04/openwrt-training-2018.html&lt;/a&gt;


Please use "make menuconfig" to choose your preferred
configuration for the toolchain and firmware.

You need to have installed gcc, binutils, bzip2, flex, python, perl, make,
find, grep, diff, unzip, gawk, getopt, subversion, libz-dev and libc headers.

Run "./scripts/feeds update -a" to get all the latest package definitions
defined in feeds.conf / feeds.conf.default respectively
and "./scripts/feeds install -a" to install symlinks of all of them into
package/feeds/.

Use "make menuconfig" to configure your image.

Simply running "make" will build your firmware.
It will download all sources, build the cross-compile toolchain, 
the kernel and all choosen applications.

To build your own firmware you need to have access to a Linux, BSD or MacOSX system
(case-sensitive filesystem required). Cygwin will not be supported because of
the lack of case sensitiveness in the file system.



Note: Addition Lean's private package source code in ./package/lean directory. Use it under GPL v3.

GPLv3 is compatible with more licenses than GPLv2: it allows you to make combinations with code that has specific kinds of additional requirements that are not in GPLv3 itself. Section 7 has more information about this, including the list of additional requirements that are permitted.

&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>coolsnowwolf</author><guid isPermaLink="false">https://github.com/coolsnowwolf/lede</guid><pubDate>Sat, 01 Feb 2020 00:25:00 GMT</pubDate></item></channel></rss>