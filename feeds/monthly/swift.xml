<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Swift, This month</title><link>https://github.com/trending/swift?since=monthly</link><description>The top repositories on GitHub for swift, measured monthly</description><pubDate>Mon, 09 Dec 2019 01:05:42 GMT</pubDate><lastBuildDate>Mon, 09 Dec 2019 01:05:42 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>marmelroy/PhoneNumberKit #1 in Swift, This month</title><link>https://github.com/marmelroy/PhoneNumberKit</link><description>&lt;p&gt;&lt;i&gt;A Swift framework for parsing, formatting and validating international phone numbers. Inspired by Google's libphonenumber.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/889949/20864386/a1307950-b9ef-11e6-8a58-e9c5103738e7.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/889949/20864386/a1307950-b9ef-11e6-8a58-e9c5103738e7.png" alt="PhoneNumberKit" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/?q=PhoneNumberKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21382df54a2acfe5f5ef69beb2ea0f9d93dd11a9/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f50686f6e654e756d6265724b69742e7376673f6d61784167653d32353932303030" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/PhoneNumberKit.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/marmelroy/PhoneNumberKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a95ff28120160df088553387283271be7956669a/68747470733a2f2f7472617669732d63692e6f72672f6d61726d656c726f792f50686f6e654e756d6265724b69742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/marmelroy/PhoneNumberKit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/?q=PhoneNumberKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd0d43a2eaf31672e09e52f926e89b696b6371bc/687474703a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f50686f6e654e756d6265724b69742e737667" alt="Version" data-canonical-src="http://img.shields.io/cocoapods/v/PhoneNumberKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-phonenumberkit" class="anchor" aria-hidden="true" href="#phonenumberkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PhoneNumberKit&lt;/h1&gt;
&lt;p&gt;Swift 5.0 framework for parsing, formatting and validating international phone numbers.
Inspired by Google's libphonenumber.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/marmelroy/PhoneNumberKit/blob/master/Documentation/OXMIGRATIONGUIDE.md"&gt;Migrating from PhoneNumberKit 0.x? See the migration guide.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="phone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/260e.png"&gt;‚òéÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Validate, normalize and extract the elements of any phone number string.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="100" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png"&gt;üíØ&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Simple Swift syntax and a lightweight readable codebase.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="checkered_flag" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c1.png"&gt;üèÅ&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Fast. 1000 parses -&amp;gt; ~0.4 seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;üìö&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Best-in-class metadata from Google's libPhoneNumber project.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="trophy" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c6.png"&gt;üèÜ&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Fully tested to match the accuracy of Google's JavaScript implementation of libPhoneNumber.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="iphone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f1.png"&gt;üì±&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Built for iOS. Automatically grabs the default region code from the phone.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;üìù&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Editable (!) AsYouType formatter for UITextField.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="us" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f8.png"&gt;üá∫üá∏&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Convert country codes to country names and vice versa&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Import PhoneNumberKit at the top of the Swift file that will interact with a phone number.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PhoneNumberKit&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All of your interactions with PhoneNumberKit happen through a PhoneNumberKit object. The first step you should take is to allocate one.&lt;/p&gt;
&lt;p&gt;A PhoneNumberKit instance is relatively expensive to allocate (it parses the metadata and keeps it in memory for the object's lifecycle), you should try and make sure PhoneNumberKit is allocated once and deallocated when no longer needed.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumberKit &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PhoneNumberKit&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To parse a string, use the parse function. The region code is automatically computed but can be overridden if needed. PhoneNumberKit automatically does a hard type validation to ensure that the object created is valid, this can be quite costly performance-wise and can be turned off if needed.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumber &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+33 6 89 017383&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumberCustomDefaultRegion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+44 20 7031 3000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;withRegion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;ignoreType&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Generic parser error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need to parse and validate a large amount of numbers at once, PhoneNumberKit has a special, lightning fast array parsing function. The default region code is automatically computed but can be overridden if needed. Here you can also ignore hard type validation if it is not necessary. Invalid numbers are ignored in the resulting array.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rawNumberArray &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0291 12345678&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+49 291 12345678&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;04134 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;09123 12345&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumbers &lt;span class="pl-k"&gt;=&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(rawNumberArray)
&lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumbersCustomDefaultRegion &lt;span class="pl-k"&gt;=&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(rawNumberArray, &lt;span class="pl-c1"&gt;withRegion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,  &lt;span class="pl-c1"&gt;ignoreType&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PhoneNumber objects are immutable Swift structs with the following properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumber.&lt;span class="pl-smi"&gt;numberString&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;countryCode&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;nationalNumber&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;numberExtension&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;type&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; e.g Mobile or Fixed&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Formatting a PhoneNumber object into a string is also very easy&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;format&lt;/span&gt;(phoneNumber, &lt;span class="pl-c1"&gt;toType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;e164&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; +61236618300&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;format&lt;/span&gt;(phoneNumber, &lt;span class="pl-c1"&gt;toType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;international&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; +61 2 3661 8300&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;format&lt;/span&gt;(phoneNumber, &lt;span class="pl-c1"&gt;toType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;national&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (02) 3661 8300&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-phonenumbertextfield" class="anchor" aria-hidden="true" href="#phonenumbertextfield"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PhoneNumberTextField&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/7651280/67554038-e6512500-f751-11e9-93c9-9111e899a2ef.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/7651280/67554038-e6512500-f751-11e9-93c9-9111e899a2ef.gif" alt="AsYouTypeFormatter" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To use the AsYouTypeFormatter, just replace your UITextField with a PhoneNumberTextField (if you are using Interface Builder make sure the module field is set to PhoneNumberKit).&lt;/p&gt;
&lt;p&gt;You can customize your TextField UI in the following ways&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;withFlag&lt;/code&gt; will display the country code for the &lt;code&gt;currentRegion&lt;/code&gt;. The &lt;code&gt;flagButton&lt;/code&gt; is displayed in the &lt;code&gt;leftView&lt;/code&gt; of the text field with it's size set based off your text size.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;withExamplePlaceholder&lt;/code&gt; uses &lt;code&gt;attributedPlaceholder&lt;/code&gt; to show an example number for the &lt;code&gt;currentRegion&lt;/code&gt;. In addition when &lt;code&gt;withPrefix&lt;/code&gt; is set, the country code's prefix will automatically be inserted and removed when editing changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PhoneNumberTextField automatically formats phone numbers and gives the user full editing capabilities. If you want to customize you can use the PartialFormatter directly. The default region code is automatically computed but can be overridden if needed (see the example given below).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyGBTextField&lt;/span&gt;: &lt;span class="pl-e"&gt;PhoneNumberTextField &lt;/span&gt;{
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; defaultRegion&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
        &lt;span class="pl-k"&gt;set&lt;/span&gt; {} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; exists for backward compatibility&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; textField &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PhoneNumberTextField&lt;/span&gt;()

&lt;span class="pl-c1"&gt;PartialFormatter&lt;/span&gt;().&lt;span class="pl-c1"&gt;formatPartial&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+336895555&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; +33 6 89 55 55&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also query countries for a dialing code or the dialing code for a given country&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;countries&lt;/span&gt;(&lt;span class="pl-c1"&gt;withCode&lt;/span&gt;: &lt;span class="pl-c1"&gt;33&lt;/span&gt;)
phoneNumberKit.&lt;span class="pl-c1"&gt;countryCode&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-need-more-customization" class="anchor" aria-hidden="true" href="#need-more-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need more customization?&lt;/h2&gt;
&lt;p&gt;You can access the metadata powering PhoneNumberKit yourself, this enables you to program any behaviours as they may be implemented in PhoneNumberKit itself. It does mean you are exposed to the less polished interface of the underlying file format. If you program something you find useful please push it upstream!&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;metadata&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AU&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;mobile&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;exampleNumber&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 412345678&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-setting-up-with-carthage" class="anchor" aria-hidden="true" href="#setting-up-with-carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up with Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that automates the process of adding frameworks to your Cocoa application.&lt;/p&gt;
&lt;p&gt;You can install Carthage with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate PhoneNumberKit into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "marmelroy/PhoneNumberKit"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-setting-up-with-cocoapods" class="anchor" aria-hidden="true" href="#setting-up-with-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up with &lt;a href="http://cocoapods.org/?q=PhoneNumberKit" rel="nofollow"&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;PhoneNumberKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 3.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>marmelroy</author><guid isPermaLink="false">https://github.com/marmelroy/PhoneNumberKit</guid><pubDate>Mon, 09 Dec 2019 00:01:00 GMT</pubDate></item><item><title>fullstackio/FlappySwift #2 in Swift, This month</title><link>https://github.com/fullstackio/FlappySwift</link><description>&lt;p&gt;&lt;i&gt;swift implementation of flappy bird. More at fullstackedu.com&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body mkd" data-path="README.mkd"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://dashboard.buddybuild.com/apps/55dd277abbda430100397040/build/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71d08ee45fe8f71cfa709a6ffe4a3308e3599120/68747470733a2f2f64617368626f6172642e62756464796275696c642e636f6d2f6170692f737461747573496d6167653f61707049443d353564643237376162626461343330313030333937303430266272616e63683d6d6173746572266275696c643d6c6174657374" alt="BuddyBuild" data-canonical-src="https://dashboard.buddybuild.com/api/statusImage?appID=55dd277abbda430100397040&amp;amp;branch=master&amp;amp;build=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-flappyswift" class="anchor" aria-hidden="true" href="#flappyswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FlappySwift&lt;/h1&gt;
&lt;p&gt;An implementation of Flappy Bird in Swift for iOS 8.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/867dfad61329bd77258f00d586b16476c7bc405a/687474703a2f2f692e696d6775722e636f6d2f314e4c6f546f552e676966"&gt;&lt;img src="https://camo.githubusercontent.com/867dfad61329bd77258f00d586b16476c7bc405a/687474703a2f2f692e696d6775722e636f6d2f314e4c6f546f552e676966" alt="FlappySwift" data-canonical-src="http://i.imgur.com/1NLoToU.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h1&gt;
&lt;p&gt;We're launching a course &lt;a href="https://fullstackedu.com" rel="nofollow"&gt;Game Programming with Swift&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are interested in early access to the course, head to &lt;a href="https://www.fullstackedu.com" rel="nofollow"&gt;fullstackedu.com&lt;/a&gt; and &lt;em&gt;enter in your email in the signup box at the bottom of the page&lt;/em&gt; to be notified of updates on the course itself.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Nate Murray - &lt;a href="https://twitter.com/eigenjoy" rel="nofollow"&gt;@eigenjoy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ari Lerner - &lt;a href="https://twitter.com/auser" rel="nofollow"&gt;@auser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Based on code by &lt;a href="http://digitalbreed.com/2014/how-to-build-a-game-like-flappy-bird-with-xcode-and-sprite-kit" rel="nofollow"&gt;Matthias Gall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fullstackio</author><guid isPermaLink="false">https://github.com/fullstackio/FlappySwift</guid><pubDate>Mon, 09 Dec 2019 00:02:00 GMT</pubDate></item><item><title>Alamofire/Alamofire #3 in Swift, This month</title><link>https://github.com/Alamofire/Alamofire</link><description>&lt;p&gt;&lt;i&gt;Elegant HTTP Networking in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/Alamofire/Alamofire/master/alamofire.png"&gt;&lt;img src="https://raw.githubusercontent.com/Alamofire/Alamofire/master/alamofire.png" alt="Alamofire: Elegant Networking in Swift" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Alamofire/Alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/077a1810116942b4f37ebd4aca3c88bad49c328d/68747470733a2f2f7472617669732d63692e6f72672f416c616d6f666972652f416c616d6f666972652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Alamofire/Alamofire.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/cocoapods/v/Alamofire.svg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9bd6769e4a8458272a249358bec5e4e511ce6888/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f416c616d6f666972652e737667" alt="CocoaPods Compatible" data-canonical-src="https://img.shields.io/cocoapods/v/Alamofire.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage Compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://alamofire.github.io/Alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bbc7493c87f5447d92c2394201eec2f79ecbe1d/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f416c616d6f666972652e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/Alamofire.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/AlamofireSF" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/778c845778219b6c8b8160fc1b8c2ac4b21b7aab/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d40416c616d6f6669726553462d626c75652e7376673f7374796c653d666c6174" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-@AlamofireSF-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Alamofire/Alamofire?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f34d662fe4592df9b54859f624c089c5386a3ab/68747470733a2f2f6261646765732e6769747465722e696d2f416c616d6f666972652f416c616d6f666972652e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Alamofire/Alamofire.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codetriage.com/alamofire/alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08b7810b0eb2f6121f6cc2417ffcfee1c7608acf/68747470733a2f2f7777772e636f64657472696167652e636f6d2f616c616d6f666972652f616c616d6f666972652f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/alamofire/alamofire/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alamofire is an HTTP networking library written in Swift.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; WARNING &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/strong&gt; This documentation is out of date during the Alamofire 5 beta process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#component-libraries"&gt;Component Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#migration-guides"&gt;Migration Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communication"&gt;Communication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#using-alamofire"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#introduction"&gt;&lt;strong&gt;Introduction -&lt;/strong&gt;&lt;/a&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#making-requests"&gt;Making Requests&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-handling"&gt;Response Handling&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-validation"&gt;Response Validation&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-caching"&gt;Response Caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#http-methods"&gt;HTTP Methods&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md##request-parameters-and-parameter-encoders"&gt;Parameters and Parameter Encoder&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#http-headers"&gt;HTTP Headers&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Large Data -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#downloading-data-to-a-file"&gt;Downloading Data to a File&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#uploading-data-to-a-server"&gt;Uploading Data to a Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tools -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#statistical-metrics"&gt;Statistical Metrics&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#curl-command-output"&gt;cURL Command Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md"&gt;Advanced Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;URL Session -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#session-manager"&gt;Session Manager&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#session-delegate"&gt;Session Delegate&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#request"&gt;Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Routing -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#routing-requests"&gt;Routing Requests&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#adapting-and-retrying-requests"&gt;Adapting and Retrying Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model Objects -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#custom-response-serialization"&gt;Custom Response Serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connection -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#security"&gt;Security&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#network-reachability"&gt;Network Reachability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#open-radars"&gt;Open Radars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#donations"&gt;Donations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Chainable Request / Response Methods&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; URL / JSON / plist Parameter Encoding&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Upload File / Data / Stream / MultipartFormData&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Download File using Request or Resume Data&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Authentication with URLCredential&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; HTTP Response Validation&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Upload and Download Progress Closures with Progress&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; cURL Command Output&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Dynamically Adapt and Retry Requests&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; TLS Certificate and Public Key Pinning&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Network Reachability&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Comprehensive Unit and Integration Test Coverage&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="https://alamofire.github.io/Alamofire" rel="nofollow"&gt;Complete Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-component-libraries" class="anchor" aria-hidden="true" href="#component-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Component Libraries&lt;/h2&gt;
&lt;p&gt;In order to keep Alamofire focused specifically on core networking implementations, additional component libraries have been created by the &lt;a href="https://github.com/Alamofire/Foundation"&gt;Alamofire Software Foundation&lt;/a&gt; to bring additional functionality to the Alamofire ecosystem.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireImage"&gt;AlamofireImage&lt;/a&gt; - An image library including image response serializers, &lt;code&gt;UIImage&lt;/code&gt; and &lt;code&gt;UIImageView&lt;/code&gt; extensions, custom image filters, an auto-purging in-memory cache and a priority-based image downloading system.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireNetworkActivityIndicator"&gt;AlamofireNetworkActivityIndicator&lt;/a&gt; - Controls the visibility of the network activity indicator on iOS using Alamofire. It contains configurable delay timers to help mitigate flicker and can support &lt;code&gt;URLSession&lt;/code&gt; instances not managed by Alamofire.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+&lt;/li&gt;
&lt;li&gt;Xcode 10.2+&lt;/li&gt;
&lt;li&gt;Swift 5+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-migration-guides" class="anchor" aria-hidden="true" href="#migration-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migration Guides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Alamofire 5.0 Migration Guide: To be written!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%204.0%20Migration%20Guide.md"&gt;Alamofire 4.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%203.0%20Migration%20Guide.md"&gt;Alamofire 3.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%202.0%20Migration%20Guide.md"&gt;Alamofire 2.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you &lt;strong&gt;need help with making network requests&lt;/strong&gt; using Alamofire, use &lt;a href="https://stackoverflow.com/questions/tagged/alamofire" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; and tag &lt;code&gt;alamofire&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you need to &lt;strong&gt;find or understand an API&lt;/strong&gt;, check &lt;a href="http://alamofire.github.io/Alamofire/" rel="nofollow"&gt;our documentation&lt;/a&gt; or &lt;a href="https://developer.apple.com/documentation/foundation/url_loading_system" rel="nofollow"&gt;Apple's documentation for &lt;code&gt;URLSession&lt;/code&gt;&lt;/a&gt;, on top of which Alamofire is built.&lt;/li&gt;
&lt;li&gt;If you need &lt;strong&gt;help with an Alamofire feature&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you'd like to &lt;strong&gt;discuss Alamofire best practices&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you'd like to &lt;strong&gt;discuss a feature request&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue here on GitHub and follow the guide. The more detail the better!&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt;, submit a pull request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate Alamofire into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Alamofire&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5.0.0-rc.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate Alamofire into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "Alamofire/Alamofire" "5.0.0-rc.3"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler. It is in early development, but Alamofire does support its use on supported platforms.&lt;/p&gt;
&lt;p&gt;Once you have your Swift package set up, adding Alamofire as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Alamofire/Alamofire.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5.0.0-rc.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;p&gt;If you prefer not to use any of the aforementioned dependency managers, you can integrate Alamofire into your project manually.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-embedded-framework" class="anchor" aria-hidden="true" href="#embedded-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Framework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open up Terminal, &lt;code&gt;cd&lt;/code&gt; into your top-level project directory, and run the following command "if" your project is not initialized as a git repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git init&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add Alamofire as a git &lt;a href="https://git-scm.com/docs/git-submodule" rel="nofollow"&gt;submodule&lt;/a&gt; by running the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule add https://github.com/Alamofire/Alamofire.git&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the new &lt;code&gt;Alamofire&lt;/code&gt; folder, and drag the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; into the Project Navigator of your application's Xcode project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It should appear nested underneath your application's blue project icon. Whether it is above or below all the other Xcode groups does not matter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; in the Project Navigator and verify the deployment target matches that of your application target.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "Targets" heading in the sidebar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the tab bar at the top of that window, open the "General" panel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under the "Embedded Binaries" section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will see two different &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; folders each with two different versions of the &lt;code&gt;Alamofire.framework&lt;/code&gt; nested inside a &lt;code&gt;Products&lt;/code&gt; folder.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It does not matter which &lt;code&gt;Products&lt;/code&gt; folder you choose from, but it does matter whether you choose the top or bottom &lt;code&gt;Alamofire.framework&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the top &lt;code&gt;Alamofire.framework&lt;/code&gt; for iOS and the bottom one for macOS.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can verify which one you selected by inspecting the build log for your project. The build target for &lt;code&gt;Alamofire&lt;/code&gt; will be listed as either &lt;code&gt;Alamofire iOS&lt;/code&gt;, &lt;code&gt;Alamofire macOS&lt;/code&gt;, &lt;code&gt;Alamofire tvOS&lt;/code&gt; or &lt;code&gt;Alamofire watchOS&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And that's it!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;Alamofire.framework&lt;/code&gt; is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-open-radars" class="anchor" aria-hidden="true" href="#open-radars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open Radars&lt;/h2&gt;
&lt;p&gt;The following radars have some effect on the current implementation of Alamofire.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openradar.me/radar?id=5517037090635776" rel="nofollow"&gt;&lt;code&gt;rdar://21349340&lt;/code&gt;&lt;/a&gt; - Compiler throwing warning due to toll-free bridging issue in test case&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdar://26870455&lt;/code&gt; - Background URL Session Configurations do not work in the simulator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdar://26849668&lt;/code&gt; - Some URLProtocol APIs do not properly handle &lt;code&gt;URLRequest&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-resolved-radars" class="anchor" aria-hidden="true" href="#resolved-radars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resolved Radars&lt;/h2&gt;
&lt;p&gt;The following radars have been resolved over time after being filed against the Alamofire project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openradar.me/radar?id=5010235949318144" rel="nofollow"&gt;&lt;code&gt;rdar://26761490&lt;/code&gt;&lt;/a&gt; - Swift string interpolation causing memory leak with common usage.
&lt;ul&gt;
&lt;li&gt;(Resolved): 9/1/17 in Xcode 9 beta 6.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openradar.appspot.com/radar?id=4942308441063424" rel="nofollow"&gt;&lt;code&gt;rdar://36082113&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;URLSessionTaskMetrics&lt;/code&gt; failing to link on watchOS 3.0+
&lt;ul&gt;
&lt;li&gt;(Resolved): Just add &lt;code&gt;CFNetwork&lt;/code&gt; to your linked frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-whats-the-origin-of-the-name-alamofire" class="anchor" aria-hidden="true" href="#whats-the-origin-of-the-name-alamofire"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the origin of the name Alamofire?&lt;/h3&gt;
&lt;p&gt;Alamofire is named after the &lt;a href="https://aggie-horticulture.tamu.edu/wildseed/alamofire.html" rel="nofollow"&gt;Alamo Fire flower&lt;/a&gt;, a hybrid variant of the Bluebonnet, the official state flower of Texas.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Alamofire is owned and maintained by the &lt;a href="http://alamofire.org" rel="nofollow"&gt;Alamofire Software Foundation&lt;/a&gt;. You can follow them on Twitter at &lt;a href="https://twitter.com/AlamofireSF" rel="nofollow"&gt;@AlamofireSF&lt;/a&gt; for project updates and releases.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-security-disclosure" class="anchor" aria-hidden="true" href="#security-disclosure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security Disclosure&lt;/h3&gt;
&lt;p&gt;If you believe you have identified a security vulnerability with Alamofire, you should report it as soon as possible via email to &lt;a href="mailto:security@alamofire.org"&gt;security@alamofire.org&lt;/a&gt;. Please do not post it to a public issue tracker.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/Alamofire/Foundation#members"&gt;ASF&lt;/a&gt; is looking to raise money to officially stay registered as a federal non-profit organization.
Registering will allow us members to gain some legal protections and also allow us to put donations to use, tax free.
Donating to the ASF will enable us to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pay our yearly legal fees to keep the non-profit in good status&lt;/li&gt;
&lt;li&gt;Pay for our mail servers to help us stay on top of all questions and security issues&lt;/li&gt;
&lt;li&gt;Potentially fund test servers to make it easier for us to test the edge cases&lt;/li&gt;
&lt;li&gt;Potentially fund developers to work on one of our projects full-time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The community adoption of the ASF libraries has been amazing.
We are greatly humbled by your enthusiasm around the projects, and want to continue to do everything we can to move the needle forward.
With your continued support, the ASF will be able to improve its reach and also provide better legal safety for the core members.
If you use any of our libraries for work, see if your employers would be interested in donating.
Any amount you can donate today to help us reach our goal would be greatly appreciated.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=W34WPEE74APJQ" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f896f7d176663a1559376bb56aac4bdbbbe85ed1/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e61746543435f4c472e676966" alt="paypal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Alamofire is released under the MIT license. &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/LICENSE"&gt;See LICENSE&lt;/a&gt; for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Alamofire</author><guid isPermaLink="false">https://github.com/Alamofire/Alamofire</guid><pubDate>Mon, 09 Dec 2019 00:03:00 GMT</pubDate></item><item><title>stephencelis/SQLite.swift #4 in Swift, This month</title><link>https://github.com/stephencelis/SQLite.swift</link><description>&lt;p&gt;&lt;i&gt;A type-safe, Swift-language layer over SQLite3.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sqliteswift" class="anchor" aria-hidden="true" href="#sqliteswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite.swift&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/stephencelis/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f4298cc67f5a1d22ed1da066e9380c82b83967e6/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7374657068656e63656c69732f53514c6974652e73776966742f6d61737465722e7376673f7374796c653d666c6174" alt="Build Status" data-canonical-src="https://img.shields.io/travis/stephencelis/SQLite.swift/master.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoadocs.org/docsets/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8db5f0a449dd0ace01a4416caeee3bdbe39dda56/68747470733a2f2f636f636f61706f642d6261646765732e6865726f6b756170702e636f6d2f762f53514c6974652e73776966742f62616467652e706e67" alt="CocoaPods Version" data-canonical-src="https://cocoapod-badges.herokuapp.com/v/SQLite.swift/badge.png" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c71f82ee3309bc14cc904fb1a628903768e1ac39/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift5 compatible" data-canonical-src="https://img.shields.io/badge/swift-5-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoadocs.org/docsets/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7d02c04a141356f85360e0575b3ed52de7cb48ec/68747470733a2f2f636f636f61706f642d6261646765732e6865726f6b756170702e636f6d2f702f53514c6974652e73776966742f62616467652e706e67" alt="Platform" data-canonical-src="https://cocoapod-badges.herokuapp.com/p/SQLite.swift/badge.png" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/stephencelis/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a042027a6ca9b7219bd8ebac4d8172d9171355e5/68747470733a2f2f6261646765732e6769747465722e696d2f7374657068656e63656c69732f53514c6974652e73776966742e737667" alt="Join the chat at https://gitter.im/stephencelis/SQLite.swift" data-canonical-src="https://badges.gitter.im/stephencelis/SQLite.swift.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A type-safe, &lt;a href="https://swift.org/" rel="nofollow"&gt;Swift&lt;/a&gt;-language layer over &lt;a href="http://www.sqlite.org" rel="nofollow"&gt;SQLite3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/stephencelis/SQLite.swift"&gt;SQLite.swift&lt;/a&gt; provides compile-time confidence in SQL statement
syntax &lt;em&gt;and&lt;/em&gt; intent.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A pure-Swift interface&lt;/li&gt;
&lt;li&gt;A type-safe, optional-aware SQL expression builder&lt;/li&gt;
&lt;li&gt;A flexible, chainable, lazy-executing query layer&lt;/li&gt;
&lt;li&gt;Automatically-typed data access&lt;/li&gt;
&lt;li&gt;A lightweight, uncomplicated query and parameter binding interface&lt;/li&gt;
&lt;li&gt;Developer-friendly error handling and debugging&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Index.md#full-text-search"&gt;Full-text search&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Index.md#sqliteswift-documentation"&gt;Well-documented&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extensively tested&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zetetic.net/sqlcipher/" rel="nofollow"&gt;SQLCipher&lt;/a&gt; support via CocoaPods&lt;/li&gt;
&lt;li&gt;Active support at
&lt;a href="http://stackoverflow.com/questions/tagged/sqlite.swift" rel="nofollow"&gt;StackOverflow&lt;/a&gt;,
and &lt;a href="https://gitter.im/stephencelis/SQLite.swift" rel="nofollow"&gt;Gitter Chat Room&lt;/a&gt;
(&lt;em&gt;experimental&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLite&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Connection&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;path/to/db.sqlite3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; users &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Table&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; email &lt;span class="pl-k"&gt;=&lt;/span&gt; Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(users.&lt;span class="pl-smi"&gt;create&lt;/span&gt; { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(id, &lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(name)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(email, &lt;span class="pl-c1"&gt;unique&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE "users" (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "id" INTEGER PRIMARY KEY NOT NULL,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "name" TEXT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "email" TEXT NOT NULL UNIQUE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; insert &lt;span class="pl-k"&gt;=&lt;/span&gt; users.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(name &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alice&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, email &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alice@mac.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; rowid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(insert)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO "users" ("name", "email") VALUES ('Alice', 'alice@mac.com')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; user &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepare&lt;/span&gt;(users) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;user[id]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, name: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;user[name]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, email: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;user[email]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id: 1, name: Optional("Alice"), email: alice@mac.com&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM "users"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; alice &lt;span class="pl-k"&gt;=&lt;/span&gt; users.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(id &lt;span class="pl-k"&gt;==&lt;/span&gt; rowid)

&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(alice.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(email &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; email.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mac.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;me.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE "users" SET "email" = replace("email", 'mac.com', 'me.com')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WHERE ("id" = 1)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(alice.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;())
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM "users" WHERE ("id" = 1)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;scalar&lt;/span&gt;(users.&lt;span class="pl-c1"&gt;count&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT count(*) FROM "users"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite.swift also works as a lightweight, Swift-friendly wrapper over the C
API.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; stmt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepare&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO users (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;for&lt;/span&gt; email &lt;span class="pl-k"&gt;in&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;betty@icloud.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cathy@icloud.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; stmt.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(email)
}

db.&lt;span class="pl-smi"&gt;totalChanges&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;db.&lt;span class="pl-smi"&gt;changes&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;db.&lt;span class="pl-smi"&gt;lastInsertRowid&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; row &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepare&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT id, email FROM users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, email: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id: Optional(2), email: Optional("betty@icloud.com")&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id: Optional(3), email: Optional("cathy@icloud.com")&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;scalar&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT count(*) FROM users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="Documentation/Index.md#sqliteswift-documentation"&gt;Read the documentation&lt;/a&gt; or explore more,
interactively, from the Xcode project‚Äôs playground.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Resources/playground@2x.png"&gt;&lt;img src="Documentation/Resources/playground@2x.png" alt="SQLite.playground Screen Shot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a more comprehensive example, see
&lt;a href="http://masteringswift.blogspot.com/2015/09/create-data-access-layer-with.html" rel="nofollow"&gt;this article&lt;/a&gt;
and the &lt;a href="https://github.com/hoffmanjon/SQLiteDataAccessLayer2/tree/master"&gt;companion repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Version 0.12 requires Swift 5 (and &lt;a href="https://developer.apple.com/xcode/downloads/" rel="nofollow"&gt;Xcode&lt;/a&gt; 10.2) or greater. Version 0.11.6 requires Swift 4.2 (and &lt;a href="https://developer.apple.com/xcode/downloads/" rel="nofollow"&gt;Xcode&lt;/a&gt; 10.1) or greater.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a simple, decentralized dependency manager for Cocoa. To
install SQLite.swift with Carthage:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure Carthage is &lt;a href="https://github.com/Carthage/Carthage#installing-carthage"&gt;installed&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update your Cartfile to include the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stephencelis/SQLite.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0.12&lt;/span&gt;.&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt; and
&lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;add the appropriate framework&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. To install
SQLite.swift with CocoaPods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure CocoaPods is &lt;a href="https://guides.cocoapods.org/using/getting-started.html#getting-started" rel="nofollow"&gt;installed&lt;/a&gt;. (SQLite.swift
requires version 1.6.1 or greater.)&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Using the default Ruby install will require you to use sudo when&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; installing and updating gems.&lt;/span&gt;
[sudo] gem install cocoapods&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update your Podfile to include the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YourAppTargetName&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SQLite.swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 0.12.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;pod install --repo-update&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for managing the distribution of
Swift code.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add the following to your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/stephencelis/SQLite.swift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.12.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Build your project:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;To install SQLite.swift as an Xcode sub-project:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Drag the &lt;strong&gt;SQLite.xcodeproj&lt;/strong&gt; file into your own project.
(&lt;a href="http://git-scm.com/book/en/Git-Tools-Submodules" rel="nofollow"&gt;Submodule&lt;/a&gt;, clone, or &lt;a href="https://github.com/stephencelis/SQLite.swift/archive/master.zip"&gt;download&lt;/a&gt; the project first.)&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Resources/installation@2x.png"&gt;&lt;img src="Documentation/Resources/installation@2x.png" alt="Installation Screen Shot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your target‚Äôs &lt;strong&gt;General&lt;/strong&gt; tab, click the &lt;strong&gt;+&lt;/strong&gt; button under &lt;strong&gt;Linked
Frameworks and Libraries&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the appropriate &lt;strong&gt;SQLite.framework&lt;/strong&gt; for your platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some additional steps are required to install the application on an actual
device:&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;
&lt;p&gt;In the &lt;strong&gt;General&lt;/strong&gt; tab, click the &lt;strong&gt;+&lt;/strong&gt; button under &lt;strong&gt;Embedded
Binaries&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the appropriate &lt;strong&gt;SQLite.framework&lt;/strong&gt; for your platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;p&gt;&lt;a href="/Documentation/Planning.md"&gt;See the planning document&lt;/a&gt; for a roadmap and existing feature requests.&lt;/p&gt;
&lt;p&gt;&lt;a href="./CONTRIBUTING.md#contributing"&gt;Read the contributing guidelines&lt;/a&gt;. The &lt;em&gt;TL;DR&lt;/em&gt; (but please; &lt;em&gt;R&lt;/em&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Need &lt;strong&gt;help&lt;/strong&gt; or have a &lt;strong&gt;general question&lt;/strong&gt;? &lt;a href="http://stackoverflow.com/questions/tagged/sqlite.swift" rel="nofollow"&gt;Ask on Stack
Overflow&lt;/a&gt; (tag &lt;code&gt;sqlite.swift&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Found a &lt;strong&gt;bug&lt;/strong&gt; or have a &lt;strong&gt;feature request&lt;/strong&gt;? &lt;a href="https://github.com/stephencelis/SQLite.swift/issues/new"&gt;Open an issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Want to &lt;strong&gt;contribute&lt;/strong&gt;? &lt;a href="https://github.com/stephencelis/SQLite.swift/fork"&gt;Submit a pull request&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:stephen@stephencelis.com"&gt;Stephen Celis&lt;/a&gt;
(&lt;a href="https://twitter.com/stephencelis" rel="nofollow"&gt;@stephencelis&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;SQLite.swift is available under the MIT license. See &lt;a href="./LICENSE.txt"&gt;the LICENSE
file&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related" class="anchor" aria-hidden="true" href="#related"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related&lt;/h2&gt;
&lt;p&gt;These projects enhance or use SQLite.swift:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/garriguv/SQLiteMigrationManager.swift"&gt;SQLiteMigrationManager.swift&lt;/a&gt; (inspired by
&lt;a href="https://github.com/layerhq/FMDBMigrationManager"&gt;FMDBMigrationManager&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatives&lt;/h2&gt;
&lt;p&gt;Looking for something else? Try another Swift wrapper (or &lt;a href="https://github.com/ccgus/fmdb"&gt;FMDB&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/remirobert/Camembert"&gt;Camembert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDB.swift"&gt;GRDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FahimF/SQLiteDB"&gt;SQLiteDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nerdyc/Squeal"&gt;Squeal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanfowler/SwiftData"&gt;SwiftData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrismsimpson/SwiftSQLite"&gt;SwiftSQLite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>stephencelis</author><guid isPermaLink="false">https://github.com/stephencelis/SQLite.swift</guid><pubDate>Mon, 09 Dec 2019 00:04:00 GMT</pubDate></item><item><title>ProtonMail/ios-mail #5 in Swift, This month</title><link>https://github.com/ProtonMail/ios-mail</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ios-mail" class="anchor" aria-hidden="true" href="#ios-mail"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS-mail&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;iOS-mail ‚Äî ProtonMail iOS client app&lt;/p&gt;
&lt;p&gt;The app is intended for all users of the ProtonMail service. Whether they are paid or free, they can compose and read emails, manage folders and labels, manage some account settings and create a new account. The app supports iOS 10-13.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The code and data files in this distribution are licensed under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. See &lt;a href="https://www.gnu.org/licenses/" rel="nofollow"&gt;https://www.gnu.org/licenses/&lt;/a&gt; for a copy of this license.&lt;/p&gt;
&lt;p&gt;See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; file&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#License"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Dependencies"&gt;Dependencies&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Internal"&gt;Internal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Third-Party"&gt;Third Party&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#Content-Explanation"&gt;Content Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#live-version"&gt;Live version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Articles"&gt;Articles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#our-team"&gt;Our Team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h2&gt;
&lt;p&gt;&lt;a href="mvvmc.png"&gt;MVVM-C&lt;/a&gt; with services. Model-View-ViewModel architecture, plus the Coordinator pattern.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-internal" class="anchor" aria-hidden="true" href="#internal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Internal&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ProtonMail/gopenpgp"&gt;gopenpgp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ProtonMail/cpp-openpgp"&gt;OpenPGP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ProtonMail/cpp-openpgp"&gt;VCard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ProtonMail/go-srp"&gt;go-srp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-third-party" class="anchor" aria-hidden="true" href="#third-party"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third Party&lt;/h3&gt;
&lt;p&gt;&lt;a href="Acknowledgements.md"&gt;Acknowledgements&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content-explanation" class="anchor" aria-hidden="true" href="#content-explanation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content Explanation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="OpenPGP/README.md"&gt;OpenPGP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/Keymaker/README.md"&gt;Keymaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/ProtonMail/README.md"&gt;ProtonMail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/ProtonMailCommon/README.md"&gt;ProtonMailCommon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/Push/README.md"&gt;Push&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/PushService/README.md"&gt;PushService&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/Share/README.md"&gt;Share&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/Siri/README.md"&gt;Siri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Scripts/README.md"&gt;Scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/README.md#Trust-Model"&gt;Trust Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/README.md#Local-Data"&gt;Local Data Protection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Have macOS up to date and install Xcode 11.1&lt;/li&gt;
&lt;li&gt;We use xUnique (ver 4.1.4) in order to prevent merge conflicts in the ProtonMail.xcodeproj file. Each shared scheme has a post-build action, and builds will fail on machines with no xUnique installed. Please follow xUnique's &lt;a href="https://github.com/truebit/xUnique"&gt;installation instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOMPurify&lt;/code&gt;(@b06b6b2ac8) and Cocoapods are pre-downloaded. We are using git submodules for tracking DOMPurifier, so after cloning you have to run &lt;code&gt;git submodule init&lt;/code&gt; and &lt;code&gt;git submodule update&lt;/code&gt; to fetch it. Theory here: &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" rel="nofollow"&gt;https://git-scm.com/book/en/v2/Git-Tools-Submodules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;ProtonMail/ProtonMail.xcworkspace&lt;/code&gt; and click the run button&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-live-version" class="anchor" aria-hidden="true" href="#live-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Live version&lt;/h2&gt;
&lt;p&gt;Current live version 1.11.13&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Changelog.md"&gt;Changelogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apps.apple.com/app/protonmail-encrypted-email/id979659905" rel="nofollow"&gt;Apple Store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-articles" class="anchor" aria-hidden="true" href="#articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://protonmail.com/blog/ios-open-source" rel="nofollow"&gt;Open sourcing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://protonmail.com/blog/ios-security-model" rel="nofollow"&gt;Security model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-our-team" class="anchor" aria-hidden="true" href="#our-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Our Team&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zhj4478"&gt;Feng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abjurato"&gt;Anatoly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/henrybear327"&gt;Henry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emnproton"&gt;Emil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; UI redesign&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; multiple user support&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; share frameworks&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ProtonMail</author><guid isPermaLink="false">https://github.com/ProtonMail/ios-mail</guid><pubDate>Mon, 09 Dec 2019 00:05:00 GMT</pubDate></item><item><title>airbnb/lottie-ios #6 in Swift, This month</title><link>https://github.com/airbnb/lottie-ios</link><description>&lt;p&gt;&lt;i&gt;An iOS library to natively render After Effects vector animations&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lottie-for-ios-macos-and-android-and-react-native" class="anchor" aria-hidden="true" href="#lottie-for-ios-macos-and-android-and-react-native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lottie for iOS, macOS (and &lt;a href="https://github.com/airbnb/lottie-android"&gt;Android&lt;/a&gt; and &lt;a href="https://github.com/airbnb/lottie-react-native"&gt;React Native&lt;/a&gt;)&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec93af3b58853a5ba768cc785ad54a4aca961645/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ff1d88230b9d245f16df6036e058518d051df573/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80aaf7fb5854bde9c64a0aff30cd12ebf1765b36/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-view-documentation-faq-help-examples-and-more-at-airbnbiolottie" class="anchor" aria-hidden="true" href="#view-documentation-faq-help-examples-and-more-at-airbnbiolottie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View documentation, FAQ, help, examples, and more at &lt;a href="http://airbnb.io/lottie/" rel="nofollow"&gt;airbnb.io/lottie&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Lottie is a mobile library for Android and iOS that natively renders vector based animations and art in realtime with minimal code.&lt;/p&gt;
&lt;p&gt;Lottie loads and renders animations and vectors exported in the bodymovin JSON format. Bodymovin JSON can be created and exported from After Effects with &lt;a href="https://github.com/bodymovin/bodymovin"&gt;bodymovin&lt;/a&gt;, Sketch with &lt;a href="https://github.com/buba447/Lottie-Sketch-Export"&gt;Lottie Sketch Export&lt;/a&gt;, and from &lt;a href="https://www.haiku.ai" rel="nofollow"&gt;Haiku&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the first time, designers can create &lt;strong&gt;and ship&lt;/strong&gt; beautiful animations without an engineer painstakingly recreating it by hand.
Since the animation is backed by JSON they are extremely small in size but can be large in complexity!
Animations can be played, resized, looped, sped up, slowed down, reversed, and even interactively scrubbed.
Lottie can play or loop just a portion of the animation as well, the possibilities are endless!
Animations can even be &lt;em&gt;&lt;strong&gt;changed at runtime&lt;/strong&gt;&lt;/em&gt; in various ways! Change the color, position or any keyframable value!
Lottie also supports native UIViewController Transitions out of the box!&lt;/p&gt;
&lt;p&gt;Here is just a small sampling of the power of Lottie&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples1.gif"&gt;&lt;img src="_Gifs/Examples1.gif" alt="Example1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples2.gif"&gt;&lt;img src="_Gifs/Examples2.gif" alt="Example2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Community 2_3.gif"&gt;&lt;img src="_Gifs/Community 2_3.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples3.gif"&gt;&lt;img src="_Gifs/Examples3.gif" alt="Example3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples4.gif"&gt;&lt;img src="_Gifs/Examples4.gif" alt="Abcs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-lottie" class="anchor" aria-hidden="true" href="#installing-lottie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Lottie&lt;/h2&gt;
&lt;p&gt;Lottie supports &lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; and &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; (Both dynamic and static). Lottie is written in &lt;em&gt;&lt;strong&gt;Swift 4.2&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-github-repo" class="anchor" aria-hidden="true" href="#github-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Github Repo&lt;/h3&gt;
&lt;p&gt;You can pull the &lt;a href="https://github.com/airbnb/lottie-ios/"&gt;Lottie Github Repo&lt;/a&gt; and include the Lottie.xcodeproj to build a dynamic or static library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Add the pod to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lottie-ios&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then run:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After installing the cocoapod into your project import Lottie with&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Lottie&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add Lottie to your Cartfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "airbnb/lottie-ios" "master"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;carthage update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In your application targets ‚ÄúGeneral‚Äù tab under the ‚ÄúLinked Frameworks and Libraries‚Äù section, drag and drop lottie-ios.framework from the Carthage/Build/iOS directory that &lt;code&gt;carthage update&lt;/code&gt; produced.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;platforms&lt;/span&gt;: [
       .&lt;span class="pl-c1"&gt;iOS&lt;/span&gt;(.&lt;span class="pl-smi"&gt;v12&lt;/span&gt;),
  ],
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/airbnb/lottie-ios.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.1.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Lottie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then import wherever needed: &lt;code&gt;import Lottie&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-adding-it-to-an-existent-ios-project-via-swift-package-manager" class="anchor" aria-hidden="true" href="#adding-it-to-an-existent-ios-project-via-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding it to an existent iOS Project via Swift Package Manager&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Using Xcode 11 go to File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/li&gt;
&lt;li&gt;Paste the project URL: &lt;a href="https://github.com/airbnb/lottie-ios"&gt;https://github.com/airbnb/lottie-ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click on next and select the project target
**NOTE: For MacOS you must set the &lt;code&gt;Branch&lt;/code&gt; field to &lt;code&gt;lottie/macos-spm&lt;/code&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/spm-branch.png"&gt;&lt;img src="_Gifs/spm-branch.png" alt="Example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you have doubts, please, check the following links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2019/408/" rel="nofollow"&gt;How to use&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2019/410/" rel="nofollow"&gt;Creating Swift Packages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After successfully retrieved the package and added it to your project, just import &lt;code&gt;Lottie&lt;/code&gt; and you can get the full benefits of it.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>airbnb</author><guid isPermaLink="false">https://github.com/airbnb/lottie-ios</guid><pubDate>Mon, 09 Dec 2019 00:06:00 GMT</pubDate></item><item><title>signalapp/Signal-iOS #7 in Swift, This month</title><link>https://github.com/signalapp/Signal-iOS</link><description>&lt;p&gt;&lt;i&gt;A private messenger for iOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-signal-ios" class="anchor" aria-hidden="true" href="#signal-ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Signal iOS&lt;/h1&gt;
&lt;p&gt;Signal is a free, open source, messaging app for simple private communication with friends.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://itunes.apple.com/us/app/signal-private-messenger/id874139669?mt=8" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a78ccbf1b05e5b4ca4b14d9e7757aca1b0556ae/687474703a2f2f636c2e6c792f576f75472f446f776e6c6f61645f6f6e5f7468655f4170705f53746f72655f42616467655f55532d554b5f3133357834302e737667" alt="Available on the App Store" data-canonical-src="http://cl.ly/WouG/Download_on_the_App_Store_Badge_US-UK_135x40.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also available on &lt;a href="https://github.com/signalapp/signal-android"&gt;Android&lt;/a&gt; and &lt;a href="https://github.com/signalapp/signal-desktop"&gt;Desktop&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-questions" class="anchor" aria-hidden="true" href="#questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions?&lt;/h2&gt;
&lt;p&gt;For troubleshooting and questions, please visit our &lt;a href="https://support.signal.org/" rel="nofollow"&gt;support center&lt;/a&gt; or &lt;a href="https://community.signalusers.org/" rel="nofollow"&gt;unofficial community forum&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-bug-reports" class="anchor" aria-hidden="true" href="#contributing-bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing Bug Reports&lt;/h2&gt;
&lt;p&gt;We use GitHub for bug tracking. Please search &lt;a href="https://github.com/signalapp/signal-ios/issues"&gt;existing issues&lt;/a&gt; and create a new one if the issue is not yet tracked. For Android users, please use the &lt;a href="https://github.com/signalapp/signal-android/issues"&gt;Signal for Android issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-translations" class="anchor" aria-hidden="true" href="#contributing-translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing Translations&lt;/h2&gt;
&lt;p&gt;Help us translate Signal! The translation effort happens on &lt;a href="https://www.transifex.com/signalapp/signal-ios/" rel="nofollow"&gt;Transifex&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-code" class="anchor" aria-hidden="true" href="#contributing-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing Code&lt;/h2&gt;
&lt;p&gt;Instructions on how to setup your development environment and build Signal-iOS can be found in &lt;a href="https://github.com/signalapp/Signal-iOS/blob/master/BUILDING.md"&gt;BUILDING.md&lt;/a&gt;. Other useful instructions for development can be found in the &lt;a href="https://github.com/signalapp/Signal-iOS/wiki/Development-Guide"&gt;Development Guide wiki page&lt;/a&gt;. We also recommend reading the &lt;a href="https://github.com/signalapp/Signal-iOS/blob/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-ideas" class="anchor" aria-hidden="true" href="#contributing-ideas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing Ideas&lt;/h2&gt;
&lt;p&gt;Have something you want to say about Signal Foundation projects or want to be part of the conversation? Get involved in the &lt;a href="https://community.signalusers.org" rel="nofollow"&gt;community forum&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cryptography-notice" class="anchor" aria-hidden="true" href="#cryptography-notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cryptography Notice&lt;/h2&gt;
&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software.
BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted.
See &lt;a href="http://www.wassenaar.org/" rel="nofollow"&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms.
The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Licensed under &lt;a href="http://www.gnu.org/licenses/gpl-3.0.html" rel="nofollow"&gt;GPLv3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright 2014-2019 Open Whisper Systems&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Apple and the Apple logo are trademarks of Apple Inc., registered in the U.S. and other countries. App Store is a service mark of Apple Inc., registered in the U.S. and other countries.&lt;/em&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>signalapp</author><guid isPermaLink="false">https://github.com/signalapp/Signal-iOS</guid><pubDate>Mon, 09 Dec 2019 00:07:00 GMT</pubDate></item><item><title>vapor/vapor #8 in Swift, This month</title><link>https://github.com/vapor/vapor</link><description>&lt;p&gt;&lt;i&gt;üíß A server-side Swift web framework.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://vapor.team" rel="nofollow"&gt;&lt;img src="https://user-images.githubusercontent.com/1742140/43014701-5ad8f7de-8c4d-11e8-86d2-4db3d71581aa.png" alt="Vapor" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
	&lt;a href="https://docs.vapor.codes/3.0/" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/6a6cc818201160b182a9c54f1c2ccadbb38fc145/687474703a2f2f696d672e736869656c64732e696f2f62616467652f726561645f7468652d646f63732d3231393666332e737667" alt="Documentation" data-canonical-src="http://img.shields.io/badge/read_the-docs-2196f3.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://discord.gg/vapor" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/651a76f52dcbc729802f1f307eff776dbd5ddc52/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3433313931373939383130323637353438352e737667" alt="Team Chat" data-canonical-src="https://img.shields.io/discord/431917998102675485.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="LICENSE"&gt;
        &lt;img src="https://camo.githubusercontent.com/e7302c620b3589a361fc5503732f3505347205d4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e737667" alt="MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://circleci.com/gh/vapor/vapor" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/474a2feaf657f12a6d2f1109a07886ba92fe3d31/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275696c642d70617373696e672d627269676874677265656e2e737667" alt="Continuous Integration" data-canonical-src="https://img.shields.io/badge/build-passing-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://swift.org" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/ebaea1fcb74274e8ee55fe117217b6cbac9c6acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352e312d627269676874677265656e2e737667" alt="Swift 5.1" data-canonical-src="https://img.shields.io/badge/swift-5.1-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://twitter.com/codevapor" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/acdbe20bcc4e88471c294d2d02cfd9ef12b997c1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d636f64657661706f722d3541413945372e737667" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-codevapor-5AA9E7.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Vapor is a web framework for Swift. It provides a beautifully expressive and easy to use foundation for your next website, API, or cloud project.&lt;/p&gt;
&lt;p&gt;Take a look at some of the &lt;a href="https://github.com/Cellane/awesome-vapor"&gt;awesome stuff&lt;/a&gt; created with Vapor.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--community" class="anchor" aria-hidden="true" href="#-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="droplet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a7.png"&gt;üíß&lt;/g-emoji&gt; Community&lt;/h3&gt;
&lt;p&gt;Join the welcoming community of fellow Vapor developers on &lt;a href="http://vapor.team" rel="nofollow"&gt;Discord&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--contributing" class="anchor" aria-hidden="true" href="#-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;üöÄ&lt;/g-emoji&gt; Contributing&lt;/h3&gt;
&lt;p&gt;To contribute a &lt;strong&gt;feature or idea&lt;/strong&gt; to Vapor, &lt;a href="https://github.com/vapor/vapor/issues/new"&gt;create an issue&lt;/a&gt; explaining your idea or bring it up on &lt;a href="http://vapor.team" rel="nofollow"&gt;Discord&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you find a &lt;strong&gt;bug&lt;/strong&gt;, please &lt;a href="https://github.com/vapor/vapor/issues/new"&gt;create an issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you find a &lt;strong&gt;security vulnerability&lt;/strong&gt;, please contact &lt;a href="mailto:security@vapor.codes"&gt;security@vapor.codes&lt;/a&gt; as soon as possible.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--sponsors" class="anchor" aria-hidden="true" href="#-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="yellow_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49b.png"&gt;üíõ&lt;/g-emoji&gt; Sponsors&lt;/h3&gt;
&lt;p&gt;Support Vapor's development by &lt;a href="https://github.com/users/tanner0101/sponsorship"&gt;becoming a sponsor&lt;/a&gt;.&lt;/p&gt;
&lt;a href="http://nodesagency.com" rel="nofollow"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/66773716-a787b900-ee8d-11e9-83c2-54b3d8fce528.png" height="100px" alt="Nodes" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://www.skelpo.com" rel="nofollow"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/66773734-b2dae480-ee8d-11e9-81ca-2f20f4b0f55e.png" height="100px" alt="Skelpo" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/gwynne"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/70094097-c6820c00-15ef-11ea-899d-f4010ad65875.png" height="100px" alt="Gwynne Raskind" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Joannis"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/66939358-ec882880-f010-11e9-98a2-481e87de65c0.png" height="100px" alt="Joannis" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/kylebrowning"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/67107440-7ca5a980-f19a-11e9-8619-b029c96399f7.png" height="100px" alt="Kyle Browning" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content--backers" class="anchor" aria-hidden="true" href="#-backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="green_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49a.png"&gt;üíö&lt;/g-emoji&gt; Backers&lt;/h3&gt;
&lt;p&gt;Support Vapor's development by &lt;a href="https://github.com/users/tanner0101/sponsorship"&gt;becoming a backer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/MrLotU"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/18392003?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Yasumoto"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/48383?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/tkrajacic"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/873717?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/slashmo"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/16192401?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/ScottRobbins"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/6894359?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/ksmandersen"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/178181?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/twof"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/5561501?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/mikkelu"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/17051694?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/grundoon"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/876321?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/tylermrolfe"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1797243?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/maartene"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/5150271?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/steve-h"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1298089?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/SpencerCurtis"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/16965587?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/ezfe"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1449259?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Mordil"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/3506776?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/danielinoa"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/972877?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/patrykwas"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/39051168?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/MaherKSantina"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/24646608?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/shpakovski"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/163410?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/vapor/backer/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d424a7f2f19a9b0439ede63e08af0a4c6b6649e6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15912aa6152688f4c1ff0e6b05bfe651a4741b7f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2500f286a04a7dfba0b4b552fe4639711576d473/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6de8b2140b2912a98efefa15ba3abf564b4df8c9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b162fd72ed19d45c2523c8d58298dfab930b681e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3131fae93ed02f95ead5d943f5088e6ac9dae64/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e17b3f188e9cb3fea567ef4e3df6c990f65cb9a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dfcf5cd7f59ea8cd677741126fa74fa87dfe171/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/17fca50e3b5becda8de0063a19d073a6455cda96/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de7442449b259b680a269818e0cbf817fc32b67/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/10/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e29bd462b035277f33359d2a2e0275062a2812cc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/10/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/11/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/687e722908af10e2583807ed3fc99fa5cdc1ddda/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/11/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/12/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dcf5b433b68d9027454f0a9de577f1829922a1ec/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/12/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/13/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/17810b06e2dd424876e2354a79c82b1f95722ca3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/13/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/14/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2aff6c356802ca72c23a4b69f1f2ec047d6b1b3f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/14/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/15/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/07b50a033c5c2bf980fbc121ae6a752b8871d4be/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/15/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/16/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c03bbd9af3d0f68f46e9d3178f698c0951ccbf40/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/16/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/17/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57061f407311fe8f76b802855b90bf243cd99ae3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/17/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/18/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cd3f77dbbde76617c030bb896fef7b19e4cccab/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/18/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/19/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e248ccbd8b613e2841ec8d9da75fafbbe42451c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/19/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/20/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bbfa795bdcb58fc0d1c2449a668b5b38df134d6b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/20/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/21/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ee2fea042dc49239179424ed7a606b95526af23/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/21/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/22/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b42f5411ce0a2bb4e93dade5c64b832d12bd0c21/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/22/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/23/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8226a7853b506ccf7394a6bf5fc1a043861d75d6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/23/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/24/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/96004bf1255e05315022cf23423f2cd18f7839fc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/24/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/25/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9529958c6fd0614eb83f64199c66f56552351108/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/25/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/26/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ec855aae96446f1a7d1949c1b6858d1593b3b2a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/26/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/27/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b16e16d73cbd20f910577e797a5ff2da189212c9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/27/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/28/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d84722e438e0bd74977f573aae549a3284e939ed/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/28/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/29/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a26cb36f3eb994a23912cfe489cc163b0e52cfd/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/29/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/30/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5a5f9080ccf0e4271301b896149d57ecd51c6615/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/30/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/31/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ddadddaaa1391bf76d64bd046a6adfad8e2b9875/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/31/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/32/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6b495e618c7145afcf93810484b77bf761a7bad9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/32/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/33/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34336a047f14b8b9b38d3d22803a1183855aa3b6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/33/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/34/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e44afaceb402cd24d5093e2b013e3406382205fe/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/34/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/35/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c9fdc1c60818a1b354cbc6cfb9ac3011e9661a4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/35/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/36/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60543a3882efad5e2188580665dab9f8631bbeb9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/36/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/37/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/67eb7a7bead0beb645701ef9eccd8542d7f86a8d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/37/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/38/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/81e72d49489f2e02ccdd5d029361b38d76971487/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/38/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/39/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea13dfa580deb6b02e88056c7290cdcf682cd108/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/39/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/40/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6730f3bb2641ce96f193c46a8fe2066691b712e1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/40/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/41/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d80b02d2afaeb8139911ea1ec7899da5569bdda/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/41/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/42/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3e05a1e207553a716b581c51c758ad59707397f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/42/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/43/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/249a37ac33e1cfab9d27c60891132d4a808abcd8/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/43/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/44/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/974ec7686ddce13fe409145f744178873f05d361/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/44/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/45/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab82907859d6b6c6eab5ff21f47c2396f1ad1e29/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/45/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/46/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c0a67f161c883ef32d54578c5c85b82a71fb1af/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/46/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/47/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dda24ceed218774fbf3e48f45283bfff0e40f57c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/47/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/48/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed9fd11eee4928c2e970b47de7333f22e2b2f7b5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/48/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href=""&gt;&lt;img src="https://camo.githubusercontent.com/8447f36967ea3d5dd28344d33b0f53a5f6629b57/687474703a2f2f7777772e676f6f676c652d616e616c79746963732e636f6d2f636f6c6c6563743f763d3126743d7061676576696577265f733d3126646c3d68747470732533412532462532466769746875622e636f6d2532467661706f722532467661706f72265f753d4d41437e266369643d313735373031343335342e31333933393634303435267469643d55412d37363137373335382d36" alt="analytics" data-canonical-src="http://www.google-analytics.com/collect?v=1&amp;amp;t=pageview&amp;amp;_s=1&amp;amp;dl=https%3A%2F%2Fgithub.com%2Fvapor%2Fvapor&amp;amp;_u=MAC~&amp;amp;cid=1757014354.1393964045&amp;amp;tid=UA-76177358-6" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vapor</author><guid isPermaLink="false">https://github.com/vapor/vapor</guid><pubDate>Mon, 09 Dec 2019 00:08:00 GMT</pubDate></item><item><title>pigigaldi/Pock #9 in Swift, This month</title><link>https://github.com/pigigaldi/Pock</link><description>&lt;p&gt;&lt;i&gt;Display macOS Dock in Touch Bar&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bfb3abeb24e585e9121ce6440167ac2c9f06aeca/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f6272616e642f7765622d69636f6e2d626c61636b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bfb3abeb24e585e9121ce6440167ac2c9f06aeca/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f6272616e642f7765622d69636f6e2d626c61636b2e706e67" width="96" data-canonical-src="https://pock.dev/assets/img/brand/web-icon-black.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;Display macOS Dock in Touch Bar.&lt;/p&gt;
&lt;p align="center"&gt;It's free and open source, and it also brings some minimalistic widgets with it!
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/51a17fe9599c84dddda6aa5540e8cdbebedfce83/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f706f636b5f776964676574732e706e67"&gt;&lt;img width="800" src="https://camo.githubusercontent.com/51a17fe9599c84dddda6aa5540e8cdbebedfce83/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f706f636b5f776964676574732e706e67" data-canonical-src="https://pock.dev/assets/img/preview/pock_widgets.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-macos-catalina-1015" class="anchor" aria-hidden="true" href="#macos-catalina-1015"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS Catalina (10.15)&lt;/h2&gt;
&lt;p&gt;If you are on macOS Catalina (10.15), please click &lt;a href="https://pock.dev/docs/catalina.html" rel="nofollow"&gt;here&lt;/a&gt; and read carefully the suggestions to have a flawless experience.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thank-you" class="anchor" aria-hidden="true" href="#thank-you"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank you!&lt;/h2&gt;
&lt;p&gt;If you want to support this project, you can &lt;a href="https://paypal.me/pigigaldi" rel="nofollow"&gt;click here&lt;/a&gt;!
Pock will always be available as free software!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-enable" class="anchor" aria-hidden="true" href="#how-to-enable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How To Enable&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Move Pock to your Applications folder&lt;/li&gt;
&lt;li&gt;Open Pock&lt;/li&gt;
&lt;li&gt;If you don't see Pock in your Touch Bar, go to the &lt;code&gt;Keyboard&lt;/code&gt; pane in System Preferences and select "Touch Bar shows &lt;em&gt;App Controls&lt;/em&gt;."&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-widgets" class="anchor" aria-hidden="true" href="#widgets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Widgets&lt;/h2&gt;
&lt;p&gt;Includes five default widgets&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-dock-widget" class="anchor" aria-hidden="true" href="#dock-widget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dock widget&lt;/h5&gt;
&lt;p&gt;Your macOS Dock inside your MacBook's TouchBar, the core widget.
It comes with fully-functional badge support so you will not miss any notification.
More features can be configured in widget settings along with other preferences.
It now includes multi-window support!
&lt;em&gt;Enjoy your screen in full-size every time!&lt;/em&gt;&lt;/p&gt;
&lt;div align="left"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5e5954c96da86e72a28e02417c87228028c65606/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f646f636b5f7769646765742e706e67"&gt;&lt;img width="500" src="https://camo.githubusercontent.com/5e5954c96da86e72a28e02417c87228028c65606/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f646f636b5f7769646765742e706e67" data-canonical-src="https://pock.dev/assets/img/preview/widgets/pock_dock_widget.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div align="left"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ba03ac3042be5f6625079eec52658dcc1b51860f/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f6170705f6578706f73652e706e67"&gt;&lt;img width="500" src="https://camo.githubusercontent.com/ba03ac3042be5f6625079eec52658dcc1b51860f/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f6170705f6578706f73652e706e67" data-canonical-src="https://pock.dev/assets/img/preview/widgets/pock_app_expose.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-now-playing-widget" class="anchor" aria-hidden="true" href="#now-playing-widget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Now Playing widget&lt;/h5&gt;
&lt;p&gt;Media information at a glance with gestures for media controls included.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Gesture&lt;/th&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;tap&lt;/td&gt;
&lt;td&gt;toggle play/pause&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;swipe left&lt;/td&gt;
&lt;td&gt;previous song&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;swipe right&lt;/td&gt;
&lt;td&gt;next song&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div align="left"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ec1955f386eb91c42458b8ca9ba32b2d7e144b1c/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f6e6f775f706c6179696e675f7769646765742e706e67"&gt;&lt;img width="500" src="https://camo.githubusercontent.com/ec1955f386eb91c42458b8ca9ba32b2d7e144b1c/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f6e6f775f706c6179696e675f7769646765742e706e67" data-canonical-src="https://pock.dev/assets/img/preview/widgets/pock_now_playing_widget.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-esc-widget" class="anchor" aria-hidden="true" href="#esc-widget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ESC widget&lt;/h5&gt;
&lt;p&gt;A handy ESC button is there, just in case, so you don't have to hide Pock to access the system one.&lt;/p&gt;
&lt;div align="left"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b95b5661bde11cd01646216cbd2948d9e2c392f8/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f6573635f7769646765742e706e67"&gt;&lt;img width="500" src="https://camo.githubusercontent.com/b95b5661bde11cd01646216cbd2948d9e2c392f8/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f6573635f7769646765742e706e67" data-canonical-src="https://pock.dev/assets/img/preview/widgets/pock_esc_widget.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-status-widget" class="anchor" aria-hidden="true" href="#status-widget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status widget&lt;/h5&gt;
&lt;p&gt;Always keep an eye on system information, like what time is it, or maybe WiFi status or Battery status. Configure Status items from settings.&lt;/p&gt;
&lt;div align="left"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/273d4d8a0872c4d52084f7064e9df46c6c5c40b5/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f7374617475735f7769646765742e706e67"&gt;&lt;img width="500" src="https://camo.githubusercontent.com/273d4d8a0872c4d52084f7064e9df46c6c5c40b5/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f7374617475735f7769646765742e706e67" data-canonical-src="https://pock.dev/assets/img/preview/widgets/pock_status_widget.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-control-center-widget" class="anchor" aria-hidden="true" href="#control-center-widget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Control Center widget&lt;/h5&gt;
&lt;p&gt;Change screen brightness or system volume with easy controls.
Long press or slide on control center item to invoke sliders.&lt;/p&gt;
&lt;div align="left"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/745f72f78148842f0259c711c35ea314809b0fc6/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f636f6e74726f6c5f63656e7465725f7769646765742e706e67"&gt;&lt;img width="500" src="https://camo.githubusercontent.com/745f72f78148842f0259c711c35ea314809b0fc6/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f636f6e74726f6c5f63656e7465725f7769646765742e706e67" data-canonical-src="https://pock.dev/assets/img/preview/widgets/pock_control_center_widget.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-more" class="anchor" aria-hidden="true" href="#more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More...&lt;/h5&gt;
&lt;p&gt;More widgets are coming!
Keep search for #pock on social media to be updated on future widgets releases!&lt;/p&gt;
&lt;div align="left"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d0c34ec46abdc3baf60527e2b6cd39ec7b58bb8/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f6d6f72655f7769646765742e706e67"&gt;&lt;img width="500" src="https://camo.githubusercontent.com/4d0c34ec46abdc3baf60527e2b6cd39ec7b58bb8/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f776964676574732f706f636b5f6d6f72655f7769646765742e706e67" data-canonical-src="https://pock.dev/assets/img/preview/widgets/pock_more_widget.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-preferences" class="anchor" aria-hidden="true" href="#preferences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preferences&lt;/h2&gt;
&lt;p&gt;You can adjust Pock and widgets settings to reflects your specific needs. You can access these panes from the &lt;strong&gt;Preferences&lt;/strong&gt; menu item.&lt;/p&gt;
&lt;div&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b5dfffed70e7c305bfa224a9794b3aa516127273/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f707265666572656e6365732f707265666572656e63655f646f636b5f7769646765742e706e67"&gt;&lt;img width="262" src="https://camo.githubusercontent.com/b5dfffed70e7c305bfa224a9794b3aa516127273/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f707265666572656e6365732f707265666572656e63655f646f636b5f7769646765742e706e67" data-canonical-src="https://pock.dev/assets/img/preview/preferences/preference_dock_widget.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/656e33470d9f812885ed853d9cd304c00d666552/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f707265666572656e6365732f707265666572656e63655f67656e6572616c2e706e67"&gt;&lt;img width="262" src="https://camo.githubusercontent.com/656e33470d9f812885ed853d9cd304c00d666552/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f707265666572656e6365732f707265666572656e63655f67656e6572616c2e706e67" data-canonical-src="https://pock.dev/assets/img/preview/preferences/preference_general.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8b1a7bc08fa834af599b7e85798f05a2073b2cc7/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f707265666572656e6365732f707265666572656e63655f7374617475735f7769646765742e706e67"&gt;&lt;img width="262" src="https://camo.githubusercontent.com/8b1a7bc08fa834af599b7e85798f05a2073b2cc7/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f707265666572656e6365732f707265666572656e63655f7374617475735f7769646765742e706e67" data-canonical-src="https://pock.dev/assets/img/preview/preferences/preference_status_widget.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-customize" class="anchor" aria-hidden="true" href="#customize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize&lt;/h2&gt;
&lt;p&gt;You can customize the widget position in TouchBar from the &lt;strong&gt;Customize&lt;/strong&gt; menu item.&lt;/p&gt;
&lt;div align="left"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e641507e8fce8ca28286699ae990815892b7cee0/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f706f636b5f637573746f6d697a652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e641507e8fce8ca28286699ae990815892b7cee0/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f706f636b5f637573746f6d697a652e706e67" data-canonical-src="https://pock.dev/assets/img/preview/pock_customize.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-developers" class="anchor" aria-hidden="true" href="#developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers&lt;/h2&gt;
&lt;p align="left"&gt;Do you want to build a custom widget for Pock?
  Soon you will be able to do it, with &lt;b&gt;PockKit&lt;/b&gt;!
&lt;/p&gt;
&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9682865d68da3bd559d3310717509afbf9c6308c/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f646576656c6f706572732f78636f64655f706c75735f706f636b6b69742e706e67"&gt;&lt;img width="260" src="https://camo.githubusercontent.com/9682865d68da3bd559d3310717509afbf9c6308c/68747470733a2f2f706f636b2e6465762f6173736574732f696d672f707265766965772f646576656c6f706572732f78636f64655f706c75735f706f636b6b69742e706e67" data-canonical-src="https://pock.dev/assets/img/preview/developers/xcode_plus_pockkit.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-special-mentions" class="anchor" aria-hidden="true" href="#special-mentions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special mentions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/BrokenSt0rm" rel="nofollow"&gt;BrokenSt0rm&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="no_good_man" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f645-2642.png"&gt;üôÖ‚Äç‚ôÇÔ∏è&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SnapKit/SnapKit"&gt;SnapKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Clipy"&gt;Magnet, LoginServiceKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/a2/touch-baer"&gt;touch-baer&lt;/a&gt; - How to put icon in Control Strip&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/36115210" rel="nofollow"&gt;Minebomber&lt;/a&gt; - This comment blowed my mind&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/"&gt;Defaults, Preferences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/njdehoog/Witness"&gt;Witness&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-translated-readmes" class="anchor" aria-hidden="true" href="#translated-readmes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translated READMEs&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="us" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f8.png"&gt;üá∫üá∏&lt;/g-emoji&gt; &lt;a href="README.md"&gt;English&lt;/a&gt;
&lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;üá®üá≥&lt;/g-emoji&gt; &lt;a href=".github/readmes/README.cn.md"&gt;‰∏≠Êñá&lt;/a&gt;
&lt;g-emoji class="g-emoji" alias="jp" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f5.png"&gt;üáØüáµ&lt;/g-emoji&gt; &lt;a href=".github/readmes/README.ja.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt;
&lt;g-emoji class="g-emoji" alias="tr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f7.png"&gt;üáπüá∑&lt;/g-emoji&gt; &lt;a href=".github/readmes/README.tr.md"&gt;T√ºrk√ße&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;* Some translations may be different or incomplete.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-info" class="anchor" aria-hidden="true" href="#info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Info&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Pock&lt;/strong&gt; will never be a commercial package.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Under MIT license. See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; file for further information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pigigaldi</author><guid isPermaLink="false">https://github.com/pigigaldi/Pock</guid><pubDate>Mon, 09 Dec 2019 00:09:00 GMT</pubDate></item><item><title>groue/GRDB.swift #10 in Swift, This month</title><link>https://github.com/groue/GRDB.swift</link><description>&lt;p&gt;&lt;i&gt;A toolkit for SQLite databases, with a focus on application development&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/groue/GRDB.swift/master/GRDB.png"&gt;&lt;img src="https://raw.githubusercontent.com/groue/GRDB.swift/master/GRDB.png" alt="GRDB: A toolkit for SQLite databases, with a focus on application development" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;strong&gt;A toolkit for SQLite databases, with a focus on application development&lt;/strong&gt;&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img alt="Swift 4.2" src="https://camo.githubusercontent.com/7deaf2fd442ddfbdc28a7dc3ce67f067a59618a0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d342e322d6f72616e67652e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/swift-4.2-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img alt="Swift 5" src="https://camo.githubusercontent.com/c71f82ee3309bc14cc904fb1a628903768e1ac39/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352d6f72616e67652e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/swift-5-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img alt="Platforms" src="https://camo.githubusercontent.com/0b596e48758a762e966c41ea71cb4eeab1b3588c/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f475244422e73776966742e737667" data-canonical-src="https://img.shields.io/cocoapods/p/GRDB.swift.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/groue/GRDB.swift/blob/master/LICENSE"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/7436c9380b0004504c50be20057c7759b100fc5d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f67726f75652f475244422e73776966742e7376673f6d61784167653d32353932303030" data-canonical-src="https://img.shields.io/github/license/groue/GRDB.swift.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://travis-ci.org/groue/GRDB.swift" rel="nofollow"&gt;&lt;img alt="Build Status" src="https://camo.githubusercontent.com/7454ea95706b4541a19f4e7b2183204cc9c5529e/68747470733a2f2f7472617669732d63692e6f72672f67726f75652f475244422e73776966742e7376673f6272616e63683d6d6173746572" data-canonical-src="https://travis-ci.org/groue/GRDB.swift.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Latest release&lt;/strong&gt;: November 20, 2019 ‚Ä¢ version 4.6.2 ‚Ä¢ &lt;a href="CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt; ‚Ä¢ &lt;a href="Documentation/GRDB3MigrationGuide.md"&gt;Migrating From GRDB 3 to GRDB 4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;: iOS 9.0+ / macOS 10.9+ / tvOS 9.0+ / watchOS 2.0+ ‚Ä¢ Swift 4.2+ / Xcode 10.0+&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Swift version&lt;/th&gt;
&lt;th&gt;GRDB version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Swift 5&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;v4.6.2&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Swift 4.2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;v4.6.2&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 4.1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v3.7.0"&gt;v3.7.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 4&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v2.10.0"&gt;v2.10.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3.2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v1.3.0"&gt;v1.3.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3.1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v1.3.0"&gt;v1.3.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v1.0"&gt;v1.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 2.3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v0.81.2"&gt;v0.81.2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 2.2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v0.80.2"&gt;v0.80.2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Contact&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Release announcements and usage tips: follow &lt;a href="http://twitter.com/groue" rel="nofollow"&gt;@groue&lt;/a&gt; on Twitter.&lt;/li&gt;
&lt;li&gt;Report bugs in a &lt;a href="https://github.com/groue/GRDB.swift/issues/new"&gt;Github issue&lt;/a&gt;. Make sure you check the &lt;a href="https://github.com/groue/GRDB.swift/issues?q=is%3Aopen"&gt;existing issues&lt;/a&gt; first.&lt;/li&gt;
&lt;li&gt;A question? Looking for advice? Do you wonder how to contribute? Fancy a chat? Go to the &lt;a href="https://forums.swift.org/c/related-projects/grdb" rel="nofollow"&gt;GRDB forums&lt;/a&gt;, or open a &lt;a href="https://github.com/groue/GRDB.swift/issues/new"&gt;Github issue&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-this" class="anchor" aria-hidden="true" href="#what-is-this"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is this?&lt;/h2&gt;
&lt;p&gt;GRDB provides raw access to SQL and advanced SQLite features, because one sometimes enjoys a sharp tool. It has robust concurrency primitives, so that multi-threaded applications can efficiently use their databases. It grants your application models with persistence and fetching methods, so that you don't have to deal with SQL and raw database rows when you don't want to.&lt;/p&gt;
&lt;p&gt;Compared to &lt;a href="http://github.com/stephencelis/SQLite.swift"&gt;SQLite.swift&lt;/a&gt; or &lt;a href="http://github.com/ccgus/fmdb"&gt;FMDB&lt;/a&gt;, GRDB can spare you a lot of glue code. Compared to &lt;a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/CoreData/" rel="nofollow"&gt;Core Data&lt;/a&gt; or &lt;a href="http://realm.io" rel="nofollow"&gt;Realm&lt;/a&gt;, it can simplify your multi-threaded applications.&lt;/p&gt;
&lt;p&gt;It comes with &lt;a href="#documentation"&gt;up-to-date documentation&lt;/a&gt;, &lt;a href="#general-guides--good-practices"&gt;general guides&lt;/a&gt;, and it is &lt;a href="https://github.com/groue/GRDB.swift/wiki/Performance"&gt;fast&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/WhyAdoptGRDB.md"&gt;Why Adopt GRDB?&lt;/a&gt; if you are looking for your favorite database library.&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;
    &lt;a href="#features"&gt;Features&lt;/a&gt; ‚Ä¢
    &lt;a href="#usage"&gt;Usage&lt;/a&gt; ‚Ä¢
    &lt;a href="#installation"&gt;Installation&lt;/a&gt; ‚Ä¢
    &lt;a href="#documentation"&gt;Documentation&lt;/a&gt; ‚Ä¢
    &lt;a href="#demo-application"&gt;Demo Application&lt;/a&gt; ‚Ä¢
    &lt;a href="#faq"&gt;FAQ&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;GRDB ships with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sqlite-api"&gt;Access to raw SQL and SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#records"&gt;Records&lt;/a&gt;: Fetching and persistence methods for your custom structs and class hierarchies.&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-query-interface"&gt;Query Interface&lt;/a&gt;: A swift way to avoid the SQL language.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;: Relations and joins between record types.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-pools"&gt;WAL Mode Support&lt;/a&gt;: Extra performance for multi-threaded applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="#migrations"&gt;Migrations&lt;/a&gt;: Transform your database as your application evolves.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-changes-observation"&gt;Database Observation&lt;/a&gt;: Observe database changes and transactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/FullTextSearch.md"&gt;Full-Text Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#encryption"&gt;Encryption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;Support for Custom SQLite Builds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Companion libraries that enhance and extend GRDB:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;: track database changes in a reactive way, with &lt;a href="https://developer.apple.com/documentation/combine" rel="nofollow"&gt;Combine&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;: track database changes in a reactive way, with &lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDBObjc"&gt;GRDBObjc&lt;/a&gt;: FMDB-compatible bindings to GRDB.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;details open=""&gt;
  &lt;summary&gt;Connect to an SQLite database&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Simple database connection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Enhanced multithreading based on SQLite's WAL mode&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#database-connections"&gt;Database Connections&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Execute SQL statements&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        CREATE TABLE place (&lt;/span&gt;
&lt;span class="pl-s"&gt;          id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-s"&gt;          title TEXT NOT NULL,&lt;/span&gt;
&lt;span class="pl-s"&gt;          favorite BOOLEAN NOT NULL DEFAULT 0,&lt;/span&gt;
&lt;span class="pl-s"&gt;          latitude DOUBLE NOT NULL,&lt;/span&gt;
&lt;span class="pl-s"&gt;          longitude DOUBLE NOT NULL)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        INSERT INTO place (title, favorite, latitude, longitude)&lt;/span&gt;
&lt;span class="pl-s"&gt;        VALUES (?, ?, ?, ?)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paris&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;48.85341&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.3488&lt;/span&gt;])
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; parisId &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-smi"&gt;lastInsertedRowID&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5 only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        INSERT INTO place (title, favorite, latitude, longitude)&lt;/span&gt;
&lt;span class="pl-s"&gt;        VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Madrid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;40.41678&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;-3.70379&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#executing-updates"&gt;Executing Updates&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Fetch database rows and values&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch database rows&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch values&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeTitles &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT title FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [String]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetch-queries"&gt;Fetch Queries&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Store custom models aka "records"&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; snip: turn Place into a "record" by adopting the protocols that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; provide fetching and persistence methods.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create database table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
        t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;boolean&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    }
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; berlin &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Berlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;isFavorite&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;coordinate&lt;/span&gt;: &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(&lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;52.52437&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;13.41053&lt;/span&gt;))
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; berlin.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    berlin.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    berlin.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; berlin.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#records"&gt;Records&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Fetch records and values with the Swift query interface&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Place?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Place?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; berlin &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Berlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Place]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; favoritePlaces &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; favoriteCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL is always welcome&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="#the-query-interface"&gt;Query Interface&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Be notified of database changes&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}
observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh places could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    onChange&lt;span class="pl-k"&gt;:&lt;/span&gt; { (&lt;span class="pl-c1"&gt;places&lt;/span&gt;: [Place]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Places have changed.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#database-changes-observation"&gt;Database Changes Observation&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;GRDB runs on top of SQLite&lt;/strong&gt;: you should get familiar with the &lt;a href="http://www.sqlite.org/faq.html" rel="nofollow"&gt;SQLite FAQ&lt;/a&gt;. For general and detailed information, jump to the &lt;a href="http://www.sqlite.org/docs.html" rel="nofollow"&gt;SQLite Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/index.html" rel="nofollow"&gt;GRDB Reference&lt;/a&gt; (generated by &lt;a href="https://github.com/realm/jazzy"&gt;Jazzy&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demo-application"&gt;Demo Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-connections"&gt;Database Connections&lt;/a&gt;: Connect to SQLite databases&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sqlite-and-sql" class="anchor" aria-hidden="true" href="#sqlite-and-sql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite and SQL&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sqlite-api"&gt;SQLite API&lt;/a&gt;: The low-level SQLite API ‚Ä¢ &lt;a href="#executing-updates"&gt;executing updates&lt;/a&gt; ‚Ä¢ &lt;a href="#fetch-queries"&gt;fetch queries&lt;/a&gt; ‚Ä¢ &lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-records-and-the-query-interface" class="anchor" aria-hidden="true" href="#records-and-the-query-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Records and the Query Interface&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#records"&gt;Records&lt;/a&gt;: Fetching and persistence methods for your custom structs and class hierarchies&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-query-interface"&gt;Query Interface&lt;/a&gt;: A swift way to generate SQL ‚Ä¢ &lt;a href="#database-schema"&gt;table creation&lt;/a&gt; ‚Ä¢ &lt;a href="#requests"&gt;requests&lt;/a&gt; ‚Ä¢ &lt;a href="Documentation/AssociationsBasics.md"&gt;associations between record types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-application-tools" class="anchor" aria-hidden="true" href="#application-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Application Tools&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#migrations"&gt;Migrations&lt;/a&gt;: Transform your database as your application evolves.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/FullTextSearch.md"&gt;Full-Text Search&lt;/a&gt;: Perform efficient and customizable full-text searches.&lt;/li&gt;
&lt;li&gt;&lt;a href="#joined-queries-support"&gt;Joined Queries Support&lt;/a&gt;: Consume complex joined queries.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-changes-observation"&gt;Database Changes Observation&lt;/a&gt;: Observe database changes and transactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="#encryption"&gt;Encryption&lt;/a&gt;: Encrypt your database with SQLCipher.&lt;/li&gt;
&lt;li&gt;&lt;a href="#backup"&gt;Backup&lt;/a&gt;: Dump the content of a database to another.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-good-to-know" class="anchor" aria-hidden="true" href="#good-to-know"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Good to Know&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#avoiding-sql-injection"&gt;Avoiding SQL Injection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unicode"&gt;Unicode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#memory-management"&gt;Memory Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-protection"&gt;Data Protection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-general-guides--good-practices" class="anchor" aria-hidden="true" href="#general-guides--good-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General Guides &amp;amp; Good Practices&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;a href="Documentation/GoodPracticesForDesigningRecordTypes.md"&gt;Good Practices for Designing Record Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;a href="Documentation/GRDB3MigrationGuide.md"&gt;Migrating From GRDB 3 to GRDB 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;a href="https://github.com/groue/GRDB.swift/issues?q=is%3Aissue+label%3A%22best+practices%22"&gt;Issues tagged "best practices"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2753.png"&gt;‚ùì&lt;/g-emoji&gt; &lt;a href="https://github.com/groue/GRDB.swift/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20label%3Aquestion"&gt;Issues tagged "question"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;üìò&lt;/g-emoji&gt; &lt;a href="Documentation/WhyAdoptGRDB.md"&gt;Why Adopt GRDB?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;üìò&lt;/g-emoji&gt; &lt;a href="https://medium.com/@gwendal.roue/how-to-build-an-ios-application-with-sqlite-and-grdb-swift-d023a06c29b3" rel="nofollow"&gt;How to build an iOS application with SQLite and GRDB.swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;üìò&lt;/g-emoji&gt; &lt;a href="https://medium.com/@gwendal.roue/four-different-ways-to-handle-sqlite-concurrency-db3bcc74d00e" rel="nofollow"&gt;Four different ways to handle SQLite concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;üìò&lt;/g-emoji&gt; &lt;a href="https://hackernoon.com/unexpected-sqlite-with-swift-ddc6343bcbfc" rel="nofollow"&gt;Unexpected SQLite with Swift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#sample-code"&gt;Sample Code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;The installation procedures below have GRDB use the version of SQLite that ships with the target operating system.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="#encryption"&gt;Encryption&lt;/a&gt; for the installation procedure of GRDB with SQLCipher.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;Custom SQLite builds&lt;/a&gt; for the installation procedure of GRDB with a customized build of SQLite 3.28.0.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/FullTextSearch.md#enabling-fts5-support"&gt;Enabling FTS5 Support&lt;/a&gt; for the installation procedure of GRDB with support for the FTS5 full-text engine.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Xcode projects. To use GRDB with CocoaPods (version 1.2 or higher), specify in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB can be installed as a framework, or a static library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; automates the distribution of Swift code. To use GRDB with SPM, add a dependency to your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/groue/GRDB.swift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that Linux is not currently supported.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is &lt;strong&gt;unsupported&lt;/strong&gt;. For some context about this decision, see &lt;a href="https://github.com/groue/GRDB.swift/issues/433"&gt;#433&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/groue/GRDB.swift/releases"&gt;Download&lt;/a&gt; a copy of GRDB, or clone its repository and make sure you checkout the latest tagged version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embed the &lt;code&gt;GRDB.xcodeproj&lt;/code&gt; project in your own project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;code&gt;GRDBOSX&lt;/code&gt;, &lt;code&gt;GRDBiOS&lt;/code&gt;, &lt;code&gt;GRDBtvOS&lt;/code&gt;, or &lt;code&gt;GRDBWatchOS&lt;/code&gt; target in the &lt;strong&gt;Target Dependencies&lt;/strong&gt; section of the &lt;strong&gt;Build Phases&lt;/strong&gt; tab of your application target (extension target for WatchOS).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;code&gt;GRDB.framework&lt;/code&gt; from the targetted platform to the &lt;strong&gt;Embedded Binaries&lt;/strong&gt; section of the &lt;strong&gt;General&lt;/strong&gt;  tab of your application target (extension target for WatchOS).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for an example of such integration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-demo-application" class="anchor" aria-hidden="true" href="#demo-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo Application&lt;/h1&gt;
&lt;p&gt;The repository comes with a &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; that shows you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to setup a database in an iOS app&lt;/li&gt;
&lt;li&gt;how to define a simple &lt;a href="#codable-records"&gt;Codable Record&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;how to track database changes with &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-database-connections" class="anchor" aria-hidden="true" href="#database-connections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Connections&lt;/h1&gt;
&lt;p&gt;GRDB provides two classes for accessing SQLite databases: &lt;code&gt;DatabaseQueue&lt;/code&gt; and &lt;code&gt;DatabasePool&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Pick one:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The differences are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Database pools allow concurrent database accesses (this can improve the performance of multithreaded applications).&lt;/li&gt;
&lt;li&gt;Database pools open your SQLite database in the &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;WAL mode&lt;/a&gt; (unless read-only).&lt;/li&gt;
&lt;li&gt;Database queues support &lt;a href="https://www.sqlite.org/inmemorydb.html" rel="nofollow"&gt;in-memory databases&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If you are not sure, choose DatabaseQueue.&lt;/strong&gt; You will always be able to switch to DatabasePool later.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#database-queues"&gt;Database Queues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-pools"&gt;Database Pools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-database-queues" class="anchor" aria-hidden="true" href="#database-queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Queues&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Open a database queue&lt;/strong&gt; with the path to a database file:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; inMemoryDBQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite creates the database file if it does not already exist. The connection is closed when the database queue gets deallocated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A database queue can be used from any thread.&lt;/strong&gt; The &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; methods are synchronous, and block the current thread until your database statements are executed in a protected dispatch queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Modify the database:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read values:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Database access methods can return values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; newPlaceCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;A database queue serializes accesses to the database&lt;/strong&gt;, which means that there is never more than one thread that uses the database.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When you don't need to modify the database, prefer the &lt;code&gt;read&lt;/code&gt; method. It prevents any modification to the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;write&lt;/code&gt; method wraps your database statements in a transaction that commits if and only if no error occurs. On the first unhandled error, all changes are reverted, the whole transaction is rollbacked, and the error is rethrown.&lt;/p&gt;
&lt;p&gt;When precise transaction handling is required, see &lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;A database queue needs your application to follow rules in order to deliver its safety guarantees.&lt;/strong&gt; Please refer to the &lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt; chapter.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample code that sets up a database queue on iOS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-databasequeue-configuration" class="anchor" aria-hidden="true" href="#databasequeue-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseQueue Configuration&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
config.&lt;span class="pl-smi"&gt;foreignKeysEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default is already true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;trace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) }     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all SQL statements&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;label&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyDatabase&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Useful when your app opens multiple databases&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/Configuration.html" rel="nofollow"&gt;Configuration&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-database-pools" class="anchor" aria-hidden="true" href="#database-pools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Pools&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;A database pool allows concurrent database accesses.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite creates the database file if it does not already exist. The connection is closed when the database pool gets deallocated.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: unless read-only, a database pool opens your database in the SQLite "WAL mode". The WAL mode does not fit all situations. Please have a look at &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;https://www.sqlite.org/wal.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;A database pool can be used from any thread.&lt;/strong&gt; The &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; methods are synchronous, and block the current thread until your database statements are executed in a protected dispatch queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Modify the database:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read values:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Database access methods can return values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; newPlaceCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Database pools allow several threads to access the database at the same time:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When you don't need to modify the database, prefer the &lt;code&gt;read&lt;/code&gt; method, because several threads can perform reads in parallel.&lt;/p&gt;
&lt;p&gt;Reads are generally non-blocking, unless the maximum number of concurrent reads has been reached. In this case, a read has to wait for another read to complete. That maximum number can be &lt;a href="#databasepool-configuration"&gt;configured&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reads are guaranteed an immutable view of the last committed state of the database, regardless of concurrent writes. This kind of isolation is called &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;snapshot isolation&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unlike reads, writes are serialized. There is never more than a single thread that is writing into the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;write&lt;/code&gt; method wraps your database statements in a transaction that commits if and only if no error occurs. On the first unhandled error, all changes are reverted, the whole transaction is rollbacked, and the error is rethrown.&lt;/p&gt;
&lt;p&gt;When precise transaction handling is required, see &lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Database pools can take &lt;a href="#database-snapshots"&gt;snapshots&lt;/a&gt; of the database.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;A database pool needs your application to follow rules in order to deliver its safety guarantees.&lt;/strong&gt; See the &lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt; chapter for more details about database pools, how they differ from database queues, and advanced use cases.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample code that sets up a database queue on iOS, and just replace DatabaseQueue with DatabasePool.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-databasepool-configuration" class="anchor" aria-hidden="true" href="#databasepool-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabasePool Configuration&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
config.&lt;span class="pl-smi"&gt;foreignKeysEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default is already true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;trace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) }     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all SQL statements&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;label&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyDatabase&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Useful when your app opens multiple databases&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;maximumReaderCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The default is 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/Configuration.html" rel="nofollow"&gt;Configuration&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Database pools are more memory-hungry than database queues. See &lt;a href="#memory-management"&gt;Memory Management&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sqlite-api" class="anchor" aria-hidden="true" href="#sqlite-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite API&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;In this section of the documentation, we will talk SQL.&lt;/strong&gt; Jump to the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt; if SQL is not your cup of tea.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#executing-updates"&gt;Executing Updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetch-queries"&gt;Fetch Queries&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetching-methods"&gt;Fetching Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#row-queries"&gt;Row Queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#value-queries"&gt;Value Queries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#values"&gt;Values&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#data-and-memory-savings"&gt;Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-and-datecomponents"&gt;Date and DateComponents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nsnumber-and-nsdecimalnumber"&gt;NSNumber and NSDecimalNumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-enums"&gt;Swift enums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-value-types"&gt;Custom Value Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#prepared-statements"&gt;Prepared Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-sql-functions-and-aggregates"&gt;Custom SQL Functions and Aggregates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-schema-introspection"&gt;Database Schema Introspection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#row-adapters"&gt;Row Adapters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#raw-sqlite-pointers"&gt;Raw SQLite Pointers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-executing-updates" class="anchor" aria-hidden="true" href="#executing-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Executing Updates&lt;/h2&gt;
&lt;p&gt;Once granted with a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;, the &lt;code&gt;execute&lt;/code&gt; method executes the SQL statements that do not return any database row, such as &lt;code&gt;CREATE TABLE&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;ALTER&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        CREATE TABLE player (&lt;/span&gt;
&lt;span class="pl-s"&gt;            id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-s"&gt;            name TEXT NOT NULL,&lt;/span&gt;
&lt;span class="pl-s"&gt;            score INT)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, score) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET score = :score WHERE id = :id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;])
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; and colon-prefixed keys like &lt;code&gt;:score&lt;/code&gt; in the SQL query are the &lt;strong&gt;statements arguments&lt;/strong&gt;. You pass arguments with arrays or dictionaries, as in the example above. See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported arguments types (Bool, Int, String, Date, Swift enums, etc.), and &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt; for a detailed documentation of SQLite arguments.&lt;/p&gt;
&lt;p&gt;In Swift 5, you can embed query arguments right into your SQL queries, with the &lt;code&gt;literal&lt;/code&gt; argument label, as in the example below. See &lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        INSERT INTO player (name, score)&lt;/span&gt;
&lt;span class="pl-s"&gt;        VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;O'Brien&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;550&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Never ever embed values directly in your raw SQL strings&lt;/strong&gt;. See &lt;a href="#avoiding-sql-injection"&gt;Avoiding SQL Injection&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG: don't embed values in raw SQL strings&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = '&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;' WHERE id = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;id&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: use SQL Interpolation (Swift 5)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; WHERE id = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;id&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: use arguments dictionary&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = :name WHERE id = :id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; id])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: use arguments array&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = ? WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [name, id])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Join multiple statements with a semicolon&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (?, ?);&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (?, ?);&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;750&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;750&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;);&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;);&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to make sure that a single statement is executed, use &lt;a href="#prepared-statements"&gt;Prepared Statements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;After an INSERT statement&lt;/strong&gt;, you can get the row ID of the inserted row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, score) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; playerId &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-smi"&gt;lastInsertedRowID&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't miss &lt;a href="#records"&gt;Records&lt;/a&gt;, that provide classic &lt;strong&gt;persistence methods&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;let&lt;/span&gt; playerId &lt;span class="pl-k"&gt;=&lt;/span&gt; player.&lt;span class="pl-smi"&gt;id&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-fetch-queries" class="anchor" aria-hidden="true" href="#fetch-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetch Queries&lt;/h2&gt;
&lt;p&gt;&lt;a href="#database-connections"&gt;Database connections&lt;/a&gt; let you fetch database rows, plain values, and custom models aka "records".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rows&lt;/strong&gt; are the raw results of SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]) {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name, color)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Values&lt;/strong&gt; are the Bool, Int, String, Date, Swift enums, etc. stored in row columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; urls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; URL.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; urls.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(url)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Records&lt;/strong&gt; are your application objects that can initialize themselves from rows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetching-methods"&gt;Fetching Methods&lt;/a&gt; and &lt;a href="#cursors"&gt;Cursors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#row-queries"&gt;Row Queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#value-queries"&gt;Value Queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#records"&gt;Records&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fetching-methods" class="anchor" aria-hidden="true" href="#fetching-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Methods&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Throughout GRDB&lt;/strong&gt;, you can always fetch &lt;em&gt;cursors&lt;/em&gt;, &lt;em&gt;arrays&lt;/em&gt;, or &lt;em&gt;single values&lt;/em&gt; of any fetchable type (database &lt;a href="#row-queries"&gt;row&lt;/a&gt;, simple &lt;a href="#value-queries"&gt;value&lt;/a&gt;, or custom &lt;a href="#records"&gt;record&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Row]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fetchCursor&lt;/code&gt; returns a &lt;strong&gt;&lt;a href="#cursors"&gt;cursor&lt;/a&gt;&lt;/strong&gt; over fetched values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fetchAll&lt;/code&gt; returns an &lt;strong&gt;array&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fetchOne&lt;/code&gt; returns a &lt;strong&gt;single optional value&lt;/strong&gt;, and consumes a single database row (if any).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cursors" class="anchor" aria-hidden="true" href="#cursors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cursors&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Whenever you consume several rows from the database, you can fetch an Array, or a Cursor&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fetchAll()&lt;/code&gt; method returns a regular Swift array, that you iterate like all other arrays:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unlike arrays, cursors returned by &lt;code&gt;fetchCursor()&lt;/code&gt; load their results step after step:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Cursor of Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; players.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both arrays and cursors can iterate over database results. How do you choose one or the other? Look at the differences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors can not be used on any thread&lt;/strong&gt;: you must consume a cursor on the dispatch queue it was created in. Particularly, don't extract a cursor out of a database access method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wrong&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; cursor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; cursor.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Conversely, arrays may be consumed on any thread:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; OK&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; array &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; array { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors can be iterated only one time.&lt;/strong&gt; Arrays can be iterated many times.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors iterate database results in a lazy fashion&lt;/strong&gt;, and don't consume much memory. Arrays contain copies of database values, and may take a lot of memory when there are many fetched results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors are granted with direct access to SQLite,&lt;/strong&gt; unlike arrays that have to take the time to copy database values. If you look after extra performance, you may prefer cursors over arrays.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors adopt the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Protocols/Cursor.html" rel="nofollow"&gt;Cursor&lt;/a&gt; protocol, which looks a lot like standard &lt;a href="https://developer.apple.com/reference/swift/lazysequenceprotocol" rel="nofollow"&gt;lazy sequences&lt;/a&gt; of Swift.&lt;/strong&gt; As such, cursors come with many convenience methods: &lt;code&gt;compactMap&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;dropFirst&lt;/code&gt;, &lt;code&gt;dropLast&lt;/code&gt;, &lt;code&gt;drop(while:)&lt;/code&gt;, &lt;code&gt;enumerated&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;forEach&lt;/code&gt;, &lt;code&gt;joined&lt;/code&gt;, &lt;code&gt;joined(separator:)&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;max(by:)&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;min(by:)&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;prefix(while:)&lt;/code&gt;, &lt;code&gt;reduce&lt;/code&gt;, &lt;code&gt;reduce(into:)&lt;/code&gt;, &lt;code&gt;suffix&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all Github links&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; URL
    .&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt; { url &lt;span class="pl-k"&gt;in&lt;/span&gt; url.&lt;span class="pl-smi"&gt;host&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    .&lt;span class="pl-c1"&gt;forEach&lt;/span&gt; { url &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(url) }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; An efficient cursor of coordinates:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; locations &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.
    .&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT latitude, longitude FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;map&lt;/span&gt; { row &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(&lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
    }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Turn cursors into arrays or sets:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; array &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(cursor)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Set&lt;/span&gt;(cursor)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors are not Swift sequences.&lt;/strong&gt; That's because Swift sequences can't handle iteration errors, when reading SQLite results may fail at any time. SQL functions may throw errors. On iOS, &lt;a href="#data-protection"&gt;data protection&lt;/a&gt; may block access to the database file in the background. On macOS, your application users may mess with the file system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors require a little care&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Don't modify the results during a cursor iteration:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Undefined behavior&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; players.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DELETE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't turn a cursor of &lt;code&gt;Row&lt;/code&gt; into an array. You would not get the distinct rows you expect. To get a array of rows, use &lt;code&gt;Row.fetchAll(...)&lt;/code&gt;. Generally speaking, make sure you copy a row whenever you extract it from a cursor for later use: &lt;code&gt;row.copy()&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you don't see, or don't care about the difference, use arrays. If you care about memory and performance, use cursors when appropriate.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-row-queries" class="anchor" aria-hidden="true" href="#row-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Row Queries&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetching-rows"&gt;Fetching Rows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#column-values"&gt;Column Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rows-as-dictionaries"&gt;Rows as Dictionaries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-fetching-rows" class="anchor" aria-hidden="true" href="#fetching-rows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Rows&lt;/h4&gt;
&lt;p&gt;Fetch &lt;strong&gt;cursors&lt;/strong&gt; of rows, &lt;strong&gt;arrays&lt;/strong&gt;, or &lt;strong&gt;single&lt;/strong&gt; rows (see &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Row]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name, color)
    }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments are optional arrays or dictionaries that fill the positional &lt;code&gt;?&lt;/code&gt; and colon-prefixed keys like &lt;code&gt;:name&lt;/code&gt; in the query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name = :name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported arguments types (Bool, Int, String, Date, Swift enums, etc.), and &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt; for a detailed documentation of SQLite arguments.&lt;/p&gt;
&lt;p&gt;Unlike row arrays that contain copies of the database rows, row cursors are close to the SQLite metal, and require a little care:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Don't turn a cursor of &lt;code&gt;Row&lt;/code&gt; into an array&lt;/strong&gt;. You would not get the distinct rows you expect. To get a array of rows, use &lt;code&gt;Row.fetchAll(...)&lt;/code&gt;. Generally speaking, make sure you copy a row whenever you extract it from a cursor for later use: &lt;code&gt;row.copy()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-column-values" class="anchor" aria-hidden="true" href="#column-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Column Values&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Read column values&lt;/strong&gt; by index or column name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0 is the leftmost column&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Leftmost matching column - lookup is case-insensitive&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Using query interface's Column&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure to ask for an optional when the value may be NULL:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;row[]&lt;/code&gt; subscript returns the type you ask for. See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported value types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount64&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; hasBooks&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false when 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; string&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "2015-09-11 18:14:15.123"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date&lt;span class="pl-k"&gt;:&lt;/span&gt; Date         &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Depends on the type of the property.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use the &lt;code&gt;as&lt;/code&gt; type casting operator:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: avoid the &lt;code&gt;as!&lt;/code&gt; and &lt;code&gt;as?&lt;/code&gt; operators:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; int &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BAD - doesn't work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; int &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GOOD&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Generally speaking, you can extract the type you need, provided it can be converted from the underlying SQLite value:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Successful conversions include:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All numeric SQLite values to all numeric Swift types, and Bool (zero is the only false boolean).&lt;/li&gt;
&lt;li&gt;Text SQLite values to Swift String.&lt;/li&gt;
&lt;li&gt;Blob SQLite values to Foundation Data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported types (Bool, Int, String, Date, Swift enums, etc.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NULL returns nil.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT NULL&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert NULL to Int.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is one exception, though: the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseValue &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DatabaseValue.null&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Missing columns return nil.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'foo' AS foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;missing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;missing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: no such column: missing&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can explicitly check for a column presence with the &lt;code&gt;hasColumn&lt;/code&gt; method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Invalid conversions throw a fatal error.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Mom‚Äôs birthday'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Mom‚Äôs birthday"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Date&lt;span class="pl-k"&gt;?&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "Mom‚Äôs birthday" to Date.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Date   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "Mom‚Äôs birthday" to Date.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 256&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 256&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert 256 to UInt8.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert 256 to UInt8.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those conversion fatal errors can be avoided with the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Mom‚Äôs birthday'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle invalid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This extra verbosity is the consequence of having to deal with an untrusted database: you may consider fixing the content of your database instead. See &lt;a href="#fatal-errors"&gt;Fatal Errors&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SQLite has a weak type system, and provides &lt;a href="https://www.sqlite.org/c3ref/column_blob.html" rel="nofollow"&gt;convenience conversions&lt;/a&gt; that can turn String to Int, Double to Blob, etc.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GRDB will sometimes let those conversions go through:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT '20 small cigars'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 20&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't freak out: those conversions did not prevent SQLite from becoming the immensely successful database engine you want to use. And GRDB adds safety checks described just above. You can also prevent those convenience conversions altogether by using the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-databasevalue" class="anchor" aria-hidden="true" href="#databasevalue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseValue&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;DatabaseValue is an intermediate type between SQLite and your values, which gives information about the raw value stored in the database.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You get DatabaseValue just like other value types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil if and only if column does not exist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Check for NULL:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The stored value:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int64, Double, String, Data, or nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All the five storage classes supported by SQLite:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;switch&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt; {
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;null&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;                 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NULL&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;int64&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; int64)&lt;span class="pl-k"&gt;:&lt;/span&gt;     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Int64: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;int64&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;double&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; double)&lt;span class="pl-k"&gt;:&lt;/span&gt;   &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Double: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;double&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;string&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; string)&lt;span class="pl-k"&gt;:&lt;/span&gt;   &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;String: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;string&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;blob&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; data)&lt;span class="pl-k"&gt;:&lt;/span&gt;       &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Data: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;data&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can extract regular &lt;a href="#values"&gt;values&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.) from DatabaseValue with the &lt;a href="#custom-value-types"&gt;DatabaseValueConvertible.fromDatabaseValue()&lt;/a&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount64 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int64?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasBooks    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool?, false when 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "2015-09-11 18:14:15.123"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date   &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Date?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;fromDatabaseValue&lt;/code&gt; returns nil for invalid conversions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Mom‚Äôs birthday'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Mom‚Äôs birthday"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; int    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date   &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-rows-as-dictionaries" class="anchor" aria-hidden="true" href="#rows-as-dictionaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rows as Dictionaries&lt;/h4&gt;
&lt;p&gt;Row adopts the standard &lt;a href="https://developer.apple.com/documentation/swift/randomaccesscollection" rel="nofollow"&gt;RandomAccessCollection&lt;/a&gt; protocol, and can be seen as a dictionary of &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All the (columnName, dbValue) tuples, from left to right:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; (columnName, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; row {
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;You can build rows from dictionaries&lt;/strong&gt; (standard Swift dictionaries and NSDictionary). See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row&lt;span class="pl-k"&gt;:&lt;/span&gt; Row &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Row&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Row&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; [AnyHashable: Any] &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil if invalid dictionary&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet rows are not real dictionaries: they may contain duplicate columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 1 AS foo, 2 AS foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row.&lt;span class="pl-smi"&gt;columnNames&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["foo", "foo"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;databaseValues&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1 (leftmost matching column)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; (columnName, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; row { &lt;span class="pl-k"&gt;...&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ("foo", 1), ("foo", 2)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When you build a dictionary from a row&lt;/strong&gt;, you have to disambiguate identical columns, and choose how to present database values. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;[String: DatabaseValue]&lt;/code&gt; dictionary that keeps leftmost value in case of duplicated column name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dict &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dictionary&lt;/span&gt;(row, &lt;span class="pl-c1"&gt;uniquingKeysWith&lt;/span&gt;: { (left, &lt;span class="pl-c1"&gt;_&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt; left })&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;[String: AnyObject]&lt;/code&gt; dictionary which keeps rightmost value in case of duplicated column name. This dictionary is identical to FMResultSet's resultDictionary from FMDB. It contains NSNull values for null columns, and can be shared with Objective-C:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dict &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dictionary&lt;/span&gt;(
    row.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { (column, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        (column, dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;AnyObject&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;uniquingKeysWith&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;_&lt;/span&gt;, right) &lt;span class="pl-k"&gt;in&lt;/span&gt; right })&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;[String: Any]&lt;/code&gt; dictionary that can feed, for example, JSONSerialization:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dict &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dictionary&lt;/span&gt;(
    row.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { (column, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        (column, dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;uniquingKeysWith&lt;/span&gt;: { (left, &lt;span class="pl-c1"&gt;_&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt; left })&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the documentation of &lt;a href="https://developer.apple.com/documentation/swift/dictionary/2892961-init" rel="nofollow"&gt;&lt;code&gt;Dictionary.init(_:uniquingKeysWith:)&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-value-queries" class="anchor" aria-hidden="true" href="#value-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Value Queries&lt;/h3&gt;
&lt;p&gt;Instead of rows, you can directly fetch &lt;strong&gt;&lt;a href="#values"&gt;values&lt;/a&gt;&lt;/strong&gt;. Like rows, fetch them as &lt;strong&gt;cursors&lt;/strong&gt;, &lt;strong&gt;arrays&lt;/strong&gt;, or &lt;strong&gt;single&lt;/strong&gt; values (see &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt;). Values are extracted from the leftmost column of the SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Int]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When database may contain NULL:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Optional&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Optional&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Int?]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;fetchOne&lt;/code&gt; returns an optional value which is nil in two cases: either the SELECT statement yielded no row, or one row with a NULL value.&lt;/p&gt;
&lt;p&gt;There are many supported value types (Bool, Int, String, Date, Swift enums, etc.). See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; urls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; URL.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [URL]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-values" class="anchor" aria-hidden="true" href="#values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Values&lt;/h2&gt;
&lt;p&gt;GRDB ships with built-in support for the following value types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Swift Standard Library&lt;/strong&gt;: Bool, Double, Float, all signed and unsigned integer types, String, &lt;a href="#swift-enums"&gt;Swift enums&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Foundation&lt;/strong&gt;: &lt;a href="#data-and-memory-savings"&gt;Data&lt;/a&gt;, &lt;a href="#date-and-datecomponents"&gt;Date&lt;/a&gt;, &lt;a href="#date-and-datecomponents"&gt;DateComponents&lt;/a&gt;, NSNull, &lt;a href="#nsnumber-and-nsdecimalnumber"&gt;NSNumber&lt;/a&gt;, NSString, URL, &lt;a href="#uuid"&gt;UUID&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CoreGraphics&lt;/strong&gt;: CGFloat.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;&lt;/strong&gt;, the type which gives information about the raw value stored in the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Full-Text Patterns&lt;/strong&gt;: &lt;a href="Documentation/FullTextSearch.md#fts3pattern"&gt;FTS3Pattern&lt;/a&gt; and &lt;a href="Documentation/FullTextSearch.md#fts5pattern"&gt;FTS5Pattern&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generally speaking, all types that adopt the &lt;a href="#custom-value-types"&gt;DatabaseValueConvertible&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Values can be used as &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/StatementArguments.html" rel="nofollow"&gt;statement arguments&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; verified&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO link (url, verified) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [url, verified])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Values can be &lt;a href="#column-values"&gt;extracted from rows&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; verified&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;verified&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Values can be &lt;a href="#value-queries"&gt;directly fetched&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; urls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; URL.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [URL]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use values in &lt;a href="#records"&gt;Records&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Link&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isVerified&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        url &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        isVerified &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;verified&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use values in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; link &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Link.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; url).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-data-and-memory-savings" class="anchor" aria-hidden="true" href="#data-and-memory-savings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data (and Memory Savings)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt; suits the BLOB SQLite columns. It can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT data, ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; data&lt;span class="pl-k"&gt;:&lt;/span&gt; Data &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At each step of the request iteration, the &lt;code&gt;row[]&lt;/code&gt; subscript creates &lt;em&gt;two copies&lt;/em&gt; of the database bytes: one fetched by SQLite, and another, stored in the Swift Data value.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You have the opportunity to save memory&lt;/strong&gt; by not copying the data fetched by SQLite:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; row.&lt;span class="pl-c1"&gt;dataNoCopy&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Data?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The non-copied data does not live longer than the iteration step: make sure that you do not use it past this point.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-date-and-datecomponents" class="anchor" aria-hidden="true" href="#date-and-datecomponents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date and DateComponents&lt;/h3&gt;
&lt;p&gt;&lt;a href="#date"&gt;&lt;strong&gt;Date&lt;/strong&gt;&lt;/a&gt; and &lt;a href="#datecomponents"&gt;&lt;strong&gt;DateComponents&lt;/strong&gt;&lt;/a&gt; can be stored and fetched from the database.&lt;/p&gt;
&lt;p&gt;Here is how GRDB supports the various &lt;a href="https://www.sqlite.org/lang_datefunc.html" rel="nofollow"&gt;date formats&lt;/a&gt; supported by SQLite:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;SQLite format&lt;/th&gt;
&lt;th align="center"&gt;Date&lt;/th&gt;
&lt;th align="center"&gt;DateComponents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;/td&gt;
&lt;td align="center"&gt;Read ¬π&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD HH:MM&lt;/td&gt;
&lt;td align="center"&gt;Read ¬π&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD HH:MM:SS&lt;/td&gt;
&lt;td align="center"&gt;Read ¬π&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD HH:MM:SS.SSS&lt;/td&gt;
&lt;td align="center"&gt;Read/Write ¬π&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;strong&gt;T&lt;/strong&gt;HH:MM&lt;/td&gt;
&lt;td align="center"&gt;Read ¬π&lt;/td&gt;
&lt;td align="center"&gt;Read&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;strong&gt;T&lt;/strong&gt;HH:MM:SS&lt;/td&gt;
&lt;td align="center"&gt;Read ¬π&lt;/td&gt;
&lt;td align="center"&gt;Read&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;strong&gt;T&lt;/strong&gt;HH:MM:SS.SSS&lt;/td&gt;
&lt;td align="center"&gt;Read ¬π&lt;/td&gt;
&lt;td align="center"&gt;Read&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;HH:MM&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;HH:MM:SS&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;HH:MM:SS.SSS&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Timestamps since unix epoch&lt;/td&gt;
&lt;td align="center"&gt;Read ¬≤&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;now&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;¬π Dates are stored and read in the UTC time zone. Missing components are assumed to be zero.&lt;/p&gt;
&lt;p&gt;¬≤ GRDB 2+ interprets numerical values as timestamps that fuel &lt;code&gt;Date(timeIntervalSince1970:)&lt;/code&gt;. Previous GRDB versions used to interpret numbers as &lt;a href="https://en.wikipedia.org/wiki/Julian_day" rel="nofollow"&gt;julian days&lt;/a&gt;. Julian days are still supported, with the &lt;code&gt;Date(julianDay:)&lt;/code&gt; initializer.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-date" class="anchor" aria-hidden="true" href="#date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Date&lt;/strong&gt; can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (creationDate, ...) VALUES (?, ...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;Date&lt;/span&gt;(), &lt;span class="pl-k"&gt;...&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; creationDate&lt;span class="pl-k"&gt;:&lt;/span&gt; Date &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;creationDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dates are stored using the format "YYYY-MM-DD HH:MM:SS.SSS" in the UTC time zone. It is precise to the millisecond.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: this format was chosen because it is the only format that is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Comparable (&lt;code&gt;ORDER BY date&lt;/code&gt; works)&lt;/li&gt;
&lt;li&gt;Comparable with the SQLite keyword CURRENT_TIMESTAMP (&lt;code&gt;WHERE date &amp;gt; CURRENT_TIMESTAMP&lt;/code&gt; works)&lt;/li&gt;
&lt;li&gt;Able to feed &lt;a href="https://www.sqlite.org/lang_datefunc.html" rel="nofollow"&gt;SQLite date &amp;amp; time functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Precise enough&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;When the default format does not fit your needs, customize date conversions. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (creationDate, ...) VALUES (?, ...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;Date&lt;/span&gt;().&lt;span class="pl-smi"&gt;timeIntervalSinceReferenceDate&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; creationDate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;timeIntervalSinceReferenceDate&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;creationDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more date customization options.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-datecomponents" class="anchor" aria-hidden="true" href="#datecomponents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DateComponents&lt;/h4&gt;
&lt;p&gt;DateComponents is indirectly supported, through the &lt;strong&gt;DatabaseDateComponents&lt;/strong&gt; helper type.&lt;/p&gt;
&lt;p&gt;DatabaseDateComponents reads date components from all &lt;a href="https://www.sqlite.org/lang_datefunc.html" rel="nofollow"&gt;date formats supported by SQLite&lt;/a&gt;, and stores them in the format of your choice, from HH:MM to YYYY-MM-DD HH:MM:SS.SSS.&lt;/p&gt;
&lt;p&gt;DatabaseDateComponents can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; components &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateComponents&lt;/span&gt;()
components.&lt;span class="pl-smi"&gt;year&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1973&lt;/span&gt;
components.&lt;span class="pl-smi"&gt;month&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;9&lt;/span&gt;
components.&lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Store "1973-09-18"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbComponents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseDateComponents&lt;/span&gt;(components, &lt;span class="pl-c1"&gt;format&lt;/span&gt;: .&lt;span class="pl-smi"&gt;YMD&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (birthDate, ...) VALUES (?, ...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [dbComponents, &lt;span class="pl-k"&gt;...&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read "1973-09-18"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT birthDate ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbComponents&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseDateComponents &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;birthDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
dbComponents.&lt;span class="pl-smi"&gt;format&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; .YMD (the actual format found in the database)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbComponents.&lt;span class="pl-smi"&gt;dateComponents&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DateComponents&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-nsnumber-and-nsdecimalnumber" class="anchor" aria-hidden="true" href="#nsnumber-and-nsdecimalnumber"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NSNumber and NSDecimalNumber&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NSNumber&lt;/strong&gt; can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;. Floating point NSNumbers are stored as Double. Integer and boolean, as Int64. Integers that don't fit Int64 won't be stored: you'll get a fatal error instead. Be cautious when an NSNumber contains an UInt64, for example.&lt;/p&gt;
&lt;p&gt;NSDecimalNumber deserves a longer discussion:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQLite has no support for decimal numbers.&lt;/strong&gt; Given the table below, SQLite will actually store integers or doubles:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;transfer&lt;/span&gt; (
    amount &lt;span class="pl-k"&gt;DECIMAL&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; will store integer or double, actually&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This means that computations will not be exact:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO transfer (amount) VALUES (0.1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO transfer (amount) VALUES (0.2)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; sum &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; NSDecimalNumber.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT SUM(amount) FROM transfer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Yikes! 0.3000000000000000512&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(sum)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't blame SQLite or GRDB, and instead store your decimal numbers differently.&lt;/p&gt;
&lt;p&gt;A classic technique is to store &lt;em&gt;integers&lt;/em&gt; instead, since SQLite performs exact computations of integers. For example, don't store Euros, but store cents instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Write&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; amount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSDecimalNumber&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; integerAmount &lt;span class="pl-k"&gt;=&lt;/span&gt; amount.&lt;span class="pl-c1"&gt;multiplying&lt;/span&gt;(&lt;span class="pl-c1"&gt;byPowerOf10&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;).&lt;span class="pl-smi"&gt;int64Value&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO transfer (amount) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [integerAmount])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; integerAmount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT SUM(amount) FROM transfer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; amount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSDecimalNumber&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: integerAmount).&lt;span class="pl-c1"&gt;multiplying&lt;/span&gt;(&lt;span class="pl-c1"&gt;byPowerOf10&lt;/span&gt;: &lt;span class="pl-c1"&gt;-2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0.10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-uuid" class="anchor" aria-hidden="true" href="#uuid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UUID&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;UUID&lt;/strong&gt; can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;GRDB stores uuids as 16-bytes data blobs, and decodes them from both 16-bytes data blobs and strings such as "E621E1F8-C36C-495A-93FC-0C247A3E6E5F".&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-enums" class="anchor" aria-hidden="true" href="#swift-enums"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Enums&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Swift enums&lt;/strong&gt; and generally all types that adopt the &lt;a href="https://developer.apple.com/library/tvos/documentation/Swift/Reference/Swift_RawRepresentable_Protocol/index.html" rel="nofollow"&gt;RawRepresentable&lt;/a&gt; protocol can be stored and fetched from the database just like their raw &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Color&lt;/span&gt; : &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;red&lt;/span&gt;, &lt;span class="pl-c1"&gt;white&lt;/span&gt;, &lt;span class="pl-c1"&gt;rose&lt;/span&gt;
}

&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Grape&lt;/span&gt; : &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;chardonnay&lt;/span&gt;, &lt;span class="pl-c1"&gt;merlot&lt;/span&gt;, &lt;span class="pl-c1"&gt;riesling&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Declare empty DatabaseValueConvertible adoption&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Color&lt;/span&gt; : &lt;span class="pl-e"&gt;DatabaseValueConvertible &lt;/span&gt;{ }
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Grape&lt;/span&gt; : &lt;span class="pl-e"&gt;DatabaseValueConvertible &lt;/span&gt;{ }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Store&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO wine (grape, color) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [Grape.&lt;span class="pl-smi"&gt;merlot&lt;/span&gt;, Color.&lt;span class="pl-smi"&gt;red&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; grape&lt;span class="pl-k"&gt;:&lt;/span&gt; Grape &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;grape&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When a database value does not match any enum case&lt;/strong&gt;, you get a fatal error. This fatal error can be avoided with the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'syrah'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;

row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "syrah"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Grape&lt;span class="pl-k"&gt;?&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "syrah" to Grape.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Grape   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "syrah" to Grape.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; grape &lt;span class="pl-k"&gt;=&lt;/span&gt; Grape.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid grape&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle unknown grape&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-value-types" class="anchor" aria-hidden="true" href="#custom-value-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Value Types&lt;/h3&gt;
&lt;p&gt;Conversion to and from the database is based on the &lt;code&gt;DatabaseValueConvertible&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;DatabaseValueConvertible&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a value that can be stored in the database.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a value initialized from dbValue, if possible.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fromDatabaseValue&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;dbValue&lt;/span&gt;: DatabaseValue) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Self&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All types that adopt this protocol can be used like all other &lt;a href="#values"&gt;values&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.)&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;databaseValue&lt;/code&gt; property returns &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;, a type that wraps the five values supported by SQLite: NULL, Int64, Double, String and Data. Since DatabaseValue has no public initializer, use &lt;code&gt;DatabaseValue.null&lt;/code&gt;, or another type that already adopts the protocol: &lt;code&gt;1.databaseValue&lt;/code&gt;, &lt;code&gt;"foo".databaseValue&lt;/code&gt;, etc. Conversion to DatabaseValue &lt;em&gt;must not&lt;/em&gt; fail.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fromDatabaseValue()&lt;/code&gt; factory method returns an instance of your custom type if the database value contains a suitable value. If the database value does not contain a suitable value, such as "foo" for Date, &lt;code&gt;fromDatabaseValue&lt;/code&gt; &lt;em&gt;must&lt;/em&gt; return nil (GRDB will interpret this nil result as a conversion error, and react accordingly).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-transactions-and-savepoints" class="anchor" aria-hidden="true" href="#transactions-and-savepoints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transactions and Savepoints&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transactions-and-safety"&gt;Transactions and Safety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#explicit-transactions"&gt;Explicit Transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#savepoints"&gt;Savepoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transaction-kinds"&gt;Transaction Kinds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-transactions-and-safety" class="anchor" aria-hidden="true" href="#transactions-and-safety"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transactions and Safety&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A transaction&lt;/strong&gt; is a fundamental tool of SQLite that guarantees &lt;a href="https://www.sqlite.org/transactional.html" rel="nofollow"&gt;data consistency&lt;/a&gt; as well as &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;proper isolation&lt;/a&gt; between application threads and database connections.&lt;/p&gt;
&lt;p&gt;GRDB generally opens transactions for you, as a way to enforce its &lt;a href="#concurrency"&gt;concurrency guarantees&lt;/a&gt;, and provide maximal security for both your application data and application logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet you may need to exactly control when transactions take place:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-explicit-transactions" class="anchor" aria-hidden="true" href="#explicit-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Explicit Transactions&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;DatabaseQueue.inDatabase()&lt;/code&gt; and &lt;code&gt;DatabasePool.writeWithoutTransaction()&lt;/code&gt; execute your database statements outside of any transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Writing outside of any transaction is dangerous,&lt;/strong&gt; for two reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In our credit/debit example, you may successfully insert a credit, but fail inserting the debit, and end up with unbalanced accounts (oops).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE DATABASE INTEGRITY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; may succeed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; may fail&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transactions avoid this kind of bug.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#database-pools"&gt;Database pool&lt;/a&gt; concurrent reads can see an inconsistent state of the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Concurrent dbPool.read sees a partial db update here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transactions avoid this kind of bug, too.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To open explicit transactions, use one of the &lt;code&gt;Database.inTransaction&lt;/code&gt;, &lt;code&gt;DatabaseQueue.inTransaction&lt;/code&gt;, or &lt;code&gt;DatabasePool.writeInTransaction&lt;/code&gt; methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeInTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If an error is thrown from the transaction block, the transaction is rollbacked and the error is rethrown by the &lt;code&gt;inTransaction&lt;/code&gt; method. If you return &lt;code&gt;.rollback&lt;/code&gt; instead of &lt;code&gt;.commit&lt;/code&gt;, the transaction is also rollbacked, but no error is thrown.&lt;/p&gt;
&lt;p&gt;You can also perform manual transaction management:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;beginTransaction&lt;/span&gt;()
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;commit&lt;/span&gt;()
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BEGIN TRANSACTION&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ROLLBACK&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transactions can't be left opened unless you set the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/Configuration.html" rel="nofollow"&gt;allowsUnsafeTransactions&lt;/a&gt; configuration flag:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: A transaction has been left opened at the end of a database access&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BEGIN TRANSACTION&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- no commit or rollback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can ask if a transaction is currently opened:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;myCriticalMethod&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;precondition&lt;/span&gt;(db.&lt;span class="pl-smi"&gt;isInsideTransaction&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This method requires a transaction&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet, you have a better option than checking for transactions: critical database sections should use savepoints, described below:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;myCriticalMethod&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Here the database is guaranteed to be inside a transaction.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-savepoints" class="anchor" aria-hidden="true" href="#savepoints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Savepoints&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Statements grouped in a savepoint can be rollbacked without invalidating a whole transaction:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Makes sure both inserts succeed, or none:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Other savepoints, etc...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If an error is thrown from the savepoint block, the savepoint is rollbacked and the error is rethrown by the &lt;code&gt;inSavepoint&lt;/code&gt; method. If you return &lt;code&gt;.rollback&lt;/code&gt; instead of &lt;code&gt;.commit&lt;/code&gt;, the savepoint is also rollbacked, but no error is thrown.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unlike transactions, savepoints can be nested.&lt;/strong&gt; They implicitly open a transaction if no one was opened when the savepoint begins. As such, they behave just like nested transactions. Yet the database changes are only written to disk when the outermost transaction is committed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
        }
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; writes changes to disk&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite savepoints are more than nested transactions, though. For advanced uses, use &lt;a href="https://www.sqlite.org/lang_savepoint.html" rel="nofollow"&gt;SQLite savepoint documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-transaction-kinds" class="anchor" aria-hidden="true" href="#transaction-kinds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transaction Kinds&lt;/h3&gt;
&lt;p&gt;SQLite supports &lt;a href="https://www.sqlite.org/lang_transaction.html" rel="nofollow"&gt;three kinds of transactions&lt;/a&gt;: deferred (the default), immediate, and exclusive.&lt;/p&gt;
&lt;p&gt;The transaction kind can be changed in the database configuration, or for each transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1) Default configuration:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN DEFERED TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN EXCLUSIVE TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;inTransaction&lt;/span&gt;(.&lt;span class="pl-smi"&gt;exclusive&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2) Customized default transaction kind:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;defaultTransactionKind&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;immediate&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN IMMEDIATE TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN EXCLUSIVE TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;inTransaction&lt;/span&gt;(.&lt;span class="pl-smi"&gt;exclusive&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-prepared-statements" class="anchor" aria-hidden="true" href="#prepared-statements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prepared Statements&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Prepared Statements&lt;/strong&gt; let you prepare an SQL query and execute it later, several times if you need, with different arguments.&lt;/p&gt;
&lt;p&gt;There are two kinds of prepared statements: &lt;strong&gt;select statements&lt;/strong&gt;, and &lt;strong&gt;update statements&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; updateSQL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, score) VALUES (:name, :score)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; updateStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeUpdateStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: updateSQL)
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; selectSQL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; selectStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: selectSQL)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; and colon-prefixed keys like &lt;code&gt;:name&lt;/code&gt; in the SQL query are the statement arguments. You set them with arrays or dictionaries (arguments are actually of type &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt;, which happens to adopt the ExpressibleByArrayLiteral and ExpressibleByDictionaryLiteral protocols).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;updateStatement.&lt;span class="pl-smi"&gt;arguments&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;]
selectStatement.&lt;span class="pl-smi"&gt;arguments&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After arguments are set, you can execute the prepared statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; updateStatement.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Select statements can be used wherever a raw SQL query string would fit (see &lt;a href="#fetch-queries"&gt;fetch queries&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(selectStatement)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(selectStatement) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(selectStatement)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can set the arguments at the moment of the statement execution:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; updateStatement.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(selectStatement, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: it is a programmer error to reuse a prepared statement that has failed: GRDB may crash if you do so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See &lt;a href="#row-queries"&gt;row queries&lt;/a&gt;, &lt;a href="#value-queries"&gt;value queries&lt;/a&gt;, and &lt;a href="#records"&gt;Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prepared-statements-cache" class="anchor" aria-hidden="true" href="#prepared-statements-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prepared Statements Cache&lt;/h3&gt;
&lt;p&gt;When the same query will be used several times in the lifetime of your application, you may feel a natural desire to cache prepared statements.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't cache statements yourself.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: This is because you don't have the necessary tools. Statements are tied to specific SQLite connections and dispatch queues which you don't manage yourself, especially when you use &lt;a href="#database-pools"&gt;database pools&lt;/a&gt;. A change in the database schema &lt;a href="https://www.sqlite.org/compile.html#max_schema_retry" rel="nofollow"&gt;may, or may not&lt;/a&gt; invalidate a statement. On systems earlier than OSX 10.10 that don't have the &lt;a href="https://www.sqlite.org/c3ref/close.html" rel="nofollow"&gt;sqlite3_close_v2 function&lt;/a&gt;, SQLite connections won't close properly if statements have been kept alive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Instead, use the &lt;code&gt;cachedUpdateStatement&lt;/code&gt; and &lt;code&gt;cachedSelectStatement&lt;/code&gt; methods. GRDB does all the hard caching and &lt;a href="#memory-management"&gt;memory management&lt;/a&gt; stuff for you:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; updateStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;cachedUpdateStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)
&lt;span class="pl-k"&gt;let&lt;/span&gt; selectStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;cachedSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Should a cached prepared statement throw an error, don't reuse it (it is a programmer error). Instead, reload it from the cache.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-custom-sql-functions-and-aggregates" class="anchor" aria-hidden="true" href="#custom-sql-functions-and-aggregates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom SQL Functions and Aggregates&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SQLite lets you define SQL functions and aggregates.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A custom SQL function or aggregate extends SQLite:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; reverse(name) &lt;span class="pl-k"&gt;FROM&lt;/span&gt; player;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; custom function&lt;/span&gt;
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; maxLength(name) &lt;span class="pl-k"&gt;FROM&lt;/span&gt; player; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; custom aggregate&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#custom-sql-functions"&gt;Custom SQL Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-aggregates"&gt;Custom Aggregates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-custom-sql-functions" class="anchor" aria-hidden="true" href="#custom-sql-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom SQL Functions&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; reverse &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reverse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;argumentCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { (&lt;span class="pl-c1"&gt;values&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Extract string value, if any...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... and return reversed string:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;(string.&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;())
}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: reverse)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or dbPool.add(function: ...)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "oof"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT reverse('foo')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;em&gt;function&lt;/em&gt; argument takes an array of &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;, and returns any valid &lt;a href="#values"&gt;value&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.) The number of database values is guaranteed to be &lt;em&gt;argumentCount&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;SQLite has the opportunity to perform additional optimizations when functions are "pure", which means that their result only depends on their arguments. So make sure to set the &lt;em&gt;pure&lt;/em&gt; argument to true when possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Functions can take a variable number of arguments:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When you don't provide any explicit &lt;em&gt;argumentCount&lt;/em&gt;, the function can take any number of arguments:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; averageOf &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;averageOf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { (&lt;span class="pl-c1"&gt;values&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; doubles &lt;span class="pl-k"&gt;=&lt;/span&gt; values.&lt;span class="pl-smi"&gt;compactMap&lt;/span&gt; { &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; doubles.&lt;span class="pl-c1"&gt;reduce&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-k"&gt;+&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;(doubles.&lt;span class="pl-c1"&gt;count&lt;/span&gt;)
}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: averageOf)

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT averageOf(1, 2, 3)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Functions can throw:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sqrt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqrt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;argumentCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { (&lt;span class="pl-c1"&gt;values&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; double &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; double &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseError&lt;/span&gt;(&lt;span class="pl-c1"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;invalid negative number&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;sqrt&lt;/span&gt;(double)
}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: sqrt)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQLite error 1 with statement `SELECT sqrt(-1)`: invalid negative number&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT sqrt(-1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Use custom functions in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT reverseString("name") FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(reverseString.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(nameColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;GRDB ships with built-in SQL functions that perform unicode-aware string transformations.&lt;/strong&gt; See &lt;a href="#unicode"&gt;Unicode&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-custom-aggregates" class="anchor" aria-hidden="true" href="#custom-aggregates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Aggregates&lt;/h3&gt;
&lt;p&gt;Before registering a custom aggregate, you need to define a type that adopts the &lt;code&gt;DatabaseAggregate&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;DatabaseAggregate&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Initializes an aggregate&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Called at each step of the aggregation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;step&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;dbValues&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;throws&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returns the final result&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;finalize&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseValueConvertible&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;MaxLength&lt;/span&gt; : &lt;span class="pl-e"&gt;DatabaseAggregate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxLength&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;step&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;dbValues&lt;/span&gt;: [DatabaseValue]) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; At each step, extract string value, if any...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValues[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt;
        }
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... and update the result&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; length &lt;span class="pl-k"&gt;=&lt;/span&gt; string.&lt;span class="pl-c1"&gt;count&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; length &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; maxLength {
            maxLength &lt;span class="pl-k"&gt;=&lt;/span&gt; length
        }
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;finalize&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseValueConvertible&lt;span class="pl-k"&gt;?&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; maxLength
    }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; maxLength &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxLength&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;argumentCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;aggregate&lt;/span&gt;: MaxLength.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: maxLength)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or dbPool.add(function: ...)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT maxLength(name) FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;step&lt;/code&gt; method of the aggregate takes an array of &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;. This array contains as many values as the &lt;em&gt;argumentCount&lt;/em&gt; parameter (or any number of values, when &lt;em&gt;argumentCount&lt;/em&gt; is omitted).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;finalize&lt;/code&gt; method of the aggregate returns the final aggregated &lt;a href="#values"&gt;value&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.).&lt;/p&gt;
&lt;p&gt;SQLite has the opportunity to perform additional optimizations when aggregates are "pure", which means that their result only depends on their inputs. So make sure to set the &lt;em&gt;pure&lt;/em&gt; argument to true when possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use custom aggregates in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT maxLength("name") FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(maxLength.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(nameColumn))
&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-database-schema-introspection" class="anchor" aria-hidden="true" href="#database-schema-introspection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Schema Introspection&lt;/h2&gt;
&lt;p&gt;GRDB comes with a set of schema introspection methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if the table exists&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;tableExists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ColumnInfo], the columns in the table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;columns&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; PrimaryKeyInfo&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ForeignKeyInfo], the foreign keys defined on the table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;foreignKeys&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [IndexInfo], the indexes defined on the table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;indexes&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if column(s) is a unique key (primary key or unique index)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;table&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;hasUniqueKey&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if argument is the name of an internal SQLite table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Database.&lt;span class="pl-c1"&gt;isSQLiteInternalTable&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if argument is the name of an internal GRDB table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Database.&lt;span class="pl-c1"&gt;isGRDBInternalTable&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-row-adapters" class="anchor" aria-hidden="true" href="#row-adapters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Row Adapters&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Row adapters let you present database rows in the way expected by the row consumers.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They basically help two incompatible row interfaces to work together. For example, a row consumer expects a column named "consumed", but the produced row has a column named "produced".&lt;/p&gt;
&lt;p&gt;In this case, the &lt;code&gt;ColumnMapping&lt;/code&gt; row adapter comes in handy:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch a 'produced' column, and consume a 'consumed' column:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ColumnMapping&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;consumed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;produced&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Hello' AS produced&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;consumed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Hello"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;produced&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Row adapters are values that adopt the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Protocols/RowAdapter.html" rel="nofollow"&gt;RowAdapter&lt;/a&gt; protocol. You can implement your own custom adapters (&lt;a href="#what-are-experimental-features"&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;üî•&lt;/g-emoji&gt; EXPERIMENTAL&lt;/strong&gt;&lt;/a&gt;), or use one of the four built-in adapters, described below.&lt;/p&gt;
&lt;p&gt;To see how row adapters can be used, see &lt;a href="#joined-queries-support"&gt;Joined Queries Support&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-columnmapping" class="anchor" aria-hidden="true" href="#columnmapping"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ColumnMapping&lt;/h3&gt;
&lt;p&gt;ColumnMapping renames columns. Build one with a dictionary whose keys are adapted column names, and values the column names in the raw row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [newName:"Hello"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ColumnMapping&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;oldName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Hello' AS oldName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-suffixrowadapter" class="anchor" aria-hidden="true" href="#suffixrowadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SuffixRowAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SuffixRowAdapter&lt;/code&gt; hides the first columns in a row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [b:1 c:2]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SuffixRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;fromIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-rangerowadapter" class="anchor" aria-hidden="true" href="#rangerowadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RangeRowAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;RangeRowAdapter&lt;/code&gt; only exposes a range of columns.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-emptyrowadapter" class="anchor" aria-hidden="true" href="#emptyrowadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EmptyRowAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;EmptyRowAdapter&lt;/code&gt; hides all columns.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;EmptyRowAdapter&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row.&lt;span class="pl-c1"&gt;isEmpty&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This limit adapter may turn out useful in some narrow use cases. You'll be happy to find it when you need it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-scopeadapter" class="anchor" aria-hidden="true" href="#scopeadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ScopeAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ScopeAdapter&lt;/code&gt; defines &lt;em&gt;row scopes&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;),
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c, 3 AS d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ScopeAdapter does not change the columns and values of the fetched row. Instead, it defines &lt;em&gt;scopes&lt;/em&gt;, which you access through the &lt;code&gt;Row.scopes&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;row                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0 b:1 c:2 d:3]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0 b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [c:2 d:3]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;missing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scopes can be nested:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;),
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)]),
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;),
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)])
    ])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c, 3 AS d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; leftRow &lt;span class="pl-k"&gt;=&lt;/span&gt; row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;!&lt;/span&gt;
leftRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;leftRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; rightRow &lt;span class="pl-k"&gt;=&lt;/span&gt; row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;!&lt;/span&gt;
rightRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [c:2]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;rightRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [d:3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Any adapter can be extended with scopes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; baseAdapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;base&lt;/span&gt;: baseAdapter, &lt;span class="pl-c1"&gt;scopes&lt;/span&gt;: [
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remainder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;SuffixRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;fromIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;)])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c, 3 AS d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;

row &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0 b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remainder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [c:2 d:3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-raw-sqlite-pointers" class="anchor" aria-hidden="true" href="#raw-sqlite-pointers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Raw SQLite Pointers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;If not all SQLite APIs are exposed in GRDB, you can still use the &lt;a href="https://www.sqlite.org/c3ref/intro.html" rel="nofollow"&gt;SQLite C Interface&lt;/a&gt; and call &lt;a href="https://www.sqlite.org/c3ref/funclist.html" rel="nofollow"&gt;SQLite C functions&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Those functions are embedded right into the &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;GRDBCustom&lt;/a&gt; module. Otherwise, you'll need to import &lt;code&gt;SQLite3&lt;/code&gt;, &lt;code&gt;SQLCipher&lt;/code&gt;, or &lt;code&gt;CSQLite&lt;/code&gt;, depending on the GRDB flavor you are using:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift Package Manager&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;CSQLite&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQLCipher&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLCipher&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; System SQLite&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLite3&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; sqliteVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;cString&lt;/span&gt;: &lt;span class="pl-c1"&gt;sqlite3_libversion&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Raw pointers to database connections and statements are available through the &lt;code&gt;Database.sqliteConnection&lt;/code&gt; and &lt;code&gt;Statement.sqliteStatement&lt;/code&gt; properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The raw pointer to a database connection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; sqliteConnection &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-smi"&gt;sqliteConnection&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The raw pointer to a statement:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; statement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sqliteStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; statement.&lt;span class="pl-smi"&gt;sqliteStatement&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Those pointers are owned by GRDB: don't close connections or finalize statements created by GRDB.&lt;/li&gt;
&lt;li&gt;GRDB opens SQLite connections in the "&lt;a href="https://www.sqlite.org/threadsafe.html" rel="nofollow"&gt;multi-thread mode&lt;/a&gt;", which (oddly) means that &lt;strong&gt;they are not thread-safe&lt;/strong&gt;. Make sure you touch raw databases and statements inside their dedicated dispatch queues.&lt;/li&gt;
&lt;li&gt;Use the raw SQLite C Interface at your own risk. GRDB won't prevent you from shooting yourself in the foot.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-records" class="anchor" aria-hidden="true" href="#records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Records&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;On top of the &lt;a href="#sqlite-api"&gt;SQLite API&lt;/a&gt;, GRDB provides protocols and a class&lt;/strong&gt; that help manipulating database rows as regular objects named "records":&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; place &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
        place.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, you need to open a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;, and &lt;a href="#database-schema"&gt;create database tables&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;To define your custom records, you subclass the ready-made &lt;code&gt;Record&lt;/code&gt; class, or you extend your structs and classes with protocols that come with focused sets of features: fetching methods, persistence methods, record comparison...&lt;/p&gt;
&lt;p&gt;Extending structs with record protocols is more "swifty". Subclassing the Record class is more "classic". You can choose either way. See some &lt;a href="#examples-of-record-definitions"&gt;examples of record definitions&lt;/a&gt;, and the &lt;a href="#list-of-record-methods"&gt;list of record methods&lt;/a&gt; for an overview.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: if you are familiar with Core Data's NSManagedObject or Realm's Object, you may experience a cultural shock: GRDB records are not uniqued, do not auto-update, and do not lazy-load. This is both a purpose, and a consequence of protocol-oriented programming. You should read &lt;a href="https://medium.com/@gwendal.roue/how-to-build-an-ios-application-with-sqlite-and-grdb-swift-d023a06c29b3" rel="nofollow"&gt;How to build an iOS application with SQLite and GRDB.swift&lt;/a&gt; for a general introduction.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: after you have read this chapter, check the &lt;a href="Documentation/GoodPracticesForDesigningRecordTypes.md"&gt;Good Practices for Designing Record Types&lt;/a&gt; Guide.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that uses records.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#inserting-records"&gt;Inserting Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-records"&gt;Fetching Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#updating-records"&gt;Updating Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deleting-records"&gt;Deleting Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#counting-records"&gt;Counting Records&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Protocols and the Record Class&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord Protocol&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#persistence-methods"&gt;Persistence Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizing-the-persistence-methods"&gt;Customizing the Persistence Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-class"&gt;Record Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-customization-options"&gt;Record Customization Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Records in a Glance&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#examples-of-record-definitions"&gt;Examples of Record Definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list-of-record-methods"&gt;List of Record Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-inserting-records" class="anchor" aria-hidden="true" href="#inserting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inserting Records&lt;/h3&gt;
&lt;p&gt;To insert a record in the database, call the &lt;code&gt;insert&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;email&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;üëâ&lt;/g-emoji&gt; &lt;code&gt;insert&lt;/code&gt; is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fetching-records" class="anchor" aria-hidden="true" href="#fetching-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Records&lt;/h3&gt;
&lt;p&gt;To fetch records from the database, call a &lt;a href="#fetching-methods"&gt;fetching method&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; arthur &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db,            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM players WHERE name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; bestPlayers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    
&lt;span class="pl-k"&gt;let&lt;/span&gt; spain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ES&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;üëâ&lt;/g-emoji&gt; Fetching from raw SQL is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;üëâ&lt;/g-emoji&gt; Fetching without SQL, using the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;, is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt both &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; and &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-updating-records" class="anchor" aria-hidden="true" href="#updating-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating Records&lt;/h3&gt;
&lt;p&gt;To update a record in the database, call the &lt;code&gt;update&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) 
    player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is possible to &lt;a href="#record-comparison"&gt;avoid useless updates&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; does not hit the database if score has not changed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) {
        &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For batch updates, execute an &lt;a href="#executing-updates"&gt;SQL query&lt;/a&gt;, or see the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET score = score + 1 WHERE team = 'red'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, scoreColumn &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;üëâ&lt;/g-emoji&gt; update methods are available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deleting-records" class="anchor" aria-hidden="true" href="#deleting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deleting Records&lt;/h3&gt;
&lt;p&gt;To delete a record in the database, call the &lt;code&gt;delete&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also delete by primary key, or any unique index:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For batch deletes, execute an &lt;a href="#executing-updates"&gt;SQL query&lt;/a&gt;, or see the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DELETE player WHERE email IS NULL&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;üëâ&lt;/g-emoji&gt; delete methods are available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-counting-records" class="anchor" aria-hidden="true" href="#counting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Counting Records&lt;/h3&gt;
&lt;p&gt;To count records, call the &lt;code&gt;fetchCount&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)

&lt;span class="pl-k"&gt;let&lt;/span&gt; playerWithEmailCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;üëâ&lt;/g-emoji&gt; &lt;code&gt;fetchCount&lt;/code&gt; is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;p&gt;Details follow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-class"&gt;Record Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-customization-options"&gt;Record Customization Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples-of-record-definitions"&gt;Examples of Record Definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list-of-record-methods"&gt;List of Record Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-record-protocols-overview" class="anchor" aria-hidden="true" href="#record-protocols-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Protocols Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GRDB ships with three record protocols&lt;/strong&gt;. Your own types will adopt one or several of them, according to the abilities you want to extend your types with.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; is able to &lt;strong&gt;decode database rows&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;It is always possible to decode rows without this protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places&lt;span class="pl-k"&gt;:&lt;/span&gt; [Place] &lt;span class="pl-k"&gt;=&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { row &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;id&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;title&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;coordinate&lt;/span&gt;: &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
                &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]))
        )
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But FetchableRecord lets you write code that is easier to read, and more efficient as well, both in terms of performance and memory usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: FetchableRecord can derive its implementation from the standard Decodable protocol. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FetchableRecord can decode database rows, but it is not able to build SQL requests for you. For that, you also need TableRecord:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; is able to &lt;strong&gt;generate SQL queries&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM place ORDER BY title&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a type adopts both TableRecord and FetchableRecord, it can load from those requests:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; is able to &lt;strong&gt;write&lt;/strong&gt;: it can create, update, and delete rows in the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A persistable record can also &lt;a href="#record-comparison"&gt;compare&lt;/a&gt; itself against other records, and avoid useless database updates.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: PersistableRecord can derive its implementation from the standard Encodable protocol. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-fetchablerecord-protocol" class="anchor" aria-hidden="true" href="#fetchablerecord-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FetchableRecord Protocol&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The FetchableRecord protocol grants fetching methods to any type&lt;/strong&gt; that can be built from a database row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Row initializer&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;To use FetchableRecord&lt;/strong&gt;, subclass the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, or adopt it explicitly. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rows also accept column enums:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#column-values"&gt;column values&lt;/a&gt; for more information about the &lt;code&gt;row[]&lt;/code&gt; subscript.&lt;/p&gt;
&lt;p&gt;When your record type adopts the standard Decodable protocol, you don't have to provide the implementation for &lt;code&gt;init(row:)&lt;/code&gt;. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; That's all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FetchableRecord allows adopting types to be fetched from SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Place&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Place]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Place?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for information about the &lt;code&gt;fetchCursor&lt;/code&gt;, &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchOne&lt;/code&gt; methods. See &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt; for more information about the query arguments.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: for performance reasons, the same row argument to &lt;code&gt;init(row:)&lt;/code&gt; is reused during the iteration of a fetch query. If you want to keep the row for later use, make sure to store a copy: &lt;code&gt;self.row = row.copy()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;FetchableRecord.init(row:)&lt;/code&gt; initializer fits the needs of most applications. But some application are more demanding than others. When FetchableRecord does not exactly provide the support you need, have a look at the &lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt; chapter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-tablerecord-protocol" class="anchor" aria-hidden="true" href="#tablerecord-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TableRecord Protocol&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The TableRecord protocol&lt;/strong&gt; generates SQL for you. To use TableRecord, subclass the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, or adopt it explicitly:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;TableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;databaseSelection&lt;/code&gt; type property is optional, and documented in the &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt; chapter.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;databaseTableName&lt;/code&gt; type property is the name of a database table. By default, it is derived from the type name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{ }
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(Place.&lt;span class="pl-smi"&gt;databaseTableName&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "place"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Place: &lt;code&gt;place&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Country: &lt;code&gt;country&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;PostalAddress: &lt;code&gt;postalAddress&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;HTTPRequest: &lt;code&gt;httpRequest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;TOEFL: &lt;code&gt;toefl&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can still provide a custom table name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseTableName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;location&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(Place.&lt;span class="pl-smi"&gt;databaseTableName&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "location"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class must always override their superclass's &lt;code&gt;databaseTableName&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(Place.&lt;span class="pl-smi"&gt;databaseTableName&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "place"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a type adopts both TableRecord and &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;, it can be fetched using the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM place WHERE name = 'Paris'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paris&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TableRecord can also fetch records by primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the table has no explicit primary key, GRDB uses the &lt;a href="#the-implicit-rowid-primary-key"&gt;hidden "rowid" column&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Document?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multiple-column primary keys and unique keys defined by unique indexes, provide a dictionary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Citizenship?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-persistablerecord-protocol" class="anchor" aria-hidden="true" href="#persistablerecord-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PersistableRecord Protocol&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GRDB record types can create, update, and delete rows in the database.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Those abilities are granted by three protocols:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Defines how a record encodes itself into the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Defines the values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Adds persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;MutablePersistableRecord&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;EncodableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Optional method that lets your adopting type store its rowID upon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; successful insertion. Don't call it directly: it is called for you.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Adds immutability&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;PersistableRecord&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Non-mutating version of the optional didInsert(with:for:)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, three protocols instead of one. Here is how you pick one or the other:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;If your type is a class&lt;/strong&gt;, choose &lt;code&gt;PersistableRecord&lt;/code&gt;. On top of that, implement &lt;code&gt;didInsert(with:for:)&lt;/code&gt; if the database table has an auto-incremented primary key.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;If your type is a struct, and the database table has an auto-incremented primary key&lt;/strong&gt;, choose &lt;code&gt;MutablePersistableRecord&lt;/code&gt;, and implement &lt;code&gt;didInsert(with:for:)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Otherwise&lt;/strong&gt;, choose &lt;code&gt;PersistableRecord&lt;/code&gt;, and ignore &lt;code&gt;didInsert(with:for:)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;encode(to:)&lt;/code&gt; method defines which &lt;a href="#values"&gt;values&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.) are assigned to database columns.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;didInsert&lt;/code&gt; method lets the adopting type store its rowID after successful insertion, and is only useful for tables that have an auto-incremented primary key. It is called from a protected dispatch queue, and serialized with all database updates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To use the persistable protocols&lt;/strong&gt;, subclass the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, or adopt one of them explicitly. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paris&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;coordinate&lt;/span&gt;: &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(&lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;48.8534100&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;2.3488000&lt;/span&gt;))

&lt;span class="pl-k"&gt;try&lt;/span&gt; paris.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
paris.&lt;span class="pl-smi"&gt;id&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Persistence containers also accept column enums:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When your record type adopts the standard Encodable protocol, you don't have to provide the implementation for &lt;code&gt;encode(to:)&lt;/code&gt;. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; That's all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Encodable&lt;/span&gt;, &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-persistence-methods" class="anchor" aria-hidden="true" href="#persistence-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistence Methods&lt;/h3&gt;
&lt;p&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt; subclasses and types that adopt &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; are given default implementations for methods that insert, update, and delete:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Instance methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;save&lt;/span&gt;(db)                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT or UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;columns&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maybe UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) { &lt;span class="pl-k"&gt;...&lt;/span&gt; }    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maybe UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maybe UPDATE (Record class only)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(db)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;exists&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Type methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; can throw a &lt;a href="#error-handling"&gt;DatabaseError&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;update&lt;/code&gt; and &lt;code&gt;updateChanges&lt;/code&gt; can also throw a &lt;a href="#persistenceerror"&gt;PersistenceError&lt;/a&gt;, should the update fail because there is no matching row in the database.&lt;/p&gt;
&lt;p&gt;When saving an object that may or may not already exist in the database, prefer the &lt;code&gt;save&lt;/code&gt; method:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;save&lt;/code&gt; makes sure your values are stored in the database.&lt;/p&gt;
&lt;p&gt;It performs an UPDATE if the record has a non-null primary key, and then, if no row was modified, an INSERT. It directly perfoms an INSERT if the record has no primary key, or a null primary key.&lt;/p&gt;
&lt;p&gt;Despite the fact that it may execute two SQL statements, &lt;code&gt;save&lt;/code&gt; behaves as an atomic operation: GRDB won't allow any concurrent thread to sneak in (see &lt;a href="#concurrency"&gt;concurrency&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;delete&lt;/code&gt; returns whether a database row was deleted or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;All primary keys are supported&lt;/strong&gt;, including composite primary keys that span several columns, and the &lt;a href="#the-implicit-rowid-primary-key"&gt;implicit rowid primary key&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-customizing-the-persistence-methods" class="anchor" aria-hidden="true" href="#customizing-the-persistence-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing the Persistence Methods&lt;/h3&gt;
&lt;p&gt;Your custom type may want to perform extra work when the persistence methods are invoked.&lt;/p&gt;
&lt;p&gt;For example, it may want to have its UUID automatically set before inserting. Or it may want to validate its values before saving.&lt;/p&gt;
&lt;p&gt;When you subclass &lt;a href="#record-class"&gt;Record&lt;/a&gt;, you simply have to override the customized method, and call &lt;code&gt;super&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; uuid&lt;span class="pl-k"&gt;:&lt;/span&gt; UUID&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; uuid &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            uuid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UUID&lt;/span&gt;()
        }
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you use the raw &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol, use one of the &lt;em&gt;special methods&lt;/em&gt; &lt;code&gt;performInsert&lt;/code&gt;, &lt;code&gt;performUpdate&lt;/code&gt;, &lt;code&gt;performSave&lt;/code&gt;, &lt;code&gt;performDelete&lt;/code&gt;, or &lt;code&gt;performExists&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Link&lt;/span&gt; : &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;validate&lt;/span&gt;()
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;performInsert&lt;/span&gt;(db)
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;update&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;columns&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&amp;gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;validate&lt;/span&gt;()
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;performUpdate&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;columns&lt;/span&gt;: columns)
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;validate&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; url.&lt;span class="pl-smi"&gt;host&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;ValidationError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url must be absolute.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the special methods &lt;code&gt;performInsert&lt;/code&gt;, &lt;code&gt;performUpdate&lt;/code&gt;, etc. are reserved for your custom implementations. Do not use them elsewhere. Do not provide another implementation for those methods.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: it is recommended that you do not implement your own version of the &lt;code&gt;save&lt;/code&gt; method. Its default implementation forwards the job to &lt;code&gt;update&lt;/code&gt; or &lt;code&gt;insert&lt;/code&gt;: these are the methods that may need customization, not &lt;code&gt;save&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-codable-records" class="anchor" aria-hidden="true" href="#codable-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Codable Records&lt;/h2&gt;
&lt;p&gt;Record types that adopt an archival protocol (&lt;a href="https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types" rel="nofollow"&gt;Codable, Encodable or Decodable&lt;/a&gt;) get free database support just by declaring conformance to the desired &lt;a href="#record-protocols-overview"&gt;record protocols&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Declare a record...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...and there you go:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Codable records encode and decode their properties according to their own implementation of the Encodable and Decodable protocols. Yet databases have specific requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Properties are always coded according to their preferred database representation, when they have one (all &lt;a href="#values"&gt;values&lt;/a&gt; that adopt the &lt;a href="#custom-value-types"&gt;DatabaseValueConvertible&lt;/a&gt; protocol).&lt;/li&gt;
&lt;li&gt;You can customize the encoding and decoding of dates and uuids.&lt;/li&gt;
&lt;li&gt;Complex properties (arrays, dictionaries, nested structs, etc.) are stored as JSON.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information about Codable records, see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#json-columns"&gt;JSON Columns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;Date and UUID Coding Strategies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-userinfo-dictionary"&gt;The userInfo Dictionary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tip-derive-columns-from-coding-keys"&gt;Tip: Derive Columns from Coding Keys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that uses Codable records.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-json-columns" class="anchor" aria-hidden="true" href="#json-columns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Columns&lt;/h3&gt;
&lt;p&gt;When a &lt;a href="#codable-records"&gt;Codable record&lt;/a&gt; contains a property that is not a simple &lt;a href="#values"&gt;value&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.), that value is encoded and decoded as a &lt;strong&gt;JSON string&lt;/strong&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;AchievementColor&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;bronze&lt;/span&gt;, &lt;span class="pl-c1"&gt;silver&lt;/span&gt;, &lt;span class="pl-c1"&gt;gold&lt;/span&gt;
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Achievement&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; AchievementColor
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; achievements&lt;span class="pl-k"&gt;:&lt;/span&gt; [Achievement] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; stored in a JSON column&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO player (name, score, achievements)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; VALUES (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   'Arthur',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   100,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   '[{"color":"gold","name":"Use Codable Records"}]')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; achievement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Achievement&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Use Codable Records&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;gold&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;achievements&lt;/span&gt;: [achievement])
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB uses the standard &lt;a href="https://developer.apple.com/documentation/foundation/jsondecoder" rel="nofollow"&gt;JSONDecoder&lt;/a&gt; and &lt;a href="https://developer.apple.com/documentation/foundation/jsonencoder" rel="nofollow"&gt;JSONEncoder&lt;/a&gt; from Foundation. By default, Data values are handled with the &lt;code&gt;.base64&lt;/code&gt; strategy, Date with the &lt;code&gt;.millisecondsSince1970&lt;/code&gt; strategy, and non conforming floats with the &lt;code&gt;.throw&lt;/code&gt; strategy.&lt;/p&gt;
&lt;p&gt;You can customize the JSON format by implementing those methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseJSONDecoder&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; JSONDecoder
}

&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseJSONEncoder&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; JSONEncoder
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: Make sure you set the JSONEncoder &lt;code&gt;sortedKeys&lt;/code&gt; option, available from iOS 11.0+, macOS 10.13+, tvOS 9.0+ and watchOS 4.0+. This option makes sure that the JSON output is stable. This stability is required for &lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt; to work as expected, and database observation tools such as &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt; to accurately recognize changed records.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-date-and-uuid-coding-strategies" class="anchor" aria-hidden="true" href="#date-and-uuid-coding-strategies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date and UUID Coding Strategies&lt;/h3&gt;
&lt;p&gt;By default, &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; encode and decode their Date and UUID properties as described in the general &lt;a href="#date-and-datecomponents"&gt;Date and DateComponents&lt;/a&gt; and &lt;a href="#uuid"&gt;UUID&lt;/a&gt; chapters.&lt;/p&gt;
&lt;p&gt;To sum up: dates encode themselves in the "YYYY-MM-DD HH:MM:SS.SSS" format, in the UTC time zone, and decode a variety of date formats and timestamps. UUIDs encode themselves as 16-bytes data blobs, and decode both 16-bytes data blobs and strings such as "E621E1F8-C36C-495A-93FC-0C247A3E6E5F".&lt;/p&gt;
&lt;p&gt;Those behaviors can be overridden:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseDateDecodingStrategy&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseDateDecodingStrategy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseDateEncodingStrategy&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseDateEncodingStrategy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseUUIDEncodingStrategy&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseUUIDEncodingStrategy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://groue.github.io/GRDB.swift/docs/4.6/Enums/DatabaseDateDecodingStrategy.html" rel="nofollow"&gt;DatabaseDateDecodingStrategy&lt;/a&gt;, &lt;a href="https://groue.github.io/GRDB.swift/docs/4.6/Enums/DatabaseDateEncodingStrategy.html" rel="nofollow"&gt;DatabaseDateEncodingStrategy&lt;/a&gt;, and &lt;a href="https://groue.github.io/GRDB.swift/docs/4.6/Enums/DatabaseUUIDEncodingStrategy.html" rel="nofollow"&gt;DatabaseUUIDEncodingStrategy&lt;/a&gt; to learn about all available strategies.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: there is no customization of uuid decoding, because UUID can already decode all its encoded variants (16-bytes blobs, and uuid strings).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-the-userinfo-dictionary" class="anchor" aria-hidden="true" href="#the-userinfo-dictionary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The userInfo Dictionary&lt;/h3&gt;
&lt;p&gt;Your &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; can be stored in the database, but they may also have other purposes. In this case, you may need to customize their implementations of &lt;code&gt;Decodable.init(from:)&lt;/code&gt; and &lt;code&gt;Encodable.encode(to:)&lt;/code&gt;, depending on the context.&lt;/p&gt;
&lt;p&gt;The standard way to provide such context is the &lt;code&gt;userInfo&lt;/code&gt; dictionary. Implement those properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseDecodingUserInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; [CodingUserInfoKey&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseEncodingUserInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; [CodingUserInfoKey&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, here is a Player type that customizes its decoding:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A key that holds a decoder's name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; decoderName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CodingUserInfoKey&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;decoderName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;Decodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;decoder&lt;/span&gt;: Decoder) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Print the decoder name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; decoderName &lt;span class="pl-k"&gt;=&lt;/span&gt; decoder.&lt;span class="pl-smi"&gt;userInfo&lt;/span&gt;[decoderName] &lt;span class="pl-k"&gt;as?&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Decoded from &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;decoderName &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unknown decoder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can have a specific decoding from JSON...&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "Decoded from JSON"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; decoder &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONDecoder&lt;/span&gt;()
decoder.&lt;span class="pl-smi"&gt;userInfo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [decoderName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JSON&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; decoder.&lt;span class="pl-c1"&gt;decode&lt;/span&gt;(Player.&lt;span class="pl-k"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: jsonData)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and another one from database rows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseDecodingUserInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; [CodingUserInfoKey&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [decoderName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;database row&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "Decoded from database row"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: make sure the &lt;code&gt;databaseDecodingUserInfo&lt;/code&gt; and &lt;code&gt;databaseEncodingUserInfo&lt;/code&gt; properties are explicitly declared as &lt;code&gt;[CodingUserInfoKey: Any]&lt;/code&gt;. If they are not, the Swift compiler may silently miss the protocol requirement, resulting in sticky empty userInfo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-tip-derive-columns-from-coding-keys" class="anchor" aria-hidden="true" href="#tip-derive-columns-from-coding-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tip: Derive Columns from Coding Keys&lt;/h3&gt;
&lt;p&gt;Codable types are granted with a &lt;a href="https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types" rel="nofollow"&gt;CodingKeys&lt;/a&gt; enum. You can use them to safely define database columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;id&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; score &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;score&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt; and &lt;a href="Documentation/GoodPracticesForDesigningRecordTypes.md"&gt;Good Practices for Designing Record Types&lt;/a&gt; for further information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-record-class" class="anchor" aria-hidden="true" href="#record-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Class&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Record&lt;/strong&gt; is a class that is designed to be subclassed. It inherits its features from the &lt;a href="#record-protocols-overview"&gt;FetchableRecord, TableRecord, and PersistableRecord&lt;/a&gt; protocols. On top of that, Record instances can compare against previous versions of themselves in order to &lt;a href="#record-comparison"&gt;avoid useless updates&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Record subclasses define their custom database relationship by overriding database methods. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;id&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;title&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;isFavorite&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;coordinate&lt;/span&gt;&lt;/span&gt;: CLLocationCoordinate2D) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coordinate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;favorite&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;required&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;favorite&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;row&lt;/span&gt;: row)
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;favorite&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Update record ID after a successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-record-comparison" class="anchor" aria-hidden="true" href="#record-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Comparison&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Records that adopt the &lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt; protocol can compare against other records, or against previous versions of themselves.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This helps avoiding costly UPDATE statements when a record has not been edited.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-updatechanges-methods"&gt;The &lt;code&gt;updateChanges&lt;/code&gt; Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-databaseequals-method"&gt;The &lt;code&gt;databaseEquals&lt;/code&gt; Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-databasechanges-and-hasdatabasechanges-methods"&gt;The &lt;code&gt;databaseChanges&lt;/code&gt; and &lt;code&gt;hasDatabaseChanges&lt;/code&gt; Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-the-updatechanges-methods" class="anchor" aria-hidden="true" href="#the-updatechanges-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;updateChanges&lt;/code&gt; Methods&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;updateChanges&lt;/code&gt; methods perform a database update of the changed columns only (and does nothing if record has no change).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;updateChanges(_:from:)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This method lets you compare two records:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; oldPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; newPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; oldPlayer
    newPlayer.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: oldPlayer) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was modified, and updated in the database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was not modified, and database was not hit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;updateChanges(_:with:)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This method lets you update a record in place:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; modified &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) {
        &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;if&lt;/span&gt; modified {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was modified, and updated in the database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was not modified, and database was not hit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;updateChanges(_:)&lt;/code&gt; (Record class only)&lt;/p&gt;
&lt;p&gt;Instances of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class are able to compare against themselves, and know if they have changes that have not been saved since the last fetch or saving:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record class only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) {
    player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was modified, and updated in the database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was not modified, and database was not hit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-the-databaseequals-method" class="anchor" aria-hidden="true" href="#the-databaseequals-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;databaseEquals&lt;/code&gt; Method&lt;/h3&gt;
&lt;p&gt;This method returns whether two records have the same database representation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; oldPlayer&lt;span class="pl-k"&gt;:&lt;/span&gt; Player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; newPlayer&lt;span class="pl-k"&gt;:&lt;/span&gt; Player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;databaseEquals&lt;/span&gt;(oldPlayer) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;save&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The comparison is performed on the database representation of records. As long as your record type adopts the EncodableRecord protocol, you don't need to care about Equatable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-the-databasechanges-and-hasdatabasechanges-methods" class="anchor" aria-hidden="true" href="#the-databasechanges-and-hasdatabasechanges-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;databaseChanges&lt;/code&gt; and &lt;code&gt;hasDatabaseChanges&lt;/code&gt; Methods&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;databaseChanges(from:)&lt;/code&gt; returns a dictionary of differences between two records:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; oldPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; newPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
&lt;span class="pl-k"&gt;for&lt;/span&gt; (column, oldValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;databaseChanges&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: oldPlayer) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;column&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; was &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;oldValue&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "score was 100"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#record-class"&gt;Record&lt;/a&gt; class is able to compare against itself:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record class only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (column, oldValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; player.&lt;span class="pl-smi"&gt;databaseChanges&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;column&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; was &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;oldValue&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "score was 100"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt; instances also have a &lt;code&gt;hasDatabaseChanges&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record class only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;save&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Record.hasDatabaseChanges&lt;/code&gt; is false after a Record instance has been fetched or saved into the database. Subsequent modifications may set it, or not: &lt;code&gt;hasDatabaseChanges&lt;/code&gt; is based on value comparison. &lt;strong&gt;Setting a property to the same value does not set the changed flag&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;750&lt;/span&gt;)
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;player.&lt;span class="pl-smi"&gt;databaseChanges&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["score": 750]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For an efficient algorithm which synchronizes the content of a database table with a JSON payload, check &lt;a href="Documentation/Playgrounds/JSONSynchronization.playground/Contents.swift"&gt;JSONSynchronization.playground&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-record-customization-options" class="anchor" aria-hidden="true" href="#record-customization-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Customization Options&lt;/h2&gt;
&lt;p&gt;GRDB records come with many default behaviors, that are designed to fit most situations. Many of those defaults can be customized for your specific needs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#customizing-the-persistence-methods"&gt;Customizing the Persistence Methods&lt;/a&gt;: define what happens when you call a persistance method such as &lt;code&gt;player.insert(db)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conflict-resolution"&gt;Conflict Resolution&lt;/a&gt;: Run &lt;code&gt;INSERT OR REPLACE&lt;/code&gt; queries, and generally define what happens when a persistence method violates a unique index.&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-implicit-rowid-primary-key"&gt;The Implicit RowID Primary Key&lt;/a&gt;: all about the special &lt;code&gt;rowid&lt;/code&gt; column.&lt;/li&gt;
&lt;li&gt;&lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt;: define which columns are selected by requests such as &lt;code&gt;Player.fetchAll(db)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt;: the FetchableRecord protocol is not the end of the story.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; have a few extra options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#json-columns"&gt;JSON Columns&lt;/a&gt;: control the format of JSON columns.&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;Date and UUID Coding Strategies&lt;/a&gt;: control the format of Date and UUID properties in your Codable records.&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-userinfo-dictionary"&gt;The userInfo Dictionary&lt;/a&gt;: adapt your Codable implementation for the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-conflict-resolution" class="anchor" aria-hidden="true" href="#conflict-resolution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conflict Resolution&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Insertions and updates can create conflicts&lt;/strong&gt;: for example, a query may attempt to insert a duplicate row that violates a unique index.&lt;/p&gt;
&lt;p&gt;Those conflicts normally end with an error. Yet SQLite let you alter the default behavior, and handle conflicts with specific policies. For example, the &lt;code&gt;INSERT OR REPLACE&lt;/code&gt; statement handles conflicts with the "replace" policy which replaces the conflicting row instead of throwing an error.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://www.sqlite.org/lang_conflict.html" rel="nofollow"&gt;five different policies&lt;/a&gt; are: abort (the default), replace, rollback, fail, and ignore.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQLite let you specify conflict policies at two different places:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In the definition of the database table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE player (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     email TEXT UNIQUE ON CONFLICT REPLACE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;(&lt;span class="pl-c1"&gt;onConflict&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;--&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Despite the unique index on email, both inserts succeed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The second insert replaces the first row:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In each modification query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE player (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     email TEXT UNIQUE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;()
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Again, despite the unique index on email, both inserts succeed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT OR REPLACE INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT OR REPLACE INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you want to handle conflicts at the query level, specify a custom &lt;code&gt;persistenceConflictPolicy&lt;/code&gt; in your type that adopts the PersistableRecord protocol. It will alter the INSERT and UPDATE queries run by the &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;save&lt;/code&gt; &lt;a href="#persistence-methods"&gt;persistence methods&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;MutablePersistableRecord&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The policy that handles SQLite conflicts when records are&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; inserted or updated.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This property is optional: its default value uses the ABORT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; policy for both insertions and updates, so that GRDB generate&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; regular INSERT and UPDATE queries.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; persistenceConflictPolicy&lt;span class="pl-k"&gt;:&lt;/span&gt; PersistenceConflictPolicy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; persistenceConflictPolicy &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PersistenceConflictPolicy&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;insert&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;update&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT OR REPLACE INTO player (...) VALUES (...)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the &lt;code&gt;ignore&lt;/code&gt; policy does not play well at all with the &lt;code&gt;didInsert&lt;/code&gt; method which notifies the rowID of inserted records. Choose your poison:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if you specify the &lt;code&gt;ignore&lt;/code&gt; policy in the database table definition, don't implement the &lt;code&gt;didInsert&lt;/code&gt; method: it will be called with some random id in case of failed insert.&lt;/li&gt;
&lt;li&gt;if you specify the &lt;code&gt;ignore&lt;/code&gt; policy at the query level, the &lt;code&gt;didInsert&lt;/code&gt; method is never called.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;replace&lt;/code&gt; policy may have to delete rows so that inserts and updates can succeed. Those deletions are not reported to &lt;a href="#transactionobserver-protocol"&gt;transaction observers&lt;/a&gt; (this might change in a future release of SQLite).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-the-implicit-rowid-primary-key" class="anchor" aria-hidden="true" href="#the-implicit-rowid-primary-key"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Implicit RowID Primary Key&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;All SQLite tables have a primary key.&lt;/strong&gt; Even when the primary key is not explicit:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No explicit primary key&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;event&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;datetime&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No way to define an explicit primary key&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The implicit primary key is stored in the hidden column &lt;code&gt;rowid&lt;/code&gt;. Hidden means that &lt;code&gt;SELECT *&lt;/code&gt; does not select it, and yet it can be selected and queried: &lt;code&gt;SELECT *, rowid ... WHERE rowid = 1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Some GRDB methods will automatically use this hidden column when a table has no explicit primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM event WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; event &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Event.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM book WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Book.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-exposing-the-rowid-column" class="anchor" aria-hidden="true" href="#exposing-the-rowid-column"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exposing the RowID Column&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;By default, a record type that wraps a table without any explicit primary key doesn't know about the hidden rowid column.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Without primary key, records don't have any identity, and the &lt;a href="#persistence-methods"&gt;persistence method&lt;/a&gt; can behave in undesired fashion: &lt;code&gt;update()&lt;/code&gt; throws errors, &lt;code&gt;save()&lt;/code&gt; always performs insertions and may break constraints, &lt;code&gt;exists()&lt;/code&gt; is always false.&lt;/p&gt;
&lt;p&gt;When SQLite won't let you provide an explicit primary key (as in &lt;a href="Documentation/FullTextSearch.md"&gt;full-text&lt;/a&gt; tables, for example), you may want to make your record type fully aware of the hidden rowid column:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Have the &lt;code&gt;databaseSelection&lt;/code&gt; static property (from the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol) return the hidden rowid column:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Event&lt;/span&gt; : &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;AllColumns&lt;/span&gt;(), Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When you subclass Record, you need an override:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Book&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; [&lt;span class="pl-c1"&gt;AllColums&lt;/span&gt;(), Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB will then select the &lt;code&gt;rowid&lt;/code&gt; column by default:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT *, rowid FROM event&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; events &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Event.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have &lt;code&gt;init(row:)&lt;/code&gt; from the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol consume the "rowid" column:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Event&lt;/span&gt; : &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your fetched records will then know their ids:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; event &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Event.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)&lt;span class="pl-k"&gt;!&lt;/span&gt;
event.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Encode the rowid in &lt;code&gt;encode(to:)&lt;/code&gt;, and keep it in the &lt;code&gt;didInsert(with:for:)&lt;/code&gt; method (both from the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord and MutablePersistableRecord&lt;/a&gt; protocols):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Event&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; message
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; date
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will then be able to track your record ids, update them, or check for their existence:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; event &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Event&lt;/span&gt;(&lt;span class="pl-c1"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;date&lt;/span&gt;: &lt;span class="pl-c1"&gt;Date&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Insertion sets the record id:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; event.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
event.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record can be updated:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;event.&lt;span class="pl-smi"&gt;message&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; event.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record knows if it exists:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;event.&lt;span class="pl-c1"&gt;exists&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-beyond-fetchablerecord" class="anchor" aria-hidden="true" href="#beyond-fetchablerecord"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Beyond FetchableRecord&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Some GRDB users eventually discover that the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol does not fit all situations.&lt;/strong&gt; Use cases that are not well handled by FetchableRecord include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Your application needs polymorphic row decoding: it decodes some type or another, depending on the values contained in a database row.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your application needs to decode rows with a context: each decoded value should be initialized with some extra value that does not come from the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your application needs a record type that supports untrusted databases, and may fail at decoding database rows (throw an error when a row contains invalid values).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since those use cases are not well handled by FetchableRecord, don't try to implement them on top of this protocol: you'll just fight the framework.&lt;/p&gt;
&lt;p&gt;Instead, please have a look at the &lt;a href="Documentation/Playgrounds/CustomizedDecodingOfDatabaseRows.playground/Contents.swift"&gt;CustomizedDecodingOfDatabaseRows&lt;/a&gt; playground. You'll run some sample code, and learn how to escape FetchableRecord when you need. And remember that leaving FetchableRecord will not deprive you of &lt;a href="#requests"&gt;query interface requests&lt;/a&gt; and generally all SQL generation features of the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; and &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocols.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples-of-record-definitions" class="anchor" aria-hidden="true" href="#examples-of-record-definitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples of Record Definitions&lt;/h2&gt;
&lt;p&gt;We will show below how to declare a record type for the following database table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
        t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;isFavorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;boolean&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each one of the three examples below is correct. You will pick one or the other depending on your personal preferences and the requirements of your application:&lt;/p&gt;
&lt;details&gt;
  &lt;summary&gt;Define a Codable struct, and adopt the record protocols you need&lt;/summary&gt;
&lt;p&gt;This is the shortest way to define a record type.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt;, and &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; latitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; longitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: latitude,
                &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: longitude)
        }
        &lt;span class="pl-k"&gt;set&lt;/span&gt; {
            latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
            longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
        }
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL generation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;id&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; title &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;title&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetching methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{ }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;Define a plain struct, and adopt the record protocols you need&lt;/summary&gt;
&lt;p&gt;See the &lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL generation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;isFavorite&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetching methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;Define a plain struct optimized for fetching performance&lt;/summary&gt;
&lt;p&gt;This struct derives is persistence methpds from the standard Encodable protocol (see &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;), but performs optimized row decoding by accessing database columns with numeric indexes.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Encodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; latitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; longitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: latitude,
                &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: longitude)
        }
        &lt;span class="pl-k"&gt;set&lt;/span&gt; {
            latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
            longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
        }
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL generation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;id&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; title &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;title&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;)
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Arrange the selected columns and lock their order&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [
        Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;favorite&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetching methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; For high performance, use numeric indexes that match the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; order of Place.databaseSelection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;3&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;4&lt;/span&gt;])
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;Subclass the &lt;code&gt;Record&lt;/code&gt; class&lt;/summary&gt;
&lt;p&gt;See the &lt;a href="#record-class"&gt;Record class&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;id&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;title&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;isFavorite&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;coordinate&lt;/span&gt;&lt;/span&gt;: CLLocationCoordinate2D) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coordinate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;isFavorite&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;required&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;row&lt;/span&gt;: row)
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-list-of-record-methods" class="anchor" aria-hidden="true" href="#list-of-record-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List of Record Methods&lt;/h2&gt;
&lt;p&gt;This is the list of record methods, along with their required protocols. The &lt;a href="#record-class"&gt;Record&lt;/a&gt; class adopts all these protocols, and adds a few extra methods.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Protocols&lt;/th&gt;
&lt;th align="center"&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Core Methods&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;init(row:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseTableName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseSelection&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#columns-selected-by-a-request"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.persistenceConflictPolicy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#conflict-resolution"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.encode(to:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.didInsert(with:for:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Insert and Update Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.insert(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.save(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.update(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.update(db, columns:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db, from:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#record-comparison"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#record-comparison"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#record-comparison"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.updateAll(db, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).updateAll(db, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Delete Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.delete(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.deleteOne(db, key:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¬π&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.deleteAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.deleteAll(db, keys:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¬π&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).deleteAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Check Record Existence&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.exists(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Convert Record to Dictionary&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseDictionary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Count Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCount(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchCount(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fetch Record &lt;a href="#cursors"&gt;Cursors&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(db, keys:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¬π&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(db, sql: sql)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-3"&gt;¬≥&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(statement)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-4"&gt;‚Å¥&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchCursor(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fetch Record Arrays&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(db, keys:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¬π&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(db, sql: sql)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-3"&gt;¬≥&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(statement)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-4"&gt;‚Å¥&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fetch Individual Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(db, key:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¬π&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(db, sql: sql)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-3"&gt;¬≥&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(statement)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-4"&gt;‚Å¥&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchOne(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseDecodingUserInfo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#the-userinfo-dictionary"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseJSONDecoder(for:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#json-columns"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseDateDecodingStrategy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseEncodingUserInfo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#the-userinfo-dictionary"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseJSONEncoder(for:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#json-columns"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseDateEncodingStrategy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseUUIDEncodingStrategy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Define &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.belongsTo(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasMany(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasOne(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasManyThrough(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasOneThrough(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Building Query Interface &lt;a href="#requests"&gt;Requests&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.request(for:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; &amp;amp; &lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.all()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.none()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.select(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.select(..., as:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.annotated(with:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.matching(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.including(all:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.including(optional:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.including(required:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.joining(optional:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.joining(required:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.order(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.orderByPrimaryKey()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.having(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.limit(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;¬≤&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseEquals(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseChanges(from:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db, from:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.hasDatabaseChanges&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseChanges&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-1"&gt;¬π&lt;/a&gt; All unique keys are supported: primary keys (single-column, composite, &lt;a href="#the-implicit-rowid-primary-key"&gt;implicit RowID&lt;/a&gt;) and unique indexes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)                               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-2"&gt;¬≤&lt;/a&gt; See &lt;a href="#requests"&gt;Fetch Requests&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-3"&gt;¬≥&lt;/a&gt; See &lt;a href="#fetch-queries"&gt;SQL queries&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-4"&gt;‚Å¥&lt;/a&gt; See &lt;a href="#prepared-statements"&gt;Prepared Statements&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; statement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(statement, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;])  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-the-query-interface" class="anchor" aria-hidden="true" href="#the-query-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Query Interface&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;The query interface lets you write pure Swift instead of SQL:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update database schema&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch records&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(originColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(priceColumn)
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Count&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(colorColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; Color.&lt;span class="pl-smi"&gt;red&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(originColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, priceColumn &lt;span class="pl-k"&gt;*=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.75&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Delete&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(corkedColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need to open a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt; before you can query the database.&lt;/p&gt;
&lt;p&gt;Please bear in mind that the query interface can not generate all possible SQL queries. You may also &lt;em&gt;prefer&lt;/em&gt; writing SQL, and this is just OK. From little snippets to full queries, your SQL skills are welcome:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update database schema (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CREATE TABLE wine (...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch records (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine WHERE origin = ? ORDER BY price&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Count (with an SQL snippet)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [Color.&lt;span class="pl-smi"&gt;red&lt;/span&gt;])
        .&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE wine SET price = price * 0.75 WHERE origin = 'Burgundy'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Delete (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DELETE FROM wine WHERE corked&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So don't miss the &lt;a href="#sqlite-api"&gt;SQL API&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the generated SQL may change between GRDB releases, without notice: don't have your application rely on any specific SQL output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#database-schema"&gt;Database Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requests"&gt;Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#expressions"&gt;Expressions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sql-operators"&gt;SQL Operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sql-functions"&gt;SQL Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-from-requests"&gt;Fetching from Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-by-key"&gt;Fetching by Key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-aggregated-values"&gt;Fetching Aggregated Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#delete-requests"&gt;Delete Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#update-requests"&gt;Update Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-requests"&gt;Custom Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;Associations and Joins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-database-schema" class="anchor" aria-hidden="true" href="#database-schema"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Schema&lt;/h2&gt;
&lt;p&gt;Once granted with a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;, you can setup your database schema without writing SQL:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#create-tables"&gt;Create Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#modify-tables"&gt;Modify Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#drop-tables"&gt;Drop Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-indexes"&gt;Create Indexes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-create-tables" class="anchor" aria-hidden="true" href="#create-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Tables&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE place (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   title TEXT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   favorite BOOLEAN NOT NULL DEFAULT 0,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   latitude DOUBLE NOT NULL,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   longitude DOUBLE NOT NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;boolean&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;create(table:)&lt;/code&gt; method covers nearly all SQLite table creation features. For virtual tables, see &lt;a href="Documentation/FullTextSearch.md"&gt;Full-Text Search&lt;/a&gt;, or use raw SQL.&lt;/p&gt;
&lt;p&gt;SQLite itself has many reference documents about table creation: &lt;a href="https://www.sqlite.org/lang_createtable.html" rel="nofollow"&gt;CREATE TABLE&lt;/a&gt;, &lt;a href="https://www.sqlite.org/datatype3.html" rel="nofollow"&gt;Datatypes In SQLite Version 3&lt;/a&gt;, &lt;a href="https://www.sqlite.org/foreignkeys.html" rel="nofollow"&gt;SQLite Foreign Key Support&lt;/a&gt;, &lt;a href="https://www.sqlite.org/lang_conflict.html" rel="nofollow"&gt;ON CONFLICT&lt;/a&gt;, &lt;a href="https://www.sqlite.org/withoutrowid.html" rel="nofollow"&gt;The WITHOUT ROWID Optimization&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configure table creation&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE example ( ... )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TEMPORARY TABLE example IF NOT EXISTS (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;temporary&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;ifNotExists&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: database table names should be singular, and camel-cased. Make them look like Swift identifiers: &lt;code&gt;place&lt;/code&gt;, &lt;code&gt;country&lt;/code&gt;, &lt;code&gt;postalAddress&lt;/code&gt;, 'httpRequest'.&lt;/p&gt;
&lt;p&gt;This will help you using &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt; when you need them. Database table names that follow another naming convention are totally OK, but you will need to perform extra configuration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Add regular columns&lt;/strong&gt; with their name and eventual type (text, integer, double, numeric, boolean, blob, date and datetime) - see &lt;a href="https://www.sqlite.org/datatype3.html" rel="nofollow"&gt;SQLite data types&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE example (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   a,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   name TEXT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   creationDate DATETIME,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;creationDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;datetime&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Define &lt;strong&gt;not null&lt;/strong&gt; columns, and set &lt;strong&gt;default&lt;/strong&gt; values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; email TEXT NOT NULL,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; name TEXT NOT NULL DEFAULT 'Anonymous',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use an individual column as &lt;strong&gt;primary&lt;/strong&gt;, &lt;strong&gt;unique&lt;/strong&gt;, or &lt;strong&gt;foreign key&lt;/strong&gt;. When defining a foreign key, the referenced column is the primary key of the referenced table (unless you specify otherwise):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; uuid TEXT PRIMARY KEY,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;uuid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; email TEXT UNIQUE,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; countryCode TEXT REFERENCES country(code) ON DELETE CASCADE,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;references&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;country&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;onDelete&lt;/span&gt;: .&lt;span class="pl-smi"&gt;cascade&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: when you need an integer primary key that automatically generates unique values, it is highly recommended that you use the &lt;code&gt;autoIncrementedPrimaryKey&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The reason for this recommendation is that auto-incremented primary keys prevent the reuse of ids. This prevents your app or &lt;a href="#database-changes-observation"&gt;database observation tools&lt;/a&gt; to think that a row was updated, when it was actually deleted, then replaced. Depending on your application needs, this may be acceptable. But usually it is not.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Create an index&lt;/strong&gt; on the column:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;integer&lt;/span&gt;).&lt;span class="pl-c1"&gt;indexed&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For extra index options, see &lt;a href="#create-indexes"&gt;Create Indexes&lt;/a&gt; below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Perform integrity checks&lt;/strong&gt; on individual columns, and SQLite will only let conforming rows in. In the example below, the &lt;code&gt;$0&lt;/code&gt; closure variable is a column which lets you build any SQL &lt;a href="#expressions"&gt;expression&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; name TEXT CHECK (LENGTH(name) &amp;gt; 0)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; score INTEGER CHECK (score &amp;gt; 0)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-smi"&gt;check&lt;/span&gt; { &lt;span class="pl-c1"&gt;length&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; }
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;integer&lt;/span&gt;).&lt;span class="pl-c1"&gt;check&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score &amp;gt; 0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Other &lt;strong&gt;table constraints&lt;/strong&gt; can involve several columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; PRIMARY KEY (a, b),&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNIQUE (a, b) ON CONFLICT REPLACE,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;uniqueKey&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;onConfict&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FOREIGN KEY (a, b) REFERENCES parents(c, d),&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;foreignKey&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;references&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;parents&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CHECK (a + b &amp;lt; 10),&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;check&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CHECK (a + b &amp;lt; 10)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;check&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a + b &amp;lt; 10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-modify-tables" class="anchor" aria-hidden="true" href="#modify-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify Tables&lt;/h3&gt;
&lt;p&gt;SQLite lets you rename tables, and add columns to existing tables:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ALTER TABLE referer RENAME TO referrer&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;rename&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;referer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;referrer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ALTER TABLE player ADD COLUMN url TEXT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;alter&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;column&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: SQLite restricts the possible table alterations, and may require you to recreate dependent triggers or views. See the documentation of the &lt;a href="https://www.sqlite.org/lang_altertable.html" rel="nofollow"&gt;ALTER TABLE&lt;/a&gt; for details. See &lt;a href="#advanced-database-schema-changes"&gt;Advanced Database Schema Changes&lt;/a&gt; for a way to lift restrictions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-drop-tables" class="anchor" aria-hidden="true" href="#drop-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Drop Tables&lt;/h3&gt;
&lt;p&gt;Drop tables with the &lt;code&gt;drop(table:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;drop&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;obsolete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-create-indexes" class="anchor" aria-hidden="true" href="#create-indexes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Indexes&lt;/h3&gt;
&lt;p&gt;Create indexes with the &lt;code&gt;create(index:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE UNIQUE INDEX byEmail ON users(email)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;byEmail&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;on&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;columns&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;unique&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Relevant SQLite documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/lang_createindex.html" rel="nofollow"&gt;CREATE INDEX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/expridx.html" rel="nofollow"&gt;Indexes On Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/partialindex.html" rel="nofollow"&gt;Partial Indexes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requests" class="anchor" aria-hidden="true" href="#requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requests&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The query interface requests&lt;/strong&gt; let you fetch values from the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All requests start from &lt;strong&gt;a type&lt;/strong&gt; that adopts the &lt;code&gt;TableRecord&lt;/code&gt; protocol, such as a &lt;code&gt;Record&lt;/code&gt; subclass (see &lt;a href="#records"&gt;Records&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Declare the table &lt;strong&gt;columns&lt;/strong&gt; that you want to use for filtering, or sorting:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; idColumn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; nameColumn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also declare column enums, if you prefer:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Columns.id and Columns.name can be used just as&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; idColumn and nameColumn declared above.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;name&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now build requests with the following methods: &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;distinct&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;matching&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;having&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;reversed&lt;/code&gt;, &lt;code&gt;limit&lt;/code&gt;, &lt;code&gt;joining&lt;/code&gt;, &lt;code&gt;including&lt;/code&gt;. All those methods return another request, which you can further refine by applying another method: &lt;code&gt;Player.select(...).filter(...).order(...)&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;all()&lt;/code&gt;, &lt;code&gt;none()&lt;/code&gt;: the requests for all rows, or no row.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The hidden &lt;code&gt;rowid&lt;/code&gt; column can be selected as well &lt;a href="#the-implicit-rowid-primary-key"&gt;when you need it&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;select(...)&lt;/code&gt; and &lt;code&gt;select(..., as:)&lt;/code&gt; define the selected columns. See &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;annotated(with: ...)&lt;/code&gt; extends the selection with &lt;a href="Documentation/AssociationsBasics.md#association-aggregates"&gt;association aggregates&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT team.*, COUNT(DISTINCT player.rowid) AS playerCount&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM team&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LEFT JOIN player ON player.teamId = team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GROUP BY team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Team.&lt;span class="pl-c1"&gt;annotated&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: Team.&lt;span class="pl-smi"&gt;players&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;distinct()&lt;/code&gt; performs uniquing.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT DISTINCT name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;).&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;filter(expression)&lt;/code&gt; applies conditions.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;].&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(idColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (name IS NOT NULL) AND (height &amp;gt; 1.75)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; heightColumn &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1.75&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;filter(key:)&lt;/code&gt; and &lt;code&gt;filter(keys:)&lt;/code&gt; apply conditions on primary keys and unique keys:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Country.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Citizenship.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;matching(pattern)&lt;/code&gt; performs &lt;a href="Documentation/FullTextSearch.md"&gt;full-text search&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE document MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the pattern is nil, no row will match.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;group(expression, ...)&lt;/code&gt; groups rows.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT name, MAX(score) FROM player GROUP BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player
    .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
    .&lt;span class="pl-c1"&gt;group&lt;/span&gt;(nameColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;having(expression)&lt;/code&gt; applies conditions on grouped rows.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT team, MAX(score) FROM player GROUP BY team HAVING MIN(score) &amp;gt;= 1000&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player
    .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(teamColumn, &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
    .&lt;span class="pl-c1"&gt;group&lt;/span&gt;(teamColumn)
    .&lt;span class="pl-c1"&gt;having&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn) &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;having(aggregate)&lt;/code&gt; applies conditions on grouped rows, according to an &lt;a href="Documentation/AssociationsBasics.md#association-aggregates"&gt;association aggregate&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT team.*&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM team&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LEFT JOIN player ON player.teamId = team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GROUP BY team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; HAVING COUNT(DISTINCT player.rowid) &amp;gt;= 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Team.&lt;span class="pl-c1"&gt;having&lt;/span&gt;(Team.&lt;span class="pl-smi"&gt;players&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;order(ordering, ...)&lt;/code&gt; sorts.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY score DESC, name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;, nameColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each &lt;code&gt;order&lt;/code&gt; call clears any previous ordering:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;orderByPrimaryKey()&lt;/code&gt; sorts by primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;orderByPrimaryKey&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country ORDER BY code&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Country.&lt;span class="pl-c1"&gt;orderByPrimaryKey&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship ORDER BY citizenId, countryCode&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Citizenship.&lt;span class="pl-c1"&gt;orderByPrimaryKey&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;reversed()&lt;/code&gt; reverses the eventual orderings.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY score ASC, name DESC&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;, nameColumn).&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If no ordering was already specified, this method has no effect:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;().&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;limit(limit, offset: offset)&lt;/code&gt; limits and pages results.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player LIMIT 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player LIMIT 5 OFFSET 10&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;offset&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;joining(...)&lt;/code&gt; and &lt;code&gt;including(...)&lt;/code&gt; fetch and join records through &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT player.*, team.*&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; JOIN team ON team.id = player.teamId&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;including&lt;/span&gt;(&lt;span class="pl-c1"&gt;required&lt;/span&gt;: Player.&lt;span class="pl-smi"&gt;team&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can refine requests by chaining those methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (email IS NOT NULL) ORDER BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn).&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, and &lt;code&gt;limit&lt;/code&gt; methods ignore and replace previously applied selection, orderings, grouping, and limits. On the opposite, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;matching&lt;/code&gt;, and &lt;code&gt;having&lt;/code&gt; methods extend the query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Player                          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WHERE (name IS NOT NULL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;        AND (email IS NOT NULL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; - ignored -&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;()                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; - ignored -&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn)         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ORDER BY score&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;offset&lt;/span&gt;: &lt;span class="pl-c1"&gt;40&lt;/span&gt;)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; - ignored -&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LIMIT 10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Raw SQL snippets are also accepted, with eventual &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/StatementArguments.html" rel="nofollow"&gt;arguments&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT DATE(creationDate), COUNT(*) FROM player WHERE name = 'Arthur' GROUP BY date(creationDate)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player
    .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DATE(creationDate), COUNT(*)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    .&lt;span class="pl-c1"&gt;group&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DATE(creationDate)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-columns-selected-by-a-request" class="anchor" aria-hidden="true" href="#columns-selected-by-a-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Columns Selected by a Request&lt;/h3&gt;
&lt;p&gt;By default, query interface requests select all columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;The selection can be changed for each individual requests, or for all requests built from a given type.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;select(...)&lt;/code&gt; and &lt;code&gt;select(..., as:)&lt;/code&gt; methods change the selection of a single request (see &lt;a href="#fetching-from-requests"&gt;Fetching from Requests&lt;/a&gt; for detailed information):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default selection for a record type is controlled by the &lt;code&gt;databaseSelection&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;RestrictedPlayer&lt;/span&gt; : &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseTableName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;ExtendedPlayer&lt;/span&gt; : &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseTableName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;AllColumns&lt;/span&gt;(), Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; RestrictedPlayer.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT *, rowid FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; ExtendedPlayer.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: make sure the &lt;code&gt;databaseSelection&lt;/code&gt; property is explicitly declared as &lt;code&gt;[SQLSelectable]&lt;/code&gt;. If it is not, the Swift compiler may silently miss the protocol requirement, resulting in sticky &lt;code&gt;SELECT *&lt;/code&gt; requests. To verify your setup, see the &lt;a href="#how-do-i-print-a-request-as-sql"&gt;How do I print a request as SQL?&lt;/a&gt; FAQ.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-expressions" class="anchor" aria-hidden="true" href="#expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expressions&lt;/h2&gt;
&lt;p&gt;Feed &lt;a href="#requests"&gt;requests&lt;/a&gt; with SQL expressions built from your Swift code:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sql-operators" class="anchor" aria-hidden="true" href="#sql-operators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Operators&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;IS NOT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Comparison operators are based on the Swift operators &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;!==&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (name = 'Arthur')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (name IS NULL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (score IS 1000)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(scoreColumn &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM rectangle WHERE width &amp;lt; height&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Rectangle.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(widthColumn &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; heightColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: SQLite string comparison, by default, is case-sensitive and not Unicode-aware. See &lt;a href="#string-comparison"&gt;string comparison&lt;/a&gt; if you need more control.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;SQLite arithmetic operators are derived from their Swift equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT ((temperature * 1.8) + 32) AS farenheit FROM planet&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Planet.&lt;span class="pl-c1"&gt;select&lt;/span&gt;((temperatureColumn &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1.8&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;).&lt;span class="pl-c1"&gt;forKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;farenheit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: an expression like &lt;code&gt;nameColumn + "rrr"&lt;/code&gt; will be interpreted by SQLite as a numerical addition (with funny results), not as a string concatenation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;AND&lt;/code&gt;, &lt;code&gt;OR&lt;/code&gt;, &lt;code&gt;NOT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The SQL logical operators are derived from the Swift &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE ((NOT verified) OR (score &amp;lt; 1000))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;!&lt;/span&gt;verifiedColumn &lt;span class="pl-k"&gt;||&lt;/span&gt; scoreColumn &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to join a sequence of expressions with &lt;code&gt;AND&lt;/code&gt; or &lt;code&gt;OR&lt;/code&gt; operators, use &lt;code&gt;joined(operator:)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (verified AND (score &amp;gt;= 1000) AND (name IS NOT NULL))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; conditions &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    verifiedColumn,
    scoreColumn &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;,
    nameColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;]
Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(conditions.&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;and&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the sequence is empty, &lt;code&gt;joined(operator: .and)&lt;/code&gt; returns true, and &lt;code&gt;joined(operator: .or)&lt;/code&gt; returns false:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([].&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;and&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([].&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;or&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BETWEEN&lt;/code&gt;, &lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;NOT IN&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To check inclusion in a Swift sequence (array, set, range‚Ä¶), call the &lt;code&gt;contains&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;].&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(idColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id NOT IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;!&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;].&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(idColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE score BETWEEN 0 AND 1000&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(scoreColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (score &amp;gt;= 0) AND (score &amp;lt; 1000)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(scoreColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE initial BETWEEN 'A' AND 'N'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;N&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(initialColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (initial &amp;gt;= 'A') AND (initial &amp;lt; 'N')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;N&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(initialColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: SQLite string comparison, by default, is case-sensitive and not Unicode-aware. See &lt;a href="#string-comparison"&gt;string comparison&lt;/a&gt; if you need more control.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LIKE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The SQLite LIKE operator is available as the &lt;code&gt;like&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (email LIKE '%@example.com')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn.&lt;span class="pl-c1"&gt;like&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the SQLite LIKE operator is case-insensitive but not Unicode-aware. For example, the expression &lt;code&gt;'a' LIKE 'A'&lt;/code&gt; is true but &lt;code&gt;'√¶' LIKE '√Ü'&lt;/code&gt; is false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;MATCH&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The full-text MATCH operator is available through &lt;a href="Documentation/FullTextSearch.md#fts3pattern"&gt;FTS3Pattern&lt;/a&gt; (for FTS3 and FTS4 tables) and &lt;a href="Documentation/FullTextSearch.md#fts5pattern"&gt;FTS5Pattern&lt;/a&gt; (for FTS5):&lt;/p&gt;
&lt;p&gt;FTS3 and FTS4:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE document MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE content MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Document.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(contentColumn.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(pattern))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FTS5:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE document MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sql-functions" class="anchor" aria-hidden="true" href="#sql-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Functions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ABS&lt;/code&gt;, &lt;code&gt;AVG&lt;/code&gt;, &lt;code&gt;COUNT&lt;/code&gt;, &lt;code&gt;LENGTH&lt;/code&gt;, &lt;code&gt;MAX&lt;/code&gt;, &lt;code&gt;MIN&lt;/code&gt;, &lt;code&gt;SUM&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Those are based on the &lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;average&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;sum&lt;/code&gt; Swift functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT MIN(score), MAX(score) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;count&lt;/span&gt;(nameColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(DISTINCT name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;count&lt;/span&gt;(&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;: nameColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IFNULL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use the Swift &lt;code&gt;??&lt;/code&gt; operator:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT IFNULL(name, 'Anonymous') FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT IFNULL(name, email) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;??&lt;/span&gt; emailColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LOWER&lt;/code&gt;, &lt;code&gt;UPPER&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The query interface does not give access to those SQLite functions. Nothing against them, but they are not unicode aware.&lt;/p&gt;
&lt;p&gt;Instead, GRDB extends SQLite with SQL functions that call the Swift built-in string functions &lt;code&gt;capitalized&lt;/code&gt;, &lt;code&gt;lowercased&lt;/code&gt;, &lt;code&gt;uppercased&lt;/code&gt;, &lt;code&gt;localizedCapitalized&lt;/code&gt;, &lt;code&gt;localizedLowercased&lt;/code&gt; and &lt;code&gt;localizedUppercased&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn.&lt;span class="pl-c1"&gt;uppercased&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: When &lt;em&gt;comparing&lt;/em&gt; strings, you'd rather use a &lt;a href="#string-comparison"&gt;collation&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Not recommended&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;nameColumn.&lt;span class="pl-c1"&gt;uppercased&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; name.&lt;span class="pl-c1"&gt;uppercased&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Better&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;nameColumn.&lt;span class="pl-c1"&gt;collating&lt;/span&gt;(.&lt;span class="pl-smi"&gt;caseInsensitiveCompare&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; name&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom SQL functions and aggregates&lt;/p&gt;
&lt;p&gt;You can apply your own &lt;a href="#custom-functions-"&gt;custom SQL functions and aggregates&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; f &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT f(name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(f.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(nameColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-fetching-from-requests" class="anchor" aria-hidden="true" href="#fetching-from-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching from Requests&lt;/h2&gt;
&lt;p&gt;Once you have a request, you can fetch the records at the origin of the request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some request based on `Player`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; QueryInterfaceRequest&amp;lt;Player&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch players:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; allPlayers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; arthur &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for information about the &lt;code&gt;fetchCursor&lt;/code&gt;, &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchOne&lt;/code&gt; methods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You sometimes want to fetch other values&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The simplest way is to use the request as an argument to a fetching method of the desired type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch an Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch a Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request)&lt;span class="pl-k"&gt;!&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; minScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also change the request so that it knows the type it has to fetch:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;With &lt;code&gt;asRequest(of:)&lt;/code&gt;, useful when you use &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;BookInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;Decodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; book&lt;span class="pl-k"&gt;:&lt;/span&gt; Book
    &lt;span class="pl-k"&gt;var&lt;/span&gt; author&lt;span class="pl-k"&gt;:&lt;/span&gt; Author
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A request of BookInfo&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Book
    .&lt;span class="pl-c1"&gt;including&lt;/span&gt;(&lt;span class="pl-c1"&gt;required&lt;/span&gt;: Book.&lt;span class="pl-smi"&gt;author&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;asRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;of&lt;/span&gt;: BookInfo.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; bookInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [BookInfo]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With &lt;code&gt;select(..., as:)&lt;/code&gt;, which is handy when you change the selection:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A request of Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-fetching-by-key" class="anchor" aria-hidden="true" href="#fetching-by-key"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching By Key&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Fetching records according to their primary key&lt;/strong&gt; is a very common task. It has a shortcut which accepts any single-column primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the table has no explicit primary key, GRDB uses the &lt;a href="#the-implicit-rowid-primary-key"&gt;hidden "rowid" column&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Document?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multiple-column primary keys and unique keys defined by unique indexes, provide a dictionary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Citizenship?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When you want to build a request and plan to fetch from it later&lt;/strong&gt;, use the &lt;code&gt;filter(key:)&lt;/code&gt; and &lt;code&gt;filter(keys:)&lt;/code&gt; methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; country &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; countries &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; citizenship &lt;span class="pl-k"&gt;=&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Citizenship?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-fetching-aggregated-values" class="anchor" aria-hidden="true" href="#fetching-aggregated-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Aggregated Values&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Requests can count.&lt;/strong&gt; The &lt;code&gt;fetchCount()&lt;/code&gt; method returns the number of rows that would be returned by a fetch request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM player WHERE email IS NOT NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(DISTINCT name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn).&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM (SELECT DISTINCT name, score FROM player)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, scoreColumn).&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Other aggregated values&lt;/strong&gt; can also be selected and fetched (see &lt;a href="#sql-functions"&gt;SQL Functions&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request)&lt;span class="pl-k"&gt;!&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; minScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-delete-requests" class="anchor" aria-hidden="true" href="#delete-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Delete Requests&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Requests can delete records&lt;/strong&gt;, with the &lt;code&gt;deleteAll()&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE team = 'red'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(teamColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player ORDER BY score LIMIT 10&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn)
    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt; Deletion methods are only available for records that adopts the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Deleting records according to their primary key&lt;/strong&gt; is also quite common. It has a shortcut which accepts any single-column primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM country WHERE isoCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the table has no explicit primary key, GRDB uses the &lt;a href="#the-implicit-rowid-primary-key"&gt;hidden "rowid" column&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM document WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multiple-column primary keys and unique keys defined by unique indexes, provide a dictionary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-update-requests" class="anchor" aria-hidden="true" href="#update-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update Requests&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Requests can batch update records&lt;/strong&gt;. The &lt;code&gt;updateAll()&lt;/code&gt; method accepts &lt;em&gt;column assignments&lt;/em&gt; defined with the &lt;code&gt;&amp;lt;-&lt;/code&gt; operator:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE player SET score = 0, isHealthy = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, scoreColumn &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, isHealthyColumn &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE player SET score = 0 WHERE team = 'red'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(teamColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, scoreColumn &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE player SET top = 1 ORDER BY score DESC LIMIT 10&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, topColumn &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Column assignments accept any expression:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE player SET score = score + (bonus * 2)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, scoreColumn &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; scoreColumn &lt;span class="pl-k"&gt;+&lt;/span&gt; bonusColumn &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a convenience, you can also use the &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, &lt;code&gt;*=&lt;/code&gt;, or &lt;code&gt;/=&lt;/code&gt; operators:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE player SET score = score + (bonus * 2)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, scoreColumn &lt;span class="pl-k"&gt;+=&lt;/span&gt; bonusColumn &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Default &lt;a href="#conflict-resolution"&gt;Conflict Resolution&lt;/a&gt; rules apply, and you may also provide a specific one:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE OR IGNORE player SET ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;onConflict&lt;/span&gt;: .&lt;span class="pl-smi"&gt;ignore&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; assignments... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt; The &lt;code&gt;updateAll&lt;/code&gt; method is only available for records that adopts the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-custom-requests" class="anchor" aria-hidden="true" href="#custom-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Requests&lt;/h2&gt;
&lt;p&gt;Until now, we have seen &lt;a href="#requests"&gt;requests&lt;/a&gt; created from any type that adopts the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; QueryInterfaceRequest&amp;lt;Player&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those requests of type &lt;code&gt;QueryInterfaceRequest&lt;/code&gt; can fetch and count:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When the query interface can not generate the SQL you need&lt;/strong&gt;, you can still fallback to &lt;a href="#fetch-queries"&gt;raw SQL&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Custom SQL is always welcome&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But you may prefer to bring some elegance back in, and build custom requests:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No custom SQL in sight&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;customRequest&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetchrequest-protocol"&gt;FetchRequest Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-custom-requests"&gt;Building Custom Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-from-custom-requests"&gt;Fetching From Custom Requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fetchrequest-protocol" class="anchor" aria-hidden="true" href="#fetchrequest-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FetchRequest Protocol&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;FetchRequest&lt;/strong&gt; is the protocol for all requests that run from a single select statement, and know how fetched rows should be interpreted:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchRequest&lt;/span&gt;: &lt;span class="pl-e"&gt;DatabaseRegionConvertible &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The type that tells how fetched rows should be decoded&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;RowDecoder&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a PreparedRequest made of a prepared statement that is ready to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; be executed, and an eventual row adapter.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;makePreparedRequest&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-en"&gt;forSingleResult&lt;/span&gt; &lt;span class="pl-smi"&gt;singleResult&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; PreparedRequest
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The number of rows fetched by the request.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchCount&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the &lt;code&gt;RowDecoder&lt;/code&gt; associated type is &lt;a href="#fetching-rows"&gt;Row&lt;/a&gt;, or a &lt;a href="#value-queries"&gt;value&lt;/a&gt;, or a type that conforms to &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;, the request can fetch: see &lt;a href="#fetching-from-custom-requests"&gt;Fetching From Custom Requests&lt;/a&gt; below.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;makePreparedRequest(_:forSingleResult:)&lt;/code&gt; method accepts a database connection, a &lt;code&gt;singleResult&lt;/code&gt; hint, and returns a "prepared request" made of a &lt;a href="#prepared-statements"&gt;prepared statement&lt;/a&gt; and an optional &lt;a href="#row-adapters"&gt;row adapter&lt;/a&gt;. Conforming types can use the &lt;code&gt;singleResult&lt;/code&gt; hint as an optimization opportunity, and return a statement that fetches at most one row, with a &lt;code&gt;LIMIT&lt;/code&gt; SQL clause, when possible.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fetchCount&lt;/code&gt; method has a default implementation that builds a correct but naive SQL query from the statement returned by &lt;code&gt;prepare&lt;/code&gt;: &lt;code&gt;SELECT COUNT(*) FROM (...)&lt;/code&gt;. Adopting types can refine the counting SQL by customizing their &lt;code&gt;fetchCount&lt;/code&gt; implementation.&lt;/p&gt;
&lt;p&gt;The base &lt;code&gt;DatabaseRegionConvertible&lt;/code&gt; protocol is involved in &lt;a href="#database-changes-observation"&gt;database observation&lt;/a&gt;. For more information, see &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;, &lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;, and &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The FetchRequest protocol is adopted, for example, by &lt;a href="#requests"&gt;query interface requests&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A FetchRequest whose RowDecoder associated type is Player:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-custom-requests" class="anchor" aria-hidden="true" href="#building-custom-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Custom Requests&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;To build custom requests&lt;/strong&gt;, you can use one of the built-in requests, derive requests from other requests, or create your own request type that adopts the &lt;a href="#fetchrequest-protocol"&gt;FetchRequest&lt;/a&gt; protocol.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/SQLRequest.html" rel="nofollow"&gt;SQLRequest&lt;/a&gt; is a fetch request built from raw SQL. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;color&lt;/span&gt;&lt;/span&gt;: Color) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; SQLRequest&amp;lt;Player&amp;gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Player&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE color = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            arguments&lt;span class="pl-k"&gt;:&lt;/span&gt; [color])
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;red&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Swift 5, you can build SQLRequest with &lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;color&lt;/span&gt;&lt;/span&gt;: Color) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; SQLRequest&amp;lt;Player&amp;gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE color = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;color&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;asRequest(of:)&lt;/code&gt; method changes the type fetched by the request. It is useful, for example, when you use &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;BookInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;Decodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; book&lt;span class="pl-k"&gt;:&lt;/span&gt; Book
    &lt;span class="pl-k"&gt;var&lt;/span&gt; author&lt;span class="pl-k"&gt;:&lt;/span&gt; Author
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Book
    .&lt;span class="pl-c1"&gt;including&lt;/span&gt;(&lt;span class="pl-c1"&gt;required&lt;/span&gt;: Book.&lt;span class="pl-smi"&gt;author&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;asRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;of&lt;/span&gt;: BookInfo.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [BookInfo]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;adapted(_:)&lt;/code&gt; method eases the consumption of complex rows with &lt;a href="#row-adapters"&gt;row adapters&lt;/a&gt;. See &lt;a href="#joined-queries-support"&gt;Joined Queries Support&lt;/a&gt; for some sample code that uses this method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/AnyFetchRequest.html" rel="nofollow"&gt;AnyFetchRequest&lt;/a&gt;: a &lt;a href="http://chris.eidhof.nl/post/type-erasers-in-swift/" rel="nofollow"&gt;type-erased&lt;/a&gt; request.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fetching-from-custom-requests" class="anchor" aria-hidden="true" href="#fetching-from-custom-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching From Custom Requests&lt;/h3&gt;
&lt;p&gt;A type adopting &lt;a href="#fetchrequest-protocol"&gt;FetchRequest&lt;/a&gt; knows exactly what it has to do when its RowDecoder associated type can decode database rows (&lt;a href="#fetching-rows"&gt;Row&lt;/a&gt; itself, &lt;a href="#value-queries"&gt;values&lt;/a&gt;, or &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rowRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some FetchRequest that fetches Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A cursor of rows&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; playerRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some FetchRequest that fetches Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; intRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some FetchRequest that fetches Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Player&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE color = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    arguments&lt;span class="pl-k"&gt;:&lt;/span&gt; [color])
&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for information about the &lt;code&gt;fetchCursor&lt;/code&gt;, &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchOne&lt;/code&gt; methods.&lt;/p&gt;
&lt;p&gt;The RowDecoder type associated with the FetchRequest does not have to be Row, DatabaseValueConvertible, or FetchableRecord. See the &lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt; chapter for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-migrations" class="anchor" aria-hidden="true" href="#migrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrations&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Migrations&lt;/strong&gt; are a convenient way to alter your database schema over time in a consistent and easy way.&lt;/p&gt;
&lt;p&gt;Migrations run in order, once and only once. When a user upgrades your application, only non-applied migrations are run.&lt;/p&gt;
&lt;p&gt;Inside each migration, you typically &lt;a href="#database-schema"&gt;define and update your database tables&lt;/a&gt; according to your evolving application needs:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; migrator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseMigrator&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1st migration&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-c1"&gt;registerMigration&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2nd migration&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-c1"&gt;registerMigration&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;alter&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Migrations for future versions will be inserted here:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; // 3rd migration&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; migrator.registerMigration("...") { db in&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Each migration runs in a separate transaction.&lt;/strong&gt; Should one throw an error, its transaction is rollbacked, subsequent migrations do not run, and the error is eventually thrown by &lt;code&gt;migrator.migrate(dbQueue)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The memory of applied migrations is stored in the database itself&lt;/strong&gt; (in a reserved table).&lt;/p&gt;
&lt;p&gt;You migrate the database up to the latest version with the &lt;code&gt;migrate(_:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or migrator.migrate(dbPool)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To migrate a database up to a specific version, use &lt;code&gt;migrate(_:upTo:)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue, &lt;span class="pl-c1"&gt;upTo&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Migrations can only run forward:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue, &lt;span class="pl-c1"&gt;upTo&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue, &lt;span class="pl-c1"&gt;upTo&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: database is already migrated beyond migration "v1"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check if a migration has been applied:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appliedMigrations &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;appliedMigrations&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue)
&lt;span class="pl-k"&gt;if&lt;/span&gt; appliedMigrations.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "v2" migration has been applied&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-the-erasedatabaseonschemachange-option" class="anchor" aria-hidden="true" href="#the-erasedatabaseonschemachange-option"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;eraseDatabaseOnSchemaChange&lt;/code&gt; Option&lt;/h3&gt;
&lt;p&gt;A DatabaseMigrator can automatically wipe out the full database content, and recreate the whole database from scratch, if it detects that a migration has changed its definition:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; migrator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseMigrator&lt;/span&gt;()
migrator.&lt;span class="pl-smi"&gt;eraseDatabaseOnSchemaChange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Beware! This flag can destroy your precious users' data!&lt;/p&gt;
&lt;p&gt;Yet it may be useful in those two situations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;During application development, as you are still designing migrations, and the schema changes often.&lt;/p&gt;
&lt;p&gt;In this case, it is recommended that this flag does not ship in the distributed application:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; migrator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseMigrator&lt;/span&gt;()
#&lt;span class="pl-k"&gt;if&lt;/span&gt; DEBUG
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Speed up development by nuking the database when migrations change&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-smi"&gt;eraseDatabaseOnSchemaChange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
#&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When the database content can easily be recreated, such as a cache for some downloaded data.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &lt;code&gt;eraseDatabaseOnSchemaChange&lt;/code&gt; option triggers a recreation of the database if the migrator detects a &lt;em&gt;schema change&lt;/em&gt;. A schema change is any difference in the &lt;code&gt;sqlite_master&lt;/code&gt; table, which contains the SQL used to create database tables, indexes, triggers, and views.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-database-schema-changes" class="anchor" aria-hidden="true" href="#advanced-database-schema-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Database Schema Changes&lt;/h3&gt;
&lt;p&gt;SQLite does not support many schema changes, and won't let you drop a table column with "ALTER TABLE ... DROP COLUMN ...", for example.&lt;/p&gt;
&lt;p&gt;Yet any kind of schema change is still possible. The SQLite documentation explains in detail how to do so: &lt;a href="https://www.sqlite.org/lang_altertable.html#otheralter" rel="nofollow"&gt;https://www.sqlite.org/lang_altertable.html#otheralter&lt;/a&gt;. This technique requires the temporary disabling of foreign key checks, and is supported by the &lt;code&gt;registerMigrationWithDeferredForeignKeyCheck&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add a NOT NULL constraint on player.name:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-c1"&gt;registerMigrationWithDeferredForeignKeyCheck&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AddNotNullCheckOnName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new_player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
        t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO new_player SELECT * FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;drop&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;rename&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new_player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While your migration code runs with disabled foreign key checks, those are re-enabled and checked at the end of the migration, regardless of eventual errors.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-joined-queries-support" class="anchor" aria-hidden="true" href="#joined-queries-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Joined Queries Support&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GRDB helps consuming joined queries with complex selection.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this chapter, we will focus on the extraction of information from complex rows, such as the ones fetched by the query below:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; How to consume the left, middle, and right parts of those rows?&lt;/span&gt;
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; player.&lt;span class="pl-k"&gt;*&lt;/span&gt;, team.&lt;span class="pl-k"&gt;*&lt;/span&gt;, &lt;span class="pl-c1"&gt;MAX&lt;/span&gt;(&lt;span class="pl-c1"&gt;round&lt;/span&gt;.&lt;span class="pl-c1"&gt;score&lt;/span&gt;) &lt;span class="pl-k"&gt;AS&lt;/span&gt; maxScore
&lt;span class="pl-k"&gt;FROM&lt;/span&gt; player
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; team &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; round &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;GROUP BY&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will not talk about the &lt;em&gt;generation&lt;/em&gt; of joined queries, which is covered in &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So what are we talking about?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is difficult to consume rows fetched from complex joined queries, because they often contain several columns with the same name: &lt;code&gt;id&lt;/code&gt; from table &lt;code&gt;player&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt; from table &lt;code&gt;team&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;When such ambiguity happens, GRDB row accessors always favor the leftmost matching column. This means that &lt;code&gt;row["id"]&lt;/code&gt; would give a player id, whithout any obvious way to access the team id.&lt;/p&gt;
&lt;p&gt;A classical technique to avoid this ambiguity is to give each column a unique name. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; A classical technique&lt;/span&gt;
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; &lt;span class="pl-c1"&gt;player&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; player_id, &lt;span class="pl-c1"&gt;player&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; player_name, &lt;span class="pl-c1"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; team_id, &lt;span class="pl-c1"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; team_name, &lt;span class="pl-c1"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; team_color, &lt;span class="pl-c1"&gt;MAX&lt;/span&gt;(&lt;span class="pl-c1"&gt;round&lt;/span&gt;.&lt;span class="pl-c1"&gt;score&lt;/span&gt;) &lt;span class="pl-k"&gt;AS&lt;/span&gt; maxScore
&lt;span class="pl-k"&gt;FROM&lt;/span&gt; player
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; team &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; round &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;GROUP BY&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This technique works pretty well, but it has three drawbacks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The selection becomes hard to read and understand.&lt;/li&gt;
&lt;li&gt;Such queries are difficult to write by hand.&lt;/li&gt;
&lt;li&gt;The mangled names are a &lt;em&gt;very&lt;/em&gt; bad fit for &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; types that expect specific column names. After all, if the &lt;code&gt;Team&lt;/code&gt; record type can read &lt;code&gt;SELECT * FROM team ...&lt;/code&gt;, it should be able to read &lt;code&gt;SELECT ..., team.*, ...&lt;/code&gt; as well.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We thus need another technique. &lt;strong&gt;Below we'll see how to split rows into slices, and preserve column names.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SELECT player.*, team.*, MAX(round.score) AS maxScore FROM ...&lt;/code&gt; will be splitted into three slices: one that contains player's columns, one that contains team's columns, and a remaining slice that contains remaining column(s). The Player record type will be able to read the first slice, which contains the colums expected by the &lt;code&gt;Player.init(row:)&lt;/code&gt; initializer. In the same way, the Team record type could read the second slice.&lt;/p&gt;
&lt;p&gt;Unlike the name-mangling technique, splitting rows keeps SQL legible, accepts your hand-crafted SQL queries, and plays as nicely as possible with your existing &lt;a href="#records"&gt;record types&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#splitting-rows-an-introduction"&gt;Splitting Rows, an Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splitting-rows-the-record-way"&gt;Splitting Rows, the Record Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splitting-rows-the-request-way"&gt;Splitting Rows, the Request Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splitting-rows-the-codable-way"&gt;Splitting Rows, the Codable Way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-an-introduction" class="anchor" aria-hidden="true" href="#splitting-rows-an-introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, an Introduction&lt;/h3&gt;
&lt;p&gt;Let's first write some introductory code, hoping that this chapter will make you understand how pieces fall together. We'll see &lt;a href="#splitting-rows-the-record-way"&gt;later&lt;/a&gt; how records will help us streamline the initial approach, how to track changes in joined requests, and how we can use the standard Decodable protocol.&lt;/p&gt;
&lt;p&gt;To split rows, we will use &lt;a href="#row-adapters"&gt;row adapters&lt;/a&gt;. Row adapters adapt rows so that row consumers see exactly the columns they want. Among other things, row adapters can define several &lt;em&gt;row scopes&lt;/em&gt; that give access to as many &lt;em&gt;row slices&lt;/em&gt;. Sounds like a perfect match.&lt;/p&gt;
&lt;p&gt;At the very beginning, there is an SQL query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        SELECT player.*, team.*, MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;        FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;        LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;        LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;        GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We need an adapter that extracts player columns, in a slice that has as many columns as there are columns in the player table. That's &lt;a href="#rangerowadapter"&gt;RangeRowAdapter&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT player.*, team.*, ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;        &amp;lt;------&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerWidth &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;columns&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;count&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerAdapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt; playerWidth)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also need an adapter that extracts team columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT player.*, team.*, ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;                  &amp;lt;----&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; teamWidth &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;columns&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;count&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; teamAdapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(playerWidth &lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt; (playerWidth &lt;span class="pl-k"&gt;+&lt;/span&gt; teamWidth))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We merge those two adapters in a single &lt;a href="#scopeadapter"&gt;ScopeAdapter&lt;/a&gt; that will allow us to access both sliced rows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerScope &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; teamScope &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
        playerScope&lt;span class="pl-k"&gt;:&lt;/span&gt; playerAdapter,
        &lt;span class="pl-c1"&gt;teamScope&lt;/span&gt;: teamAdapter])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now we can fetch, and start consuming our rows. You already know &lt;a href="#fetching-rows"&gt;row cursors&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From a fetched row, we can build a player:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player &lt;span class="pl-k"&gt;=&lt;/span&gt; row[playerScope]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the SQL query, the team is joined with the &lt;code&gt;LEFT JOIN&lt;/code&gt; operator. This means that the team may be missing: its slice may contain team values, or it may only contain NULLs. When this happens, we don't want to build a Team record, and we thus load an &lt;em&gt;optional&lt;/em&gt; Team:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[teamScope]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally, we can load the maximum score, assuming that the "maxScore" column is not ambiguous:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;team&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;maxScore&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; In this chapter, we have learned:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to use &lt;code&gt;RangeRowAdapter&lt;/code&gt; to extract a specific table's columns into a &lt;em&gt;row slice&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;how to use &lt;code&gt;ScopeAdapter&lt;/code&gt; to gives access to several row slices through named scopes.&lt;/li&gt;
&lt;li&gt;how to use Row subscripting to extract records from rows, or optional records in order to deal with left joins.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-the-record-way" class="anchor" aria-hidden="true" href="#splitting-rows-the-record-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, the Record Way&lt;/h3&gt;
&lt;p&gt;Our introduction above has introduced important techniques. It uses &lt;a href="#row-adapters"&gt;row adapters&lt;/a&gt; in order to split rows. It uses Row subscripting in order to extract records from row slices.&lt;/p&gt;
&lt;p&gt;But we may want to make it more usable and robust:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It's generally easier to consume records than raw rows.&lt;/li&gt;
&lt;li&gt;Joined records not always need all columns from a table (see &lt;code&gt;TableRecord.databaseSelection&lt;/code&gt; in &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Building row adapters is long and error prone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To address the first bullet, let's define a record that holds our player, optional team, and maximum score. Since it can decode database rows, it adopts the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player
    &lt;span class="pl-k"&gt;var&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; PlayerInfo can decode rows:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Scopes&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; team &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        player &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;]
        team &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;]
        maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's now write the method that fetches PlayerInfo records:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [PlayerInfo] {&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To acknowledge that both Player and Team records may customize their selection of the "player" and "team" columns, we'll write our SQL in a slightly different way:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Let Player and Team customize their selection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, -- instead of player.*&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,   -- instead of team.*&lt;/span&gt;
&lt;span class="pl-s"&gt;                MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;            FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Player.selectionSQL()&lt;/code&gt; will output &lt;code&gt;player.*&lt;/code&gt;, unless Player defines a &lt;a href="#columns-selected-by-a-request"&gt;customized selection&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: you may also use SQL table aliases:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;(&lt;span class="pl-c1"&gt;alias&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;(&lt;span class="pl-c1"&gt;alias&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;        MAX(r.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;    FROM player p&lt;/span&gt;
&lt;span class="pl-s"&gt;    LEFT JOIN team t ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;    LEFT JOIN round r ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;    GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now is the time to build adapters (taking in account the customized selection of both player and team). We use the &lt;code&gt;splittingRowAdapters&lt;/code&gt; global function, which builds row adapters of desired widths:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; adapters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;splittingRowAdapters&lt;/span&gt;(&lt;span class="pl-c1"&gt;columnCounts&lt;/span&gt;: [
            Player.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db),
            Team.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db)])
    
        &lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
            Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;0&lt;/span&gt;],
            Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]])&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;splittingRowAdapters&lt;/code&gt; returns as many adapters as necessary to fully split a row. In the example above, it returns &lt;em&gt;three&lt;/em&gt; adapters: one for player, one for team, and one for the remaining columns.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And finally, we can fetch player infos:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And when your app needs to fetch player infos, it now reads:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; In this chapter, we have learned:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to define a &lt;code&gt;FetchableRecord&lt;/code&gt; record that consumes rows fetched from a joined query.&lt;/li&gt;
&lt;li&gt;how to use &lt;code&gt;selectionSQL&lt;/code&gt; and &lt;code&gt;numberOfSelectedColumns&lt;/code&gt; in order to deal with nested record types that define custom selection.&lt;/li&gt;
&lt;li&gt;how to use &lt;code&gt;splittingRowAdapters&lt;/code&gt; in order to streamline the definition of row slices.&lt;/li&gt;
&lt;li&gt;how to gather all relevant methods and constants in a record type, fully responsible of its relationship with the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-the-request-way" class="anchor" aria-hidden="true" href="#splitting-rows-the-request-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, the Request Way&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;PlayerInfo.fetchAll&lt;/code&gt; method &lt;a href="#splitting-rows-the-record-way"&gt;above&lt;/a&gt; directly fetches records. It's all good, but in order to profit from &lt;a href="#database-changes-observation"&gt;database observation&lt;/a&gt;, you'll need a &lt;a href="#custom-requests"&gt;custom request&lt;/a&gt; that defines a database query.&lt;/p&gt;
&lt;p&gt;It is recommended that you read the previous paragraphs before you dive in this sample code. We start with the same PlayerInfo record as above:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player
    &lt;span class="pl-k"&gt;var&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; PlayerInfo can decode rows:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Scopes&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; team &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        player &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;]
        team &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;]
        maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we write a method that returns a request, and build the fetching method on top of that request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The request for all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;all&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; AdaptedFetchRequest&amp;lt;SQLRequest&amp;lt;PlayerInfo&amp;gt;&amp;gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;            FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;PlayerInfo&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql).&lt;span class="pl-smi"&gt;adapted&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; adapters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;splittingRowAdapters&lt;/span&gt;(&lt;span class="pl-c1"&gt;columnCounts&lt;/span&gt;: [
                Player.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db),
                Team.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db)])
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
                Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;0&lt;/span&gt;],
                Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]])
        }
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetches all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [PlayerInfo] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;all&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is now time to use our request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track player infos with RxRGDB:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PlayerInfo.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()
    .&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue)
    .&lt;span class="pl-c1"&gt;subscribe&lt;/span&gt;(&lt;span class="pl-c1"&gt;onNext&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;playerInfos&lt;/span&gt;: [PlayerInfo]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player infos have changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; In this chapter, we have learned how to define a custom request that can both fetch records from joined queries, and feed database observation tools.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-the-codable-way" class="anchor" aria-hidden="true" href="#splitting-rows-the-codable-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, the Codable Way&lt;/h3&gt;
&lt;p&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; build on top of the standard Decodable protocol in order to decode database rows.&lt;/p&gt;
&lt;p&gt;You can consume complex joined queries with Codable records as well. As a demonstration, we'll rewrite the &lt;a href="#splitting-rows-the-request-way"&gt;above&lt;/a&gt; sample code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
}
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Team&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color
}
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player
    &lt;span class="pl-k"&gt;var&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The request for all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;all&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; AdaptedFetchRequest&amp;lt;SQLRequest&amp;lt;PlayerInfo&amp;gt;&amp;gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;            FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;PlayerInfo&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql).&lt;span class="pl-smi"&gt;adapted&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; adapters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;splittingRowAdapters&lt;/span&gt;(&lt;span class="pl-c1"&gt;columnCounts&lt;/span&gt;: [
                Player.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db),
                Team.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db)])
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
                CodingKeys.&lt;span class="pl-smi"&gt;player&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringValue&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;0&lt;/span&gt;],
                CodingKeys.&lt;span class="pl-smi"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringValue&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]])
        }
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetches all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [PlayerInfo] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;all&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track player infos with RxRGDB:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PlayerInfo.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()
    .&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue)
    .&lt;span class="pl-c1"&gt;subscribe&lt;/span&gt;(&lt;span class="pl-c1"&gt;onNext&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;playerInfos&lt;/span&gt;: [PlayerInfo]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player infos have changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; In this chapter, we have learned how to use the &lt;code&gt;Decodable&lt;/code&gt; protocol and its associated &lt;code&gt;CodingKeys&lt;/code&gt; enum in order to dry up our code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-database-changes-observation" class="anchor" aria-hidden="true" href="#database-changes-observation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Changes Observation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;SQLite notifies its host application of changes performed to the database, as well of transaction commits and rollbacks.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GRDB puts this SQLite feature to some good use, and lets you observe the database in various ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#after-commit-hook"&gt;After Commit Hook&lt;/a&gt;: Handle successful transactions one by one.&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-and-databaseregionobservation"&gt;ValueObservation and DatabaseRegionObservation&lt;/a&gt;: Automated tracking of database requests.&lt;/li&gt;
&lt;li&gt;&lt;a href="#transactionobserver-protocol"&gt;TransactionObserver Protocol&lt;/a&gt;: Low-level database observation.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;: Automated tracking of database changes, with &lt;a href="https://developer.apple.com/documentation/combine" rel="nofollow"&gt;Combine&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;: Automated tracking of database changes, with &lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Database observation requires that a single &lt;a href="#database-queues"&gt;database queue&lt;/a&gt; or &lt;a href="#database-pools"&gt;pool&lt;/a&gt; is kept open for all the duration of the database usage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-after-commit-hook" class="anchor" aria-hidden="true" href="#after-commit-hook"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;After Commit Hook&lt;/h2&gt;
&lt;p&gt;When your application needs to make sure a specific database transaction has been successfully committed before it executes some work, use the &lt;code&gt;Database.afterNextTransactionCommit(_:)&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Its closure argument is called right after database changes have been successfully written to disk:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    db.&lt;span class="pl-smi"&gt;afterNextTransactionCommit&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;success&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "success"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The closure runs in a protected dispatch queue, serialized with all database updates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This "after commit hook" helps synchronizing the database with other resources, such as files, or system sensors.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the example below, a &lt;a href="https://developer.apple.com/documentation/corelocation/cllocationmanager" rel="nofollow"&gt;location manager&lt;/a&gt; starts monitoring a CLRegion if and only if it has successfully been stored in the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Inserts a region in the database, and start monitoring upon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; successful insertion.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;startMonitoring&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;region&lt;/span&gt;&lt;/span&gt;: CLRegion) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Make sure database is inside a transaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Save the region in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start monitoring if and only if the insertion is&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eventually committed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        db.&lt;span class="pl-smi"&gt;afterNextTransactionCommit&lt;/span&gt; { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; locationManager prefers the main queue:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            DispatchQueue.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
                locationManager.&lt;span class="pl-c1"&gt;startMonitoring&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: region)
            }
        }
        
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The method above won't trigger the location manager if the transaction is eventually rollbacked (explicitly, or because of an error), as in the sample code below:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; success&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;startMonitoring&lt;/span&gt;(db, region)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On error, the transaction is rollbacked, the region is not inserted, and&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the location manager is not invoked.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;failableMethod&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-valueobservation-and-databaseregionobservation" class="anchor" aria-hidden="true" href="#valueobservation-and-databaseregionobservation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation and DatabaseRegionObservation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ValueObservation and DatabaseRegionObservation&lt;/strong&gt; are two database observations tools that track changes in database &lt;a href="#requests"&gt;requests&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Let's observe all players!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt; notifies your application with &lt;strong&gt;fresh values&lt;/strong&gt; (this is what most applications need &lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;üëç&lt;/g-emoji&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh players could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;players&lt;/span&gt;: [Player]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; names &lt;span class="pl-k"&gt;=&lt;/span&gt; players.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt; }.&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;separator&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fresh players: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;names&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Fresh players: Arthur, ..."&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt; notifies your application with &lt;strong&gt;database connections&lt;/strong&gt;, right after an impactful database transaction has been committed (reserved for more advanced use cases &lt;g-emoji class="g-emoji" alias="nerd_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f913.png"&gt;ü§ì&lt;/g-emoji&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseRegionObservation&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;: request)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Players have changed.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Players have changed."&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-valueobservation" class="anchor" aria-hidden="true" href="#valueobservation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ValueObservation tracks changes in the results of database &lt;a href="#requests"&gt;requests&lt;/a&gt;, and notifies fresh values whenever the database changes.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Changes are only notified after they have been committed in the database. No insertion, update, or deletion in tracked tables is missed. This includes indirect changes triggered by &lt;a href="https://www.sqlite.org/foreignkeys.html#fk_actions" rel="nofollow"&gt;foreign keys&lt;/a&gt; or &lt;a href="https://www.sqlite.org/lang_createtrigger.html" rel="nofollow"&gt;SQL triggers&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#valueobservation-usage"&gt;ValueObservation Usage&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationtrackingvalue"&gt;ValueObservation.tracking(value:)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationtracking_fetch"&gt;ValueObservation.tracking(_:fetch:)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#observationforcount-observationforall-observationforfirst"&gt;observationForCount, observationForAll, observationForFirst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-transformations"&gt;ValueObservation Transformations&lt;/a&gt;: &lt;a href="#valueobservationmap"&gt;map&lt;/a&gt;, &lt;a href="#valueobservationcompactmap"&gt;compactMap&lt;/a&gt;, ...&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-error-handling"&gt;ValueObservation Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-options"&gt;ValueObservation Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-valueobservationtracking_reducer"&gt;Advanced: ValueObservation.tracking(_:reducer:)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-usage" class="anchor" aria-hidden="true" href="#valueobservation-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Usage&lt;/h3&gt;
&lt;p&gt;Here is a typical UIViewController which observes the database in order to keep its view up-to-date:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{
    &lt;span class="pl-k"&gt;@IBOutlet&lt;/span&gt; &lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; nameLabel&lt;span class="pl-k"&gt;:&lt;/span&gt; UILabel&lt;span class="pl-k"&gt;!&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; observer&lt;span class="pl-k"&gt;:&lt;/span&gt; TransactionObserver&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillAppear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillAppear&lt;/span&gt;(animated)
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define a ValueObservation which tracks a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;)
        }
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start observing the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
            &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
                &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            },
            &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { [&lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;] (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player has been refreshed: update view&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;                &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; }
                &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;nameLabel&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; player&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt;
            })
    }
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillDisappear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillDisappear&lt;/span&gt;(animated)
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Stop observing the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, all values and errors are notified on the main queue. Views can be updated right from the &lt;code&gt;onChange&lt;/code&gt; callback.&lt;/p&gt;
&lt;p&gt;By default, an initial fetch is performed as soon as the observation starts: the view is set up and ready when the &lt;code&gt;viewWillAppear&lt;/code&gt; method returns.&lt;/p&gt;
&lt;p&gt;The observer returned by the &lt;code&gt;start&lt;/code&gt; method is stored in a property of the view controller. This allows the view controller to control the duration of the observation. When the observer is deallocated, the observation stops. Meanwhile, all transactions that modify the observed player are notified, and the &lt;code&gt;nameLabel&lt;/code&gt; is kept up-to-date.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that uses ValueObservation.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;üí°&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: When fetching values is slow, and should never ever block the main queue, opt in for async notifications:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillAppear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillAppear&lt;/span&gt;(animated)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define a ValueObservation which tracks a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;)
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observation is asynchronous&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    observation.&lt;span class="pl-smi"&gt;scheduling&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;async&lt;/span&gt;(&lt;span class="pl-c1"&gt;onQueue&lt;/span&gt;: .&lt;span class="pl-smi"&gt;main&lt;/span&gt;, &lt;span class="pl-c1"&gt;startImmediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start observing the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
        &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        },
        &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { [&lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;] (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player has been refreshed: update view&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; }
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;activityIndicator&lt;/span&gt;.&lt;span class="pl-c1"&gt;stopAnimating&lt;/span&gt;()
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;nameLabel&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; player&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt;
        })

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wait for player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    activityIndicator.&lt;span class="pl-c1"&gt;startAnimating&lt;/span&gt;()
    nameLabel.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#valueobservationscheduling"&gt;ValueObservation.scheduling&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservationtrackingvalue" class="anchor" aria-hidden="true" href="#valueobservationtrackingvalue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.tracking(value:)&lt;/h3&gt;
&lt;p&gt;In order to observe database values, you will generally define a &lt;strong&gt;ValueObservation&lt;/strong&gt; which tracks the value you are interested in, and then start the observation.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track changes in a single player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;)
}

observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fresh player: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;You can observe several requests and several tables if you need&lt;/strong&gt;: all writes that have an impact on the fetched values will trigger the observation, and call the &lt;code&gt;onChange&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It may happen that such an observation notifies identical consecutive values.&lt;/strong&gt; This is because it will fetch a fresh value whenever a change &lt;em&gt;could&lt;/em&gt; happen. For example, the observation for the maximum player score will notify a fresh value everytime a score is changed, inserted, or deleted, even if the maximum score is unchanged:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track changes in the maximum player score&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This observation may notify duplicate values&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)), &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can filter out those duplicates with the &lt;a href="#valueobservationremoveduplicates"&gt;ValueObservation.removeDuplicates&lt;/a&gt; method. It requires the observed value to adopt the Equatable protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)), &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
    }
    .&lt;span class="pl-c1"&gt;removeDuplicates&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will see below other ways to define observations. They all add a little convenience, or optimization.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservationtracking_fetch" class="anchor" aria-hidden="true" href="#valueobservationtracking_fetch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.tracking(_:fetch:)&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;ValueObservation.tracking(_:fetch:)&lt;/code&gt; method is an &lt;strong&gt;optimized&lt;/strong&gt; version of the &lt;a href="#valueobservationtrackingvalue"&gt;&lt;code&gt;ValueObservation.tracking(value:)&lt;/code&gt;&lt;/a&gt; method seen above.&lt;/p&gt;
&lt;p&gt;The returned observation ouputs exactly the same results, but it can perform better when you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, and the fetch is slow. It reduces write contention by fetching fresh values without blocking write accesses. When you use a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt;, no optimization is applied.&lt;/p&gt;
&lt;p&gt;It accepts two arguments:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A list of observed requests.&lt;/li&gt;
&lt;li&gt;A closure that fetches a fresh value whenever one of the observed requests are modified.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Changes that happen outside of the observed requests are ignored, so make sure you fully cover the database region you want to observe. This is the price you pay for the optimization.&lt;/p&gt;
&lt;p&gt;Let's give a practical example, and observe the "Hall of Fame":&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;HallOfFame&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; totalPlayerCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; bestPlayers&lt;span class="pl-k"&gt;:&lt;/span&gt; [Player]
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;HallOfFame&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetch the HallOfFame&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;fetch&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt; db&lt;span class="pl-k"&gt;:&lt;/span&gt; Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; HallOfFame {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; totalPlayerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;let&lt;/span&gt; bestPlayers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player
            .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;HallOfFame&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;totalPlayerCount&lt;/span&gt;: totalPlayerCount,
            &lt;span class="pl-c1"&gt;bestPlayers&lt;/span&gt;: bestPlayers)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to track changes in the Hall of Fame in an optimized way, we see that any change to the &lt;code&gt;player&lt;/code&gt; table can impact the Hall of Fame. We thus track the request for all players, &lt;code&gt;Player.all()&lt;/code&gt;, and fetch a new Hall of Fame whenever players change:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;(Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;(), &lt;span class="pl-c1"&gt;fetch&lt;/span&gt;: { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; HallOfFame.&lt;span class="pl-c1"&gt;fetch&lt;/span&gt;(db)
})&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the initial parameter of &lt;code&gt;ValueObservation.tracking(_:fetch:)&lt;/code&gt; can be fed with requests, and generally speaking, values that adopt the &lt;a href="#the-databaseregionconvertible-protocol"&gt;DatabaseRegionConvertible&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-observationforcount-observationforall-observationforfirst" class="anchor" aria-hidden="true" href="#observationforcount-observationforall-observationforfirst"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;observationForCount, observationForAll, observationForFirst&lt;/h3&gt;
&lt;p&gt;Given a &lt;a href="#requests"&gt;request&lt;/a&gt;, even a &lt;a href="#custom-requests"&gt;custom request&lt;/a&gt;, you can observe its number of results, all results, or the first one:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;request.&lt;span class="pl-c1"&gt;observationForCount&lt;/span&gt;()
request.&lt;span class="pl-c1"&gt;observationForAll&lt;/span&gt;()
request.&lt;span class="pl-c1"&gt;observationForFirst&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those observations are equivalent to the following ones, defined with &lt;a href="#valueobservationtrackingvalue"&gt;&lt;code&gt;ValueObservation.tracking(value:)&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }
ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) }
ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet they are &lt;strong&gt;optimized&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They perform a filtering of consecutive identical values, based on raw database values, so that you are not notified of database changes that do not impact the result of the request.&lt;/li&gt;
&lt;li&gt;They can perform better when you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, and the fetch is slow.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-transformations" class="anchor" aria-hidden="true" href="#valueobservation-transformations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Transformations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#valueobservationmap"&gt;ValueObservation.map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationcompactmap"&gt;ValueObservation.compactMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationremoveduplicates"&gt;ValueObservation.removeDuplicates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationcombine"&gt;ValueObservation.combine(...)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationmap" class="anchor" aria-hidden="true" href="#valueobservationmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.map&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;map&lt;/code&gt; method lets you transform the values notified by a ValueObservation.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observe a player's profile image&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) }
    .&lt;span class="pl-c1"&gt;map&lt;/span&gt; { player &lt;span class="pl-k"&gt;in&lt;/span&gt; player&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;image&lt;/span&gt; }

&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;image&lt;/span&gt;: UIImage&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player picture has changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The transformation closure does not run on the main queue, and is suitable for heavy computations.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationcompactmap" class="anchor" aria-hidden="true" href="#valueobservationcompactmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.compactMap&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;compactMap&lt;/code&gt; method lets you transform and filter the values notified by a ValueObservation. Only non-nil transformed values are notified.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observe a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) }
    .&lt;span class="pl-smi"&gt;compactMap&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt; }
    
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player name: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player.&lt;span class="pl-smi"&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The transformation closure does not run on the main queue, and is suitable for heavy computations.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationremoveduplicates" class="anchor" aria-hidden="true" href="#valueobservationremoveduplicates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.removeDuplicates&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;removeDuplicates&lt;/code&gt; method filters out the consecutive equal values notified by a ValueObservation. The observed values must adopt the standard Equatable protocol.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) }
    .&lt;span class="pl-c1"&gt;removeDuplicates&lt;/span&gt;()

&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the observations returned by the &lt;a href="#observationforcount-observationforall-observationforfirst"&gt;observationForCount, observationForAll, observationForFirst&lt;/a&gt; methods already perform a similar filtering, based on raw database values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationcombine" class="anchor" aria-hidden="true" href="#valueobservationcombine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.combine(...)&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;ValueObservation.combine(...)&lt;/code&gt; method builds a single observation from several:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Two base observations&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCountObservation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; bestPlayersObservation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player
        .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The combined observation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-c1"&gt;combine&lt;/span&gt;(
    playerCountObservation, 
    bestPlayersObservation)
    
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start tracking the hall of fame&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (totalPlayerCount, bestPlayers) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            Best players out of &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;totalPlayerCount&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;:&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;bestPlayers&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;combine&lt;/code&gt; also exists as an instance method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;HallOfFame&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; totalPlayerCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; bestPlayers&lt;span class="pl-k"&gt;:&lt;/span&gt; [Player]
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; playerCountObservation.&lt;span class="pl-c1"&gt;combine&lt;/span&gt;(bestPlayersObservation) {
    &lt;span class="pl-c1"&gt;HallOfFame&lt;/span&gt;(&lt;span class="pl-c1"&gt;totalPlayerCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;$0&lt;/span&gt;, &lt;span class="pl-c1"&gt;bestPlayers&lt;/span&gt;: &lt;span class="pl-c1"&gt;$1&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can combine up to eight observations together. They can feed from as many database tables as needed.&lt;/p&gt;
&lt;p&gt;Combining observations provides the guarantee that notified values are &lt;a href="https://en.wikipedia.org/wiki/Consistency_(database_systems)" rel="nofollow"&gt;&lt;strong&gt;consistent&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: readers who are familiar with Reactive Programming will recognize the &lt;a href="http://reactivex.io/documentation/operators/combinelatest.html" rel="nofollow"&gt;CombineLatest&lt;/a&gt; operator in the ValueObservation &lt;code&gt;combine&lt;/code&gt; method. The reactive operator does not care about data consistency, though: if you use a Reactive layer such as &lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt; or &lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;, make sure you compose observations with &lt;code&gt;ValueObservation.combine&lt;/code&gt;, not with the CombineLatest operator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-error-handling" class="anchor" aria-hidden="true" href="#valueobservation-error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Error Handling&lt;/h3&gt;
&lt;p&gt;When you start an observation, the &lt;code&gt;onError&lt;/code&gt; callback is called whenever fresh values could not be fetched. It is scheduled just like values (see &lt;a href="#valueobservationscheduling"&gt;ValueObservation.scheduling&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An error does not stop the observation. After an error has been received, subsequent transactions may succeed in notifying fresh values. You may witness such temporary errors when the database becomes temporarily unreachable, for example due to &lt;a href="#data-protection"&gt;data protection&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Depending on the way your application wants to deal with such errors, you may want to tighten your control on the scheduling of database accesses with &lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;. See also the reactive companion libraries &lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt; and &lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;, which stop observation whenever a ValueObservation error happens.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;onError&lt;/code&gt; callback can be omitted, but this is &lt;strong&gt;not recommended&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Not recommended: omitting the onError callback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-options" class="anchor" aria-hidden="true" href="#valueobservation-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Options&lt;/h3&gt;
&lt;p&gt;Some behaviors of value observations can be configured:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#valueobservationscheduling"&gt;ValueObservation.scheduling&lt;/a&gt;: Control the dispatching of notified values.&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationrequireswriteaccess"&gt;ValueObservation.requiresWriteAccess&lt;/a&gt;: Allow observations to write in the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationscheduling" class="anchor" aria-hidden="true" href="#valueobservationscheduling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.scheduling&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;scheduling&lt;/code&gt; property lets you control how fresh values are notified:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.mainQueue&lt;/code&gt; (the default): all values are notified on the main queue.&lt;/p&gt;
&lt;p&gt;If the observation starts on the main queue, an initial value is notified right upon subscription, synchronously:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Here "fresh value" is already printed.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the observation does not start on the main queue, an initial value is also notified on the main queue, but asynchronously:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Not on the main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the initial value has been notified, all subsequent values are notified asynchronously:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Eventually prints "fresh value" on the main queue&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.async(onQueue:startImmediately:)&lt;/code&gt;: all values are asychronously notified on the specified queue.&lt;/p&gt;
&lt;p&gt;An initial value is fetched and notified if &lt;code&gt;startImmediately&lt;/code&gt; is true.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
observation.&lt;span class="pl-smi"&gt;scheduling&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;async&lt;/span&gt;(&lt;span class="pl-c1"&gt;onQueue&lt;/span&gt;: .&lt;span class="pl-smi"&gt;main&lt;/span&gt;, &lt;span class="pl-c1"&gt;startImmediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Eventually prints "fresh value"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;unsafe(startImmediately:)&lt;/code&gt;: values are not all notified on the same dispatch queue.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;startImmediately&lt;/code&gt; is true, an initial value is notified right upon subscription, synchronously, on the dispatch queue which starts the observation.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On any queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
observation.&lt;span class="pl-smi"&gt;scheduling&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;unsafe&lt;/span&gt;(&lt;span class="pl-c1"&gt;startImmediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Here "fresh value" is already printed.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the initial value has been notified, all subsequent values are notified on unspecified queues.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: this unsafe mode is intended for third-party libraries that provide their own scheduling engine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationrequireswriteaccess" class="anchor" aria-hidden="true" href="#valueobservationrequireswriteaccess"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.requiresWriteAccess&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;requiresWriteAccess&lt;/code&gt; property is false by default. When true, a ValueObservation has a write access to the database, and its fetches are automatically wrapped in a &lt;a href="#transactions-and-savepoints"&gt;savepoint&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; write access allowed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}
observation.&lt;span class="pl-smi"&gt;requiresWriteAccess&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, don't use this flag unless you really need it. Observations with write access are less efficient because they block all writes for the whole duration of a fetch.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-valueobservationtracking_reducer" class="anchor" aria-hidden="true" href="#advanced-valueobservationtracking_reducer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced: ValueObservation.tracking(_:reducer:)&lt;/h3&gt;
&lt;p&gt;The most low-level way to define a ValueObservation is to create one from an observed database region (see above), and a &lt;strong&gt;reducer&lt;/strong&gt; that adopts the &lt;strong&gt;ValueReducer&lt;/strong&gt; protocol (&lt;a href="#what-are-experimental-features"&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;üî•&lt;/g-emoji&gt; EXPERIMENTAL&lt;/strong&gt;&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;ValueReducer&lt;/span&gt; {
    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;Fetched&lt;/span&gt;
    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetches a database value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Fetched
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a notified value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;value&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;fetched&lt;/span&gt;: Fetched) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;fetch&lt;/code&gt; method is called upon changes in the observed &lt;a href="#databaseregion"&gt;database region&lt;/a&gt;. It runs inside a protected dispatch queue and is guaranteed an immutable view of the last committed state of the database.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; method transforms a fetched value into a notified value. It returns nil if the observer should not be notified. It runs inside a dispatch queue called the "reduce queue", which is not the main queue, and not a database queue.&lt;/p&gt;
&lt;p&gt;The sample code below counts the number of times the player table is modified:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; reducer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AnyValueReducer&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;fetch&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; don't fetch anything &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;value&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;defer&lt;/span&gt; { count &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; count })
&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;(Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;(), &lt;span class="pl-c1"&gt;reducer&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; reducer })
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;count&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Number of transactions that have modified players: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;count&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Number of transactions that have modified players: 0"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Number of transactions that have modified players: 1"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-databaseregionobservation" class="anchor" aria-hidden="true" href="#databaseregionobservation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;DatabaseRegionObservation tracks changes in database &lt;a href="#requests"&gt;requests&lt;/a&gt;, and notifies each impactful &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No insertion, update, or deletion in the tracked tables is missed. This includes indirect changes triggered by &lt;a href="https://www.sqlite.org/foreignkeys.html#fk_actions" rel="nofollow"&gt;foreign keys&lt;/a&gt; or &lt;a href="https://www.sqlite.org/lang_createtrigger.html" rel="nofollow"&gt;SQL triggers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;DatabaseRegionObservation calls your application right after changes have been committed in the database, and before any other thread had any opportunity to perform further changes. &lt;em&gt;This is a pretty strong guarantee, that most applications do not really need.&lt;/em&gt; Instead, most applications prefer to be notified with fresh values: make sure you check &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt; before using DatabaseRegionObservation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregionobservation-usage" class="anchor" aria-hidden="true" href="#databaseregionobservation-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation Usage&lt;/h3&gt;
&lt;p&gt;Define an observation by providing one or several requests to track:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track all players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseRegionObservation&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;: Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then start the observation from a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt; or &lt;a href="#database-pools"&gt;pool&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Players were changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And enjoy the changes notifications:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Players were changed"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, the observation lasts until the observer returned by the &lt;code&gt;start&lt;/code&gt; method is deallocated. See &lt;a href="#databaseregionobservationextent"&gt;DatabaseRegionObservation.extent&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;You can also feed DatabaseRegionObservation with &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;, or any type which conforms to the &lt;a href="#the-databaseregionconvertible-protocol"&gt;DatabaseRegionConvertible&lt;/a&gt; protocol. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observe the full database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseRegionObservation&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;: DatabaseRegion.&lt;span class="pl-smi"&gt;fullDatabase&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Database was changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregionobservation-use-cases" class="anchor" aria-hidden="true" href="#databaseregionobservation-use-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation Use Cases&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;There are very few use cases for DatabaseRegionObservation&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;One needs to write in the database after an impactful transaction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One needs to synchronize the content of the database file with some external resources, like other files, or system sensors like CLRegion monitoring.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On iOS, one needs to process a database transaction before the operating system had any opportunity to put the application in the suspended state.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One wants to build a &lt;a href="#database-snapshots"&gt;database snapshot&lt;/a&gt; with a guaranteed snapshot content.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Outside of those use cases, it is much likely &lt;em&gt;wrong&lt;/em&gt; to use a DatabaseRegionObservation. Please check other &lt;a href="#database-changes-observation"&gt;Database Observation&lt;/a&gt; options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregionobservationextent" class="anchor" aria-hidden="true" href="#databaseregionobservationextent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation.extent&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;extent&lt;/code&gt; property lets you specify the duration of the observation. See &lt;a href="#observation-extent"&gt;Observation Extent&lt;/a&gt; for more details:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This observation lasts until the database connection is closed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; DatabaseRegionObservation&lt;span class="pl-k"&gt;...&lt;/span&gt;
observation.&lt;span class="pl-smi"&gt;extent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;databaseLifetime&lt;/span&gt;
&lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default extent is &lt;code&gt;.observerLifetime&lt;/code&gt;: the observation stops when the observer returned by &lt;code&gt;start&lt;/code&gt; is deallocated.&lt;/p&gt;
&lt;p&gt;Regardless of the extent of an observation, you can always stop observation with the &lt;code&gt;remove(transactionObserver:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Stop&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-transactionobserver-protocol" class="anchor" aria-hidden="true" href="#transactionobserver-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TransactionObserver Protocol&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;TransactionObserver&lt;/code&gt; protocol lets you &lt;strong&gt;observe individual database changes and transactions&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;TransactionObserver&lt;/span&gt; : &lt;span class="pl-k"&gt;class&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Notifies a database change:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; - event.kind (insert, update, or delete)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; - event.tableName&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; - event.rowID&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; For performance reasons, the event is only valid for the duration of&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; this method call. If you need to keep it longer, store a copy:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; event.copy().&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Filters the database changes that should be notified to the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; `databaseDidChange(with:)` method.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; An opportunity to rollback pending changes by throwing an error.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseWillCommit&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Database changes have been committed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidCommit&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Database changes have been rollbacked.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidRollback&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#activate-a-transaction-observer"&gt;Activate a Transaction Observer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-changes-and-transactions"&gt;Database Changes And Transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filtering-database-events"&gt;Filtering Database Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#observation-extent"&gt;Observation Extent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support-for-sqlite-pre-update-hooks"&gt;Support for SQLite Pre-Update Hooks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-activate-a-transaction-observer" class="anchor" aria-hidden="true" href="#activate-a-transaction-observer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Activate a Transaction Observer&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;To activate a transaction observer, add it to the database queue or pool:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyObserver&lt;/span&gt;()
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, database holds weak references to its transaction observers: they are not retained, and stop getting notifications after they are deallocated. See &lt;a href="#observation-extent"&gt;Observation Extent&lt;/a&gt; for more options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-database-changes-and-transactions" class="anchor" aria-hidden="true" href="#database-changes-and-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Changes And Transactions&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A transaction observer is notified of all database changes&lt;/strong&gt;: inserts, updates and deletes. This includes indirect changes triggered by ON DELETE and ON UPDATE actions associated to &lt;a href="https://www.sqlite.org/foreignkeys.html#fk_actions" rel="nofollow"&gt;foreign keys&lt;/a&gt;, and &lt;a href="https://www.sqlite.org/lang_createtrigger.html" rel="nofollow"&gt;SQL triggers&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the changes that are not notified are changes to internal system tables (such as &lt;code&gt;sqlite_master&lt;/code&gt;), changes to &lt;a href="https://www.sqlite.org/withoutrowid.html" rel="nofollow"&gt;&lt;code&gt;WITHOUT ROWID&lt;/code&gt;&lt;/a&gt; tables, and the deletion of duplicate rows triggered by &lt;a href="https://www.sqlite.org/lang_conflict.html" rel="nofollow"&gt;&lt;code&gt;ON CONFLICT REPLACE&lt;/code&gt;&lt;/a&gt; clauses (this last exception might change in a future release of SQLite).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notified changes are not actually written to disk until the &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt; commits, and the &lt;code&gt;databaseDidCommit&lt;/code&gt; callback is called. On the other side, &lt;code&gt;databaseDidRollback&lt;/code&gt; confirms their invalidation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}                                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. willCommit, 4. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;rollback&lt;/span&gt;                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. didRollback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeError&lt;/span&gt;()
}                                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didRollback&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Database statements that are executed outside of any transaction do not drop off the radar:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange, 2. willCommit, 3. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4. didChange, 5. willCommit, 6. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Changes that are on hold because of a &lt;a href="https://www.sqlite.org/lang_savepoint.html" rel="nofollow"&gt;savepoint&lt;/a&gt; are only notified after the savepoint has been released. This makes sure that notified events are only events that have an opportunity to be committed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delayed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delayed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RELEASE SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didChange, 3. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; not notified&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ROLLBACK TO SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;                               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4. willCommit, 5. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Eventual errors&lt;/strong&gt; thrown from &lt;code&gt;databaseWillCommit&lt;/code&gt; are exposed to the application code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. willCommit (throws), 2. didRollback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. The error thrown by the transaction observer.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: all callbacks are called in a protected dispatch queue, and serialized with all database updates.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the databaseDidChange(with:) and databaseWillCommit() callbacks must not touch the SQLite database. This limitation does not apply to databaseDidCommit and databaseDidRollback which can use their database argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;, &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;, &lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;, and &lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt; are all based on the TransactionObserver protocol.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="https://gist.github.com/groue/2e21172719e634657dfd"&gt;TableChangeObserver.swift&lt;/a&gt;, which shows a transaction observer that notifies of modified database tables with NSNotificationCenter.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-filtering-database-events" class="anchor" aria-hidden="true" href="#filtering-database-events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filtering Database Events&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Transaction observers can avoid being notified of database changes they are not interested in.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The filtering happens in the &lt;code&gt;observes(eventsOfKind:)&lt;/code&gt; method, which tells whether the observer wants notification of specific kinds of changes, or not. For example, here is how an observer can focus on the changes that happen on the "player" database table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only observe changes to the "player" table.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; eventKind.&lt;span class="pl-smi"&gt;tableName&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This method is only called for changes that happen to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the "player" table.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Generally speaking, the &lt;code&gt;observes(eventsOfKind:)&lt;/code&gt; method can distinguish insertions from deletions and updates, and is also able to inspect the columns that are about to be changed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerScoreObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only observe changes to the "score" column of the "player" table.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;switch&lt;/span&gt; eventKind {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; tableName)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; tableName &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; tableName)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; tableName &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; tableName, &lt;span class="pl-k"&gt;let&lt;/span&gt; columnNames)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; tableName &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; columnNames.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the &lt;code&gt;observes(eventsOfKind:)&lt;/code&gt; method returns false for all event kinds, the observer is still notified of commits and rollbacks:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PureTransactionObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Ignore all individual changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Never called &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseWillCommit&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Called before commit &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidRollback&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Called on rollback &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidCommit&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Called on commit &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information about event filtering, see &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-observation-extent" class="anchor" aria-hidden="true" href="#observation-extent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observation Extent&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You can specify how long an observer is notified of database changes and transactions.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;remove(transactionObserver:)&lt;/code&gt; method explicitly stops notifications, at any time:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; From a database queue or pool:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; From a database connection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    db.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, use the &lt;code&gt;extent&lt;/code&gt; parameter of the &lt;code&gt;add(transactionObserver:extent:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyObserver&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On a database queue or pool:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default extent&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer, &lt;span class="pl-c1"&gt;extent&lt;/span&gt;: .&lt;span class="pl-smi"&gt;observerLifetime&lt;/span&gt;)
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer, &lt;span class="pl-c1"&gt;extent&lt;/span&gt;: .&lt;span class="pl-smi"&gt;nextTransaction&lt;/span&gt;)
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer, &lt;span class="pl-c1"&gt;extent&lt;/span&gt;: .&lt;span class="pl-smi"&gt;databaseLifetime&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On a database connection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    db.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The default extent is &lt;code&gt;.observerLifetime&lt;/code&gt;: the database holds a weak reference to the observer, and the observation automatically ends when the observer is deallocated. Meanwhile, observer is notified of all changes and transactions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.nextTransaction&lt;/code&gt; activates the observer until the current or next transaction completes. The database keeps a strong reference to the observer until its &lt;code&gt;databaseDidCommit&lt;/code&gt; or &lt;code&gt;databaseDidRollback&lt;/code&gt; method is eventually called. Hereafter the observer won't get any further notification.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.databaseLifetime&lt;/code&gt; has the database retain and notify the observer until the database connection is closed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, an observer may ignore all database changes until the end of the current transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; playerTableWasModified &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; eventKind.&lt;span class="pl-smi"&gt;tableName&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent) {
        playerTableWasModified &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; It is pointless to keep on tracking further changes:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;stopObservingDatabaseChangesUntilNextTransaction&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After &lt;code&gt;stopObservingDatabaseChangesUntilNextTransaction()&lt;/code&gt;, the &lt;code&gt;databaseDidChange(with:)&lt;/code&gt; method will not be notified of any change for the remaining duration of the current transaction. This helps GRDB optimize database observation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregion" class="anchor" aria-hidden="true" href="#databaseregion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegion&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://groue.github.io/GRDB.swift/docs/4.6/Structs/DatabaseRegion.html" rel="nofollow"&gt;DatabaseRegion&lt;/a&gt; is a type that helps observing changes in the results of a database &lt;a href="#requests"&gt;request&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A request knows which database modifications can impact its results. It can communicate this information to &lt;a href="#transactionobserver-protocol"&gt;transaction observers&lt;/a&gt; by the way of a DatabaseRegion.&lt;/p&gt;
&lt;p&gt;DatabaseRegion fuels, for example, &lt;a href="#valueobservation-and-databaseregionobservation"&gt;ValueObservation and DatabaseRegionObservation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A region notifies &lt;em&gt;potential&lt;/em&gt; changes, not &lt;em&gt;actual&lt;/em&gt; changes in the results of a request.&lt;/strong&gt; A change is notified if and only if a statement has actually modified the tracked tables and columns by inserting, updating, or deleting a row.&lt;/p&gt;
&lt;p&gt;For example, if you observe the region of &lt;code&gt;Player.select(max(Column("score")))&lt;/code&gt;, then you'll get be notified of all changes performed on the &lt;code&gt;score&lt;/code&gt; column of the &lt;code&gt;player&lt;/code&gt; table (updates, insertions and deletions), even if they do not modify the value of the maximum score. However, you will not get any notification for changes performed on other database tables, or updates to other columns of the player table.&lt;/p&gt;
&lt;p&gt;For more details, see the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/DatabaseRegion.html#/s:4GRDB14DatabaseRegionV10isModified2bySbAA0B5EventV_tF" rel="nofollow"&gt;reference&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-the-databaseregionconvertible-protocol" class="anchor" aria-hidden="true" href="#the-databaseregionconvertible-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The DatabaseRegionConvertible Protocol&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;DatabaseRegionConvertible&lt;/strong&gt; is a protocol for all types that can turn into a &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;DatabaseRegionConvertible&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseRegion&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseRegion
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All &lt;a href="#requests"&gt;requests&lt;/a&gt; adopt this protocol, and this allows them to be observed with &lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt; and &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Use this protocol when you want to encapsulate your complex requests in a dedicated type, and still profit from optimized observation APIs. See &lt;a href="#valueobservationtracking_fetch"&gt;&lt;code&gt;ValueObservation.tracking(_:fetch:)&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-support-for-sqlite-pre-update-hooks" class="anchor" aria-hidden="true" href="#support-for-sqlite-pre-update-hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support for SQLite Pre-Update Hooks&lt;/h3&gt;
&lt;p&gt;When SQLite is built with the SQLITE_ENABLE_PREUPDATE_HOOK option, TransactionObserverType gets an extra callback which lets you observe individual column values in the rows modified by a transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;TransactionObserverType&lt;/span&gt; : &lt;span class="pl-k"&gt;class&lt;/span&gt; {
    #&lt;span class="pl-k"&gt;if&lt;/span&gt; SQLITE_ENABLE_PREUPDATE_HOOK
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Notifies before a database change (insert, update, or delete)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; with change information (initial / final values for the row's&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; columns).&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The event is only valid for the duration of this method call. If you&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; need to keep it longer, store a copy: event.copy().&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseWillChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabasePreUpdateEvent)
    #&lt;span class="pl-k"&gt;endif&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This extra API can be activated in two ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the GRDB.swift CocoaPod with a custom compilation option, as below. It uses the system SQLite, which is compiled with SQLITE_ENABLE_PREUPDATE_HOOK support, but only on iOS 11.0+ (we don't know the minimum version of macOS, tvOS, watchOS):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;11.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or above&lt;/span&gt;

post_install &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;installer&lt;/span&gt;|
  installer.pods_project.targets.&lt;span class="pl-c1"&gt;select&lt;/span&gt; { |&lt;span class="pl-smi"&gt;target&lt;/span&gt;| target.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }.each &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;target&lt;/span&gt;|
    target.build_configurations.each &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Enable extra GRDB APIs&lt;/span&gt;
      config.build_settings[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;OTHER_SWIFT_FLAGS&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$(inherited) -D SQLITE_ENABLE_PREUPDATE_HOOK&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Enable extra SQLite APIs&lt;/span&gt;
      config.build_settings[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GCC_PREPROCESSOR_DEFINITIONS&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$(inherited) GRDB_SQLITE_ENABLE_PREUPDATE_HOOK=1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: make sure you use the right platform version! You will get runtime errors on devices with a lower version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the &lt;code&gt;GRDB_SQLITE_ENABLE_PREUPDATE_HOOK=1&lt;/code&gt; option in &lt;code&gt;GCC_PREPROCESSOR_DEFINITIONS&lt;/code&gt; defines some C function prototypes that are lacking from the system &lt;code&gt;&amp;lt;sqlite3.h&amp;gt;&lt;/code&gt; header. When Xcode eventually ships with an SDK that includes a complete header, you may get a compiler error about duplicate function definitions. When this happens, just remove this &lt;code&gt;GRDB_SQLITE_ENABLE_PREUPDATE_HOOK=1&lt;/code&gt; option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;custom SQLite build&lt;/a&gt; and activate the &lt;code&gt;SQLITE_ENABLE_PREUPDATE_HOOK&lt;/code&gt; compilation option.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-encryption" class="anchor" aria-hidden="true" href="#encryption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Encryption&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;GRDB can encrypt your database with &lt;a href="http://sqlcipher.net" rel="nofollow"&gt;SQLCipher&lt;/a&gt; v3.4+.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;a href="http://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt;, and specify in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; GRDB with SQLCipher 4&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift/SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 4.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; GRDB with SQLCipher 3&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift/SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 3.4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#creating-or-opening-an-encrypted-database"&gt;Creating or Opening an Encrypted Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changing-the-passphrase-of-an-encrypted-database"&gt;Changing the Passphrase of an Encrypted Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exporting-a-database-to-an-encrypted-database"&gt;Exporting a Database to an Encrypted Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#security-considerations"&gt;Security Considerations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-creating-or-opening-an-encrypted-database" class="anchor" aria-hidden="true" href="#creating-or-opening-an-encrypted-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating or Opening an Encrypted Database&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You create and open an encrypted database&lt;/strong&gt; by providing a passphrase to your &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also in &lt;code&gt;prepareDatabase&lt;/code&gt; that you perform other &lt;a href="https://www.zetetic.net/sqlcipher/sqlcipher-api/" rel="nofollow"&gt;SQLCipher configuration steps&lt;/a&gt; that must happen early in the lifetime of a SQLCipher connection. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PRAGMA cipher_page_size = ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PRAGMA kdf_iter = ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to open an existing SQLCipher 3 database with SQLCipher 4, you may want to run the &lt;code&gt;cipher_compatibility&lt;/code&gt; pragma:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Open an SQLCipher 3 database with SQLCipher 4&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PRAGMA cipher_compatibility = 3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://www.zetetic.net/blog/2018/11/30/sqlcipher-400-release/" rel="nofollow"&gt;SQLCipher 4.0.0 Release&lt;/a&gt; and &lt;a href="https://discuss.zetetic.net/t/upgrading-to-sqlcipher-4/3283" rel="nofollow"&gt;Upgrading to SQLCipher 4&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-changing-the-passphrase-of-an-encrypted-database" class="anchor" aria-hidden="true" href="#changing-the-passphrase-of-an-encrypted-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changing the Passphrase of an Encrypted Database&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You can change the passphrase&lt;/strong&gt; of an already encrypted database.&lt;/p&gt;
&lt;p&gt;When you use a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt;, open the database with the old passphrase, and then apply the new passphrase:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;changePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newSecret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, make sure that no concurrent read can happen by changing the passphrase within the &lt;code&gt;barrierWriteWithoutTransaction&lt;/code&gt; block. You must also ensure all future reads open a new database connection by calling the &lt;code&gt;invalidateReadOnlyConnections&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;barrierWriteWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;changePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newSecret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    dbPool.&lt;span class="pl-c1"&gt;invalidateReadOnlyConnections&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: When an application wants to keep on using a database queue or pool after the passphrase has changed, it is responsible for providing the correct passphrase to the &lt;code&gt;usePassphrase&lt;/code&gt; method called in the database preparation function. Consider:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG: this won't work across a passphrase change&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: get the latest passphrase when it is needed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;DatabasePool.barrierWriteWithoutTransaction&lt;/code&gt; method does not prevent &lt;a href="#database-snapshots"&gt;database snapshots&lt;/a&gt; from accessing the database during the passphrase change, or after the new passphrase has been applied to the database. Those database accesses may throw errors. Applications should provide their own mechanism for invalidating open snapshots before the passphrase is changed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: Instead of changing the passphrase "in place" as described here, you can also export the database in a new encrypted database that uses the new passphrase. See &lt;a href="#exporting-a-database-to-an-encrypted-database"&gt;Exporting a Database to an Encrypted Database&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-exporting-a-database-to-an-encrypted-database" class="anchor" aria-hidden="true" href="#exporting-a-database-to-an-encrypted-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exporting a Database to an Encrypted Database&lt;/h3&gt;
&lt;p&gt;Providing a passphrase won't encrypt a clear-text database that already exists, though. SQLCipher can't do that, and you will get an error instead: &lt;code&gt;SQLite error 26: file is encrypted or is not a database&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Instead, create a new encrypted database, at a distinct location, and export the content of the existing database. This can both encrypt a clear-text database, or change the passphrase of an encrypted databaase.&lt;/p&gt;
&lt;p&gt;The technique to do that is &lt;a href="https://discuss.zetetic.net/t/how-to-encrypt-a-plaintext-sqlite-database-to-use-sqlcipher-and-avoid-file-is-encrypted-or-is-not-a-database-errors/868/1" rel="nofollow"&gt;documented&lt;/a&gt; by SQLCipher.&lt;/p&gt;
&lt;p&gt;With GRDB, it gives:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The existing database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; existingDBQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/existing.db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The new encrypted database, at some distinct location:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; newDBQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/new.db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-k"&gt;try&lt;/span&gt; existingDBQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            ATTACH DATABASE ? AS encrypted KEY ?;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT sqlcipher_export('encrypted');&lt;/span&gt;
&lt;span class="pl-s"&gt;            DETACH DATABASE encrypted;&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [newDBQueue.&lt;span class="pl-smi"&gt;path&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Now the export is completed, and the existing database can be deleted.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-security-considerations" class="anchor" aria-hidden="true" href="#security-considerations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security Considerations&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-managing-the-lifetime-of-the-passphrase-string" class="anchor" aria-hidden="true" href="#managing-the-lifetime-of-the-passphrase-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing the lifetime of the passphrase string&lt;/h4&gt;
&lt;p&gt;It is recommended to avoid keeping the passphrase in memory longer than necessary. To do this, make sure you load the passphrase from inside the &lt;code&gt;prepareDatabase&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NOT RECOMMENDED: this keeps the passphrase in memory longer than necessary&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; RECOMMENDED: only load the passphrase when it is needed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This technique manages the lifetime of the passphrase string. Some demanding users will want to go further, and manage the lifetime of the raw passphrase bytes. See below.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-managing-the-lifetime-of-the-passphrase-bytes" class="anchor" aria-hidden="true" href="#managing-the-lifetime-of-the-passphrase-bytes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing the lifetime of the passphrase bytes&lt;/h4&gt;
&lt;p&gt;GRDB offers convenience methods for providing the database passphrases as Swift strings: &lt;code&gt;usePassphrase(_:)&lt;/code&gt; and &lt;code&gt;changePassphrase(_:)&lt;/code&gt;. Those methods don't keep the passphrase String in memory longer than necessary. But they are as secure as the standard String type: the lifetime of actual passphrase bytes in memory is not under control.&lt;/p&gt;
&lt;p&gt;When you want to precisely manage the passphrase bytes, talk directly to SQLCipher, using its raw C functions.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLCipher&lt;/span&gt;

&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Carefully load passphrase bytes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; code &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;sqlite3_key&lt;/span&gt;(db.&lt;span class="pl-smi"&gt;sqliteConnection&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; passphrase bytes &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Carefully dispose passphrase bytes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;guard&lt;/span&gt; code &lt;span class="pl-k"&gt;==&lt;/span&gt; SQLITE_OK &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseError&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;resultCode&lt;/span&gt;: &lt;span class="pl-c1"&gt;ResultCode&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;: code), 
            &lt;span class="pl-c1"&gt;message&lt;/span&gt;: db.&lt;span class="pl-smi"&gt;lastErrorMessage&lt;/span&gt;)
    }
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-passphrase-availability-vs-database-availability" class="anchor" aria-hidden="true" href="#passphrase-availability-vs-database-availability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passphrase availability vs. Database availability&lt;/h4&gt;
&lt;p&gt;When the passphrase is securely stored in the system keychain, your application can protect it using the &lt;a href="https://developer.apple.com/documentation/security/ksecattraccessible" rel="nofollow"&gt;&lt;code&gt;kSecAttrAccessible&lt;/code&gt;&lt;/a&gt; attribute.&lt;/p&gt;
&lt;p&gt;Such protection prevents GRDB from creating SQLite connections when the passphrase is not available:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;loadPassphraseFromSystemKeychain&lt;/span&gt;()
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Success if and only if the passphrase is available&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the same reason, &lt;a href="#database-pools"&gt;database pools&lt;/a&gt;, which open SQLite connections on demand, may fail at any time as soon as the passphrase becomes unavailable:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Success if and only if the passphrase is available&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; May fail if passphrase has turned unavailable&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; May trigger value observation failure if passphrase has turned unavailable&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because DatabasePool maintains a pool of long-lived SQLite connections, some database accesses will use an existing connection, and succeed. And some other database accesses will fail, as soon as the pool wants to open a new connection. It is impossible to predict which accesses will succeed or fail.&lt;/p&gt;
&lt;p&gt;For the same reason, a database queue, which also maintains a long-lived SQLite connection, will remain available even after the passphrase has turned unavailable.&lt;/p&gt;
&lt;p&gt;Applications are thus responsible for protecting database accesses when the passphrase is unavailable. To this end, they can use &lt;a href="#data-protection"&gt;Data Protection&lt;/a&gt;. They can also destroy their instances of database queue or pool when the passphrase becomes unavailable.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backup" class="anchor" aria-hidden="true" href="#backup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backup&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;You can backup (copy) a database into another.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Backups can for example help you copying an in-memory database to and from a database file when you implement NSDocument subclasses.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; source&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or DatabasePool&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; destination&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or DatabasePool&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; source.&lt;span class="pl-c1"&gt;backup&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: destination)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;backup&lt;/code&gt; method blocks the current thread until the destination database contains the same contents as the source database.&lt;/p&gt;
&lt;p&gt;When the source is a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, concurrent writes can happen during the backup. Those writes may, or may not, be reflected in the backup, but they won't trigger any error.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-avoiding-sql-injection" class="anchor" aria-hidden="true" href="#avoiding-sql-injection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Avoiding SQL Injection&lt;/h2&gt;
&lt;p&gt;SQL injection is a technique that lets an attacker nuke your database.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cecf339daf48ee4cfe86f33630c3732cdc2ab0e1/68747470733a2f2f696d67732e786b63642e636f6d2f636f6d6963732f6578706c6f6974735f6f665f615f6d6f6d2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/cecf339daf48ee4cfe86f33630c3732cdc2ab0e1/68747470733a2f2f696d67732e786b63642e636f6d2f636f6d6963732f6578706c6f6974735f6f665f615f6d6f6d2e706e67" alt="XKCD: Exploits of a Mom" data-canonical-src="https://imgs.xkcd.com/comics/exploits_of_a_mom.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xkcd.com/327/" rel="nofollow"&gt;https://xkcd.com/327/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here is an example of code that is vulnerable to SQL injection:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BAD BAD BAD&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE students SET name = '&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;' WHERE id = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;id&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the user enters a funny string like &lt;code&gt;Robert'; DROP TABLE students; --&lt;/code&gt;, SQLite will see the following SQL, and drop your database table instead of updating a name as intended:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;UPDATE&lt;/span&gt; students &lt;span class="pl-k"&gt;SET&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Robert&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;DROP&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; students;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;' WHERE id = 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid those problems, &lt;strong&gt;never embed raw values in your SQL queries&lt;/strong&gt;. The only correct technique is to provide &lt;a href="#executing-updates"&gt;arguments&lt;/a&gt; to your raw SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Good&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE students SET name = ? WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [name, id])
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Just as good&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE students SET name = :name WHERE id = :id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; id])
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use &lt;a href="#records"&gt;records&lt;/a&gt; and the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;, GRDB always prevents SQL injection for you:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; student &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Student.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: id) {
        student.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; name
        &lt;span class="pl-k"&gt;try&lt;/span&gt; student.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Handling&lt;/h2&gt;
&lt;p&gt;GRDB can throw &lt;a href="#databaseerror"&gt;DatabaseError&lt;/a&gt;, &lt;a href="#persistenceerror"&gt;PersistenceError&lt;/a&gt;, or crash your program with a &lt;a href="#fatal-errors"&gt;fatal error&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Considering that a local database is not some JSON loaded from a remote server, GRDB focuses on &lt;strong&gt;trusted databases&lt;/strong&gt;. Dealing with &lt;a href="#how-to-deal-with-untrusted-inputs"&gt;untrusted databases&lt;/a&gt; requires extra care.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#databaseerror"&gt;DatabaseError&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#persistenceerror"&gt;PersistenceError&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fatal-errors"&gt;Fatal Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-deal-with-untrusted-inputs"&gt;How to Deal with Untrusted Inputs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#error-log"&gt;Error Log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-databaseerror" class="anchor" aria-hidden="true" href="#databaseerror"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseError&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;DatabaseError&lt;/strong&gt; are thrown on SQLite errors:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO pet (masterId, name) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bobby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The SQLite error code: 19 (SQLITE_CONSTRAINT)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The extended error code: 787 (SQLITE_CONSTRAINT_FOREIGNKEY)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;extendedResultCode&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The eventual SQLite message: FOREIGN KEY constraint failed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;message&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The eventual erroneous SQL query&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "INSERT INTO pet (masterId, name) VALUES (?, ?)"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;sql&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Full error description:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "SQLite error 19 with statement `INSERT INTO pet (masterId, name)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  VALUES (?, ?)` arguments [1, "Bobby"]: FOREIGN KEY constraint failed""&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-c1"&gt;description&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;SQLite uses codes to distinguish between various errors:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError &lt;span class="pl-k"&gt;where&lt;/span&gt; error.&lt;span class="pl-smi"&gt;extendedResultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT_FOREIGNKEY&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; foreign key constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError &lt;span class="pl-k"&gt;where&lt;/span&gt; error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other database error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above, &lt;code&gt;error.extendedResultCode&lt;/code&gt; is a precise &lt;a href="https://www.sqlite.org/rescode.html#extended_result_code_list" rel="nofollow"&gt;extended result code&lt;/a&gt;, and &lt;code&gt;error.resultCode&lt;/code&gt; is a less precise &lt;a href="https://www.sqlite.org/rescode.html#primary_result_code_list" rel="nofollow"&gt;primary result code&lt;/a&gt;. Extended result codes are refinements of primary result codes, as &lt;code&gt;SQLITE_CONSTRAINT_FOREIGNKEY&lt;/code&gt; is to &lt;code&gt;SQLITE_CONSTRAINT&lt;/code&gt;, for example. See &lt;a href="https://www.sqlite.org/rescode.html" rel="nofollow"&gt;SQLite result codes&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;As a convenience, extended result codes match their primary result code in a switch statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError {
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; error.&lt;span class="pl-smi"&gt;extendedResultCode&lt;/span&gt; {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; ResultCode.&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT_FOREIGNKEY&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; foreign key constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;case&lt;/span&gt; ResultCode.&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other database error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: SQLite has progressively introduced extended result codes accross its versions. The &lt;a href="http://www.sqlite.org/changes.html" rel="nofollow"&gt;SQLite release notes&lt;/a&gt; are unfortunately not quite clear about that: write your handling of extended result codes with care.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-persistenceerror" class="anchor" aria-hidden="true" href="#persistenceerror"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PersistenceError&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;PersistenceError&lt;/strong&gt; is thrown by the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol, in a single case: when the &lt;code&gt;update&lt;/code&gt; method could not find any row to update:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; PersistenceError.&lt;span class="pl-c1"&gt;recordNotFound&lt;/span&gt;(&lt;span class="pl-c1"&gt;databaseTableName&lt;/span&gt;: table, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: key) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Key &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;key&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; was not found in table &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;table&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fatal-errors" class="anchor" aria-hidden="true" href="#fatal-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fatal Errors&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Fatal errors notify that the program, or the database, has to be changed.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They uncover programmer errors, false assumptions, and prevent misuses. Here are a few examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The code asks for a non-optional value, when the database contains NULL:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert NULL to String.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: fix the contents of the database, use &lt;a href="#create-tables"&gt;NOT NULL constraints&lt;/a&gt;, or load an optional:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Conversion from database value to Swift type fails:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "Mom‚Äôs birthday" to Date.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date&lt;span class="pl-k"&gt;:&lt;/span&gt; Date &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "" to URL.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: fix the contents of the database, or use &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; to handle all possible cases:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle invalid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The database can't guarantee that the code does what it says:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: table player has no unique index on column email&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: add a unique index to the player.email column, or use the &lt;code&gt;deleteAll&lt;/code&gt; method to make it clear that you may delete more than one row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Database connections are not reentrant:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: Database methods are not reentrant.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: avoid reentrancy, and instead pass a database connection along.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-deal-with-untrusted-inputs" class="anchor" aria-hidden="true" href="#how-to-deal-with-untrusted-inputs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Deal with Untrusted Inputs&lt;/h3&gt;
&lt;p&gt;Let's consider the code below:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some untrusted arguments for the query&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; arguments&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-c1"&gt;StatementArguments&lt;/span&gt;(arguments))

&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some untrusted database value:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; date&lt;span class="pl-k"&gt;:&lt;/span&gt; Date&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It has two opportunities to throw fatal errors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Untrusted arguments&lt;/strong&gt;: The dictionary may contain values that do not conform to the &lt;a href="#values"&gt;DatabaseValueConvertible protocol&lt;/a&gt;, or may miss keys required by the statement.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Untrusted database content&lt;/strong&gt;: The row may contain a non-null value that can't be turned into a date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In such a situation, you can still avoid fatal errors by exposing and handling each failure point, one level down in the GRDB API:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Untrusted arguments&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; arguments &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;StatementArguments&lt;/span&gt;(arguments) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; statement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; statement.&lt;span class="pl-c1"&gt;validate&lt;/span&gt;(&lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: arguments)
    statement.&lt;span class="pl-c1"&gt;unsafeSetArguments&lt;/span&gt;(arguments)
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; cursor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(statement)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; iterator.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Untrusted database content&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
        &lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle invalid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#prepared-statements"&gt;prepared statements&lt;/a&gt; and &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-error-log" class="anchor" aria-hidden="true" href="#error-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Log&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;SQLite can be configured to invoke a callback function containing an error code and a terse error message whenever anomalies occur.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This global error callback must be configured early in the lifetime of your application:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Database.&lt;span class="pl-smi"&gt;logError&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { (resultCode, message) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;NSLog&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%@&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite error &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;resultCode&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;message&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: Database.logError must be set before any database connection is opened. This includes the connections that your application opens with GRDB, but also connections opened by other tools, such as third-party libraries. Setting it after a connection has been opened is an SQLite misuse, and has no effect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See &lt;a href="https://sqlite.org/errlog.html" rel="nofollow"&gt;The Error And Warning Log&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-unicode" class="anchor" aria-hidden="true" href="#unicode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unicode&lt;/h2&gt;
&lt;p&gt;SQLite lets you store unicode strings in the database.&lt;/p&gt;
&lt;p&gt;However, SQLite does not provide any unicode-aware string transformations or comparisons.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unicode-functions" class="anchor" aria-hidden="true" href="#unicode-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unicode functions&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;UPPER&lt;/code&gt; and &lt;code&gt;LOWER&lt;/code&gt; built-in SQLite functions are not unicode-aware:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "J√©R√¥ME"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT UPPER('J√©r√¥me')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB extends SQLite with &lt;a href="#custom-sql-functions-and-aggregates"&gt;SQL functions&lt;/a&gt; that call the Swift built-in string functions &lt;code&gt;capitalized&lt;/code&gt;, &lt;code&gt;lowercased&lt;/code&gt;, &lt;code&gt;uppercased&lt;/code&gt;, &lt;code&gt;localizedCapitalized&lt;/code&gt;, &lt;code&gt;localizedLowercased&lt;/code&gt; and &lt;code&gt;localizedUppercased&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "J√âR√îME"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; uppercased &lt;span class="pl-k"&gt;=&lt;/span&gt; DatabaseFunction.&lt;span class="pl-smi"&gt;uppercase&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;uppercased.&lt;span class="pl-smi"&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;('J√©r√¥me')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those unicode-aware string functions are also readily available in the &lt;a href="#sql-functions"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn.&lt;span class="pl-smi"&gt;uppercased&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-string-comparison" class="anchor" aria-hidden="true" href="#string-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String Comparison&lt;/h3&gt;
&lt;p&gt;SQLite compares strings in many occasions: when you sort rows according to a string column, or when you use a comparison operator such as &lt;code&gt;=&lt;/code&gt; and &lt;code&gt;&amp;lt;=&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The comparison result comes from a &lt;em&gt;collating function&lt;/em&gt;, or &lt;em&gt;collation&lt;/em&gt;. SQLite comes with three built-in collations that do not support Unicode: &lt;a href="https://www.sqlite.org/datatype3.html#collation" rel="nofollow"&gt;binary, nocase, and rtrim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;GRDB comes with five extra collations that leverage unicode-aware comparisons based on the standard Swift String comparison functions and operators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unicodeCompare&lt;/code&gt; (uses the built-in &lt;code&gt;&amp;lt;=&lt;/code&gt; and &lt;code&gt;==&lt;/code&gt; Swift operators)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;caseInsensitiveCompare&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localizedCaseInsensitiveCompare&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localizedCompare&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localizedStandardCompare&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A collation can be applied to a table column. All comparisons involving this column will then automatically trigger the comparison function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guarantees case-insensitive email unicity&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;().&lt;span class="pl-c1"&gt;collate&lt;/span&gt;(.&lt;span class="pl-smi"&gt;nocase&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Sort names in a localized case insensitive way&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;collate&lt;/span&gt;(.&lt;span class="pl-smi"&gt;localizedCaseInsensitiveCompare&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Players are sorted in a localized case insensitive way:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: SQLite &lt;em&gt;requires&lt;/em&gt; host applications to provide the definition of any collation other than binary, nocase and rtrim. When a database file has to be shared or migrated to another SQLite library of platform (such as the Android version of your application), make sure you provide a compatible collation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you can't or don't want to define the comparison behavior of a column (see warning above), you can still use an explicit collation in SQL requests and in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; collation &lt;span class="pl-k"&gt;=&lt;/span&gt; DatabaseCollation.&lt;span class="pl-smi"&gt;localizedCaseInsensitiveCompare&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player ORDER BY name COLLATE &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;collation.&lt;span class="pl-smi"&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn.&lt;span class="pl-c1"&gt;collating&lt;/span&gt;(collation)).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;You can also define your own collations&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; collation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseCollation&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;customCollation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { (lhs, rhs) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; NSComparisonResult &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; return the comparison of lhs and rhs strings.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;collation&lt;/span&gt;: collation) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or dbPool.add(collation: ...)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-memory-management" class="anchor" aria-hidden="true" href="#memory-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory Management&lt;/h2&gt;
&lt;p&gt;Both SQLite and GRDB use non-essential memory that help them perform better.&lt;/p&gt;
&lt;p&gt;You can reclaim this memory with the &lt;code&gt;releaseMemory&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Release as much memory as possible.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;releaseMemory&lt;/span&gt;()
dbPool.&lt;span class="pl-c1"&gt;releaseMemory&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method blocks the current thread until all current database accesses are completed, and the memory collected.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-memory-management-on-ios" class="anchor" aria-hidden="true" href="#memory-management-on-ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory Management on iOS&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;The iOS operating system likes applications that do not consume much memory.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#database-queues"&gt;Database queues&lt;/a&gt; and &lt;a href="#database-pools"&gt;pools&lt;/a&gt; can call the &lt;code&gt;releaseMemory&lt;/code&gt; method for you, when application receives memory warnings, and when application enters background: call the &lt;code&gt;setupMemoryManagement&lt;/code&gt; method after creating the queue or pool instance:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let dbQueue = try DatabaseQueue(...)
dbQueue.setupMemoryManagement(in: UIApplication.shared)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-data-protection" class="anchor" aria-hidden="true" href="#data-protection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Protection&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/StrategiesforImplementingYourApp/StrategiesforImplementingYourApp.html#//apple_ref/doc/uid/TP40007072-CH5-SW21" rel="nofollow"&gt;Data Protection&lt;/a&gt; lets you protect files so that they are encrypted and unavailable until the device is unlocked.&lt;/p&gt;
&lt;p&gt;Data protection can be enabled &lt;a href="https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/AddingCapabilities/AddingCapabilities.html#//apple_ref/doc/uid/TP40012582-CH26-SW30" rel="nofollow"&gt;globally&lt;/a&gt; for all files created by an application.&lt;/p&gt;
&lt;p&gt;You can also explicitly protect a database, by configuring its enclosing &lt;em&gt;directory&lt;/em&gt;. This will not only protect the database file, but also all &lt;a href="https://www.sqlite.org/tempfiles.html" rel="nofollow"&gt;temporary files&lt;/a&gt; created by SQLite (including the persistent &lt;code&gt;.shm&lt;/code&gt; and &lt;code&gt;.wal&lt;/code&gt; files created by &lt;a href="#database-pools"&gt;database pools&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For example, to explicitly use &lt;a href="https://developer.apple.com/reference/foundation/fileprotectiontype/1616200-complete" rel="nofollow"&gt;complete&lt;/a&gt; protection:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Paths&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; fileManager &lt;span class="pl-k"&gt;=&lt;/span&gt; FileManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; directoryURL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager
    .&lt;span class="pl-c1"&gt;url&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: .&lt;span class="pl-smi"&gt;applicationSupportDirectory&lt;/span&gt;, &lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userDomainMask&lt;/span&gt;, &lt;span class="pl-c1"&gt;appropriateFor&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;create&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;isDirectory&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; databaseURL &lt;span class="pl-k"&gt;=&lt;/span&gt; directoryURL.&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create directory if needed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; isDirectory&lt;span class="pl-k"&gt;:&lt;/span&gt; ObjCBool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;fileManager.&lt;span class="pl-c1"&gt;fileExists&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: directoryURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;, &lt;span class="pl-c1"&gt;isDirectory&lt;/span&gt;: &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;isDirectory) {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager.&lt;span class="pl-c1"&gt;createDirectory&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: directoryURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;, &lt;span class="pl-c1"&gt;withIntermediateDirectories&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;isDirectory.&lt;span class="pl-c1"&gt;boolValue&lt;/span&gt; {
    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;NSError&lt;/span&gt;(&lt;span class="pl-c1"&gt;domain&lt;/span&gt;: NSCocoaErrorDomain, &lt;span class="pl-c1"&gt;code&lt;/span&gt;: NSFileWriteFileExistsError, &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Enable data protection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager.&lt;span class="pl-c1"&gt;setAttributes&lt;/span&gt;([.&lt;span class="pl-smi"&gt;protectionKey&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; FileProtectionType.&lt;span class="pl-smi"&gt;complete&lt;/span&gt;], &lt;span class="pl-c1"&gt;ofItemAtPath&lt;/span&gt;: directoryURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Open database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: databaseURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a database is protected, an application that runs in the background on a locked device won't be able to read or write from it. Instead, it will get &lt;a href="#error-handling"&gt;DatabaseError&lt;/a&gt; with code &lt;a href="https://www.sqlite.org/rescode.html#ioerr" rel="nofollow"&gt;&lt;code&gt;SQLITE_IOERR&lt;/code&gt;&lt;/a&gt; (10) "disk I/O error", or &lt;a href="https://www.sqlite.org/rescode.html#auth" rel="nofollow"&gt;&lt;code&gt;SQLITE_AUTH&lt;/code&gt;&lt;/a&gt; (23) "not authorized".&lt;/p&gt;
&lt;p&gt;You can catch those errors and wait for &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationdelegate/1623044-applicationprotecteddatadidbecom" rel="nofollow"&gt;UIApplicationDelegate.applicationProtectedDataDidBecomeAvailable(_:)&lt;/a&gt; or &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationprotecteddatadidbecomeavailable" rel="nofollow"&gt;UIApplicationProtectedDataDidBecomeAvailable&lt;/a&gt; notification in order to retry the failed database operation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#guarantees-and-rules"&gt;Guarantees and Rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#differences-between-database-queues-and-pools"&gt;Differences between Database Queues and Pools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-databasepool"&gt;Advanced DatabasePool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-snapshots"&gt;Database Snapshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databasewriter-and-databasereader-protocols"&gt;DatabaseWriter and DatabaseReader Protocols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asynchronous-apis"&gt;Asynchronous APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unsafe-concurrency-apis"&gt;Unsafe Concurrency APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dealing-with-external-connections"&gt;Dealing with External Connections&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-guarantees-and-rules" class="anchor" aria-hidden="true" href="#guarantees-and-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guarantees and Rules&lt;/h3&gt;
&lt;p&gt;GRDB ships with three concurrency modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#database-queues"&gt;DatabaseQueue&lt;/a&gt; opens a single database connection, and serializes all database accesses.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-pools"&gt;DatabasePool&lt;/a&gt; manages a pool of several database connections, and allows concurrent reads and writes.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-snapshots"&gt;DatabaseSnapshot&lt;/a&gt; opens a single read-only database connection on an unchanging database content, and (currently) serializes all database accesses&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;All foster application safety&lt;/strong&gt;: regardless of the concurrency mode you choose, GRDB provides you with the same guarantees, as long as you follow three rules.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img class="emoji" title=":bowtie:" alt=":bowtie:" src="https://github.githubassets.com/images/icons/emoji/bowtie.png" height="20" width="20" align="absmiddle"&gt; &lt;strong&gt;Guarantee 1: writes are always serialized&lt;/strong&gt;. At every moment, there is no more than a single thread that is writing into the database.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Database writes always happen in a unique serial dispatch queue, named the &lt;em&gt;writer protected dispatch queue&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img class="emoji" title=":bowtie:" alt=":bowtie:" src="https://github.githubassets.com/images/icons/emoji/bowtie.png" height="20" width="20" align="absmiddle"&gt; &lt;strong&gt;Guarantee 2: reads are always isolated&lt;/strong&gt;. This means that they are guaranteed an immutable view of the database, and that you can perform subsequent fetches without fearing eventual concurrent writes to mess with your application logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be equal&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In &lt;a href="#database-queues"&gt;database queues&lt;/a&gt;, reads happen in the same protected dispatch queue as writes: isolation is just a consequence of the serialization of database accesses&lt;/p&gt;
&lt;p&gt;&lt;a href="#database-pools"&gt;Database pools&lt;/a&gt; and &lt;a href="#database-snapshots"&gt;snapshots&lt;/a&gt; both use the "snapshot isolation" made possible by SQLite's WAL mode (see &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;Isolation In SQLite&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img class="emoji" title=":bowtie:" alt=":bowtie:" src="https://github.githubassets.com/images/icons/emoji/bowtie.png" height="20" width="20" align="absmiddle"&gt; &lt;strong&gt;Guarantee 3: requests don't fail&lt;/strong&gt;, unless a database constraint violation, a &lt;a href="#error-handling"&gt;programmer mistake&lt;/a&gt;, or a very low-level issue such as a disk error or an unreadable database file. GRDB grants &lt;em&gt;correct&lt;/em&gt; use of SQLite, and particularly avoids locking errors and other SQLite misuses.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Those guarantees hold as long as you follow three rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Rule 1&lt;/strong&gt;: Have a unique instance of DatabaseQueue or DatabasePool connected to any database file.&lt;/p&gt;
&lt;p&gt;This means that opening a new connection each time you access the database is a bad idea. Do share a single connection instead.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that sets up a single database queue that is available throughout the application.&lt;/p&gt;
&lt;p&gt;If there are several instances of database queues or pools that write in the same database, a multi-threaded application will eventually face "database is locked" errors. See &lt;a href="#dealing-with-external-connections"&gt;Dealing with External Connections&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchCurrentUser&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; User&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; User.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; dbQueue is a singleton defined somewhere in your app&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;fetchCurrentUser&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This method fails when some other thread is currently writing into&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the database.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;currentUser&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; User&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; User.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
    }
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;currentUser&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Rule 2&lt;/strong&gt;: Group related statements within a single call to a DatabaseQueue or DatabasePool database access method (or use &lt;a href="#database-snapshots"&gt;snapshots&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Database access methods isolate your groups of related statements against eventual database updates performed by other threads, and guarantee a consistent view of the database. This isolation is only guaranteed &lt;em&gt;inside&lt;/em&gt; the closure argument of those methods. Two consecutive calls &lt;em&gt;do not&lt;/em&gt; guarantee isolation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be equal:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Those two values may be different because some other thread may have&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; modified the database between the two blocks:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }
&lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the same vein, when you fetch values that depends on some database updates, group them:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The count is guaranteed to be non-zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The count may be zero because some other thread may have performed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a deletion between the two blocks:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db) }
&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On that last example, see &lt;a href="#advanced-databasepool"&gt;Advanced DatabasePool&lt;/a&gt; if you look after extra performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Rule 3&lt;/strong&gt;: When you perform several modifications of the database that temporarily put the database in an inconsistent state, make sure those modifications are grouped within a &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.write&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeInTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.inTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Concurrent dbPool.read sees a partial db update here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Without transaction, &lt;code&gt;DatabasePool.read { ... }&lt;/code&gt; may see the first statement, but not the second, and access a database where the balance of accounts is not zero. A highly bug-prone situation.&lt;/p&gt;
&lt;p&gt;So do use &lt;a href="#transactions-and-savepoints"&gt;transactions&lt;/a&gt; in order to guarantee database consistency accross your application threads: that's what they are made for.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-differences-between-database-queues-and-pools" class="anchor" aria-hidden="true" href="#differences-between-database-queues-and-pools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differences between Database Queues and Pools&lt;/h3&gt;
&lt;p&gt;Despite the common &lt;a href="#guarantees-and-rules"&gt;guarantees and rules&lt;/a&gt; shared by &lt;a href="#database-queues"&gt;database queues&lt;/a&gt; and &lt;a href="#database-pools"&gt;pools&lt;/a&gt;, those two database accessors don't have the same behavior.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Database queues&lt;/strong&gt; serialize all database accesses, reads, and writes. There is never more than one thread that uses the database. In the image below, we see how three threads can see the database as time passes:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb9e0b2b85ee780c5f12797a1e89636a8badefdd/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f446174616261736551756575655363686564756c696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/eb9e0b2b85ee780c5f12797a1e89636a8badefdd/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f446174616261736551756575655363686564756c696e672e737667" alt="DatabaseQueueScheduling" data-canonical-src="https://cdn.rawgit.com/groue/GRDB.swift/master/Documentation/Images/DatabaseQueueScheduling.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Database pools&lt;/strong&gt; also serialize all writes. But they allow concurrent reads and writes, and isolate reads so that they don't see changes performed by other threads. This gives a very different picture:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9ca1a98ae185a5c052806290122221a743b0ba65/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f4461746162617365506f6f6c5363686564756c696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/9ca1a98ae185a5c052806290122221a743b0ba65/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f4461746162617365506f6f6c5363686564756c696e672e737667" alt="DatabasePoolScheduling" data-canonical-src="https://cdn.rawgit.com/groue/GRDB.swift/master/Documentation/Images/DatabasePoolScheduling.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See how, with database pools, two reads can see different database states at the same time.&lt;/p&gt;
&lt;p&gt;For more information about database pools, grab information about SQLite &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;WAL mode&lt;/a&gt; and &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;snapshot isolation&lt;/a&gt;. See &lt;a href="#database-changes-observation"&gt;Database Observation&lt;/a&gt; when you look after automatic notifications of database changes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-databasepool" class="anchor" aria-hidden="true" href="#advanced-databasepool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced DatabasePool&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-concurrentread-method"&gt;The &lt;code&gt;concurrentRead&lt;/code&gt; Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-barrierwritewithouttransaction-method"&gt;The &lt;code&gt;barrierWriteWithoutTransaction&lt;/code&gt; Method&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-the-concurrentread-method" class="anchor" aria-hidden="true" href="#the-concurrentread-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;concurrentRead&lt;/code&gt; Method&lt;/h4&gt;
&lt;p&gt;&lt;a href="#database-pools"&gt;Database pools&lt;/a&gt; are very concurrent, since all reads can run in parallel, and can even run during write operations. But writes are still serialized: at any given point in time, there is no more than a single thread that is writing into the database.&lt;/p&gt;
&lt;p&gt;When your application modifies the database, and then reads some value that depends on those modifications, you may want to avoid locking the writer queue longer than necessary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read the number of players. The writer queue is still locked :-(&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A wrong solution is to chain a write then a read, as below. Don't do that, because another thread may modify the database in between, and make the read unreliable:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- other threads can write in the database here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read some random value :-(&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The correct solution is the &lt;code&gt;concurrentRead&lt;/code&gt; method, which must be called from within a write block, outside of any transaction.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;concurrentRead&lt;/code&gt; returns a &lt;strong&gt;future value&lt;/strong&gt; which you consume on any dispatch queue, with the &lt;code&gt;wait()&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; futureCount&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseFuture&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- not in a transaction here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; futureCount &lt;span class="pl-k"&gt;=&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;concurrentRead&lt;/span&gt; { db
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; futureCount
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- The writer queue has been unlocked :-)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wait for the player count&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; futureCount.&lt;span class="pl-c1"&gt;wait&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;concurrentRead&lt;/code&gt; blocks until it can guarantee its closure argument an isolated access to the last committed state of the database. It then asynchronously executes the closure.&lt;/p&gt;
&lt;p&gt;The closure can run concurrently with eventual updates performed after &lt;code&gt;concurrentRead&lt;/code&gt;: those updates won't be visible from within the closure. In the example below, the number of players is guaranteed to be non-zero, even though it is fetched concurrently with the player deletion:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; futureCount &lt;span class="pl-k"&gt;=&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;concurrentRead&lt;/span&gt; { db
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be non-zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    }
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#transactionobserver-protocol"&gt;Transaction Observers&lt;/a&gt; can also use &lt;code&gt;concurrentRead&lt;/code&gt; in their &lt;code&gt;databaseDidCommit&lt;/code&gt; method in order to process database changes without blocking other threads that want to write into the database.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-the-barrierwritewithouttransaction-method" class="anchor" aria-hidden="true" href="#the-barrierwritewithouttransaction-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;barrierWriteWithoutTransaction&lt;/code&gt; Method&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;barrierWriteWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Exclusive database access&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The barrier write guarantees exclusive access to the database: the method blocks until all concurrent database accesses are completed, reads and writes, and postpones all other accesses until it completes.&lt;/p&gt;
&lt;p&gt;There is a known limitation: reads performed by &lt;a href="#database-snapshots"&gt;database snapshots&lt;/a&gt; are out of scope, and may run concurrently with the barrier.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-database-snapshots" class="anchor" aria-hidden="true" href="#database-snapshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Snapshots&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#database-pools"&gt;Database pool&lt;/a&gt; can take snapshots.&lt;/strong&gt; A database snapshot sees an unchanging database content, as it existed at the moment it was created.&lt;/p&gt;
&lt;p&gt;"Unchanging" means that a snapshot never sees any database modifications during all its lifetime. And yet it doesn't prevent database updates. This "magic" is made possible by SQLite's WAL mode (see &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;Isolation In SQLite&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;You create snapshots from a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-c1"&gt;makeSnapshot&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can create as many snapshots as you need, regardless of the &lt;a href="#databasepool-configuration"&gt;maximum number of readers&lt;/a&gt; in the pool. A snapshot database connection is closed when the snapshot gets deallocated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A snapshot can be used from any thread.&lt;/strong&gt; Its &lt;code&gt;read&lt;/code&gt; methods is synchronous, and blocks the current thread until your database statements are executed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read values:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Extract a value from the database:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to control the latest committed changes seen by a snapshot, create the snapshot from the pool's writer protected dispatch queue, outside of any transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseSnapshot &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delete all players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;()
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- not in a transaction here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; dbPool.&lt;span class="pl-c1"&gt;makeSnapshot&lt;/span&gt;()
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Other threads may modify the database here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-c1"&gt;makeSnapshot&lt;/span&gt;()

&lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot1.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot2.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Could be anything&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: snapshots currently serialize all database accesses. In the future, snapshots may allow concurrent reads.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-databasewriter-and-databasereader-protocols" class="anchor" aria-hidden="true" href="#databasewriter-and-databasereader-protocols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseWriter and DatabaseReader Protocols&lt;/h3&gt;
&lt;p&gt;Both DatabaseQueue and DatabasePool adopt the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Protocols/DatabaseReader.html" rel="nofollow"&gt;DatabaseReader&lt;/a&gt; and &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Protocols/DatabaseWriter.html" rel="nofollow"&gt;DatabaseWriter&lt;/a&gt; protocols. DatabaseSnapshot adopts DatabaseReader only.&lt;/p&gt;
&lt;p&gt;These protocols provide a unified API that let you write generic code that targets all concurrency modes. They fuel, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#migrations"&gt;Migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only five types adopt those protocols: DatabaseQueue, DatabasePool, DatabaseSnapshot, AnyDatabaseReader, and AnyDatabaseWriter. Expanding this set is not supported: any future GRDB release may break your custom writers and readers, without notice.&lt;/p&gt;
&lt;p&gt;DatabaseReader and DatabaseWriter provide the &lt;em&gt;smallest&lt;/em&gt; common guarantees: they don't erase the differences between queues, pools, and snapshots. See for example &lt;a href="#differences-between-database-queues-and-pools"&gt;Differences between Database Queues and Pools&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, you can prevent some parts of your application from writing in the database by giving them a DatabaseReader:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This class can read in the database, but can't write into it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyReadOnlyComponent&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; reader&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseReader
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;reader&lt;/span&gt;&lt;/span&gt;: DatabaseReader) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;reader&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reader
    }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; component &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyReadOnlyComponent&lt;/span&gt;(&lt;span class="pl-c1"&gt;reader&lt;/span&gt;: dbQueue)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: DatabaseReader is not a &lt;strong&gt;secure&lt;/strong&gt; way to prevent an application component from writing in the database, because write access is just a cast away:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; reader &lt;span class="pl-k"&gt;as?&lt;/span&gt; DatabaseQueue {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-asynchronous-apis" class="anchor" aria-hidden="true" href="#asynchronous-apis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous APIs&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Database queues, pools, snapshots, as well as their common protocols &lt;code&gt;DatabaseReader&lt;/code&gt; and &lt;code&gt;DatabaseWriter&lt;/code&gt; provide asynchronous database access methods.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#asyncread"&gt;&lt;code&gt;asyncRead&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asyncwrite"&gt;&lt;code&gt;asyncWrite&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asyncwritewithouttransaction"&gt;&lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asyncconcurrentread"&gt;&lt;code&gt;asyncConcurrentRead&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-asyncread" class="anchor" aria-hidden="true" href="#asyncread"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncRead&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncRead&lt;/code&gt; method can be used from any thread. It submits your database statements for asynchronous execution on a protected dispatch queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;reader.&lt;span class="pl-smi"&gt;asyncRead&lt;/span&gt; { (&lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Database, &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; result.&lt;span class="pl-c1"&gt;get&lt;/span&gt;()
        &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The argument function accepts a standard &lt;code&gt;Result&amp;lt;Database, Error&amp;gt;&lt;/code&gt; which may contain a failure if it was impossible to start a reading access to the database.&lt;/p&gt;
&lt;p&gt;Any attempt at modifying the database throws an error.&lt;/p&gt;
&lt;p&gt;When you use a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt; or a &lt;a href="#database-snapshots"&gt;database snapshot&lt;/a&gt;, the read has to wait for any eventual concurrent database access performed by this queue or snapshot to complete.&lt;/p&gt;
&lt;p&gt;When you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, reads are generally non-blocking, unless the maximum number of concurrent reads has been reached. In this case, a read has to wait for another read to complete. That maximum number can be &lt;a href="#databasepool-configuration"&gt;configured&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: because it uses the standard &lt;code&gt;Result&lt;/code&gt; type, &lt;code&gt;asyncRead&lt;/code&gt; is only available with a Swift 5+ compiler, starting Xcode 10.2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-asyncwrite" class="anchor" aria-hidden="true" href="#asyncwrite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncWrite&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncWrite&lt;/code&gt; method can be used from any thread. It submits your database statements for asynchronous execution on a protected dispatch queue, wrapped inside a &lt;a href="#transactions-and-savepoints"&gt;database transaction&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;writer.&lt;span class="pl-c1"&gt;asyncWrite&lt;/span&gt;({ (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Void&lt;/span&gt;, &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-smi"&gt;success&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle transaction success&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle transaction error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;asyncWrite&lt;/code&gt; accepts two function arguments. The first one executes your database updates. The second one is a completion function which accepts a database connection and the result of the asynchronous transaction.&lt;/p&gt;
&lt;p&gt;On the first unhandled error during database updates, all changes are reverted, the whole transaction is rollbacked, and the error is passed to the completion function.&lt;/p&gt;
&lt;p&gt;When the transaction completes successfully, the result of the first function is contained in the standard &lt;code&gt;Result&lt;/code&gt; passed to the completion function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;writer.&lt;span class="pl-c1"&gt;asyncWrite&lt;/span&gt;({ (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(newPlayerCount)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new player count: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;newPlayerCount&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle transaction error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The scheduled asynchronous transaction has to wait for any eventual concurrent database write to complete before it can start.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: because it uses the standard &lt;code&gt;Result&lt;/code&gt; type, &lt;code&gt;asyncWrite&lt;/code&gt; is only available with a Swift 5+ compiler, starting Xcode 10.2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-asyncwritewithouttransaction" class="anchor" aria-hidden="true" href="#asyncwritewithouttransaction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt; method can be used from any thread. It submits your database statements for asynchronous execution on a protected dispatch queue, outside of any transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;writer.&lt;span class="pl-smi"&gt;asyncWriteWithoutTransaction&lt;/span&gt; { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Writing outside of any transaction is dangerous.&lt;/strong&gt; You should almost always prefer the &lt;code&gt;asyncWrite&lt;/code&gt; method described above. Please see &lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;The scheduled asynchronous updates have to wait for any eventual concurrent database write to complete before they can start.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-asyncconcurrentread" class="anchor" aria-hidden="true" href="#asyncconcurrentread"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncConcurrentRead&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncConcurrentRead&lt;/code&gt; method is available on database pools only. It is the asynchronous equivalent of the &lt;code&gt;concurrentRead&lt;/code&gt; described in the &lt;a href="#advanced-databasepool"&gt;Advanced DatabasePool&lt;/a&gt; chapter.&lt;/p&gt;
&lt;p&gt;It must be called from a writing dispatch queue, outside of any transaction. You'll get a fatal error otherwise.&lt;/p&gt;
&lt;p&gt;The closure argument is guaranteed to see the database in the last committed state at the moment this method is called. Eventual concurrent database updates are &lt;em&gt;not visible&lt;/em&gt; inside the block.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;asyncConcurrentRead&lt;/code&gt; blocks until it can guarantee its closure argument an isolated access to the last committed state of the database. It then asynchronously executes the closure.&lt;/p&gt;
&lt;p&gt;In the example below, the number of players is fetched concurrently with the player insertion. Yet the future is guaranteed to return zero:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; writer.&lt;span class="pl-smi"&gt;asyncWriteWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Delete all players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;()
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- not in a transaction here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Count players concurrently&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        writer.&lt;span class="pl-smi"&gt;asyncConcurrentRead&lt;/span&gt; { (&lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Database, &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;try&lt;/span&gt; {
                &lt;span class="pl-k"&gt;let&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; result.&lt;span class="pl-c1"&gt;get&lt;/span&gt;()
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;                &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;()
            } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            }
        }
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Insert a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: because it uses the standard &lt;code&gt;Result&lt;/code&gt; type, &lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt; is only available with a Swift 5+ compiler, starting Xcode 10.2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-unsafe-concurrency-apis" class="anchor" aria-hidden="true" href="#unsafe-concurrency-apis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unsafe Concurrency APIs&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Database queues, pools, snapshots, as well as their common protocols &lt;code&gt;DatabaseReader&lt;/code&gt; and &lt;code&gt;DatabaseWriter&lt;/code&gt; provide &lt;em&gt;unsafe&lt;/em&gt; database access methods.&lt;/strong&gt; Unsafe APIs lift &lt;a href="#guarantees-and-rules"&gt;concurrency guarantees&lt;/a&gt;, and allow advanced yet unsafe patterns.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;unsafeRead&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;unsafeRead&lt;/code&gt; method is synchronous, and blocks the current thread until your database statements are executed in a protected dispatch queue. GRDB does just the bare minimum to provide a database connection that can read.&lt;/p&gt;
&lt;p&gt;When used on a database pool, reads are no longer isolated:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dbPool.&lt;span class="pl-smi"&gt;unsafeRead&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Those two values may be different because some other thread&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; may have inserted or deleted a player between the two requests:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When used on a database queue, the closure argument is allowed to write in the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;unsafeReentrantRead&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;unsafeReentrantRead&lt;/code&gt; behaves just as &lt;code&gt;unsafeRead&lt;/code&gt; (see above), and allows reentrant calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db1 &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No "Database methods are not reentrant" fatal error:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    dbPool.&lt;span class="pl-smi"&gt;unsafeReentrantRead&lt;/span&gt; { db2 &lt;span class="pl-k"&gt;in&lt;/span&gt;
        dbPool.&lt;span class="pl-smi"&gt;unsafeReentrantRead&lt;/span&gt; { db3 &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reentrant database accesses make it very easy to break the second &lt;a href="#guarantees-and-rules"&gt;safety rule&lt;/a&gt;, which says: "group related statements within a single call to a DatabaseQueue or DatabasePool database access method.". Using a reentrant method is pretty much likely the sign of a wrong application architecture that needs refactoring.&lt;/p&gt;
&lt;p&gt;There is a single valid use case for reentrant methods, which is when you are unable to control database access scheduling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;unsafeReentrantWrite&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;unsafeReentrantWrite&lt;/code&gt; method is synchronous, and blocks the current thread until your database statements are executed in a protected dispatch queue. Writes are serialized: eventual concurrent database updates are postponed until the block has executed.&lt;/p&gt;
&lt;p&gt;Reentrant calls are allowed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db1 &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No "Database methods are not reentrant" fatal error:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    dbQueue.&lt;span class="pl-smi"&gt;unsafeReentrantWrite&lt;/span&gt; { db2 &lt;span class="pl-k"&gt;in&lt;/span&gt;
        dbQueue.&lt;span class="pl-smi"&gt;unsafeReentrantWrite&lt;/span&gt; { db3 &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reentrant database accesses make it very easy to break the second &lt;a href="#guarantees-and-rules"&gt;safety rule&lt;/a&gt;, which says: "group related statements within a single call to a DatabaseQueue or DatabasePool database access method.". Using a reentrant method is pretty much likely the sign of a wrong application architecture that needs refactoring.&lt;/p&gt;
&lt;p&gt;There is a single valid use case for reentrant methods, which is when you are unable to control database access scheduling.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-dealing-with-external-connections" class="anchor" aria-hidden="true" href="#dealing-with-external-connections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with External Connections&lt;/h3&gt;
&lt;p&gt;The first rule of GRDB is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#guarantees-and-rules"&gt;Rule 1&lt;/a&gt;&lt;/strong&gt;: Have a unique instance of DatabaseQueue or DatabasePool connected to any database file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means that dealing with external connections is not a focus of GRDB. &lt;a href="#guarantees-and-rules"&gt;Guarantees&lt;/a&gt; of GRDB may or may not hold as soon as some external connection modifies a database.&lt;/p&gt;
&lt;p&gt;If you absolutely need multiple connections, then:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reconsider your position&lt;/li&gt;
&lt;li&gt;Read about &lt;a href="https://www.sqlite.org/isolation.html" rel="nofollow"&gt;isolation in SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Learn about &lt;a href="https://www.sqlite.org/lang_transaction.html" rel="nofollow"&gt;locks and transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Become a master of the &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;WAL mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Prepare to setup a &lt;a href="https://www.sqlite.org/c3ref/busy_handler.html" rel="nofollow"&gt;busy handler&lt;/a&gt; with &lt;a href="http://groue.github.io/GRDB.swift/docs/4.6/Structs/Configuration.html" rel="nofollow"&gt;Configuration.busyMode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDB.swift/issues"&gt;Ask questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;p&gt;GRDB is a reasonably fast library, and can deliver quite efficient SQLite access. See &lt;a href="https://github.com/groue/GRDB.swift/wiki/Performance"&gt;Comparing the Performances of Swift SQLite libraries&lt;/a&gt; for an overview.&lt;/p&gt;
&lt;p&gt;You'll find below general advice when you do look after performance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Focus&lt;/li&gt;
&lt;li&gt;Know your platform&lt;/li&gt;
&lt;li&gt;Use transactions&lt;/li&gt;
&lt;li&gt;Don't do useless work&lt;/li&gt;
&lt;li&gt;Learn about SQL strengths and weaknesses&lt;/li&gt;
&lt;li&gt;Avoid strings &amp;amp; dictionaries&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-focus" class="anchor" aria-hidden="true" href="#performance-tip-focus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: focus&lt;/h3&gt;
&lt;p&gt;You don't know which part of your program needs improvement until you have run a benchmarking tool.&lt;/p&gt;
&lt;p&gt;Don't make any assumption, avoid optimizing code too early, and use &lt;a href="https://developer.apple.com/library/ios/documentation/ToolsLanguages/Conceptual/Xcode_Overview/MeasuringPerformance.html" rel="nofollow"&gt;Instruments&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-know-your-platform" class="anchor" aria-hidden="true" href="#performance-tip-know-your-platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: know your platform&lt;/h3&gt;
&lt;p&gt;If your application processes a huge JSON file and inserts thousands of rows in the database right from the main thread, it will quite likely become unresponsive, and provide a sub-quality user experience.&lt;/p&gt;
&lt;p&gt;If not done yet, read the &lt;a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/ConcurrencyProgrammingGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008091" rel="nofollow"&gt;Concurrency Programming Guide&lt;/a&gt; and learn how to perform heavy computations without blocking your application.&lt;/p&gt;
&lt;p&gt;Most GRBD APIs are &lt;a href="#database-connections"&gt;synchronous&lt;/a&gt;. Spawning them into parallel queues is as easy as:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; { 
    dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Perform database work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    DispatchQueue.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;async&lt;/span&gt; { 
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; update your user interface&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-use-transactions" class="anchor" aria-hidden="true" href="#performance-tip-use-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: use transactions&lt;/h3&gt;
&lt;p&gt;Performing multiple updates to the database is much faster when executed inside a &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt;. This is because a transaction allows SQLite to postpone writing changes to disk until the final commit:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Inefficient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Efficient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.write&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Efficient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeInTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-dont-do-useless-work" class="anchor" aria-hidden="true" href="#performance-tip-dont-do-useless-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: don't do useless work&lt;/h3&gt;
&lt;p&gt;Obviously, no code is faster than any code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't fetch columns you don't use&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(idColumn, nameColumn).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your Player type can't be built without other columns (it has non-optional properties for other columns), &lt;em&gt;do define and use a different type&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't fetch rows you don't use&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;a href="#fetching-methods"&gt;fetchOne&lt;/a&gt; when you need a single value, and otherwise limit your queries at the database level:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wrong way: this code may discard hundreds of useless database rows&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;let&lt;/span&gt; hallOfFame &lt;span class="pl-k"&gt;=&lt;/span&gt; players.&lt;span class="pl-c1"&gt;prefix&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Better way&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hallOfFame &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;).&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Don't copy values unless necessary&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Particularly: the Array returned by the &lt;code&gt;fetchAll&lt;/code&gt; method, and the cursor returned by &lt;code&gt;fetchCursor&lt;/code&gt; aren't the same:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fetchAll&lt;/code&gt; copies all values from the database into memory, when &lt;code&gt;fetchCursor&lt;/code&gt; iterates database results as they are generated by SQLite, taking profit from SQLite efficiency.&lt;/p&gt;
&lt;p&gt;You should only load arrays if you need to keep them for later use (such as iterating their contents in the main thread). Otherwise, use &lt;code&gt;fetchCursor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for more information about &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchCursor&lt;/code&gt;. See also the &lt;a href="#data-and-memory-savings"&gt;Row.dataNoCopy&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't update rows unless necessary&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;An UPDATE statement is costly: SQLite has to look for the updated row, update values, and write changes to disk.&lt;/p&gt;
&lt;p&gt;When the overwritten values are the same as the existing ones, it's thus better to avoid performing the UPDATE statement:.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-learn-about-sql-strengths-and-weaknesses" class="anchor" aria-hidden="true" href="#performance-tip-learn-about-sql-strengths-and-weaknesses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: learn about SQL strengths and weaknesses&lt;/h3&gt;
&lt;p&gt;Consider a simple use case: your store application has to display a list of authors with the number of available books:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;J. M. Coetzee (6)&lt;/li&gt;
&lt;li&gt;Herman Melville (1)&lt;/li&gt;
&lt;li&gt;Alice Munro (3)&lt;/li&gt;
&lt;li&gt;Kim Stanley Robinson (7)&lt;/li&gt;
&lt;li&gt;Oliver Sacks (4)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following code is inefficient. It is an example of the &lt;a href="http://stackoverflow.com/questions/97197/what-is-the-n1-selects-issue" rel="nofollow"&gt;N+1 problem&lt;/a&gt;, because it performs one query to load the authors, and then N queries, as many as there are authors. This turns very inefficient as the number of authors grows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM author&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; authors &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Author.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;for&lt;/span&gt; author &lt;span class="pl-k"&gt;in&lt;/span&gt; authors {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM book WHERE authorId = ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    author.&lt;span class="pl-smi"&gt;bookCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Book.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(authorIdColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; author.&lt;span class="pl-smi"&gt;id&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead, perform &lt;em&gt;a single query&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    SELECT author.*, COUNT(book.id) AS bookCount&lt;/span&gt;
&lt;span class="pl-s"&gt;    FROM author&lt;/span&gt;
&lt;span class="pl-s"&gt;    LEFT JOIN book ON book.authorId = author.id&lt;/span&gt;
&lt;span class="pl-s"&gt;    GROUP BY author.id&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; authors &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Author.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above, consider extending your Author with an extra bookCount property, or define and use a different type.&lt;/p&gt;
&lt;p&gt;Generally, define indexes on your database tables, and use SQLite's efficient query planning:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/queryplanner.html" rel="nofollow"&gt;Query Planning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/lang_createindex.html" rel="nofollow"&gt;CREATE INDEX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/optoverview.html" rel="nofollow"&gt;The SQLite Query Planner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/eqp.html" rel="nofollow"&gt;EXPLAIN QUERY PLAN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-avoid-strings--dictionaries" class="anchor" aria-hidden="true" href="#performance-tip-avoid-strings--dictionaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: avoid strings &amp;amp; dictionaries&lt;/h3&gt;
&lt;p&gt;The String and Dictionary Swift types are better avoided when you look for the best performance.&lt;/p&gt;
&lt;p&gt;Now GRDB &lt;a href="#records"&gt;records&lt;/a&gt;, for your convenience, do use strings and dictionaries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; email&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;required&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;row&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        name &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        email &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
    }
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; name          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; email        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When convenience hurts performance, you can still use records, but you have better avoiding their string and dictionary-based methods.&lt;/p&gt;
&lt;p&gt;For example, when fetching values, prefer loading columns by index:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Strings &amp;amp; dictionaries&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column indexes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, name, email FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(idColumn, nameColumn, emailColumn)
&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, request)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; email&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: id, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: name, &lt;span class="pl-c1"&gt;email&lt;/span&gt;: email)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When inserting values, use reusable &lt;a href="#prepared-statements"&gt;prepared statements&lt;/a&gt;, and set statements values with an &lt;em&gt;array&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Strings &amp;amp; dictionaries&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prepared statement&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; insertStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepareStatement&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, email) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only use the unsafe arguments setter if you are sure that you provide&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; all statement arguments. A mistake can store unexpected values in&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the database.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    insertStatement.&lt;span class="pl-c1"&gt;unsafeSetArguments&lt;/span&gt;([player.&lt;span class="pl-smi"&gt;name&lt;/span&gt;, player.&lt;span class="pl-smi"&gt;email&lt;/span&gt;])
    &lt;span class="pl-k"&gt;try&lt;/span&gt; insertStatement.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-do-i-create-a-database-in-my-application"&gt;How do I create a database in my application?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-open-a-database-stored-as-a-resource-of-my-application"&gt;How do I open a database stored as a resource of my application?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-close-a-database-connection"&gt;How do I close a database connection?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-print-a-request-as-sql"&gt;How do I print a request as SQL?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#generic-parameter-t-could-not-be-inferred"&gt;Generic parameter 'T' could not be inferred&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sqlite-error-10-disk-io-error-sqlite-error-23-not-authorized"&gt;SQLite error 10 "disk I/O error", SQLite error 23 "not authorized"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sqlite-error-21-wrong-number-of-statement-arguments-with-like-queries"&gt;SQLite error 21 "wrong number of statement arguments" with LIKE queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-are-experimental-features"&gt;What Are Experimental Features?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-create-a-database-in-my-application" class="anchor" aria-hidden="true" href="#how-do-i-create-a-database-in-my-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I create a database in my application?&lt;/h3&gt;
&lt;p&gt;This question assumes that your application has to create a new database from scratch. If your app has to open an existing database that is embedded inside your application as a resource, see &lt;a href="#how-do-i-open-a-database-stored-as-a-resource-of-my-application"&gt;How do I open a database stored as a resource of my application?&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;The database has to be stored in a valid place where it can be created and modified. For example, in the &lt;a href="https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html" rel="nofollow"&gt;Application Support directory&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; databaseURL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; FileManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;
    .&lt;span class="pl-c1"&gt;url&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: .&lt;span class="pl-smi"&gt;applicationSupportDirectory&lt;/span&gt;, &lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userDomainMask&lt;/span&gt;, &lt;span class="pl-c1"&gt;appropriateFor&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;create&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: databaseURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-open-a-database-stored-as-a-resource-of-my-application" class="anchor" aria-hidden="true" href="#how-do-i-open-a-database-stored-as-a-resource-of-my-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I open a database stored as a resource of my application?&lt;/h3&gt;
&lt;p&gt;If your application does not need to modify the database, open a read-only &lt;a href="#database-connections"&gt;connection&lt;/a&gt; to your resource:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPath &lt;span class="pl-k"&gt;=&lt;/span&gt; Bundle.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-c1"&gt;path&lt;/span&gt;(&lt;span class="pl-c1"&gt;forResource&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the application should modify the database, you need to copy it to a place where it can be modified. For example, in the &lt;a href="https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html" rel="nofollow"&gt;Application Support directory&lt;/a&gt;. Only then, open a &lt;a href="#database-connections"&gt;connection&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; fileManager &lt;span class="pl-k"&gt;=&lt;/span&gt; FileManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager
    .&lt;span class="pl-c1"&gt;url&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: .&lt;span class="pl-smi"&gt;applicationSupportDirectory&lt;/span&gt;, &lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userDomainMask&lt;/span&gt;, &lt;span class="pl-c1"&gt;appropriateFor&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;create&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-smi"&gt;path&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;fileManager.&lt;span class="pl-c1"&gt;fileExists&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: dbPath) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; dbResourcePath &lt;span class="pl-k"&gt;=&lt;/span&gt; Bundle.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-c1"&gt;path&lt;/span&gt;(&lt;span class="pl-c1"&gt;forResource&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager.&lt;span class="pl-c1"&gt;copyItem&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: dbResourcePath, &lt;span class="pl-c1"&gt;toPath&lt;/span&gt;: dbPath)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-close-a-database-connection" class="anchor" aria-hidden="true" href="#how-do-i-close-a-database-connection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I close a database connection?&lt;/h3&gt;
&lt;p&gt;Database connections are managed by &lt;a href="#database-queues"&gt;database queues&lt;/a&gt; and &lt;a href="#database-pools"&gt;pools&lt;/a&gt;. A connection is closed when its database queue or pool is deallocated, and all usages of this connection are completed.&lt;/p&gt;
&lt;p&gt;Database accesses that run in background threads postpone the closing of connections.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-print-a-request-as-sql" class="anchor" aria-hidden="true" href="#how-do-i-print-a-request-as-sql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I print a request as SQL?&lt;/h3&gt;
&lt;p&gt;When you want to debug a request that does not deliver the expected results, you may want to print the SQL that is actually executed.&lt;/p&gt;
&lt;p&gt;You can turn your request into a &lt;code&gt;SQLRequest&lt;/code&gt; instance:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(originColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(priceColumn)
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sqlRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;SQLRequest&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;request&lt;/span&gt;: request)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(sqlRequest.&lt;span class="pl-smi"&gt;sql&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints SELECT * FROM wine WHERE origin = ? ORDER BY price&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(sqlRequest.&lt;span class="pl-smi"&gt;arguments&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints ["Burgundy"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another option is to setup a tracing function that will print out all SQL requests executed by your application. You provide the trace function when you connect to the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;trace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all SQL statements&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(originColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(priceColumn)
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints SELECT * FROM wine WHERE origin = 'Burgundy' ORDER BY price&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;‚òùÔ∏è&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the generated SQL may change between GRDB releases, without notice: don't have your application rely on any specific SQL output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-generic-parameter-t-could-not-be-inferred" class="anchor" aria-hidden="true" href="#generic-parameter-t-could-not-be-inferred"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generic parameter 'T' could not be inferred&lt;/h3&gt;
&lt;p&gt;You may get this error when using the &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; methods of database queues and pools:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generic parameter 'T' could not be inferred&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; result &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; result
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is a limitation of the Swift compiler.&lt;/p&gt;
&lt;p&gt;The general workaround is to explicitly declare the type of the closure result:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; General Workaround&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; result &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; result
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also, when possible, write a single-line closure:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Single-line closure workaround:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-sqlite-error-10-disk-io-error-sqlite-error-23-not-authorized" class="anchor" aria-hidden="true" href="#sqlite-error-10-disk-io-error-sqlite-error-23-not-authorized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite error 10 "disk I/O error", SQLite error 23 "not authorized"&lt;/h3&gt;
&lt;p&gt;Those errors may be the sign that SQLite can't access the database due to &lt;a href="#data-protection"&gt;data protection&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When your application should be able to run in the background on a locked device, it has to catch this error, and, for example, wait for &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationdelegate/1623044-applicationprotecteddatadidbecom" rel="nofollow"&gt;UIApplicationDelegate.applicationProtectedDataDidBecomeAvailable(_:)&lt;/a&gt; or &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationprotecteddatadidbecomeavailable" rel="nofollow"&gt;UIApplicationProtectedDataDidBecomeAvailable&lt;/a&gt; notification and retry the failed database operation.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError &lt;span class="pl-k"&gt;where&lt;/span&gt;
    error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_IOERR&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt;
    error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_AUTH&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle possible data protection error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This error can also be prevented altogether by using a more relaxed &lt;a href="https://developer.apple.com/reference/foundation/filemanager/1653059-file_protection_values" rel="nofollow"&gt;file protection&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sqlite-error-21-wrong-number-of-statement-arguments-with-like-queries" class="anchor" aria-hidden="true" href="#sqlite-error-21-wrong-number-of-statement-arguments-with-like-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite error 21 "wrong number of statement arguments" with LIKE queries&lt;/h3&gt;
&lt;p&gt;You may get the error "wrong number of statement arguments" when executing a LIKE query similar to:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name LIKE '%?%'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [name])
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem lies in the &lt;code&gt;'%?%'&lt;/code&gt; pattern.&lt;/p&gt;
&lt;p&gt;SQLite only interprets &lt;code&gt;?&lt;/code&gt; as a parameter when it is a placeholder for a whole value (int, double, string, blob, null). In this incorrect query, &lt;code&gt;?&lt;/code&gt; is just a character in the &lt;code&gt;'%?%'&lt;/code&gt; string: it is not a query parameter, and is not processed in any way. See &lt;a href="https://www.sqlite.org/lang_expr.html#varparam" rel="nofollow"&gt;https://www.sqlite.org/lang_expr.html#varparam&lt;/a&gt; for more information about SQLite parameters.&lt;/p&gt;
&lt;p&gt;To fix the error, you can feed the request with the pattern itself, instead of the name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; players&lt;span class="pl-k"&gt;:&lt;/span&gt; [Player] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;%&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name LIKE ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [pattern])
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-what-are-experimental-features" class="anchor" aria-hidden="true" href="#what-are-experimental-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What Are Experimental Features?&lt;/h3&gt;
&lt;p&gt;Since GRDB 1.0, all backwards compatibility guarantees of &lt;a href="http://semver.org" rel="nofollow"&gt;semantic versioning&lt;/a&gt; apply: no breaking change will happen until the next major version of the library.&lt;/p&gt;
&lt;p&gt;There is an exception, though: &lt;em&gt;experimental features&lt;/em&gt;, marked with the "&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;üî•&lt;/g-emoji&gt; EXPERIMENTAL&lt;/strong&gt;" badge. Those are advanced features that are too young, or lack user feedback. They are not stabilized yet.&lt;/p&gt;
&lt;p&gt;Those experimental features are not protected by semantic versioning, and may break between two minor releases of the library. To help them becoming stable, &lt;a href="https://github.com/groue/GRDB.swift/issues"&gt;your feedback&lt;/a&gt; is greatly appreciated.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sample-code" class="anchor" aria-hidden="true" href="#sample-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample Code&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="#documentation"&gt;Documentation&lt;/a&gt; is full of GRDB snippets.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt;: A sample iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/WWDCCompanion"&gt;WWDC Companion&lt;/a&gt;: A sample iOS application.&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;GRDB.xcworkspace&lt;/code&gt;: it contains GRDB-enabled playgrounds to play with.&lt;/li&gt;
&lt;li&gt;How to synchronize a database table with a JSON payload: &lt;a href="Documentation/Playgrounds/JSONSynchronization.playground/Contents.swift"&gt;JSONSynchronization.playground&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Thanks&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pierlis.com" rel="nofollow"&gt;Pierlis&lt;/a&gt;, where we write great software.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alextrob"&gt;@alextrob&lt;/a&gt;, &lt;a href="https://github.com/bellebethcooper"&gt;@bellebethcooper&lt;/a&gt;, &lt;a href="https://github.com/bfad"&gt;@bfad&lt;/a&gt;, &lt;a href="https://github.com/cfilipov"&gt;@cfilipov&lt;/a&gt;, &lt;a href="https://github.com/charlesmchen-signal"&gt;@charlesmchen-signal&lt;/a&gt;, &lt;a href="https://github.com/Chiliec"&gt;@Chiliec&lt;/a&gt;, &lt;a href="https://github.com/chrisballinger"&gt;@chrisballinger&lt;/a&gt;, &lt;a href="https://github.com/darrenclark"&gt;@darrenclark&lt;/a&gt;, &lt;a href="https://github.com/davidkraus"&gt;@davidkraus&lt;/a&gt;, &lt;a href="http://github.com/fpillet"&gt;@fpillet&lt;/a&gt;, &lt;a href="https://github.com/gusrota"&gt;@gusrota&lt;/a&gt;, &lt;a href="https://github.com/hartbit"&gt;@hartbit&lt;/a&gt;, &lt;a href="https://github.com/kdubb"&gt;@kdubb&lt;/a&gt;, &lt;a href="https://github.com/kluufger"&gt;@kluufger&lt;/a&gt;, &lt;a href="https://github.com/KyleLeneau"&gt;@KyleLeneau&lt;/a&gt;, &lt;a href="https://github.com/Marus"&gt;@Marus&lt;/a&gt;, &lt;a href="https://github.com/MaxDesiatov"&gt;@MaxDesiatov&lt;/a&gt;, &lt;a href="https://github.com/michaelkirk-signal"&gt;@michaelkirk-signal&lt;/a&gt;, &lt;a href="https://github.com/pakko972"&gt;@pakko972&lt;/a&gt;, &lt;a href="https://github.com/peter-ss"&gt;@peter-ss&lt;/a&gt;, &lt;a href="https://github.com/pierlo"&gt;@pierlo&lt;/a&gt;, &lt;a href="https://github.com/pocketpixels"&gt;@pocketpixels&lt;/a&gt;, &lt;a href="https://github.com/robcas3"&gt;@robcas3&lt;/a&gt;, &lt;a href="https://github.com/runhum"&gt;@runhum&lt;/a&gt;, &lt;a href="https://github.com/schveiguy"&gt;@schveiguy&lt;/a&gt;, &lt;a href="https://github.com/SD10"&gt;@SD10&lt;/a&gt;, &lt;a href="https://github.com/sobri909"&gt;@sobri909&lt;/a&gt;, &lt;a href="https://github.com/sroddy"&gt;@sroddy&lt;/a&gt;, &lt;a href="https://github.com/swiftlyfalling"&gt;@swiftlyfalling&lt;/a&gt;, &lt;a href="https://github.com/Timac"&gt;@Timac&lt;/a&gt;, &lt;a href="https://github.com/valexa"&gt;@valexa&lt;/a&gt;, and &lt;a href="https://github.com/zmeyc"&gt;@zmeyc&lt;/a&gt; for their contributions, help, and feedback on GRDB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aymerick"&gt;@aymerick&lt;/a&gt; and &lt;a href="https://github.com/kali"&gt;@kali&lt;/a&gt; because SQL.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ccgus/fmdb"&gt;ccgus/fmdb&lt;/a&gt; for its excellency.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://www.w3.org/Provider/Style/URI" rel="nofollow"&gt;URIs don't change: people change them.&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-changes-tracking" class="anchor" aria-hidden="true" href="#changes-tracking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changes Tracking&lt;/h4&gt;
&lt;p&gt;This chapter has been renamed &lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-fetchedrecordscontroller" class="anchor" aria-hidden="true" href="#fetchedrecordscontroller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FetchedRecordsController&lt;/h4&gt;
&lt;p&gt;This chapter has &lt;a href="Documentation/FetchedRecordsController.md"&gt;moved&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-persistable-protocol" class="anchor" aria-hidden="true" href="#persistable-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistable Protocol&lt;/h4&gt;
&lt;p&gt;This protocol has been renamed &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; in GRDB 3.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-rowconvertible-protocol" class="anchor" aria-hidden="true" href="#rowconvertible-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RowConvertible Protocol&lt;/h4&gt;
&lt;p&gt;This protocol has been renamed &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; in GRDB 3.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-tablemapping-protocol" class="anchor" aria-hidden="true" href="#tablemapping-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TableMapping Protocol&lt;/h4&gt;
&lt;p&gt;This protocol has been renamed &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; in GRDB 3.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-customized-decoding-of-database-rows" class="anchor" aria-hidden="true" href="#customized-decoding-of-database-rows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customized Decoding of Database Rows&lt;/h4&gt;
&lt;p&gt;This chapter has been renamed &lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-full-text-search" class="anchor" aria-hidden="true" href="#full-text-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full-Text Search&lt;/h4&gt;
&lt;p&gt;This chapter has &lt;a href="Documentation/FullTextSearch.md"&gt;moved&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-enabling-fts5-support" class="anchor" aria-hidden="true" href="#enabling-fts5-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling FTS5 Support&lt;/h4&gt;
&lt;p&gt;This chapter has &lt;a href="Documentation/FullTextSearch.md#enabling-fts5-support"&gt;moved&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>groue</author><guid isPermaLink="false">https://github.com/groue/GRDB.swift</guid><pubDate>Mon, 09 Dec 2019 00:10:00 GMT</pubDate></item><item><title>ninjaprox/NVActivityIndicatorView #11 in Swift, This month</title><link>https://github.com/ninjaprox/NVActivityIndicatorView</link><description>&lt;p&gt;&lt;i&gt;A collection of awesome loading animations&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nvactivityindicatorview" class="anchor" aria-hidden="true" href="#nvactivityindicatorview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NVActivityIndicatorView&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ninjaprox/NVActivityIndicatorView" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2407ce3bc76f106817054e6a934f11e75970dd9f/68747470733a2f2f7472617669732d63692e6f72672f6e696e6a6170726f782f4e564163746976697479496e64696361746f72566965772e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ninjaprox/NVActivityIndicatorView.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/cocoapods/v/NVActivityIndicatorView.svg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1dfe75fd808314fb6e66be27cfb2cd24cc004783/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4e564163746976697479496e64696361746f72566965772e737667" alt="Cocoapods Compatible" data-canonical-src="https://img.shields.io/cocoapods/v/NVActivityIndicatorView.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage Compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://houndci.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c940d021ef775a44e0880bc3ba124a6bee5fefb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657669657765645f62792d486f756e642d3845363442302e737667" alt="Reviewed by Hound" data-canonical-src="https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;NVActivityIndicatorView&lt;/code&gt; is a collection of awesome loading animations.&lt;/p&gt;
&lt;p&gt;This is original a fork from &lt;a href="https://github.com/gontovnik/DGActivityIndicatorView"&gt;DGActivityIndicatorView&lt;/a&gt;, inspired by &lt;a href="https://github.com/ConnorAtherton/loaders.css"&gt;Loaders.css&lt;/a&gt;, written in Swift with full implementation of animations, plus more.&lt;/p&gt;
&lt;p&gt;You can also find Objective-C version of this &lt;a href="https://github.com/ninjaprox/DGActivityIndicatorView"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/ninjaprox/NVActivityIndicatorView/master/Demo.gif"&gt;&lt;img src="https://raw.githubusercontent.com/ninjaprox/NVActivityIndicatorView/master/Demo.gif" alt="alt tag" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For first-hand experience, just open the project and run it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-animation-types" class="anchor" aria-hidden="true" href="#animation-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animation types&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. ballPulse&lt;/td&gt;
&lt;td&gt;2. ballGridPulse&lt;/td&gt;
&lt;td&gt;3. ballClipRotate&lt;/td&gt;
&lt;td&gt;4. squareSpin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. ballClipRotatePulse&lt;/td&gt;
&lt;td&gt;6. ballClipRotateMultiple&lt;/td&gt;
&lt;td&gt;7. ballPulseRise&lt;/td&gt;
&lt;td&gt;8. ballRotate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9. cubeTransition&lt;/td&gt;
&lt;td&gt;10. ballZigZag&lt;/td&gt;
&lt;td&gt;11. ballZigZagDeflect&lt;/td&gt;
&lt;td&gt;12. ballTrianglePath&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13. ballScale&lt;/td&gt;
&lt;td&gt;14. lineScale&lt;/td&gt;
&lt;td&gt;15. lineScaleParty&lt;/td&gt;
&lt;td&gt;16. ballScaleMultiple&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17. ballPulseSync&lt;/td&gt;
&lt;td&gt;18. ballBeat&lt;/td&gt;
&lt;td&gt;19. lineScalePulseOut&lt;/td&gt;
&lt;td&gt;20. lineScalePulseOutRapid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21. ballScaleRipple&lt;/td&gt;
&lt;td&gt;22. ballScaleRippleMultiple&lt;/td&gt;
&lt;td&gt;23. ballSpinFadeLoader&lt;/td&gt;
&lt;td&gt;24. lineSpinFadeLoader&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25. triangleSkewSpin&lt;/td&gt;
&lt;td&gt;26. pacman&lt;/td&gt;
&lt;td&gt;27. ballGridBeat&lt;/td&gt;
&lt;td&gt;28. semiCircleSpin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29. ballRotateChase&lt;/td&gt;
&lt;td&gt;30. orbit&lt;/td&gt;
&lt;td&gt;31. audioEqualizer&lt;/td&gt;
&lt;td&gt;32. circleStrokeSpin&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cocoapods&lt;/h3&gt;
&lt;p&gt;Install &lt;a href="https://cocoapods.org/#install" rel="nofollow"&gt;Cocoapods&lt;/a&gt; if need be.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gem install cocoapods&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add &lt;code&gt;NVActivityIndicatorView&lt;/code&gt; in your &lt;code&gt;Podfile&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NVActivityIndicatorView&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you're using &lt;code&gt;NVActivityIndicatorView&lt;/code&gt; in an app extension, use &lt;code&gt;NVActivityIndicatorView/AppExtension&lt;/code&gt; instead.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NVActivityIndicatorView/AppExtension&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run the following command.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Please refer to the migration note for version &lt;a href="#version-370"&gt;&lt;code&gt;3.7.0&lt;/code&gt;&lt;/a&gt; below.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Install &lt;a href="https://github.com/Carthage/Carthage#installing-carthage"&gt;Carthage&lt;/a&gt; if need be.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add &lt;code&gt;NVActivityIndicatorView&lt;/code&gt; in your &lt;code&gt;Cartfile&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ninjaprox/NVActivityIndicatorView&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;carthage&lt;/code&gt; to build the framework and drag the built &lt;code&gt;NVActivityIndicatorView.framework&lt;/code&gt; in the folder appropriateto the platform, e.g. iOS, tvOS, into your Xcode project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; You might encounter compile issue, if so please use &lt;code&gt;carthage&lt;/code&gt; branch instead. Check issue &lt;a href="https://github.com/ninjaprox/NVActivityIndicatorView/issues/101"&gt;#101&lt;/a&gt; for more information.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;Copy &lt;code&gt;NVActivityIndicatorView&lt;/code&gt; folder to your project. That's it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Make sure that all files in &lt;code&gt;NVActivityIndicatorView&lt;/code&gt; included in Compile Sources in Build Phases.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you encounter issues while uploading the app to iTunes Connect, remove the &lt;code&gt;Info.plist&lt;/code&gt; file in &lt;code&gt;NVActivityIndicatorView&lt;/code&gt;. Check issue &lt;a href="https://github.com/ninjaprox/NVActivityIndicatorView/issues/129"&gt;#129&lt;/a&gt; for more information.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-migration" class="anchor" aria-hidden="true" href="#migration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migration&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-version-440" class="anchor" aria-hidden="true" href="#version-440"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 4.4.0&lt;/h3&gt;
&lt;p&gt;This version requires Xcode 10.1 and Swift 4.2.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-version-400" class="anchor" aria-hidden="true" href="#version-400"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 4.0.0&lt;/h3&gt;
&lt;p&gt;This version requires Xcode 9.0 and Swift 4.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-version-370" class="anchor" aria-hidden="true" href="#version-370"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.7.0&lt;/h3&gt;
&lt;p&gt;This version splits &lt;code&gt;NVActivityIndicatorView&lt;/code&gt; pod to 2 subpods &lt;code&gt;NVActivityIndicatorView/Presenter&lt;/code&gt; and &lt;code&gt;NVActivityIndicatorView/AppExtension&lt;/code&gt;. There is no need to change &lt;code&gt;pod NVActivityIndicatorView&lt;/code&gt; to &lt;code&gt;pod NVActivityIndicatorView/Presenter&lt;/code&gt; since it will be installed by default if you use the main pod name.&lt;/p&gt;
&lt;p&gt;However, if you want to use &lt;code&gt;NVActivityIndicatorView&lt;/code&gt; in an app extension, use &lt;code&gt;pod NVActivityIndicatorView/AppExtension&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Related issue &lt;a href="https://github.com/ninjaprox/NVActivityIndicatorView/issues/119"&gt;#119&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Firstly, import &lt;code&gt;NVActivityIndicatorView&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;NVActivityIndicatorView&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-initialization" class="anchor" aria-hidden="true" href="#initialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Initialization&lt;/h3&gt;
&lt;p&gt;Then, there are two ways you can create &lt;code&gt;NVActivityIndicatorView&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;By storyboard, changing class of any &lt;code&gt;UIView&lt;/code&gt; to &lt;code&gt;NVActivityIndicatorView&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Set Module to &lt;code&gt;NVActivityIndicatorView&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;By code, using initializer. All parameters other than &lt;code&gt;frame&lt;/code&gt; are optional and &lt;code&gt;NVActivityIndicatorView.DEFAULT_*&lt;/code&gt; are used as default values.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;NVActivityIndicatorView&lt;/span&gt;(&lt;span class="pl-c1"&gt;frame&lt;/span&gt;: frame, &lt;span class="pl-c1"&gt;type&lt;/span&gt;: type, &lt;span class="pl-c1"&gt;color&lt;/span&gt;: color, &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: padding)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-control" class="anchor" aria-hidden="true" href="#control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Control&lt;/h3&gt;
&lt;p&gt;Start animating.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;activityIndicatorView.&lt;span class="pl-c1"&gt;startAnimating&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Stop animating.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;activityIndicatorView.&lt;span class="pl-c1"&gt;stopAnimating&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Determine if it is animating.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;animating &lt;span class="pl-k"&gt;=&lt;/span&gt; activityIndicatorView.&lt;span class="pl-smi"&gt;isAnimating&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-change-properties" class="anchor" aria-hidden="true" href="#change-properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change properties&lt;/h3&gt;
&lt;p&gt;In storyboard, you can change all properties in Attributes inspector tab of Utilities panel.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Use one of values (case-insensitive) in &lt;a href="#animation-types"&gt;Animation types&lt;/a&gt; for &lt;code&gt;Type Name&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;All properties are public so you can change them after initializing.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; All changes must be made before calling &lt;code&gt;startAnimating()&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ui-blocker" class="anchor" aria-hidden="true" href="#ui-blocker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI blocker&lt;/h3&gt;
&lt;p&gt;By conforming &lt;code&gt;NVActivityIndicatorViewable&lt;/code&gt; protocol, you can use &lt;code&gt;NVActivityIndicatorView&lt;/code&gt; as UI blocker for &lt;code&gt;UIViewController&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;NVActivityIndicatorViewable &lt;/span&gt;{ }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start animating.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;startAnimating&lt;/span&gt;(size, message) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; plus other parameters as in initializer.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Stop animating.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;stopAnimating&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check if it is animating.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;animating &lt;span class="pl-k"&gt;=&lt;/span&gt; isAnimating&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can use &lt;code&gt;NVActivityIndicatorPresenter&lt;/code&gt; to display UI blocker anywhere.&lt;/p&gt;
&lt;p&gt;Start animating.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; activityData &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ActivityData&lt;/span&gt;()

NVActivityIndicatorPresenter.&lt;span class="pl-smi"&gt;sharedInstance&lt;/span&gt;.&lt;span class="pl-c1"&gt;startAnimating&lt;/span&gt;(activityData)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Check &lt;a href="https://nvactivityindicatorview.vinhis.me" rel="nofollow"&gt;documentation&lt;/a&gt; for detail of &lt;code&gt;ActivityData&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Stop animating.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;NVActivityIndicatorPresenter.&lt;span class="pl-smi"&gt;sharedInstance&lt;/span&gt;.&lt;span class="pl-c1"&gt;stopAnimating&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Change message.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;NVActivityIndicatorPresenter.&lt;span class="pl-smi"&gt;sharedInstance&lt;/span&gt;.&lt;span class="pl-c1"&gt;setMessage&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check if it is animating.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;animating &lt;span class="pl-k"&gt;=&lt;/span&gt; NVActivityIndicatorPresenter.&lt;span class="pl-smi"&gt;sharedInstance&lt;/span&gt;.&lt;span class="pl-smi"&gt;isAnimating&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-fade-inout-animation" class="anchor" aria-hidden="true" href="#fade-inout-animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fade in/out animation&lt;/h4&gt;
&lt;p&gt;You have control over showing and hiding UI blocker animation.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;startAnimating&lt;/span&gt;(&lt;span class="pl-c1"&gt;fadeInAnimation&lt;/span&gt;: fadeInAnimation)
&lt;span class="pl-c1"&gt;stopAnimating&lt;/span&gt;(fadeOutAnimation)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check &lt;code&gt;DEFAULT_FADE_IN_ANIMATION&lt;/code&gt; and &lt;code&gt;DEFAULT_FADE_OUT_ANIMATION&lt;/code&gt; for examples of how to implement animation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgment" class="anchor" aria-hidden="true" href="#acknowledgment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgment&lt;/h2&gt;
&lt;p&gt;Thanks &lt;a href="https://github.com/ConnorAtherton"&gt;Connor Atherton&lt;/a&gt; for great loaders and &lt;a href="https://github.com/gontovnik"&gt;Danil Gontovnik&lt;/a&gt; for kick-start.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The MIT License (MIT)&lt;/p&gt;
&lt;p&gt;Copyright (c) 2016 Vinh Nguyen &lt;a href="http://twitter.com/ninjaprox" rel="nofollow"&gt;@ninjaprox&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ninjaprox</author><guid isPermaLink="false">https://github.com/ninjaprox/NVActivityIndicatorView</guid><pubDate>Mon, 09 Dec 2019 00:11:00 GMT</pubDate></item><item><title>raywenderlich/swift-algorithm-club #12 in Swift, This month</title><link>https://github.com/raywenderlich/swift-algorithm-club</link><description>&lt;p&gt;&lt;i&gt;Algorithms and data structures in Swift, with explanations!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Images/SwiftAlgorithm-410-transp.png"&gt;&lt;img src="Images/SwiftAlgorithm-410-transp.png" alt="Swift Algorithm Club" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-welcome-to-the-swift-algorithm-club" class="anchor" aria-hidden="true" href="#welcome-to-the-swift-algorithm-club"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to the Swift Algorithm Club!&lt;/h1&gt;
&lt;p&gt;Here you'll find implementations of popular algorithms and data structures in everyone's favorite new language Swift, with detailed explanations of how they work.&lt;/p&gt;
&lt;p&gt;If you're a computer science student who needs to learn this stuff for exams -- or if you're a self-taught programmer who wants to brush up on the theory behind your craft -- you've come to the right place!&lt;/p&gt;
&lt;p&gt;The goal of this project is to &lt;strong&gt;explain how algorithms work&lt;/strong&gt;. The focus is on clarity and readability of the code, not on making a reusable library that you can drop into your own projects. That said, most of the code should be ready for production use but you may need to tweak it to fit into your own codebase.&lt;/p&gt;
&lt;p&gt;Code is compatible with &lt;strong&gt;Xcode 10&lt;/strong&gt; and &lt;strong&gt;Swift 4.2&lt;/strong&gt;. We'll keep this updated with the latest version of Swift. If you're interested in a GitHub pages version of the repo, check out &lt;a href="https://aquarchitect.github.io/swift-algorithm-club/" rel="nofollow"&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart_eyes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png"&gt;üòç&lt;/g-emoji&gt; &lt;strong&gt;Suggestions and contributions are welcome!&lt;/strong&gt; &lt;g-emoji class="g-emoji" alias="heart_eyes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png"&gt;üòç&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-links" class="anchor" aria-hidden="true" href="#important-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important links&lt;/h2&gt;
&lt;p&gt;&lt;a href="What%20are%20Algorithms.markdown"&gt;What are algorithms and data structures?&lt;/a&gt; Pancakes!&lt;/p&gt;
&lt;p&gt;&lt;a href="Why%20Algorithms.markdown"&gt;Why learn algorithms?&lt;/a&gt; Worried this isn't your cup of tea? Then read this.&lt;/p&gt;
&lt;p&gt;&lt;a href="Big-O%20Notation.markdown"&gt;Big-O notation&lt;/a&gt;. We often say things like, "This algorithm is &lt;strong&gt;O(n)&lt;/strong&gt;." If you don't know what that means, read this first.&lt;/p&gt;
&lt;p&gt;&lt;a href="Algorithm%20Design.markdown"&gt;Algorithm design techniques&lt;/a&gt;. How do you create your own algorithms?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/raywenderlich/swift-algorithm-club/blob/master/.github/CONTRIBUTING.md"&gt;How to contribute&lt;/a&gt;. Report an issue to leave feedback, or submit a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-where-to-start" class="anchor" aria-hidden="true" href="#where-to-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to start?&lt;/h2&gt;
&lt;p&gt;If you're new to algorithms and data structures, here are a few good ones to start out with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Stack/"&gt;Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Queue/"&gt;Queue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Insertion%20Sort/"&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Search/"&gt;Binary Search&lt;/a&gt; and &lt;a href="Binary%20Search%20Tree/"&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Merge%20Sort/"&gt;Merge Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Boyer-Moore-Horspool/"&gt;Boyer-Moore string search&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-the-algorithms" class="anchor" aria-hidden="true" href="#the-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The algorithms&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-searching" class="anchor" aria-hidden="true" href="#searching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Searching&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Linear%20Search/"&gt;Linear Search&lt;/a&gt;. Find an element in an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Search/"&gt;Binary Search&lt;/a&gt;. Quickly find elements in a sorted array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Count%20Occurrences/"&gt;Count Occurrences&lt;/a&gt;. Count how often a value appears in an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Select%20Minimum%20Maximum"&gt;Select Minimum / Maximum&lt;/a&gt;. Find the minimum/maximum value in an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Kth%20Largest%20Element/"&gt;k-th Largest Element&lt;/a&gt;. Find the &lt;em&gt;k&lt;/em&gt;-th largest element in an array, such as the median.&lt;/li&gt;
&lt;li&gt;&lt;a href="Selection%20Sampling/"&gt;Selection Sampling&lt;/a&gt;. Randomly choose a bunch of items from a collection.&lt;/li&gt;
&lt;li&gt;&lt;a href="Union-Find/"&gt;Union-Find&lt;/a&gt;. Keeps track of disjoint sets and lets you quickly merge them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-string-search" class="anchor" aria-hidden="true" href="#string-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String Search&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Brute-Force%20String%20Search/"&gt;Brute-Force String Search&lt;/a&gt;. A naive method.&lt;/li&gt;
&lt;li&gt;&lt;a href="Boyer-Moore-Horspool/"&gt;Boyer-Moore&lt;/a&gt;. A fast method to search for substrings. It skips ahead based on a look-up table, to avoid looking at every character in the text.&lt;/li&gt;
&lt;li&gt;&lt;a href="Knuth-Morris-Pratt/"&gt;Knuth-Morris-Pratt&lt;/a&gt;. A linear-time string algorithm that returns indexes of all occurrencies of a given pattern.&lt;/li&gt;
&lt;li&gt;&lt;a href="Rabin-Karp/"&gt;Rabin-Karp&lt;/a&gt;  Faster search by using hashing.&lt;/li&gt;
&lt;li&gt;&lt;a href="Longest%20Common%20Subsequence/"&gt;Longest Common Subsequence&lt;/a&gt;. Find the longest sequence of characters that appear in the same order in both strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="Z-Algorithm/"&gt;Z-Algorithm&lt;/a&gt;. Finds all instances of a pattern in a String, and returns the indexes of where the pattern starts within the String.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sorting" class="anchor" aria-hidden="true" href="#sorting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sorting&lt;/h3&gt;
&lt;p&gt;It's fun to see how sorting algorithms work, but in practice you'll almost never have to provide your own sorting routines. Swift's own &lt;code&gt;sort()&lt;/code&gt; is more than up to the job. But if you're curious, read on...&lt;/p&gt;
&lt;p&gt;Basic sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Insertion%20Sort/"&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Selection%20Sort/"&gt;Selection Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Shell%20Sort/"&gt;Shell Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fast sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Quicksort/"&gt;Quicksort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Merge%20Sort/"&gt;Merge Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Heap%20Sort/"&gt;Heap Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hybrid sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Introsort/"&gt;Introsort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Special-purpose sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Counting%20Sort/"&gt;Counting Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Radix%20Sort/"&gt;Radix Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Topological%20Sort/"&gt;Topological Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bad sorting algorithms (don't use these!):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Bubble%20Sort/"&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Slow%20Sort/"&gt;Slow Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-compression" class="anchor" aria-hidden="true" href="#compression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compression&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Run-Length%20Encoding/"&gt;Run-Length Encoding (RLE)&lt;/a&gt;. Store repeated values as a single byte and a count.&lt;/li&gt;
&lt;li&gt;&lt;a href="Huffman%20Coding/"&gt;Huffman Coding&lt;/a&gt;. Store more common elements using a smaller number of bits.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-miscellaneous" class="anchor" aria-hidden="true" href="#miscellaneous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Shuffle/"&gt;Shuffle&lt;/a&gt;. Randomly rearranges the contents of an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Comb%20Sort/"&gt;Comb Sort&lt;/a&gt;. An improve upon the Bubble Sort algorithm.&lt;/li&gt;
&lt;li&gt;&lt;a href="Convex%20Hull/"&gt;Convex Hull&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="Miller-Rabin%20Primality%20Test/"&gt;Miller-Rabin Primality Test&lt;/a&gt;. Is the number a prime number?&lt;/li&gt;
&lt;li&gt;&lt;a href="MinimumCoinChange/"&gt;MinimumCoinChange&lt;/a&gt;. A showcase for dynamic programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="Genetic/"&gt;Genetic&lt;/a&gt;. A simple example on how to slowly mutate a value to its ideal form, in the context of biological evolution.&lt;/li&gt;
&lt;li&gt;&lt;a href="Myers%20Difference%20Algorithm/"&gt;Myers Difference Algorithm&lt;/a&gt;. Finding the longest common subsequence of two sequences.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-mathematics" class="anchor" aria-hidden="true" href="#mathematics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mathematics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="GCD/"&gt;Greatest Common Divisor (GCD)&lt;/a&gt;. Special bonus: the least common multiple.&lt;/li&gt;
&lt;li&gt;&lt;a href="Combinatorics/"&gt;Permutations and Combinations&lt;/a&gt;. Get your combinatorics on!&lt;/li&gt;
&lt;li&gt;&lt;a href="Shunting%20Yard/"&gt;Shunting Yard Algorithm&lt;/a&gt;. Convert infix expressions to postfix.&lt;/li&gt;
&lt;li&gt;&lt;a href="Karatsuba%20Multiplication/"&gt;Karatsuba Multiplication&lt;/a&gt;. Another take on elementary multiplication.&lt;/li&gt;
&lt;li&gt;&lt;a href="HaversineDistance/"&gt;Haversine Distance&lt;/a&gt;. Calculating the distance between 2 points from a sphere.&lt;/li&gt;
&lt;li&gt;&lt;a href="Strassen%20Matrix%20Multiplication/"&gt;Strassen's Multiplication Matrix&lt;/a&gt;. Efficient way to handle matrix multiplication.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-machine-learning" class="anchor" aria-hidden="true" href="#machine-learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="K-Means/"&gt;k-Means Clustering&lt;/a&gt;. Unsupervised classifier that partitions data into &lt;em&gt;k&lt;/em&gt; clusters.&lt;/li&gt;
&lt;li&gt;k-Nearest Neighbors&lt;/li&gt;
&lt;li&gt;&lt;a href="Linear%20Regression/"&gt;Linear Regression&lt;/a&gt;. A technique for creating a model of the relationship between two (or more) variable quantities.&lt;/li&gt;
&lt;li&gt;Logistic Regression&lt;/li&gt;
&lt;li&gt;Neural Networks&lt;/li&gt;
&lt;li&gt;PageRank&lt;/li&gt;
&lt;li&gt;&lt;a href="Naive%20Bayes%20Classifier/"&gt;Naive Bayes Classifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Simulated%20annealing/"&gt;Simulated annealing&lt;/a&gt;. Probabilistic technique for approximating the global maxima in a (often discrete) large search space.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-data-structures" class="anchor" aria-hidden="true" href="#data-structures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data structures&lt;/h2&gt;
&lt;p&gt;The choice of data structure for a particular task depends on a few things.&lt;/p&gt;
&lt;p&gt;First, there is the shape of your data and the kinds of operations that you'll need to perform on it. If you want to look up objects by a key you need some kind of dictionary; if your data is hierarchical in nature you want a tree structure of some sort; if your data is sequential you want a stack or queue.&lt;/p&gt;
&lt;p&gt;Second, it matters what particular operations you'll be performing most, as certain data structures are optimized for certain actions. For example, if you often need to find the most important object in a collection, then a heap or priority queue is more optimal than a plain array.&lt;/p&gt;
&lt;p&gt;Most of the time using just the built-in &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Dictionary&lt;/code&gt;, and &lt;code&gt;Set&lt;/code&gt; types is sufficient, but sometimes you may want something more fancy...&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-variations-on-arrays" class="anchor" aria-hidden="true" href="#variations-on-arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variations on arrays&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Array2D/"&gt;Array2D&lt;/a&gt;. A two-dimensional array with fixed dimensions. Useful for board games.&lt;/li&gt;
&lt;li&gt;&lt;a href="Bit%20Set/"&gt;Bit Set&lt;/a&gt;. A fixed-size sequence of &lt;em&gt;n&lt;/em&gt; bits.&lt;/li&gt;
&lt;li&gt;&lt;a href="Fixed%20Size%20Array/"&gt;Fixed Size Array&lt;/a&gt;. When you know beforehand how large your data will be, it might be more efficient to use an old-fashioned array with a fixed size.&lt;/li&gt;
&lt;li&gt;&lt;a href="Ordered%20Array/"&gt;Ordered Array&lt;/a&gt;. An array that is always sorted.&lt;/li&gt;
&lt;li&gt;&lt;a href="Rootish%20Array%20Stack/"&gt;Rootish Array Stack&lt;/a&gt;. A space and time efficient variation on Swift arrays.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-queues" class="anchor" aria-hidden="true" href="#queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Queues&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Stack/"&gt;Stack&lt;/a&gt;. Last-in, first-out!&lt;/li&gt;
&lt;li&gt;&lt;a href="Queue/"&gt;Queue&lt;/a&gt;. First-in, first-out!&lt;/li&gt;
&lt;li&gt;&lt;a href="Deque/"&gt;Deque&lt;/a&gt;. A double-ended queue.&lt;/li&gt;
&lt;li&gt;&lt;a href="Priority%20Queue"&gt;Priority Queue&lt;/a&gt;. A queue where the most important element is always at the front.&lt;/li&gt;
&lt;li&gt;&lt;a href="Ring%20Buffer/"&gt;Ring Buffer&lt;/a&gt;. Also known as a circular buffer. An array of a certain size that conceptually wraps around back to the beginning.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-lists" class="anchor" aria-hidden="true" href="#lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lists&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Linked%20List/"&gt;Linked List&lt;/a&gt;. A sequence of data items connected through links. Covers both singly and doubly linked lists.&lt;/li&gt;
&lt;li&gt;&lt;a href="Skip-List/"&gt;Skip-List&lt;/a&gt;. Skip List is a probabilistic data-structure with same logarithmic time bound and efficiency as AVL/ or Red-Black tree and provides a clever compromise to efficiently support search and update operations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-trees" class="anchor" aria-hidden="true" href="#trees"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Trees&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Tree/"&gt;Tree&lt;/a&gt;. A general-purpose tree structure.&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Tree/"&gt;Binary Tree&lt;/a&gt;. A tree where each node has at most two children.&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Search%20Tree/"&gt;Binary Search Tree (BST)&lt;/a&gt;. A binary tree that orders its nodes in a way that allows for fast queries.&lt;/li&gt;
&lt;li&gt;&lt;a href="Red-Black%20Tree/"&gt;Red-Black Tree&lt;/a&gt;. A self balancing binary search tree.&lt;/li&gt;
&lt;li&gt;&lt;a href="Splay%20Tree/"&gt;Splay Tree&lt;/a&gt;. A self balancing binary search tree that enables fast retrieval of recently updated elements.&lt;/li&gt;
&lt;li&gt;&lt;a href="Threaded%20Binary%20Tree/"&gt;Threaded Binary Tree&lt;/a&gt;. A binary tree that maintains a few extra variables for cheap and fast in-order traversals.&lt;/li&gt;
&lt;li&gt;&lt;a href="Segment%20Tree/"&gt;Segment Tree&lt;/a&gt;. Can quickly compute a function over a portion of an array.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/swift-algorithm-club/tree/master/Segment%20Tree/LazyPropagation"&gt;Lazy Propagation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;kd-Tree&lt;/li&gt;
&lt;li&gt;&lt;a href="Sparse%20Table/"&gt;Sparse Table&lt;/a&gt;. Another take on quickly computing a function over a portion of an array, but this time we'll make it even quicker!.&lt;/li&gt;
&lt;li&gt;&lt;a href="Heap/"&gt;Heap&lt;/a&gt;. A binary tree stored in an array, so it doesn't use pointers. Makes a great priority queue.&lt;/li&gt;
&lt;li&gt;Fibonacci Heap&lt;/li&gt;
&lt;li&gt;&lt;a href="Trie/"&gt;Trie&lt;/a&gt;. A special type of tree used to store associative data structures.&lt;/li&gt;
&lt;li&gt;&lt;a href="B-Tree/"&gt;B-Tree&lt;/a&gt;. A self-balancing search tree, in which nodes can have more than two children.&lt;/li&gt;
&lt;li&gt;&lt;a href="QuadTree/"&gt;QuadTree&lt;/a&gt;. A tree with 4 children.&lt;/li&gt;
&lt;li&gt;&lt;a href="Octree/"&gt;Octree&lt;/a&gt;. A tree with 8 children.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-hashing" class="anchor" aria-hidden="true" href="#hashing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hashing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Hash%20Table/"&gt;Hash Table&lt;/a&gt;. Allows you to store and retrieve objects by a key. This is how the dictionary type is usually implemented.&lt;/li&gt;
&lt;li&gt;Hash Functions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sets" class="anchor" aria-hidden="true" href="#sets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Bloom%20Filter/"&gt;Bloom Filter&lt;/a&gt;. A constant-memory data structure that probabilistically tests whether an element is in a set.&lt;/li&gt;
&lt;li&gt;&lt;a href="Hash%20Set/"&gt;Hash Set&lt;/a&gt;. A set implemented using a hash table.&lt;/li&gt;
&lt;li&gt;&lt;a href="Multiset/"&gt;Multiset&lt;/a&gt;. A set where the number of times an element is added matters. (Also known as a bag.)&lt;/li&gt;
&lt;li&gt;&lt;a href="Ordered%20Set/"&gt;Ordered Set&lt;/a&gt;. A set where the order of items matters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-graphs" class="anchor" aria-hidden="true" href="#graphs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graphs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Graph/"&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Breadth-First%20Search/"&gt;Breadth-First Search (BFS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Depth-First%20Search/"&gt;Depth-First Search (DFS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Shortest%20Path%20%28Unweighted%29/"&gt;Shortest Path&lt;/a&gt; on an unweighted tree&lt;/li&gt;
&lt;li&gt;&lt;a href="Single-Source%20Shortest%20Paths%20(Weighted)/"&gt;Single-Source Shortest Paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Minimum%20Spanning%20Tree%20%28Unweighted%29/"&gt;Minimum Spanning Tree&lt;/a&gt; on an unweighted tree&lt;/li&gt;
&lt;li&gt;&lt;a href="Minimum%20Spanning%20Tree/"&gt;Minimum Spanning Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="All-Pairs%20Shortest%20Paths/"&gt;All-Pairs Shortest Paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Dijkstra%20Algorithm/"&gt;Dijkstra's shortest path algorithm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-puzzles" class="anchor" aria-hidden="true" href="#puzzles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Puzzles&lt;/h2&gt;
&lt;p&gt;A lot of software developer interview questions consist of algorithmic puzzles. Here is a small selection of fun ones. For more puzzles (with answers), see &lt;a href="http://elementsofprogramminginterviews.com/" rel="nofollow"&gt;here&lt;/a&gt; and &lt;a href="http://www.crackingthecodinginterview.com" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Two-Sum%20Problem/"&gt;Two-Sum Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="3Sum%20and%204Sum/"&gt;Three-Sum/Four-Sum Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Fizz%20Buzz/"&gt;Fizz Buzz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Monty%20Hall%20Problem/"&gt;Monty Hall Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Palindromes/"&gt;Finding Palindromes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="DiningPhilosophers/"&gt;Dining Philosophers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Egg%20Drop%20Problem/"&gt;Egg Drop Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Encode%20and%20Decode%20Tree/"&gt;Encoding and Decoding Binary Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Closest%20Pair/"&gt;Closest Pair&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more!&lt;/h2&gt;
&lt;p&gt;Like what you see? Check out &lt;a href="https://store.raywenderlich.com/products/data-structures-and-algorithms-in-swift" rel="nofollow"&gt;Data Structures &amp;amp; Algorithms in Swift&lt;/a&gt;, the official book by the Swift Algorithm Club team!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Images/DataStructuresAndAlgorithmsInSwiftBook.png"&gt;&lt;img src="Images/DataStructuresAndAlgorithmsInSwiftBook.png" alt="Data Structures &amp;amp; Algorithms in Swift Book" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You‚Äôll start with the fundamental structures of linked lists, queues and stacks, and see how to implement them in a highly Swift-like way. Move on to working with various types of trees, including general purpose trees, binary trees, AVL trees, binary search trees, and tries.&lt;/p&gt;
&lt;p&gt;Go beyond bubble and insertion sort with better-performing algorithms, including mergesort, radix sort, heap sort, and quicksort. Learn how to construct directed, non-directed and weighted graphs to represent many real-world models, and traverse graphs and trees efficiently with breadth-first, depth-first, Dijkstra‚Äôs and Prim‚Äôs algorithms to solve problems such as finding the shortest path or lowest cost in a network.&lt;/p&gt;
&lt;p&gt;By the end of this book, you‚Äôll have hands-on experience solving common issues with data structures and algorithms ‚Äî and you‚Äôll be well on your way to developing your own efficient and useful implementations!&lt;/p&gt;
&lt;p&gt;You can find the book on the &lt;a href="https://store.raywenderlich.com/products/data-structures-and-algorithms-in-swift" rel="nofollow"&gt;raywenderlich.com store&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The Swift Algorithm Club was originally created by &lt;a href="https://github.com/hollance"&gt;Matthijs Hollemans&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is now maintained by &lt;a href="https://www.raywenderlich.com/u/jomoka" rel="nofollow"&gt;Vincent Ngo&lt;/a&gt;, &lt;a href="https://github.com/kelvinlauKL"&gt;Kelvin Lau&lt;/a&gt;, and &lt;a href="https://github.com/richard-ash"&gt;Richard Ash&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Swift Algorithm Club is a collaborative effort from the &lt;a href="https://github.com/raywenderlich/swift-algorithm-club/graphs/contributors"&gt;most algorithmic members&lt;/a&gt; of the &lt;a href="https://www.raywenderlich.com" rel="nofollow"&gt;raywenderlich.com&lt;/a&gt; community. We're always looking for help - why not &lt;a href=".github/CONTRIBUTING.md"&gt;join the club&lt;/a&gt;? :]&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;All content is licensed under the terms of the MIT open source license.&lt;/p&gt;
&lt;p&gt;By posting here, or by submitting any pull request through this forum, you agree that all content you submit or create, both code and text, is subject to this license.  Razeware, LLC, and others will have all the rights described in the license regarding this content.  The precise terms of this license may be found &lt;a href="https://github.com/raywenderlich/swift-algorithm-club/blob/master/LICENSE.txt"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/raywenderlich/swift-algorithm-club" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d686248464ea87440457e93704b5f54191acc804/68747470733a2f2f7472617669732d63692e6f72672f72617977656e6465726c6963682f73776966742d616c676f726974686d2d636c75622e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/raywenderlich/swift-algorithm-club.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>raywenderlich</author><guid isPermaLink="false">https://github.com/raywenderlich/swift-algorithm-club</guid><pubDate>Mon, 09 Dec 2019 00:12:00 GMT</pubDate></item><item><title>SwiftUIExtensions/Grid #13 in Swift, This month</title><link>https://github.com/SwiftUIExtensions/Grid</link><description>&lt;p&gt;&lt;i&gt;:rocket: SwiftUI Grid with custom styles.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftui-grid" class="anchor" aria-hidden="true" href="#swiftui-grid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftUI Grid&lt;/h1&gt;
&lt;p&gt;SwiftUI Grid view layout with custom styles.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ZStack based layout&lt;/li&gt;
&lt;li&gt;Vertical and horizontal scrolling&lt;/li&gt;
&lt;li&gt;Supports all apple platforms&lt;/li&gt;
&lt;li&gt;Custom styles (ModularGridStyle, StaggeredGridStyle)&lt;/li&gt;
&lt;li&gt;SwiftUI code patterns (StyleStructs, EnvironmentValues, ViewBuilder)&lt;/li&gt;
&lt;li&gt;Active development for production apps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Open &lt;code&gt;/Examples/GridExamples.xcodeproj&lt;/code&gt; for more examples for iOS, macOS, watchOS and tvOS&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-styles" class="anchor" aria-hidden="true" href="#styles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Styles&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-modulargridstyle-default" class="anchor" aria-hidden="true" href="#modulargridstyle-default"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ModularGridStyle (Default)&lt;/h3&gt;

&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/iPad1.png"&gt;&lt;img src="Resources/iPad1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Grid&lt;/span&gt;(colors) {
    &lt;span class="pl-c1"&gt;Rectangle&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;foregroundColor&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;)
}
.&lt;span class="pl-c1"&gt;gridStyle&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;ModularGridStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;columns&lt;/span&gt;: .&lt;span class="pl-c1"&gt;min&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;), &lt;span class="pl-c1"&gt;rows&lt;/span&gt;: .&lt;span class="pl-c1"&gt;min&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;))
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-staggeredgridstyle" class="anchor" aria-hidden="true" href="#staggeredgridstyle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;StaggeredGridStyle&lt;/h3&gt;

&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/iPad2.png"&gt;&lt;img src="Resources/iPad2.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Grid&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-c1"&gt;69&lt;/span&gt;, &lt;span class="pl-c1"&gt;id&lt;/span&gt;: \.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { index &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Image&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;index&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;resizable&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;scaledToFit&lt;/span&gt;()
}
.&lt;span class="pl-c1"&gt;gridStyle&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;StaggeredGridStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracks&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;axis&lt;/span&gt;: .&lt;span class="pl-smi"&gt;horizontal&lt;/span&gt;, &lt;span class="pl-c1"&gt;spacing&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt;)
)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-tracks" class="anchor" aria-hidden="true" href="#tracks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tracks&lt;/h2&gt;
&lt;p&gt;Tracks setting allows you to customize grid behaviour to your specific use-case. Both Modular and Staggered grid use tracks value to calculate layout. In Modular layout both columns and rows are tracks.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Tracks&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Hashable&lt;/span&gt; &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;count&lt;/span&gt;(&lt;span class="pl-c1"&gt;Int&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;fixed&lt;/span&gt;(CGFloat)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;min&lt;/span&gt;(CGFloat)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-count" class="anchor" aria-hidden="true" href="#count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Count&lt;/h3&gt;
&lt;p&gt;Grid is split into equal fractions of size provided by a parent view.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;ModularGridStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;columns&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;rows&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
&lt;span class="pl-c1"&gt;StaggeredGridStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracks&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fixed" class="anchor" aria-hidden="true" href="#fixed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fixed&lt;/h3&gt;
&lt;p&gt;Item size is fixed to a specific width or height.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;ModularGridStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;columns&lt;/span&gt;: .&lt;span class="pl-c1"&gt;fixed&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;), &lt;span class="pl-c1"&gt;rows&lt;/span&gt;: .&lt;span class="pl-c1"&gt;fixed&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;))
&lt;span class="pl-c1"&gt;StaggeredGridStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracks&lt;/span&gt;: .&lt;span class="pl-c1"&gt;fixed&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-min" class="anchor" aria-hidden="true" href="#min"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Min&lt;/h3&gt;
&lt;p&gt;Autolayout respecting a min item width or height.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;ModularGridStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;columns&lt;/span&gt;: .&lt;span class="pl-c1"&gt;min&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;), &lt;span class="pl-c1"&gt;rows&lt;/span&gt;: .&lt;span class="pl-c1"&gt;min&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;))
&lt;span class="pl-c1"&gt;StaggeredGridStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracks&lt;/span&gt;: .&lt;span class="pl-c1"&gt;min&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-preferences" class="anchor" aria-hidden="true" href="#preferences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preferences&lt;/h2&gt;
&lt;p&gt;Get item size and position with preferences&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;CardsView&lt;/span&gt;: &lt;span class="pl-e"&gt;View &lt;/span&gt;{
    &lt;span class="pl-k"&gt;@State&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; selection&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; body&lt;span class="pl-k"&gt;:&lt;/span&gt; some View {
        &lt;span class="pl-c1"&gt;Grid&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;) { number &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c1"&gt;Card&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;number&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                .&lt;span class="pl-smi"&gt;onTapGesture&lt;/span&gt; {
                    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;selection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; number
                }
        }
        .&lt;span class="pl-c1"&gt;padding&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;overlayPreferenceValue&lt;/span&gt;(GridItemBoundsPreferencesKey.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { preferences &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c1"&gt;RoundedRectangle&lt;/span&gt;(&lt;span class="pl-c1"&gt;cornerRadius&lt;/span&gt;: &lt;span class="pl-c1"&gt;16&lt;/span&gt;)
                .&lt;span class="pl-c1"&gt;strokeBorder&lt;/span&gt;(&lt;span class="pl-c1"&gt;lineWidth&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt;)
                .&lt;span class="pl-c1"&gt;foregroundColor&lt;/span&gt;(.&lt;span class="pl-smi"&gt;white&lt;/span&gt;)
                .&lt;span class="pl-c1"&gt;frame&lt;/span&gt;(
                    &lt;span class="pl-c1"&gt;width&lt;/span&gt;: preferences[&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;selection&lt;/span&gt;].&lt;span class="pl-smi"&gt;width&lt;/span&gt;,
                    &lt;span class="pl-c1"&gt;height&lt;/span&gt;: preferences[&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;selection&lt;/span&gt;].&lt;span class="pl-smi"&gt;height&lt;/span&gt;
                )
                .&lt;span class="pl-c1"&gt;position&lt;/span&gt;(
                    &lt;span class="pl-c1"&gt;x&lt;/span&gt;: preferences[&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;selection&lt;/span&gt;].&lt;span class="pl-smi"&gt;midX&lt;/span&gt;,
                    &lt;span class="pl-c1"&gt;y&lt;/span&gt;: preferences[&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;selection&lt;/span&gt;].&lt;span class="pl-smi"&gt;midY&lt;/span&gt;
                )
                .&lt;span class="pl-c1"&gt;animation&lt;/span&gt;(.&lt;span class="pl-smi"&gt;linear&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-sdks" class="anchor" aria-hidden="true" href="#sdks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDKs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 13+&lt;/li&gt;
&lt;li&gt;Mac Catalyst 13.0+&lt;/li&gt;
&lt;li&gt;macOS 10.15+&lt;/li&gt;
&lt;li&gt;watchOS 6+&lt;/li&gt;
&lt;li&gt;Xcode 11.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Animations&lt;/li&gt;
&lt;li&gt;'CSS Grid'-like features&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-contibutions" class="anchor" aria-hidden="true" href="#code-contibutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Contibutions&lt;/h2&gt;
&lt;p&gt;Feel free to contribute via fork/pull request to master branch. If you want to request a feature or report a bug please start a new issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coffee-contibutions" class="anchor" aria-hidden="true" href="#coffee-contibutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coffee Contibutions&lt;/h2&gt;
&lt;p&gt;If you find this project useful please consider becoming a sponsor.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SwiftUIExtensions</author><guid isPermaLink="false">https://github.com/SwiftUIExtensions/Grid</guid><pubDate>Mon, 09 Dec 2019 00:13:00 GMT</pubDate></item><item><title>SwiftUIExtensions/Sliders #14 in Swift, This month</title><link>https://github.com/SwiftUIExtensions/Sliders</link><description>&lt;p&gt;&lt;i&gt;:rocket: SwiftUI Sliders with custom styles&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-custom-swiftui-sliders-and-tracks" class="anchor" aria-hidden="true" href="#custom-swiftui-sliders-and-tracks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom SwiftUI sliders and tracks.&lt;/h2&gt;
&lt;p&gt;This package allows you to build highly customizable sliders and tracks for iOS, macOS and Mac Catalyst.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Build your own sliders and tracks using composition&lt;/li&gt;
&lt;li&gt;Highly customizable&lt;/li&gt;
&lt;li&gt;Horizontal and Vertical styles&lt;/li&gt;
&lt;li&gt;Range and XY values&lt;/li&gt;
&lt;li&gt;Different sizes for lower and upper range thumbs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/sliders.png"&gt;&lt;img src="Resources/sliders.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h2&gt;
&lt;p&gt;Add this swift package to your project&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git@github.com:SwiftUIExtensions/Sliders.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Import and use&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Sliders&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SwiftUI&lt;/span&gt;

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;ContentView&lt;/span&gt;: &lt;span class="pl-e"&gt;View &lt;/span&gt;{
    &lt;span class="pl-k"&gt;@State&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; value &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;
    &lt;span class="pl-k"&gt;@State&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; range &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-c1"&gt;0.8&lt;/span&gt;
    &lt;span class="pl-k"&gt;@State&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;
    &lt;span class="pl-k"&gt;@State&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; y &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; body&lt;span class="pl-k"&gt;:&lt;/span&gt; some View {
        Group {
            &lt;span class="pl-c1"&gt;HSlider&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: $value)
            &lt;span class="pl-c1"&gt;HRangeSlider&lt;/span&gt;(&lt;span class="pl-c1"&gt;range&lt;/span&gt;: $range)
            &lt;span class="pl-c1"&gt;XYSlider&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: $x, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: $y)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more examples open &lt;code&gt;/Examples/SlidersExamples.xcodeproj&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customizations" class="anchor" aria-hidden="true" href="#customizations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizations&lt;/h2&gt;
&lt;p&gt;Use can use any SwiftUI view modifier to create custom tracks and thumbs.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-simple-gradient-value-slider-style" class="anchor" aria-hidden="true" href="#simple-gradient-value-slider-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Simple gradient value slider style&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;HSlider&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: $value, &lt;span class="pl-c1"&gt;track&lt;/span&gt;:
    &lt;span class="pl-c1"&gt;LinearGradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;gradient&lt;/span&gt;: &lt;span class="pl-c1"&gt;Gradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;colors&lt;/span&gt;: [.&lt;span class="pl-smi"&gt;red&lt;/span&gt;, .&lt;span class="pl-smi"&gt;orange&lt;/span&gt;, .&lt;span class="pl-smi"&gt;yellow&lt;/span&gt;, .&lt;span class="pl-smi"&gt;green&lt;/span&gt;, .&lt;span class="pl-smi"&gt;blue&lt;/span&gt;, .&lt;span class="pl-smi"&gt;purple&lt;/span&gt;, .&lt;span class="pl-smi"&gt;pink&lt;/span&gt;]), &lt;span class="pl-c1"&gt;startPoint&lt;/span&gt;: .&lt;span class="pl-smi"&gt;leading&lt;/span&gt;, &lt;span class="pl-c1"&gt;endPoint&lt;/span&gt;: .&lt;span class="pl-smi"&gt;trailing&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;frame&lt;/span&gt;(&lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;cornerRadius&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;)
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-multivalue-track" class="anchor" aria-hidden="true" href="#multivalue-track"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multivalue track&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;ZStack {
    &lt;span class="pl-c1"&gt;HTrack&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: value1, &lt;span class="pl-c1"&gt;view&lt;/span&gt;: &lt;span class="pl-c1"&gt;Capsule&lt;/span&gt;().&lt;span class="pl-c1"&gt;foregroundColor&lt;/span&gt;(.&lt;span class="pl-smi"&gt;red&lt;/span&gt;)).&lt;span class="pl-c1"&gt;opacity&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;HTrack&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: value2, &lt;span class="pl-c1"&gt;view&lt;/span&gt;: &lt;span class="pl-c1"&gt;Capsule&lt;/span&gt;().&lt;span class="pl-c1"&gt;foregroundColor&lt;/span&gt;(.&lt;span class="pl-smi"&gt;blue&lt;/span&gt;)).&lt;span class="pl-c1"&gt;opacity&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;HTrack&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: value3, &lt;span class="pl-c1"&gt;view&lt;/span&gt;: &lt;span class="pl-c1"&gt;Capsule&lt;/span&gt;().&lt;span class="pl-c1"&gt;foregroundColor&lt;/span&gt;(.&lt;span class="pl-smi"&gt;green&lt;/span&gt;)).&lt;span class="pl-c1"&gt;opacity&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)
}
.&lt;span class="pl-c1"&gt;animation&lt;/span&gt;(.&lt;span class="pl-c1"&gt;spring&lt;/span&gt;())
.&lt;span class="pl-c1"&gt;frame&lt;/span&gt;(&lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;)
.&lt;span class="pl-c1"&gt;background&lt;/span&gt;(Color.&lt;span class="pl-smi"&gt;secondary&lt;/span&gt;.&lt;span class="pl-c1"&gt;opacity&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.25&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-complex-range-slider-style" class="anchor" aria-hidden="true" href="#complex-range-slider-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Complex range slider style&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;HRangeSlider&lt;/span&gt;(&lt;span class="pl-c1"&gt;range&lt;/span&gt;: $range, &lt;span class="pl-c1"&gt;in&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.0&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;step&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.01&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;track&lt;/span&gt;:
        &lt;span class="pl-c1"&gt;HRangeTrack&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;range&lt;/span&gt;: range,
            &lt;span class="pl-c1"&gt;view&lt;/span&gt;: &lt;span class="pl-c1"&gt;LinearGradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;gradient&lt;/span&gt;: &lt;span class="pl-c1"&gt;Gradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;colors&lt;/span&gt;: [.&lt;span class="pl-smi"&gt;yellow&lt;/span&gt;, .&lt;span class="pl-smi"&gt;orange&lt;/span&gt;, .&lt;span class="pl-smi"&gt;red&lt;/span&gt;]), &lt;span class="pl-c1"&gt;startPoint&lt;/span&gt;: .&lt;span class="pl-smi"&gt;leading&lt;/span&gt;, &lt;span class="pl-c1"&gt;endPoint&lt;/span&gt;: .&lt;span class="pl-smi"&gt;trailing&lt;/span&gt;),
            &lt;span class="pl-c1"&gt;mask&lt;/span&gt;: &lt;span class="pl-c1"&gt;Rectangle&lt;/span&gt;(),
            &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;offsets&lt;/span&gt;: &lt;span class="pl-c1"&gt;32&lt;/span&gt;
            )
        )
        .&lt;span class="pl-c1"&gt;background&lt;/span&gt;(Color.&lt;span class="pl-smi"&gt;secondary&lt;/span&gt;.&lt;span class="pl-c1"&gt;opacity&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.25&lt;/span&gt;))
        .&lt;span class="pl-c1"&gt;cornerRadius&lt;/span&gt;(&lt;span class="pl-c1"&gt;16&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;padding&lt;/span&gt;(.&lt;span class="pl-smi"&gt;vertical&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;animation&lt;/span&gt;(.&lt;span class="pl-c1"&gt;easeInOut&lt;/span&gt;(&lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)),
    &lt;span class="pl-c1"&gt;lowerThumb&lt;/span&gt;: 
        &lt;span class="pl-c1"&gt;Capsule&lt;/span&gt;()
            .&lt;span class="pl-c1"&gt;foregroundColor&lt;/span&gt;(.&lt;span class="pl-smi"&gt;white&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;upperThumb&lt;/span&gt;:
        &lt;span class="pl-c1"&gt;Capsule&lt;/span&gt;()
            .&lt;span class="pl-c1"&gt;foregroundColor&lt;/span&gt;(.&lt;span class="pl-smi"&gt;white&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;thumbSize&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGSize&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: &lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;64&lt;/span&gt;),
        &lt;span class="pl-c1"&gt;thumbInteractiveSize&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGSize&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: &lt;span class="pl-c1"&gt;44&lt;/span&gt;, &lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;64&lt;/span&gt;)
    ),
    &lt;span class="pl-c1"&gt;onEditingChanged&lt;/span&gt;: { &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) }
)
.&lt;span class="pl-c1"&gt;frame&lt;/span&gt;(&lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;64&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-complex-point-slider-style" class="anchor" aria-hidden="true" href="#complex-point-slider-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Complex point slider style&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;XYSlider&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: $x, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: $y,
    &lt;span class="pl-c1"&gt;track&lt;/span&gt;:
        &lt;span class="pl-c1"&gt;RoundedRectangle&lt;/span&gt;(&lt;span class="pl-c1"&gt;cornerRadius&lt;/span&gt;: &lt;span class="pl-c1"&gt;24&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;foregroundColor&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;Color&lt;/span&gt;(&lt;span class="pl-c1"&gt;hue&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.67&lt;/span&gt;, &lt;span class="pl-c1"&gt;saturation&lt;/span&gt;: y, &lt;span class="pl-c1"&gt;brightness&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;)
            ),
    &lt;span class="pl-c1"&gt;thumb&lt;/span&gt;:
        ZStack {
            &lt;span class="pl-c1"&gt;Capsule&lt;/span&gt;().&lt;span class="pl-c1"&gt;frame&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: &lt;span class="pl-c1"&gt;12&lt;/span&gt;).&lt;span class="pl-c1"&gt;foregroundColor&lt;/span&gt;(.&lt;span class="pl-smi"&gt;white&lt;/span&gt;)
            &lt;span class="pl-c1"&gt;Capsule&lt;/span&gt;().&lt;span class="pl-c1"&gt;frame&lt;/span&gt;(&lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;12&lt;/span&gt;).&lt;span class="pl-c1"&gt;foregroundColor&lt;/span&gt;(.&lt;span class="pl-smi"&gt;white&lt;/span&gt;)
        }
        .&lt;span class="pl-c1"&gt;compositingGroup&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;rotationEffect&lt;/span&gt;(&lt;span class="pl-c1"&gt;Angle&lt;/span&gt;(&lt;span class="pl-c1"&gt;radians&lt;/span&gt;: x &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;))
        .&lt;span class="pl-c1"&gt;shadow&lt;/span&gt;(&lt;span class="pl-c1"&gt;radius&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;options&lt;/span&gt;: .&lt;span class="pl-smi"&gt;interactiveTrack&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;thumbSize&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGSize&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: &lt;span class="pl-c1"&gt;48&lt;/span&gt;, &lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;48&lt;/span&gt;)
    )
)
.&lt;span class="pl-c1"&gt;frame&lt;/span&gt;(&lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;256&lt;/span&gt;)
.&lt;span class="pl-c1"&gt;shadow&lt;/span&gt;(&lt;span class="pl-c1"&gt;radius&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
.&lt;span class="pl-c1"&gt;padding&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-sdks" class="anchor" aria-hidden="true" href="#sdks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDKs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 13+&lt;/li&gt;
&lt;li&gt;Mac Catalyst 13.0+&lt;/li&gt;
&lt;li&gt;macOS 10.15+&lt;/li&gt;
&lt;li&gt;Xcode 11.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Slider styles&lt;/li&gt;
&lt;li&gt;Circular sliders and tracks&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contibutions" class="anchor" aria-hidden="true" href="#contibutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contibutions&lt;/h2&gt;
&lt;p&gt;Feel free to contribute via fork/pull request to master branch. If you want to request a feature or report a bug please start a new issue.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SwiftUIExtensions</author><guid isPermaLink="false">https://github.com/SwiftUIExtensions/Sliders</guid><pubDate>Mon, 09 Dec 2019 00:14:00 GMT</pubDate></item><item><title>ben-z/free-sidecar #15 in Swift, This month</title><link>https://github.com/ben-z/free-sidecar</link><description>&lt;p&gt;&lt;i&gt;Enable Sidecar on Unsupported iPads and Macs running iPadOS 13 and macOS Catalina&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-free-sidecar" class="anchor" aria-hidden="true" href="#free-sidecar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Free Sidecar&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/ben-z/free-sidecar/releases"&gt;&lt;img src="https://camo.githubusercontent.com/97bd0ee040e82603677c8f6bb3dfce70c9e53822/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f62656e2d7a2f667265652d736964656361722f746f74616c" alt="" data-canonical-src="https://img.shields.io/github/downloads/ben-z/free-sidecar/total" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#"&gt;&lt;img src="https://camo.githubusercontent.com/bac97533df2f7729847b033088f13a06f7673f63/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61634f532d2533453d31302e3135253230436174616c696e612d627269676874677265656e" alt="" data-canonical-src="https://img.shields.io/badge/macOS-%3E=10.15%20Catalina-brightgreen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#"&gt;&lt;img src="https://camo.githubusercontent.com/7efe59786e2a64c68953d71836c172adfb3f3b0e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f695061644f532d2533453d31332d627269676874677265656e" alt="" data-canonical-src="https://img.shields.io/badge/iPadOS-%3E=13-brightgreen" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unlocks &lt;a href="https://support.apple.com/en-ca/HT210380" rel="nofollow"&gt;Sidecar&lt;/a&gt; for older, unsupported iPads and Macs (supports all iPads running iPadOS and Macs running macOS Catalina or newer).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ben-z/free-sidecar/releases/latest/download/free-sidecar.zip"&gt;Download the lastest version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Full list of supported iPads (running iPadOS):&lt;/strong&gt; iPad Air 2, iPad Air (3rd generation), iPad (5th generation), iPad (6th generation), iPad (7th generation), iPad Mini 4, iPad Mini (5th generation), iPad Pro 9.7-inch, iPad Pro 10.5-inch, iPad Pro 11-inch, iPad Pro 12.9-inch (1st generation), iPad Pro 12.9-inch (2nd generation), iPad Pro 12.9-inch (3rd generation)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;List of supported Macs (running macOS Catalina:&lt;/strong&gt; iMac: Late 2012 or newer, iMac Pro, Mac Pro: Late 2013 or newer, Mac Mini: Late 2012 or newer, MacBook: Early 2015 or newer, MacBook Air: Mid 2012 or newer, MacBook Pro: Mid 2012 or newer&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Apple uses a simple "blacklist" on macOS to disable iPadOS 13/macOS Catalina devices from using Sidecar. To work around this, we simply need to edit the blacklist in &lt;code&gt;/System/Library/PrivateFrameworks/SidecarCore.framework/Versions/A/SidecarCore&lt;/code&gt; (can be done with any hex editor of your choice).&lt;/li&gt;
&lt;li&gt;This app is a UI for editing &lt;code&gt;SidecarCore&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This app is sandboxed and does NOT need root access. I've left everything that needs root access for you to execute in the Terminal.&lt;/li&gt;
&lt;li&gt;This app works on all versions of iPadOS and macOS Catalina, including upcoming releases (assuming Apple doesn't change how they blacklist devices‚Äîin which case this app will be a no-op).&lt;/li&gt;
&lt;li&gt;The entire process includes 2 restarts into the recovery partition and should take around 5-15 minutes.&lt;/li&gt;
&lt;li&gt;Wireless mode may not work for all older devices.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Make a backup of SidecarCore (run this in Terminal):&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;cp /System/Library/PrivateFrameworks/SidecarCore.framework/Versions/A/SidecarCore ~/Downloads/SidecarCore.bak
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Copy SidecarCore from the System folder (run this in Terminal)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;cp /System/Library/PrivateFrameworks/SidecarCore.framework/Versions/A/SidecarCore ~/Downloads
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Open &lt;a href="https://github.com/ben-z/free-sidecar/releases"&gt;Free Sidecar&lt;/a&gt; (note that macOS may prevent you from running the app. In that case, open &lt;code&gt;System Preferences - Security &amp;amp; Privacy - General&lt;/code&gt; and select &lt;code&gt;Open Anyway&lt;/code&gt;) and choose the location of the SidecarCore file to be patched (~/Downloads/SidecarCore from step 2).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/free-sidecar.png"&gt;&lt;img src="docs/free-sidecar.png" alt="Free Sidecar" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol start="4"&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;code&gt;Enable&lt;/code&gt; to enable sidecar for the corresponding device. This will modify the &lt;code&gt;SidecarCore&lt;/code&gt; that you've selected in step 3 (you will be replacing the system &lt;code&gt;SidecarCore&lt;/code&gt; with this file in step 7):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;sysctl hw.model&lt;/code&gt; in Terminal to find out your mac model. For iPad model, go &lt;a href="https://everymac.com/ultimate-mac-lookup/" rel="nofollow"&gt;here&lt;/a&gt;.
&lt;a target="_blank" rel="noopener noreferrer" href="docs/click-enable.png"&gt;&lt;img src="docs/click-enable.png" alt="Click Enable" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable System Integrity Protection. This will allow us to mount &lt;code&gt;/&lt;/code&gt; as read-write and modify &lt;code&gt;SidecarCore&lt;/code&gt; under the &lt;code&gt;/System&lt;/code&gt; directory.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reboot into recovery mode (Press cmd-R when booting)&lt;/li&gt;
&lt;li&gt;Execute in Terminal in recovery mode:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;csrutil disable
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Reboot into macOS&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mount system volume as read-write (in Terminal):&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;sudo mount -uw /
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="7"&gt;
&lt;li&gt;Copy the patched SidecarCore back into SidecarCore.framework (in Terminal):&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;sudo cp ~/Downloads/SidecarCore /System/Library/PrivateFrameworks/SidecarCore.framework/Versions/A/SidecarCore
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="8"&gt;
&lt;li&gt;Sign the patched SidecarCore (in Terminal):&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;sudo codesign -f -s - /System/Library/PrivateFrameworks/SidecarCore.framework/Versions/A/SidecarCore
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="9"&gt;
&lt;li&gt;Reboot Into Recovery, re-enable System Integrity Protection:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;csrutil enable
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="10"&gt;
&lt;li&gt;Reboot Into macOS, the patched devices should now work in wired mode.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;"The iPad picture quality is sub-optimal!"&lt;/p&gt;
&lt;p&gt;Try using wired connection. For older Macs without hardware HEVC encoder/decoders, it may need extra bandwidth to transmit the screen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;"Error 32002"&lt;/p&gt;
&lt;p&gt;This happens on wireless connection for some models. Try using a wire instead. (Some people have reported that wired isn't working either on some older models e.g. &lt;a href="https://www.reddit.com/r/MacOSBeta/comments/dnxxc7/psa_enable_sidecar_on_older_devices_works_for/f5l64ni?utm_source=share&amp;amp;utm_medium=web2x" rel="nofollow"&gt;MacbookPro 2012&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;"None of my apps open anymore, They keep crashing!"&lt;/p&gt;
&lt;p&gt;You probably forgot to do step 8. If you can use the Terminal, do steps 5,6 and 8 again. If you can't use the Terminal (it keeps crashing), boot into &lt;a href="http://osxdaily.com/2018/10/29/boot-single-user-mode-mac/" rel="nofollow"&gt;single user mode&lt;/a&gt; and do steps 6 and 8 after doing step 5 in Recovery Mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;"In the code-signing step, I'm getting &lt;code&gt;the codesign_allocate helper tool cannot be found or used&lt;/code&gt;."&lt;/p&gt;
&lt;p&gt;Make sure you have the latest Xcode comandline tools! See issues &lt;a href="https://github.com/ben-z/free-sidecar/issues/2"&gt;#2&lt;/a&gt; and &lt;a href="https://github.com/ben-z/free-sidecar/issues/3"&gt;#3&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;General questions to consider before opening an issue:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Did you try wired mode?&lt;/li&gt;
&lt;li&gt;Does your device show up in Finder's sidebar?&lt;/li&gt;
&lt;li&gt;Did you click "trust" in Finder under the device tab?&lt;/li&gt;
&lt;li&gt;Did you try unlocking your iPad before connecting?&lt;/li&gt;
&lt;li&gt;Did you try restarting both devices and connecting again?&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;"My question isn't listed"&lt;/p&gt;
&lt;p&gt;Search in &lt;a href="https://github.com/ben-z/free-sidecar/issues"&gt;issues&lt;/a&gt; or open a new one! Note that I can only fix things that are specific to Free Sidecar (enable/disable sidecar for certain devices). Most usability issues with Sidecar can only be addressed by Apple.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;"I want to revert to the original &lt;code&gt;SidecarCore&lt;/code&gt;"&lt;/p&gt;
&lt;p&gt;Hope you still have the backup file from step 1! (&lt;code&gt;~/Downloads/SidecarCore.bak&lt;/code&gt;). Disable System Integrity Protection (step 5), mount the system volume as read-write (step 6) and run the following commands in Terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo cp ~/Downloads/SidecarCore.bak /System/Library/PrivateFrameworks/SidecarCore.framework/Versions/A/SidecarCore

sudo codesign -f -s - /System/Library/PrivateFrameworks/SidecarCore.framework/Versions/A/SidecarCore
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then re-enable System Integrity Protection (step 9). Your system should be in the same state as before you applied the patch!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;Submit PRs and open issues!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-inspirations" class="anchor" aria-hidden="true" href="#inspirations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inspirations&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/pookjw/SidecarPatcher"&gt;SidecarPatcher&lt;/a&gt; - This replaces a hex string that only exists in beta versions (and apparently some official releases?) (thus does not work for me in the final release). &lt;a href="https://github.com/ben-z/free-sidecar/"&gt;Free Sidecar&lt;/a&gt;
uses partial device model string matching (details &lt;a href="https://github.com/ben-z/free-sidecar/blob/1390f561000ccfc6122bcae0b1fff1cd5da3b0f0/free-sidecar/utils.swift#L83-L91"&gt;here&lt;/a&gt;) and should work for future versions of macOS as well.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ben-z</author><guid isPermaLink="false">https://github.com/ben-z/free-sidecar</guid><pubDate>Mon, 09 Dec 2019 00:15:00 GMT</pubDate></item><item><title>AppPear/ChartView #16 in Swift, This month</title><link>https://github.com/AppPear/ChartView</link><description>&lt;p&gt;&lt;i&gt;ChartView made in SwiftUI&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftuicharts" class="anchor" aria-hidden="true" href="#swiftuicharts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftUICharts&lt;/h1&gt;
&lt;p&gt;Swift package for displaying charts effortlessly.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcase1.gif"&gt;&lt;img src="./showcase1.gif" alt="SwiftUI Charts" title="SwiftUI Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It supports:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Line charts&lt;/li&gt;
&lt;li&gt;Bar charts&lt;/li&gt;
&lt;li&gt;Pie charts&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation:&lt;/h3&gt;
&lt;p&gt;It requires iOS 13 and xCode 11!&lt;/p&gt;
&lt;p&gt;In xCode got to &lt;code&gt;File -&amp;gt; Swift Packages -&amp;gt; Add Package Dependency&lt;/code&gt; and paste inthe repo's url: &lt;code&gt;https://github.com/AppPear/ChartView&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage:&lt;/h3&gt;
&lt;p&gt;import the package in the file you would like to use it: &lt;code&gt;import SwiftUICharts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can display a Chart by adding a chart view to your parent view:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h3&gt;
&lt;p&gt;Added an example project, with &lt;strong&gt;iOS, watchOS&lt;/strong&gt; target: &lt;a href="https://github.com/AppPear/ChartViewDemo"&gt;https://github.com/AppPear/ChartViewDemo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-line-charts" class="anchor" aria-hidden="true" href="#line-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Line charts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;New full screen view called LineView!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./fullscreen2.gif"&gt;&lt;img src="./fullscreen2.gif" alt="Line Charts" title="Line Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;LineView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Line chart&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;legend&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Full screen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; legend is optional, use optional .padding()&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adopts to dark mode automatically&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcase3.gif"&gt;&lt;img src="./showcase3.gif" alt="Line Charts" title="Line Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Line chart is interactive, so you can drag across to reveal the data points&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can add a line chart with the following code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;LineChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;legend&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Legendary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; legend is optional&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Turn drop shadow off by adding to the Initialiser: &lt;code&gt;dropShadow: false&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bar-charts" class="anchor" aria-hidden="true" href="#bar-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bar charts&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcase2.gif"&gt;&lt;img src="./showcase2.gif" alt="Bar Charts" title="Bar Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bar chart is interactive, so you can drag across to reveal the data points&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can add a bar chart with the following code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;legend&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Legendary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; legend is optional&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can add different formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Small &lt;code&gt;Form.small&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Medium  &lt;code&gt;Form.medium&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Large &lt;code&gt;Form.large&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;form&lt;/span&gt;: Form.&lt;span class="pl-smi"&gt;small&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Turn drop shadow off by adding to the Initialiser: &lt;code&gt;dropShadow: false&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-you-can-customize-styling-of-the-chart-with-a-chartstyle-object" class="anchor" aria-hidden="true" href="#you-can-customize-styling-of-the-chart-with-a-chartstyle-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;You can customize styling of the chart with a ChartStyle object:&lt;/h3&gt;
&lt;p&gt;Customizable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;background color&lt;/li&gt;
&lt;li&gt;accent color&lt;/li&gt;
&lt;li&gt;second gradient color&lt;/li&gt;
&lt;li&gt;text color&lt;/li&gt;
&lt;li&gt;legend text color&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; chartStyle &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ChartStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;backgroundColor&lt;/span&gt;: Color.&lt;span class="pl-smi"&gt;black&lt;/span&gt;, &lt;span class="pl-c1"&gt;accentColor&lt;/span&gt;: Colors.&lt;span class="pl-smi"&gt;OrangeStart&lt;/span&gt;, &lt;span class="pl-c1"&gt;secondGradientColor&lt;/span&gt;: Colors.&lt;span class="pl-smi"&gt;OrangeEnd&lt;/span&gt;, &lt;span class="pl-c1"&gt;chartFormSize&lt;/span&gt;: Form.&lt;span class="pl-smi"&gt;medium&lt;/span&gt;, &lt;span class="pl-c1"&gt;textColor&lt;/span&gt;: Color.&lt;span class="pl-smi"&gt;white&lt;/span&gt;, &lt;span class="pl-c1"&gt;legendTextColor&lt;/span&gt;: Color.&lt;span class="pl-smi"&gt;white&lt;/span&gt; )
 &lt;span class="pl-k"&gt;...&lt;/span&gt;
 &lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: chartStyle)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can access built-in styles:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: Styles.&lt;span class="pl-smi"&gt;barChartMidnightGreen&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-all-styles-available-as-a-preset" class="anchor" aria-hidden="true" href="#all-styles-available-as-a-preset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All styles available as a preset:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;barChartStyleOrangeLight&lt;/li&gt;
&lt;li&gt;barChartStyleOrangeDark&lt;/li&gt;
&lt;li&gt;barChartStyleNeonBlueLight&lt;/li&gt;
&lt;li&gt;barChartStyleNeonBlueDark&lt;/li&gt;
&lt;li&gt;barChartMidnightGreenLight&lt;/li&gt;
&lt;li&gt;barChartMidnightGreenDark&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./midnightgreen.gif"&gt;&lt;img src="./midnightgreen.gif" alt="Midnightgreen" title="Midnightgreen" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcase5.png"&gt;&lt;img src="./showcase5.png" alt="Custom Charts" title="Custom Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-you-can-customize-the-size-of-the-chart-with-a-form-object" class="anchor" aria-hidden="true" href="#you-can-customize-the-size-of-the-chart-with-a-form-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;You can customize the size of the chart with a Form object:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Form&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.small&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.medium&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.large&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.detail&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;form&lt;/span&gt;: Form.&lt;span class="pl-smi"&gt;small&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-watchos-support-for-bar-charts" class="anchor" aria-hidden="true" href="#watchos-support-for-bar-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WatchOS support for Bar charts:&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./watchos1.png"&gt;&lt;img src="./watchos1.png" alt="Pie Charts" title="Pie Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pie-charts" class="anchor" aria-hidden="true" href="#pie-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pie charts&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcase4.png"&gt;&lt;img src="./showcase4.png" alt="Pie Charts" title="Pie Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can add a line chart with the following code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;PieChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;legend&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Legendary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; legend is optional&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Turn drop shadow off by adding to the Initialiser: &lt;code&gt;dropShadow: false&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>AppPear</author><guid isPermaLink="false">https://github.com/AppPear/ChartView</guid><pubDate>Mon, 09 Dec 2019 00:16:00 GMT</pubDate></item><item><title>appbrewery/Dicee-iOS13 #17 in Swift, This month</title><link>https://github.com/appbrewery/Dicee-iOS13</link><description>&lt;p&gt;&lt;i&gt;Learn to Code While Building Apps - The Complete iOS Development Bootcamp &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/AppBreweryBanner.png"&gt;&lt;img src="Documentation/AppBreweryBanner.png" alt="App Brewery Banner" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-dicee" class="anchor" aria-hidden="true" href="#dicee"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dicee&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-our-goal" class="anchor" aria-hidden="true" href="#our-goal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Our Goal&lt;/h2&gt;
&lt;p&gt;The objective of this tutorial is to introduce you to the core programming concepts that will form the foundation of most of the apps you‚Äôll build in the future. This app will teach you a lot of important programming knowledge, while building a neat dice app.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-you-will-create" class="anchor" aria-hidden="true" href="#what-you-will-create"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What you will create&lt;/h2&gt;
&lt;p&gt;We‚Äôre going to make a Las Vegas dice app. You can make the die roll at the press of a button or by shaking your phone. With this app in your pocket, you‚Äôll be fully set up to settle any score on the go!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-you-will-learn" class="anchor" aria-hidden="true" href="#what-you-will-learn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What you will learn&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;How to clone an existing Xcode project from GitHub.&lt;/li&gt;
&lt;li&gt;Create an app with behaviour and functionality.&lt;/li&gt;
&lt;li&gt;Create links between the Interface Builder files and code using IBActions and IBOutlets.&lt;/li&gt;
&lt;li&gt;Get familiar with the Xcode code editor.&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Learn to use comments to annotate code.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Understand and use Swift constants and variables.&lt;/li&gt;
&lt;li&gt;Understand and use collection types such as Swift arrays.&lt;/li&gt;
&lt;li&gt;Test and debug your app with the Xcode console.&lt;/li&gt;
&lt;li&gt;Learn about randomisation and how to generate random numbers in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a companion project to The App Brewery's Complete App Development Bootcamp, check out the full course at &lt;a href="https://www.appbrewery.co/" rel="nofollow"&gt;www.appbrewery.co&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/readme-end-banner.png"&gt;&lt;img src="Documentation/readme-end-banner.png" alt="End Banner" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>appbrewery</author><guid isPermaLink="false">https://github.com/appbrewery/Dicee-iOS13</guid><pubDate>Mon, 09 Dec 2019 00:17:00 GMT</pubDate></item><item><title>GitHawkApp/GitHawk #18 in Swift, This month</title><link>https://github.com/GitHawkApp/GitHawk</link><description>&lt;p&gt;&lt;i&gt;The best iOS app for GitHub.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://itunes.apple.com/app/githawk-for-github/id1252320249" rel="nofollow"&gt;&lt;img src="images/githawk-pulse.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;a href="https://itunes.apple.com/app/githawk-for-github/id1252320249" rel="nofollow"&gt;&lt;img src="images/app-store-badge.png" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;a href="https://www.bitrise.io/app/a912ff037bca7072" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/d262f8eb19d1f3b7cf0fd87d4b5d3a07942ff8fe/68747470733a2f2f6170702e626974726973652e696f2f6170702f613931326666303337626361373037322f7374617475732e7376673f746f6b656e3d504d70427339752d43374342494b50774e4c534a7267266272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://app.bitrise.io/app/a912ff037bca7072/status.svg?token=PMpBs9u-C7CBIKPwNLSJrg&amp;amp;branch=master" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://testflight.apple.com/join/QIVXLkkn" rel="nofollow"&gt;
      &lt;img src="https://camo.githubusercontent.com/1d341836e296e007d8e0ea08a074b05b0ba223f5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e2d54657374466c696768742d626c75652e737667" alt="Join TestFlight" data-canonical-src="https://img.shields.io/badge/Join-TestFlight-blue.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;GitHawk is the highest rated iOS app for GitHub.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="zero" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/0030-20e3.png"&gt;0Ô∏è‚É£&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Inbox Zero&lt;/em&gt; your notifications&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;üìù&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Comment even faster than on GitHub desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;üëç&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;The only app with emoji reactions!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="zap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png"&gt;‚ö°Ô∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Native markdown rendering&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img class="emoji" title=":octocat:" alt=":octocat:" src="https://github.githubassets.com/images/icons/emoji/octocat.png" height="20" width="20" align="absmiddle"&gt;&lt;/td&gt;
&lt;td&gt;100% free and open source&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We are always looking for contributions from &lt;strong&gt;all skill levels&lt;/strong&gt;! A great way to get started is by helping &lt;a href="https://github.com/GitHawkApp/GitHawk/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22%F0%9F%90%9B+bug%22"&gt;organize and/or squish bugs&lt;/a&gt;. If you're looking to ease your way into the project try out a &lt;a href="https://github.com/GitHawkApp/GitHawk/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22%E2%9C%A8+good+first+issue%22+"&gt;good first issue&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-highest-priority-needs" class="anchor" aria-hidden="true" href="#highest-priority-needs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Highest Priority Needs:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="woman_office_worker" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f4bc.png"&gt;üë©‚Äçüíº&lt;/g-emoji&gt; &lt;strong&gt;Product Manager&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;We have some &lt;a href="https://github.com/GitHawkApp/GitHawk/projects"&gt;projects&lt;/a&gt; and tons of unorganized/unprioritized &lt;a href="https://github.com/GitHawkApp/GitHawk/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22%F0%9F%86%95+feature+request%22+"&gt;features&lt;/a&gt;. GitHawk needs someone to own the product direction!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="woman_artist" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f3a8.png"&gt;üë©‚Äçüé®&lt;/g-emoji&gt; &lt;strong&gt;Designer&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Like making unique UIs? So do we! We value keeping GitHawk's UX close to core iOS, but, when necessary, create our own high-quality UI components. Helping design for GitHawk is a great opportunity to try new ideas out!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="woman_technologist" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f4bb.png"&gt;üë©‚Äçüíª&lt;/g-emoji&gt; &lt;strong&gt;iOS Project Management&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;There is a &lt;em&gt;lot&lt;/em&gt; of low-hanging fruit with our project setup, test and deployment automation, build optimizations, and more! I (&lt;a href="https://github.com/rnystrom"&gt;@rnystrom&lt;/a&gt;) have no idea what I'm doing here. Come point us in the right direction!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;If you want to build GitHawk locally, run &lt;code&gt;npm install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To get started, you will need to install node (&lt;code&gt;brew install node&lt;/code&gt;), then run these instructions:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/GitHawkApp/GitHawk.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; GitHawk
bundle
bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; pod install
npm install
open Freetime.xcworkspace/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will install &lt;a href="https://github.com/apollographql/apollo-codegen"&gt;apollo-codegen&lt;/a&gt; that is required to generate the GraphQL models.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/GitHawkApp/GitHawk/blob/master/Setup.md"&gt;setup guide&lt;/a&gt; for details about API keys and environment variables.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-open-source--copying" class="anchor" aria-hidden="true" href="#open-source--copying"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open Source &amp;amp; Copying&lt;/h2&gt;
&lt;p&gt;We ship GitHawk on the App Store for free and provide its entire source code for free as well. In the spirit of openness, GitHawk is licensed under MIT so that you can use my code in your app, if you choose.&lt;/p&gt;
&lt;p&gt;However, &lt;strong&gt;please do not ship this app&lt;/strong&gt; under your own account. Paid or free.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-are-we-building-this" class="anchor" aria-hidden="true" href="#why-are-we-building-this"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why are we building this?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Push &lt;a href="https://instagram.github.io/IGListKit/" rel="nofollow"&gt;IGListKit&lt;/a&gt; + Swift to its limits&lt;/li&gt;
&lt;li&gt;Better GitHub project management on mobile&lt;/li&gt;
&lt;li&gt;Explore &lt;a href="https://developer.github.com/v4/"&gt;GitHub's GraphQL API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Scratch my Swift-itch&lt;/li&gt;
&lt;li&gt;Create a real, complex app in the open&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>GitHawkApp</author><guid isPermaLink="false">https://github.com/GitHawkApp/GitHawk</guid><pubDate>Mon, 09 Dec 2019 00:18:00 GMT</pubDate></item><item><title>vsouza/awesome-ios #19 in Swift, This month</title><link>https://github.com/vsouza/awesome-ios</link><description>&lt;p&gt;&lt;i&gt;A curated list of awesome iOS ecosystem, including Objective-C and Swift Projects &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/vsouza/awesome-ios/blob/master/header.png"&gt;&lt;img src="https://github.com/vsouza/awesome-ios/raw/master/header.png" alt="Awesome" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;p align="center"&gt;
        &lt;a href="https://triplebyte.com/a/azelHFa/d" rel="nofollow"&gt;
        &lt;b&gt;Reduce your job search from O(N) to O(1)&lt;/b&gt;
        &lt;br&gt;
        One coding quiz. &lt;b&gt;Multiple offers from top companies&lt;/b&gt;
        &lt;br&gt;
        &lt;/a&gt;&lt;/p&gt;&lt;p align="center"&gt;&lt;a href="https://triplebyte.com/a/azelHFa/d" rel="nofollow"&gt;
			&lt;img align="center" src="triplebyte_logo.png" width="260" alt="Tripblebyte" style="max-width:100%;"&gt;
	    &lt;/a&gt;&lt;/p&gt;&lt;a href="https://triplebyte.com/a/azelHFa/d" rel="nofollow"&gt;
        &lt;/a&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;br&gt;
	&lt;br&gt;
	&lt;br&gt;
&lt;/div&gt;
&lt;p align="center"&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/13c4e50d88df7178ae1882a203ed57b641674f94/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667"&gt;&lt;img alt="awesome" src="https://camo.githubusercontent.com/13c4e50d88df7178ae1882a203ed57b641674f94/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" data-canonical-src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/vsouza/awesome-ios" rel="nofollow"&gt;&lt;img alt="Build Status" src="https://camo.githubusercontent.com/810699c61513c8a99156fe479d4e5b973eb88f1f/68747470733a2f2f6170692e7472617669732d63692e6f72672f76736f757a612f617765736f6d652d696f732e7376673f6272616e63683d6d6173746572" data-canonical-src="https://api.travis-ci.org/vsouza/awesome-ios.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://ko-fi.com/M4M3WPRD" rel="nofollow"&gt;&lt;img width="110" alt="Buy Me a Coffee" src="buy_me_a_coffee.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-meet-the-new-instabugunderstand-how-your-ios-app-is-doing-with-real-time-contextual-insights-from-your-users" class="anchor" aria-hidden="true" href="#meet-the-new-instabugunderstand-how-your-ios-app-is-doing-with-real-time-contextual-insights-from-your-users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meet the New Instabug:¬†Understand How Your iOS App is Doing with Real-Time Contextual Insights From Your Users&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://instabug.com/ios/sdk?utm_source=awesomeios&amp;amp;utm_medium=spon&amp;amp;utm_content=photo" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/vsouza/awesome-ios/master/awesome_ios_instabug.png" alt="instabug-github" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Instabug helps development and product teams easily collect bugs and feedback from beta testers and customers to iterate faster and ship quality apps. Instabug automatically attaches screenshots, device details, network logs, repro steps, and tons of other critical insights needed to resolve issues and prioritize product backlogs.
Mobile teams accelerate their workflows by seamlessly integrating with third-party tools like Github, Jira, Slack, Zendesk and much more. &lt;a href="https://instabug.com/ios/sdk?utm_source=awesomeios&amp;amp;utm_medium=spon&amp;amp;utm_content=learn-more" rel="nofollow"&gt;Instabug¬†is offering awesome-ios community an exclusive¬†15% discount¬†on all paid plans. Get Started!&lt;/a&gt;
&lt;a href="https://instabug.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c8b52beda68e55d51176d29ea81064608e6e06ac/68747470733a2f2f696e7374616275672d67612e61707073706f742e636f6d2f55412d34313938323038382d362f6769746875622f617765736f6d65696f733f706978656c" alt="" data-canonical-src="https://instabug-ga.appspot.com/UA-41982088-6/github/awesomeios?pixel" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-content" class="anchor" aria-hidden="true" href="#content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#courses"&gt;Courses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#accessibility"&gt;Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alexa"&gt;Alexa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#analytics"&gt;Analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#app-routing"&gt;App Routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apple-tv"&gt;Apple TV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#architecture-patterns"&gt;Architecture Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#arkit"&gt;ARKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#blockchain"&gt;Blockchain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bridging"&gt;Bridging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cache"&gt;Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#charts"&gt;Charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-quality"&gt;Code Quality&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#linter"&gt;Linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#color"&gt;Color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#command-line"&gt;Command Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-data"&gt;Core Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-structures--algorithms"&gt;Data Structures / Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#date--time"&gt;Date &amp;amp; Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#eventbus"&gt;EventBus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#files"&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#functional-programming"&gt;Functional Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#games"&gt;Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gcd"&gt;GCD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gesture"&gt;Gesture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#graphics"&gt;Graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hardware"&gt;Hardware&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#bluetooth"&gt;Bluetooth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#camera"&gt;Camera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#force-touch"&gt;Force Touch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ibeacon"&gt;iBeacon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#location"&gt;Location&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-hardware"&gt;Other Hardware&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#layout"&gt;Layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization"&gt;Localization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#machine-learning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#maps"&gt;Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#math"&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#media"&gt;Media&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#audio"&gt;Audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gif"&gt;GIF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#image"&gt;Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#media-processing"&gt;Media Processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pdf"&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#streaming"&gt;Streaming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#video"&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#messaging"&gt;Messaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#networking"&gt;Networking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notifications"&gt;Notifications&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#push-notifications"&gt;Push Notifications&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#push-notification-providers"&gt;Push Notification Providers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#local-notifications"&gt;Local Notifications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#objective-c-runtime"&gt;Objective-C Runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#optimization"&gt;Optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#parsing"&gt;Parsing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#csv"&gt;CSV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json"&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xml--html"&gt;XML &amp;amp; HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-parsing"&gt;Other Parsing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#passbook"&gt;Passbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#payments"&gt;Payments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#permissions"&gt;Permissions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#products"&gt;Products&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reactive-programming"&gt;Reactive Programming&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#react-like"&gt;React-Like&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#reflection"&gt;Reflection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#regex"&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sdk"&gt;SDK&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#official"&gt;Official&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unofficial"&gt;Unofficial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#security"&gt;Security&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#encryption"&gt;Encryption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keychain"&gt;Keychain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#server"&gt;Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing"&gt;Testing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tdd--bdd"&gt;TDD / BDD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ab-testing"&gt;A/B Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ui-testing"&gt;UI Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-testing"&gt;Other Testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#text"&gt;Text&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#font"&gt;Font&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ui"&gt;UI&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#activity-indicator"&gt;Activity Indicator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alert--action-sheet"&gt;Alert &amp;amp; Action Sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#animation"&gt;Animation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transition"&gt;Transition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#badge"&gt;Badge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#button"&gt;Button&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calendar"&gt;Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cards"&gt;Cards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#form--settings"&gt;Form &amp;amp; Settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keyboard"&gt;Keyboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#label"&gt;Label&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#login"&gt;Login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#menu"&gt;Menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#navigation-bar"&gt;Navigation Bar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pickerview"&gt;PickerView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#popup"&gt;Popup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pull-to-refresh"&gt;Pull to Refresh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rating-stars"&gt;Rating Stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scrollview"&gt;ScrollView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#segmented-control"&gt;Segmented Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#slider"&gt;Slider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splash-view"&gt;Splash View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#status-bar"&gt;Status Bar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stepper"&gt;Stepper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#switch"&gt;Switch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tab-bar"&gt;Tab Bar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-view--collection-view"&gt;Table View / Collection View&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#table-view"&gt;Table View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-view"&gt;Collection View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#expandable-cell"&gt;Expandable Cell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header"&gt;Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#placeholder"&gt;Placeholder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-view-layout"&gt;Collection View Layout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#tag"&gt;Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#textfield--textview"&gt;TextField &amp;amp; TextView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uipagecontrol"&gt;UIPageControl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-view"&gt;Web View&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#utility"&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#user-consent"&gt;User Consent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vr"&gt;VR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#walkthrough--intro--tutorial"&gt;Walkthrough / Intro / Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#websocket"&gt;Websocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#project-setup"&gt;Project setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependency--package-manager"&gt;Dependency / Package Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rapid-development"&gt;Rapid Development&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#injection"&gt;Injection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#deployment--distribution"&gt;Deployment / Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#app-store"&gt;App Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xcode"&gt;Xcode&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#extensions-xcode-8"&gt;Extensions (Xcode 8+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-xcode"&gt;Other Xcode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#reference"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#style-guides"&gt;Style Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#good-websites"&gt;Good Websites&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#news-blogs-and-more"&gt;News, Blogs and more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uikit-references"&gt;UIKit references&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#forums-and-discuss-lists"&gt;Forums and discuss lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tutorials-and-keynotes"&gt;Tutorials and Keynotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prototyping"&gt;Prototyping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#newsletters"&gt;Newsletters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#medium"&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#social-media"&gt;Social Media&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#twitter"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#facebook-groups"&gt;Facebook Groups&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#podcasts"&gt;Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#books"&gt;Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-awesome-lists"&gt;Other Awesome Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing-and-license"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-courses" class="anchor" aria-hidden="true" href="#courses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Courses&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Courses, tutorials and guides&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/archive/referencelibrary/GettingStarted/DevelopiOSAppsSwift/" rel="nofollow"&gt;Apple- Start Developing with iOS&lt;/a&gt; - Apple Guide.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/OOP_ObjC/Introduction/Introduction.html" rel="nofollow"&gt;Apple - Object-Oriented Programming with Objective-C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html" rel="nofollow"&gt;Apple - Programming with Objective-C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeproject.com/articles/88929/getting-started-with-iphone-and-ios-development" rel="nofollow"&gt;CodeProject&lt;/a&gt; - Getting Started with iPhone and iOS Development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lifehacker.com/i-want-to-write-ios-apps-where-do-i-start-1644802175" rel="nofollow"&gt;Lifehacker&lt;/a&gt; - I Want to Write iOS Apps. Where Do I Start?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/2690-learn-to-code-ios-apps-1-welcome-to-programming" rel="nofollow"&gt;Ray Wenderlich&lt;/a&gt; - Learn to code iOS Apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/us/course/developing-ios-7-apps-for-iphone-and-ipad/id733644550" rel="nofollow"&gt;Stanford - Developing iOS 7 Apps for iPhone and iPad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/in/course/developing-ios-10-apps-swift/id1198467120" rel="nofollow"&gt;Stanford - Developing iOS 10 Apps with Swift&lt;/a&gt; - Stanford's 2017 iTunes U course.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316" rel="nofollow"&gt;Stanford - Developing iOS 11 Apps with Swift&lt;/a&gt; - Stanford's 2017 iTunes U course updated for iOS 11 and Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swifteducation.github.io/teaching_app_development_with_swift/" rel="nofollow"&gt;Swifteducation - Teaching App Development with Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/intro-to-ios-app-development-with-swift--ud585" rel="nofollow"&gt;Udacity - Intro to iOS App Development with Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/arkit-beginner-to-professional/" rel="nofollow"&gt;Udemy - ARKit - Beginner to Professional in Swift 4 and iOS 11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/codePrincess/ARStarter"&gt;ARStarter&lt;/a&gt; - Get started with ARKit - A little exercise for beginners.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-accessibility" class="anchor" aria-hidden="true" href="#accessibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accessibility&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Frameworks that help to support accessibility features and enable people with disabilities to use your app&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chrs1885/Capable"&gt;Capable&lt;/a&gt; - Track accessibility features to improve your app for people with certain disabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-alexa" class="anchor" aria-hidden="true" href="#alexa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alexa&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Frameworks that help to support writing custom alexa skills in swift&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/choefele/AlexaSkillsKit"&gt;AlexaSkillsKit&lt;/a&gt; - Swift library to develop custom Alexa Skills.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-analytics" class="anchor" aria-hidden="true" href="#analytics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Analytics&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Analytics platforms, SDK's, error tracking and real-time answers about your app&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://instabug.com" rel="nofollow"&gt;Instabug&lt;/a&gt; - In-app feedback, Bug and Crash reporting, Fix Bugs Faster through user-steps, video recordings, screen annotation, network requests logging.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mixpanel.com/" rel="nofollow"&gt;Mixpanel&lt;/a&gt; - Advanced analytics platform.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.localytics.com/" rel="nofollow"&gt;Localytics&lt;/a&gt; - Brings app marketing and analytics together.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://get.fabric.io" rel="nofollow"&gt;Answers by Fabric&lt;/a&gt; - Answers gives you real-time insight into people‚Äôs experience in your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gemr/GTrack"&gt;GTrack&lt;/a&gt; - Lightweight Objective-C wrapper around the Google Analytics for iOS SDK with some extra goodies.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orta/ARAnalytics"&gt;ARAnalytics&lt;/a&gt; - Analytics abstraction library offering a sane API for tracking events and user data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/segmentio/analytics-ios"&gt;Segment&lt;/a&gt; - The hassle-free way to integrate analytics into any iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mocaplatform.com/features" rel="nofollow"&gt;MOCA Analytics&lt;/a&gt; - Paid cross-platform analytics backend.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://count.ly" rel="nofollow"&gt;Countly&lt;/a&gt; - Open source, mobile &amp;amp; web analytics, crash reports and push notifications platform for iOS &amp;amp; Android.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abbiio/iosdk"&gt;Abbi&lt;/a&gt; - A Simple SDK for developers to manage and maximise conversions of all in-app promotions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.devtodev.com/" rel="nofollow"&gt;devtodev&lt;/a&gt; - Comprehensive analytics service that improves your project and saves time for product development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bugsnag.com/platforms/ios-crash-reporting" rel="nofollow"&gt;Bugsnag&lt;/a&gt; - Error tracking with a free tier. Error reports include data on device, release, user, and allows arbitrary data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://inapptics.com" rel="nofollow"&gt;Inapptics&lt;/a&gt; - Helps analyze and visualize user behavior in mobile apps. Provides visual user journeys, heatmaps and crash replays.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matomo-org/matomo-sdk-ios"&gt;Matomo&lt;/a&gt; - The MatomoTracker is an iOS, tvOS and macOS SDK for sending app analytics to a Matomo server.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-app-routing" class="anchor" aria-hidden="true" href="#app-routing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;App Routing&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Elegant URL routing, navigation frameworks, deep links and more&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Wasappli/WAAppRouting"&gt;WAAppRouting&lt;/a&gt; - iOS routing done right. Handles both URL recognition and controller displaying with parsed parameters. All in one line, controller stack preserved automatically!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/button/DeepLinkKit"&gt;DeepLinkKit&lt;/a&gt; - A splendid route-matching, block-based way to handle your deep links.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intentkit/IntentKit"&gt;IntentKit&lt;/a&gt; - An easier way to handle third-party URL schemes in iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joeldev/JLRoutes"&gt;JLRoutes&lt;/a&gt; - URL routing library for iOS with a simple block-based API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanKeen/IKRouter"&gt;IKRouter&lt;/a&gt; - URLScheme router than supports auto creation of UIViewControllers for associated url parameters to allow creation of navigation stacks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Appz"&gt;Appz&lt;/a&gt; - Easily launch and deeplink into external applications, falling back to web if not installed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/URLNavigator"&gt;URLNavigator&lt;/a&gt; - Elegant URL Routing for Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/avito-tech/Marshroute"&gt;Marshroute&lt;/a&gt; - Marshroute is an iOS Library for making your Routers simple but extremely powerful.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skyline75489/SwiftRouter"&gt;SwiftRouter&lt;/a&gt; - A URL Router for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/Router"&gt;Router&lt;/a&gt; - Simple Navigation for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AndreyPanov/ApplicationCoordinator"&gt;ApplicationCoordinator&lt;/a&gt; - Coordinator is an object that handles navigation flow and shares flow‚Äôs handling for the next coordinator after switching on the next chain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxFlow"&gt;RxFlow&lt;/a&gt; - Navigation framework for iOS applications based on a Reactive Flow Coordinator pattern.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaksimKurpa/Linker"&gt;Linker&lt;/a&gt; - Lightweight way to handle internal and external deeplinks for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aronbalog/CoreNavigation"&gt;CoreNavigation&lt;/a&gt; - Navigate between view controllers with ease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yishuiliunian/DZURLRoute"&gt;DZURLRoute&lt;/a&gt; - Universal route engine for iOS app, it can handle URLScheme between applications and page route between UIViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/giginet/Crossroad"&gt;Crossroad&lt;/a&gt; - Crossroad is an URL router focused on handling Custom URL Schemes. Using this, you can route multiple URL schemes and fetch arguments and parameters easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zuikyo/ZIKRouter"&gt;ZIKRouter&lt;/a&gt; - An interface-oriented router for discovering modules and injecting dependencies with protocol in OC &amp;amp; Swift, iOS &amp;amp; macOS. Handles route in a type safe way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ekazaev/route-composer"&gt;RouteComposer&lt;/a&gt; - Library that helps to handle view controllers composition, routing and deeplinking tasks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SpectralDragon/LightRoute"&gt;LightRoute&lt;/a&gt; - Easy transition between VIPER modules, implemented on pure Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-apple-tv" class="anchor" aria-hidden="true" href="#apple-tv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apple TV&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;tvOS view controllers, wrappers, template managers and video players.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rsattar/Voucher"&gt;Voucher&lt;/a&gt; - A simple library to make authenticating tvOS apps easy via their iOS counterparts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0xced/XCDYouTubeKit"&gt;XCDYouTubeKit&lt;/a&gt; - YouTube video player for iOS, tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/toshi0383/TVMLKitchen"&gt;TVMLKitchen&lt;/a&gt; - Swifty TVML template manager with or without client-server.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zats/BrowserTV"&gt;BrowserTV&lt;/a&gt; - Turn your Apple TV into a dashboard displaying any webpage!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/analytics-pros/Swift-GA-Tracker-for-Apple-tvOS"&gt;Swift-GA-Tracker-for-Apple-tvOS&lt;/a&gt; - Google Analytics tracker for Apple tvOS provides an easy integration of Google Analytics‚Äô measurement protocol for Apple TV.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PGSSoft/ParallaxView"&gt;ParallaxView&lt;/a&gt; - iOS controls and extensions that add parallax effect to your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcordero/TvOSTextViewer"&gt;TvOSTextViewer&lt;/a&gt; - Light and scrollable view controller for tvOS to present blocks of text&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcordero/FocusTvButton"&gt;FocusTvButton&lt;/a&gt; - Light wrapper of UIButton that allows extra customization for tvOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cgoldsby/TvOSMoreButton"&gt;TvOSMoreButton&lt;/a&gt; - A basic tvOS button which truncates long text with '... More'.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zattoo/TvOSPinKeyboard"&gt;TvOSPinKeyboard&lt;/a&gt; - PIN keyboard for tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcordero/TvOSScribble"&gt;TvOSScribble&lt;/a&gt; - Handwriting numbers recognizer for Siri Remote.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zattoo/TvOSCustomizableTableViewCell"&gt;TvOSCustomizableTableViewCell&lt;/a&gt; - Light wrapper of UITableViewCell that allows extra customization for tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zattoo/TvOSSlider"&gt;TvOSSlider&lt;/a&gt; - TvOSSlider is an implementation of UISlider for tvOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-architecture-patterns" class="anchor" aria-hidden="true" href="#architecture-patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture Patterns&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Clean architecture, Viper, MVVM, Reactive... choose your weapon.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/codytwinton/SwiftyVIPER"&gt;SwiftyVIPER&lt;/a&gt; - Makes implementing VIPER architecture much easier and cleaner.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sergdort/CleanArchitectureRxSwift"&gt;CleanArchitectureRxSwift&lt;/a&gt; - Example of Clean Architecture of iOS app using RxSwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ferranabello/Viperit"&gt;Viperit&lt;/a&gt; - Viper Framework for iOS. Develop an app following VIPER architecture in an easy way. Written and tested in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Brightify/Reactant"&gt;Reactant&lt;/a&gt; - Reactant is a reactive architecture for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alfa-laboratory/YARCH"&gt;YARCH&lt;/a&gt; - More clean alternative to VIPER with unidirectional data flow (flux-like).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MindorksOpenSource/iOS-Viper-Architecture"&gt;iOS-Viper-Architecture&lt;/a&gt; - This repository contains a detailed sample app that implements VIPER architecture in iOS using libraries and frameworks like Alamofire, AlamofireImage, PKHUD, CoreData etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BendingSpoons/tempura-swift"&gt;Tempura&lt;/a&gt; - A holistic approach to iOS development, inspired by Redux and MVVM.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kaakati/VIPER-Module-Generator"&gt;VIPER Module Generator&lt;/a&gt; - A Clean VIPER Modules Generator with comments and predfined functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Maryom/MMVMi"&gt;MMVMi&lt;/a&gt; - A Validation Model for MVC and MVVM Design Patterns in iOS Applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tailec/ios-architecture"&gt;ios-architecture&lt;/a&gt; - A collection of iOS architectures - MVC, MVVM, MVVM+RxSwift, VIPER, RIBs and many others.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-arkit" class="anchor" aria-hidden="true" href="#arkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ARKit&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Library and tools to help you build unparalleled augmented reality experiences&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ProjectDent/ARKit-CoreLocation"&gt;ARKit-CoreLocation&lt;/a&gt; - Combines the high accuracy of AR with the scale of GPS data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ignacio-chiazzo/ARKit"&gt;Virtual Objects&lt;/a&gt; - Placing Virtual Objects in Augmented Reality.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AFathi/ARVideoKit"&gt;ARVideoKit&lt;/a&gt; - Record and capture ARKit videos, photos, Live Photos, and GIFs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/svhawks/ARKitEnvironmentMapper"&gt;ARKitEnvironmentMapper&lt;/a&gt; - A library that allows you to generate and update environment maps in real-time using the camera feed and ARKit's tracking capabilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rsrbk/SmileToUnlock"&gt;SmileToUnlock&lt;/a&gt; - This library uses ARKit Face Tracking in order to catch a user's smile.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Placenote/PlacenoteSDK-iOS"&gt;Placenote&lt;/a&gt; - A library that makes ARKit sessions persistent to a location using advanced computer vision.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/Poly"&gt;Poly&lt;/a&gt; - Unofficial Google Poly SDK ‚Äì search and display 3D models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kboy-silvergym/ARKit-Emperor"&gt;ARKit Emperor&lt;/a&gt; - The Emperor give you the most practical ARKit samples ever.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-authentication" class="anchor" aria-hidden="true" href="#authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authentication&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Oauth and Oauth2 libraries, social logins and captcha tools.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/trivago/Heimdallr.swift"&gt;Heimdallr.swift&lt;/a&gt; - Easy to use OAuth 2 library for iOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/OhMyAuth"&gt;OhMyAuth&lt;/a&gt; - Simple OAuth2 library with a support of multiple services.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raulriera/AuthenticationViewController"&gt;AuthenticationViewController&lt;/a&gt; - A simple to use, standard interface for authenticating to oauth 2.0 protected endpoints via SFSafariViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/p2/OAuth2"&gt;OAuth2&lt;/a&gt; - OAuth2 framework for macOS and iOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OAuthSwift/OAuthSwift"&gt;OAuthSwift&lt;/a&gt; - Swift based OAuth library for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/calebd/SimpleAuth"&gt;SimpleAuth&lt;/a&gt; - Simple social authentication for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/AlamofireOauth2"&gt;AlamofireOauth2&lt;/a&gt; - A swift implementation of OAuth2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/SwiftyOAuth"&gt;SwiftyOAuth&lt;/a&gt; - A simple OAuth library for iOS with a built-in set of providers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SimplicityMobile/Simplicity"&gt;Simplicity&lt;/a&gt; - A simple way to implement Facebook and Google login in your iOS and macOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Isuru-Nanayakkara/InstagramAuthViewController"&gt;InstagramAuthViewController&lt;/a&gt; - A ViewController for Instagram authentication.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbaumbach/InstagramSimpleOAuth"&gt;InstagramSimpleOAuth&lt;/a&gt; - A quick and simple way to authenticate an Instagram user in your iPhone or iPad app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbaumbach/DropboxSimpleOAuth"&gt;DropboxSimpleOAuth&lt;/a&gt; - A quick and simple way to authenticate a Dropbox user in your iPhone or iPad app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbaumbach/BoxSimpleOAuth"&gt;BoxSimpleOAuth&lt;/a&gt; - A quick and simple way to authenticate a Box user in your iPhone or iPad app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnderGoig/InstagramLogin"&gt;InstagramLogin&lt;/a&gt; - A simple way to authenticate Instagram accounts on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fjcaetano/ReCaptcha"&gt;ReCaptcha&lt;/a&gt; - (In)visible ReCaptcha for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serhii-londar/LinkedInSignIn"&gt;LinkedInSignIn&lt;/a&gt; - Simple view controller to login and retrieve access token from LinkedIn.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-blockchain" class="anchor" aria-hidden="true" href="#blockchain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blockchain&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Tool for smart contract interactions. Bitcoin protocol implementations and Frameworks for interacting with cryptocurrencies.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Boilertalk/Web3.swift"&gt;Web3.swift&lt;/a&gt; - Web3 library for interacting with the Ethereum blockchain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BANKEX/web3swift"&gt;web3swift&lt;/a&gt; - Elegant Web3js functionality in Swift. Native ABI parsing and smart contract interactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/D-Technologies/EthereumKit"&gt;EthereumKit&lt;/a&gt; - EthereumKit is a free, open-source Swift framework for easily interacting with the Ethereum.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yenom/BitcoinKit"&gt;BitcoinKit&lt;/a&gt; - Bitcoin protocol toolkit for Swift, BitcoinKit implements Bitcoin protocol in Swift. It is an implementation of the Bitcoin SPV protocol written (almost) entirely in swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SteadyAction/EtherWalletKit"&gt;EtherWalletKit&lt;/a&gt; - Ethereum Wallet Toolkit for iOS - You can implement Ethereum wallet without a server and blockchain knowledge.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coinpaprika/coinpaprika-api-swift-client"&gt;CoinpaprikaAPI&lt;/a&gt; - Coinpaprika API client with free &amp;amp; frequently updated market data from the world of crypto: coin prices, volumes, market caps, ATHs, return rates and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/horizontalsystems/bitcoin-kit-ios"&gt;Bitcoin-Swift-Kit&lt;/a&gt; - Full Bitcoin library written on Swift. Complete SPV wallet implementation for Bitcoin, Bitcoin Cash and Dash blockchains.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-bridging" class="anchor" aria-hidden="true" href="#bridging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bridging&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Sharing code between Objective-C and Swift, iOS and macOS, Javascript and Objective-C.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rubymotion.com/" rel="nofollow"&gt;RubyMotion&lt;/a&gt; - RubyMotion is a revolutionary toolchain that lets you quickly develop and test native iOS and macOS applications for iPhone, iPad and Mac, all using the Ruby language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bang590/JSPatch"&gt;JSPatch&lt;/a&gt; - JSPatch bridge Objective-C and Javascript using the Objective-C runtime. You can call any Objective-C class and method in JavaScript by just including a small engine. JSPatch is generally use for hotfix iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcuswestin/WebViewJavascriptBridge"&gt;WebViewJavascriptBridge&lt;/a&gt; - An iOS/macOS bridge for sending messages between Obj-C and JavaScript in UIWebViews/WebViews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MichaelBuckley/MAIKit"&gt;MAIKit&lt;/a&gt; - A framework for sharing code between iOS and macOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cache" class="anchor" aria-hidden="true" href="#cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cache&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Thread safe, offline and high performance cache libs and frameworks.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aschuch/AwesomeCache"&gt;Awesome Cache&lt;/a&gt; - Delightful on-disk cache (written in Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/buzzfeed/mattress"&gt;mattress&lt;/a&gt; - iOS Offline Caching for Web Content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spring-media/Carlos"&gt;Carlos&lt;/a&gt; - A simple but flexible cache.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Haneke/HanekeSwift"&gt;HanekeSwift&lt;/a&gt; - A lightweight generic cache for iOS written in Swift with extra love for images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYCache"&gt;YYCache&lt;/a&gt; - High performance cache framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Cache"&gt;Cache&lt;/a&gt; - Nothing but Cache.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mortgy/MGCacheManager"&gt;MGCacheManager&lt;/a&gt; - A delightful iOS Networking Cache Managing Class.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/SPTPersistentCache"&gt;SPTPersistentCache&lt;/a&gt; - Everyone tries to implement a cache at some point in their iOS app‚Äôs lifecycle, and this is ours. By Spotify.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maquannene/Track"&gt;Track&lt;/a&gt; - Track is a thread safe cache write by Swift. Composed of DiskCache and MemoryCache which support LRU.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kilograpp/UITableView-Cache"&gt;UITableView Cache&lt;/a&gt; - UITableView cell cache that cures scroll-lags on a cell instantiating.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/plivesey/RocketData"&gt;RocketData&lt;/a&gt; - A caching and consistency solution for immutable models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pinterest/PINCache"&gt;PINCache&lt;/a&gt; - Fast, non-deadlocking parallel object cache for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zolomatok/Johnny"&gt;Johnny&lt;/a&gt; - Melodic Caching for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saoudrizwan/Disk"&gt;Disk&lt;/a&gt; - Delightful framework for iOS to easily persist structs, images, and data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nrkno/yr-cachyr"&gt;Cachyr&lt;/a&gt; - A small key-value data cache for iOS, macOS and tvOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soffes/Cache"&gt;Cache&lt;/a&gt; - Swift caching library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yysskk/MemoryCache"&gt;MemoryCache&lt;/a&gt; - MemoryCache is type-safe memory cache.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-charts" class="anchor" aria-hidden="true" href="#charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Charts&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Beautiful, Easy and Fully customized charts&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danielgindi/Charts"&gt;Charts&lt;/a&gt; - A powerful chart / graph framework, the iOS equivalent to &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kevinzhow/PNChart"&gt;PNChart&lt;/a&gt; - A simple and beautiful chart lib used in Piner and CoinsMan for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JunyiXie/XJYChart"&gt;XJYChart&lt;/a&gt; - A Beautiful chart for iOS. Support animation, click, slide, area highlight.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boris-Em/BEMSimpleLineGraph"&gt;BEMSimpleLineGraph&lt;/a&gt; - Elegant Line Graphs for iOS (charting library).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Jawbone/JBChartView"&gt;JBChartView&lt;/a&gt; - iOS-based charting library for both line and bar graphs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xyfeng/XYPieChart"&gt;XYPieChart&lt;/a&gt; - A simple and animated Pie Chart for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xhacker/TEAChart"&gt;TEAChart&lt;/a&gt; - Simple and intuitive iOS chart library. Contribution graph, clock chart, and bar chart.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhuhuihuihui/EChart"&gt;EChart&lt;/a&gt; - iOS/iPhone/iPad Chart, Graph. Event handling and animation supported.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArthurGuibert/FSLineChart"&gt;FSLineChart&lt;/a&gt; - A line chart library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhiyu/chartee"&gt;chartee&lt;/a&gt; - A charting library for mobile platforms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anaglik/ANDLineChartView"&gt;ANDLineChartView&lt;/a&gt; - ANDLineChartView is easy to use view-based class for displaying animated line chart.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chasseurmic/TWRCharts"&gt;TWRCharts&lt;/a&gt; - An iOS wrapper for ChartJS. Easily build animated charts by leveraging the power of native Obj-C code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/i-schuetz/SwiftCharts"&gt;SwiftCharts&lt;/a&gt; - Easy to use and highly customizable charts library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/drinkius/flowerchart"&gt;FlowerChart&lt;/a&gt; - Flower-shaped chart with custom appearance animation, fully vector.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/philackm/ScrollableGraphView"&gt;Scrollable-GraphView&lt;/a&gt; - An adaptive scrollable graph view for iOS to visualise simple discrete datasets. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zomato/DR-charts"&gt;Dr-Charts&lt;/a&gt; - Dr-Charts is a highly customisable, easy to use and interactive chart / graph framework in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mtl/Graphs"&gt;Graphs&lt;/a&gt; - Light weight charts view generator for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArthurGuibert/FSInteractiveMap"&gt;FSInteractiveMap&lt;/a&gt; - A charting library to visualize and interact with a vector map on iOS. It's like Geochart but for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnnywjy/JYRadarChart"&gt;JYRadarChart&lt;/a&gt; - An iOS open source Radar Chart implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TBXark/TKRadarChart"&gt;TKRadarChart&lt;/a&gt; - A customizable radar chart in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexandrGraschenkov/MagicPie"&gt;MagicPie&lt;/a&gt; - Awesome layer based pie chart. Fantastically fast and fully customizable. Amazing animations available with MagicPie.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/i-schuetz/PieCharts"&gt;PieCharts&lt;/a&gt; - Easy to use and highly customizable pie charts library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/youkchansim/CSPieChart"&gt;CSPieChart&lt;/a&gt; - iOS PieChart Opensource. This is very easy to use and customizable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dadalar/DDSpiderChart"&gt;DDSpiderChart&lt;/a&gt; - Easy to use and customizable Spider (Radar) Chart library for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/core-plot/core-plot"&gt;core-plot&lt;/a&gt; - a 2D plotting lib which is highly customizable and capable of drawing many types of plots.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hadiidbouk/ChartProgressBar-iOS"&gt;ChartProgressBar&lt;/a&gt; - Draw a chart with progress bar style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VRGsoftUA/SMDiagramView"&gt;SMDiagramViewSwift&lt;/a&gt; - Meet cute and very flexibility library for iOS application for different data view in one circle diagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zemirco/swift-linechart"&gt;Swift LineChart&lt;/a&gt; - Line Chart library for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gpbl/SwiftChart"&gt;SwiftChart&lt;/a&gt; - Line and area chart library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/EatFit"&gt;EatFit&lt;/a&gt; - Eat fit is a component for attractive data representation inspired by Google Fit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cagricolak/CoreCharts"&gt;CoreCharts&lt;/a&gt; - CoreCharts is a simple powerful yet Charts library for apple products.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-quality" class="anchor" aria-hidden="true" href="#code-quality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Quality&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Quality always matters. Code checkers, memory vigilants, syntastic sugars and more.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/Bootstrap"&gt;Bootstrap&lt;/a&gt; - iOS project bootstrap aimed at high quality coding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/KZAsserts"&gt;KZAsserts&lt;/a&gt; - Set of custom assertions that automatically generate NSError's, allow for both Assertions in Debug and Error handling in Release builds, with beautiful DSL.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/steipete/5664345"&gt;PSPDFUIKitMainThreadGuard&lt;/a&gt; - Simple snippet generating assertions when UIKit is used on background threads.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cue/ocstyle"&gt;ocstyle&lt;/a&gt; - Objective-C style checker.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/spacecommander"&gt;spacecommander&lt;/a&gt; - Commit fully-formatted Objective-C code as a team without even trying.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/diwu/DWURecyclingAlert"&gt;DWURecyclingAlert&lt;/a&gt; - Optimizing UITableViewCell For Fast Scrolling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sleekbyte/tailor"&gt;Tailor&lt;/a&gt; - Cross-platform static analyzer for Swift that helps you to write cleaner code and avoid bugs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresinaka/SwiftCop"&gt;SwiftCop&lt;/a&gt; -  SwiftCop is a validation library fully written in Swift and inspired by the clarity of Ruby On Rails Active Record validations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VojtaStavik/Trackable"&gt;Trackable&lt;/a&gt; - Trackable is a simple analytics integration helper library. It‚Äôs especially designed for easy and comfortable integration with existing projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/MLeaksFinder"&gt;MLeaksFinder&lt;/a&gt; - Find memory leaks in your iOS app at develop time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tapwork/HeapInspector-for-iOS"&gt;HeapInspector-for-iOS&lt;/a&gt; - Find memory issues &amp;amp; leaks in your iOS app without instruments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/FBMemoryProfiler"&gt;FBMemoryProfiler&lt;/a&gt; - iOS tool that helps with profiling iOS Memory usage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/FBRetainCycleDetector"&gt;FBRetainCycleDetector&lt;/a&gt; - iOS library to help detecting retain cycles in runtime.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Buglife/Buglife-iOS"&gt;Buglife&lt;/a&gt; - Awesome bug reporting for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boredzo/Warnings-xcconfig"&gt;Warnings-xcconfig&lt;/a&gt; - An xcconfig (Xcode configuration) file for easily turning on a boatload of warnings in your project or its targets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/Aardvark"&gt;Aardvark&lt;/a&gt; - Aardvark is a library that makes it dead simple to create actionable bug reports.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/Stats"&gt;Stats&lt;/a&gt; - In-app memory usage monitoring.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/GlueKit"&gt;GlueKit&lt;/a&gt; - A type-safe observer framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/SwiftFormat"&gt;SwiftFormat&lt;/a&gt; - A code library and command-line formatting tool for reformatting Swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PSPDFKit-labs/PSTModernizer"&gt;PSTModernizer&lt;/a&gt; - Makes it easier to support older versions of iOS by fixing things and adding missing methods.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bugsee.com" rel="nofollow"&gt;Bugsee&lt;/a&gt; - In-app bug and crash reporting with video, logs, network traffic and traces.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/Fallback"&gt;Fallback&lt;/a&gt; - Syntactic sugar for nested do-try-catch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olddonkey/ODUIThreadGuard"&gt;ODUIThreadGuard&lt;/a&gt; - A guard to help you check if you make UI changes not in main thread.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastred/IBAnalyzer"&gt;IBAnalyzer&lt;/a&gt; - Find common xib and storyboard-related problems without running your app or writing unit tests.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coderyi/DecouplingKit"&gt;DecouplingKit&lt;/a&gt; - decoupling between modules in your iOS Project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Geek-1001/Clue"&gt;Clue&lt;/a&gt; - Flexible bug report framework for iOS with screencast, networking, interactions and view structure.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/weakable-self"&gt;WeakableSelf&lt;/a&gt; - A Swift micro-framework to encapsulate &lt;code&gt;[weak self]&lt;/code&gt; and &lt;code&gt;guard&lt;/code&gt; statements within closures.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-linter" class="anchor" aria-hidden="true" href="#linter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linter&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Static code analyzers to enforce style and conventions.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/oclint/oclint"&gt;OCLint&lt;/a&gt; - Static code analysis tool for improving quality and reducing defects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yopeso/Taylor"&gt;Taylor&lt;/a&gt; - Measure Swift code metrics and get reports in Xcode, Jenkins and other CI platforms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/SwiftLint"&gt;Swiftlint&lt;/a&gt; - A tool to enforce Swift style and conventions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBDecodable/IBLinter"&gt;IBLinter&lt;/a&gt; - A linter tool for Interface Builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muyexi/SwiftLinter"&gt;SwiftLinter&lt;/a&gt; - Share lint rules between projects and lint changed files with SwiftLint.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-color" class="anchor" aria-hidden="true" href="#color"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Color&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Hex color extensions, theming, color pickers and other awesome color tools.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/DynamicColor"&gt;DynamicColor&lt;/a&gt; - Yet another extension to manipulate colors easily in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thii/SwiftHEXColors"&gt;SwiftHEXColors&lt;/a&gt; - HEX color handling as an extension for UIColor.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bennyguitar/Colours"&gt;Colours&lt;/a&gt; - A beautiful set of predefined colors and a set of color methods to make your iOS/macOS development life easier.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yeahdongcn/UIColor-Hex-Swift"&gt;UIColor-Hex-Swift&lt;/a&gt; - Convenience method for creating autoreleased color using RGBA hex string.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Hue"&gt;Hue&lt;/a&gt; - Hue is the all-in-one coloring utility that you'll ever need.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brynbellomy/FlatUIColors"&gt;FlatUIColors&lt;/a&gt; - Flat UI color palette helpers written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/RandomColorSwift"&gt;RandomColorSwift&lt;/a&gt; - An attractive color generator for Swift. Ported from &lt;code&gt;randomColor.js&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectFreeze/PFColorHash"&gt;PFColorHash&lt;/a&gt; - Generate color based on the given string.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boycechang/BCColor"&gt;BCColor&lt;/a&gt; - A lightweight but powerful color kit (Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Draveness/DKNightVersion"&gt;DKNightVersion&lt;/a&gt; - Manage Colors, Integrate Night/Multiple Themes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jdhealy/PrettyColors"&gt;PrettyColors&lt;/a&gt; - PrettyColors is a Swift library for styling and coloring text in the Terminal. The library outputs &lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code" rel="nofollow"&gt;ANSI escape codes&lt;/a&gt; and conforms to ECMA Standard 48.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/burhanuddin353/TFTColor"&gt;TFTColor&lt;/a&gt; - Simple Extension for RGB and CMKY Hex Strings and Hex Values (ObjC &amp;amp; Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakemarsh/CostumeKit"&gt;CostumeKit&lt;/a&gt; - Base types for theming an app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/CSS3ColorsSwift"&gt;CSS3ColorsSwift&lt;/a&gt; - A UIColor extension with CSS3 Colors name.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/czater/Colorify"&gt;Colorify&lt;/a&gt; - Simple, yet powerful color library that includes latest and most trendy colors from 2017.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joncardasis/ChromaColorPicker"&gt;ChromaColorPicker&lt;/a&gt; - An intuitive iOS color picker built in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/valdirunars/Lorikeet"&gt;Lorikeet&lt;/a&gt; - A lightweight Swift framework for aesthetically pleasing color-scheme generation and CIE color-difference calculation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/regexident/Gestalt"&gt;Gestalt&lt;/a&gt; - An unintrusive &amp;amp; light-weight iOS app-theming library with support for animated theme switching.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Smart, beauftil and elegant tools to help you create command line applications.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nsomar/Swiftline"&gt;Swiftline&lt;/a&gt; - Swiftline is a set of tools to help you create command line applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Commander"&gt;Commander&lt;/a&gt; - Compose beautiful command line interfaces in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mtynior/ColorizeSwift"&gt;ColorizeSwift&lt;/a&gt; - Terminal string styling for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nsomar/Guaka"&gt;Guaka&lt;/a&gt; - The smartest and most beautiful (POSIX compliant) Command line framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Marathon"&gt;Marathon&lt;/a&gt; - Marathon makes it easy to write, run and manage your Swift scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/surfandneptune/CommandCougar"&gt;CommandCougar&lt;/a&gt; - An elegant pure Swift library for building command line applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luoxiu/Crayon"&gt;Crayon&lt;/a&gt; - Terminal string styling with expressive api and 256/TrueColor support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kareman/SwiftShell"&gt;SwiftShell&lt;/a&gt; - A Swift framework for shell scripting and running shell commands.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eneko/SourceDocs"&gt;SourceDocs&lt;/a&gt; - Command Line Tool that generates Markdown documentation from inline source code comments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/minuscorp/ModuleInterface"&gt;ModuleInterface&lt;/a&gt; - Command Line Tool that generates the Module's Interface from a Swift project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Job schedulers, Coroutines, Asynchronous and Type safe threads libs and frameworks written in Swift&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Zewo/Venice"&gt;Venice&lt;/a&gt; - CSP (Coroutines, Channels, Select) for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/Concurrent"&gt;Concurrent&lt;/a&gt; - Functional Concurrency Primitives.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Flow"&gt;Flow&lt;/a&gt; - Operation Oriented Programming in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmfieldman/Brisk"&gt;Brisk&lt;/a&gt; - A Swift DSL that allows concise and effective concurrency manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aojet/Aojet"&gt;Aojet&lt;/a&gt; - An actor model library for swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saidsikira/Overdrive"&gt;Overdrive&lt;/a&gt; - Fast async task based Swift framework with focus on type safety, concurrency and multi threading.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AsyncNinja/AsyncNinja"&gt;AsyncNinja&lt;/a&gt; - A complete set of concurrency and reactive programming primitives.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intelygenz/Kommander-iOS"&gt;Kommander&lt;/a&gt; - Kommander is a Swift library to manage the task execution in different threads. Through the definition a simple but powerful concept, Kommand.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Threadly"&gt;Threadly&lt;/a&gt; - Type-safe thread-local storage in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roytornado/Flow-iOS"&gt;Flow-iOS&lt;/a&gt; - Make your logic flow and data flow clean and human readable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FabrizioBrancati/Queuer"&gt;Queuer&lt;/a&gt; - A queue manager, built on top of OperationQueue and Dispatch (aka GCD).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lucas34/SwiftQueue"&gt;SwiftQueue&lt;/a&gt; - Job Scheduler with Concurrent run, failure/retry, persistence, repeat, delay and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quanvo87/GroupWork"&gt;GroupWork&lt;/a&gt; - Easy concurrent, asynchronous tasks in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stickytools/sticky-locking"&gt;StickyLocking&lt;/a&gt; - A general purpose embedded hierarchical lock manager used to build highly concurrent applications of all types.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-core-data" class="anchor" aria-hidden="true" href="#core-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Data&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Core data Frameworks, wrappers, generators and boilerplates.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/drewmccormack/ensembles"&gt;Ensembles&lt;/a&gt; - A synchronization framework for Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rentzsch/mogenerator"&gt;Mogenerator&lt;/a&gt; - Automatic Core Data code generation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/magicalpanda/MagicalRecord"&gt;MagicalRecord&lt;/a&gt; - Super Awesome Easy Fetching for Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnEstropia/CoreStore"&gt;CoreStore&lt;/a&gt; - Powerful Core Data framework for Incremental Migrations, Fetching, Observering, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prosumma/CoreDataQueryInterface"&gt;Core Data Query Interface&lt;/a&gt; A type-safe, fluent query framework for Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Graph"&gt;Graph&lt;/a&gt; - An elegant data-driven framework for CoreData in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fuzz-productions/CoreDataDandy"&gt;CoreDataDandy&lt;/a&gt; - A feature-light wrapper around Core Data that simplifies common database operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/Sync"&gt;Sync&lt;/a&gt; - Modern Swift JSON synchronization to Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alecrim/AlecrimCoreData"&gt;AlecrimCoreData&lt;/a&gt; - A powerful and simple Core Data wrapper framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AERecord"&gt;AERecord&lt;/a&gt; - Super awesome Core Data wrapper in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bignerdranch/CoreDataStack"&gt;CoreDataStack&lt;/a&gt; - The Big Nerd Ranch Core Data Stack.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/JSQCoreDataKit"&gt;JSQCoreDataKit&lt;/a&gt; - A swifter Core Data stack.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/albertodebortoli/Skopelos"&gt;Skopelos&lt;/a&gt; - A minimalistic, thread safe, non-boilerplate and super easy to use version of Active Record on Core Data. Simply all you need for doing Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmfieldman/cadmium"&gt;Cadmium&lt;/a&gt; - A complete swift framework that wraps CoreData and helps facilitate best practices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mrdekk/DataKernel"&gt;DataKernel&lt;/a&gt; - Simple CoreData wrapper to ease operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/DATAStack"&gt;DATAStack&lt;/a&gt; - 100% Swift Simple Boilerplate Free Core Data Stack. NSPersistentContainer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justeat/JustPersist"&gt;JustPersist&lt;/a&gt; - JustPersist is the easiest and safest way to do persistence on iOS with Core Data support out of the box.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KrakenDev/PrediKit"&gt;PrediKit&lt;/a&gt; - An NSPredicate DSL for iOS, macOS, tvOS, &amp;amp; watchOS. Inspired by SnapKit and lovingly written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BowdusBrown/Records"&gt;Records&lt;/a&gt; - In just a few minutes, setup a fully functioning CoreData implementation that embraces the static, type-safe nature of Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreadelfante/PredicateFlow"&gt;PredicateFlow&lt;/a&gt; - Write amazing, strong-typed and easy-to-read NSPredicate, allowing you to write flowable NSPredicate, without guessing attribution names, predicate operation or writing wrong arguments type.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-database" class="anchor" aria-hidden="true" href="#database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Wrappers, clients, Parse alternatives and safe tools to deal with ephemeral and persistent data.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/realm-cocoa"&gt;Realm&lt;/a&gt; - The alternative to CoreData and SQLite: Simple, modern and fast.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yapstudios/YapDatabase"&gt;YapDatabase&lt;/a&gt; - YapDatabase is an extensible database for iOS &amp;amp; Mac.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.couchbase.com/products/mobile/" rel="nofollow"&gt;Couchbase Mobile&lt;/a&gt; - Couchbase document store for mobile with cloud sync.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ccgus/fmdb"&gt;FMDB&lt;/a&gt; - A Cocoa / Objective-C wrapper around SQLite.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcoarment/FCModel"&gt;FCModel&lt;/a&gt; - An alternative to Core Data for people who like having direct SQL access.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Zephyr"&gt;Zephyr&lt;/a&gt; - Effortlessly synchronize NSUserDefaults over iCloud.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/Prephirences"&gt;Prephirences&lt;/a&gt; - Prephirences is a Swift library that provides useful protocols and convenience methods to manage application preferences, configurations and app-state.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Storez"&gt;Storez&lt;/a&gt; - Safe, statically-typed, store-agnostic key-value storage (with namespace support).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sunshinejr/SwiftyUserDefaults"&gt;SwiftyUserDefaults&lt;/a&gt; - Statically-typed NSUserDefaults.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/modo-studio/SugarRecord"&gt;SugarRecord&lt;/a&gt;  - Data persistence management library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stephencelis/SQLite.swift"&gt;SQLite.swift&lt;/a&gt; - A type-safe, Swift-language layer over SQLite3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDB.swift"&gt;GRDB.swift&lt;/a&gt; - A versatile SQLite toolkit for Swift, with WAL mode support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor/fluent"&gt;Fluent&lt;/a&gt; - Simple ActiveRecord implementation for working with your database in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/relatedcode/ParseAlternatives"&gt;ParseAlternatives&lt;/a&gt; - A collaborative list of Parse alternative backend service providers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tasanobu/TypedDefaults"&gt;TypedDefaults&lt;/a&gt; - TypedDefaults is a utility library to type-safely use NSUserDefaults.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/realm-cocoa-converter"&gt;realm-cocoa-converter&lt;/a&gt; - A library that provides the ability to import/export Realm files from a variety of data container formats.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danthorpe/YapDatabaseExtensions"&gt;YapDatabaseExtensions&lt;/a&gt; - YapDatabase extensions for use with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mhergon/RealmGeoQueries"&gt;RealmGeoQueries&lt;/a&gt; - RealmGeoQueries simplifies spatial queries with Realm Cocoa. In the absence of and official functions, this library provide the possibility to do proximity search.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Danappelxx/SwiftMongoDB"&gt;SwiftMongoDB&lt;/a&gt; - A MongoDB interface for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iabudiab/ObjectiveRocks"&gt;ObjectiveRocks&lt;/a&gt; - An Objective-C wrapper of Facebook's RocksDB - A Persistent Key-Value Store for Flash and RAM Storage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oleghnidets/OHMySQL"&gt;OHMySQL&lt;/a&gt; - An Objective-C wrapper of MySQL C API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemantasapkota/SwiftStore"&gt;SwiftStore&lt;/a&gt; - Key-Value store for Swift backed by LevelDB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/OneStore"&gt;OneStore&lt;/a&gt; - A single value proxy for NSUserDefaults, with clean API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-MongoDB"&gt;MongoDB&lt;/a&gt; - A Swift wrapper around the mongo-c client library, enabling access to MongoDB servers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-MySQL"&gt;MySQL&lt;/a&gt; - A Swift wrapper around the MySQL client library, enabling access to MySQL servers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-Redis"&gt;Redis&lt;/a&gt; - A Swift wrapper around the Redis client library, enabling access to Redis.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-PostgreSQL"&gt;PostgreSQL&lt;/a&gt; - A Swift wrapper around the libpq client library, enabling access to PostgreSQL servers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-FileMaker"&gt;FileMaker&lt;/a&gt; - A Swift wrapper around the FileMaker XML Web publishing interface, enabling access to FileMaker servers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SD10/Nora"&gt;Nora&lt;/a&gt; - Nora is a Firebase abstraction layer for working with FirebaseDatabase and FirebaseStorage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanRublev/PersistentStorageSerializable"&gt;PersistentStorageSerializable&lt;/a&gt; - Swift library that makes easier to serialize the user's preferences (app's settings) with system User Defaults or Property List file on disk.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/wcdb"&gt;WCDB&lt;/a&gt; - WCDB is an efficient, complete, easy-to-use mobile database framework for iOS, macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/StorageKit/StorageKit"&gt;StorageKit&lt;/a&gt; - Your Data Storage Troubleshooter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nmdias/DefaultsKit"&gt;UserDefaults&lt;/a&gt; - Simple, Strongly Typed UserDefaults for iOS, macOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/Default"&gt;Default&lt;/a&gt; - Modern interface to UserDefaults + Codable support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/caiyue1993/IceCream"&gt;IceCream&lt;/a&gt; - Sync Realm Database with CloudKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quanvo87/FirebaseHelper"&gt;FirebaseHelper&lt;/a&gt; - Safe and easy wrappers for common Firebase Realtime Database functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dreymonde/Shallows"&gt;Shallows&lt;/a&gt; - Your lightweight persistence toolbox.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iAmrSalman/StorageManager"&gt;StorageManager&lt;/a&gt; - Safe and easy way to use FileManager as Database.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-lpmg/RealmWrapper"&gt;RealmWrapper&lt;/a&gt; - Safe and easy wrappers for RealmSwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/omaralbeik/UserDefaultsStore"&gt;UserDefaultsStore&lt;/a&gt; - An easy and very light way to store and retrieve -reasonable amount- of Codable objects, in a couple lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metasmile/PropertyKit"&gt;PropertyKit&lt;/a&gt; - Protocol-First, Type and Key-Safe Swift Property for iOS, macOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Teknasyon-Teknoloji/PersistenceKit"&gt;PersistenceKit&lt;/a&gt; - Store and retrieve Codable objects to various persistence layers, in a couple lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ssamadgh/ModelAssistant"&gt;ModelAssistant&lt;/a&gt; - Elegant library to manage the interactions between view and model in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/MMKV"&gt;MMKV&lt;/a&gt; - An efficient, small mobile key-value storage framework developed by WeChat. Works on iOS, Android, macOS and Windows.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/Defaults"&gt;Defaults&lt;/a&gt; - Swifty and modern UserDefaults.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenKitten/MongoKitten"&gt;MongoKitten&lt;/a&gt; - A pure Swift MongoDB client implementation with support for embedded databases.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vpeschenkov/SecureDefaults"&gt;SecureDefaults&lt;/a&gt; - A lightweight wrapper over UserDefaults/NSUserDefaults with an extra AES-256 encryption layer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturdev/Unrealm"&gt;Unrealm&lt;/a&gt; - Unrealm enables you to easily store Swift native Classes, Structs and Enums into Realm.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-data-structures--algorithms" class="anchor" aria-hidden="true" href="#data-structures--algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Structures / Algorithms&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Diffs, keypaths, sorted lists and other amazing data structures wrappers and libraries.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/osteslag/Changeset"&gt;Changeset&lt;/a&gt; - Minimal edits from one collection to another.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/BTree"&gt;BTree&lt;/a&gt; - Fast ordered collections for Swift using in-memory B-trees.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/waynewbishop/SwiftStructures"&gt;SwiftStructures&lt;/a&gt; - Examples of commonly used data structures and algorithms in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soffes/diff"&gt;diff&lt;/a&gt; - Simple diff library in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Brick"&gt;Brick&lt;/a&gt; - A generic view model for both basic and complex scenarios.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Algorithm"&gt;Algorithm&lt;/a&gt; - Algorithm is a collection of data structures that are empowered by a probability toolset.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tarunon/AnyObjectConvertible"&gt;AnyObjectConvertible&lt;/a&gt; - Convert your own struct/enum to AnyObject easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ankurp/Dollar"&gt;Dollar&lt;/a&gt; - A functional tool-belt for Swift Language similar to Lo-Dash or Underscore.js in Javascript &lt;a href="https://www.dollarswift.org/" rel="nofollow"&gt;https://www.dollarswift.org/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antitypical/Result"&gt;Result&lt;/a&gt; - Swift type modeling the success/failure of arbitrary operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EvgenyKarkan/EKAlgorithms"&gt;EKAlgorithms&lt;/a&gt; - Some well known CS algorithms &amp;amp; data structures in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naru-jpn/Monaka"&gt;Monaka&lt;/a&gt; - Convert custom struct and fundamental values to NSData.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexdrone/Buffer"&gt;Buffer&lt;/a&gt; - Swift Œº-framework for efficient array diffs, collection observation and cell configuration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davecom/SwiftGraph"&gt;SwiftGraph&lt;/a&gt; - Graph data structure and utility functions in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davecom/SwiftPriorityQueue"&gt;SwiftPriorityQueue&lt;/a&gt; - A priority queue with a classic binary heap implementation in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naru-jpn/pencil"&gt;Pencil&lt;/a&gt; - Write values to file and read it more easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mcudich/HeckelDiff"&gt;HeckelDiff&lt;/a&gt; - A fast Swift diffing library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artemstepanenko/Dekoter"&gt;Dekoter&lt;/a&gt; - &lt;code&gt;NSCoding&lt;/code&gt;'s counterpart for Swift structs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/swift-algorithm-club"&gt;swift-algorithm-club&lt;/a&gt; - Algorithms and data structures in Swift, with explanations!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/david-coyle-sjc/impeller"&gt;Impeller&lt;/a&gt; - A Distributed Value Store in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexdrone/Store"&gt;Dispatch&lt;/a&gt; - Multi-store Flux implementation in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/DeepDiff"&gt;DeepDiff&lt;/a&gt; - Diff in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonyarnold/Differ"&gt;Differ&lt;/a&gt; - Swift library to generate differences and patches between collections.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/harlanhaskins/Probably"&gt;Probably&lt;/a&gt; - A Swift probability and statistics library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesdouble/RandMyMod"&gt;RandMyMod&lt;/a&gt; - RandMyMod base on your own struct or class create one or a set of randomized instance.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/KeyPathKit"&gt;KeyPathKit&lt;/a&gt; - KeyPathKit provides a seamless syntax to manipulate data using typed keypaths.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Differific"&gt;Differific&lt;/a&gt; - A fast and convenient diffing framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ladeiko/OneWaySynchronizer"&gt;OneWaySynchronizer&lt;/a&gt; - The simplest abstraction to synchronize local data with remote source.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DifferenceKit"&gt;DifferenceKit&lt;/a&gt; - A fast and flexible O(n) difference algorithm framework for Swift collection.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-date--time" class="anchor" aria-hidden="true" href="#date--time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date &amp;amp; Time&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Time and NSCalendar libraries. Also contains Sunrise and Sunset time generators, time pickers and NSTimer interfaces.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/naoty/Timepiece"&gt;Timepiece&lt;/a&gt; - Intuitive NSDate extensions in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/SwiftDate"&gt;SwiftDate&lt;/a&gt; - The best way to manage Dates and Timezones in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/akosma/SwiftMoment"&gt;SwiftMoment&lt;/a&gt; - A time and calendar manipulation library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatthewYork/DateTools"&gt;DateTools&lt;/a&gt; - Dates and times made easy in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radex/SwiftyTimer"&gt;SwiftyTimer&lt;/a&gt; - Swifty API for NSTimer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/melvitax/DateHelper"&gt;DateHelper&lt;/a&gt; - Convenience extension for NSDate in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boredzo/iso-8601-date-formatter"&gt;iso-8601-date-formatter&lt;/a&gt; - A Cocoa NSFormatter subclass to convert dates to and from ISO-8601-formatted strings. Supports calendar, week, and ordinal formats.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thomaspaulmann/EmojiTimeFormatter"&gt;EmojiTimeFormatter&lt;/a&gt; - Format your dates/times as emojis.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lyft/Kronos"&gt;Kronos&lt;/a&gt; - Elegant NTP date library in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/instacart/TrueTime.swift"&gt;TrueTime&lt;/a&gt; - Get the true current time impervious to device clock time changes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joedaniels29/10Clock"&gt;10Clock&lt;/a&gt; - This Control is a beautiful time-of-day picker heavily inspired by the iOS 10 "Bedtime" timer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kevinlawler/NSDate-TimeAgo"&gt;NSDate-TimeAgo&lt;/a&gt; - A "time ago", "time since", "relative date", or "fuzzy date" category for NSDate and iOS, Objective-C, Cocoa Touch, iPhone, iPad.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kawoou/AnyDate"&gt;AnyDate&lt;/a&gt; - Swifty Date &amp;amp; Time API inspired from Java 8 DateTime API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gligorkot/TimeZonePicker"&gt;TimeZonePicker&lt;/a&gt; - A TimeZonePicker UIViewController similar to the iOS Settings app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dreymonde/Time"&gt;Time&lt;/a&gt; - Type-safe time calculations in Swift, powered by generics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davedelong/Chronology"&gt;Chronology&lt;/a&gt; - Building a better date/time library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ceeK/Solar"&gt;Solar&lt;/a&gt; - A Swift micro library for generating Sunrise and Sunset times.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Endore8/TimePicker"&gt;TimePicker&lt;/a&gt; - Configurable time picker component based on a pan gesture and its velocity.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/awesome-labs/LFTimePicker"&gt;LFTimePicker&lt;/a&gt; - Custom Time Picker ViewController with Selection of start and end times in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/novalagung/nvdate"&gt;NVDate&lt;/a&gt; - Swift4 Date extension library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luoxiu/Schedule"&gt;Schedule&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="hourglass_flowing_sand" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/23f3.png"&gt;‚è≥&lt;/g-emoji&gt; A missing lightweight task scheduler for Swift with an incredibly human-friendly syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Debugging tools, crash reports, logs and console UI's.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/Xniffer"&gt;Xniffer&lt;/a&gt; - A swift network profiler built on top of URLSession.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kasketis/netfox"&gt;Netfox&lt;/a&gt; - A lightweight, one line setup, iOS / macOS network debugging library!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/PonyDebugger"&gt;PonyDebugger&lt;/a&gt; - Remote network and data debugging for your native iOS app using Chrome Developer Tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dbukowski/DBDebugToolkit"&gt;DBDebugToolkit&lt;/a&gt; - Set of easy to use debugging tools for iOS developers &amp;amp; QA engineers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Flipboard/FLEX"&gt;Flex&lt;/a&gt; - An in-app debugging and exploration tool for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/chisel"&gt;chisel&lt;/a&gt; - Collection of LLDB commands to assist debugging iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Legoless/Alpha"&gt;Alpha&lt;/a&gt; - Next generation debugging framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEConsole"&gt;AEConsole&lt;/a&gt; - Customizable Console UI overlay with debug log on top of your iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zixun/GodEye"&gt;GodEye&lt;/a&gt; - Automatically display Log,Crash,Network,ANR,Leak,CPU,RAM,FPS,NetFlow,Folder and etc with one line of code based on Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coderyi/NetworkEye"&gt;NetworkEye&lt;/a&gt; - a iOS network debug library, It can monitor HTTP requests within the App and displays information related to the request.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remirobert/Dotzu"&gt;Dotzu&lt;/a&gt; - iOS app debugger while using the app. Crash report, logs, network.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willowtreeapps/Hyperion-iOS"&gt;Hyperion&lt;/a&gt; - In-app design review tool to inspect measurements, attributes, and animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MuShare/Httper-iOS"&gt;Httper-iOS&lt;/a&gt; - App for developers to test REST API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/myriadmobile/Droar"&gt;Droar&lt;/a&gt; - Droar is a modular, single-line installation debugging window.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmusolino/Wormholy"&gt;Wormholy&lt;/a&gt; - iOS network debugging, like a wizard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appspector.com" rel="nofollow"&gt;AppSpector&lt;/a&gt; - Remote iOS and Android debugging and data collection service. You can debug networking, logs, CoreData, SQLite, NSNotificationCenter and mock device's geo location.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.woodpeck.cn" rel="nofollow"&gt;Woodpecker&lt;/a&gt; - View sandbox files, UserDefaults, network request from Mac.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isavynskyi/LayoutInspector"&gt;LayoutInspector&lt;/a&gt; - Debug app layouts directly on iOS device: inspect layers in 3D and debug each visible view attributes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meitu/MTHawkeye"&gt;MTHawkeye&lt;/a&gt; - Profiling / Debugging assist tools for iOS, include tools: UITimeProfiler, Memory Allocations, Living ObjC Objects Sniffer, Network Transaction Waterfall, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-eventbus" class="anchor" aria-hidden="true" href="#eventbus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EventBus&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Promises and Futures libraries to help you write better async code in Swift.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cesarferreira/SwiftEventBus"&gt;SwiftEventBus&lt;/a&gt; - A publish/subscribe event bus optimized for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mxcl/PromiseKit"&gt;PromiseKit&lt;/a&gt; - Promises for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BoltsFramework/Bolts-ObjC"&gt;Bolts&lt;/a&gt; - Bolts is a collection of low-level libraries designed to make developing mobile apps easier, including tasks (promises) and app links (deep links).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactKit/SwiftTask"&gt;SwiftTask&lt;/a&gt; - Promise + progress + pause + cancel + retry for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/When"&gt;When&lt;/a&gt; - A lightweight implementation of Promises in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/then"&gt;then&lt;g-emoji class="g-emoji" alias="clapper" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3ac.png"&gt;üé¨&lt;/g-emoji&gt;&lt;/a&gt; - Elegant Async code in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BoltsFramework/Bolts-Swift"&gt;Bolts-Swift&lt;/a&gt; - Bolts is a collection of low-level libraries designed to make developing mobile apps easier.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/deput/RWPromiseKit"&gt;RWPromiseKit&lt;/a&gt; - A light-weighted Promise library for Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/couchdeveloper/FutureLib"&gt;FutureLib&lt;/a&gt; - FutureLib is a pure Swift 2 library implementing Futures &amp;amp; Promises inspired by Scala.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/100mango/SwiftNotificationCenter"&gt;SwiftNotificationCenter&lt;/a&gt; - A Protocol-Oriented NotificationCenter which is type safe, thread safe and with memory safety.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FutureKit/FutureKit"&gt;FutureKit&lt;/a&gt; - A Swift based Future/Promises Library for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/signals-ios"&gt;signals-ios&lt;/a&gt; - Typeful eventing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Thomvis/BrightFutures"&gt;BrightFutures&lt;/a&gt; - Write great asynchronous code in Swift using futures and promises.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/NoticeObserveKit"&gt;NoticeObserveKit&lt;/a&gt; - NoticeObserveKit is type-safe NotificationCenter wrapper that associates notice type with info type.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/Hydra"&gt;Hydra&lt;/a&gt; - Promises &amp;amp; Await - Write better async code in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/albertodebortoli/Promis"&gt;Promis&lt;/a&gt; - The easiest Future and Promises framework in Swift. No magic. No boilerplate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AndrewBarba/Bluebird.swift"&gt;Bluebird.swift&lt;/a&gt; - Promise/A+, Bluebird inspired, implementation in Swift 4.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khanlou/Promise"&gt;Promise&lt;/a&gt; - A Promise library for Swift, based partially on Javascript's A+ spec.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/promises"&gt;promises&lt;/a&gt; - Google provides a synchronization construct for Objective-C and Swift to facilitate writing asynchronous code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/Continuum"&gt;Continuum&lt;/a&gt; - NotificationCenter based Lightweight UI / AnyObject binder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/formbound/Futures"&gt;Futures&lt;/a&gt; - Lightweight promises for iOS, macOS, tvOS, watchOS, and server-side Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DimaMishchenko/EasyFutures"&gt;EasyFutures&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;üîó&lt;/g-emoji&gt; Swift Futures &amp;amp; Promises. Easy to use. Highly combinable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mcmatan/topicEventBus"&gt;TopicEventBus&lt;/a&gt; - Publish‚Äìsubscribe design pattern implementation framework, with ability to publish events by topic. (NotificationCenter extended alternative).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-files" class="anchor" aria-hidden="true" href="#files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Files&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;File management, file browser, zip handling and file observers.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/FileKit"&gt;FileKit&lt;/a&gt; - Simple and expressive file management in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Zip"&gt;Zip&lt;/a&gt; - Swift framework for zipping and unzipping files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/FileBrowser"&gt;FileBrowser&lt;/a&gt; - Powerful Swift file browser for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/indragiek/Ares"&gt;Ares&lt;/a&gt; - Zero-setup P2P file transfer between Macs and iOS devices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amosavian/FileProvider"&gt;FileProvider&lt;/a&gt; - FileManager replacement for Local, iCloud and Remote (WebDAV/FTP/Dropbox/OneDrive/SMB2) files on iOS/tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/KZFileWatchers"&gt;KZFileWatchers&lt;/a&gt; - A micro-framework for observing file changes, both local and remote. Helpful in building developer tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZipArchive/ZipArchive"&gt;ZipArchive&lt;/a&gt; - ZipArchive is a simple utility class for zipping and unzipping files on iOS and Mac.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Augustyniak/FileExplorer"&gt;FileExplorer&lt;/a&gt; - Powerful file browser for iOS that allows its users to choose and remove files and/or directories.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/weichsel/ZIPFoundation"&gt;ZIPFoundation&lt;/a&gt; - Effortless ZIP Handling in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dreymonde/AppFolder"&gt;AppFolder&lt;/a&gt; - AppFolder is a lightweight framework that lets you design a friendly, strongly-typed representation of a directories inside your app's container.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pixelglow/ZipZap"&gt;ZipZap&lt;/a&gt; - zip file I/O library for iOS, macOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amosavian/AMSMB2"&gt;AMSMB2&lt;/a&gt; - Swift framework to connect SMB 2/3 shares for iOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-functional-programming" class="anchor" aria-hidden="true" href="#functional-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functional Programming&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Collection of Swift functional programming tools.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ulrikdamm/Forbind"&gt;Forbind&lt;/a&gt; - Functional chaining and promises in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brynbellomy/Funky"&gt;Funky&lt;/a&gt; - Functional programming tools and experiments in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LlamaKit/LlamaKit"&gt;LlamaKit&lt;/a&gt; - Collection of must-have functional Swift tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tptee/Oriole"&gt;Oriole&lt;/a&gt; - A functional utility belt implemented as Swift protocol extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robrix/Prelude"&gt;Prelude&lt;/a&gt; - Swift ¬µframework of simple functional programming tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/Swiftx"&gt;Swiftx&lt;/a&gt; - Functional data types and functions for any project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/Swiftz"&gt;Swiftz&lt;/a&gt; -  Functional programming in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RuiAAPeres/OptionalExtensions"&gt;OptionalExtensions&lt;/a&gt; - Swift ¬µframework with extensions for the  Optional Type.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Argo"&gt;Argo&lt;/a&gt; - Functional JSON parsing library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Runes"&gt;Runes&lt;/a&gt; - Infix operators for monadic functions in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bow-swift/bow"&gt;Bow&lt;/a&gt; - Typed Functional Programming companion library for Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-games" class="anchor" aria-hidden="true" href="#games"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Games&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Sage"&gt;Sage&lt;/a&gt; - A cross-platform chess library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/codelynx/ShogibanKit"&gt;ShogibanKit&lt;/a&gt; - ShogibanKit is a framework for implementing complex Japanese Chess (Shogii) in Swift. No UI, nor AI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mfessenden/SKTiled"&gt;SKTiled&lt;/a&gt; - Swift framework for working with Tiled assets in SpriteKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bwide/CollectionNode"&gt;CollectionNode&lt;/a&gt; - A swift framework for a collectionView in SpriteKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugenebokhan/AssetImportKit"&gt;AssetImportKit&lt;/a&gt; - Swifty cross platform library (macOS, iOS) that converts Assimp supported models to SceneKit scenes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cocoatoucher/Glide"&gt;glide engine&lt;/a&gt; - SpriteKit and GameplayKit based engine for making 2d games, with practical examples and tutorials.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-gcd" class="anchor" aria-hidden="true" href="#gcd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GCD&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Grand Central Dispatch syntax sugars, tools and timers.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnEstropia/GCDKit"&gt;GCDKit&lt;/a&gt; - Grand Central Dispatch simplified with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/duemunk/Async"&gt;Async&lt;/a&gt; - Syntactic sugar in Swift for asynchronous dispatches in Grand Central Dispatch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nodes-ios/SwiftSafe"&gt;SwiftSafe&lt;/a&gt; - Thread synchronization made easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYDispatchQueuePool"&gt;YYDispatchQueuePool&lt;/a&gt; - iOS utility class to manage global dispatch queue.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alecrim/AlecrimAsyncKit"&gt;AlecrimAsyncKit&lt;/a&gt; - Bringing async and await to Swift world with some flavouring.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/GrandSugarDispatch"&gt;GrandSugarDispatch&lt;/a&gt; - Syntactic sugar for Grand Central Dispatch (GCD).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mitchtreece/Threader"&gt;Threader&lt;/a&gt; - Pretty GCD calls and easier code execution.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JARMourato/Dispatch"&gt;Dispatch&lt;/a&gt; - Just a tiny library to make using GCD easier and intuitive.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemantasapkota/GCDTimer"&gt;GCDTimer&lt;/a&gt; - Well tested Grand Central Dispatch (GCD) Timer in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/comyar/Chronos-Swift"&gt;Chronos-Swift&lt;/a&gt; - Grand Central Dispatch Utilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pascalbros/Me"&gt;Me&lt;/a&gt; - A super slim solution to the nested asynchronous computations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Albinzr/SwiftyTask"&gt;SwiftyTask&lt;/a&gt; - An extreme queuing system with high performance for managing all task in app with closure.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-gesture" class="anchor" aria-hidden="true" href="#gesture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gesture&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Libraries and tools to handle gestures.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/Tactile"&gt;Tactile&lt;/a&gt; - A better way to handle gestures on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/b3ll/SwiftyGestureRecognition"&gt;SwiftyGestureRecognition&lt;/a&gt; - Aids with prototyping UIGestureRecognizers in Xcode Playgrounds.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/didierbrun/DBPathRecognizer"&gt;DBPathRecognizer&lt;/a&gt; - Gesture recognizer tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/igormatyushkin014/Sensitive"&gt;Sensitive&lt;/a&gt; - Fresh look at work with gestures in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MarioIannotta/SplitViewDragAndDrop"&gt;SplitViewDragAndDrop&lt;/a&gt; - Easily add drag and drop to pass data between your apps in split view mode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/forkingdog/FDFullscreenPopGesture"&gt;FDFullscreenPopGesture&lt;/a&gt; - An UINavigationController's category to enable fullscreen pop gesture in an iOS7+ system style with AOP.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-graphics" class="anchor" aria-hidden="true" href="#graphics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graphics&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;CoreGraphics, CoreAnimation, SVG, CGContext libraries, helpers and tools.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Graphicz"&gt;Graphicz&lt;/a&gt; - Light-weight, operator-overloading-free complements to CoreGraphics!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pkluz/PKCoreTechniques"&gt;PKCoreTechniques&lt;/a&gt; - The code for my CoreGraphics+CoreAnimation talk, held during the 2012 iOS Game Design Seminar at the Technical University Munich.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpw/MPWDrawingContext"&gt;MPWDrawingContext&lt;/a&gt; - An Objective-C wrapper for CoreGraphics CGContext.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidcairns/DePict"&gt;DePict&lt;/a&gt; - A simple, declarative, functional drawing framework, in Swift!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mchoe/SwiftSVG"&gt;SwiftSVG&lt;/a&gt; -  A single pass SVG parser with multiple interface options (String, NS/UIBezierPath, CAShapeLayer, and NS/UIView).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shaps80/InkKit"&gt;InkKit&lt;/a&gt; - Write-Once, Draw-Everywhere for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYAsyncLayer"&gt;YYAsyncLayer&lt;/a&gt; - iOS utility classes for asynchronous rendering and display.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nicejinux/NXDrawKit"&gt;NXDrawKit&lt;/a&gt; - NXDrawKit is a simple and easy but useful drawing kit for iPhone.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IFTTT/jot"&gt;jot&lt;/a&gt; - An iOS framework for easily adding drawings and text to images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SVGKit/SVGKit"&gt;SVGKit&lt;/a&gt; - Display and interact with SVG Images on iOS / macOS, using native rendering (CoreAnimation) (currently only supported for iOS - macOS code needs updating).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Snowflake"&gt;Snowflake&lt;/a&gt; - SVG in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/victorgama/HxSTLParser"&gt;HxSTLParser&lt;/a&gt; - Basic STL loader for SceneKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/natmark/ProcessingKit"&gt;ProcessingKit&lt;/a&gt; - Visual designing library for iOS &amp;amp; OSX.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shashankpali/EZYGradientView"&gt;EZYGradientView&lt;/a&gt; - Create gradients and blur gradients without a single line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEConicalGradient"&gt;AEConicalGradient&lt;/a&gt; - Conical (angular) gradient layer written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxkonovalov/MKGradientView"&gt;MKGradientView&lt;/a&gt; - Core Graphics based gradient view capable of producing Linear (Axial), Radial (Circular), Conical (Angular), Bilinear (Four Point) gradients, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ipraba/EPShapes"&gt;EPShapes&lt;/a&gt; - Design shapes in Interface Builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/macaw"&gt;Macaw&lt;/a&gt; - Powerful and easy-to-use vector graphics library with SVG support written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boilertalk/BlockiesSwift"&gt;BlockiesSwift&lt;/a&gt; - Unique blocky identicons/profile picture generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bakhtiyork/Rough"&gt;Rough&lt;/a&gt; - lets you draw in a sketchy, hand-drawn-like, style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bakhtiyork/GraphLayout"&gt;GraphLayout&lt;/a&gt; - UI controls for graph visualization. It is powered by Graphviz.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Asana/Drawsana"&gt;Drawsana&lt;/a&gt; - iOS framework for building raster drawing and image markup views.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-hardware" class="anchor" aria-hidden="true" href="#hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hardware&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-bluetooth" class="anchor" aria-hidden="true" href="#bluetooth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bluetooth&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libraries to deal with nearby devices, BLE tools and MultipeerConnectivity wrappers.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/omergul/Discovery"&gt;Discovery&lt;/a&gt; - A very simple library to discover and retrieve data from nearby devices (even if the peer app works at background).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LGBluetooth/LGBluetooth"&gt;LGBluetooth&lt;/a&gt; - Simple, block-based, lightweight library over CoreBluetooth. Will clean up your Core Bluetooth related code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpsim/PeerKit"&gt;PeerKit&lt;/a&gt; An open-source Swift framework for building event-driven, zero-config Multipeer Connectivity apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rhummelmose/BluetoothKit"&gt;BluetoothKit&lt;/a&gt; - Easily communicate between iOS/macOS devices using BLE.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/e-sites/Bluetonium"&gt;Bluetonium&lt;/a&gt; - Bluetooth mapping in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/troystribling/BlueCap"&gt;BlueCap&lt;/a&gt; - iOS Bluetooth LE framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kirankunigiri/Apple-Family"&gt;Apple Family&lt;/a&gt; - Quickly connect Apple devices together with Bluetooth, wifi, and USB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/1amageek/Bleu"&gt;Bleu&lt;/a&gt; - BLE (Bluetooth LE) for U.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/steamclock/bluejay"&gt;Bluejay&lt;/a&gt; - A simple Swift framework for building reliable Bluetooth LE apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coolnameismy/BabyBluetooth"&gt;BabyBluetooth&lt;/a&gt; - The easiest way to use Bluetooth (BLE) in iOS/MacOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AntonTheDev/ExtendaBLE"&gt;ExtendaBLE&lt;/a&gt; - Simple Blocks-Based BLE Client for iOS/tvOS/watchOS/OSX/Android. Quickly configuration for centrals/peripherals, perform packet based read/write operations, and callbacks for characteristic updates.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rchatham/PeerConnectivity"&gt;PeerConnectivity&lt;/a&gt; - Functional wrapper for Apple's MultipeerConnectivity framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AfrozZaheer/AZPeerToPeerConnection"&gt;AZPeerToPeerConnection&lt;/a&gt; - AZPeerToPeerConnectivity is a wrapper on top of Apple iOS Multipeer Connectivity framework. It provides an easier way to create and manage sessions. Easy to integrate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingwilson/MultiPeer"&gt;MultiPeer&lt;/a&gt; - Multipeer is a wrapper for Apple's MultipeerConnectivity framework for offline data transmission between Apple devices. It makes easy to automatically connect to multiple nearby devices and share information using either bluetooth or wifi.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-camera" class="anchor" aria-hidden="true" href="#camera"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Camera&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Mocks, ImagePickers, and multiple options of customizable camera implementation&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tdginternet/TGCameraViewController"&gt;TGCameraViewController&lt;/a&gt; - Custom camera with AVFoundation. Beautiful, light and easy to integrate with iOS projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/PBJVision"&gt;PBJVision&lt;/a&gt; - iOS camera engine, features touch-to-record video, slow motion video, and photo capture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GabrielAlva/Cool-iOS-Camera"&gt;Cool-iOS-Camera&lt;/a&gt; - A fully customisable and modern camera implementation for iOS made with AVFoundation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rFlex/SCRecorder"&gt;SCRecorder&lt;/a&gt; - Camera engine with Vine-like tap to record, animatable filters, slow motion, segments editing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexLittlejohn/ALCameraViewController"&gt;ALCameraViewController&lt;/a&gt; - A camera view controller with custom image picker and image cropping. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imaginary-cloud/CameraManager"&gt;CameraManager&lt;/a&gt; - Simple Swift class to provide all the configurations you need to create custom camera view in your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yeahdongcn/RSBarcodes_Swift"&gt;RSBarcodes_Swift&lt;/a&gt; - 1D and 2D barcodes reader and generators for iOS 8 with delightful controls. Now Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/omergul/LLSimpleCamera"&gt;LLSimpleCamera&lt;/a&gt; - A simple, customizable camera control - video recorder for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ytakzk/Fusuma"&gt;Fusuma&lt;/a&gt; - Instagram-like photo browser and a camera feature with a few line of code in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/BarcodeScanner"&gt;BarcodeScanner&lt;/a&gt; - Simple and beautiful barcode scanner.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HorizonCamera/HorizonSDK-iOS"&gt;HorizonSDK-iOS&lt;/a&gt; - State of the art real-time video recording / photo shooting iOS library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IFTTT/FastttCamera"&gt;FastttCamera&lt;/a&gt; - Fasttt and easy camera framework for iOS with customizable filters.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhangao0086/DKCamera"&gt;DKCamera&lt;/a&gt; - A lightweight &amp;amp; simple camera framework for iOS. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NextLevel/NextLevel"&gt;NextLevel&lt;/a&gt; - Next Level is a media capture camera library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remirobert/CameraEngine"&gt;CameraEngine&lt;/a&gt; - Camera engine for iOS, written in Swift, above AVFoundation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Awalz/SwiftyCam"&gt;SwiftyCam&lt;/a&gt; -  A Snapchat Inspired iOS Camera Framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/CameraBackground"&gt;CameraBackground&lt;/a&gt; -  Show camera layer as a background to any UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dokun1/Lumina"&gt;Lumina&lt;/a&gt; - Full service camera that takes photos, videos, streams frames, detects metadata, and streams CoreML predictions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rallahaseh/RAImagePicker"&gt;RAImagePicker&lt;/a&gt; - RAImagePicker is a protocol-oriented framework that provides custom features from the built-in Image Picker Edit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fulldecent/FDTake"&gt;FDTake&lt;/a&gt; - Easily take a photo or video or choose from library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yummypets/YPImagePicker"&gt;YPImagePicker&lt;/a&gt; - Instagram-like image picker &amp;amp; filters for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MockImagePicker"&gt;MockImagePicker&lt;/a&gt; - Mock UIImagePickerController for testing camera based UI in simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/iOS-Depth-Sampler"&gt;iOS-Depth-Sampler&lt;/a&gt; - A collection of code examples for Depth APIs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/TakeASelfie"&gt;TakeASelfie&lt;/a&gt; - An iOS framework that uses the front camera, detects your face and takes a selfie.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eonist/HybridCamera"&gt;HybridCamera&lt;/a&gt; - Video and photo camera for iOS, similar to the SnapChat camera.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CameraKit/camerakit-ios"&gt;CameraKit-iOS&lt;/a&gt; - Massively increase camera performance and ease of use in your next iOS project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-force-touch" class="anchor" aria-hidden="true" href="#force-touch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Force Touch&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Quick actions and peek and pop interactions&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ricardopereira/QuickActions"&gt;QuickActions&lt;/a&gt; - Swift wrapper for iOS Home Screen Quick Actions (App Icon Shortcuts).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justeat/JustPeek"&gt;JustPeek&lt;/a&gt; - JustPeek is an iOS Library that adds support for Force Touch-like Peek and Pop interactions on devices that do not natively support this kind of interaction.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/itsmeichigo/PeekView"&gt;PeekView&lt;/a&gt; - PeekView supports peek, pop and preview actions for iOS devices without 3D Touch capibility.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ibeacon" class="anchor" aria-hidden="true" href="#ibeacon"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iBeacon&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Device detect libraries and iBeacon helpers&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Proxitee/iOS-SDK"&gt;Proxitee&lt;/a&gt; - Allows developers to create proximity aware applications utilizing iBeacons &amp;amp; geo fences.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ohayon/OWUProximityManager"&gt;OWUProximityManager&lt;/a&gt; - iBeacons + CoreBluetooth.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Instrument/Vicinity"&gt;Vicinity&lt;/a&gt; - Vicinity replicates iBeacons (by analyzing RSSI) and supports broadcasting and detecting low-energy Bluetooth devices in the background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lgaches/BeaconEmitter"&gt;BeaconEmitter&lt;/a&gt; - Turn your Mac as an iBeacon.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mocaplatform.com/features" rel="nofollow"&gt;MOCA Proximity&lt;/a&gt; - Paid proximity marketing platform that lets you add amazing proximity  experiences to your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/izotx/JMCBeaconManager"&gt;JMCBeaconManager&lt;/a&gt; - An iBeacon Manager class that is responsible for detecting beacons nearby.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-location" class="anchor" aria-hidden="true" href="#location"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Location&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Location monitoring, detect motion and geofencing libraries&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IngeoSDK/ingeo-ios-sdk"&gt;IngeoSDK&lt;/a&gt; - Always-On Location monitoring framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intuit/LocationManager"&gt;LocationManager&lt;/a&gt; - Provides a block-based asynchronous API to request the current location, either once or continuously.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/SwiftLocation"&gt;SwiftLocation&lt;/a&gt; - Location &amp;amp; Beacon Monitoring in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturdev/SOMotionDetector"&gt;SOMotionDetector&lt;/a&gt; - Simple library to detect motion. Based on location updates and acceleration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZhuoranTan/LocationPicker"&gt;LocationPicker&lt;/a&gt; - A ready for use and fully customizable location picker for your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benzamin/BBLocationManager"&gt;BBLocationManager&lt;/a&gt; - A Location Manager for easily implementing location services &amp;amp; geofencing in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lyft/set-simulator-location"&gt;set-simulator-location&lt;/a&gt; - CLI for setting location in the iOS simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/caloon/NominatimKit"&gt;NominatimKit&lt;/a&gt; - A Swift wrapper for (reverse) geocoding of OpenStreetMap data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-hardware" class="anchor" aria-hidden="true" href="#other-hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Hardware&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MHaroonBaig/MotionKit"&gt;MotionKit&lt;/a&gt; - Get the data from Accelerometer, Gyroscope and Magnetometer in only Two or a few lines of code. CoreMotion now made insanely simple.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jensmeder/DarkLightning"&gt;DarkLightning&lt;/a&gt; - Simply the fastest way to transmit data between iOS/tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrealufino/Deviice"&gt;Deviice&lt;/a&gt; - Simply library to detect the device on which the app is running (and some properties).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devicekit/DeviceKit"&gt;DeviceKit&lt;/a&gt; - DeviceKit is a value-type replacement of UIDevice.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrealufino/Luminous"&gt;Luminous&lt;/a&gt; - Luminous is a big framework which can give you a lot of information (more than 50) about the current system.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ekhoo/Device"&gt;Device&lt;/a&gt; - Light weight tool for detecting the current device and screen size written in swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ezefranca/WatchShaker"&gt;WatchShaker&lt;/a&gt; - WatchShaker is a watchOS helper to get your shake movement written in swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/WatchCon"&gt;WatchCon&lt;/a&gt; - WatchCon is a tool which enables creating easy connectivity between iOS and WatchOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/TapticEngine"&gt;TapticEngine&lt;/a&gt; - TapticEngine generates iOS Device vibrations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/UIDeviceComplete"&gt;UIDeviceComplete&lt;/a&gt; - UIDevice extensions that fill in the missing pieces.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jvk75/NFCNDEFParse"&gt;NFCNDEFParse&lt;/a&gt; - NFC Forum Well Known Type Data Parser for iOS11 and Core NFC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schickling/Device.swift"&gt;Device.swift&lt;/a&gt; - Super-lightweight library to detect used device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sebyddd/SDVersion"&gt;SDVersion&lt;/a&gt; - Lightweight Cocoa library for detecting the running device's model and screen size.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iSapozhnik/Haptico"&gt;Haptico&lt;/a&gt; - Easy to use haptic feedback generator with pattern-play support.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-layout" class="anchor" aria-hidden="true" href="#layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Layout&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Auto Layout, UI frameworks and a gorgeous list of tools to simplify layout constructions&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SnapKit/Masonry"&gt;Masonry&lt;/a&gt; - Harness the power of AutoLayout NSLayoutConstraints with a simplified, chainable and expressive syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/floriankugler/FLKAutoLayout"&gt;FLKAutoLayout&lt;/a&gt; - UIView category which makes it easy to create layout constraints in code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mamaral/Facade"&gt;Fa√ßade&lt;/a&gt; - Programmatic view layout for the rest of us - an autolayout alternative.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PureLayout/PureLayout"&gt;PureLayout&lt;/a&gt; - The ultimate API for iOS &amp;amp; macOS Auto Layout ‚Äî impressively simple, immensely powerful. Objective-C and Swift compatible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SnapKit/SnapKit"&gt;SnapKit&lt;/a&gt; - A Swift Autolayout DSL for iOS &amp;amp; macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robb/Cartography"&gt;Cartography&lt;/a&gt; - A declarative Auto Layout DSL for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruipfcosta/AutoLayoutPlus"&gt;AutoLayoutPlus&lt;/a&gt; - A bit of steroids for AutoLayout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mamaral/Neon"&gt;Neon&lt;/a&gt; - A powerful Swift programmatic UI layout framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/MisterFusion"&gt;MisterFusion&lt;/a&gt; - A Swift DSL for AutoLayout. It is the extremely clear, but concise syntax, in addition, can be used in both Swift and Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joshaber/SwiftBox"&gt;SwiftBox&lt;/a&gt; - Flexbox in Swift, using Facebook's css-layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isair/ManualLayout"&gt;ManualLayout&lt;/a&gt; - Easy to use and flexible library for manually laying out views and layers for iOS and tvOS. Supports AsyncDisplayKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/Stevia"&gt;Stevia&lt;/a&gt; - Elegant view layout for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/floriankrueger/Manuscript"&gt;Manuscript&lt;/a&gt; - AutoLayoutKit in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/forkingdog/UITableView-FDTemplateLayoutCell"&gt;FDTemplateLayoutCell&lt;/a&gt; - Template auto layout cell for automatically UITableViewCell height calculating.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/indragiek/SwiftAutoLayout"&gt;SwiftAutoLayout&lt;/a&gt; - Tiny Swift DSL for Autolayout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evan-liu/FormationLayout"&gt;FormationLayout&lt;/a&gt; - Work with auto layout and size classes easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fhisa/SwiftyLayout"&gt;SwiftyLayout&lt;/a&gt; - Lightweight declarative auto-layout framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Skyvive/Swiftstraints"&gt;Swiftstraints&lt;/a&gt; - Auto Layout In Swift Made Easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeclarativeHub/Bond"&gt;SwiftBond&lt;/a&gt; - Bond is a Swift binding framework that takes binding concepts to a whole new level. It's simple, powerful, type-safe and multi-paradigm.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/puffinsupply/Restraint"&gt;Restraint&lt;/a&gt; - Minimal Auto Layout in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nakiostudio/EasyPeasy"&gt;EasyPeasy&lt;/a&gt; - Auto Layout made easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://akordadev.github.io/AutoLayoutMagic/" rel="nofollow"&gt;Auto Layout Magic&lt;/a&gt; - Build 1 scene, let Auto Layout Magic generate the  constraints for you!  Scenes look great across all devices!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mergesort/Anchorman"&gt;Anchorman&lt;/a&gt; - An autolayout library for the damn fine citizens of San Diego.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linkedin/LayoutKit"&gt;LayoutKit&lt;/a&gt; - LayoutKit is a fast view layout library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stevestreza/Relayout"&gt;Relayout&lt;/a&gt; - Swift microframework for declaring Auto Layout constraints functionally.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rightpoint/Anchorage"&gt;Anchorage&lt;/a&gt; - A collection of operators and utilities that simplify iOS layout code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grupozap/Compose"&gt;Compose&lt;/a&gt; - Compose is a library that helps you compose complex and dynamic views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wayfair/brickkit-ios"&gt;BrickKit&lt;/a&gt; - With BrickKit, you can create complex and responsive layouts in a simple way. It's easy to use and easy to extend. Create your own reusable bricks and behaviors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Otbivnoe/Framezilla"&gt;Framezilla&lt;/a&gt; - Elegant library which wraps working with frames with a nice chaining syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/TinyConstraints"&gt;TinyConstraints&lt;/a&gt; -  The syntactic sugar that makes Auto Layout sweeter for human use.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/youngsoft/MyLinearLayout"&gt;MyLinearLayout&lt;/a&gt; - MyLayout is a powerful iOS UI framework implemented by Objective-C. It integrates the functions with Android Layout,iOS AutoLayout,SizeClass, HTML CSS float and flexbox and bootstrap.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashikahmad/SugarAnchor"&gt;SugarAnchor&lt;/a&gt; - Same native NSLayoutAnchor &amp;amp; NSLayoutConstraints; but with more natural and easy to read syntactic sugar. Typesafe, concise &amp;amp; readable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Anchors"&gt;Anchors&lt;/a&gt; - Declarative, extensible, powerful Auto Layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/layoutBox/PinLayout"&gt;PinLayout&lt;/a&gt; - Fast Swift Views layouting without auto layout. No magic, pure code, full control and blazing fast. Concise syntax, intuitive, readable &amp;amp; chainable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sp71/SnapLayout"&gt;SnapLayout&lt;/a&gt; - Concise Auto Layout API to chain programmatic constraints while easily updating existing constraints.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nerdycat/Cupcake"&gt;Cupcake&lt;/a&gt; - An easy way to create and layout UI components for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MiniLayout"&gt;MiniLayout&lt;/a&gt; - Minimal AutoLayout convenience layer. Program constraints succinctly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wordlessj/Bamboo"&gt;Bamboo&lt;/a&gt; - Bamboo makes Auto Layout (and manual layout) elegant and concise.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/layoutBox/FlexLayout"&gt;FlexLayout&lt;/a&gt; - FlexLayout gently wraps the highly optimized &lt;a href="https://github.com/facebook/yoga"&gt;facebook/yoga&lt;/a&gt; flexbox implementation in a concise, intuitive &amp;amp; chainable syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/layout"&gt;Layout&lt;/a&gt; - A declarative UI framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-o-d-e-n/CGLayout"&gt;CGLayout&lt;/a&gt; - Powerful autolayout framework based on constraints, that can manage UIView(NSView), CALayer and not rendered views. Not Apple Autolayout wrapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/yoga/tree/master/YogaKit"&gt;YogaKit&lt;/a&gt; - Powerful layout engine which implements Flexbox.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AntonTheDev/FlightLayout"&gt;FlightLayout&lt;/a&gt; -  Balanced medium between manual layout and auto-layout. Great for calculating frames for complex animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/QLayout"&gt;QLayout&lt;/a&gt; - AutoLayout Utility for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeclarativeHub/Layoutless"&gt;Layoutless&lt;/a&gt; - Minimalistic declarative layout and styling framework built on top of Auto Layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kean/Align"&gt;Yalta&lt;/a&gt; - An intuitive and powerful Auto Layout library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lionheart/SuperLayout"&gt;SuperLayout&lt;/a&gt; - Simplify Auto Layout with super syntactic sugar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huri000/QuickLayout"&gt;QuickLayout&lt;/a&gt; - QuickLayout offers a simple way, to easily manage Auto Layout in code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efekanegeli/EEStackLayout"&gt;EEStackLayout&lt;/a&gt; - A structured vertical stack layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daskioff/RKAutoLayout"&gt;RKAutoLayout&lt;/a&gt; - Simple wrapper over AutoLayout.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-localization" class="anchor" aria-hidden="true" href="#localization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Localization&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Tools to manage strings files, translate and enable localization in your apps.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Aufree/Hodor"&gt;Hodor&lt;/a&gt; - Simple solution to localize your iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomkowz/Swifternalization"&gt;Swifternalization&lt;/a&gt; - Localize iOS apps in a smarter way using JSON files. Swift framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcordero/Rubustrings"&gt;Rubustrings&lt;/a&gt; - Check the format and consistency of Localizable.strings files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Flinesoft/BartyCrouch"&gt;BartyCrouch&lt;/a&gt; - Incrementally update/translate your Strings files from Code and Storyboards/XIBs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willpowell8/LocalizationKit_iOS"&gt;LocalizationKit&lt;/a&gt; - Localization management in realtime from a web portal. Easily manage your texts and translations without redeploy and resubmission.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Localize-Swift"&gt;Localize-Swift&lt;/a&gt; - Swift 2.0 friendly localization and i18n with in-app language switching.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/darkcl/LocalizedView"&gt;LocalizedView&lt;/a&gt; - Setting up application specific localized string within Xib file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Jintin/transai"&gt;transai&lt;/a&gt; - command line tool help you manage localization string files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metasmile/strsync"&gt;Strsync&lt;/a&gt; - Automatically translate and synchronize .strings files from base language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PiXeL16/IBLocalizable"&gt;IBLocalizable&lt;/a&gt; - Localize your views directly in Interface Builder with IBLocalizable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/samdmarshall/nslocalizer"&gt;nslocalizer&lt;/a&gt; - A tool for finding missing and unused NSLocalizedStrings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Decybel07/L10n-swift"&gt;L10n-swift&lt;/a&gt; - Localization of an application with ability to change language "on the fly" and support for plural forms in any language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresilvagomez/Localize"&gt;Localize&lt;/a&gt; - Easy tool to localize apps using JSON or Strings and of course IBDesignables with extensions for UI components.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-logging" class="anchor" aria-hidden="true" href="#logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Debugging lives here. Logging tools, frameworks, integrations and more.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emaloney/CleanroomLogger"&gt;CleanroomLogger&lt;/a&gt; - A configurable and extensible Swift-based logging API that is simple, lightweight and performant.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CocoaLumberjack/CocoaLumberjack"&gt;CocoaLumberjack&lt;/a&gt; - A fast &amp;amp; simple, yet powerful &amp;amp; flexible logging framework for Mac and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fpillet/NSLogger"&gt;NSLogger&lt;/a&gt; - a high performance logging utility which displays traces emitted by client applications running on macOS, iOS and Android.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/QorumLogs"&gt;QorumLogs&lt;/a&gt; ‚Äî Swift Logging Utility for Xcode &amp;amp; Google Docs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/Log"&gt;Log&lt;/a&gt; - A logging tool with built-in themes, formatters, and a nice API to define your owns.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Rainbow"&gt;Rainbow&lt;/a&gt; - Delightful console output for Swift developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftyBeaver/SwiftyBeaver"&gt;SwiftyBeaver&lt;/a&gt; - Convenient logging during development and release.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scottrhoyt/SwiftyTextTable"&gt;SwiftyTextTable&lt;/a&gt; - A lightweight tool for generating text tables.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wojteklu/Watchdog"&gt;Watchdog&lt;/a&gt; - Class for logging excessive blocking on the main thread.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DaveWoodCom/XCGLogger"&gt;XCGLogger&lt;/a&gt; - A debug log framework for use in Swift projects. Allows you to log details to the console (and optionally a file), just like you would have with NSLog or println, but with additional information, such as the date, function name, filename and line number.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cookpad/puree-ios"&gt;puree&lt;/a&gt; - A log collector for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icodeforlove/Colors"&gt;Colors&lt;/a&gt; - A pure Swift library for using ANSI codes. Basically makes command-line coloring and styling very easy!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/honghaoz/Loggerithm"&gt;Loggerithm&lt;/a&gt; - A lightweight Swift logger, uses &lt;code&gt;print&lt;/code&gt; in development and &lt;code&gt;NSLog&lt;/code&gt; in production. Support colourful and formatted output.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AELog"&gt;AELog&lt;/a&gt; - Simple, lightweight and flexible debug logging framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattcomi/ReflectedStringConvertible"&gt;ReflectedStringConvertible&lt;/a&gt; - A protocol that allows any class to be printed as if it were a struct.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nilsleiffischer/Evergreen"&gt;Evergreen&lt;/a&gt; - Most natural Swift logging.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/SwiftTrace"&gt;SwiftTrace&lt;/a&gt; - Trace Swift and Objective-C method invocations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nike-Inc/Willow"&gt;Willow&lt;/a&gt; - Willow is a powerful, yet lightweight logging library written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bugfender/BugfenderSDK-iOS"&gt;Bugfender&lt;/a&gt; - Cloud storage for your app logs. Track user behaviour to find problems in your mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeveloperLx/LxDBAnything"&gt;LxDBAnything&lt;/a&gt; - Automate box any value! Print log without any format control symbol! Change debug habit thoroughly!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xareelee/XLTestLog"&gt;XLTestLog&lt;/a&gt; - Styling and coloring your XCTest logs on Xcode Console.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisspol/XLFacility"&gt;XLFacility&lt;/a&gt; - Elegant and extensive logging facility for macOS &amp;amp; iOS (includes database, Telnet and HTTP servers).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DrewKiino/Atlantis"&gt;Atlantis&lt;/a&gt; - A powerful input-agnostic swift logging framework made to speed up development with maximum readability.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/drekka/StoryTeller"&gt;StoryTeller&lt;/a&gt; - Taking a completely different approach to logging, Story Teller replacing fixed logging levels in It then uses dynamic expressions to control the logging so you only see what is important.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ubclaunchpad/LumberMill"&gt;LumberMill&lt;/a&gt; - Stupidly simple logging.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cosmo/TinyConsole"&gt;TinyConsole&lt;/a&gt; - A tiny log console to display information while using your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/Lighty"&gt;Lighty&lt;/a&gt; - Easy to use and lightweight logger for iOS, macOS, tvOS, watchOS and Linux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justeat/JustLog"&gt;JustLog&lt;/a&gt; - Console, file and remote Logstash logging via TCP socket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/ios-twitter-logging-service"&gt;Twitter Logging Service&lt;/a&gt; - Twitter Logging Service is a robust and performant logging framework for iOS clients.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AckeeCZ/Reqres"&gt;Reqres&lt;/a&gt; - Network request and response body logger with Alamofire support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonystone/tracelog"&gt;TraceLog&lt;/a&gt; - Dead Simple: logging the way it's meant to be! Runs on ios, osx, and Linux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/diegotl/OkLog-Swift"&gt;OkLog&lt;/a&gt; - A network logger for iOS and macOS projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-machine-learning" class="anchor" aria-hidden="true" href="#machine-learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Machine Learning&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;A collection of ML Models, deep learning and neural networking libraries&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vlall/Swift-Brain"&gt;Swift-Brain&lt;/a&gt; - Artificial Intelligence/Machine Learning data structures and Swift algorithms for future iOS development. Bayes theorem, Neural Networks, and more AI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KevinCoble/AIToolbox"&gt;AIToolbox&lt;/a&gt; - A toolbox of AI modules written in Swift: Graphs/Trees, Linear Regression, Support Vector Machines, Neural Networks, PCA, KMeans, Genetic Algorithms, MDP, Mixture of Gaussians.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/ios"&gt;Tensorflow-iOS&lt;/a&gt; - The official Google-built powerful neural network library port for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/Bender"&gt;Bender&lt;/a&gt; - Easily craft fast Neural Networks. Use TensorFlow models. Metal under the hood.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ytakzk/CoreML-samples"&gt;CoreML-samples&lt;/a&gt; - Sample code for Core ML using ResNet50 provided by Apple and a custom model generated by coremltools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/petrmanek/Revolver"&gt;Revolver&lt;/a&gt; - A framework for building fast genetic algorithms in Swift. Comes with modular architecture, pre-implemented operators and loads of examples.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/likedan/Awesome-CoreML-Models"&gt;CoreML-Models&lt;/a&gt; - A collection of unique Core ML Models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pcpLiu/Serrano"&gt;Serrano&lt;/a&gt; - A deep learning library for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Swift-AI/Swift-AI"&gt;Swift-AI&lt;/a&gt; - The Swift machine learning library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qoncept/TensorSwift"&gt;TensorSwift&lt;/a&gt; - A lightweight library to calculate tensors in Swift, which has similar APIs to TensorFlow's.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-maps" class="anchor" aria-hidden="true" href="#maps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mapbox/mapbox-gl-native"&gt;Mapbox GL&lt;/a&gt; - An OpenGL renderer for Mapbox Vector Tiles with SDK bindings for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GEOSwift/GEOSwift"&gt;GEOSwift&lt;/a&gt; - The Swift Geographic Engine.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/poulpix/PXGoogleDirections"&gt;PXGoogleDirections&lt;/a&gt; - Google Directions API helper for iOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Cluster"&gt;Cluster&lt;/a&gt; - Easy Map Annotation Clustering.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesdouble/JDSwiftHeatMap"&gt;JDSwiftHeatMap&lt;/a&gt; - JDSwiftMap is an IOS Native MapKit Library. You can easily make a highly customized HeatMap.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hulab/ClusterKit"&gt;ClusterKit&lt;/a&gt; - An iOS map clustering framework targeting MapKit, Google Maps and Mapbox.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/FlyoverKit"&gt;FlyoverKit&lt;/a&gt; - FlyoverKit enables you to present stunning 360¬∞ flyover views on your MKMapView with zero effort while maintaining full configuration possibilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okhanokbay/MapViewPlus"&gt;MapViewPlus&lt;/a&gt; - Use any custom view as custom callout view of your MKMapView with cool animations. Also, easily use any image as annotation view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mabdulsubhan/MSFlightMapView"&gt;MSFlightMapView&lt;/a&gt; - Add and animate geodesic flights on Google map.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-math" class="anchor" aria-hidden="true" href="#math"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Math&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Math frameworks, functions and libraries to custom operations, statistical calculations and more.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/Euler"&gt;Euler&lt;/a&gt; - Swift Custom Operators for Mathematical Notation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/madbat/SwiftMath"&gt;SwiftMath&lt;/a&gt; - A math framework for Swift. Includes: vectors, matrices, complex numbers, quaternions and polynomials.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/Arithmosophi"&gt;Arithmosophi&lt;/a&gt; - A set of protocols for Arithmetic and Logical operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/Surge"&gt;Surge&lt;/a&gt; - A Swift library that uses the Accelerate framework to provide high-performance functions for matrix math, digital signal processing, and image manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alejandro-isaza/Upsurge"&gt;Upsurge&lt;/a&gt; - Swift math.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rugheid/Swift-MathEagle"&gt;Swift-MathEagle&lt;/a&gt; - A general math framework to make using math easy. Currently supports function solving and optimisation, matrix and vector algebra, complex numbers, big int and big frac and general handy extensions and functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kostub/iosMath"&gt;iosMath&lt;/a&gt; - A library for displaying beautifully rendered math equations. Enables typesetting LaTeX math formulae in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/BigInt"&gt;BigInt&lt;/a&gt; - Arbitrary-precision arithmetic in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/SigmaSwiftStatistics"&gt;SigmaSwiftStatistics&lt;/a&gt; - A collection of functions for statistical calculation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/VectorMath"&gt;VectorMath&lt;/a&gt; - A Swift library for Mac and iOS that implements common 2D and 3D vector and matrix functions, useful for games or vector-based graphics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/Expression"&gt;Expression&lt;/a&gt; - A Mac and iOS library for evaluating numeric expressions at runtime.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/toineheuvelmans/Metron"&gt;Metron&lt;/a&gt; - Metron is a comprehensive collection of geometric functions and types that extend the 2D geometric primitives provided by CoreGraphics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xwu/NumericAnnex"&gt;NumericAnnex&lt;/a&gt; - NumericAnnex supplements the numeric facilities provided in the Swift standard library.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-media" class="anchor" aria-hidden="true" href="#media"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Media&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-audio" class="anchor" aria-hidden="true" href="#audio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Audio&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.audiob.us/" rel="nofollow"&gt;AudioBus&lt;/a&gt; - Add Next Generation Live App-to-App Audio Routing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/audiokit/AudioKit"&gt;AudioKit&lt;/a&gt; - A powerful toolkit for synthesizing, processing, and analyzing sounds.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/syedhali/EZAudio"&gt;EZAudio&lt;/a&gt; - An iOS/macOS audio visualization framework built upon Core Audio useful for anyone doing real-time, low-latency audio processing and visualizations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexbw/novocaine"&gt;novocaine&lt;/a&gt; - Painless high-performance audio on iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quentinhayot/QHSpeechSynthesizerQueue"&gt;QHSpeechSynthesizerQueue&lt;/a&gt; - Queue management system for AVSpeechSynthesizer (iOS Text to Speech).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/Cephalopod"&gt;Cephalopod&lt;/a&gt; - A sound fader for AVAudioPlayer written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trifl/Chirp"&gt;Chirp&lt;/a&gt; - The easiest way to prepare, play, and remove sounds in your Swift app!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/Beethoven"&gt;Beethoven&lt;/a&gt; - An audio processing Swift library for pitch detection of musical signals.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/AudioPlayerSwift"&gt;AudioPlayerSwift&lt;/a&gt; - AudioPlayer is a simple class for playing audio in iOS, macOS and tvOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delannoyk/AudioPlayer"&gt;AudioPlayer&lt;/a&gt; - AudioPlayer is syntax and feature sugar over AVPlayer. It plays your audio files (local &amp;amp; remote).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/comyar/TuningFork"&gt;TuningFork&lt;/a&gt; - Simple Tuner for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benzguo/MusicKit"&gt;MusicKit&lt;/a&gt; - A framework for composing and transforming music in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/SubtleVolume"&gt;SubtleVolume&lt;/a&gt; - Replace the system volume popup with a more subtle indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bartolsthoorn/NVDSP"&gt;NVDSP&lt;/a&gt; - iOS/macOS DSP for audio (with Novocaine).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SRGSSR/SRGMediaPlayer-iOS"&gt;SRGMediaPlayer-iOS&lt;/a&gt; - The SRG Media Player library for iOS provides a simple way to add a universal audio / video player to any iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hackiftekhar/IQAudioRecorderController"&gt;IQAudioRecorderController&lt;/a&gt; - A drop-in universal library allows to record audio within the app with a nice User Interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheAmazingAudioEngine/TheAmazingAudioEngine2"&gt;TheAmazingAudioEngine2&lt;/a&gt; - The Amazing Audio Engine is a sophisticated framework for iOS audio applications, built so you don't have to.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AhmettKeskin/InteractivePlayerView"&gt;InteractivePlayerView&lt;/a&gt; - Custom iOS music player view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Aufree/ESTMusicIndicator"&gt;ESTMusicIndicator&lt;/a&gt; - Cool Animated music indicator view written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quiet/QuietModemKit"&gt;QuietModemKit&lt;/a&gt; - iOS framework for the Quiet Modem (data over sound).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adamcichy/SwiftySound"&gt;SwiftySound&lt;/a&gt; - Super simple library that lets you play sounds with a single line of code (and much more). Written in Swift 3, supports iOS, macOS and tvOS. CocoaPods and Carthage compatible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Luccifer/BPM-Analyser"&gt;BPMAnalyser&lt;/a&gt; - Fast and simple instrument to get the BPM rate from your audio-files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AppliKeySolutions/PandoraPlayer"&gt;PandoraPlayer&lt;/a&gt; - A lightweight music player for iOS, based on AudioKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Luccifer/SonogramView"&gt;SonogramView&lt;/a&gt; - Audio visualisation of song.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/AudioIndicatorBars"&gt;AudioIndicatorBars&lt;/a&gt; - AIB indicates for your app users which audio is playing. Just like the Podcasts app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Picovoice/Porcupine"&gt;Porcupine&lt;/a&gt; - On-device wake word detection engine for macOS, iOS, and watchOS, powered by deep learning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/algolia/voice-overlay-ios"&gt;Voice Overlay&lt;/a&gt; - An overlay that gets your user‚Äôs voice permission and input as text in a customizable UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/noreasonprojects/ModernAVPlayer"&gt;ModernAVPlayer&lt;/a&gt; - Persistence player to resume playback after bad network connection even in background mode, manage headphone interactions, system interruptions, now playing informations and remote commands.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-gif" class="anchor" aria-hidden="true" href="#gif"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GIF&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/liyong03/YLGIFImage"&gt;YLGIFImage&lt;/a&gt; - Async GIF image decoder and Image viewer supporting play GIF images. It just use very less memory.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Flipboard/FLAnimatedImage"&gt;FLAnimatedImage&lt;/a&gt; - Performant animated GIF engine for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaishin/gifu"&gt;gifu&lt;/a&gt; - Highly performant animated GIF support for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/AnimatedGIFImageSerialization"&gt;AnimatedGIFImageSerialization&lt;/a&gt; - Complete Animated GIF Support for iOS, with Functions, NSJSONSerialization-style Class, and (Optional) UIImage Swizzling&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khaledmtaha/XAnimatedImage"&gt;XAnimatedImage&lt;/a&gt; - XAnimatedImage is a performant animated GIF engine for iOS written in Swift based on FLAnimatedImage&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swiftgif/SwiftGif"&gt;SwiftGif&lt;/a&gt; - A small UIImage extension with gif support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/APNGKit"&gt;APNGKit&lt;/a&gt; - High performance and delightful way to play with APNG format in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYImage"&gt;YYImage&lt;/a&gt; - Image framework for iOS to display/encode/decode animated WebP, APNG, GIF, and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wangjwchn/AImage"&gt;AImage&lt;/a&gt; - A animated GIF&amp;amp;APNG engine for iOS in Swift with low memory &amp;amp; cpu usage.Optimized for Multi-Image case.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metasmile/NSGIF2"&gt;NSGIF2&lt;/a&gt; - Simplify creation of a GIF from the provided video file url.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kirualex/SwiftyGif"&gt;SwiftyGif&lt;/a&gt; - High performance GIF engine.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-image" class="anchor" aria-hidden="true" href="#image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Image&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BradLarson/GPUImage"&gt;GPU Image&lt;/a&gt; - An open source iOS framework for GPU-based image and video processing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gdawg/uiimage-dsp"&gt;UIImage DSP&lt;/a&gt; - iOS UIImage processing functions using the vDSP/Accelerate framework for speed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/AsyncImageView"&gt;AsyncImageView&lt;/a&gt; - Simple extension of UIImageView for loading and displaying images asynchronously without lock up the UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SDWebImage/SDWebImage"&gt;SDWebImage&lt;/a&gt; - Asynchronous image downloader with cache support with an UIImageView category.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kean/DFImageManager"&gt;DFImageManager&lt;/a&gt; - Modern framework for fetching images from various sources. Zero config yet immense customization and extensibility. Uses NSURLSession.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JanGorman/MapleBacon"&gt;MapleBacon&lt;/a&gt; - An image download and caching library for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NYTimes/NYTPhotoViewer"&gt;NYTPhotoViewer&lt;/a&gt; - Slideshow and image viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thiagoperes/IDMPhotoBrowser"&gt;IDMPhotoBrowser&lt;/a&gt; - Photo Browser / Viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/contentful-labs/Concorde/"&gt;Concorde&lt;/a&gt; - Download and decode progressive JPEGs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimOliver/TOCropViewController"&gt;TOCropViewController&lt;/a&gt; - A view controller that allows users to crop UIImage objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanton/YXTMotionView"&gt;YXTMotionView&lt;/a&gt; - A custom image view that implements device motion scrolling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pinterest/PINRemoteImage"&gt;PINRemoteImage&lt;/a&gt; - A thread safe, performant, feature rich image fetcher.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/SABlurImageView"&gt;SABlurImageView&lt;/a&gt; - Easily Adding Animated Blur/Unblur Effects To An Image.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/path/FastImageCache"&gt;FastImageCache&lt;/a&gt; - iOS library for quickly displaying images while scrolling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bkoc/BKAsciiImage"&gt;BKAsciiImage&lt;/a&gt; - Convert UIImage to ASCII art.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireImage"&gt;AlamofireImage&lt;/a&gt; - An image component library for Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kean/Nuke"&gt;Nuke&lt;/a&gt; - Image loading, processing, caching and preheating.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/madebybowtie/FlagKit"&gt;FlagKit&lt;/a&gt; - Beautiful flag icons for usage in apps and on the web.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYWebImage"&gt;YYWebImage&lt;/a&gt; - Asynchronous image loading framework (supports WebP, APNG, GIF).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslanskorb/RSKImageCropper"&gt;RSKImageCropper&lt;/a&gt; - An image cropper for iOS like in the Contacts app with support for landscape orientation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/Silo"&gt;Silo&lt;/a&gt; - Image loading framework with loaders.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/Ody"&gt;Ody&lt;/a&gt; - Ody is an easy to use random image generator built with Swift, Perfect for placeholders.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gauravkatoch007/banana"&gt;Banana&lt;/a&gt; - Image slider with very simple interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JellyDevelopment/JDSwiftAvatarProgress"&gt;JDSwiftAvatarProgress&lt;/a&gt; - Easy customizable avatar image asynchronously with progress bar animated.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Kingfisher"&gt;Kingfisher&lt;/a&gt; - A lightweight and pure Swift implemented library for downloading and caching image from the web.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EddyBorja/EBPhotoPages"&gt;EBPhotoPages&lt;/a&gt; - A photo gallery for iOS with a modern feature set. Similar features as the Facebook photo browser.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/croath/UIImageView-BetterFace-Swift"&gt;UIImageView-BetterFace-Swift&lt;/a&gt; - The Swift version of &lt;a href="https://github.com/croath/UIImageView-BetterFace"&gt;https://github.com/croath/UIImageView-BetterFace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kiavashfaisali/KFSwiftImageLoader"&gt;KFSwiftImageLoader&lt;/a&gt; - An extremely high-performance, lightweight, and energy-efficient pure Swift async web image loader with memory and disk caching for iOS and Apple Watch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gavinbunney/Toucan"&gt;Toucan&lt;/a&gt; - Fabulous Image Processing in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hirohisa/ImageLoaderSwift"&gt;ImageLoaderSwift&lt;/a&gt; - A lightweight and fast image loader for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaishin/ImageScout"&gt;ImageScout&lt;/a&gt; - A Swift implementation of fastimage. Supports PNG, GIF, and JPEG.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Textcat/JLStickerTextView"&gt;JLStickerTextView&lt;/a&gt; - A UIImageView allow you to add multiple Label (multiple line text support) on it, you can edit, rotate, resize the Label as you want with one finger ,then render the text on Image.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JanGorman/Agrume"&gt;Agrume&lt;/a&gt; - A lemony fresh iOS image viewer written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abiaad/PASImageView"&gt;PASImageView&lt;/a&gt; - Rounded async imageview downloader lightly cached and written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nixzhu/Navi"&gt;Navi&lt;/a&gt; - Focus on avatar caching.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justinvallely/SwiftPhotoGallery"&gt;SwiftPhotoGallery&lt;/a&gt; - Simple, fullscreen image gallery with tap, swipe, and pinch gestures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wangjwchn/MetalAcc"&gt;MetalAcc&lt;/a&gt; - GPU-based Media processing library using Metal written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mwaterfall/MWPhotoBrowser"&gt;MWPhotoBrowser&lt;/a&gt; - A simple iOS photo and video browser with grid view, captions and selections.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jathu/UIImageColors"&gt;UIImageColors&lt;/a&gt; - iTunes style color fetcher for UIImage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jibeex/CDFlipView"&gt;CDFlipView&lt;/a&gt; - A view that takes a set of images, make transition from one to another by using flipping effects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BradLarson/GPUImage2"&gt;GPUImage2&lt;/a&gt; - GPUImage 2 is a BSD-licensed Swift framework for GPU-accelerated video and image processing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/taglia3/TGLParallaxCarousel"&gt;TGLParallaxCarousel&lt;/a&gt; - A lightweight 3D Linear Carousel with parallax effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dollarshaveclub/ImageButter"&gt;ImageButter&lt;/a&gt; - Makes dealing with images buttery smooth.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suzuki-0000/SKPhotoBrowser"&gt;SKPhotoBrowser&lt;/a&gt; - Simple PhotoBrowser/Viewer inspired by Facebook, Twitter photo browsers written by swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/YuAo/YUCIHighPassSkinSmoothing"&gt;YUCIHighPassSkinSmoothing&lt;/a&gt; - An implementation of High Pass Skin Smoothing using Apple's Core Image Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vinbhai4u/CLImageViewPopup/"&gt;CLImageViewPopup&lt;/a&gt; - A simple Image full screen pop up.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alterplay/APKenBurnsView"&gt;APKenBurnsView&lt;/a&gt; - Ken Burns effect with face recognition!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/moa"&gt;Moa&lt;/a&gt; - An image download extension of the image view for iOS, tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/izotx/JMCMarchingAnts"&gt;JMCMarchingAnts&lt;/a&gt; - Library that lets you add marching ants (animated) selection to the edges of the images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Krisiacik/ImageViewer"&gt;ImageViewer&lt;/a&gt; - An image viewer √† la Twitter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BeauNouvelle/FaceAware"&gt;FaceAware&lt;/a&gt; - An extension that gives UIImageView the ability to focus on faces within an image when using AspectFill.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dkalaitzidis/SwiftyAvatar"&gt;SwiftyAvatar&lt;/a&gt; - A UiimageView class for creating circular avatar images, IBDesignable to make all changes via storyboard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FlexMonkey/ShinpuruImage"&gt;ShinpuruImage&lt;/a&gt; - Syntactic Sugar for Accelerate/vImage and Core Image Filters.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lbrndnr/ImagePickerSheetController"&gt;ImagePickerSheetController&lt;/a&gt; - ImagePickerSheetController is like the custom photo action sheet in iMessage just without the glitches.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gkye/ComplimentaryGradientView"&gt;ComplimentaryGradientView&lt;/a&gt; - Create complementary gradients generated from dominant and prominent colors in supplied image. Inspired by Grade.js.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zvonicek/ImageSlideshow"&gt;ImageSlideshow&lt;/a&gt; - Swift image slideshow with circular scrolling, timer and full screen viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Imaginary"&gt;Imaginary&lt;/a&gt; - Remote images, as easy as one, two, three.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pantuspavel/PPAssetsActionController"&gt;PPAssetsActionController&lt;/a&gt; - Highly customizable Action Sheet Controller with Assets Preview.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jinSasaki/Vulcan"&gt;Vulcan&lt;/a&gt; - Multi image downloader with priority in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/floriangbh/FacebookImagePicker"&gt;FacebookImagePicker&lt;/a&gt; - Facebook album photo picker written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Lightbox"&gt;Lightbox&lt;/a&gt; - A convenient and easy to use image viewer for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ebbapp/ebblinkSDK"&gt;Ebblink&lt;/a&gt; - An iOS SDK for sharing photos that automatically expire and can be deleted at any time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/makomori/Sharaku"&gt;Sharaku&lt;/a&gt; - Instagram-like image filter ViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scihant/CTPanoramaView"&gt;CTPanoramaView&lt;/a&gt; - Displays spherical or cylindrical panoramas or 360-photos with touch or motion based control options.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/ios-twitter-image-pipeline"&gt;Twitter Image Pipline&lt;/a&gt; - streamlined framework for fetching and storing images in an application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TinyCrayon/TinyCrayon-iOS-SDK"&gt;TinyCrayon&lt;/a&gt; - A smart and easy-to-use image masking and cutout SDK for mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kawoou/FlexibleImage"&gt;FlexibleImage&lt;/a&gt; - A simple way to play with image!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tilltue/TLPhotoPicker"&gt;TLPhotoPicker&lt;/a&gt; - Multiple phassets picker for iOS lib. like a facebook.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yapstudios/YapImageManager"&gt;YapImageManager&lt;/a&gt; - A high-performance image downloader written in Swift, powered by YapDatabase.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://photoeditorsdk.com/" rel="nofollow"&gt;PhotoEditorSDK&lt;/a&gt; - A fully customizable photo editor for your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aFrogleap/SimpleImageViewer"&gt;SimpleImageViewer&lt;/a&gt; - A snappy image viewer with zoom and interactive dismissal transition.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/AZImagePreview"&gt;AZImagePreview&lt;/a&gt; - A framework that makes image viewing easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KimDarren/FaceCropper"&gt;FaceCropper&lt;/a&gt; - Crop faces, inside of your image, with iOS 11 Vision api.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/avito-tech/Paparazzo"&gt;Paparazzo&lt;/a&gt; - Custom iOS camera and photo picker with editing capabilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZaidPathan/ZImageCropper"&gt;ZImageCropper&lt;/a&gt; - A Swift  project to crop image in any shape.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bachonk/InitialsImageView"&gt;InitialsImageView&lt;/a&gt; - An UIImageView extension that generates letter initials as a placeholder for user profile images, with a randomized background color.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tungvoduc/DTPhotoViewerController"&gt;DTPhotoViewerController&lt;/a&gt; - A fully customizable photo viewer ViewController, inspired by Facebook photo viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vpeschenkov/LetterAvatarKit"&gt;LetterAvatarKit&lt;/a&gt; - A UIImage extension that generates letter-based avatars written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexhillc/AXPhotoViewer"&gt;AXPhotoViewer&lt;/a&gt; - An iPhone/iPad photo gallery viewer, useful for viewing a large (or small!) number of photos&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tejas-ardeshna/TJProfileImage"&gt;TJProfileImage&lt;/a&gt; - Live rendering of componet‚Äôs properties in Interface Builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/Viewer"&gt;Viewer&lt;/a&gt; - Image viewer (or Lightbox) with support for local and remote videos and images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aaronjsutton/OverlayComposite"&gt;OverlayComposite&lt;/a&gt; - An asynchronous, multithreaded, image compositing framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minecodecraft/MCScratchImageView"&gt;MCScratchImageView&lt;/a&gt; - A custom ImageView that is used to cover the surface of other view like a scratch card, user can swipe the mulch to see the view below.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MetalPetal/MetalPetal"&gt;MetalPetal&lt;/a&gt; - A GPU-accelerated image/video processing framework based on &lt;a href="https://developer.apple.com/metal/" rel="nofollow"&gt;Metal&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olddonkey/ShadowImageView"&gt;ShadowImageView&lt;/a&gt; - ShadowImageView is a iOS 10 Apple Music style image view, help you create elegent image with shadow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wvabrinskas/Avatar"&gt;Avatar&lt;/a&gt; - Generate random user Avatar images using CoreGraphics and QuartzCore.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/horitaku46/Serrata"&gt;Serrata&lt;/a&gt; - Slide image viewer library similar to Twitter and LINE.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ileafsolutions/StyleArt"&gt;StyleArt&lt;/a&gt; - Style Art library process images using COREML with a set of pre trained machine learning models and convert them to Art style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/500px/greedo-layout-for-ios"&gt;greedo-layout-for-ios&lt;/a&gt; - Full aspect ratio grid layout for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Feghal/ImageDetect"&gt;ImageDetect&lt;/a&gt; - Detect and crop faces, barcodes and texts inside of your image, with iOS 11 Vision api.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TileImageTeamiOS/THTiledImageView"&gt;THTiledImageView&lt;/a&gt; - Provide ultra-high-quality images through tiling techniques.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BradLarson/GPUImage3"&gt;GPUImage3&lt;/a&gt; - GPUImage 3 is a BSD-licensed Swift framework for GPU-accelerated video and image processing using Metal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Gallery"&gt;Gallery&lt;/a&gt; - Your next favorite image and video picker.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/altayer-digital/ATGMediaBrowser"&gt;ATGMediaBrowser&lt;/a&gt; - Image slide-show viewer with multiple predefined transition styles, and ability to create new transitions with ease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/Pixel"&gt;Pixel&lt;/a&gt; - An image editor and engine using CoreImage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KiranJasvanee/OnlyPictures"&gt;OnlyPictures&lt;/a&gt; - A simple and flexible way to add source of overlapping circular pictures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piknotech/SFSafeSymbols"&gt;SFSafeSymbols&lt;/a&gt; - Safely access Apple's SF Symbols using static typing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-media-processing" class="anchor" aria-hidden="true" href="#media-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Media Processing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/garnele007/SwiftOCR"&gt;SwiftOCR&lt;/a&gt; - Fast and simple OCR library written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.appcoda.com/qr-code-ios-programming-tutorial/" rel="nofollow"&gt;QR Code Scanner&lt;/a&gt; - QR Code implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aschuch/QRCode"&gt;QRCode&lt;/a&gt; - A QRCode generator written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EFPrefix/EFQRCode"&gt;EFQRCode&lt;/a&gt; - A better way to operate two-dimensional code in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lovoo/NSFWDetector"&gt;NSFWDetector&lt;/a&gt; - A NSFW (aka porn) detector with CoreML.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-pdf" class="anchor" aria-hidden="true" href="#pdf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PDF&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vfr/Reader"&gt;Reader&lt;/a&gt; - PDF Reader Core for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RobertAPhillips/UIView_2_PDF"&gt;UIView 2 PDF&lt;/a&gt; - PDF generator using UIViews or UIViews with an associated XIB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FolioReader/FolioReaderKit"&gt;FolioReaderKit&lt;/a&gt; - A Swift ePub reader and parser framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgr-ksmt/PDFGenerator"&gt;PDFGenerator&lt;/a&gt; - A simple Generator of PDF in Swift. Generate PDF from view(s) or image(s).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nRewik/SimplePDF"&gt;SimplePDF&lt;/a&gt; - Create a simple PDF effortlessly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kayoslab/SwiftPDFGenerator"&gt;SwiftPDFGenerator&lt;/a&gt; - PDF generator using UIViews; Swift Version of 'UIView 2 PDF'.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pspdfkit.com/" rel="nofollow"&gt;PSPDFKit&lt;/a&gt; - Render PDF, add/edit annotations, fill forms, add/edit pages, view/create digital signatures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Techprimate/TPPDF"&gt;TPPDF&lt;/a&gt; - Generate PDF using commands and automatic layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mobfarm/FastPdfKit"&gt;FastPdfKit&lt;/a&gt; - A Static Library to be embedded on iOS applications to display pdf documents derived from Fast PDF.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DimaMishchenko/UIImagePlusPDF"&gt;UIImagePlusPDF&lt;/a&gt; - UIImage extensions to simply use PDF files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-streaming" class="anchor" aria-hidden="true" href="#streaming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Streaming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shogo4405/HaishinKit.swift"&gt;HaishinKit.swift&lt;/a&gt; - Camera and Microphone streaming library via RTMP, HLS for iOS, macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tumtumtum/StreamingKit"&gt;StreamingKit&lt;/a&gt; - A fast and extensible gapless AudioPlayer/AudioStreamer for macOS and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/teodorpatras/Jukebox"&gt;Jukebox&lt;/a&gt; - Player for streaming local and remote audio files. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LaiFengiOS/LFLiveKit"&gt;LFLiveKit&lt;/a&gt; - H264 and AAC Hard codingÔºåsupport GPUImage BeautyÔºå rtmp transmissionÔºåweak network lost frameÔºåDynamic switching rate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qasim/Airstream"&gt;Airstream&lt;/a&gt; - A framework for streaming audio between Apple devices using AirPlay.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opentok/accelerator-core-ios"&gt;OTAcceleratorCore&lt;/a&gt; - A painless way to integrate audio/video(screen sharing) to any iOS applications via Tokbox.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webrtc.org/native-code/ios/" rel="nofollow"&gt;webrtc&lt;/a&gt; - Provides browsers and mobile applications with Real-Time Communications (RTC) capabilities via simple APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-video" class="anchor" aria-hidden="true" href="#video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Video&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vimeo/VIMVideoPlayer"&gt;VIMVideoPlayer&lt;/a&gt; - A simple wrapper around the AVPlayer and AVPlayerLayer classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mobileplayer/mobileplayer-ios"&gt;MobilePlayer&lt;/a&gt; - A powerful and completely customizable media player for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0xced/XCDYouTubeKit"&gt;XCDYouTubeKit&lt;/a&gt; - YouTube video player for iOS, tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.modejong.com/AVAnimator/" rel="nofollow"&gt;AVAnimator&lt;/a&gt; - An open source iOS native library that makes it easy to implement non-trivial video/audio enabled apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gontovnik/Periscope-VideoViewController"&gt;Periscope VideoViewController&lt;/a&gt; - Video view controller with Periscope fast rewind control.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mariohahn/MHVideoPhotoGallery"&gt;MHVideoPhotoGallery&lt;/a&gt; - A Photo and Video Gallery.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidlondono/PlayerView"&gt;PlayerView&lt;/a&gt; - Player View is a delegated view using AVPlayer of Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SRGSSR/SRGMediaPlayer-iOS"&gt;SRGMediaPlayer-iOS&lt;/a&gt; - The SRG Media Player library for iOS provides a simple way to add a universal audio / video player to any iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mhergon/AVPlayerViewController-Subtitles"&gt;AVPlayerViewController-Subtitles&lt;/a&gt; - AVPlayerViewController-Subtitles is a library to display subtitles on iOS. It's built as a Swift extension and it's very easy to integrate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mhergon/MPMoviePlayerController-Subtitles"&gt;MPMoviePlayerController-Subtitles&lt;/a&gt; - MPMoviePlayerController-Subtitles is a library to display subtitles on iOS. It's built as a Swift extension and it's very easy to integrate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/renzifeng/ZFPlayer"&gt;ZFPlayer&lt;/a&gt; - Based on AVPlayer, support for the horizontal screen, vertical screen (full screen playback can also lock the screen direction), the upper and lower slide to adjust the volume, the screen brightness, or so slide to adjust the playback progress.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/Player"&gt;Player&lt;/a&gt; - video player in Swift, simple way to play and stream media in your iOS or tvOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BrikerMan/BMPlayer"&gt;BMPlayer&lt;/a&gt; - Video player in swift3 and swift2 for iOS, based on AVPlayer, support the horizontal, vertical screen. support adjust volume, brigtness and seek by slide.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/entotsu/VideoPager"&gt;VideoPager&lt;/a&gt; - Paging Video UI, and some control components is available.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NYTimes/ios-360-videos"&gt;ios-360-videos&lt;/a&gt; - NYT360Video plays 360-degree video streamed from an AVPlayer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gsabran/DDDKit"&gt;swift-360-videos&lt;/a&gt; - Pure swift (no SceneKit) 3D library with focus on video and 360.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrewboryk/ABMediaView"&gt;ABMediaView&lt;/a&gt; - UIImageView subclass for drop-in image, video, GIF, and audio display, with functionality for fullscreen and minimization to the bottom-right corner.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HHK1/PryntTrimmerView"&gt;PryntTrimmerView&lt;/a&gt; - A set of UI elements to trim, crop and select frames inside a video.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VeinGuo/VGPlayer"&gt;VGPlayer&lt;/a&gt; - A simple iOS video player in Swift,Support play local and network,Background playback mode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rinov/YoutubeKit"&gt;YoutubeKit&lt;/a&gt; - A video player that fully supports Youtube IFrame API and YoutubeDataAPI for easily create a Youtube app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gilesvangruisen/Swift-YouTube-Player"&gt;Swift-YouTube-Player&lt;/a&gt; - Swift library for embedding and controlling YouTube videos in your iOS applications!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesdouble/JDVideoKit"&gt;JDVideoKit&lt;/a&gt; - You can easily transfer your video into Three common video type via this framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/VersaPlayer"&gt;VersaPlayer&lt;/a&gt; - Versatile AVPlayer implementation for iOS, macOS, and tvOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-messaging" class="anchor" aria-hidden="true" href="#messaging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Messaging&lt;/h2&gt;
&lt;p&gt;Also see &lt;a href="#push-notifications"&gt;push notifications&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/layerhq/releases-ios"&gt;LayerKit&lt;/a&gt; - iOS SDK for Layer, the easiest way to add in-app messaging (text, photos, videos, data) to any mobile or web application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robbiehanson/XMPPFramework"&gt;XMPPFramework&lt;/a&gt; - An XMPP Framework in Objective-C for Mac and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/badoo/Chatto"&gt;Chatto&lt;/a&gt; - A lightweight framework to build chat applications, made in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MessageKit/MessageKit"&gt;MessageKit&lt;/a&gt; - Eventually, a Swift re-write of JSQMessagesViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/relatedcode/Messenger"&gt;Messenger&lt;/a&gt; - This is a native iOS Messenger app, making realtime chat conversations and audio calls with full offline support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opentok/accelerator-textchat-ios"&gt;OTTextChatAccelerator&lt;/a&gt; - OpenTok Text Chat Accelerator Pack enables text messages between mobile or browser-based devices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chat-sdk/chat-sdk-ios"&gt;chat-sdk-ios&lt;/a&gt; - Chat SDK iOS - Open Source Mobile Messenger.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nguyenhuy/AsyncMessagesViewController"&gt;AsyncMessagesViewController&lt;/a&gt; - A smooth, responsive and flexible messages UI library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GitHawkApp/MessageViewController"&gt;MessageViewController&lt;/a&gt; - A SlackTextViewController replacement written in Swift for the iPhone X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/SwiftyMessenger"&gt;SwiftyMessenger&lt;/a&gt; - Swift toolkit for passing messages between iOS apps and extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/instamobile/messenger-iOS-chat-swift-firestore"&gt;Messenger Chat with Firebase&lt;/a&gt; - Swift messaging chat app with Firebase Firestore integration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/SwiftKafka"&gt;SwiftKafka&lt;/a&gt; - Swift SDK for Apache Kafka by IBM.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-networking" class="anchor" aria-hidden="true" href="#networking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Networking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AFNetworking/AFNetworking"&gt;AFNetworking&lt;/a&gt; - A delightful iOS and macOS networking framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RestKit/RestKit"&gt;RestKit&lt;/a&gt; - RestKit is an Objective-C framework for iOS that aims to make interacting with RESTful web services simple, fast and fun.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/foursquare/FSNetworking"&gt;FSNetworking&lt;/a&gt; - Foursquare iOS networking library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pokeb/asi-http-request"&gt;ASIHTTPRequest&lt;/a&gt; - Easy to use CFNetwork wrapper for HTTP requests, Objective-C, macOS and iPhone.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Overcoat/Overcoat"&gt;Overcoat&lt;/a&gt; - Small but powerful library that makes creating REST clients simple and fun.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/epam/road-ios-framework"&gt;ROADFramework&lt;/a&gt; - Attributed-oriented approach for interacting with web services. The framework has built-in json and xml serialization for requests and responses and can be easily extensible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire"&gt;Alamofire&lt;/a&gt; - Alamofire is an HTTP networking library written in Swift, from the creator of AFNetworking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nghialv/Transporter"&gt;Transporter&lt;/a&gt; - A tiny library makes uploading and downloading easier.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cdzombak/CDZPinger"&gt;CDZPinger&lt;/a&gt; - Easy-to-use ICMP Ping.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingbat/nsrails"&gt;NSRails&lt;/a&gt; - iOS/Mac OS framework for Rails.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nathankot/NKMultipeer"&gt;NKMultipeer&lt;/a&gt; - A testable abstraction over multipeer connectivity.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robbiehanson/CocoaAsyncSocket"&gt;CocoaAsyncSocket&lt;/a&gt; - Asynchronous socket networking library for Mac and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bustoutsolutions/siesta"&gt;Siesta&lt;/a&gt; - Elegant abstraction for RESTful resources that untangles stateful messes. An alternative to callback- and delegate-based networking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashleymills/Reachability.swift"&gt;Reachability.swift&lt;/a&gt; - Replacement for Apple's Reachability re-written in Swift with closures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icoco/OctopusKit"&gt;OctopusKit&lt;/a&gt; - A simplicity but graceful solution for invoke RESTful web service APIs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Moya/Moya"&gt;Moya&lt;/a&gt; - Network abstraction layer written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chasseurmic/TWRDownloadManager"&gt;TWRDownloadManager&lt;/a&gt; - A modern download manager based on NSURLSession to deal with asynchronous downloading, management and persistence of multiple files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qiniu/happy-dns-objc"&gt;HappyDns&lt;/a&gt; - A Dns library, support custom dns server, dnspod httpdns. Only support A record.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BridgeNetworking/Bridge"&gt;Bridge&lt;/a&gt; - A simple extensible typed networking library. Intercept and process/alter requests and responses easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MLSDev/TRON"&gt;TRON&lt;/a&gt; - Lightweight network abstraction layer, written on top of Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVCloudKitDao"&gt;EVCloudKitDao&lt;/a&gt; - Simplified access to Apple's CloudKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVURLCache"&gt;EVURLCache&lt;/a&gt; - a NSURLCache subclass for handling all web requests that use NSURLRequest.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netguru/ResponseDetective"&gt;ResponseDetective&lt;/a&gt; - Sherlock Holmes of the networking layer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnlui/Pitaya"&gt;Pitaya&lt;/a&gt; - A Swift HTTP / HTTPS networking library just incidentally execute on machines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dduan/Just"&gt;Just&lt;/a&gt; - Swift HTTP for Humans.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hallas/agent"&gt;agent&lt;/a&gt; - Minimalistic Swift HTTP request agent for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Isuru-Nanayakkara/Reach"&gt;Reach&lt;/a&gt; - A simple class to check for internet connection availability in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam/SwiftHTTP"&gt;SwiftHTTP&lt;/a&gt; - Thin wrapper around NSURLSession in swift. Simplifies HTTP requests.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qiniu/iOS-netdiag"&gt;Netdiag&lt;/a&gt; - A network diagnosis library. Support Ping/TcpPing/Rtmp/TraceRoute/DNS/external IP/external DNS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/betacraft/AFNetworkingHelper"&gt;AFNetworkingHelper&lt;/a&gt; - A custom wrapper over AFNetworking library that we use inside RC extensively.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/azizuysal/NetKit"&gt;NetKit&lt;/a&gt; - A Concise HTTP Framework in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dustturtle/RealReachability"&gt;RealReachability&lt;/a&gt; - We need to observe the REAL reachability of network. That's what RealReachability do.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nixzhu/MonkeyKing"&gt;MonkeyKing&lt;/a&gt; - MonkeyKing helps you post messages to Chinese Social Networks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imex94/NetworkKit"&gt;NetworkKit&lt;/a&gt; - Lightweight Networking and Parsing framework made for iOS, Mac, WatchOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ishkawa/APIKit"&gt;APIKit&lt;/a&gt; - A networking library for building type safe web API client in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/ws"&gt;ws &lt;g-emoji class="g-emoji" alias="cloud" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2601.png"&gt;‚òÅÔ∏è&lt;/g-emoji&gt;&lt;/a&gt; - Elegant JSON WebService in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/SPTDataLoader"&gt;SPTDataLoader&lt;/a&gt; - The HTTP library used by the Spotify iOS client.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skywite/SWNetworking"&gt;SWNetworking&lt;/a&gt; - Powerful high-level iOS, macOS and tvOS networking library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/Networking"&gt;Networking&lt;/a&gt; - Simple HTTP Networking in Swift a NSURLSession wrapper with image caching support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/priore/SOAPEngine"&gt;SOAPEngine&lt;/a&gt; - This generic SOAP client allows you to access web services using a your iOS app, macOS app and AppleTV app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Swish"&gt;Swish&lt;/a&gt; - Nothing but Net(working).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Malibu"&gt;Malibu&lt;/a&gt; - Malibu is a networking library built on promises.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yuantiku/YTKNetwork"&gt;YTKNetwork&lt;/a&gt; - YTKNetwork is a high level request util based on AFNetworking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serejahh/UnboxedAlamofire"&gt;UnboxedAlamofire&lt;/a&gt; - Alamofire + Unbox: the easiest way to download and decode JSON into swift objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mavris/MMLanScan"&gt;MMLanScan&lt;/a&gt; - An iOS LAN Network Scanner library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FelixLinBH/Domainer"&gt;Domainer&lt;/a&gt; - Manage multi-domain url auto mapping ip address table.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Restofire/Restofire"&gt;Restofire&lt;/a&gt; - Restofire is a protocol oriented network abstraction layer in swift that is built on top of Alamofire to use services in a declartive way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kubatruhlar/AFNetworking-RetryPolicy"&gt;AFNetworking+RetryPolicy&lt;/a&gt; - An objective-c category that adds the ability to set the retry logic for requests made with AFNetworking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/azawawi/SwiftyZeroMQ"&gt;SwiftyZeroMQ&lt;/a&gt; - ZeroMQ Swift Bindings for iOS, macOS, tvOS and watchOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stremsdoerfer/Nikka"&gt;Nikka&lt;/a&gt; - A super simple Networking wrapper that supports many JSON libraries, Futures and Rx.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kangzubin/XMNetworking"&gt;XMNetworking&lt;/a&gt; - A lightweight but powerful network library with simplified and expressive syntax based on AFNetworking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/Merhaba"&gt;Merhaba&lt;/a&gt; - Bonjour networking for discovery and connection between iOS, macOS and tvOS devices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dbsystel/DBNetworkStack"&gt;DBNetworkStack&lt;/a&gt; - Resource-oritented networking which is typesafe, extendable, composeable and makes testing a lot easier.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ezefranca/EFInternetIndicator"&gt;EFInternetIndicator&lt;/a&gt; - A little swift Internet error status indicator using ReachabilitySwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/paulmelnikow/AFNetworking-Synchronous"&gt;AFNetworking-Synchronous&lt;/a&gt; - Synchronous requests for AFNetworking 1.x, 2.x, and 3.x.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/logansease/QwikHttp"&gt;QwikHttp&lt;/a&gt; - a robust, yet lightweight and simple to use HTTP networking library designed for RESTful APIs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intelygenz/NetClient-iOS"&gt;NetClient&lt;/a&gt; - Versatile HTTP networking library written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Wasappli/WANetworkRouting"&gt;WANetworkRouting&lt;/a&gt; - An iOS library to route API paths to objects on client side with request, mapping, routing and auth layers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RuiAAPeres/Reactor"&gt;Reactor&lt;/a&gt; - Powering your RAC architecture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isamankumara/skywite"&gt;SWNetworking&lt;/a&gt; - Powerful high-level iOS, macOS and tvOS networking library. from the creator of SWNetworking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cornerAnt/Digger"&gt;Digger&lt;/a&gt; - Digger is a lightweight download framework that requires only one line of code to complete the file download task.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlTavares/Ciao"&gt;Ciao&lt;/a&gt; - Publish and discover services using mDNS(Bonjour, Zeroconf).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jorik041/PerfectAPIClient"&gt;PerfectAPIClient&lt;/a&gt; - An API Client based on a network abstraction layer for the Perfect Server-Side Swift Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmoaay/Bamboots"&gt;Bamboots&lt;/a&gt; - Bamboots is a network request framework based on Alamofire, aiming at making network request easier for business development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ThreeGayHub/SolarNetwork"&gt;SolarNetwork&lt;/a&gt; - Elegant network abstraction layer in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Feghal/FGRoute"&gt;FGRoute&lt;/a&gt; - An easy-to-use library that helps developers to get wifi ssid, router and device ip addresses.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stdevteam/RxRestClient"&gt;RxRestClient&lt;/a&gt; - Simple REST Client based on RxSwift and Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/billp/TermiNetwork"&gt;TermiNetwork&lt;/a&gt; - A networking library written with Swift 4.0 that supports multi-environment configuration, routing and automatic deserialization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iAmrSalman/Dots"&gt;Dots&lt;/a&gt; - Lightweight Concurrent Networking Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Albinzr/Gem"&gt;Gem&lt;/a&gt; - An extreme light weight system with high performance for managing all http request with automated parser with modal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rogermolas/RMHttp"&gt;RMHttp&lt;/a&gt; - Lightweight REST library for iOS and watchOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tunespeak/AlamoRecord"&gt;AlamoRecord&lt;/a&gt; - An elegant yet powerful iOS networking layer inspired by ActiveRecord.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emadhegab/MHNetwork"&gt;MHNetwork&lt;/a&gt; - Protocol Oriented Network Layer Aim to avoid having bloated singleton NetworkManager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3sidedcube/ThunderRequest"&gt;ThunderRequest&lt;/a&gt; - A simple URLSession wrapper with a generic protocol based request body approach and easy deserialisation of responses.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sky-uk/ReactiveAPI"&gt;ReactiveAPI&lt;/a&gt; - Write clean, concise and declarative network code relying on URLSession, with the power of RxSwift. Inspired by Retrofit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/borchero/Squid"&gt;Squid&lt;/a&gt; - Declarative and reactive networking framework based on Combine and providing means for HTTP requests, transparent pagination, and WebSocket communication.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-email" class="anchor" aria-hidden="true" href="#email"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Email&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MailCore/mailcore2"&gt;Mail Core 2&lt;/a&gt; - MailCore 2 provide a simple and asynchronous API to work with e-mail protocols IMAP, POP and SMTP.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snipsco/Postal"&gt;Postal&lt;/a&gt; - A swift framework providing simple access to common email providers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-representations" class="anchor" aria-hidden="true" href="#representations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Representations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/apollographql/apollo-ios"&gt;apollo-ios&lt;/a&gt; - A GraphQL client for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bricklife/JSONRPCKit"&gt;JSONRPCKit&lt;/a&gt; - A JSON-RPC 2.0 library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexeyxo/protobuf-swift"&gt;protobuf-swift&lt;/a&gt; - Google ProtocolBuffers for Apple Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-protobuf"&gt;swift-protobuf&lt;/a&gt; - Plugin and runtime library for using protobuf with Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-notifications" class="anchor" aria-hidden="true" href="#notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notifications&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-push-notifications" class="anchor" aria-hidden="true" href="#push-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push Notifications&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/Orbiter"&gt;Orbiter&lt;/a&gt; - Push Notification Registration for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/fastlane/tree/master/pem"&gt;PEM&lt;/a&gt; - Automatically generate and renew your push notification profiles.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KnuffApp/Knuff"&gt;Knuff&lt;/a&gt; - The debug application for Apple Push Notification Service (APNS).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/FBNotifications"&gt;FBNotifications&lt;/a&gt; - Facebook Analytics In-App Notifications Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/noodlewerk/NWPusher"&gt;NWPusher&lt;/a&gt; - macOS and iOS application and framework to play with the Apple Push Notification service (APNs).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/acoomans/SimulatorRemoteNotifications"&gt;SimulatorRemoteNotifications&lt;/a&gt; - Library to send mock remote notifications to the iOS simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pisces/APNSUtil"&gt;APNSUtil&lt;/a&gt; - Library makes code simple settings and landing for apple push notification service.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-push-notification-providers" class="anchor" aria-hidden="true" href="#push-notification-providers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push Notification Providers&lt;/h3&gt;
&lt;p&gt;Most of these are paid services, some have free tiers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.airship.com/platform/channels/mobile-app/" rel="nofollow"&gt;Urban Airship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://growthpush.com" rel="nofollow"&gt;Growth Push&lt;/a&gt; - Popular in Japan.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.braze.com/" rel="nofollow"&gt;Braze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://batch.com" rel="nofollow"&gt;Batch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boxcar.io" rel="nofollow"&gt;Boxcar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sailthru.com" rel="nofollow"&gt;Carnival&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.catapush.com/" rel="nofollow"&gt;Catapush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.netmera.com/" rel="nofollow"&gt;Netmera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://onesignal.com" rel="nofollow"&gt;OneSignal&lt;/a&gt; - Free.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pushbots.com/" rel="nofollow"&gt;PushBots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pushwoosh.com" rel="nofollow"&gt;Pushwoosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nordeus/pushkin"&gt;Pushkin&lt;/a&gt; - Free and open-source.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pusher.com/beams" rel="nofollow"&gt;Pusher&lt;/a&gt; - Free and unlimited.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.swrve.com" rel="nofollow"&gt;Swrve&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-local-notifications" class="anchor" aria-hidden="true" href="#local-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Notifications&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/d7laungani/DLLocalNotifications"&gt;DLLocalNotifications&lt;/a&gt; -  Easily create Local Notifications in swift - Wrapper of UserNotifications Framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-objective-c-runtime" class="anchor" aria-hidden="true" href="#objective-c-runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C Runtime&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Objective-C Runtime wrappers, libraries and tools.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sushinoya/lumos"&gt;Lumos&lt;/a&gt; - A light Swift wrapper around Objective-C Runtime.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbaumbach/Swizzlean"&gt;Swizzlean&lt;/a&gt; - An Objective-C Swizzle Helper Class.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-optimization" class="anchor" aria-hidden="true" href="#optimization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optimization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Unreachable"&gt;Unreachable&lt;/a&gt; - Unreachable code path optimization hint for Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-parsing" class="anchor" aria-hidden="true" href="#parsing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parsing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-csv" class="anchor" aria-hidden="true" href="#csv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSV&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Daniel1of1/CSwiftV"&gt;CSwiftV&lt;/a&gt; - A csv parser written in swift conforming to rfc4180.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yaslab/CSV.swift"&gt;CSV.swift&lt;/a&gt; - CSV reading and writing library written in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-json" class="anchor" aria-hidden="true" href="#json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/stig/json-framework"&gt;JSON-Framework&lt;/a&gt; - This framework implements a strict JSON parser and generator in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mantle/Mantle"&gt;Mantle&lt;/a&gt; - Model framework for Cocoa and Cocoa Touch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gonzalezreal/Groot"&gt;Groot&lt;/a&gt; - Convert JSON dictionaries and arrays to and from Core Data managed objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/PropertyMapper"&gt;PropertyMapper&lt;/a&gt; - Data mapping and validation with minimal amount of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JSONModel/JSONModel"&gt;JSONModel&lt;/a&gt; - Magical Data Modeling Framework for JSON. Create rapidly powerful, atomic and smart data model classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftyJSON/SwiftyJSON"&gt;SwiftyJSON&lt;/a&gt; - The better way to deal with JSON data in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/FastEasyMapping"&gt;FastEasyMapping&lt;/a&gt; - Serialize &amp;amp; deserialize JSON fast.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tristanhimmelman/ObjectMapper"&gt;ObjectMapper&lt;/a&gt; - A framework written in Swift that makes it easy for you to convert your Model objects (Classes and Structs) to and from JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/JASON"&gt;JASON&lt;/a&gt; - JSON parsing with outstanding performances and convenient operators.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hkellaway/Gloss"&gt;Gloss&lt;/a&gt; - A shiny JSON parsing library in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Weebly/Cereal"&gt;Cereal&lt;/a&gt; - Swift object serialization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insanoid/SwiftyJSONAccelerator"&gt;SwiftyJSONAccelerator&lt;/a&gt; - Generate Swift 5 model files from JSON with Codeable support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewcheok/JSONCodable"&gt;JSONCodable&lt;/a&gt; - Hassle-free JSON encoding and decoding in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Tailor"&gt;Tailor&lt;/a&gt; - A super fast &amp;amp; convenient object mapper tailored for your needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hodinkee/alexander"&gt;alexander&lt;/a&gt; - An extremely simple JSON helper written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bignerdranch/Freddy"&gt;Freddy&lt;/a&gt; - A reusable framework for parsing JSON in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lyft/mapper"&gt;mapper&lt;/a&gt; - A JSON deserialization library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/AlamofireJsonToObjects"&gt;AlamofireJsonToObjects&lt;/a&gt; - An Alamofire extension which converts JSON response data into swift objects using EVReflection.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/endocrimes/Jay"&gt;Jay&lt;/a&gt; - Pure-Swift JSON parser &amp;amp; formatter. Linux &amp;amp; macOS ready.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYModel"&gt;YYModel&lt;/a&gt; - High performance model framework for iOS/macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/Alembic"&gt;Alembic&lt;/a&gt; - Functional JSON parsing, mapping to objects, and serialize to JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Wrap"&gt;Wrap&lt;/a&gt; - The easy to use Swift JSON encoder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/Arrow"&gt;Arrow &lt;g-emoji class="g-emoji" alias="bow_and_arrow" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3f9.png"&gt;üèπ&lt;/g-emoji&gt;&lt;/a&gt; - Elegant JSON Parsing in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Anviking/Decodable"&gt;Decodable&lt;/a&gt; - Swift 2/3 JSON parsing done (more) right.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LoganWright/Genome"&gt;Genome&lt;/a&gt; - A simple, type safe, failure driven mapping library for serializing JSON to models in Swift 3.0 (Supports Linux).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Unbox"&gt;Unbox&lt;/a&gt; - The easy to use Swift JSON decoder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam/JSONJoy-Swift"&gt;JSONJoy-Swift&lt;/a&gt; - Convert JSON to Swift objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/LazyObject"&gt;LazyObject&lt;/a&gt; - Lazily deserialize JSON into strongly typed Swift objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ahmed-Ali/JSONExport"&gt;JSONExport&lt;/a&gt; - JSONExport is a desktop application for macOS which enables you to export JSON objects as model classes with their associated constructors, utility methods, setters and getters in your favorite language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nike-Inc/Elevate"&gt;Elevate&lt;/a&gt; - Elevate is a JSON parsing framework that leverages Swift to make parsing simple, reliable and composable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CoderMJLee/MJExtension"&gt;MJExtension&lt;/a&gt; - A fast, convenient and nonintrusive conversion between JSON and model. Your model class don't need to extend another base class. You don't need to modify any model file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tristanhimmelman/AlamofireObjectMapper"&gt;AlamofireObjectMapper&lt;/a&gt; - An Alamofire extension which converts JSON response data into swift objects using ObjectMapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wiggzz/GuardedSwiftyJSON"&gt;GuardedSwiftyJSON&lt;/a&gt; - An add-on to SwiftyJSON to make it easier to create failable initializers for data models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/JAYSON"&gt;JAYSON&lt;/a&gt; - Strict and Scalable JSON library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alibaba/handyjson"&gt;HandyJSON&lt;/a&gt; - A handy swift JSON-object serialization/deserialization library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/utahiosmac/Marshal"&gt;Marshal&lt;/a&gt; - Marshaling the typeless wild west of [String: Any] (Protocol based).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mobilejazz/Motis"&gt;Motis&lt;/a&gt; - Easy JSON to NSObject mapping using Cocoa's key value coding (KVC).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bernikovich/NSTEasyJSON"&gt;NSTEasyJSON&lt;/a&gt; - The easiest way to deal with JSON data in Objective-C (similar to SwiftyJSON).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nodes-ios/Serpent"&gt;Serpent&lt;/a&gt; - A protocol to serialize Swift structs and classes for encoding and decoding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adrianmateoaea24/magic-mapper-swift"&gt;MagicMapper&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png"&gt;üåü&lt;/g-emoji&gt; Super light and easy automatic JSON to model mapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mzaks/FlatBuffersSwift"&gt;FlatBuffersSwift&lt;/a&gt; - This project brings FlatBuffers (an efficient cross platform serialization library) to Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Otbivnoe/CodableAlamofire"&gt;CodableAlamofire&lt;/a&gt; - An extension for Alamofire that converts JSON data into Decodable objects (Swift 4).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Wasappli/WAMapping"&gt;WAMapping&lt;/a&gt; - A library to turn dictionary into object and vice versa for iOS. Designed for speed!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/owensd/json-swift"&gt;json-swift&lt;/a&gt; - A basic library for working with JSON in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ikesyo/Himotoki"&gt;Himotoki&lt;/a&gt; - A type-safe JSON decoding library purely written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/postmates/PMHTTP"&gt;PMHTTP&lt;/a&gt; - Swift/Obj-C HTTP framework with a focus on REST and JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DimaMishchenko/NativeJSONMapper"&gt;NativeJSONMapper&lt;/a&gt; - Simple Swift 4 encoding &amp;amp; decoding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/postmates/PMJSON"&gt;PMJSON&lt;/a&gt; - Pure Swift JSON encoding/decoding library.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jsoncafe.com/" rel="nofollow"&gt;jsoncafe.com&lt;/a&gt; - Online Template driven Model Class Generator from JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leavez/Mappable"&gt;Mappable&lt;/a&gt; - lightweight and powerful JSON object mapping library, specially optimized for immutable properties.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-xml--html" class="anchor" aria-hidden="true" href="#xml--html"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XML &amp;amp; HTML&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEXML"&gt;AEXML&lt;/a&gt; - Simple and lightweight XML parser written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/honghaoz/Ji"&gt;Ji&lt;/a&gt; - XML/HTML parser for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/Ono"&gt;Ono&lt;/a&gt; - A sensible way to deal with XML &amp;amp; HTML for iOS &amp;amp; macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/AlamofireXmlToObjects"&gt;AlamofireXmlToObjects&lt;/a&gt; - Fetch a XML feed and parse it into objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cezheng/Fuzi"&gt;Fuzi&lt;/a&gt; - A fast &amp;amp; lightweight XML &amp;amp; HTML parser in Swift with XPath &amp;amp; CSS support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tid-kijyun/Kanna"&gt;Kanna&lt;/a&gt;  - Kanna(Èâã) is an XML/HTML parser for macOS/iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yahoojapan/SwiftyXMLParser"&gt;SwiftyXMLParser&lt;/a&gt; - Simple XML Parser implemented in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iabudiab/HTMLKit"&gt;HTMLKit&lt;/a&gt; - An Objective-C framework for your everyday HTML needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/drmohundro/SWXMLHash"&gt;SWXMLHash&lt;/a&gt; - Simple XML parsing in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chenyunguiMilook/SwiftyXML"&gt;SwiftyXML&lt;/a&gt; - The most swifty way to deal with XML data in swift 4.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxDesiatov/XMLCoder"&gt;XMLCoder&lt;/a&gt; - Encoder &amp;amp; Decoder for XML using Swift's &lt;code&gt;Codable&lt;/code&gt; protocols.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-parsing" class="anchor" aria-hidden="true" href="#other-parsing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Parsing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mkoehnke/WKZombie"&gt;WKZombie&lt;/a&gt; - WKZombie is a Swift framework for iOS/macOS to navigate within websites and collect data without the need of User Interface or API, also known as Headless browser. It can be used to run automated tests or manipulate websites using Javascript.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/itsmeichigo/URLPreview"&gt;URLPreview&lt;/a&gt; - An NSURL extension for showing preview info of webpages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nmdias/FeedKit"&gt;FeedKit&lt;/a&gt; - An RSS and Atom feed parser written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/Erik"&gt;Erik&lt;/a&gt; - Erik is an headless browser based on WebKit. An headless browser allow to run functional tests, to access and manipulate webpages using javascript.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/URLEmbeddedView"&gt;URLEmbeddedView&lt;/a&gt; - Automatically caches the object that is confirmed the Open Graph Protocol, and displays it as URL embedded card.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ykyouhei/SwiftyConfiguration"&gt;SwiftyConfiguration&lt;/a&gt; - Modern Swift API for Plist.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/totocaster/JSONFeed"&gt;JSONFeed&lt;/a&gt; - Swift parser for JSON Feed, a format similar to RSS and Atom but in JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/100mango/SwiftCssParser"&gt;SwiftCssParser&lt;/a&gt; - A Powerful , Extensible CSS Parser written in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bitfwdcommunity/RLPSwift"&gt;RLPSwift&lt;/a&gt; - Recursive Length Prefix encoding written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cats-oss/AcknowledgementsPlist"&gt;AcknowledgementsPlist&lt;/a&gt; - AcknowledgementsPlist manages the licenses of libraries that depend on your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxDesiatov/CoreXLSX"&gt;CoreXLSX&lt;/a&gt; - Excel spreadsheet (XLSX) format support in pure Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-passbook" class="anchor" aria-hidden="true" href="#passbook"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passbook&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/frozon/passbook"&gt;passbook&lt;/a&gt; - Passbook gem let's you create pkpass for passbook iOS 6+.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nomad/dubai"&gt;Dubai&lt;/a&gt; - Generate and Preview Passbook Passes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://passkit.com" rel="nofollow"&gt;Passkit&lt;/a&gt; - Design, Create and validate Passbook Passes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-payments" class="anchor" aria-hidden="true" href="#payments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/prolificinteractive/Caishen"&gt;Caishen&lt;/a&gt; - A Payment Card UI &amp;amp; Validator for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stripe.com" rel="nofollow"&gt;Stripe&lt;/a&gt; - Payment integration on your app with Ô£øPAY. Suitable for people with low knowledge on Backend.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.braintreepayments.com" rel="nofollow"&gt;Braintree&lt;/a&gt; - Free payment processing on your first $50k. Requires Backend.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/venmo-ios-sdk"&gt;Venmo&lt;/a&gt; Make and accept payments in your iOS app via Venmo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.moltin.com/developer/swift-ecommerce-sdk/" rel="nofollow"&gt;Moltin&lt;/a&gt; - Add eCommerce to your app with a simple SDK, so you can create a store and sell physical products, no backend required.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MosheBerman/PatronKit"&gt;PatronKit&lt;/a&gt; - A framework to add patronage to your apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit"&gt;SwiftyStoreKit&lt;/a&gt; - Lightweight In App Purchases Swift framework for iOS 8.0+ and macOS 9.0+&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sandorgyulai/InAppFramework"&gt;InAppFramework&lt;/a&gt; - In App Purchase Manager framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suraphanL/SwiftInAppPurchase"&gt;SwiftInAppPurchase&lt;/a&gt; - Simply code In App Purchases with this Swift Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gabrielgarza/monza"&gt;monza&lt;/a&gt; - Ruby Gem for Rails - Easy iTunes In-App Purchase Receipt validation, including auto-renewable subscriptions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/paypal/PayPal-iOS-SDK"&gt;PayPal&lt;/a&gt; - Accept payments in your iOS app via PayPal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/card-io/card.io-iOS-SDK"&gt;card.io-iOS-SDK&lt;/a&gt; - card.io provides fast, easy credit card scanning in mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxKramer/SwiftLuhn"&gt;SwiftLuhn&lt;/a&gt; - Debit/Credit card validation port of the Luhn Algorithm in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxKramer/ObjectiveLuhn"&gt;ObjectiveLuhn&lt;/a&gt; - Luhn Credit Card Validation Algorithm.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robotmedia/RMStore"&gt;RMStore&lt;/a&gt; - A lightweight iOS library for In-App Purchases.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MobileFirstInc/MFCard"&gt;MFCard&lt;/a&gt; - Easily integrate Credit Card payments in iOS App / Customisable Card UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tikhop/TPInAppReceipt"&gt;TPInAppReceipt&lt;/a&gt; - Reading and Validating In App Store Receipt.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eliakorkmaz/iCard"&gt;iCard&lt;/a&gt; - Bank Card Generator with Swift using SnapKit DSL.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orazz/CreditCardForm-iOS"&gt;CreditCardForm-iOS&lt;/a&gt; - CreditCardForm is iOS framework that allows developers to create the UI which replicates an actual Credit Card.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benjaminmayo/merchantkit"&gt;merchantkit&lt;/a&gt; - A modern In-App Purchases management framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lionheart/TipJarViewController"&gt;TipJarViewController&lt;/a&gt; - Easy, drop-in tip jar for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/checkout/frames-ios"&gt;FramesIos&lt;/a&gt; - Payment Form UI and Utilities in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yassram/YRPayment"&gt;YRPayment&lt;/a&gt; - Better payment user experience library with cool animation in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-permissions" class="anchor" aria-hidden="true" href="#permissions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Permissions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nixzhu/Proposer"&gt;Proposer&lt;/a&gt; - Make permission request easier (Supports Camera, Photos, Microphone, Contacts, Location).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wircho/ICanHas"&gt;ICanHas&lt;/a&gt; - Simplifies iOS user permission requests (Supports location, push notifications, camera, contacts, calendar, photos).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zakkhoyt/VWWPermissionKit"&gt;VWWPermissionKit&lt;/a&gt; - A visual permission manager for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iosphere/ISHPermissionKit"&gt;ISHPermissionKit&lt;/a&gt; - A unified way for iOS apps to request user permissions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlaws/JLPermissions"&gt;JLPermissions&lt;/a&gt; - An iOS pre-permissions utility that lets developers ask users on their own dialog for calendar, contacts, location, photos, reminders, twitter, push notifications and more, before making the system-based permission request.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rsattar/ClusterPrePermissions"&gt;ClusterPrePermissions&lt;/a&gt; - Reusable pre-permissions utility that lets developers ask users for access in their own dialog, before making the system-based request.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/Permission"&gt;Permission&lt;/a&gt; - A unified API to ask for permissions on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/STLocationRequest"&gt;STLocationRequest&lt;/a&gt; - A simple and elegant 3D-Flyover location request screen written Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pascalbros/PAPermissions"&gt;PAPermissions&lt;/a&gt; - A unified API to ask for permissions on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ennioma/arek"&gt;AREK&lt;/a&gt; - AREK is a clean and easy to use wrapper over any kind of iOS permission.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanVorobei/SPPermission"&gt;SPPermission&lt;/a&gt; - Request permissions with dialog. Check state any permissions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-products" class="anchor" aria-hidden="true" href="#products"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Products&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.import.io/" rel="nofollow"&gt;Import.io&lt;/a&gt; - Instantly Turn Web Pages into Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tapglue.com/" rel="nofollow"&gt;Tapglue&lt;/a&gt; - Build social products and a activity feed with a few lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openshopio/openshop.io-ios"&gt;OpenShop.io&lt;/a&gt; - mobile e-commerce solution connected to Facebook Ads and Google.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reactive-programming" class="anchor" aria-hidden="true" href="#reactive-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reactive Programming&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt; - Reactive Programming in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thanegill/RxOptional"&gt;RxOptional&lt;/a&gt; - RxSwift extensions for Swift optionals and "Occupiable" types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Carthage/ReactiveTask"&gt;ReactiveTask&lt;/a&gt; - Flexible, stream-based abstraction for launching processes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactiveCocoa/ReactiveCocoa"&gt;ReactiveCocoa&lt;/a&gt; - Streams of values over time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxMediaPicker"&gt;RxMediaPicker&lt;/a&gt; - A reactive wrapper built around UIImagePickerController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apparentsoft/ReactiveCoreData"&gt;ReactiveCoreData&lt;/a&gt; - ReactiveCoreData (RCD) is an attempt to bring Core Data into the ReactiveCocoa (RAC) world.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReSwift/ReSwift"&gt;ReSwift&lt;/a&gt; - Unidirectional Data Flow in Swift - Inspired by Redux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeclarativeHub/ReactiveKit"&gt;ReactiveKit&lt;/a&gt; - ReactiveKit is a collection of Swift frameworks for reactive and functional reactive programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sunshinejr/RxPermission"&gt;RxPermission&lt;/a&gt; - RxSwift bindings for Permissions API in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxAlamofire"&gt;RxAlamofire&lt;/a&gt; - RxSwift wrapper around the elegant HTTP networking in Swift Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxRealm"&gt;RxRealm&lt;/a&gt; - Rx wrapper for Realm's collection types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxMultipeer"&gt;RxMultipeer&lt;/a&gt; - A testable RxSwift wrapper around MultipeerConnectivity.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Polidea/RxBluetoothKit"&gt;RxBluetoothKit&lt;/a&gt; - iOS &amp;amp; macOS Bluetooth library for RxSwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxGesture"&gt;RxGesture&lt;/a&gt; - RxSwift reactive wrapper for view gestures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/NSObject-Rx"&gt;NSObject-Rx&lt;/a&gt; - Handy RxSwift extensions on NSObject, including rx_disposeBag.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxCoreData"&gt;RxCoreData&lt;/a&gt; - RxSwift extensions for Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/inamiy/RxAutomaton"&gt;RxAutomaton&lt;/a&gt; - RxSwift + State Machine, inspired by Redux and Elm.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Wolox/ReactiveArray"&gt;ReactiveArray&lt;/a&gt; - An array class implemented in Swift that can be observed using ReactiveCocoa's Signals.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JensRavens/Interstellar"&gt;Interstellar&lt;/a&gt; - Simple and lightweight Functional Reactive Coding in Swift for the rest of us.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lsunsi/ReduxSwift"&gt;ReduxSwift&lt;/a&gt; - Predictable state container for Swift apps too.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Aftermath"&gt;Aftermath&lt;/a&gt; - Stateless message-driven micro-framework in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxKeyboard"&gt;RxKeyboard&lt;/a&gt; - Reactive Keyboard in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Jasonette/JASONETTE-iOS"&gt;JASONETTE-iOS&lt;/a&gt; - Native App over HTTP. Create your own native iOS app with nothing but JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactiveCocoa/ReactiveSwift"&gt;ReactiveSwift&lt;/a&gt; - Streams of values over time by ReactiveCocoa group.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/msaps/Listenable"&gt;Listenable&lt;/a&gt; - Swift object that provides an observable platform.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactorSwift/Reactor"&gt;Reactor&lt;/a&gt; - Unidirectional Data Flow using idiomatic Swift‚Äîinspired by Elm and Redux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/UrbanCompass/Snail"&gt;Snail&lt;/a&gt; - An observables framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fjcaetano/RxWebSocket"&gt;RxWebSocket&lt;/a&gt; - Reactive extension over Starscream for websockets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AckeeCZ/ACKReactiveExtensions"&gt;ACKReactiveExtensions&lt;/a&gt; - Useful extensions for ReactiveCocoa&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AckeeCZ/ReactiveLocation"&gt;ReactiveLocation&lt;/a&gt; - CoreLocation made reactive&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blendle/Hanson"&gt;Hanson&lt;/a&gt; - Lightweight observations and bindings in Swift, with support for KVO and NotificationCenter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/Observable"&gt;Observable&lt;/a&gt; - The easiest way to observe values in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jaychang0917/SimpleApiClient-ios"&gt;SimpleApiClient&lt;/a&gt; - A configurable api client based on Alamofire4 and RxSwift4 for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/VueFlux"&gt;VueFlux&lt;/a&gt; - Unidirectional Data Flow State Management Architecture for Swift - Inspired by Vuex and Flux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxAnimated"&gt;RxAnimated&lt;/a&gt; - Animated RxCocoa bindings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electricbolt/bindkit"&gt;BindKit&lt;/a&gt; - Two-way data binding framework for iOS. Only one API to learn.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stdevteam/STDevRxExt"&gt;STDevRxExt&lt;/a&gt; - STDevRxExt contains some extension functions for RxSwift and RxCocoa which makes our live easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxReduce"&gt;RxReduce&lt;/a&gt; - Lightweight framework that ease the implementation of a state container pattern in a Reactive Programming compliant way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quickbirdstudios/XCoordinator"&gt;RxCoordinator&lt;/a&gt; -  Powerful navigation library for iOS based on the coordinator pattern.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daltron/RxAlamoRecord"&gt;RxAlamoRecord&lt;/a&gt; Combines the power of the AlamoRecord and RxSwift libraries to create a networking layer that makes interacting with API's easier than ever reactively.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattgallagher/CwlSignal"&gt;CwlSignal&lt;/a&gt; A Swift framework for reactive programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fxm90/LightweightObservable"&gt;LightweightObservable&lt;/a&gt; - A lightweight implementation of an observable sequence that you can subscribe to.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaximKotliar/Bindy"&gt;Bindy&lt;/a&gt; - Simple, lightweight swift bindings with KVO support and easy to read syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/broadwaylamb/OpenCombine"&gt;OpenCombine&lt;/a&gt; ‚Äî Open source implementation of Apple's Combine framework for processing values over time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-react-like" class="anchor" aria-hidden="true" href="#react-like"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React-Like&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexdrone/Render"&gt;Render&lt;/a&gt; - Swift and UIKit a la React.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BendingSpoons/katana-swift"&gt;Katana&lt;/a&gt; - Swift apps a la React and Redux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mcudich/TemplateKit"&gt;TemplateKit&lt;/a&gt; - React-inspired framework for building component-based user interfaces in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/Komponents"&gt;Komponents &lt;g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png"&gt;üì¶&lt;/g-emoji&gt;&lt;/a&gt; - React-inspired UIKit Components.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/surfstudio/CoreEvents"&gt;CoreEvents&lt;/a&gt; - Simple library with C#-like events.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxDesiatov/Tokamak"&gt;Tokamak&lt;/a&gt; - React-like framework providing a declarative API for building native UI components with easy to use one-way data binding.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reflection" class="anchor" aria-hidden="true" href="#reflection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reflection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Zewo/Reflection"&gt;Reflection&lt;/a&gt; - Reflection provides an API for advanced reflection at runtime including dynamic construction of types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CharlinFeng/Reflect"&gt;Reflect&lt;/a&gt; - Reflection, Dict2Model, Model2Dict, Archive.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVReflection"&gt;EVReflection&lt;/a&gt; - Reflection based JSON encoding and decoding. Including support for NSDictionary, NSCoding, Printable, Hashable and Equatable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnlui/JSONNeverDie"&gt;JSONNeverDie&lt;/a&gt; - Auto reflection tool from JSON to Model, user friendly JSON encoder / decoder, aims to never die.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bradhilton/SwiftKVC"&gt;SwiftKVC&lt;/a&gt; - Key-Value Coding (KVC) for native Swift classes and structs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wickwirew/Runtime"&gt;Runtime&lt;/a&gt; - A Swift Runtime library for viewing type info, and the dynamic getting and setting of properties.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-regex" class="anchor" aria-hidden="true" href="#regex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Regex&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sharplet/Regex"&gt;Regex&lt;/a&gt; - A Swift ¬µframework providing an NSRegularExpression-backed Regex type.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kasei/SwiftRegex"&gt;SwiftRegex&lt;/a&gt; - Perl-like Regex =~ operator for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cezheng/PySwiftyRegex"&gt;PySwiftyRegex&lt;/a&gt; - Easily deal with Regex in Swift in a Pythonic way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crossroadlabs/Regex"&gt;Regex&lt;/a&gt; - Regular expressions for swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brynbellomy/Regex"&gt;Regex&lt;/a&gt; - Regex class for Swift. Wraps NSRegularExpression.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sdk" class="anchor" aria-hidden="true" href="#sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDK&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-official" class="anchor" aria-hidden="true" href="#official"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/ios-sdk"&gt;Spotify&lt;/a&gt; Spotify iOS SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/SpotifyLogin"&gt;SpotifyLogin&lt;/a&gt; Spotify SDK Login in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/facebook-ios-sdk"&gt;Facebook&lt;/a&gt; Facebook iOS SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/facebook-swift-sdk"&gt;Facebook Swift&lt;/a&gt; Integrate your iOS apps in Swift with Facebook Platform.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/analytics/devguides/collection/ios/v3/" rel="nofollow"&gt;Google Analytics&lt;/a&gt; Google Analytics SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/paypal/PayPal-iOS-SDK"&gt;Paypal iOS SDK&lt;/a&gt; The PayPal Mobile SDKs enable native apps to easily accept PayPal and credit card payments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pocket/Pocket-ObjC-SDK"&gt;Pocket&lt;/a&gt; SDK for saving stuff to Pocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tumblr/TMTumblrSDK"&gt;Tumblr&lt;/a&gt; Library for easily integrating Tumblr data into your iOS or macOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evernote/evernote-cloud-sdk-ios"&gt;Evernote&lt;/a&gt; Evernote SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/box/box-ios-sdk"&gt;Box&lt;/a&gt; iOS + macOS SDK for the Box API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OneDrive/onedrive-sdk-ios"&gt;OneDrive&lt;/a&gt; Live SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stripe/stripe-ios"&gt;Stripe&lt;/a&gt; Stripe bindings for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="#payments"&gt;Venmo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aws-amplify/aws-sdk-ios"&gt;AWS&lt;/a&gt; Amazon Web Services Mobile SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zendesk/zendesk_sdk_ios"&gt;Zendesk&lt;/a&gt; Zendesk Mobile SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/lp/developers" rel="nofollow"&gt;Dropbox&lt;/a&gt; SDKs for Drop-ins and Dropbox Core API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.fabric.io/apple/fabric/overview.html" rel="nofollow"&gt;Fabric by Twitter&lt;/a&gt; Fabric Twitter Kit for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ResearchKit/ResearchKit"&gt;ResearchKit&lt;/a&gt; ResearchKit is an open source software framework that makes it easy to create apps for medical research or for other research projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.goprimer.com/" rel="nofollow"&gt;Primer&lt;/a&gt; - Easy SDK for creating personalized landing screens, signup, and login flows on a visual editor with built in a/b/n testing and analytics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-storage-ios"&gt;Azure&lt;/a&gt; - Client library for accessing Azure Storage on an iOS device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileBits/onepassword-app-extension"&gt;1Password&lt;/a&gt; - 1Password Extension for iOS Apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carekit-apple/CareKit"&gt;CareKit&lt;/a&gt; - CareKit is an open source software framework for creating apps that help people better understand and manage their health. By Apple.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Shopify/mobile-buy-sdk-ios"&gt;Shopify&lt;/a&gt; - Shopify‚Äôs Mobile Buy SDK makes it simple to sell physical products inside your mobile app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pinterest/ios-pdk"&gt;Pinterest&lt;/a&gt; - Pinterest iOS SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaltura/playkit-ios"&gt;playkit-ios&lt;/a&gt; - PlayKit: Kaltura Player SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/algolia/algoliasearch-client-swift"&gt;algoliasearch-client-swift&lt;/a&gt; - Algolia Search API Client for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter-archive/twitter-kit-ios"&gt;twitter-kit-ios&lt;/a&gt; - Twitter Kit is a native SDK to include Twitter content inside mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/rides-ios-sdk"&gt;rides-ios-sdk&lt;/a&gt; - Uber Rides iOS SDK (beta).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-unofficial" class="anchor" aria-hidden="true" href="#unofficial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unofficial&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nst/STTwitter"&gt;STTwitter&lt;/a&gt; A stable, mature and comprehensive Objective-C library for Twitter REST API 1.1.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/natesymer/FHSTwitterEngine"&gt;FHSTwitterEngine&lt;/a&gt; Twitter API for Cocoa developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/heyalexchoi/Giphy-iOS"&gt;Giphy&lt;/a&gt; Giphy API client for iOS in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sachinkesiraju/UberKit"&gt;UberKit&lt;/a&gt; - A simple, easy-to-use Objective-C wrapper for the Uber API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shyambhat/InstagramKit"&gt;InstagramKit&lt;/a&gt; - Instagram iOS SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agilie/dribbble-ios-sdk"&gt;DribbbleSDK&lt;/a&gt; - Dribbble iOS SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lukhnos/objectiveflickr"&gt;objectiveflickr&lt;/a&gt; - ObjectiveFlickr, a Flickr API framework for Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pjebs/EasySocial"&gt;Easy Social&lt;/a&gt; - Twitter &amp;amp; Facebook Integration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Constantine-Fry/das-quadrat"&gt;das-quadrat&lt;/a&gt; - A Swift wrapper for Foursquare API. iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/darkcl/SocialLib"&gt;SocialLib&lt;/a&gt; - SocialLib handles sharing message to multiple social media.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ContinuousLearning/PokemonKit"&gt;PokemonKit&lt;/a&gt; - Pokeapi wrapper, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timonus/TJDropbox"&gt;TJDropbox&lt;/a&gt; - A Dropbox v2 client library written in Objective-C&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/github.swift"&gt;GitHub.swift&lt;/a&gt; - &lt;img class="emoji" title=":octocat:" alt=":octocat:" src="https://github.githubassets.com/images/icons/emoji/octocat.png" height="20" width="20" align="absmiddle"&gt; Unofficial GitHub API client in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CloudRail/cloudrail-si-ios-sdk"&gt;CloudRail SI&lt;/a&gt; - Abstraction layer / unified API for multiple API providers. Interfaces eg for Cloud Storage (Dropbox, Google, ...), Social Networks (Facebook, Twitter, ...) and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/96-problems/medium-sdk-swift"&gt;Medium SDK - Swift&lt;/a&gt; - Unofficial Medium API SDK in Swift with sample project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattdonnelly/Swifter"&gt;Swifter&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="bird" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f426.png"&gt;üê¶&lt;/g-emoji&gt; A Twitter framework for iOS &amp;amp; macOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvzig/SlackKit"&gt;SlackKit&lt;/a&gt; - a Slack client library for iOS and macOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingwilson/RandomUserSwift"&gt;RandomUserSwift&lt;/a&gt; - Swift Framework to Generate Random Users - An Unofficial SDK for randomuser.me.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pantuspavel/PPEventRegistryAPI/"&gt;PPEventRegistryAPI&lt;/a&gt; - Swift 3 Framework for Event Registry API (eventregistry.org).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/modo-studio/UnsplashKit"&gt;UnsplashKit&lt;/a&gt; - Swift client for Unsplash.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mike4aday/SwiftlySalesforce"&gt;Swiftly Salesforce&lt;/a&gt; - An easy-to-use framework for building iOS apps that integrate with Salesforce, using Swift and promises.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daltron/Spartan"&gt;Spartan&lt;/a&gt; - An Elegant Spotify Web API Library Written in Swift for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daltron/BigBoard"&gt;BigBoard&lt;/a&gt; - An Elegant Financial Markets Library Written in Swift that makes requests to Yahoo Finance API's under the hood.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saeid/BittrexApiKit"&gt;BittrexApiKit&lt;/a&gt; - Simple and complete Swift wrapper for Bittrex Exchange API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftyVK/SwiftyVK"&gt;SwiftyVK&lt;/a&gt; Library for easy interact with VK social network API written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sleepdefic1t/ARKKit"&gt;ARKKit&lt;/a&gt; - ARK Ecosystem Cryptocurrency API Framework for iOS &amp;amp; macOS, written purely in Swift 4.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnderGoig/SwiftInstagram"&gt;SwiftInstagram&lt;/a&gt; - Swift Client for Instagram API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Awalz/SwiftyArk"&gt;SwiftyArk&lt;/a&gt; - A simple, lightweight, fully-asynchronous cryptocurrency framework for the ARK Ecosystem.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CaptainYukinoshitaHachiman/PerfectSlackAPIClient"&gt;PerfectSlackAPIClient&lt;/a&gt; - A Slack API Client for the Perfect Server-Side Swift Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thecb4/MotherShip"&gt;Mothership&lt;/a&gt; - Tunes Connect Library inspired by FastLane.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rinov/SwiftFlyer"&gt;SwiftFlyer&lt;/a&gt; - An API wrapper for bitFlyer that supports all providing API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylebrowning/waterwheel.swift"&gt;waterwheel.swift&lt;/a&gt; - The Waterwheel Swift SDK provides classes to natively connect iOS, macOS, tvOS, and watchOS applications to Drupal 7 and 8.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sxg/ForecastIO"&gt;ForecastIO&lt;/a&gt; - A Swift library for the Forecast.io Dark Sky API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ethenyl/JamfKit"&gt;JamfKit&lt;/a&gt; - A JSS communication framework written in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/orta/cocoapods-keys"&gt;cocoapods-keys&lt;/a&gt; - A key value store for storing environment and application keys.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simple-machines/simple-touch"&gt;simple-touch&lt;/a&gt; - Very simple swift wrapper for Biometric Authentication Services (Touch ID) on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yankodimitrov/SwiftPasscodeLock"&gt;SwiftPasscodeLock&lt;/a&gt; - An iOS passcode lock with TouchID authentication written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-lifestyle/Smile-Lock"&gt;Smile-Lock&lt;/a&gt; - A library for make a beautiful Passcode Lock View.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dropbox/zxcvbn-ios"&gt;zxcvbn-ios&lt;/a&gt; - A realistic password strength estimator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Techprimate/TPObfuscatedString"&gt;TPObfuscatedString&lt;/a&gt; - Simple String obfuscation using core Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rolandleth/LTHPasscodeViewController"&gt;LTHPasscodeViewController&lt;/a&gt; - An iOS passcode lockscreen replica (from Settings), with TouchID and simple (variable length) / complex support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/karek314/iOS-App-Security-Class"&gt;iOS-App-Security-Class&lt;/a&gt; - Simple class to check if iOS app has been cracked, being debugged or enriched with custom dylib and as well detect jailbroken environment.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasilenkoigor/BiometricAuth"&gt;BiometricAuth&lt;/a&gt; - Simple framework for biometric authentication (via TouchID) in your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/siavashalipour/SAPinViewController"&gt;SAPinViewController&lt;/a&gt; - Simple and easy to use default iOS PIN screen. This simple library allows you to draw a fully customisable PIN screen same as the iOS default PIN view. My inspiration to create this library was form THPinViewController, however SAPinViewController is completely implemented in Swift. Also the main purpose of creating this library was to have simple, easy to use and fully customisable PIN screen.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timoliver/TOPasscodeViewController"&gt;TOPasscodeViewController&lt;/a&gt; - A modal passcode input and validation view controller for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rushisangani/BiometricAuthentication"&gt;BiometricAuthentication&lt;/a&gt; - Use Apple FaceID or TouchID authentication in your app using BiometricAuthentication.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kolesa-team/ios_pinCodeTextField"&gt;KKPinCodeTextField&lt;/a&gt; - A customizable verification code textField for phone verification codes, passwords etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/umbri/Vault"&gt;&lt;g-emoji class="g-emoji" alias="file_cabinet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5c4.png"&gt;üóÑ&lt;/g-emoji&gt; Vault&lt;/a&gt; - Simple and Secure container for passwords and other sensitive data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VirgilSecurity/virgil-sdk-pfs-x"&gt;Virgil SWIFT PFS SDK&lt;/a&gt; - An SDK that allows developers to add the Perfect Forward Secrecy (PFS) technologies to their digital solutions to protect previously intercepted traffic from being decrypted even if the main Private Key is compromised.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VirgilSecurity/virgil-sdk-x"&gt;Virgil Security Objective-C/Swift SDK&lt;/a&gt; - An SDK which allows developers to add full end-to-end security to their existing digital solutions to become HIPAA and GDPR compliant and more using Virgil API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-encryption" class="anchor" aria-hidden="true" href="#encryption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Encryption&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Gurpartap/AESCrypt-ObjC"&gt;AESCrypt-ObjC&lt;/a&gt; - A simple and opinionated AES encrypt / decrypt Objective-C class that just works.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iosdevzone/IDZSwiftCommonCrypto"&gt;IDZSwiftCommonCrypto&lt;/a&gt; - A wrapper for Apple's Common Crypto library written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Arcane"&gt;Arcane&lt;/a&gt; - Lightweight wrapper around CommonCrypto in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpurland/SwiftMD5"&gt;SwiftMD5&lt;/a&gt; - A pure Swift implementation of MD5.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/SwiftHash"&gt;SwiftHash&lt;/a&gt; - Hash in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jancassio/SweetHMAC"&gt;SweetHMAC&lt;/a&gt; - A tiny and easy to use Swift class to encrypt strings using HMAC algorithms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soyersoyer/SwCrypt"&gt;SwCrypt&lt;/a&gt; - RSA public/private key generation, RSA, AES encryption/decryption, RSA sign/verify in Swift with CommonCrypto in iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftP2P/SwiftSSL"&gt;SwiftSSL&lt;/a&gt; - An Elegant crypto toolkit in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TakeScoop/SwiftyRSA"&gt;SwiftyRSA&lt;/a&gt; - RSA public/private key encryption in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mikaoj/EnigmaKit"&gt;EnigmaKit&lt;/a&gt; - Enigma encryption in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cossacklabs/themis"&gt;Themis&lt;/a&gt; - High-level crypto library, providing basic asymmetric encryption, secure messaging with forward secrecy and secure data storage, supports iOS/macOS, Android and different server side platforms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pjebs/Obfuscator-iOS"&gt;Obfuscator-iOS&lt;/a&gt; - Secure your app by obfuscating all the hard-coded security-sensitive strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jedisct1/swift-sodium"&gt;swift-sodium&lt;/a&gt; - Safe and easy to use crypto for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzyzanowskim/CryptoSwift"&gt;CryptoSwift&lt;/a&gt; - Crypto related functions and helpers for Swift implemented in Swift programming language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgl0v/SCrypto"&gt;SCrypto&lt;/a&gt; - Elegant Swift interface to access the CommonCrypto routines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/SipHash"&gt;SipHash&lt;/a&gt; - Simple and secure hashing in Swift with the SipHash algorithm.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RNCryptor/RNCryptor"&gt;RNCryptor&lt;/a&gt; - CCCryptor (AES encryption) wrappers for iOS and Mac in Swift. -- For ObjC, see RNCryptor/RNCryptor-objc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ImKcat/CatCrypto"&gt;CatCrypto&lt;/a&gt; - An easy way for hashing and encryption.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trailofbits/SecureEnclaveCrypto"&gt;SecureEnclaveCrypto&lt;/a&gt; - Demonstration library for using the Secure Enclave on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/4taras4/RSASwiftGenerator"&gt;RSASwiftGenerator&lt;/a&gt; - Util for generation RSA keys on your client and save to keychain or cover into Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VirgilSecurity/virgil-crypto-x"&gt;Virgil Security Objective-C/Swift Crypto Library&lt;/a&gt; - A high-level cryptographic library that allows to perform all necessary operations for securely storing and transferring data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airsidemobile/JOSESwift"&gt;JOSESwift&lt;/a&gt; - A framework for the JOSE standards JWS, JWE, and JWK written in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-keychain" class="anchor" aria-hidden="true" href="#keychain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keychain&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/UICKeyChainStore"&gt;UICKeyChainStore&lt;/a&gt; - UICKeyChainStore is a simple wrapper for Keychain on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/Valet"&gt;Valet&lt;/a&gt; - Securely store data in the iOS or macOS Keychain without knowing a thing about how the Keychain works.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewpalmer/Locksmith"&gt;Locksmith&lt;/a&gt; - A powerful, protocol-oriented library for working with the keychain in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/KeychainAccess"&gt;KeychainAccess&lt;/a&gt; - Simple Swift wrapper for Keychain that works on iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Keychains"&gt;Keychains&lt;/a&gt; - Because you should care... about the security... of your shit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/granoff/Lockbox"&gt;Lockbox&lt;/a&gt; - Objective-C utility class for storing data securely in the key chain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soffes/SAMKeychain"&gt;SAMKeychain&lt;/a&gt; - Simple Objective-C wrapper for the keychain that works on Mac and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jrendel/SwiftKeychainWrapper"&gt;SwiftKeychainWrapper&lt;/a&gt; - A simple wrapper for the iOS Keychain to allow you to use it in a similar fashion to User Defaults.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andriyslyusar/SwiftyKeychainKit"&gt;SwiftyKeychainKit&lt;/a&gt; - Keychain wrapper with the benefits of static typing and convenient syntax, support for primitive types, Codable, NSCoding.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-server" class="anchor" aria-hidden="true" href="#server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Server&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Server side projects supporting coroutines, Linux, MacOS, iOS, Apache Modules, Async calls, libuv and more.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect"&gt;Perfect&lt;/a&gt; - Server-side Swift. The Perfect library, application server, connectors and example apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/httpswift/swifter"&gt;Swifter&lt;/a&gt; - Tiny http server engine written in Swift programming language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robbiehanson/CocoaHTTPServer"&gt;CocoaHTTPServer&lt;/a&gt; - A small, lightweight, embeddable HTTP server for macOS or iOS applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef-archive/Curassow"&gt;Curassow&lt;/a&gt; - Swift HTTP server using the pre-fork worker model.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zewo/Zewo"&gt;Zewo&lt;/a&gt; - Lightweight library for web server applications in Swift on macOS and Linux powered by coroutines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor/vapor"&gt;Vapor&lt;/a&gt; - Elegant web framework for Swift that works on iOS, macOS, and Ubuntu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/takebayashi/swiftra"&gt;swiftra&lt;/a&gt; - Sinatra-like DSL for developing web apps in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elliottminns/blackfire"&gt;blackfire&lt;/a&gt; - A fast HTTP web server based on Node.js and Express written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huytd/swift-http"&gt;swift-http&lt;/a&gt; - HTTP Implementation for Swift on Linux and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yoseob/Trevi"&gt;Trevi&lt;/a&gt; - libuv base Swift web HTTP server framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crossroadlabs/Express"&gt;Express&lt;/a&gt; - Swift Express is a simple, yet unopinionated web application server written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/izqui/Taylor"&gt;Taylor&lt;/a&gt; - A lightweight library for writing HTTP web servers with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef-archive/Frank"&gt;Frank&lt;/a&gt; - Frank is a DSL for quickly writing web applications in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/Kitura"&gt;Kitura&lt;/a&gt; - A Swift Web Framework and HTTP Server.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sauliusgrigaitis/Swifton"&gt;Swifton&lt;/a&gt; - A Ruby on Rails inspired Web Framework for Swift that runs on Linux and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/Dynamo"&gt;Dynamo&lt;/a&gt; - High Performance (nearly)100% Swift Web server supporting dynamic content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor/redis"&gt;Redis&lt;/a&gt; - Pure-Swift Redis client implemented from the original protocol spec. macOS + Linux compatible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colemancda/NetworkObjects"&gt;NetworkObjects&lt;/a&gt; - Swift backend / server framework (Pure Swift, Supports Linux).&lt;/li&gt;
&lt;li&gt;&lt;a href="http://noze.io" rel="nofollow"&gt;Noze.io&lt;/a&gt; - Evented I/O streams a.k.a. Node.js for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skylab-inc/Lightning"&gt;Lightning&lt;/a&gt; - A Swift Multiplatform Web and Networking Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twostraws/swiftgd"&gt;SwiftGD&lt;/a&gt; - A simple Swift wrapper for libgd.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BrettRToomey/Jobs"&gt;Jobs&lt;/a&gt; - A job system for Swift backends.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ApacheExpress/ApacheExpress"&gt;ApacheExpress&lt;/a&gt; - Write Apache Modules in Swift!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisspol/GCDWebServer"&gt;GCDWebServer&lt;/a&gt; - Lightweight GCD based HTTP server for macOS &amp;amp; iOS (includes web based uploader &amp;amp; WebDAV server).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/envoy/Embassy"&gt;Embassy&lt;/a&gt; - Super lightweight async HTTP server library in pure Swift runs in iOS / MacOS / Linux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amzn/smoke-framework"&gt;smoke-framework&lt;/a&gt; - A light-weight server-side service framework written in the Swift programming language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-text" class="anchor" aria-hidden="true" href="#text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Text&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/twitter-text"&gt;Twitter Text Obj&lt;/a&gt; - An Objective-C implementation of Twitter's text processing library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jverkoey/nimbus"&gt;Nimbus&lt;/a&gt; - Nimbus is a toolkit for experienced iOS software designers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/diy/nsstringemojize"&gt;NSStringEmojize&lt;/a&gt; - A category on NSString to convert Emoji Cheat Sheet codes to their equivalent Unicode characters.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mdiep/MMMarkdown"&gt;MMMarkdown&lt;/a&gt; - An Objective-C static library for converting Markdown to HTML.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cocoanetics/DTCoreText"&gt;DTCoreText&lt;/a&gt; - Methods to allow using HTML code with CoreText.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cocoanetics/DTRichTextEditor"&gt;DTRichTextEditor&lt;/a&gt; - A rich-text editor for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neerajbaid/NBEmojiSearchView"&gt;NBEmojiSearchView&lt;/a&gt; - A searchable emoji dropdown view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joshualat/Pluralize.swift"&gt;Pluralize.swift&lt;/a&gt; - Great Swift String Pluralize Extension.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cjwirth/RichEditorView"&gt;RichEditorView&lt;/a&gt; - RichEditorView is a simple, modular, drop-in UIView subclass for Rich Text Editing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danthorpe/Money"&gt;Money&lt;/a&gt; - Swift value types for working with money &amp;amp; currency.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/PhoneNumberKit"&gt;PhoneNumberKit&lt;/a&gt; - A Swift framework for parsing, formatting and validating international phone numbers. Inspired by Google's libphonenumber.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYText"&gt;YYText&lt;/a&gt; - Powerful text framework for iOS to display and edit rich text.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Format"&gt;Format&lt;/a&gt; - A Swift Formatter Kit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zats/Tribute"&gt;Tribute&lt;/a&gt; - Programmatic creation of NSAttributedString doesn't have to be a pain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dasmer/EmojiKit"&gt;EmojiKit&lt;/a&gt; - Effortless emoji-querying in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Roman"&gt;Roman&lt;/a&gt; - Seamless Roman numeral conversion in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nnhubbard/ZSSRichTextEditor"&gt;ZSSRichTextEditor&lt;/a&gt; - A beautiful rich text WYSIWYG editor for iOS with a syntax highlighted source view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cee/pangu.objective-c"&gt;pangu.Objective-C&lt;/a&gt; - Paranoid text spacing in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amayne/SwiftString"&gt;SwiftString&lt;/a&gt; - A comprehensive, lightweight string extension for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/macteo/Marklight"&gt;Marklight&lt;/a&gt; - Markdown syntax highlighter for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/indragiek/MarkdownTextView"&gt;MarkdownTextView&lt;/a&gt; - Rich Markdown editing control for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/TextAttributes"&gt;TextAttributes&lt;/a&gt; - An easier way to compose attributed strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fdzsergio/Reductio"&gt;Reductio&lt;/a&gt; - Automatic summarizer text in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftStudies/SmarkDown"&gt;SmarkDown&lt;/a&gt; - A Pure Swift implementation of the markdown mark-up language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SimonFairbairn/SwiftyMarkdown"&gt;SwiftyMarkdown&lt;/a&gt; - Converts Markdown files and strings into NSAttributedString.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szweier/SZMentions"&gt;SZMentions&lt;/a&gt; - Library to help handle mentions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szweier/SZMentionsSwift"&gt;SZMentionsSwift&lt;/a&gt; - Library to help handle mentions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/henrinormak/Heimdall"&gt;Heimdall&lt;/a&gt; - Heimdall is a wrapper around the Security framework for simple encryption/decryption operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pham/NoOptionalInterpolation"&gt;NoOptionalInterpolation&lt;/a&gt; - Get rid of "Optional(...)" and "nil" in string interpolation. Easy pluralization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Smile"&gt;Smile&lt;/a&gt; Emoji in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/iso8601"&gt;ISO8601&lt;/a&gt; Super lightweight ISO8601 Date Formatter in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ekhoo/Translucid"&gt;Translucid&lt;/a&gt; - Lightweight library to set an Image as text background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/FormatterKit"&gt;FormatterKit&lt;/a&gt; - &lt;code&gt;stringWithFormat:&lt;/code&gt; for the sophisticated hacker set.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rightpoint/BonMot"&gt;BonMot&lt;/a&gt; - Beautiful, easy attributed strings in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gkaimakas/SwiftValidators"&gt;SwiftValidators&lt;/a&gt; - String validation for iOS developed in Swift. Inspired by &lt;a href="https://www.npmjs.com/package/validator" rel="nofollow"&gt;validator.js&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kazuhiro4949/StringStylizer"&gt;StringStylizer&lt;/a&gt; - Type strict builder class for NSAttributedString.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eddiekaiger/SwiftyAttributes"&gt;SwiftyAttributes&lt;/a&gt; - Swift extensions that make it a breeze to work with attributed strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bmoliveira/MarkdownKit"&gt;MarkdownKit&lt;/a&gt; - A simple and customizable Markdown Parser for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/indragiek/CocoaMarkdown"&gt;CocoaMarkdown&lt;/a&gt; - Markdown parsing and rendering for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruddfawcett/Notepad"&gt;Notepad&lt;/a&gt; - A fully themeable markdown editor with live syntax highlighting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krizhanovskii/KKStringValidator"&gt;KKStringValidator&lt;/a&gt; - Fast and simple string validation for iOS. With UITextField extension.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cosmo/ISO8859"&gt;ISO8859&lt;/a&gt; - Convert ISO8859 1-16 Encoded Text to String in Swift. Supports iOS, tvOS, watchOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xoudini/emojica"&gt;Emojica&lt;/a&gt; - Replace standard emoji in strings with a custom emoji set, such as &lt;a href="https://github.com/twitter/twemoji"&gt;Twemoji&lt;/a&gt; or &lt;a href="https://github.com/joypixels/emojione"&gt;EmojiOne&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/SwiftRichString"&gt;SwiftRichString&lt;/a&gt; - Elegant &amp;amp; Painless Attributed Strings Management Library in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iziz/libPhoneNumber-iOS"&gt;libPhoneNumber-iOS&lt;/a&gt; - iOS port from libphonenumber (Google's phone number handling library).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/AttributedTextView"&gt;AttributedTextView&lt;/a&gt; - Easiest way to create an attributed UITextView with support for multiple links (including hashtags and mentions).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimpiax/StyleDecorator"&gt;StyleDecorator&lt;/a&gt; - Design string simply by linking attributes to needed parts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mathewsanders/Mustard"&gt;Mustard&lt;/a&gt; - Mustard is a Swift library for tokenizing strings when splitting by whitespace doesn't cut it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RedMadRobot/input-mask-ios"&gt;Input Mask&lt;/a&gt; - Pattern-based user input formatter, parser and validator for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/Attributed"&gt;Attributed&lt;/a&gt; - Modern Swift ¬µframework for attributed strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/psharanda/Atributika"&gt;Atributika&lt;/a&gt; - Easily build NSAttributedString by detecting and styling HTML-like tags, hashtags, mentions, RegExp or NSDataDetector patterns.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Guitar"&gt;Guitar&lt;/a&gt; - A Cross-Platform String Library Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaiomedau/realtime-currency-formatter-objc"&gt;RealTimeCurrencyFormatter&lt;/a&gt; - An ObjC international currency formatting utility.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/Down"&gt;Down&lt;/a&gt; - Blazing fast Markdown rendering in Swift, built upon cmark.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/m2mobi/Marky-Mark"&gt;Marky Mark&lt;/a&gt; - Highly customizable Markdown parsing and native rendering in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitaoouchi/MarkdownView"&gt;MarkdownView&lt;/a&gt; - Markdown View for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/Highlighter"&gt;Highlighter&lt;/a&gt; - Highlight whatever you want! Highlighter will magically find UI objects such as UILabel, UITextView, UITexTfield, UIButton in your UITableViewCell or other Class.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/Sprinter"&gt;Sprinter&lt;/a&gt; - A library for formatting strings on iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raspu/Highlightr"&gt;Highlightr&lt;/a&gt; - An iOS &amp;amp; macOS syntax highlighter, supports 176 languages and comes with 79 styles.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krisk/fuse-swift"&gt;fuse-swift&lt;/a&gt; - A lightweight fuzzy-search library, with zero dependencies.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EFPrefix/EFMarkdown"&gt;EFMarkdown&lt;/a&gt; - A lightweight Markdown library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jkalash/croc"&gt;Croc&lt;/a&gt; - A lightweight Swift library for Emoji parsing and querying.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-font" class="anchor" aria-hidden="true" href="#font"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Font&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/FontBlaster"&gt;FontBlaster&lt;/a&gt; - Programmatically load custom fonts into your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kitasuke/GoogleMaterialIconFont"&gt;GoogleMaterialIconFont&lt;/a&gt; - Google Material Design Icons for Swift and ObjC project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexdrone/ios-fontawesome"&gt;ios-fontawesome&lt;/a&gt; - NSString+FontAwesome.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thii/FontAwesome.swift"&gt;FontAwesome.swift&lt;/a&gt; - Use FontAwesome in your Swift projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morizotter/SwiftFontName"&gt;SwiftFontName&lt;/a&gt; - OS font complements library. Localized font supported.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0x73/SwiftIconFont"&gt;SwiftIconFont&lt;/a&gt; - Icons fonts for iOS (FontAwesome, Iconic, Ionicon, Octicon, Themify, MapIcon, MaterialIcon).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PrideChung/FontAwesomeKit"&gt;FontAwesomeKit&lt;/a&gt; - Icon font library for iOS. Currently supports Font-Awesome, Foundation icons, Zocial, and ionicons.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/home-assistant/Iconic"&gt;Iconic&lt;/a&gt; - Auto-generated icon font library for iOS, watchOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dekatotoro/GoogleMaterialDesignIcons"&gt;GoogleMaterialDesignIcons&lt;/a&gt; - Google Material Design Icons Font for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitaoouchi/OcticonsKit"&gt;OcticonsKit&lt;/a&gt; - Use Octicons as UIImage / UIFont in your projects with Swifty manners.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitaoouchi/IoniconsKit"&gt;IoniconsKit&lt;/a&gt; - Use Ionicons as UIImage / UIFont in your projects with Swifty manners.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qiuncheng/FontAwesomeKit.Swift"&gt;FontAwesomeKit.Swift&lt;/a&gt; - A better choice for iOS Developer to use FontAwesome Icon.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/UIFontComplete"&gt;UIFontComplete&lt;/a&gt; - Font management (System &amp;amp; Custom) for iOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/UglyTroLL/Swicon"&gt;Swicon&lt;/a&gt; - Use 1600+ icons (and more!) from FontAwesome and Google Material Icons in your swift/iOS project in an easy and space-efficient way!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ranesr/SwiftIcons"&gt;SwiftIcons&lt;/a&gt; - A library for using different font icons: dripicons, emoji, font awesome, icofont, ionicons, linear icons, map icons, material icons, open iconic, state, weather. It supports UIImage, UIImageView, UILabel, UIButton, UISegmentedControl, UITabBarItem, UISlider, UIBarButtonItem, UIViewController, UITextfield, UIStepper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Vaberer/Font-Awesome-Swift"&gt;Font-Awesome-Swift&lt;/a&gt; - Font Awesome swift library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/JQSwiftIcon"&gt;JQSwiftIcon&lt;/a&gt; - Icon Fonts on iOS using string interpolation written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Flight-School/Money"&gt;Money&lt;/a&gt; - A precise, type-safe representation of a monetary amount in a given currency.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-tdd--bdd" class="anchor" aria-hidden="true" href="#tdd--bdd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TDD / BDD&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kiwi-bdd/Kiwi"&gt;Kiwi&lt;/a&gt; - A behavior-driven development library for iOS development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/specta/specta"&gt;Specta&lt;/a&gt; - A light-weight TDD / BDD framework for Objective-C &amp;amp; Cocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Quick/Quick"&gt;Quick&lt;/a&gt; - A behavior-driven development framework for Swift and Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonreid/XcodeCoverage"&gt;XcodeCoverage&lt;/a&gt; - Code coverage for Xcode projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AliSoftware/OHHTTPStubs"&gt;OHHTTPStubs&lt;/a&gt; - Stub your network requests easily! Test your apps with fake network data and custom response time, response code and headers!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Skyscanner/Dixie"&gt;Dixie&lt;/a&gt; - Dixie is an open source Objective-C testing framework for altering object behaviours.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gh-unit/gh-unit"&gt;gh-unit&lt;/a&gt; - Test Framework for Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Quick/Nimble"&gt;Nimble&lt;/a&gt; - A Matcher Framework for Swift and Objective-C&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/railsware/Sleipnir"&gt;Sleipnir&lt;/a&gt; - BDD-style framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/SwiftCheck"&gt;SwiftCheck&lt;/a&gt; - QuickCheck for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Quick/Spry"&gt;Spry&lt;/a&gt; - A Mac and iOS Playgrounds Unit Testing library based on Nimble.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-corelibs-xctest"&gt;swift-corelibs-xctest&lt;/a&gt; - The XCTest Project, A Swift core library for providing unit test support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WhiskerzAB/PlaygroundTDD"&gt;PlaygroundTDD&lt;/a&gt; - Small library to easily run your tests directly within a Playground.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ab-testing" class="anchor" aria-hidden="true" href="#ab-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A/B Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KeepSafe/Switchboard"&gt;Switchboard&lt;/a&gt; - Switchboard - easy and super light weight A/B testing for your mobile iPhone or android app. This mobile A/B testing framework allows you with minimal servers to run large amounts of mobile users.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/SkyLab"&gt;SkyLab&lt;/a&gt; - Multivariate &amp;amp; A/B Testing for iOS and Mac.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mindsnacks/MSActiveConfig"&gt;MSActiveConfig&lt;/a&gt; - Remote configuration and A/B Testing framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mp/ABKit"&gt;ABKit&lt;/a&gt; - AB testing framework for iOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ui-testing" class="anchor" aria-hidden="true" href="#ui-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://appium.io/" rel="nofollow"&gt;appium&lt;/a&gt; - Appium is an open source test automation framework for use with native and hybrid mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serhatbolsu/robotframework-appiumlibrary"&gt;robotframework-appiumlibrary&lt;/a&gt; - AppiumLibrary is an appium testing library for RobotFramework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cucumber.io/" rel="nofollow"&gt;Cucumber&lt;/a&gt; - Behavior driver development for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kif-framework/KIF"&gt;Kif&lt;/a&gt; - An iOS Functional Testing Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/inkling/Subliminal"&gt;Subliminal&lt;/a&gt; - An understated approach to iOS integration testing.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ios-driver.github.io/ios-driver/index.html" rel="nofollow"&gt;ios-driver&lt;/a&gt; - Test any iOS native, hybrid, or mobile web application using Selenium / WebDriver.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/Remote"&gt;Remote&lt;/a&gt; - Control your iPhone from inside Xcode for end-to-end testing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linkedin/LayoutTest-iOS"&gt;LayoutTest-iOS&lt;/a&gt; - Write unit tests which test the layout of a view in multiple configurations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/EarlGrey"&gt;EarlGrey&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="tea" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f375.png"&gt;üçµ&lt;/g-emoji&gt; iOS UI Automation Test Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joemasilotti/UI-Testing-Cheat-Sheet"&gt;UI Testing Cheat Sheet&lt;/a&gt; - How do I test this with UI Testing?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linkedin/bluepill"&gt;Bluepill&lt;/a&gt; - Bluepill is a reliable iOS testing tool that runs UI tests using multiple simulators on a single machine.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flawlessapp.io/" rel="nofollow"&gt;Flawless App&lt;/a&gt; - tool for visual quality check of mobile app in a real-time. It compares initial design with the actual implementation right inside iOS simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morizotter/TouchVisualizer"&gt;TouchVisualizer&lt;/a&gt; - Lightweight touch visualization library in Swift. A single line of code and visualize your touches!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/UITestHelper"&gt;UITestHelper&lt;/a&gt; - UITest helper library for creating readable and maintainable tests.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nalexn/ViewInspector"&gt;ViewInspector&lt;/a&gt; - Runtime inspection and unit testing of SwiftUI views&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-testing" class="anchor" aria-hidden="true" href="#other-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Palleas/NaughtyKeyboard"&gt;NaughtyKeyboard&lt;/a&gt; - The Big List of Naughty Strings is a list of strings which have a high probability of causing issues when used as user-input data. This is a keyboard to help you test your app from your iOS device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/Fakery"&gt;Fakery&lt;/a&gt; - Swift fake data generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/DVR"&gt;DVR&lt;/a&gt; - Network testing for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Brightify/Cuckoo"&gt;Cuckoo&lt;/a&gt; - First boilerplate-free mocking framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Velhotes/Vinyl"&gt;Vinyl&lt;/a&gt; - Network testing √† la VCR in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sabirvirtuoso/Mockit"&gt;Mockit&lt;/a&gt; - A simple mocking framework for Swift, inspired by the famous Mockito for Java.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxsokolov/Cribble"&gt;Cribble&lt;/a&gt; - Swifty tool for visual testing iPhone and iPad apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashfurrow/second_curtain"&gt;second_curtain&lt;/a&gt; - Upload failing iOS snapshot tests cases to S3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane-community/trainer"&gt;trainer&lt;/a&gt; - Convert xcodebuild plist files to JUnit reports.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/buildasaurs/Buildasaur"&gt;Buildasaur&lt;/a&gt; - Automatic testing of your Pull Requests on GitHub and BitBucket using Xcode Server. Keep your team productive and safe. Get up and running in minutes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devlucky/Kakapo"&gt;Kakapo&lt;/a&gt; - Dynamically Mock server behaviors and responses in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bizz84/AcceptanceMark"&gt;AcceptanceMark&lt;/a&gt; Tool to auto-generate Xcode tests classes from Markdown tables.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metova/MetovaTestKit"&gt;MetovaTestKit&lt;/a&gt; - A collection of testing utilities to turn crashing test suites into failing test suites.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kuniwak/MirrorDiffKit"&gt;MirrorDiffKit&lt;/a&gt; - Pretty diff between any structs or classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tooploox/SnappyTestCase"&gt;SnappyTestCase&lt;/a&gt; - iOS Simulator type agnostic snapshot testing, built on top of the FBSnapshotTestCase.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shindyu/XCTestExtensions"&gt;XCTestExtensions&lt;/a&gt; - XCTestExtensions is a Swift extension that provides convenient assertions for writing Unit Test.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ocmock.org" rel="nofollow"&gt;OCMock&lt;/a&gt; - Mock objects for Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Mockingjay"&gt;Mockingjay&lt;/a&gt; - An elegant library for stubbing HTTP requests with ease in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lickability/PinpointKit"&gt;PinpointKit&lt;/a&gt; - Let your testers and users send feedback with annotated screenshots and logs using a simple gesture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/ios-snapshot-test-case"&gt;iOS Snapshot Test Case&lt;/a&gt; ‚Äî Snapshot test your UIViews and CALayers on iOS and tvOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-ui" class="anchor" aria-hidden="true" href="#ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Grouper/FlatUIKit"&gt;FlatUIKit&lt;/a&gt; - A collection of awesome flat UI components for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/erichoracek/Motif"&gt;Motif&lt;/a&gt; - A lightweight and customizable JSON stylesheet framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TextureGroup/Texture"&gt;Texture&lt;/a&gt; - Smooth asynchronous user interfaces for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skywinder/GaugeKit"&gt;GaugeKit&lt;/a&gt; - Customizable gauges. Easy reproduce Apple's style gauges.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/SAHistoryNavigationViewController"&gt;SAHistoryNavigationViewController&lt;/a&gt; - SAHistoryNavigationViewController realizes iOS task manager like UI in UINavigationContoller,3D Touch Compatible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/iCarousel"&gt;iCarousel&lt;/a&gt; - A simple, highly customisable, data-driven 3D carousel for iOS and Mac OS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devinross/tapkulibrary"&gt;tapkulibrary&lt;/a&gt; - tap + haiku = tapku, a well crafted open source iOS framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/HorizontalDial"&gt;HorizontalDial&lt;/a&gt; - A horizontal scroll dial like Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://componentkit.org/" rel="nofollow"&gt;ComponentKit&lt;/a&gt; - A React-Inspired View Framework for iOS, by Facebook.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cwRichardKim/RKNotificationHub"&gt;RKNotificationHub&lt;/a&gt; - Make any UIView a full fledged notification center.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hughbe/phone-number-picker"&gt;phone-number-picker&lt;/a&gt; - A simple and easy to use view controller enabling you to enter a phone number with a country code similar to WhatsApp written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mtl/EXTView"&gt;EXTView&lt;/a&gt; - Extended UIView for Interface Builder by using IB_DESIGNABLE and IBInspectable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boris-Em/BEMCheckBox#sample-app"&gt;BEMCheckBox&lt;/a&gt; - Tasteful Checkbox for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DroidsOnRoids/MPParallaxView"&gt;MPParallaxView&lt;/a&gt; - Apple TV Parallax effect in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/Splitflap"&gt;Splitflap&lt;/a&gt; - A simple split-flap display for your Swift applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/EZSwipeController"&gt;EZSwipeController&lt;/a&gt; - UIPageViewController like Snapchat/Tinder/iOS Main Pages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devinross/curry"&gt;Curry&lt;/a&gt; - Curry is a framework built to enhance and compliment Foundation and UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Pages"&gt;Pages&lt;/a&gt; - UIPageViewController made simple.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Karumi/BothamUI"&gt;BothamUI&lt;/a&gt; - Model View Presenter Framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/collinhundley/APCustomBlurView"&gt;APCustomBlurView&lt;/a&gt; - A subclass of UIVisualEffectView with customizable blur radius.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antiguab/BAFluidView"&gt;BAFluidView&lt;/a&gt; - UIView that simulates a 2D view of a fluid in motion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wongzigii/WZDraggableSwitchHeaderView"&gt;WZDraggableSwitchHeaderView&lt;/a&gt; - Showing status for switching between viewControllers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SergioChan/SCTrelloNavigation"&gt;SCTrelloNavigation&lt;/a&gt; - An iOS native implementation of a Trello Animated Navagation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Spots"&gt;Spots&lt;/a&gt; - Spots is a view controller framework that makes your setup and future development blazingly fast.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alterplay/APAddressBook"&gt;APAddressBook&lt;/a&gt; - Easy access to iOS address book.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azuritul/AZExpandableIconListView"&gt;AZExpandableIconListView&lt;/a&gt; - An expandable/collapsible view component written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thinkclay/FlourishUI"&gt;FlourishUI&lt;/a&gt; - A highly configurable and out-of-the-box-pretty UI library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/navigation-stack"&gt;Navigation Stack&lt;/a&gt; - Navigation Stack is a stack-modeled navigation controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/UIView-draggable"&gt;UIView-draggable&lt;/a&gt; - UIView category that adds dragging capabilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/PeekPop"&gt;PeekPop&lt;/a&gt; - Backwards-compatible Peek and Pop.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ipraba/EPSignature"&gt;EPSignature&lt;/a&gt; - Signature component for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nevyn/CoreDragon"&gt;CoreDragon&lt;/a&gt;  - Stop using context menus. Drag and drop instead, even between apps!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVFaceTracker"&gt;EVFaceTracker&lt;/a&gt; - Calculate the distance and angle of your device with regards to your face.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/Fashion"&gt;Fashion&lt;/a&gt; - Fashion accessories and beauty tools to share and reuse UI styles in a Swifty way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wangshengjia/LeeGo"&gt;LeeGo&lt;/a&gt; - Declarative, configurable &amp;amp; highly reusable UI development as making Lego bricks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/manuelescrig/MEVHorizontalContacts"&gt;MEVHorizontalContacts&lt;/a&gt; - An iOS UICollectionViewLayout subclass to show a list of contacts with configurable expandable menu items.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RamonGilabert/Ripple"&gt;Ripple&lt;/a&gt; - Remember there's no such thing as a small act of kindness. Every act creates a ripple with no logical end.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kronik/ScalePicker"&gt;ScalePicker&lt;/a&gt; - Generic scale and a handy float-value picker for any iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/VisualEffectView"&gt;VisualEffectView&lt;/a&gt; - UIVisualEffectView subclass with tint color.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PureSwift/Cacao"&gt;Cacao&lt;/a&gt; - Pure Swift Cross-platform UIKit (Cocoa Touch) implementation (Supports Linux).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sahandnayebaziz/StateView"&gt;StateView&lt;/a&gt; - Views that automatically update themselves.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/calimarkus/JDFlipNumberView"&gt;JDFlipNumberView&lt;/a&gt; - Representing analog flip numbers like airport/trainstation displays.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/instant-solutions/ISTimeline"&gt;ISTimeline&lt;/a&gt; - Simple timeline view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/atljeremy/JFCardSelectionViewController"&gt;JFCardSelectionViewController&lt;/a&gt; - A fancy collection style view controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agordeev/DCKit"&gt;DCKit&lt;/a&gt; - Set of iOS controls, which have useful IBInspectable properties. Written on Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Guzlan/BackgroundVideoiOS"&gt;BackgroundVideoiOS&lt;/a&gt; - A swift and objective-C object that lets you add a background video to iOS views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Draveness/NightNight"&gt;NightNight&lt;/a&gt; - Elegant way to integrate night mode to swift projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wxxsw/SwiftTheme"&gt;SwiftTheme&lt;/a&gt; - Powerful theme/skin manager for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/forkingdog/FDStackView"&gt;FDStackView&lt;/a&gt; - Use UIStackView directly in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/YahooArchive/YangMingShan"&gt;YangMingShan&lt;/a&gt; - YangMingShan is a collection of iOS UI components that we created while building Yahoo apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tombenner/nui"&gt;nui&lt;/a&gt; - Style iOS apps with a stylesheet, similar to CSS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redbeard.io/" rel="nofollow"&gt;RedBeard&lt;/a&gt; - It's a complete framework that takes away much of the pain of getting a beautiful, powerful iOS App crafted.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Material"&gt;Material&lt;/a&gt; - Material is an animation and graphics framework that allows developers to easily create beautiful applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qmathe/DistancePicker"&gt;DistancePicker&lt;/a&gt; - Custom control to select a distance with a pan gesture, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nsomar/OAStackView"&gt;OAStackView&lt;/a&gt; - OAStackView tries to port back the stackview to iOS 7+. OAStackView aims at replicating all the features in UIStackView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/146BC/StyleKit"&gt;StyleKit&lt;/a&gt; - StyleKit is a microframework that enables you to style your applications using a simple JSON file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hirohisa/PageController"&gt;PageController&lt;/a&gt; - Infinite paging controller, scrolling through contents and title bar scrolls with a delay.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mariohahn/StatusProvider"&gt;StatusProvider&lt;/a&gt; - Protocol to handle initial Loadings, Empty Views and Error Handling in a ViewController &amp;amp; views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scamps88/ASBubbleDrag"&gt;ASBubbleDrag&lt;/a&gt; - round icon drag control (made in swift) dock style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bridger/StackLayout"&gt;StackLayout&lt;/a&gt; - An alternative to UIStackView for common Auto Layout patterns.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boris-Em/NightView"&gt;NightView&lt;/a&gt; - Dazzling Nights on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingwilson/SwiftVideoBackground"&gt;SwiftVideoBackground&lt;/a&gt; - Easy to Use UIView subclass for implementing a video background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mrigdon/MRArticleViewController"&gt;MRArticleViewController&lt;/a&gt; - Easily create UIViewControllers for news articles similar to those in the News app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OrRon/ConfettiView"&gt;ConfettiView&lt;/a&gt; - Confetti View lets you create a magnificent confetti view in your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BohdanOrlov/BouncyPageViewController"&gt;BouncyPageViewController&lt;/a&gt; - Page view controller with bounce effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rolandleth/LTHRadioButton"&gt;LTHRadioButton&lt;/a&gt; - A radio button with a pretty fill animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/Macaw-Examples"&gt;Macaw-Examples&lt;/a&gt; - Various usages of the Macaw library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/Reactions"&gt;Reactions&lt;/a&gt; - Fully customizable Facebook reactions control.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dhirajjadhao/Newly"&gt;Newly&lt;/a&gt; - Newly is a drop in solution to add Twitter/Facebook/Linkedin-style new updates/tweets/posts available button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jobandtalent/CardStackController"&gt;CardStackController&lt;/a&gt; - iOS custom controller used in Jobandtalent app to present new view controllers as cards.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/material-components/material-components-ios"&gt;Material Components&lt;/a&gt; - Google developed UI components that help developers execute Material Design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/farshidce/RKMultiUnitRuler/"&gt;RKMultiUnitRuler&lt;/a&gt; - Simple customizable ruler control that supports multiple units.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mukeshthawani/FAQView"&gt;FAQView&lt;/a&gt; - An easy to use FAQ view for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lucamozza/LMArticleViewController"&gt;LMArticleViewController&lt;/a&gt; - UIViewController subclass to beautifully present news articles and blog posts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WenchaoD/FSPagerView"&gt;FSPagerView&lt;/a&gt; - FSPagerView is an elegant Screen Slide Library. It is extremely helpful for making Banner„ÄÅProduct Show„ÄÅWelcome/Guide Pages„ÄÅScreen/ViewController Sliders.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/louisdh/panelkit"&gt;PanelKit&lt;/a&gt; - A UI framework that enables panels on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/elongation-preview"&gt;ElongationPreview&lt;/a&gt; - ElongationPreview is an elegant push-pop style view controller with 3D-Touch support and gestures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uias/Pageboy"&gt;Pageboy&lt;/a&gt; - A simple, highly informative page view controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iGenius-Srl/IGColorPicker"&gt;IGColorPicker&lt;/a&gt; - A customizable color picker for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khuong291/KPActionSheet"&gt;KPActionSheet&lt;/a&gt; -  A replacement of default action sheet, but has very simple usage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/D-32/SegmentedProgressBar"&gt;SegmentedProgressBar&lt;/a&gt; - Snapchat / Instagram Stories style animated indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Magnetic"&gt;Magnetic&lt;/a&gt; - SpriteKit Floating Bubble Picker (inspired by Apple Music).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GlebRadchenko/AmazingBubbles"&gt;AmazingBubbles&lt;/a&gt; - Apple Music like Bubble Picker using Dynamic Animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Haptica"&gt;Haptica&lt;/a&gt; - Easy Haptic Feedback Generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saeid/GDCheckbox"&gt;GDCheckbox&lt;/a&gt; - An easy to use custom checkbox/radio button component for iOS, with support of IBDesign Inspector.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Howardw3/HamsterUIKit"&gt;HamsterUIKit&lt;/a&gt; - A simple and elegant UIKit(Chart) for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/AZEmptyState"&gt;AZEmptyState&lt;/a&gt; - A UIControl subclass that makes it easy to create empty states.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jegumhon/URWeatherView"&gt;URWeatherView&lt;/a&gt; - Show the weather effects onto view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linhcn/LCUIComponents"&gt;LCUIComponents&lt;/a&gt; - A framework supports creating transient views on top of other content onscreen such as popover with a data list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Sajjon/ViewComposer"&gt;ViewComposer&lt;/a&gt; - &lt;code&gt;let lbl: UILabel = [.text("Hello"), .textColor(.red)]&lt;/code&gt; - Create views using array literal of enum expressing view attributes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/BatteryView"&gt;BatteryView&lt;/a&gt; - Simple battery shaped UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PierrePerrin/ShadowView"&gt;ShadowView&lt;/a&gt; - Make shadows management easy on UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/52inc/Pulley"&gt;Pulley&lt;/a&gt; - A library to imitate the iOS 10 Maps UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/n8iveapps/N8iveKit"&gt;N8iveKit&lt;/a&gt; - A set of frameworks making iOS development more fun.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wordlessj/Panda"&gt;Panda&lt;/a&gt; - Create view hierarchies declaratively.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HarshilShah/NotchKit"&gt;NotchKit&lt;/a&gt; - A simple way to hide the notch on the iPhone X&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TintPoint/Overlay"&gt;Overlay&lt;/a&gt; - Overlay is a flexible UI framework designed for Swift. It allows you to write CSS like Swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/haoking/SwiftyUI"&gt;SwiftyUI&lt;/a&gt; - High performance and lightweight(one class each UI) UIView, UIImage, UIImageView, UIlabel, UIButton, Promise and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AFathi/NotchToolkit"&gt;NotchToolkit&lt;/a&gt; - A framework for iOS that allow developers use the iPhone X notch in creative ways.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MarioIannotta/PullUpController"&gt;PullUpController&lt;/a&gt; - Pull up controller with multiple sticky points like in iOS Maps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Babylonpartners/DrawerKit"&gt;DrawerKit&lt;/a&gt; - DrawerKit lets an UIViewController modally present another UIViewController in a manner similar to the way Apple's Maps app works.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aaronjsutton/Shades"&gt;Shades&lt;/a&gt; - Easily add drop shadows, borders, and round corners to a UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Interactive-Studio/ISPageControl"&gt;ISPageControl&lt;/a&gt; - A page control similar to that used in Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oney/Mixin"&gt;Mixin&lt;/a&gt; - React.js like Mixin. More powerful Protocol-Oriented Programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Shiny"&gt;Shiny&lt;/a&gt; - Iridescent Effect View (inspired by Apple Pay Cash).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seedco/StackViewController"&gt;StackViewController&lt;/a&gt; - A controller that uses a UIStackView and view controller composition to display content in a list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/UberSignature"&gt;UberSignature&lt;/a&gt; - Provides an iOS view controller allowing a user to draw their signature with their finger in a realistic style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/startry/SwViewCapture"&gt;SwViewCapture&lt;/a&gt; - A nice iOS View Capture Swift Library which can capture all content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HamzaGhazouani/HGRippleRadarView"&gt;HGRippleRadarView&lt;/a&gt; - A beautiful radar view to show nearby items (users, restaurants, ...) with ripple animation, fully customizable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saeid/GDGauge"&gt;GDGauge&lt;/a&gt; - Full Customizable, Beautiful, Easy to use gauge view Edit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stunner/STAControls"&gt;STAControls&lt;/a&gt; - Handy UIControl subclasses. (Think Three20/NimbusKit of UIControls.) Written in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shindyu/ApplyStyleKit"&gt;ApplyStyleKit&lt;/a&gt; - Elegant apply style, using Swift Method Chain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/applidium/OverlayContainer"&gt;OverlayContainer&lt;/a&gt; - A library to develop overlay based interfaces, such as the one presented in the iOS 12 Apple Maps or Stocks apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Baddaboo/ClassicKit"&gt;ClassicKit&lt;/a&gt; - A collection of classic-style UI components for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MoveUpwards/Sejima"&gt;Sejima&lt;/a&gt; - A collection of User Interface components for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OfficeDev/ui-fabric-ios"&gt;UI Fabric by Microsoft&lt;/a&gt; - UI framework based on &lt;a href="https://www.microsoft.com/design/fluent/#/ios" rel="nofollow"&gt;Fluent Design System&lt;/a&gt; by Microsoft.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-activity-indicator" class="anchor" aria-hidden="true" href="#activity-indicator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Activity Indicator&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ninjaprox/NVActivityIndicatorView"&gt;NVActivityIndicatorView&lt;/a&gt; - Collection of nice loading animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TBXark/TKRubberIndicator"&gt;TKRubberIndicator&lt;/a&gt; - Rubber Indicator in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naoyashiga/RPLoadingAnimation"&gt;RPLoadingAnimation&lt;/a&gt; - Loading animations by using Swift CALayer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yoavlt/LiquidLoader"&gt;LiquidLoader&lt;/a&gt; - Spinner loader components with liquid animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CardinalNow/iOS-CircleProgressView"&gt;iOS-CircleProgressView&lt;/a&gt; - This control will allow a user to use code instantiated or interface builder to create and render a circle progress view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Eclair/CircleProgressBar"&gt;iOS Circle Progress Bar&lt;/a&gt; - iOS Circle Progress Bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/LinearProgressBar"&gt;LinearProgressBar&lt;/a&gt; - Linear Progress Bar (inspired by Google Material Design) for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saitjr/STLoadingGroup"&gt;STLoadingGroup&lt;/a&gt; - loading views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexLittlejohn/ALThreeCircleSpinner"&gt;ALThreeCircleSpinner&lt;/a&gt; - A pulsing spinner view written in swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mehfuzh/MHRadialProgressView"&gt;MHRadialProgressView&lt;/a&gt; - iOS radial animated progress view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ekhoo/Loader"&gt;Loader&lt;/a&gt; - Amazing animated switch activity indicator written in swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jdg/MBProgressHUD"&gt;MBProgressHUD&lt;/a&gt; - Drop-in class for displays a translucent HUD with an indicator and/or labels while work is being done in a background thread.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SVProgressHUD/SVProgressHUD"&gt;SVProgressHUD&lt;/a&gt; - A clean and lightweight progress HUD for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/relatedcode/ProgressHUD"&gt;ProgressHUD&lt;/a&gt; - ProgressHUD is a lightweight and easy-to-use HUD.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Marxon13/M13ProgressSuite"&gt;M13ProgressSuite&lt;/a&gt; - A suite containing many tools to display progress information on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pkluz/PKHUD"&gt;PKHUD&lt;/a&gt; - A Swift based reimplementation of the Apple HUD (Volume, Ringer, Rotation,‚Ä¶) for iOS 8 and above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/EZLoadingActivity"&gt;EZLoadingActivity&lt;/a&gt; - Lightweight loading activity HUD.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elbryan/FFCircularProgressView"&gt;FFCircularProgressView&lt;/a&gt; - FFCircularProgressView - An iOS 7-inspired blue circular progress view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mrackwitz/MRProgress"&gt;MRProgress&lt;/a&gt; - Collection of iOS drop-in components to visualize progress.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcelofabri/BigBrother"&gt;BigBrother&lt;/a&gt; - Automatically sets the network activity indicator for any performed request.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireNetworkActivityIndicator"&gt;AlamofireNetworkActivityIndicator&lt;/a&gt; - Controls the visibility of the network activity indicator on iOS using Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaandedeoglu/KDCircularProgress"&gt;KDCircularProgress&lt;/a&gt; - A circular progress view with gradients written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielamitay/DACircularProgress"&gt;DACircularProgress&lt;/a&gt; - DACircularProgress is a UIView subclass with circular UIProgressView properties.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ykyouhei/KYNavigationProgress"&gt;KYNavigationProgress&lt;/a&gt; - Simple extension of UINavigationController to display progress on the UINavigationBar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/GearRefreshControl"&gt;GearRefreshControl&lt;/a&gt; - A custom animation for the UIRefreshControl.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ninjinkun/NJKWebViewProgress"&gt;NJKWebViewProgress&lt;/a&gt; - A progress interface library for UIWebView. You can implement progress bar for your in-app browser using this module.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxkonovalov/MKRingProgressView"&gt;MKRingProgressView&lt;/a&gt; - A beautiful ring/circular progress view similar to Activity app on Apple Watch, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gautier-gdx/Hexacon"&gt;Hexacon&lt;/a&gt; - A new way to display content in your app like the Apple Watch SpringBoard, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BalestraPatrick/ParticlesLoadingView"&gt;ParticlesLoadingView&lt;/a&gt; - A customizable SpriteKit particles animation on the border of a view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/RPCircularProgress"&gt;RPCircularProgress&lt;/a&gt; - (Swift) Circular progress UIView subclass with UIProgressView properties.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatiBot/MBCircularProgressBar"&gt;MBCircularProgressBar&lt;/a&gt; -  A circular, animatable &amp;amp; highly customizable progress bar, editable from the Interface Builder using IBDesignable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devSC/WSProgressHUD"&gt;WSProgressHUD&lt;/a&gt; - This is a beautiful hud view for iPhone &amp;amp; iPad.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dabing1022/DBMetaballLoading"&gt;DBMetaballLoading&lt;/a&gt; - A metaball loading written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/polqf/FillableLoaders"&gt;FillableLoaders&lt;/a&gt; - Completely customizable progress based loaders drawn using custom CGPaths written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xxxAIRINxxx/VHUD"&gt;VHUD&lt;/a&gt; Simple HUD.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icanzilb/SwiftSpinner"&gt;SwiftSpinner&lt;/a&gt; - A beautiful activity indicator and modal alert written in Swift using blur effects, translucency, flat and bold design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresinaka/SnapTimer"&gt;SnapTimer&lt;/a&gt; - Implementation of Snapchat's stories timer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alephao/LLSpinner"&gt;LLSpinner&lt;/a&gt; - An easy way to create a full screen activity indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kirankunigiri/SVUploader"&gt;SVUploader&lt;/a&gt; - A beautiful uploader progress view that makes things simple and easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/YLProgressBar"&gt;YLProgressBar&lt;/a&gt; - UIProgressView replacement with an highly and fully customizable animated progress bar in pure Core Graphics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amratab/FlexibleSteppedProgressBar"&gt;FlexibleSteppedProgressBar&lt;/a&gt; - A beautiful easily customisable stepped progress bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fxm90/GradientLoadingBar"&gt;GradientLoadingBar&lt;/a&gt; - An animated gradient loading bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DholStudio/DSGradientProgressView"&gt;DSGradientProgressView&lt;/a&gt; - A simple and customizable animated progress bar written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fxm90/GradientProgressBar"&gt;GradientProgressBar&lt;/a&gt; - A gradient progress bar (UIProgressView).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ppth0608/BPCircleActivityIndicator"&gt;BPCircleActivityIndicator&lt;/a&gt; - A lightweight and awesome Loading Activity Indicator for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikola9core/DottedProgressBar"&gt;DottedProgressBar&lt;/a&gt; - Simple and customizable animated progress bar with dots for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roytornado/RSLoadingView"&gt;RSLoadingView&lt;/a&gt; - Awesome loading animations using 3D engine written with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/SendIndicator"&gt;SendIndicator&lt;/a&gt; - Yet another task indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/StepProgressView"&gt;StepProgressView&lt;/a&gt; - Step-by-step progress view with labels and shapes. A good replacement for UIActivityIndicatorView and UIProgressView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ppth0608/BPBlockActivityIndicator"&gt;BPBlockActivityIndicator&lt;/a&gt; - A simple and awesome Loading Activity Indicator(with funny block animation) for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesdouble/JDBreaksLoading"&gt;JDBreaksLoading&lt;/a&gt; - You can easily start up a little breaking game indicator by one line.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Juanpe/SkeletonView"&gt;SkeletonView&lt;/a&gt; - An elegant way to show users that something is happening and also prepare them to which contents he is waiting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Interactive-Studio/Windless"&gt;Windless&lt;/a&gt; - Windless makes it easy to implement invisible layout loading view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gonzalonunez/Skeleton"&gt;Skeleton&lt;/a&gt; - An easy way to create sliding CAGradientLayer animations! Works great for creating skeleton screens for loading content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IdleHandsApps/StatusBarOverlay"&gt;StatusBarOverlay&lt;/a&gt; - Automatically show/hide a "No Internet Connection" bar when your app loses/gains connection. It supports apps which hide the status bar and "The Notch".&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/RetroProgress"&gt;RetroProgress&lt;/a&gt; - Retro looking progress bar straight from the 90s.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Recouse/LinearProgressBar"&gt;LinearProgressBar&lt;/a&gt; - Material Linear Progress Bar for your iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kamirana4/MKProgress"&gt;MKProgress&lt;/a&gt; - A lightweight ProgressHUD written in Swift. Looks similar to /MBProgressHUD/SVProgressHUD/KVNProgressHUD.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robertherdzik/RHPlaceholder"&gt;RHPlaceholder&lt;/a&gt; - Simple library which give you possibility to add Facebook like loading state for your views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Swiftify-Corp/IHProgressHUD"&gt;IHProgressHUD&lt;/a&gt; - Simple HUD, thread safe, supports iOS, tvOS and App Extensions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-animation" class="anchor" aria-hidden="true" href="#animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/pop"&gt;Pop&lt;/a&gt; - An extensible iOS and macOS animation library, useful for physics-based interactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intuit/AnimationEngine"&gt;AnimationEngine&lt;/a&gt; - Easily build advanced custom animations on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rightpoint/RZTransitions"&gt;RZTransitions&lt;/a&gt; - A library of custom iOS View Controller Animations and Interactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam/DCAnimationKit"&gt;DCAnimationKit&lt;/a&gt; - A collection of animations for iOS. Simple, just add water animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MengTo/Spring"&gt;Spring&lt;/a&gt; - A library to simplify iOS animations in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewcheok/Fluent"&gt;Fluent&lt;/a&gt; - Swift animation made easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suguru/Cheetah"&gt;Cheetah&lt;/a&gt; - Easy animation library on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soheil/RadialLayer"&gt;RadialLayer&lt;/a&gt; - Animation for clickable elements (similar to Youtube Music).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hossamghareeb/Facebook-POP-Tutorial"&gt;Pop By Example&lt;/a&gt; - A project tutorial in how to use Pop animation framework by example.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.appanimations.com" rel="nofollow"&gt;AppAnimations&lt;/a&gt; - Collection of iOS animations to inspire your next project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icanzilb/EasyAnimation"&gt;EasyAnimation&lt;/a&gt; - A Swift library to take the power of UIView.animateWithDuration() to a whole new level - layers, springs, chain-able animations, and mixing view/layer animations together.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eure/Animo"&gt;Animo&lt;/a&gt; - SpriteKit-like animation builders for CALayers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devinross/curry-fire"&gt;CurryFire&lt;/a&gt; - A framework for creating unique animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBAnimatable/IBAnimatable"&gt;IBAnimatable&lt;/a&gt; - Design and prototype UI, interaction, navigation, transition and animation for App Store ready Apps in Interface Builder with IBAnimatable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CezaryKopacz/CKWaveCollectionViewTransition"&gt;CKWaveCollectionViewTransition&lt;/a&gt; - Cool wave like transition between two or more UICollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alikaragoz/DaisyChain"&gt;DaisyChain&lt;/a&gt; - Easy animation chaining.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/PulsingHalo"&gt;PulsingHalo&lt;/a&gt; - iOS Component for creating a pulsing animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Draveness/DKChainableAnimationKit"&gt;DKChainableAnimationKit&lt;/a&gt; - Chainable animations in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JellyDevelopment/JDAnimationKit"&gt;JDAnimationKit&lt;/a&gt; - Animate easy and with less code with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timdonnelly/Advance"&gt;Advance&lt;/a&gt; - A powerful animation framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/UIView-Shake"&gt;UIView-Shake&lt;/a&gt; - UIView category that adds shake animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RamonGilabert/Walker"&gt;Walker&lt;/a&gt; - A new animation engine for your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RamonGilabert/Morgan"&gt;Morgan&lt;/a&gt; - An animation set for your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/patrickreynolds/MagicMove"&gt;MagicMove&lt;/a&gt; - Keynote-style Magic Move transition animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/Shimmer"&gt;Shimmer&lt;/a&gt; - An easy way to add a simple, shimmering effect to any view in an iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sudeepag/SAConfettiView"&gt;SAConfettiView&lt;/a&gt; - Confetti! Who doesn't like confetti?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cacmartinez/CCMRadarView"&gt;CCMRadarView&lt;/a&gt; - CCMRadarView uses the IBDesignable tools to make an easy customizable radar view with animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/Pulsator"&gt;Pulsator&lt;/a&gt; - Pulse animation for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Interpolate"&gt;Interpolate&lt;/a&gt; - Swift interpolation for gesture-driven animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Antondomashnev/ADPuzzleAnimation"&gt;ADPuzzleAnimation&lt;/a&gt; - Custom animation for UIView inspired by Fabric - Answers animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Wave"&gt;Wave&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="ocean" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30a.png"&gt;üåä&lt;/g-emoji&gt; Declarative chainable animations in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AugustRush/Stellar"&gt;Stellar&lt;/a&gt; - A fantastic Physical animation library for swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/poetmountain/MotionMachine"&gt;MotionMachine&lt;/a&gt; - A powerful, elegant, and modular animation library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carleihar/JRMFloatingAnimation"&gt;JRMFloatingAnimation&lt;/a&gt; - An Objective-C animation library used to create floating image views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastred/AHKBendableView"&gt;AHKBendableView&lt;/a&gt; - UIView subclass that bends its edges when its position changes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AntonTheDev/FlightAnimator"&gt;FlightAnimator&lt;/a&gt; - Advanced Natural Motion Animations, Simple Blocks Based Syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/ZoomTransitioning"&gt;ZoomTransitioning&lt;/a&gt; - A custom transition with image zooming animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RobinFalko/Ubergang"&gt;Ubergang&lt;/a&gt; - A tweening engine for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jhurray/JHChainableAnimations"&gt;JHChainableAnimations&lt;/a&gt; - Easy to read and write chainable animations in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DavdRoman/Popsicle"&gt;Popsicle&lt;/a&gt; - Delightful, extensible Swift value interpolation framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WelkinXie/WXWaveView"&gt;WXWaveView&lt;/a&gt; - Add a pretty water wave to your view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/Twinkle"&gt;Twinkle&lt;/a&gt; - Swift and easy way to make elements in your iOS and tvOS app twinkle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastred/MotionBlur"&gt;MotionBlur&lt;/a&gt; - MotionBlur allows you to add motion blur effect to iOS animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alsedi/RippleEffectView"&gt;RippleEffectView&lt;/a&gt; - RippleEffectView - A Neat Rippling View Effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebookincubator/Keyframes"&gt;Keyframes&lt;/a&gt; - A library for converting Adobe AE shape based animations to a data format and play it back on Android and iOS devices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rchatham/SwiftyAnimate"&gt;SwiftyAnimate&lt;/a&gt; - Composable animations in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hachinobu/SamuraiTransition"&gt;SamuraiTransition&lt;/a&gt; - Swift based library providing a collection of ViewController transitions featuring a number of neat ‚Äúcutting‚Äù animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/lottie-ios"&gt;Lottie&lt;/a&gt; - An iOS library for a real time rendering of native vector animations from Adobe After Effects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ML-Works/Overlap"&gt;Overlap&lt;/a&gt; - Tiny iOS library to achieve overlap visual effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onurersel/anim"&gt;anim&lt;/a&gt; - An animation library for iOS with custom easings and easy to follow API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KelvinJin/AnimatedCollectionViewLayout"&gt;AnimatedCollectionViewLayout&lt;/a&gt; - A UICollectionViewLayout subclass that adds custom transitions/animations to the UICollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saoudrizwan/Dance"&gt;Dance&lt;/a&gt; - A radical &amp;amp; elegant animation library built for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/numen31337/AKVideoImageView"&gt;AKVideoImageView&lt;/a&gt; - UIImageView subclass which allows you to display a looped video as a background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willowtreeapps/spruce-ios"&gt;Spruce iOS Animation Library&lt;/a&gt; - Swift library for choreographing animations on the screen.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pro/CircularRevealKit"&gt;CircularRevealKit&lt;/a&gt; - UI framework that implements the material design's reveal effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SteveBarnegren/TweenKit"&gt;TweenKit&lt;/a&gt; - Animation library for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KrisYu/Water"&gt;Water&lt;/a&gt; - Simple calculation to render cheap water effects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cruisediary/Pastel"&gt;Pastel&lt;/a&gt; - Gradient animation effect like Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yapstudios/YapAnimator"&gt;YapAnimator&lt;/a&gt; - Your fast and friendly physics-based animation system.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goldmoment/Bubble"&gt;Bubble&lt;/a&gt; - Fruit Animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shoheiyokoyama/Gemini"&gt;Gemini&lt;/a&gt; - Gemini is rich scroll based animation framework for iOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeFal/WaterDrops"&gt;WaterDrops&lt;/a&gt; - Simple water drops animation for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcosgriselli/ViewAnimator"&gt;ViewAnimator&lt;/a&gt; - ViewAnimator brings your UI to life with just one line.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/Ease"&gt;Ease&lt;/a&gt; - Animate everything with Ease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmick66/kinieta"&gt;Kinieta&lt;/a&gt; - An Animation Engine with Custom Bezier Easing, an Intuitive API and perfect Color Intepolation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lision/LSAnimator"&gt;LSAnimator&lt;/a&gt; - Easy to Read and Write Multi-chain Animations Kit in Objective-C and Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lkzhao/YetAnotherAnimationLibrary"&gt;YetAnotherAnimationLibrary&lt;/a&gt; - Designed for gesture-driven animations. Fast, simple, &amp;amp; extensible!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/satoshin21/Anima"&gt;Anima&lt;/a&gt; - Anima is chainable Layer-Based Animation library for Swift4.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lkzhao/MotionAnimation"&gt;MotionAnimation&lt;/a&gt; - Lightweight animation library for UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agilie/AGInterfaceInteraction"&gt;AGInterfaceInteraction&lt;/a&gt; - library performs interaction with UI interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/poetmountain/PMTween"&gt;PMTween&lt;/a&gt; - An elegant and flexible tweening library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artrmz/VariousViewsEffects"&gt;VariousViewsEffects&lt;/a&gt; - Animates views nicely with easy to use extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/TheAnimation"&gt;TheAnimation&lt;/a&gt; - Type-safe CAAnimation wrapper. It makes preventing to set wrong type values.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HideakiTouhara/Poi"&gt;Poi&lt;/a&gt; - Poi makes you use card UI like tinder UI .You can use it like tableview method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cats-oss/Sica"&gt;Sica&lt;/a&gt; - Simple Interface Core Animation. Run type-safe animation sequencially or parallelly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomkowz/fireworks"&gt;fireworks&lt;/a&gt; - Fireworks effect for UIView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dbukowski/Disintegrate"&gt;Disintegrate&lt;/a&gt; - Disintegration animation inspired by THAT thing Thanos did at the end of Avengers: Infinity War.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sagaya/wobbly"&gt;Wobbly&lt;/a&gt; - Wobbly is a Library of predefined, easy to use iOS animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/LoadingShimmer"&gt;LoadingShimmer&lt;/a&gt; - An easy way to add a shimmering effect to any view with just one line of code. It is useful as an unobtrusive loading indicator.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-transition" class="anchor" aria-hidden="true" href="#transition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Citrrus/BlurryModalSegue"&gt;BlurryModalSegue&lt;/a&gt; - A custom modal segue for providing a blurred overlay effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ifitdoesntwork/DAExpandAnimation"&gt;DAExpandAnimation&lt;/a&gt; - A custom modal transition that presents a controller with an expanding effect while sliding out the presenter remnants.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/BubbleTransition"&gt;BubbleTransition&lt;/a&gt; - A custom modal transition that presents and dismiss a controller with an expanding bubble effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naoyashiga/RPModalGestureTransition"&gt;RPModalGestureTransition&lt;/a&gt; - You can dismiss modal by using gesture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mp/RMPZoomTransitionAnimator"&gt;RMPZoomTransitionAnimator&lt;/a&gt; - A custom zooming transition animation for UIViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lkzhao/ElasticTransition"&gt;ElasticTransition&lt;/a&gt; - A UIKit custom transition that simulates an elastic drag. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/taglia3/ElasticTransition-ObjC"&gt;ElasticTransition-ObjC&lt;/a&gt; - A UIKit custom transition that simulates an elastic drag.This is the Objective-C Version of Elastic Transition written in Swift by lkzhao.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zoonooz/ZFDragableModalTransition"&gt;ZFDragableModalTransition&lt;/a&gt; - Custom animation transition for present modal view controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NewAmsterdamLabs/ZOZolaZoomTransition"&gt;ZOZolaZoomTransition&lt;/a&gt; - Zoom transition that animates the entire view hierarchy. Used extensively in the Zola iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonathantribouharet/JTMaterialTransition"&gt;JTMaterialTransition&lt;/a&gt; - An iOS transition for controllers based on material design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/AnimatedTransitionGallery"&gt;AnimatedTransitionGallery&lt;/a&gt; - Collection of iOS 7 custom animated transitions using UIViewControllerAnimatedTransitioning protocol.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DianQK/TransitionTreasury"&gt;TransitionTreasury&lt;/a&gt; - Easier way to push your viewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/Presenter"&gt;Presenter&lt;/a&gt; - Screen transition with safe and clean code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bannzai/Kaeru"&gt;Kaeru&lt;/a&gt; - Switch viewcontroller like iOS task manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naru-jpn/View2ViewTransition"&gt;View2ViewTransition&lt;/a&gt; - Custom interactive view controller transition from one view to another view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/azimin/AZTransitions"&gt;AZTransitions&lt;/a&gt; - API to make great custom transitions in one method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HeroTransitions/Hero"&gt;Hero&lt;/a&gt; - Supercharged transition engine for iOS. Build your custom view transitions with no code at all. Inspired by Keynote's Magic Move.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Motion"&gt;Motion&lt;/a&gt; - Seamless animations and transitions in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/PresenterKit"&gt;PresenterKit&lt;/a&gt; - Swifty view controller presentation for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Touchwonders/Transition"&gt;Transition&lt;/a&gt; - Easy interactive interruptible custom ViewController transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boerworz/Gagat"&gt;Gagat&lt;/a&gt; - A delightful way to transition between visual styles in your iOS applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HarshilShah/DeckTransition"&gt;DeckTransition&lt;/a&gt; - A library to recreate the iOS Apple Music now playing transition.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Interactive-Studio/TransitionableTab"&gt;TransitionableTab&lt;/a&gt; - TransitionableTab makes it easy to animate when switching between tab.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/loopeer/AlertTransition"&gt;AlertTransition&lt;/a&gt; - AlertTransition is a extensible library for making view controller transitions, especially for alert transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muyexi/SemiModalViewController"&gt;SemiModalViewController&lt;/a&gt; - Present view / view controller as bottom-half modal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shtnkgm/ImageTransition"&gt;ImageTransition&lt;/a&gt; - ImageTransition is a library for smooth animation of images during transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexandrGraschenkov/LiquidTransition"&gt;LiquidTransition&lt;/a&gt; - removes boilerplate code to perform transition, allows backward animations, custom properties animation and much more!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanVorobei/SPStorkController"&gt;SPStorkController&lt;/a&gt; - Very similar to the controllers displayed in Apple Music, Podcasts and Mail Apple's applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appssemble/appstore-card-transition"&gt;AppstoreTransition&lt;/a&gt; - Simulates the appstore card animation transition.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-alert--action-sheet" class="anchor" aria-hidden="true" href="#alert--action-sheet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alert &amp;amp; Action Sheet&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/codestergit/SweetAlert-iOS"&gt;SweetAlert&lt;/a&gt; - Live animated Alert View for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nealyoung/NYAlertViewController"&gt;NYAlertViewController&lt;/a&gt; - Highly configurable iOS Alert Views with custom content views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vikmeup/SCLAlertView-Swift"&gt;SCLAlertView-Swift&lt;/a&gt; - Beautiful animated Alert View, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zekunyan/TTGSnackbar"&gt;TTGSnackbar&lt;/a&gt; - Show simple message and action button on the bottom of the screen with multi kinds of animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GabrielAlva/Swift-Prompts"&gt;Swift-Prompts&lt;/a&gt; - A Swift library to design custom prompts with a great scope of options to choose from.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bryx-inc/BRYXBanner"&gt;BRYXBanner&lt;/a&gt; - A lightweight dropdown notification for iOS 7+, in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LISNR/LNRSimpleNotifications"&gt;LNRSimpleNotifications&lt;/a&gt; - Simple Swift in-app notifications. LNRSimpleNotifications is a simplified Swift port of TSMessages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nhdang103/HDNotificationView"&gt;HDNotificationView&lt;/a&gt; - Emulates the native Notification Banner UI for any alert.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/calimarkus/JDStatusBarNotification"&gt;JDStatusBarNotification&lt;/a&gt; - Easy, customizable notifications displayed on top of the statusbar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thii/Notie"&gt;Notie&lt;/a&gt; - In-app notification in Swift, with customizable buttons and input text field.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thellimist/EZAlertController"&gt;EZAlertController&lt;/a&gt; - Easy Swift UIAlertController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wxxsw/GSMessages"&gt;GSMessages&lt;/a&gt; - A simple style messages/notifications for iOS 7+.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OEA/OEANotification"&gt;OEANotification&lt;/a&gt; - In-app customizable notification views on top of screen for iOS which is written in Swift 2.1.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cwRichardKim/RKDropdownAlert"&gt;RKDropdownAlert&lt;/a&gt; - Extremely simple UIAlertView alternative.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/entotsu/TKSwarmAlert"&gt;TKSwarmAlert&lt;/a&gt; - Animated alert library like Swarm app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KyoheiG3/SimpleAlert"&gt;SimpleAlert&lt;/a&gt; - Customizable simple Alert and simple ActionSheet for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ytakzk/Hokusai"&gt;Hokusai&lt;/a&gt; - A Swift library to provide a bouncy action sheet.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnlui/SwiftNotice"&gt;SwiftNotice&lt;/a&gt; - SwiftNotice is a GUI library for displaying various popups (HUD) written in pure Swift, fits any scrollview.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peterprokop/SwiftOverlays"&gt;SwiftOverlays&lt;/a&gt; - SwiftOverlays is a Swift GUI library for displaying various popups and notifications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morizotter/SwiftyDrop"&gt;SwiftyDrop&lt;/a&gt; - SwiftyDrop is a lightweight pure Swift simple and beautiful dropdown message.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lightningkite/LKAlertController"&gt;LKAlertController&lt;/a&gt; - An easy to use UIAlertController builder for swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okmr-d/DOAlertController"&gt;DOAlertController&lt;/a&gt; - Simple Alert View written in Swift, which can be used as a UIAlertController. (AlertController/AlertView/ActionSheet).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/beryu/CustomizableActionSheet"&gt;CustomizableActionSheet&lt;/a&gt; - Action sheet allows including your custom views and buttons.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scalessec/Toast-Swift"&gt;Toast-Swift&lt;/a&gt; - A Swift extension that adds toast notifications to the UIView object class.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmusolino/PMAlertController"&gt;PMAlertController&lt;/a&gt; - PMAlertController is a great and customizable substitute to UIAlertController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimillian/PopupViewController"&gt;PopupViewController&lt;/a&gt; - UIAlertController drop in replacement with much more customization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/AlertViewLoveNotification"&gt;AlertViewLoveNotification&lt;/a&gt; - A simple and attractive AlertView to ask permission to your users for Push Notification.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cruffenach/CRToast"&gt;CRToast&lt;/a&gt; - A modern iOS toast view that can fit your notification needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/Toaster"&gt;JLToast&lt;/a&gt; - Toast for iOS with very simple interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rollmind/CuckooAlert"&gt;CuckooAlert&lt;/a&gt; - Multiple use of presentViewController for UIAlertController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krimpedance/KRAlertController"&gt;KRAlertController&lt;/a&gt; - A colored alert view for your iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/Dodo"&gt;Dodo&lt;/a&gt; - A message bar for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ntnhon/MaterialActionSheetController"&gt;MaterialActionSheetController&lt;/a&gt; - A Google like action sheet for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKickMobile/SwiftMessages"&gt;SwiftMessages&lt;/a&gt; - A very flexible message bar for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krispenney/FCAlertView"&gt;FCAlertView&lt;/a&gt; - A Flat Customizable AlertView for iOS. (Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nimati/FCAlertView"&gt;FCAlertView&lt;/a&gt; - A Flat Customizable AlertView for iOS. (Objective-C).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/candostdagdeviren/CDAlertView"&gt;CDAlertView&lt;/a&gt; - Highly customizable alert/notification/success/error/alarm popup.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CooperRS/RMActionController"&gt;RMActionController&lt;/a&gt; - Present any UIView in an UIAlertController like manner.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CooperRS/RMDateSelectionViewController"&gt;RMDateSelectionViewController&lt;/a&gt; - Select a date using UIDatePicker in a UIAlertController like fashion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CooperRS/RMPickerViewController"&gt;RMPickerViewController&lt;/a&gt; - Select something using UIPickerView in a UIAlertController like fashion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SebastianBoldt/Jelly"&gt;Jelly&lt;/a&gt; - Jelly provides custom view controller transitions with just a few lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vitormesquita/Malert"&gt;Malert&lt;/a&gt; - Malert is a simple, easy and custom iOS UIAlertView written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roycms/AlertView"&gt;RAlertView&lt;/a&gt; - AlertView, iOS popup window, A pop-up framework, Can be simple and convenient to join your project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qiuncheng/NoticeBar"&gt;NoticeBar&lt;/a&gt; - A simple NoticeBar written by Swift 3, similar with QQ notice view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lasithih/LIHAlert"&gt;LIHAlert&lt;/a&gt; - Advance animated banner alerts for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ppth0608/BPStatusBarAlert"&gt;BPStatusBarAlert&lt;/a&gt; - A simple alerts that appear on the status bar and below navigation bar(like Facebook).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Codigami/CFAlertViewController"&gt;CFAlertViewController&lt;/a&gt; -  A library that helps you display and customise alerts and action sheets on iPad and iPhone.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daltron/NotificationBanner"&gt;NotificationBanner&lt;/a&gt; - The easiest way to display highly customizable in app notification banners in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgr-ksmt/Alertift"&gt;Alertift&lt;/a&gt; - Swifty, modern UIAlertController wrapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hryk224/PCLBlurEffectAlert"&gt;PCLBlurEffectAlert&lt;/a&gt; - Swift AlertController with UIVisualEffectView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trilliwon/JDropDownAlert"&gt;JDropDownAlert&lt;/a&gt; - Multi dirction dropdown alert view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexaubry/BulletinBoard"&gt;BulletinBoard&lt;/a&gt; - Generate and Display Bottom Card Interfaces on iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hallelujahbaby/CFNotify"&gt;CFNotify&lt;/a&gt; - A customizable framework to create draggable views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LowKostKustomz/StatusAlert"&gt;StatusAlert&lt;/a&gt; - Display Apple system-like self-hiding status alerts without interrupting user flow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dillidon/alerts-and-pickers"&gt;Alerts &amp;amp; Pickers&lt;/a&gt; - Advanced usage of native UIAlertController with TextField, DatePicker, PickerView, TableView and CollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/donileo/RMessage"&gt;RMessage&lt;/a&gt; - A crisp in-app notification/message banner built in ObjC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lucabecchetti/InAppNotify"&gt;InAppNotify&lt;/a&gt; - Swift library to manage in-app notification in swift language, like WhatsApp, Telegram, Frind, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/FloatingActionSheetController"&gt;FloatingActionSheetController&lt;/a&gt; - FloatingActionSheetController is a cool design ActionSheetController library written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimOliver/TOActionSheet"&gt;TOActionSheet&lt;/a&gt; - A custom-designed reimplementation of the UIActionSheet control for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLActionController"&gt;XLActionController&lt;/a&gt; - Fully customizable and extensible action sheet controller written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CaliCastle/PopMenu"&gt;PopMenu&lt;/a&gt; - A cool and customizable popup style action sheet &lt;g-emoji class="g-emoji" alias="sunglasses" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png"&gt;üòé&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheAbstractDev/NotchyAlert"&gt;NotchyAlert&lt;/a&gt; - Use the iPhone X notch space to display creative alerts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BowdusBrown/Sheet"&gt;Sheet&lt;/a&gt; - Show a workflow of view controllers as an action sheet. Very light weight. No configuration needed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ParkGwangBeom/Sheet"&gt;Sheet&lt;/a&gt; - SHEET helps you easily create a wide variety of action sheets with navigation features used in the Flipboard App&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mshrwtnb/alrt"&gt;ALRT&lt;/a&gt; - An easier constructor for UIAlertController. Present an alert from anywhere.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ImKcat/CatAlertController"&gt;CatAlertController&lt;/a&gt; - Use UIAlertController like a boss.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schmidyy/Loaf"&gt;Loaf&lt;/a&gt; - A simple framework for easy iOS Toasts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanVorobei/SPAlert"&gt;SPAlert&lt;/a&gt; - Native popup from Apple Music &amp;amp; Feedback in AppStore. Contains Done &amp;amp; Heart presets.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-badge" class="anchor" aria-hidden="true" href="#badge"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Badge&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mustafaibrahim989/MIBadgeButton-Swift"&gt;MIBadgeButton&lt;/a&gt; - Notification badge for UIButtons.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/EasyNotificationBadge"&gt;EasyNotificationBadge&lt;/a&gt; - UIView extension that adds a notification badge. [e]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gemr/Sheriff"&gt;Sheriff&lt;/a&gt; - Add badges to anything.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/swift-badge"&gt;swift-badge&lt;/a&gt; - Badge view for iOS written in swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/BadgeHub"&gt;BadgeHub&lt;/a&gt; - Make any UIView a full fledged animated notification center. It is a way to quickly add a notification badge icon to a UIView.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-button" class="anchor" aria-hidden="true" href="#button"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Button&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/StyleShare/SSBouncyButton"&gt;SSBouncyButton&lt;/a&gt; - iOS7-style bouncy button UI component.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okmr-d/DOFavoriteButton"&gt;DOFavoriteButton&lt;/a&gt; - Cute Animated Button written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/victorBaro/VBFPopFlatButton"&gt;VBFPopFlatButton&lt;/a&gt; - Flat button with 9 different states animated using Facebook POP.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Famolus/HTPressableButton"&gt;HTPressableButton&lt;/a&gt; - Flat design pressable button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yoavlt/LiquidFloatingActionButton"&gt;LiquidFloatingActionButton&lt;/a&gt; - Material Design Floating Action Button in liquid state&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JunichiT/JTFadingInfoView"&gt;JTFadingInfoView&lt;/a&gt; - An UIButton-based view with fade in/out animation features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/Floaty"&gt;Floaty&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;‚ù§Ô∏è&lt;/g-emoji&gt; Floating Action Button for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/TVButton"&gt;TVButton&lt;/a&gt; - Recreating the cool parallax icons from Apple TV as iOS UIButtons (in Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TakeScoop/SwiftyButton"&gt;SwiftyButton&lt;/a&gt; - Simple and customizable button in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suzuki-0000/AnimatablePlayButton"&gt;AnimatablePlayButton&lt;/a&gt; - Animated Play and Pause Button using CALayer, CAKeyframeAnimation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Guidebook/gbkui-button-progress-view"&gt;gbkui-button-progress-view&lt;/a&gt; - Inspired by Apple‚Äôs download progress buttons in the App Store.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zoonooz/ZFRippleButton"&gt;ZFRippleButton&lt;/a&gt; - Custom UIButton effect inspired by Google Material Design&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lojals/JOEmojiableBtn"&gt;JOEmojiableBtn&lt;/a&gt; - Emoji selector like Facebook Reactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Eke/EMEmojiableBtn"&gt;EMEmojiableBtn&lt;/a&gt; - Option selector that works similar to Reactions by fb. Objective-c version.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yu-w/WYMaterialButton"&gt;WYMaterialButton&lt;/a&gt; - Interactive and fully animated Material Design button for iOS developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/DynamicButton"&gt;DynamicButton&lt;/a&gt; - Yet another animated flat buttons in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rakaramos/OnOffButton"&gt;OnOffButton&lt;/a&gt; - Custom On/Off Animated UIButton, written in Swift. By Creativedash&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imwcl/WCLShineButton"&gt;WCLShineButton&lt;/a&gt; - This is a UI lib for iOS. Effects like shining.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/EasySocialButton"&gt;EasySocialButton&lt;/a&gt; - An easy way to create beautiful social authentication buttons.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/NFDownloadButton"&gt;NFDownloadButton&lt;/a&gt; - Revamped Download Button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/loregr/LGButton"&gt;LGButton&lt;/a&gt; - A fully customisable subclass of the native UIControl which allows you to create beautiful buttons without writing any line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MultiToggleButton"&gt;MultiToggleButton&lt;/a&gt; - A UIButton subclass that implements tap-to-toggle button text (Like the camera flash and timer buttons).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmusolino/PMSuperButton"&gt;PMSuperButton&lt;/a&gt; - A powerful UIButton with super powers, customizable from Storyboard!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/JSButton"&gt;JSButton&lt;/a&gt; - A fully customisable swift subclass on UIButton which allows you to create beautiful buttons without writing any line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AladinWay/TransitionButton"&gt;TransitionButton&lt;/a&gt; - UIButton sublass for loading and transition animation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thePsguy/ButtonProgressBar-iOS"&gt;ButtonProgressBar-iOS&lt;/a&gt; - A small and flexible UIButton subclass with animated loading progress, and completion animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lukecrum/SpicyButton"&gt;SpicyButton&lt;/a&gt; - Full-featured IBDesignable UIButton class&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IdleHandsApps/DesignableButton"&gt;DesignableButton&lt;/a&gt; - UIButton subclass with centralised and reusable styles. View styles and customise in InterfaceBuilder in real time!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boris-Em/BEMCheckBox"&gt;BEMCheckBox&lt;/a&gt; - Tasteful Checkbox for iOS. (Check box)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DimaMishchenko/ExpandableButton"&gt;ExpandableButton&lt;/a&gt; - Customizable and easy to use expandable button in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimOliver/TORoundedButton"&gt;TORoundedButton&lt;/a&gt; - A high-performance button control with rounded corners.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-calendar" class="anchor" aria-hidden="true" href="#calendar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calendar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/CVCalendar/CVCalendar"&gt;CVCalendar&lt;/a&gt; - A custom visual calendar for iOS 8+ written in Swift (2.0).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslanskorb/RSDayFlow"&gt;RSDayFlow&lt;/a&gt; - iOS 7+ Calendar with Infinite Scrolling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbwar/NWCalendarView"&gt;NWCalendarView&lt;/a&gt; - An availability calendar implementation for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Glow-Inc/GLCalendarView"&gt;GLCalendarView&lt;/a&gt; - A fully customizable calendar view acting as a date range picker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonathantribouharet/JTCalendar"&gt;JTCalendar&lt;/a&gt; - A customizable calendar view for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/patchthecode/JTAppleCalendar"&gt;JTAppleCalendar&lt;/a&gt; - The Unofficial Swift Apple Calendar Library. View. Control. for iOS &amp;amp; tvOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixzii/Daysquare"&gt;Daysquare&lt;/a&gt; - An elegant calendar control for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scamps88/ASCalendar"&gt;ASCalendar&lt;/a&gt; - A calendar control for iOS written in swift with mvvm pattern&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jumartin/Calendar"&gt;Calendar&lt;/a&gt; - A set of views and controllers for displaying and scheduling events on iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shoheiyokoyama/Koyomi"&gt;Koyomi&lt;/a&gt; - Simple customizable calendar component in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/itsmeichigo/DateTimePicker"&gt;DateTimePicker&lt;/a&gt; - A nicer iOS UI component for picking date and time&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roycms/RCalendarPicker"&gt;RCalendarPicker&lt;/a&gt; - RCalendarPicker A date picker control.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/richardtop/CalendarKit"&gt;CalendarKit&lt;/a&gt; - Fully customizable calendar day view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saeid/GDCalendar"&gt;GDPersianCalendar&lt;/a&gt; - Customizable and easy to use Persian Calendar component.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MosheBerman/MBCalendarKit"&gt;MBCalendarKit&lt;/a&gt; - A calendar framework for iOS built with customization, and localization in mind.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amantaneja/PTEventView"&gt;PTEventView&lt;/a&gt; - An Event View based on Apple's Event Detail View within Calender.Supports ARC, Autolayout and editing via StoryBoard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmick66/CalendarView"&gt;KDCalendarView&lt;/a&gt; - A calendar component for iOS written in Swift 4.0. It features both vertical and horizontal layout (and scrolling) and the display of native calendar events.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orazz/CalendarPopUp"&gt;CalendarPopUp&lt;/a&gt; - CalendarPopUp - JTAppleCalendar library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maximbilan/Calendar-iOS"&gt;ios_calendar&lt;/a&gt;  - It's lightweight and simple control with supporting Locale and CalendarIdentifier. There're samples for iPhone and iPad, and also with using a popover. With supporting Persian calendar&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WenchaoD/FSCalendar"&gt;FSCalendar&lt;/a&gt; - A fully customizable iOS calendar library, compatible with Objective-C and Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cards" class="anchor" aria-hidden="true" href="#cards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cards&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Card based UI's, pan gestures, flip and swipe animations&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/modocache/MDCSwipeToChoose"&gt;MDCSwipeToChoose&lt;/a&gt; - Swipe to "like" or "dislike" any view, just like Tinder.app. Build a flashcard app, a photo viewer, and more, in minutes, not hours!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tispr/tispr-card-stack"&gt;TisprCardStack&lt;/a&gt; - Library that allows to have cards UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seedante/CardAnimation"&gt;CardAnimation&lt;/a&gt; - Card flip animation by pan gesture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Koloda"&gt;Koloda&lt;/a&gt; - KolodaView is a class designed to simplify the implementation of Tinder like cards on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kunalverma25/KVCardSelectionVC"&gt;KVCardSelectionVC&lt;/a&gt; - Awesome looking Dial like card selection ViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/D-32/DMSwipeCards"&gt;DMSwipeCards&lt;/a&gt; - Tinder like card stack that supports lazy loading and generics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vladaverin24/TimelineCards"&gt;TimelineCards&lt;/a&gt; - Presenting timelines as cards, single or bundled in scrollable feed!.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PaoloCuscela/Cards"&gt;Cards&lt;/a&gt; - Awesome iOS 11 AppStore's Card Views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MillmanY/MMCardView"&gt;MMCardView&lt;/a&gt; - Custom CollectionView like Wallet App&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/filletofish/CardsLayout"&gt;CardsLayout&lt;/a&gt; - Nice card-designed custom collection view layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intuit/CardParts"&gt;CardParts&lt;/a&gt; - A reactive, card-based UI framework built on UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JoniVR/VerticalCardSwiper"&gt;VerticalCardSwiper&lt;/a&gt; - A marriage between the Shazam Discover UI and Tinder, built with UICollectionView in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-form--settings" class="anchor" aria-hidden="true" href="#form--settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Form &amp;amp; Settings&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Input validators, form helpers and form builders.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Form"&gt;Form&lt;/a&gt; - The most flexible and powerful way to build a form on iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLForm"&gt;XLForm&lt;/a&gt; - XLForm is the most flexible and powerful iOS library to create dynamic table-view forms. Fully compatible with Swift &amp;amp; Obj-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/Eureka"&gt;Eureka&lt;/a&gt; - Elegant iOS form builder in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/YALField"&gt;YALField&lt;/a&gt; - Custom Field component with validation for creating easier form-like UI from interface builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/Former"&gt;Former&lt;/a&gt; - Former is a fully customizable Swift2 library for easy creating UITableView based form.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ortuman/SwiftForms"&gt;SwiftForms&lt;/a&gt; - A small and lightweight library written in Swift that allows you to easily create forms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seedco/Formalist"&gt;Formalist&lt;/a&gt; - Declarative form building framework for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neoneye/SwiftyFORM"&gt;SwiftyFORM&lt;/a&gt; - SwiftyFORM is a form framework for iOS written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftValidatorCommunity/SwiftValidator"&gt;SwiftValidator&lt;/a&gt; - A rule-based validation library for Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EurekaCommunity/GenericPasswordRow"&gt;GenericPasswordRow&lt;/a&gt; - A row for Eureka to implement password validations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ustwo/formvalidator-swift"&gt;formvalidator-swift&lt;/a&gt; - A framework to validate inputs of text fields and text views in a convenient way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nsagora/validation-toolkit"&gt;ValidationToolkit&lt;/a&gt; - Lightweight framework for input validation written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/altayer-digital/ATGValidator"&gt;ATGValidator&lt;/a&gt; - Rule based validation framework with form and card validation support for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/ValidatedPropertyKit"&gt;ValidatedPropertyKit&lt;/a&gt; - Easily validate your Properties with Property Wrappers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-keyboard" class="anchor" aria-hidden="true" href="#keyboard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslanskorb/RSKKeyboardAnimationObserver"&gt;RSKKeyboardAnimationObserver&lt;/a&gt; - Showing / dismissing keyboard animation in simple UIViewController category.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruddfawcett/RFKeyboardToolbar"&gt;RFKeyboardToolbar&lt;/a&gt; - This is a flexible UIView and UIButton subclass to add customized buttons and toolbars to your UITextFields/UITextViews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hackiftekhar/IQKeyboardManager"&gt;IQKeyboardManager&lt;/a&gt; - Codeless drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meiwin/NgKeyboardTracker"&gt;NgKeyboardTracker&lt;/a&gt; - Objective-C library for tracking keyboard in iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matmartinez/MMNumberKeyboard"&gt;MMNumberKeyboard&lt;/a&gt; - A simple keyboard to use with numbers and, optionally, a decimal point.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morizotter/KeyboardObserver"&gt;KeyboardObserver&lt;/a&gt; - For less complicated keyboard event handling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/michaeltyson/TPKeyboardAvoiding"&gt;TPKeyboardAvoiding&lt;/a&gt; - A drop-in universal solution for moving text fields out of the way of the keyboard in iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYKeyboardManager"&gt;YYKeyboardManager&lt;/a&gt; - iOS utility class allows you to access keyboard view and track keyboard animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nixzhu/KeyboardMan"&gt;KeyboardMan&lt;/a&gt; - KeyboardMan helps you make keyboard animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/makemoji/MakemojiSDK"&gt;MakemojiSDK&lt;/a&gt; - Emoji Keyboard SDK (iOS)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/totocaster/Typist"&gt;Typist&lt;/a&gt; - Small, drop-in Swift UIKit keyboard manager for iOS apps-helps manage keyboard's screen presence and behavior without notification center.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bonyadmitr/KeyboardHideManager"&gt;KeyboardHideManager&lt;/a&gt; - Codeless manager to hide keyboard by tapping on views for iOS written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/1amageek/Toolbar"&gt;Toolbar&lt;/a&gt; - Awesome autolayout Toolbar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IdleHandsApps/IHKeyboardAvoiding"&gt;IHKeyboardAvoiding&lt;/a&gt; - A drop-in universal solution for keeping any UIView visible when the keyboard is being shown - no more UIScrollViews!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/NumPad"&gt;NumPad&lt;/a&gt; - Number Pad (inspired by Square's design).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chriszielinski/Ribbon"&gt;Ribbon&lt;/a&gt; - A simple cross-platform toolbar/custom input accessory view library for iOS &amp;amp; macOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-label" class="anchor" aria-hidden="true" href="#label"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Label&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lexrus/LTMorphingLabel"&gt;LTMorphingLabel&lt;/a&gt; - Graceful morphing effects for UILabel written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/optonaut/ActiveLabel.swift"&gt;ActiveLabel.swift&lt;/a&gt; - UILabel drop-in replacement supporting Hashtags (#), Mentions (@) and URLs (http://) written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mineschan/MZTimerLabel"&gt;MZTimerLabel&lt;/a&gt; - A handy class for iOS to use UILabel as a countdown timer or stopwatch just like in Apple Clock App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suzuki-0000/CountdownLabel"&gt;CountdownLabel&lt;/a&gt; - Simple countdown UILabel with morphing animation, and some useful function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/IncrementableLabel"&gt;IncrementableLabel&lt;/a&gt; - Incrementable label for iOS, macOS, and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TTTAttributedLabel/TTTAttributedLabel"&gt;TTTAttributedLabel&lt;/a&gt; - A drop-in replacement for UILabel that supports attributes, data detectors, links, and more&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/me-abhinav/NumberMorphView"&gt;NumberMorphView&lt;/a&gt; - A label view for displaying numbers which can transition or animate using a technique called number tweening or number morphing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/GlitchLabel"&gt;GlitchLabel&lt;/a&gt; - Glitching UILabel for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomknig/TOMSMorphingLabel"&gt;TOMSMorphingLabel&lt;/a&gt; - Configurable morphing transitions between text values of a label.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tobihagemann/THLabel"&gt;THLabel&lt;/a&gt; - UILabel subclass, which additionally allows shadow blur, inner shadow, stroke text and fill gradient.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zipme/RQShineLabel"&gt;RQShineLabel&lt;/a&gt; - Secret app like text animation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/overboming/ZCAnimatedLabel"&gt;ZCAnimatedLabel&lt;/a&gt; - UILabel replacement with fine-grain appear/disappear animation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mukeshthawani/TriLabelView"&gt;TriLabelView&lt;/a&gt; - A triangle shaped corner label view for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Preloader.Ophiuchus"&gt;Preloader.Ophiuchus&lt;/a&gt; - Custom Label to apply animations on whole text or letters.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mtl/MTLLinkLabel"&gt;MTLLinkLabel&lt;/a&gt; - MTLLinkLabel is linkable UILabel. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dataxpress/UICountingLabel/"&gt;UICountingLabel&lt;/a&gt; - Adds animated counting support to UILabel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dnKaratzas/SlidingText"&gt;SlidingText&lt;/a&gt; -  Swift UIView for sliding text with page indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/javalnanda/NumericAnimatedLabel/"&gt;NumericAnimatedLabel&lt;/a&gt; -  Swift UIView for showing numeric label with incremental and decremental step animation while changing value. Useful for scenarios like displaying currency.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/JSLabel"&gt;JSLabel&lt;/a&gt; -  A simple designable subclass on UILabel with extra IBDesignable and Blinking features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/AnimatedMaskLabel"&gt;AnimatedMaskLabel&lt;/a&gt; -  Animated Mask Label is a nice gradient animated label. This is an easy way to add a shimmering effect to any view in your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stephan-tolksdorf/STULabel"&gt;STULabel&lt;/a&gt; -  A label view that's faster than UILabel and supports asynchronous rendering, links with UIDragInteraction, very flexible text truncation, Auto Layout, UIAccessibility and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-login" class="anchor" aria-hidden="true" href="#login"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Login&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/awesome-labs/LFLoginController"&gt;LFLoginController&lt;/a&gt; - Customizable login screen, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IcaliaLabs/LoginKit"&gt;LoginKit&lt;/a&gt; - LoginKit is a quick and easy way to add a Login/Signup UX to your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cely-tools/Cely"&gt;Cely&lt;/a&gt; - Plug-n-Play login framework written in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-menu" class="anchor" aria-hidden="true" href="#menu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Menu&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/evnaz/ENSwiftSideMenu"&gt;ENSwiftSideMenu&lt;/a&gt; - A simple side menu for iOS 7/8 written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/romaonthego/RESideMenu"&gt;RESideMenu&lt;/a&gt; - iOS 7/8 style side menu with parallax effect inspired by Dribbble shots.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SSA111/SSASideMenu"&gt;SSASideMenu&lt;/a&gt; - A Swift implementation of RESideMenu. A iOS 7/8 style side menu with parallax effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bradjasper/radialmenu"&gt;RadialMenu&lt;/a&gt; - RadialMenu is a custom control for providing a touch context menu (like iMessage recording in iOS 8) built with Swift &amp;amp; POP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arn00s/cariocamenu"&gt;cariocamenu&lt;/a&gt; - The fastest zero-tap iOS menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vangelov/VLDContextSheet"&gt;VLDContextSheet&lt;/a&gt; - Context menu similar to the one in the Pinterest iOS app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/GuillotineMenu"&gt;GuillotineMenu&lt;/a&gt; - Our Guillotine Menu Transitioning Animation implemented in Swift reminds a bit of a notorious killing machine.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pixyzehn/MediumMenu"&gt;MediumMenu&lt;/a&gt; - A menu based on Medium iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hossamghareeb/SwiftySideMenu"&gt;SwiftySideMenu&lt;/a&gt; - SwiftySideMenu is a lightweight and easy to use side menu controller to add left menu and center view controllers with scale animation based on Pop framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lilei644/LLSlideMenu"&gt;LLSlideMenu&lt;/a&gt; - This is a spring slide menu for iOS apps&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/Swift-Slide-Menu"&gt;Swift-Slide-Menu&lt;/a&gt; - A Slide Menu, written in Swift, inspired by Slide Menu Material Design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cxa/MenuItemKit"&gt;MenuItemKit&lt;/a&gt; - UIMenuItem with image and block(closure)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhamBaTho/BTNavigationDropdownMenu"&gt;BTNavigationDropdownMenu&lt;/a&gt; - The elegant dropdown menu, written in Swift, appears underneath navigation bar to display a list of related items when a user click on the navigation title.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexLittlejohn/ALRadialMenu"&gt;ALRadialMenu&lt;/a&gt; - A radial/circular menu featuring spring animations. Written in swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azuritul/AZDropdownMenu"&gt;AZDropdownMenu&lt;/a&gt; - An easy to use dropdown menu that supports images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/circle-menu"&gt;CircleMenu&lt;/a&gt; - An animated, multi-option menu button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dekatotoro/SlideMenuControllerSwift"&gt;SlideMenuControllerSwift&lt;/a&gt; - iOS Slide Menu View based on Google+, iQON, Feedly, Ameba iOS app. It is written in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonkykong/SideMenu"&gt;SideMenu&lt;/a&gt; - Simple side menu control in Swift inspired by Facebook. Right and Left sides. Lots of customization and animation options. Can be implemented in Storyboard with no code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cemolcay/CategorySliderView"&gt;CategorySliderView&lt;/a&gt; - slider view for choosing categories. add any UIView type as category item view. Fully customisable&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxkonovalov/MKDropdownMenu"&gt;MKDropdownMenu&lt;/a&gt; - A Dropdown Menu for iOS with many customizable parameters to suit any needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monoqlo/ExpandingMenu"&gt;ExpandingMenu&lt;/a&gt; - ExpandingMenu is menu button for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PageMenu/PageMenu"&gt;PageMenu&lt;/a&gt; - A paging menu controller built from other view controllers placed inside a scroll view (like Spotify, Windows Phone, Instagram)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zsy78191/XXXRoundMenuButton"&gt;XXXRoundMenuButton&lt;/a&gt; - A simple circle style menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sunilsharma08/IGCMenu"&gt;IGCMenu&lt;/a&gt; - Grid and Circular menu with animation.Easy to customise.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eejahromi/EEJSelectMenu"&gt;EEJSelectMenu&lt;/a&gt; - Single selection menu with cool animations, responsive with all screen sizes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bestwnh/IGLDropDownMenu"&gt;IGLDropDownMenu&lt;/a&gt; - An iOS drop down menu with pretty animation and easy to customize.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Side-Menu.iOS"&gt;Side-Menu.iOS&lt;/a&gt; - Animated side menu with customizable UI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xhzengAIB/PopMenu"&gt;PopMenu&lt;/a&gt; - PopMenu is pop animation menu inspired by Sina weibo / NetEase app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/FlowingMenu"&gt;FlowingMenu&lt;/a&gt; - Interactive view transition to display menus with flowing and bouncing effects in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Persei"&gt;Persei&lt;/a&gt; - Animated top menu for UITableView / UICollectionView / UIScrollView written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AssistoLab/DropDown"&gt;DropDown&lt;/a&gt; - A Material Design drop down for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KittenYang/KYGooeyMenu"&gt;KYGooeyMenu&lt;/a&gt; - A not bad gooey effects menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/teodorpatras/SideMenuController"&gt;SideMenuController&lt;/a&gt; - A side menu controller written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Context-Menu.iOS"&gt;Context-Menu.iOS&lt;/a&gt; - You can easily add awesome animated context menu to your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ViewDeck/ViewDeck"&gt;ViewDeck&lt;/a&gt; - An implementation of the sliding functionality found in the Path 2.0 or Facebook iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edekhayser/FrostedSidebar"&gt;FrostedSidebar&lt;/a&gt; - Hamburger Menu using Swift and iOS 8 API's&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nightonke/VHBoomMenuButton"&gt;VHBoomMenuButton&lt;/a&gt; - A menu which can ... BOOM!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qmathe/DropDownMenuKit"&gt;DropDownMenuKit&lt;/a&gt; - A simple, modular and highly customizable UIKit menu, that can be attached to the navigation bar or toolbar, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anatoliyv/RevealMenuController"&gt;RevealMenuController&lt;/a&gt; - Expandable item groups, custom position and appearance animation. Similar to ActionSheet style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robertherdzik/RHSideButtons"&gt;RHSideButtons&lt;/a&gt; - Library provides easy to implement variation of Android (Material Design) Floating Action Button for iOS. You can use it as your app small side menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hu55a1n1/Swift-CircleMenu"&gt;Swift-CircleMenu&lt;/a&gt; - Rotating circle menu written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dogo/AKSideMenu"&gt;AKSideMenu&lt;/a&gt; - Beautiful iOS side menu library with parallax effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/handsomecode/InteractiveSideMenu"&gt;InteractiveSideMenu&lt;/a&gt; - Customizable iOS Interactive Side Menu written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/YNDropDownMenu"&gt;YNDropDownMenu&lt;/a&gt; - Adorable iOS drop down menu with Swift3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kawoou/KWDrawerController"&gt;KWDrawerController&lt;/a&gt; - Drawer view controller that easy to use!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/javalnanda/JNDropDownMenu"&gt;JNDropDownMenu&lt;/a&gt; - Easy to use tableview style drop down menu with multi-column support written in Swift3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/fan-menu"&gt;FanMenu&lt;/a&gt; - Menu with a circular layout based on Macaw.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uptechteam/AirBar"&gt;AirBar&lt;/a&gt; - UIScrollView driven expandable menu written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fahidattique55/FAPanels"&gt;FAPanels&lt;/a&gt; - FAPanels for transition&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yysskk/SwipeMenuViewController"&gt;SwipeMenuViewController&lt;/a&gt; - Swipable tab and menu View and ViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tungvoduc/DTPagerController"&gt;DTPagerController&lt;/a&gt; - A fully customizable container view controller to display set of ViewControllers in horizontal scroller&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kazuhiro4949/PagingKit"&gt;PagingKit&lt;/a&gt; - PagingKit provides customizable menu UI It has more flexible layout and design than the other libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Dropdowns"&gt;Dropdowns&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="droplet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a7.png"&gt;üíß&lt;/g-emoji&gt; Dropdown in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rechsteiner/Parchment"&gt;Parchment&lt;/a&gt; - A paging view controller with a highly customizable menu. Built on UICollectionView, with support for custom layouts and infinite data sources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GitHawkApp/ContextMenu"&gt;ContextMenu&lt;/a&gt; - An iOS context menu UI inspired by Things 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antoniocasero/Panels"&gt;Panels&lt;/a&gt; - Panels is a framework to easily add sliding panels to your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlekseyPleshkov/UIMenuScroll"&gt;UIMenuScroll&lt;/a&gt; - Creating the horizontal swiping navigation how on Facebook Messenger.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/softhausHQ/CircleBar"&gt;CircleBar&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;üî∂&lt;/g-emoji&gt; A fun, easy-to-use tab bar navigation controller for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanVorobei/SPLarkController"&gt;SPLarkController&lt;/a&gt; - Settings screen with buttons and switches.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-navigation-bar" class="anchor" aria-hidden="true" href="#navigation-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Navigation Bar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tristanhimmelman/HidingNavigationBar"&gt;HidingNavigationBar&lt;/a&gt; - Easily hide and show a view controller's navigation bar (and tab bar) as a user scrolls&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MoZhouqi/KMNavigationBarTransition"&gt;KMNavigationBarTransition&lt;/a&gt; - A drop-in universal library helps you to manage the navigation bar styles and makes transition animations smooth between different navigation bar styles while pushing or popping a view controller for all orientations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ltebean/LTNavigationBar"&gt;LTNavigationBar&lt;/a&gt; - UINavigationBar Category which allows you to change its appearance dynamically&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gmertk/BusyNavigationBar"&gt;BusyNavigationBar&lt;/a&gt; - A UINavigationBar extension to show loading effects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kingiol/KDInteractiveNavigationController"&gt;KDInteractiveNavigationController&lt;/a&gt; - A UINavigationController subclass that support pop interactive UINavigationbar with hidden or show.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/AMScrollingNavbar"&gt;AMScrollingNavbar&lt;/a&gt; - Scrollable UINavigationBar that follows the scrolling of a UIScrollView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wilbertliu/NavKit"&gt;NavKit&lt;/a&gt; - Simple and integrated way to customize navigation bar experience on iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DanisFabric/RainbowNavigation"&gt;RainbowNavigation&lt;/a&gt; - An easy way to change backgroundColor of UINavigationBar when Push &amp;amp; Pop&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimOliver/TONavigationBar"&gt;TONavigationBar&lt;/a&gt; - A simple subclass that adds the ability to set the navigation bar background to 'clear' and gradually transition it visibly back in, similar to the effect in the iOS Music app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-pickerview" class="anchor" aria-hidden="true" href="#pickerview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PickerView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/skywinder/ActionSheetPicker-3.0/"&gt;ActionSheetPicker-3.0&lt;/a&gt; - Quickly reproduce the dropdown UIPickerView / ActionSheet functionality on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/filipealva/PickerView"&gt;PickerView&lt;/a&gt; - A customizable alternative to UIPickerView in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/squimer/DatePickerDialog-iOS-Swift"&gt;DatePickerDialog&lt;/a&gt; - Date picker dialog for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chenzeyu/CZPicker"&gt;CZPicker&lt;/a&gt; - A picker view shown as a popup for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alikaragoz/AIDatePickerController"&gt;AIDatePickerController&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="date" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c5.png"&gt;üìÖ&lt;/g-emoji&gt; UIDatePicker modally presented with iOS 7 custom transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/4taras4/CountryCode"&gt;CountryPicker&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="date" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c5.png"&gt;üìÖ&lt;/g-emoji&gt; UIPickerView with Country names flags and phoneCodes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kmcgill88/McPicker-iOS"&gt;McPicker&lt;/a&gt; - A customizable, closure driven UIPickerView drop-in solution with animations that is rotation ready.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blueapron/Mandoline"&gt;Mandoline&lt;/a&gt; - An iOS picker view to serve all your "picking" needs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/di2pra/D2PDatePicker"&gt;D2PDatePicker&lt;/a&gt; - Elegant and Easy-to-Use iOS Swift Date Picker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kizitonwose/CountryPickerView"&gt;CountryPickerView&lt;/a&gt;- A simple, customizable view for efficiently collecting country information in iOS apps&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kwallet/planet"&gt;planet&lt;/a&gt; - A country picker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mustafaibrahim989/MICountryPicker"&gt;MICountryPicker&lt;/a&gt; - Swift country picker with search option.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abhiperry/ADDatePicker"&gt;ADDatePicker&lt;/a&gt; - A fully customizable iOS Horizontal PickerView library, written in pure swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SURYAKANTSHARMA/CountryPicker"&gt;SKCountryPicker&lt;/a&gt; - A simple, customizable Country picker for picking country or dialing code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-popup" class="anchor" aria-hidden="true" href="#popup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Popup&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rynecheow/PopupKit"&gt;PopupKit&lt;/a&gt; - A simple and flexible class for presenting custom views as a popup in iOS and tvOS, maintained from &lt;a href="https://github.com/jmascia/KLCPopup"&gt;KLCPopup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adad184/MMPopupView"&gt;MMPopupView&lt;/a&gt; - Pop-up based view(e.g. alert sheet), can easily customize.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kevin0571/STPopup"&gt;STPopup&lt;/a&gt; - STPopup provides a UINavigationController in popup style, for both iPhone and iPad.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/psy2k/NMPopUpView"&gt;NMPopUpView&lt;/a&gt; - Simple iOS class for showing nice popup windows. Swift and Objective-C versions available.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daisuke310vvv/PopupController"&gt;PopupController&lt;/a&gt; - A customizable controller for showing temporary popup view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/binchik/SubscriptionPrompt"&gt;SubscriptionPrompt&lt;/a&gt; - Subscription View Controller like the Tinder uses&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IcaliaLabs/Presentr"&gt;Presentr&lt;/a&gt; - Wrapper for custom ViewController presentations in iOS 8+&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Orderella/PopupDialog"&gt;PopupDialog&lt;/a&gt; - A simple, customizable popup dialog for iOS written in Swift. Replaces UIAlertControllers alert style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/SelectionDialog"&gt;SelectionDialog&lt;/a&gt; - Simple selection dialog.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/AZDialogViewController"&gt;AZDialogViewController&lt;/a&gt; - A highly customizable alert dialog controller that mimics Snapchat's alert dialog.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MarioIannotta/MIBlurPopup"&gt;MIBlurPopup&lt;/a&gt; - MIBlurPopup let you create amazing popups with a blurred background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeoNatan/LNPopupController"&gt;LNPopupController&lt;/a&gt; - a framework for presenting view controllers as popups of other view controllers, much like the Apple Music and Podcasts apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shin8484/PopupWindow"&gt;PopupWindow&lt;/a&gt; - PopupWindow is a simple Popup using another UIWindow in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iamshezad/SHPopup"&gt;SHPopup&lt;/a&gt; - SHPopup is a simple lightweight library for popup view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/corin8823/Popover"&gt;Popover&lt;/a&gt; - Popover is a balloon library like Facebook app. It is written in pure swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huri000/SwiftEntryKit"&gt;SwiftEntryKit&lt;/a&gt; - A highly customizable popups, alerts and banners presenter for iOS. It offers various presets and is written in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JonyFang/FFPopup"&gt;FFPopup&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="shinto_shrine" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26e9.png"&gt;‚õ©&lt;/g-emoji&gt;FFPopup is a lightweight library for presenting custom views as a popup.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-progressview" class="anchor" aria-hidden="true" href="#progressview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ProgressView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/khawajafarooq/ProgressMeter"&gt;ProgressMeter&lt;/a&gt; - Display the progress on a meter with customized annotations for iOS developed in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keygx/GradientCircularProgress"&gt;GradientCircularProgress&lt;/a&gt; - Customizable progress indicator library in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-pull-to-refresh" class="anchor" aria-hidden="true" href="#pull-to-refresh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pull to Refresh&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gontovnik/DGElasticPullToRefresh"&gt;DGElasticPullToRefresh&lt;/a&gt; - Elastic pull to refresh for iOS developed in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/entotsu/PullToBounce"&gt;PullToBounce&lt;/a&gt; - Animated "Pull To Refresh" Library for UIScrollView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/samvermette/SVPullToRefresh"&gt;SVPullToRefresh&lt;/a&gt; - Give pull-to-refresh &amp;amp; infinite scrolling to any UIScrollView with 1 line of code. &lt;a href="http://samvermette.com/314" rel="nofollow"&gt;http://samvermette.com/314&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uzysjung/UzysAnimatedGifPullToRefresh"&gt;UzysAnimatedGifPullToRefresh&lt;/a&gt; - Add PullToRefresh using animated GIF to any scrollView with just simple code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cemolcay/PullToRefreshCoreText"&gt;PullToRefreshCoreText&lt;/a&gt; - PullToRefresh extension for all UIScrollView type classes with animated text drawing style&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boztalay/BOZPongRefreshControl"&gt;BOZPongRefreshControl&lt;/a&gt; - A pull-down-to-refresh control for iOS that plays pong, originally created for the MHacks III iOS app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coolbeet/CBStoreHouseRefreshControl"&gt;CBStoreHouseRefreshControl&lt;/a&gt; - Fully customizable pull-to-refresh control inspired by Storehouse iOS app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peiweichen/SurfingRefreshControl"&gt;SurfingRefreshControl&lt;/a&gt; - Inspired by CBStoreHouseRefreshControl.Customizable pull-to-refresh control,written in pure Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mentionapp/mntpulltoreact"&gt;mntpulltoreact&lt;/a&gt; - One gesture, many actions. An evolution of Pull to Refresh.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Antondomashnev/ADChromePullToRefresh"&gt;ADChromePullToRefresh&lt;/a&gt; - Chrome iOS app style pull to refresh with multiple actions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dasdom/BreakOutToRefresh"&gt;BreakOutToRefresh&lt;/a&gt; - A playable pull to refresh view using SpriteKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CoderMJLee/MJRefresh"&gt;MJRefresh&lt;/a&gt; An easy way to use pull-to-refresh.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoang-tran/HTPullToRefresh"&gt;HTPullToRefresh&lt;/a&gt; - Easily add vertical and horizontal pull to refresh to any UIScrollView. Can also add multiple pull-to-refesh views at once.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dekatotoro/PullToRefreshSwift"&gt;PullToRefreshSwift&lt;/a&gt; - iOS Simple Cool PullToRefresh Library. It is written in pure swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delannoyk/GIFRefreshControl"&gt;GIFRefreshControl&lt;/a&gt; - GIFRefreshControl is a pull to refresh that supports GIF images as track animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fruitcoder/ReplaceAnimation"&gt;ReplaceAnimation&lt;/a&gt; - Pull-to-refresh animation in UICollectionView with a sticky header flow layout, written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/PullToMakeSoup"&gt;PullToMakeSoup&lt;/a&gt; - Custom animated pull-to-refresh that can be easily added to UIScrollView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Onix-Systems/RainyRefreshControl"&gt;RainyRefreshControl&lt;/a&gt; - Simple refresh control for iOS inspired by &lt;a href="https://dribbble.com/shots/2242263--1-Pull-to-refresh-Freebie-Weather-Concept" rel="nofollow"&gt;concept&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eggswift/pull-to-refresh"&gt;ESPullToRefresh&lt;/a&gt; - Customisable pull-to-refresh, including nice animation on the top&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CRAnimation/CRRefresh"&gt;CRRefresh&lt;/a&gt; - An easy way to use pull-to-refresh.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenFeyn/KafkaRefresh"&gt;KafkaRefresh&lt;/a&gt; - Highly scalable, custom, multi-style refresh framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-rating-stars" class="anchor" aria-hidden="true" href="#rating-stars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rating Stars&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/glenyi/FloatRatingView"&gt;FloatRatingView&lt;/a&gt; - Whole, half or floating point ratings control written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zekunyan/TTGEmojiRate"&gt;TTGEmojiRate&lt;/a&gt; - An emoji-liked rating view for iOS, implemented in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peterprokop/StarryStars"&gt;StarryStars&lt;/a&gt; - StarryStars is iOS GUI library for displaying and editing ratings&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/Cosmos"&gt;Cosmos&lt;/a&gt; - A star rating control for iOS / Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hsousa/HCSStarRatingView"&gt;HCSStarRatingView&lt;/a&gt; - Simple star rating view for iOS written in Objective-C&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatiBot/MBRateApp"&gt;MBRateApp&lt;/a&gt; - A groovy app rate stars screen for iOS written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbolatov/RPInteraction"&gt;RPInteraction&lt;/a&gt; - Review page interaction - handy and pretty way to ask for review.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-scrollview" class="anchor" aria-hidden="true" href="#scrollview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ScrollView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ktanaka117/ScrollingFollowView"&gt;ScrollingFollowView&lt;/a&gt; - ScrollingFollowView is a simple view which follows UIScrollView scrolling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pronebird/UIScrollView-InfiniteScroll"&gt;UIScrollView-InfiniteScroll&lt;/a&gt; - UIScrollView infinite scroll category.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zjmdp/GoAutoSlideView"&gt;GoAutoSlideView&lt;/a&gt; - GoAutoSlideView extends UIScrollView by featuring infinitely and automatically slide.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terenceLuffy/AppStoreStyleHorizontalScrollView"&gt;AppStoreStyleHorizontalScrollView&lt;/a&gt; - App store style horizontal scroll view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgr-ksmt/PullToDismiss"&gt;PullToDismiss&lt;/a&gt; - You can dismiss modal viewcontroller by pulling scrollview or navigationbar in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/SpreadsheetView"&gt;SpreadsheetView&lt;/a&gt; - Full configurable spreadsheet view user interfaces for iOS applications. With this framework, you can easily create complex layouts like schedule, gantt chart or timetable as if you are using Excel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AppliKeySolutions/VegaScroll"&gt;VegaScroll&lt;/a&gt; - VegaScroll is a lightweight animation flowlayout for UICollectionView completely written in Swift 4, compatible with iOS 11 and Xcode 9&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tdscientist/ShelfView-iOS"&gt;ShelfView-iOS&lt;/a&gt; - iOS custom view to display books on shelf&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/touchlane/SlideController"&gt;SlideController&lt;/a&gt; - SlideController is simple and flexible UI component completely written in Swift. It is a nice alternative for UIPageViewController built using power of generic types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huri000/CrownControl"&gt;CrownControl&lt;/a&gt; - Inspired by the Apple Watch Digital Crown, CrownControl is a tiny accessory view that enables scrolling through scrollable content without lifting your thumb.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Jiar/SegementSlide"&gt;SegementSlide&lt;/a&gt; - Multi-tier UIScrollView nested scrolling solution.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-segmented-control" class="anchor" aria-hidden="true" href="#segmented-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Segmented Control&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gmarm/BetterSegmentedControl"&gt;BetterSegmentedControl&lt;/a&gt; - An easy to use, customizable replacement for UISegmentedControl &amp;amp; UISwitch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stormotion-Mobile/LUNSegmentedControl"&gt;LUNSegmentedControl&lt;/a&gt; - Customizable segmented control with interactive animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alikaragoz/AKASegmentedControl"&gt;AKASegmentedControl&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="chocolate_bar" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f36b.png"&gt;üç´&lt;/g-emoji&gt; Fully customizable Segmented Control for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twicketapp/TwicketSegmentedControl"&gt;TwicketSegmentedControl&lt;/a&gt; - Custom UISegmentedControl replacement for iOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sasojadrovski/SJFluidSegmentedControl"&gt;SJFluidSegmentedControl&lt;/a&gt; - A segmented control with custom appearance and interactive animations. Written in Swift 3.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HeshamMegid/HMSegmentedControl"&gt;HMSegmentedControl&lt;/a&gt; - A drop-in replacement for UISegmentedControl mimicking the style of the segmented control used in Google Currents and various other Google products.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/afishhhhh/YUSegment"&gt;YUSegment&lt;/a&gt; - A customizable segmented control for iOS. Supports both text and image.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MultiSelectSegmentedControl"&gt;MultiSelectSegmentedControl&lt;/a&gt; - adds Multiple-Selection to the standard &lt;code&gt;UISegmentedControl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KittenYang/DynamicMaskSegmentSwitch"&gt;DynamicMaskSegmentSwitch&lt;/a&gt; - A segment switcher with dynamic text mask effect&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TBXark/PinterestSegment"&gt;PinterestSegment&lt;/a&gt; - A Pinterest-like segment control with masking animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BowdusBrown/Rotary"&gt;Rotary&lt;/a&gt; - A customisable rotary wheel composed of selectable segments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gontovnik/DGRunkeeperSwitch"&gt;DGRunkeeperSwitch&lt;/a&gt; - Runkeeper design switch control (two part segment control)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-slider" class="anchor" aria-hidden="true" href="#slider"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slider&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/12Rockets/VolumeControl"&gt;VolumeControl&lt;/a&gt; - Custom volume control for iPhone featuring a well-designed round slider.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ekhoo/WESlider"&gt;WESlider&lt;/a&gt; - Simple and light weight slider with chapter management&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shushutochako/IntervalSlider"&gt;IntervalSlider&lt;/a&gt; - IntervalSlider is a slider library like ReutersTV app. written in pure swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/warchimede/RangeSlider"&gt;RangeSlider&lt;/a&gt; - A simple range slider made in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shushutochako/CircleSlider"&gt;CircleSlider&lt;/a&gt; - CircleSlider is a Circular slider library. written in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/MARKRangeSlider"&gt;MARKRangeSlider&lt;/a&gt; - A custom reusable slider control with 2 thumbs (range slider).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alskipp/ASValueTrackingSlider"&gt;ASValueTrackingSlider&lt;/a&gt; - A UISlider subclass that displays the slider value in a popup view&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TomThorpe/TTRangeSlider"&gt;TTRangeSlider&lt;/a&gt; - A slider, similar in style to UISlider, but which allows you to pick a minimum and maximum range.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MedvedevMax/MMSegmentSlider"&gt;MMSegmentSlider&lt;/a&gt; - Customizable animated slider for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spromicky/StepSlider"&gt;StepSlider&lt;/a&gt; - StepSlider its custom implementation of slider such as UISlider for preset integer values.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JellyDevelopment/JDSlider"&gt;JDSlider&lt;/a&gt; - An iOS Slider written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rehatkathuria/SnappingSlider"&gt;SnappingSlider&lt;/a&gt; - A beautiful slider control for iOS built purely upon Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EranBoudjnah/MTCircularSlider"&gt;MTCircularSlider&lt;/a&gt; - A feature-rich circular slider control.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonkykong/VerticalSlider"&gt;VerticalSlider&lt;/a&gt; - VerticalSlider is a vertical implementation of the UISlider slider control.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/taglia3/CircularSlider"&gt;CircularSlider&lt;/a&gt; - A powerful Circular Slider. It's written in Swift, it's 100% IBDesignable and all parameters are IBInspectable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HamzaGhazouani/HGCircularSlider"&gt;HGCircularSlider&lt;/a&gt; - A custom reusable circular slider control for iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/RangeSeekSlider"&gt;RangeSeekSlider&lt;/a&gt; - A customizable range slider for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/SectionedSlider"&gt;SectionedSlider&lt;/a&gt; - Control Center Slider.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MultiSlider"&gt;MultiSlider&lt;/a&gt; - UISlider clone with multiple thumbs and values, optional snap intervals, optional value labels.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agilie/AGCircularPicker"&gt;AGCircularPicker&lt;/a&gt; - AGCircularPicker is helpful component for creating a controller aimed to manage any calculated parameter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/fluid-slider"&gt;Fluid Slider&lt;/a&gt; - A slider widget with a popup bubble displaying the precise value selected.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-splash-view" class="anchor" aria-hidden="true" href="#splash-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splash View&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/callumboddy/CBZSplashView"&gt;CBZSplashView&lt;/a&gt; - Twitter style Splash Screen View. Grows to reveal the Initial view behind.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sachinkesiraju/SKSplashView"&gt;SKSplashView&lt;/a&gt; - Create custom animated splash views similar to the ones in the Twitter, Uber and Ping iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PiXeL16/RevealingSplashView"&gt;RevealingSplashView&lt;/a&gt; - A Splash view that animates and reveals its content, inspired by Twitter splash&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-status-bar" class="anchor" aria-hidden="true" href="#status-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status Bar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MaximKotliar/Bartinter"&gt;Bartinter&lt;/a&gt; - Status bar tint depending on content behind, updates dynamically.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-stepper" class="anchor" aria-hidden="true" href="#stepper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stepper&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectFreeze/PFStepper"&gt;PFStepper&lt;/a&gt; - May be the most elegant stepper you have ever had!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BalestraPatrick/ValueStepper"&gt;ValueStepper&lt;/a&gt; - A Stepper object that displays its value.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gmertk/GMStepper"&gt;GMStepper&lt;/a&gt; - A stepper with a sliding label in the middle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arn00s/barceloneta"&gt;barceloneta&lt;/a&gt; - The right way to increment/decrement values with a simple gesture on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/SnappingStepper"&gt;SnappingStepper&lt;/a&gt; - An elegant alternative to the UIStepper written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SinaMoetakef/SMNumberWheel"&gt;SMNumberWheel&lt;/a&gt; - A custom control written in Swift, which is ideal for picking numbers very fast but yet very accurate using a rotating wheel&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-switch" class="anchor" aria-hidden="true" href="#switch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Switch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alsedi/AnimatedSwitch"&gt;AnimatedSwitch&lt;/a&gt; - UISwitch which paints over the parent view with the color in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/ViralSwitch"&gt;ViralSwitch&lt;/a&gt; - A UISwitch that infects its superview with its tint color.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JunichiT/JTMaterialSwitch"&gt;JTMaterialSwitch&lt;/a&gt; - A customizable switch UI with ripple effect and bounce animations, inspired from Google's Material Design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TBXark/TKSwitcherCollection"&gt;TKSwitcherCollection&lt;/a&gt; - An animate switch collection&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bvogelzang/SevenSwitch"&gt;SevenSwitch&lt;/a&gt; - iOS7 style drop in replacement for UISwitch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kovpas/PMZSwitch"&gt;PMZSwitch&lt;/a&gt; - Yet another animated toggle&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/knn90/Switcher"&gt;Switcher&lt;/a&gt; - Swift - Custom UISwitcher with animation when change status&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/paper-switch"&gt;RAMPaperSwitch&lt;/a&gt; - RAMPaperSwitch is a Swift module which paints over the parent view when the switch is turned on.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cocoatoucher/AIFlatSwitch"&gt;AIFlatSwitch&lt;/a&gt; - A flat component alternative to UISwitch on iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pham/Switch"&gt;Switch&lt;/a&gt; - An iOS switch control implemented in Swift with full Interface Builder support.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tab-bar" class="anchor" aria-hidden="true" href="#tab-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tab Bar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ezescaruli/ESTabBarController"&gt;ESTabBarController&lt;/a&gt; - A tab bar controller for iOS that allows highlighting buttons and setting custom actions to them.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KittenYang/GooeyTabbar"&gt;GooeyTabbar&lt;/a&gt; - A gooey effect tabbar&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/animated-tab-bar"&gt;animated-tab-bar&lt;/a&gt; - RAMAnimatedTabBarController is a Swift module for adding animation to tabbar items.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/FoldingTabBar.iOS"&gt;FoldingTabBar.iOS&lt;/a&gt; - Folding Tab Bar and Tab Bar Controller&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Goles/GGTabBar"&gt;GGTabBar&lt;/a&gt; - Another UITabBar &amp;amp; UITabBarController (iOS Tab Bar) replacement, but uses Auto Layout for arranging it's views hierarchy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/adaptive-tab-bar"&gt;adaptive-tab-bar&lt;/a&gt; - AdaptiveController is a 'Progressive Reduction' Swift module for adding custom states to Native or Custom iOS UI elements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lucoceano/Pager"&gt;Pager&lt;/a&gt; - Easily create sliding tabs with Pager&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLPagerTabStrip"&gt;XLPagerTabStrip&lt;/a&gt; - Android PagerTabStrip for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EndouMari/TabPageViewController"&gt;TabPageViewController&lt;/a&gt; - Paging view controller and scroll tab view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/winslowdibona/TabDrawer"&gt;TabDrawer&lt;/a&gt; - Customizable TabBar UI element that allows you to run a block of code upon TabBarItem selection, written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fortmarek/SwipeViewController"&gt;SwipeViewController&lt;/a&gt; - SwipeViewController is a Swift modification of RKSwipeBetweenViewControllers - navigate between pages / ViewControllers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/ColorMatchTabs"&gt;ColorMatchTabs&lt;/a&gt; - Interesting way to display tabs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antiguab/BATabBarController"&gt;BATabBarController&lt;/a&gt; - A TabBarController with a unique animation for selection&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aryaxt/ScrollPager"&gt;ScrollPager&lt;/a&gt; - A scroll pager that displays a list of tabs (segments) and manages paging between given views&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Segmentio"&gt;Segmentio&lt;/a&gt; - Animated top/bottom segmented control written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ykyouhei/KYWheelTabController"&gt;KYWheelTabController&lt;/a&gt; - KYWheelTabController is a subclass of UITabBarController.It displays the circular menu instead of UITabBar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/odedharth/SuperBadges"&gt;SuperBadges&lt;/a&gt; - Add emojis and colored dots as badges for your Tab Bar buttons&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/AZTabBarController"&gt;AZTabBarController&lt;/a&gt; - A custom tab bar controller for iOS written in Swift 3.0&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/D-32/MiniTabBar"&gt;MiniTabBar&lt;/a&gt; - A clean simple alternative to the UITabBar&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcosgriselli/SwipeableTabBarController"&gt;SwipeableTabBarController&lt;/a&gt; - UITabBarController with swipe interaction between its tabs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/smahajan28/SMSwipeableTabView"&gt;SMSwipeableTabView&lt;/a&gt; - Swipeable Views with Tabs (Like Android SwipeView With Tabs Layout)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uias/Tabman"&gt;Tabman&lt;/a&gt; - A powerful paging view controller with indicator bar for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EzimetYusup/WormTabStrip"&gt;WormTabStrip&lt;/a&gt; Beatiful ViewPager For iOS written in Swift  (inspired by Android &lt;a href="https://github.com/ogaclejapan/SmartTabLayout"&gt;SmartTabLayout&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simformsolutions/SSCustomTabMenu"&gt;SSCustomTabMenu&lt;/a&gt; Simple customizable iOS bottom menu with Tabbar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yervandsar/SmoothTab"&gt;SmoothTab&lt;/a&gt; - Smooth customizable tabs for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yervandsar/ExpandedTabBar"&gt;ExpandedTabBar&lt;/a&gt; - Very creative designed solution for "more" items in UITabBarController&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-table-view--collection-view" class="anchor" aria-hidden="true" href="#table-view--collection-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table View / Collection View&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-table-view" class="anchor" aria-hidden="true" href="#table-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table View&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MortimerGoro/MGSwipeTableCell"&gt;MGSwipeTableCell&lt;/a&gt; - UITableViewCell subclass that allows to display swippable buttons with a variety of transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanton/YXTPageView"&gt;YXTPageView&lt;/a&gt; - A PageView, which supporting scrolling to transition between a UIView and a UITableView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastred/ConfigurableTableViewController"&gt;ConfigurableTableViewController&lt;/a&gt; - Typed, yet Flexible Table View Controller &lt;a href="https://holko.pl/2016/01/05/typed-table-view-controller/" rel="nofollow"&gt;https://holko.pl/2016/01/05/typed-table-view-controller/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electrickangaroo/Lightning-Table"&gt;Lightning-Table&lt;/a&gt; - A declarative api for working with UITableView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/Static"&gt;Static&lt;/a&gt; - Simple static table views for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/AMWaveTransition"&gt;AMWaveTransition&lt;/a&gt; - Custom transition between viewcontrollers holding tableviews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CEWendel/SWTableViewCell"&gt;SWTableViewCell&lt;/a&gt; - An easy-to-use UITableViewCell subclass that implements a swippable content view which exposes utility buttons (similar to iOS 7 Mail Application)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/liuzhiyi1992/ZYThumbnailTableView"&gt;ZYThumbnailTableView&lt;/a&gt; - a TableView have thumbnail cell only, and you can use gesture let it expands other expansionView, all diy&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bitwit/BWSwipeRevealCell"&gt;BWSwipeRevealCell&lt;/a&gt; - A Swift library for swipeable table cells&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/preview-transition"&gt;preview-transition&lt;/a&gt; - PreviewTransition is a simple preview gallery controller&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bcylin/QuickTableViewController"&gt;QuickTableViewController&lt;/a&gt; - A simple way to create a UITableView for settings in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxsokolov/TableKit"&gt;TableKit&lt;/a&gt; - Type-safe declarative table views with Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/v-braun/VBPiledView"&gt;VBPiledView&lt;/a&gt; - Simple and beautiful stacked UIView to use as a replacement for an UITableView, UIImageView or as a menu&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tianzhuo112/VTMagic"&gt;VTMagic&lt;/a&gt; - VTMagic is a page container library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alikaragoz/MCSwipeTableViewCell"&gt;MCSwipeTableViewCell&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="point_up_2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f446.png"&gt;üëÜ&lt;/g-emoji&gt; Convenient UITableViewCell subclass that implements a swippable content to trigger actions (similar to the Mailbox app).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mindz-eye/MYTableViewIndex"&gt;MYTableViewIndex&lt;/a&gt; - A pixel perfect replacement for UITableView section index, written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/palmin/ios-dragable-table-cells"&gt;ios-dragable-table-cells&lt;/a&gt; - Support for drag-n-drop of UITableViewCells in a navigation hierarchy of view controllers. You drag cells by tapping and holding them.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DavdRoman/Bohr"&gt;Bohr&lt;/a&gt; - Bohr allows you to set up a settings screen for your app with three principles in mind: ease, customization and extensibility.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adamshin/SwiftReorder"&gt;SwiftReorder&lt;/a&gt; - Add drag-and-drop reordering to any table view with just a few lines of code. Robust, lightweight, and completely customizable. [e]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/HoverConversion"&gt;HoverConversion&lt;/a&gt; - HoverConversion realized vertical paging with UITableView. UIViewController will be paging when reaching top or bottom of UITableView contentOffset.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KyoheiG3/TableViewDragger"&gt;TableViewDragger&lt;/a&gt; - A cells of UITableView can be rearranged by drag and drop.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimpiax/FlexibleTableViewController"&gt;FlexibleTableViewController&lt;/a&gt; - Swift library of generic table view controller with external data processing of functionality, like determine cell's reuseIdentifier related to indexPath, configuration of requested cell for display and cell selection handler&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edopelawi/CascadingTableDelegate"&gt;CascadingTableDelegate&lt;/a&gt; - A no-nonsense way to write cleaner UITableViewDelegate and UITableViewDataSource in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kf99916/TimelineTableViewCell"&gt;TimelineTableViewCell&lt;/a&gt; - Simple timeline view implemented by UITableViewCell written in Swift 3.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robertherdzik/RHPreviewCell"&gt;RHPreviewCell&lt;/a&gt; - I envied so much Spotify iOS app this great playlist preview cell. Now you can give your users ability to quick check "what content is hidden under your UITableViewCell".&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimOliver/TORoundedTableView"&gt;TORoundedTableView&lt;/a&gt; - A subclass of UITableView that styles it like Settings.app on iPad&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mergesort/TableFlip"&gt;TableFlip&lt;/a&gt; - A simpler way to do cool UITableView animations! (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DenTelezhkin/DTTableViewManager"&gt;DTTableViewManager&lt;/a&gt; - Protocol-oriented UITableView management, powered by generics and associated types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwipeCellKit/SwipeCellKit"&gt;SwipeCellKit&lt;/a&gt; - Swipeable UITableViewCell based on the stock Mail.app, implemented in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/ReverseExtension"&gt;ReverseExtension&lt;/a&gt; - A UITableView extension that enables cell insertion from the bottom of a table view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/SelectionList"&gt;SelectionList&lt;/a&gt; - Simple single-selection or multiple-selection checklist, based on UITableView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AfrozZaheer/AZTableViewController"&gt;AZTableViewController&lt;/a&gt; - Elegant and easy way to integrate pagination with dummy views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/SAInboxViewController"&gt;SAInboxViewController&lt;/a&gt; - UIViewController subclass inspired by "Inbox by google" animated transitioning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muyexi/StaticTableViewController"&gt;StaticTableViewController&lt;/a&gt; - Dynamically hide / show cells of static UITableViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okcupid/OKTableViewLiaison"&gt;OKTableViewLiaison&lt;/a&gt; - Framework to help you better manage UITableView configuration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3sidedcube/ThunderTable"&gt;ThunderTable&lt;/a&gt; - A simple declarative approach to UITableViewController management using a protocol-based approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-collection-view" class="anchor" aria-hidden="true" href="#collection-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection View&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jflinter/Dwifft"&gt;Dwifft&lt;/a&gt; - Swift Diff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/manuelescrig/MEVFloatingButton"&gt;MEVFloatingButton&lt;/a&gt; - An iOS drop-in UITableView, UICollectionView and UIScrollView superclass category for showing a customizable floating button on top of it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kean/Preheat"&gt;Preheat&lt;/a&gt; - Automates prefetching of content in UITableView and UICollectionView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/DisplaySwitcher"&gt;DisplaySwitcher&lt;/a&gt; - Custom transition between two collection view layouts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AliSoftware/Reusable"&gt;Reusable&lt;/a&gt; - A Swift mixin for UITableViewCells and UICollectionViewCells&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nghialv/Sapporo"&gt;Sapporo&lt;/a&gt; - Cellmodel-driven collectionview manager&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matbeich/StickyCollectionView-Swift"&gt;StickyCollectionView-Swift&lt;/a&gt; - UICollectionView layout for presenting of the overlapping cells.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKickMobile/TLIndexPathTools"&gt;TLIndexPathTools&lt;/a&gt; - TLIndexPathTools is a small set of classes that can greatly simplify your table and collection views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Instagram/IGListKit"&gt;IGListKit&lt;/a&gt; - A data-driven UICollectionView framework for building fast and flexible lists.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimpiax/FlexibleCollectionViewController"&gt;FlexibleCollectionViewController&lt;/a&gt; - Swift library of generic collection view controller with external data processing of functionality, like determine cell's reuseIdentifier related to indexPath, configuration of requested cell for display and cell selection handler etc&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/ASCollectionView"&gt;ASCollectionView&lt;/a&gt; - A Swift collection view inspired by Airbnb.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/giulio92/GLTableCollectionView"&gt;GLTableCollectionView&lt;/a&gt; - Netflix and App Store like UITableView with UICollectionView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kazuhiro4949/EditDistance"&gt;EditDistance&lt;/a&gt; - Incremental update tool for UITableView and UICollectionView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stuffrabbit/SwiftSpreadsheet"&gt;SwiftSpreadSheet&lt;/a&gt; - Spreadsheet CollectionViewLayout in Swift. Fully customizable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GenericDataSource/GenericDataSource"&gt;GenericDataSource&lt;/a&gt; - A generic small reusable components for data source implementation for UITableView/UICollectionView in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KyoheiG3/PagingView"&gt;PagingView&lt;/a&gt; - Infinite paging, Smart auto layout, Interface of similar to UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/PJFDataSource"&gt;PJFDataSource&lt;/a&gt; - PJFDataSource is a small library that provides a simple, clean architecture for your app to manage its data sources while providing a consistent user interface for common content states (i.e. loading, loaded, empty, and error).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/DataSources"&gt;DataSources&lt;/a&gt; - Type-safe data-driven List-UI Framework. (We can also use ASCollectionNode)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmick66/KDDragAndDropCollectionView"&gt;KDDragAndDropCollectionView&lt;/a&gt; - Dragging &amp;amp; Dropping data across multiple UICollectionViews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/SectionScrubber"&gt;SectionScrubber&lt;/a&gt; - A component to quickly scroll between collection view sections&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SoySauceLab/CollectionKit"&gt;CollectionKit&lt;/a&gt; - A modern Swift framework for building reusable data-driven collection components.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AfrozZaheer/AZCollectionViewController"&gt;AZCollectionViewController&lt;/a&gt; - Easy way to integrate pagination with dummy views in CollectionView, make Instagram Discover within minutes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/touchlane/CampcotCollectionView"&gt;CampcotCollectionView&lt;/a&gt; - CampcotCollectionView is a custom UICollectionView written in Swift that allows to expand and collapse sections. It provides a simple API to manage collection view appearance.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appunite/Stefan"&gt;Stefan&lt;/a&gt; - A guy that helps you manage collections and placeholders in easy way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HelloElephant/Parade"&gt;Parade&lt;/a&gt; - Parallax Scroll-Jacking Effects Engine for iOS / tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaherKSantina/MSPeekCollectionViewDelegateImplementation"&gt;MSPeekCollectionViewDelegateImplementation&lt;/a&gt; - A custom paging behavior that peeks the previous and next items in a collection view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Squarespace/simple-source"&gt;SimpleSource&lt;/a&gt; - Easy and type-safe iOS table and collection views in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bannzai/conv"&gt;Conv&lt;/a&gt; - Conv smart represent UICollectionView data structure more than UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/Carbon"&gt;Carbon&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="biking_man" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6b4.png"&gt;üö¥&lt;/g-emoji&gt; A declarative library for building component-based user interfaces in UITableView and UICollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3sidedcube/ThunderCollection"&gt;ThunderCollection&lt;/a&gt; - A simple declarative approach to UICollectionViewController management using a protocol-based approach.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DiffableDataSources"&gt;DiffableDataSources&lt;/a&gt; - A library for backporting UITableView/UICollectionViewDiffableDataSource.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-expandable-cell" class="anchor" aria-hidden="true" href="#expandable-cell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expandable Cell&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/folding-cell"&gt;folding-cell&lt;/a&gt; - FoldingCell is an expanding content cell inspired by folding paper material&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEAccordion"&gt;AEAccordion&lt;/a&gt; - UITableViewController with accordion effect (expand / collapse cells).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amratab/ThreeLevelAccordian"&gt;ThreeLevelAccordian&lt;/a&gt; - This is a customisable three level accordian with options for adding images and accessories images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/YNExpandableCell"&gt;YNExpandableCell&lt;/a&gt; - Awesome expandable, collapsible tableview cell for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nandiin/Savory"&gt;Savory&lt;/a&gt; - A swift accordion view implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okhanokbay/ExpyTableView"&gt;ExpyTableView&lt;/a&gt; - Make your table view expandable just by implementing one method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monofire/FTFoldingPaper"&gt;FTFoldingPaper&lt;/a&gt; - Emulates paper folding effect. Can be integrated with UITableView or used with other UI components.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jeantimex/CollapsibleTableSectionViewController"&gt;CollapsibleTableSectionViewController&lt;/a&gt; - A swift library to support collapsible sections in a table view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/ExpandableCell"&gt;ExpandableCell&lt;/a&gt; - Fully refactored YNExapnadableCell with more concise, bug free. Awesome expandable, collapsible tableview cell for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/expanding-collection"&gt;expanding-collection&lt;/a&gt; - ExpandingCollection is a card peek/pop controller&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-header" class="anchor" aria-hidden="true" href="#header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Header&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Vinodh-G/ParallaxTableViewHeader"&gt;ParallaxTableViewHeader&lt;/a&gt; - Parallax scrolling effect on UITableView header view when a tableView is scrolled.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CSStickyHeaderFlowLayout/CSStickyHeaderFlowLayout"&gt;CSStickyHeaderFlowLayout&lt;/a&gt; - UICollectionView replacement of UITableView. Do even more like Parallax Header, Sticky Section Header.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gskbyte/GSKStretchyHeaderView"&gt;GSKStretchyHeaderView&lt;/a&gt; - Configurable yet easy to use stretchy header view for UITableView and UICollectionView.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-placeholder" class="anchor" aria-hidden="true" href="#placeholder"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Placeholder&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dzenbot/DZNEmptyDataSet"&gt;DZNEmptyDataSet&lt;/a&gt; - A drop-in UITableView/UICollectionView superclass category for showing empty datasets whenever the view has no content to display.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HamzaGhazouani/HGPlaceholders"&gt;HGPlaceholders&lt;/a&gt; - Nice library to show and create placeholders and Empty States for any UITableView/UICollectionView in your project&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malkouz/ListPlaceholder"&gt;ListPlaceholder&lt;/a&gt; - ListPlaceholder is a swift library allows you to easily add facebook style animated loading placeholder to your tableviews or collection views&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wizeline/WLEmptyState"&gt;WLEmptyState&lt;/a&gt; - A component that lets you customize the view when the dataset of UITableView is empty.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-collection-view-layout" class="anchor" aria-hidden="true" href="#collection-view-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection View Layout&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chiahsien/CHTCollectionViewWaterfallLayout"&gt;CHTCollectionViewWaterfallLayout&lt;/a&gt; - The waterfall (i.e., Pinterest-like) layout for UICollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fmitech/FMMosaicLayout"&gt;FMMosaicLayout&lt;/a&gt; - A drop-in mosaic collection view layout with a focus on simple customizations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vinnyoodles/mosaic-layout"&gt;mosaic-layout&lt;/a&gt; - A mosaic collection view layout inspired by Lightbox's Algorithm, written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKickMobile/TLLayoutTransitioning"&gt;TLLayoutTransitioning&lt;/a&gt; - Enhanced transitioning between UICollectionView layouts in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BenEmdon/CenteredCollectionView"&gt;CenteredCollectionView&lt;/a&gt; - A lightweight UICollectionViewLayout that &lt;em&gt;'pages'&lt;/em&gt; and centers it's cells &lt;g-emoji class="g-emoji" alias="ferris_wheel" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a1.png"&gt;üé°&lt;/g-emoji&gt; written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yacir/CollectionViewSlantedLayout"&gt;CollectionViewSlantedLayout&lt;/a&gt; - UICollectionViewLayout with slanted content&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwheelbuy/SquareMosaicLayout"&gt;SquareMosaicLayout&lt;/a&gt; - An extandable mosaic UICollectionViewLayout with a focus on extremely flexible customizations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/BouncyLayout"&gt;BouncyLayout&lt;/a&gt; - BouncyLayout is a collection view layout that makes your cells bounce.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AfrozZaheer/AZSafariCollectionViewLayout"&gt;AZSafariCollectionViewLayout&lt;/a&gt; - AZSafariCollectionViewLayout is replica of safari browser history page layout. very easy to use, IBInspectable are given for easy integration.
-ollectionView, make Instagram Discover within minutes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Blueprints"&gt;Blueprints&lt;/a&gt; - A framework that is meant to make your life easier when working with collection view flow layouts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yahoojapan/UICollectionViewSplitLayout"&gt;UICollectionViewSplitLayout&lt;/a&gt; - UICollectionViewSplitLayout makes collection view more responsive.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VladIacobIonut/Swinflate"&gt;Swinflate&lt;/a&gt; -  A bunch of layouts providing light and seamless experiences in your CollectionView.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tag" class="anchor" aria-hidden="true" href="#tag"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tag&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/paulrolfe/PARTagPicker"&gt;PARTagPicker&lt;/a&gt; - This pod provides a view controller for choosing and creating tags in the style of wordpress or tumblr.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/AMTagListView"&gt;AMTagListView&lt;/a&gt; - UIScrollView subclass that allows to add a list of highly customizable tags.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/riteshhgupta/TagCellLayout"&gt;TagCellLayout&lt;/a&gt; - UICollectionView layout for Tags with Left, Center &amp;amp; Right alignments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zekunyan/TTGTagCollectionView"&gt;TTGTagCollectionView&lt;/a&gt; - Show simple text tags or custom tag views in a vertical scrollable view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ElaWorkshop/TagListView"&gt;TagListView&lt;/a&gt; - Simple and highly customizable iOS tag list view, in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kuler90/RKTagsView"&gt;RKTagsView&lt;/a&gt; - Highly customizable iOS tags view (like NSTokenField). Supports editing, multiple selection, Auto Layout and much more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whitesmith/WSTagsField"&gt;WSTagsField&lt;/a&gt; - An iOS text field that represents different Tags.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artemkrachulov/AKMaskField"&gt;AKMaskField&lt;/a&gt; - AKMaskField is UITextField subclass which allows enter data in the fixed quantity and in the certain format.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/YNSearch"&gt;YNSearch&lt;/a&gt; - Awesome fully customizable search view like Pinterest written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fdzsergio/SFFocusViewLayout"&gt;SFFocusViewLayout&lt;/a&gt; - UICollectionViewLayout with focused content.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-textfield--textview" class="anchor" aria-hidden="true" href="#textfield--textview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TextField &amp;amp; TextView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jverdi/JVFloatLabeledTextField"&gt;JVFloatLabeledTextField&lt;/a&gt; - UITextField subclass with floating labels.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexruperez/ARAutocompleteTextView"&gt;ARAutocompleteTextView&lt;/a&gt; - subclass of UITextView that automatically displays text suggestions in real-time. Perfect for email Textviews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hackiftekhar/IQDropDownTextField"&gt;IQDropDownTextField&lt;/a&gt; - TextField with DropDown support using UIPickerView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/UITextField-Shake"&gt;UITextField-Shake&lt;/a&gt; - UITextField category that adds shake animation. &lt;a href="https://github.com/King-Wizard/UITextField-Shake-Swift"&gt;Also with Swift version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanton/HTYTextField"&gt;HTYTextField&lt;/a&gt; - A UITextField with bouncy placeholder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheMrugraj/MVAutocompletePlaceSearchTextField"&gt;MVAutocompletePlaceSearchTextField&lt;/a&gt; - A drop-in Autocompletion control for Place Search like Google Places, Uber, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/filipstefansson/AutocompleteField"&gt;AutocompleteField&lt;/a&gt; - Add word completion to your UITextFields.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslanskorb/RSKGrowingTextView"&gt;RSKGrowingTextView&lt;/a&gt; - A light-weight UITextView subclass that automatically grows and shrinks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslanskorb/RSKPlaceholderTextView"&gt;RSKPlaceholderTextView&lt;/a&gt; - A light-weight UITextView subclass that adds support for placeholder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aschuch/StatefulViewController"&gt;StatefulViewController&lt;/a&gt; - Placeholder views based on content, loading, error or empty states.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatejBalantic/MBAutoGrowingTextView"&gt;MBAutoGrowingTextView&lt;/a&gt; - An auto-layout base UITextView subclass which automatically grows with user input and can be constrained by maximal and minimal height - all without a single line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raulriera/TextFieldEffects"&gt;TextFieldEffects&lt;/a&gt; - Custom UITextFields effects inspired by Codrops, built using Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/reel-search"&gt;Reel Search&lt;/a&gt; - RAMReel is a controller that allows you to choose options from a list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EddyBorja/MLPAutoCompleteTextField"&gt;MLPAutoCompleteTextField&lt;/a&gt; - a subclass of UITextField that behaves like a typical UITextField with one notable exception: it manages a drop down table of autocomplete suggestions that update as the user types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Skyscanner/SkyFloatingLabelTextField"&gt;SkyFloatingLabelTextField&lt;/a&gt; - A beautiful and flexible text field control implementation of "Float Label Pattern". Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/viniciusmo/VMaskTextField"&gt;VMaskTextField&lt;/a&gt; - VMaskTextField is a library which create an input mask for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tejas-ardeshna/TJTextField"&gt;TJTextField&lt;/a&gt; - UITextField with underline and left image.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/NextGrowingTextView"&gt;NextGrowingTextView&lt;/a&gt; - The next in the generations of 'growing textviews' optimized for iOS 7 and above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/RPFloatingPlaceholders"&gt;RPFloatingPlaceholders&lt;/a&gt; - UITextField and UITextView subclasses with placeholders that change into floating labels when the fields are populated with text.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/richa008/CurrencyTextField"&gt;CurrencyTextField&lt;/a&gt; - UITextField that automatically formats text to display in the currency format.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pham/UITextField-Navigation"&gt;UITextField-Navigation&lt;/a&gt; - UITextField-Navigation adds next, previous and done buttons to the keyboard for your UITextFields.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nferocious76/AutoCompleteTextField"&gt;AutoCompleteTextField&lt;/a&gt; - Auto complete with suggestion textfield.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nonameplum/PLCurrencyTextField"&gt;PLCurrencyTextField&lt;/a&gt; - UITextField that support currency in the right way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PiXeL16/PasswordTextField"&gt;PasswordTextField&lt;/a&gt; - A custom TextField with a switchable icon which shows or hides the password and enforce good password policies.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jobandtalent/AnimatedTextInput"&gt;AnimatedTextInput&lt;/a&gt; - Animated UITextField and UITextView replacement for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MoZhouqi/KMPlaceholderTextView"&gt;KMPlaceholderTextView&lt;/a&gt; - A UITextView subclass that adds support for multiline placeholder written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Otbivnoe/NxEnabled"&gt;NxEnabled&lt;/a&gt; - Library which allows you binding &lt;code&gt;enabled&lt;/code&gt; property of button with textable elements (TextView, TextField).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aleksandrshoshiashvili/AwesomeTextFieldSwift"&gt;AwesomeTextField&lt;/a&gt; - Awesome TextField is a nice and simple library for iOS. It's highly customisable and easy-to-use tool. Works perfectly for any registration or login forms in your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/ModernSearchBar"&gt;ModernSearchBar&lt;/a&gt; - The famous iOS search bar with auto completion feature implemented.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jhurray/SelectableTextView"&gt;SelectableTextView&lt;/a&gt; - A text view that supports selection and expansion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Fawxy/CBPinEntryView"&gt;CBPinEntryView&lt;/a&gt; - A customisable view written in Swift 4.2 for any pin, code or password entry. Supports one time codes in iOS 12.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KennethTsang/GrowingTextView"&gt;GrowingTextView&lt;/a&gt; - An UITextView in Swift3 and Swift2.3. Support auto growing, placeholder and length limit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iDhaval/DTTextField"&gt;DTTextField&lt;/a&gt; - DTTextField is a custom textfield with floating placeholder and error label in Swift3.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serralvo/TextFieldCounter"&gt;TextFieldCounter&lt;/a&gt; - UITextField character counter with lovable UX.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roytornado/RSFloatInputView"&gt;RSFloatInputView&lt;/a&gt; - A Float Input View with smooth animation and supporting icon and seperator written with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iceman201/TaniwhaTextField"&gt;TaniwhaTextField&lt;/a&gt; - TaniwhaTextField is a lightweight and beautiful swift textfield framework. It has float label pattern, and also you can highly customise it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/algolia/instantsearch-ios"&gt;InstantSearch iOS&lt;/a&gt; - A library of widgets and helpers to build instant-search applications on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apasccon/SearchTextField"&gt;SearchTextField&lt;/a&gt; - UITextField subclass with autocompletion suggestions list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ko1o/PYSearch"&gt;PYSearch&lt;/a&gt; - An elegant search controller which replaces the UISearchController for iOS (iPhone &amp;amp; iPad).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blueapron/styled-text"&gt;styled-text&lt;/a&gt; - Declarative text styles and streamlined Dynamic Type support for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oleghnidets/TweeTextField"&gt;TweeTextField&lt;/a&gt; - Lightweight set of text fields with nice animation and functionality.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SiarheiFedartsou/MeasurementTextField"&gt;MeasurementTextField&lt;/a&gt; - UITextField-based control for (NS)Measurement values input.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/VENTokenField"&gt;VENTokenField&lt;/a&gt; - Easy-to-use token field that is used in the Venmo app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexLittlejohn/ALTextInputBar"&gt;ALTextInputBar&lt;/a&gt; - An auto growing text input bar for messaging apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-lpmg/Tagging"&gt;Tagging&lt;/a&gt; - TextView that provides easy to use tagging feature for Mention or Hashtag.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nathantannar4/InputBarAccessoryView"&gt;InputBarAccessoryView&lt;/a&gt; - A simple and easily customizable InputAccessoryView for making powerful input bars with autocomplete and attachments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-uipagecontrol" class="anchor" aria-hidden="true" href="#uipagecontrol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UIPageControl&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kasper-lahti/PageControl"&gt;PageControl&lt;/a&gt; - A nice, animated UIPageControl alternative.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/popwarsweet/PageControls"&gt;PageControls&lt;/a&gt; - This is a selection of custom page controls to replace UIPageControl, inspired by a dribbble found here.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChiliLabs/CHIPageControl"&gt;CHIPageControl&lt;/a&gt; - A set of cool animated page controls to replace boring UIPageControl.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sevruk-dev/page-control"&gt;Page-Control&lt;/a&gt; - Beautiful, animated and highly customizable UIPageControl alternative.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-web-view" class="anchor" aria-hidden="true" href="#web-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web View&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tasanobu/Otafuku"&gt;Otafuku&lt;/a&gt; - Otafuku provides utility classes to use WKWebView in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meismyles/SwiftWebVC"&gt;SwiftWebVC&lt;/a&gt; - A drop-in inline browser for your Swift iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TransitApp/SVWebViewController"&gt;SVWebViewController&lt;/a&gt; - A drop-in inline browser for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pjocprac/PTPopupWebView"&gt;PTPopupWebView&lt;/a&gt; - PTPopupWebView is a simple and useful WebView for iOS, which can be popup and has many of the customized item.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-utility" class="anchor" aria-hidden="true" href="#utility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Utility&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/robb/Underscore.m"&gt;Underscore.m&lt;/a&gt; - A DSL for Data Manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tumblr/XExtensionItem"&gt;XExtensionItem&lt;/a&gt; - Easier sharing of structured data between iOS applications and share extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastred/ReflectableEnum"&gt;ReflectableEnum&lt;/a&gt; - Reflection for enumerations in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/supermarin/ObjectiveSugar"&gt;ObjectiveSugar&lt;/a&gt; - ObjectiveC additions for humans. Ruby style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leoschweizer/OpinionatedC"&gt;OpinionatedC&lt;/a&gt; - Because Objective-C should have inherited more from Smalltalk.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thellimist/SwiftRandom"&gt;SwiftRandom&lt;/a&gt; - Generator for random data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/RandomKit/"&gt;RandomKit&lt;/a&gt; - Random data generation in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mxcl/YOLOKit"&gt;YOLOKit&lt;/a&gt; - Getting square objects down round holes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/EZSwiftExtensions"&gt;EZSwiftExtensions&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="smirk" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png"&gt;üòè&lt;/g-emoji&gt; How Swift standard types and classes were supposed to work.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nickoneill/Pantry"&gt;Pantry&lt;/a&gt; - The missing light persistence layer for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davedufresne/SwiftParsec"&gt;SwiftParsec&lt;/a&gt; - A parser combinator library written in the Swift programming language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Weebly/OrderedSet"&gt;OrderedSet&lt;/a&gt; - A Swift collection of unique, ordered objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Datez"&gt;Datez&lt;/a&gt; - Swift library for dealing with &lt;code&gt;NSDate&lt;/code&gt;, &lt;code&gt;NSCalendar&lt;/code&gt;, and &lt;code&gt;NSDateComponents&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FabrizioBrancati/BFKit"&gt;BFKit&lt;/a&gt; - An Objective-C collection of useful classes to develop Apps faster.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FabrizioBrancati/BFKit-Swift"&gt;BFKit-Swift&lt;/a&gt; - A Swift collection of useful classes to develop Apps faster.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/scale"&gt;Scale&lt;/a&gt; - Unit converter in Swift (available via CocoaPods).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cconeil/Standard-Template-Protocols"&gt;Standard Template Protocols&lt;/a&gt; - Protocols for your every day iOS needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JonFir/TimeLord"&gt;TimeLord&lt;/a&gt; - Easy DateTime (NSDate) management in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eure/AppVersionMonitor"&gt;AppVersionMonitor&lt;/a&gt; - Monitor iOS app version easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Sugar"&gt;Sugar&lt;/a&gt; - Something sweet that goes great with your Cocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/Then"&gt;Then&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;‚ú®&lt;/g-emoji&gt; Super sweet syntactic sugar for Swift initializers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cocoanetics/Kvitto"&gt;Kvitto&lt;/a&gt; - App Store Receipt Validation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Notificationz"&gt;Notificationz&lt;/a&gt; - Helping you own NSNotificationCenter in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PureSwift/SwiftFoundation"&gt;SwiftFoundation&lt;/a&gt; - Cross-Platform, Protocol-Oriented Programming base library to complement the Swift Standard Library. (Pure Swift, Supports Linux).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jspahrsummers/libextobjc"&gt;libextobjc&lt;/a&gt; - A Cocoa library to extend the Objective-C programming language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/VersionTrackerSwift"&gt;VersionTrackerSwift&lt;/a&gt; - Track which versions of your app a user has previously installed..&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/InderKumarRathore/DeviceGuru/"&gt;DeviceGuru&lt;/a&gt; - DeviceGuru is a simple lib (Swift) to know the exact type of the device, e.g. iPhone 6 or iPhone 6s.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEAppVersion"&gt;AEAppVersion&lt;/a&gt; - Simple and Lightweight App Version Tracking for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BlocksKit/BlocksKit"&gt;BlocksKit&lt;/a&gt; - The Objective-C block utilities you always wish you had.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/swiftyutils"&gt;SwiftyUtils&lt;/a&gt; - All the reusable code that we need in each project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soffes/RateLimit"&gt;RateLimit&lt;/a&gt; - Simple utility for only executing code every so often.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phatblat/Outlets"&gt;Outlets&lt;/a&gt; - Utility functions for validating IBOutlet and IBAction connections.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JARMourato/EasyAbout"&gt;EasyAbout&lt;/a&gt; - A way to easily add CocoaPods licenses and App Version to your iOS App using the Settings Bundle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ben-G/Validated"&gt;Validated&lt;/a&gt; - A Swift Œº-Library for Somewhat Dependent Types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ankurp/Cent"&gt;Cent&lt;/a&gt; - Extensions for Swift Standard Types and Classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anatoliyv/AssistantKit"&gt;AssistantKit&lt;/a&gt; - Easy way to detect iOS device properties, OS versions and work with screen sizes. Powered by Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/SwiftLinkPreview"&gt;SwiftLinkPreview&lt;/a&gt; - It makes a preview from an url, grabbing all the information such as title, relevant texts and images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rollmind/BundleInfos"&gt;BundleInfos&lt;/a&gt; - Simple getter for Bundle informations. like short version from bundle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mirek/YAML.framework"&gt;YAML.framework&lt;/a&gt; - Proper YAML support for Objective-C based on &lt;code&gt;LibYAML&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/ReadabilityKit"&gt;ReadabilityKit&lt;/a&gt; - Metadata extractor for news, articles and full-texts in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appculture/MissionControl-iOS"&gt;MissionControl-iOS&lt;/a&gt; - Super powerful remote config utility written in Swift (iOS, watchOS, tvOS, macOS).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Khan/SwiftTweaks"&gt;SwiftTweaks&lt;/a&gt; - Tweak your iOS app without recompiling!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/caloon/UnsupportedOSVersionAlert"&gt;UnsupportedOSVersionAlert&lt;/a&gt; - Alerts users with a popup if they use an app with an unsupported version of iOS (e.g. iOS betas).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dsmatter/SwiftSortUtils"&gt;SwiftSortUtils&lt;/a&gt; - This library takes a shot at making sorting in Swift more pleasant. It also allows you to reuse your old NSSortDescriptor instances in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icanzilb/Retry"&gt;Retry&lt;/a&gt; - Haven't you wished for &lt;code&gt;try&lt;/code&gt; to sometimes try a little harder? Meet &lt;code&gt;retry&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/ObjectiveKit"&gt;ObjectiveKit&lt;/a&gt; - Swift-friendly API for Objective C runtime functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/MoyaSugar"&gt;MoyaSugar&lt;/a&gt; -  Syntactic sugar for Moya.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwifterSwift/SwifterSwift"&gt;SwifterSwift&lt;/a&gt; -  A handy collection of more than 400 native Swift 4 extensions to boost your productivity.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rightpoint/Eject"&gt;Eject&lt;/a&gt; - An eject button for Interface Builder to generate swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/ContactsWrapper"&gt;ContactsWrapper&lt;/a&gt; - Easy to use wrapper for both contacts and contacts group with Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eBardX/XestiMonitors"&gt;XestiMonitors&lt;/a&gt; - An extensible monitoring framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/floriangbh/OpenSourceController"&gt;OpenSourceController&lt;/a&gt; - The simplest way to display the libraries licences used in your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stunner/App-Update-Tracker"&gt;App-Update-Tracker&lt;/a&gt; - Easily detect and run code upon app installation or update.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/4taras4/SwiftExtension"&gt;ExtensionalSwift&lt;/a&gt; - Useful swift extensions in one place.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/futuretap/InAppSettingsKit"&gt;InAppSettingsKit&lt;/a&gt; - This iOS framework allows settings to be in-app in addition to or instead of being in the Settings app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mutualmobile/MMWormhole"&gt;MMWormhole&lt;/a&gt; - Message passing between iOS apps and extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/DefaultStringConvertible"&gt;DefaultStringConvertible&lt;/a&gt; - A default CustomStringConvertible implementation for Swift types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/FluxCapacitor"&gt;FluxCapacitor&lt;/a&gt; - FluxCapacitor makes implementing Flux design pattern easily with protocols and typealias.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vtourraine/VTAcknowledgementsViewController"&gt;VTAcknowledgementsViewController&lt;/a&gt; - Ready to use ‚ÄúAcknowledgements‚Äù/‚ÄúLicenses‚Äù/‚ÄúCredits‚Äù view controller for CocoaPods.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vhesener/Closures"&gt;Closures&lt;/a&gt; - Swifty closures for UIKit and Foundation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BalestraPatrick/WhatsNew"&gt;WhatsNew&lt;/a&gt; - Showcase new features after an app update similar to Pages, Numbers and Keynote.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/michalkonturek/MKUnits"&gt;MKUnits&lt;/a&gt; - Unit conversion library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/takasek/ActionClosurable"&gt;ActionClosurable&lt;/a&gt; - Extensions which helps to convert objc-style target/action to swifty closures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/holzschu/ios_system"&gt;ios_system&lt;/a&gt; - Drop-in replacement for system() in iOS programs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Sherlouk/SwiftProvisioningProfile"&gt;SwiftProvisioningProfile&lt;/a&gt; - Parse provisioning profiles into Swift models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luoxiu/Once"&gt;Once&lt;/a&gt; - Minimalist library to manage one-off operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZamzamInc/ZamzamKit"&gt;ZamzamKit&lt;/a&gt; - A collection of micro utilities and extensions for Standard Library, Foundation and UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/DuctTape"&gt;DuctTape&lt;/a&gt; - KeyPath dynamicMemberLookup based syntax sugar for swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-user-consent" class="anchor" aria-hidden="true" href="#user-consent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Consent&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/smartlook/ios-consent-sdk"&gt;SmartlookConsentSDK&lt;/a&gt; - Open source SDK which provides a configurable control panel where user can select their privacy options and store the user preferences for the app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-vr" class="anchor" aria-hidden="true" href="#vr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Aralekk/VR_Toolkit_iOS"&gt;VR Toolkit iOS&lt;/a&gt; - A sample project that provides the basics to create an interactive VR experience on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanton/HTY360Player"&gt;360 VR Player&lt;/a&gt; - A open source, ad-free, native and universal 360 degree panorama video player for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Aralekk/simple360player_iOS"&gt;simple360player&lt;/a&gt; - Free &amp;amp; ad-free 360 VR Video Player. Flat or Stereoscopic. In Swift 2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/Swifty360Player"&gt;Swifty360Player&lt;/a&gt; - iOS 360-degree video player streaming from an AVPlayer with Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-walkthrough--intro--tutorial" class="anchor" aria-hidden="true" href="#walkthrough--intro--tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Walkthrough / Intro / Tutorial&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mamaral/Onboard"&gt;Onboard&lt;/a&gt; - Easily create a beautiful and engaging onboarding experience with only a few lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ealeksandrov/EAIntroView"&gt;EAIntroView&lt;/a&gt; - Highly customizable drop-in solution for introduction views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatthewYork/MYBlurIntroductionView"&gt;MYBlurIntroductionView&lt;/a&gt; - A super-charged version of MYIntroductionView for building custom app introductions and tutorials.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ariok/BWWalkthrough"&gt;BWWalkthrough&lt;/a&gt; - A class to build custom walkthroughs for your iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GnosisHub/GHWalkThrough"&gt;GHWalkThrough&lt;/a&gt; - A UICollectionView backed drop-in component for introduction views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icepat/ICETutorial"&gt;ICETutorial&lt;/a&gt; - A nice tutorial like the one introduced in the Path 3.X App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IFTTT/JazzHands"&gt;JazzHands&lt;/a&gt; - Jazz Hands is a simple keyframe-based animation framework for UIKit. Animations can be controlled via gestures, scroll views, KVO, or ReactiveCocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IFTTT/RazzleDazzle"&gt;RazzleDazzle&lt;/a&gt; - A simple keyframe-based animation framework for iOS, written in Swift. Perfect for scrolling app intros.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ephread/Instructions"&gt;Instructions&lt;/a&gt; - Easily add customizable coach marks into you iOS project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruipfcosta/SwiftyWalkthrough"&gt;SwiftyWalkthrough&lt;/a&gt; - The easiest way to create a great walkthrough experience in your apps, powered by Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yukiasai/Gecco"&gt;Gecco&lt;/a&gt; - Spotlight view for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/svhawks/VideoSplashKit"&gt;VideoSplashKit&lt;/a&gt; - VideoSplashKit - UIViewController library for creating easy intro pages with background videos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Presentation"&gt;Presentation&lt;/a&gt; - Presentation helps you to make tutorials, release notes and animated pages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/AMPopTip"&gt;AMPopTip&lt;/a&gt; - An animated popover that pops out a given frame, great for subtle UI tips and onboarding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/AlertOnboarding"&gt;AlertOnboarding&lt;/a&gt; - A simple and handsome AlertView for onboard your users in your amazing world.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/teodorpatras/EasyTipView"&gt;EasyTipView&lt;/a&gt; - Fully customisable tooltip view in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/paper-onboarding"&gt;paper-onboarding&lt;/a&gt; - PaperOnboarding is a material design slider.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anatoliyv/InfoView"&gt;InfoView&lt;/a&gt; - Swift based simple information view with pointed arrow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbolatov/Intro"&gt;Intro&lt;/a&gt; - An iOS framework to easily create simple animated walkthrough, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aleksandrshoshiashvili/AwesomeSpotlightView"&gt;AwesomeSpotlightView&lt;/a&gt; - Tool to create awesome tutorials or educate user to use application. Or just highlight something on screen. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/juanpablofernandez/SwiftyOnboard"&gt;SwiftyOnboard&lt;/a&gt; - A simple way to add onboarding to your project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/praagyajoshi/WVWalkthroughView"&gt;WVWalkthroughView&lt;/a&gt; - Utility to easily create walkthroughs to help with user onboarding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saeid/SwiftyOverlay"&gt;SwiftyOverlay&lt;/a&gt; - Easy and quick way to show intro / instructions over app UI without any additional images in real-time!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chaser79/SwiftyOnboardVC"&gt;SwiftyOnboardVC&lt;/a&gt; - Lightweight walkthrough controller thats uses view controllers as its subviews making the customization endless.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yukiasai/Minamo"&gt;Minamo&lt;/a&gt; - Simple coach mark library written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aromajoin/material-showcase-ios"&gt;Material Showcase iOS&lt;/a&gt; - An elegant and beautiful showcase for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/WhatsNewKit"&gt;WhatsNewKit&lt;/a&gt; - Showcase your awesome new app features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NikolaKirev/OnboardKit"&gt;OnboardKit&lt;/a&gt; - Customisable user onboarding for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/ConcentricOnboarding"&gt;ConcentricOnboarding&lt;/a&gt; - SwiftUI library for a walkthrough or onboarding flow with tap actions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-websocket" class="anchor" aria-hidden="true" href="#websocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/SocketRocket"&gt;SocketRocket&lt;/a&gt; - A conforming Objective-C WebSocket client library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/socketio/socket.io-client-swift"&gt;socket.io-client-swift&lt;/a&gt; - Socket.IO-client for iOS/macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tidwall/SwiftWebSocket"&gt;SwiftWebSocket&lt;/a&gt; - High performance WebSocket client library for Swift, iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam/Starscream"&gt;Starscream&lt;/a&gt; - Websockets in swift for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swiftsocket/SwiftSocket"&gt;SwiftSocket&lt;/a&gt; - simple socket library for apple swift lang.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor-community/sockets"&gt;Socks&lt;/a&gt; - Pure-Swift Sockets: TCP, UDP; Client, Server; Linux, macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Balancingrock/SwifterSockets"&gt;SwifterSockets&lt;/a&gt; - A collection of socket utilities in Swift for OS-X and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielrhodes/Swift-ActionCableClient"&gt;Swift-ActionCableClient&lt;/a&gt; - ActionCable is a new WebSocket server being released with Rails 5 which makes it easy to add real-time features to your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GlebRadchenko/DNWebSocket"&gt;DNWebSocket&lt;/a&gt; - Object-Oriented, Swift-style WebSocket Library (RFC 6455) for Swift-compatible Platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-project-setup" class="anchor" aria-hidden="true" href="#project-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/crafter"&gt;crafter&lt;/a&gt; - CLI that allows you to configure iOS project's template using custom DSL syntax, simple to use and quite powerful.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/liftoffcli/liftoff"&gt;liftoff&lt;/a&gt; - Another CLI for creating iOS projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crushlovely/Amaro"&gt;amaro&lt;/a&gt; - iOS Boilerplate full of delights.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orta/chairs"&gt;chairs&lt;/a&gt; - Swap around your iOS Simulator Documents.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/SwiftPlate"&gt;SwiftPlate&lt;/a&gt; - Easily generate cross platform Swift framework projects from the command line.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tuist/xcodeproj"&gt;xcproj&lt;/a&gt; - Read and update Xcode projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tuist/tuist"&gt;Tuist&lt;/a&gt; - A tool to create, maintain and interact with Xcode projects at scale.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/SwiftKit"&gt;SwiftKit&lt;/a&gt; - Start your next Open-Source Swift Framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dependency--package-manager" class="anchor" aria-hidden="true" href="#dependency--package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependency / Package Manager&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; - CocoaPods is the dependency manager for Objective-C projects. It has thousands of libraries and can help you scale your projects elegantly.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sap-production.github.io/xcode-maven-plugin/site/" rel="nofollow"&gt;Xcode Maven&lt;/a&gt; - The Xcode Maven Plugin can be used in order to run Xcode builds embedded in a Maven lifecycle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; - A simple, decentralized dependency manager for Cocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jankuca/swm"&gt;SWM (Swift Modules)&lt;/a&gt; - A package/dependency manager for Swift projects similar to npm (node.js package manager) or bower (browser package manager from Twitter). Does not require the use of Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/CocoaSeeds"&gt;CocoaSeeds&lt;/a&gt; - Git Submodule Alternative for Cocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-package-manager"&gt;swift-package-manager&lt;/a&gt; - The Package Manager for the Swift Programming Language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schwa/punic"&gt;punic&lt;/a&gt; - Clean room reimplementation of Carthage tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tmspzz/Rome"&gt;Rome&lt;/a&gt; - A cache tool for Carthage built frameworks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yunarta/works-athena-gradle-plugin"&gt;Athena&lt;/a&gt; - Gradle Plugin to enhance Carthage by uploading the archived frameworks into Maven repository, currently support only Bintray, Artifactory and Mavel local.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt; - A SwiftPM based dependency manager for iOS &amp;amp; Co. with improvements over Carthage.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kaandedeoglu/Shark"&gt;Shark&lt;/a&gt; - Swift Script that transforms the .xcassets folder into a type safe enum.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/paulsamuels/SBConstants"&gt;SBConstants&lt;/a&gt; - Generate a constants file by grabbing identifiers from storyboards in a project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mac-cain13/R.swift"&gt;R.swift&lt;/a&gt; - Tool to get strong typed, autocompleted resources like images, cells and segues in your Swift project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftGen/SwiftGen"&gt;SwiftGen&lt;/a&gt; - A collection of Swift tools to generate Swift code (enums for your assets, storyboards, Localizable.strings and UIColors).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jondot/blade"&gt;Blade&lt;/a&gt; - Generate Xcode image catalogs for iOS / macOS app icons, universal images, and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terwanerik/Retini"&gt;Retini&lt;/a&gt; - A super simple retina (2x, 3x) image converter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/jazzy"&gt;Jazzy&lt;/a&gt; - Soulful docs for Swift &amp;amp; Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomaz/appledoc"&gt;appledoc&lt;/a&gt; - ObjectiveC code Apple style documentation set generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JiriTrecak/Laurine"&gt;Laurine&lt;/a&gt; - Laurine - Localization code generator written in Swift. Sweet!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcinolawski/StoryboardMerge"&gt;StoryboardMerge&lt;/a&gt; - Xcode storyboards diff and merge tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metasmile/ai2appiconset"&gt;ai2app&lt;/a&gt; - Creating AppIcon sets from Adobe Illustrator (all supported formats).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daisuke0131/ViewMonitor"&gt;ViewMonitor&lt;/a&gt; - ViewMonitor can measure view positions with accuracy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ijoshsmith/abandoned-strings"&gt;abandoned-strings&lt;/a&gt; - Command line program that detects unused resource strings in an iOS or macOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/swiftenv"&gt;swiftenv&lt;/a&gt; - swiftenv allows you to easily install, and switch between multiple versions of Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tasanobu/Misen"&gt;Misen&lt;/a&gt; - Script to support easily using Xcode Asset Catalog in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metasmile/git-xcp"&gt;git-xcp&lt;/a&gt; - A Git plugin for versioning workflow of real-world Xcode project. fastlane's best friend.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tapwork/WatchdogInspector"&gt;WatchdogInspector&lt;/a&gt; - Shows your current framerate (fps) in the status bar of your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dealforest/Cichlid"&gt;Cichlid&lt;/a&gt; - automatically delete the current project's DerivedData directories.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Delta"&gt;Delta&lt;/a&gt; - Managing state is hard. Delta aims to make it simple.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ypresto/SwiftLintXcode"&gt;SwiftLintXcode&lt;/a&gt; - An Xcode plug-in to format your code using SwiftLint.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dzenbot/XCSwiftr"&gt;XCSwiftr&lt;/a&gt; - An Xcode Plugin to convert Objective-C to Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johncsnyder/SwiftKitten"&gt;SwiftKitten&lt;/a&gt; - Swift autocompleter for Sublime Text, via the adorable SourceKitten framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Karumi/Kin"&gt;Kin&lt;/a&gt; - Have you ever found yourself undoing a merge due to a broken Xcode build? Then Kin is your tool. It will parse your project configuration file and detect errors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angelvasa/AVXCAssets-Generator"&gt;AVXCAssets-Generator&lt;/a&gt; - AVXCAssets Generator takes path for your assets images and creates appiconset and imageset for you in just one click.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shaps80/Peek"&gt;Peek&lt;/a&gt; - Take a Peek at your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpsim/SourceKitten"&gt;SourceKitten&lt;/a&gt; - An adorable little framework and command line tool for interacting with SourceKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/athiercelin/localizations"&gt;Localizations&lt;/a&gt; - macOS app that manages localizations of Xcode projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/xcbuild"&gt;xcbuild&lt;/a&gt; - Xcode-compatible build tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/doubleencore/XcodeIssueGenerator"&gt;XcodeIssueGenerator&lt;/a&gt; - An executable that can be placed in a Run Script Build Phase that marks comments like // TODO: or // SERIOUS: as warnings or errors so they display in the Xcode Issue Navigator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TumblrArchive/SwiftCompilationPerformanceReporter"&gt;SwiftCompilationPerformanceReporter&lt;/a&gt; - Generate automated reports for slow Swift compilation paths in specific targets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RobertGummesson/BuildTimeAnalyzer-for-Xcode"&gt;BuildTimeAnalyzer&lt;/a&gt; - Build Time Analyzer for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftStudies/Duration"&gt;Duration&lt;/a&gt; - A simple Swift package for measuring and reporting the time taken for operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/Benchmark"&gt;Benchmark&lt;/a&gt; - The Benchmark module provides methods to measure and report the time used to execute Swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatiBot/MBAssetsImporter"&gt;MBAssetsImporter&lt;/a&gt; - Import assets from Panoramio or from your macOS file system with their metadata to your iOS simulator (Swift 2.0).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/realm-browser-osx"&gt;Realm Browser&lt;/a&gt; - Realm Browser is a macOS utility to open and modify realm database files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/SuperDelegate"&gt;SuperDelegate&lt;/a&gt; ‚Äì SuperDelegate provides a clean application delegate interface and protects you from bugs in the application lifecycle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane-community/fastlane-plugin-appicon"&gt;fastlane-plugin-appicon&lt;/a&gt; - Generate required icon sizes and iconset from a master application icon.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/infer"&gt;infer&lt;/a&gt; - A static analyzer for Java, C and Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcboquet/PlayNow"&gt;PlayNow&lt;/a&gt; - Small app that creates empty Swift playground files and opens them with Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/Xtrace"&gt;Xtrace&lt;/a&gt; - Trace Objective-C method calls by class or instance.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xcenv/xcenv"&gt;xcenv&lt;/a&gt; - Groom your Xcode environment.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/playgroundbooks/playgroundbook"&gt;playgroundbook&lt;/a&gt; - Tool for Swift Playground books.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/Ecno"&gt;Ecno&lt;/a&gt; - Ecno is a task state manager built on top of UserDefaults in pure Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/toshi0383/ipanema"&gt;ipanema&lt;/a&gt; - ipanema analyzes and prints useful information from &lt;code&gt;.ipa&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/plu/pxctest"&gt;pxctest&lt;/a&gt; - Parallel XCTest - Execute XCTest suites in parallel on multiple iOS Simulators.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swift.sandbox.bluemix.net" rel="nofollow"&gt;IBM Swift Sandbox&lt;/a&gt; - The IBM Swift Sandbox is an interactive website that lets you write Swift code and execute it in a server environment ‚Äì on top of Linux!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/idb"&gt;FBSimulatorControl&lt;/a&gt; - A macOS library for managing and manipulating iOS Simulators&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nomad-cli.com" rel="nofollow"&gt;Nomad&lt;/a&gt; - Suite of command line utilities &amp;amp; libraries for sending APNs, create &amp;amp; distribute &lt;code&gt;.ipa&lt;/code&gt;, verify In-App-Purchase receipt and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RahulKatariya/SwiftFrameworkTemplate"&gt;Cookiecutter&lt;/a&gt; - A template for new Swift iOS / tvOS / watchOS / macOS Framework project ready with travis-ci, cocoapods, Carthage, SwiftPM and a Readme file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/Sourcery"&gt;Sourcery&lt;/a&gt; - A tool that brings meta-programming to Swift, allowing you to code generate Swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/AssetChecker"&gt;AssetChecker &lt;g-emoji class="g-emoji" alias="policeman" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f46e.png"&gt;üëÆ&lt;/g-emoji&gt;&lt;/a&gt; - Keeps your Assets.xcassets files clean and emits warnings when something is suspicious.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insidegui/PlayAlways"&gt;PlayAlways&lt;/a&gt; - Create Xcode playgrounds from your menu bar&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dani-gavrilov/GDPerformanceView-Swift"&gt;GDPerformanceView-Swift&lt;/a&gt; - Shows FPS, CPU usage, app and iOS versions above the status bar and report FPS and CPU usage via delegate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/Traits"&gt;Traits&lt;/a&gt; - Library for a real-time design and behavior modification of native iOS apps without recompiling (code and interface builder changes are supported).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.get-struct.tools" rel="nofollow"&gt;Struct&lt;/a&gt; - A tool for iOS and Mac developers to automate the creation and management of Xcode projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yukiasai/Nori"&gt;Nori&lt;/a&gt; - Easier to apply code based style guide to storyboard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/Attabench"&gt;Attabench&lt;/a&gt; - Microbenchmarking app for Swift with nice log-log plots.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wilbertliu/Gluten"&gt;Gluten&lt;/a&gt; - Nano library to unify XIB and it's code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mono0926/LicensePlist"&gt;LicensePlist&lt;/a&gt; - A license list generator of all your dependencies for iOS applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yahoo/AppDevKit"&gt;AppDevKit&lt;/a&gt; - AppDevKit is an iOS development library that provides developers with useful features to fulfill their everyday iOS app development needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/Tweaks"&gt;Tweaks&lt;/a&gt; - An easy way to fine-tune, and adjust parameters for iOS apps in development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/FengNiao"&gt;FengNiao&lt;/a&gt; - A command line tool for cleaning unused resources in Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/LifetimeTracker"&gt;LifetimeTracker&lt;/a&gt; - Find retain cycles / memory leaks sooner.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pinterest/plank"&gt;Plank&lt;/a&gt; - A tool for generating immutable model objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/Lona"&gt;Lona&lt;/a&gt; - A tool for defining design systems and using them to generate cross-platform UI code, Sketch files, images, and other artifacts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/XcodeGen"&gt;XcodeGen&lt;/a&gt; - Command line tool that generates your Xcode project from a spec file and your folder structure.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wigl/iSimulator"&gt;iSimulator&lt;/a&gt; - iSimulator is a GUI utility to control the Simulator, and manage the app installed on the simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzyzanowskim/Natalie"&gt;Natalie&lt;/a&gt; - Storyboard Code Generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresinaka/transformer"&gt;Transformer&lt;/a&gt; - Easy Online Attributed String Creator. This tool lets you format a string directly in the browser and then copy/paste the attributed string code into your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ealeksandrov/ProvisionQL"&gt;ProvisionQL&lt;/a&gt; - Quick Look plugin for apps and provisioning profile files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/novemberfiveco/xib2Storyboard"&gt;xib2Storyboard&lt;/a&gt; - A tool to convert Xcode .xib to .storyboard files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zolang/Zolang"&gt;Zolang&lt;/a&gt; - A programming language for sharing logic between iOS, Android and Tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gabrielrobert/xavtool"&gt;xavtool&lt;/a&gt; - Command-line utility to automatically increase iOS / Android applications version.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cutter.albemala.me/" rel="nofollow"&gt;Cutter&lt;/a&gt; - A tool to generate iOS Launch Images (Splash Screens) for all screen sizes starting from a single template.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bow-swift/nef"&gt;nef&lt;/a&gt; - A set of command line tools for Xcode Playground: lets you have compile-time verification of your documentation written as Xcode Playgrounds, generates markdown files, integration with Jekyll for building microsites and Carbon to export code snippets.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-rapid-development" class="anchor" aria-hidden="true" href="#rapid-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rapid Development&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/Playgrounds"&gt;Playgrounds&lt;/a&gt; - Playgrounds for Objective-C for extremely fast prototyping / learning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mutualmobile/MMBarricade"&gt;MMBarricade&lt;/a&gt; - Runtime configurable local server for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sensiblecocoa.com" rel="nofollow"&gt;STV Framework&lt;/a&gt; - Native visual iOS development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimpiax/swiftmon"&gt;swiftmon&lt;/a&gt; - swiftmon restarts your swift application in case of any file change.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Q-Mobile/Model2App"&gt;Model2App&lt;/a&gt; - Turn your Swift data model into a working CRUD app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-injection" class="anchor" aria-hidden="true" href="#code-injection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Injection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DyCI/dyci-main"&gt;dyci&lt;/a&gt; - Code injection tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/injectionforxcode"&gt;injectionforxcode&lt;/a&gt; - Code injection including Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Vaccine"&gt;Vaccine&lt;/a&gt; - Vaccine is a framework that aims to make your apps immune to recompile-decease.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dependency-injection" class="anchor" aria-hidden="true" href="#dependency-injection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependency Injection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Swinject/Swinject"&gt;Swinject&lt;/a&gt; - Dependency injection framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appfoundry/Reliant"&gt;Reliant&lt;/a&gt; - Nonintrusive Objective-C dependency injection.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sabirvirtuoso/Kraken"&gt;Kraken&lt;/a&gt; - A Dependency Injection Container for Swift with easy-to-use syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/Cleanse"&gt;Cleanse&lt;/a&gt; - Lightweight Swift Dependency Injection Framework by Square.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appsquickly/Typhoon"&gt;Typhoon&lt;/a&gt; - Powerful dependency injection (Objective-C &amp;amp; Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Perform"&gt;Perform&lt;/a&gt; - Easy dependency injection for storyboard segues.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/drekka/Alchemic"&gt;Alchemic&lt;/a&gt; - Advanced, yet simple to use DI framework for Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prosumma/Guise"&gt;Guise&lt;/a&gt; - An elegant, flexible, type-safe dependency resolution framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scribd/Weaver"&gt;Weaver&lt;/a&gt; - A declarative, easy-to-use and safe Dependency Injection framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hiro-nagami/StoryboardBuilder"&gt;StoryboardBuilder&lt;/a&gt; - Simple dependency injection for generating views from storyboard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ladeiko/ViperServices"&gt;ViperServices&lt;/a&gt; - Dependency injection container for iOS applications written in Swift. Each service can have boot and shutdown code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivlevAstef/DITranquillity"&gt;DITranquillity&lt;/a&gt; - Dependency injection framework for iOS applications written in clean Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/needle"&gt;Needle&lt;/a&gt; ‚Äî Compile-time safe Swift dependency injection framework with real code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/locatable"&gt;Locatable&lt;/a&gt; - A micro-framework that leverages Property Wrappers to implement the Service Locator pattern.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-deployment--distribution" class="anchor" aria-hidden="true" href="#deployment--distribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment / Distribution&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/fastlane"&gt;fastlane&lt;/a&gt; - Connect all iOS deployment tools into one streamlined workflow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/fastlane/tree/master/deliver"&gt;deliver&lt;/a&gt; - Upload screenshots, metadata and your app to the App Store using a single command.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/fastlane/tree/master/snapshot"&gt;snapshot&lt;/a&gt; - Automate taking localized screenshots of your iOS app on every device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.buddybuild.com/" rel="nofollow"&gt;buddybuild&lt;/a&gt; - A mobile iteration platform - build, deploy, and collaborate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bitrise.io" rel="nofollow"&gt;Bitrise&lt;/a&gt; - Mobile Continuous Integration &amp;amp; Delivery with dozens of integrations to build, test, deploy and collaborate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/watchbuild"&gt;watchbuild&lt;/a&gt; - Get a notification once your iTunes Connect build is finished processing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/products/crashlytics/" rel="nofollow"&gt;Crashlytics&lt;/a&gt; - A crash reporting and beta testing service.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/testflight/" rel="nofollow"&gt;TestFlight Beta Testing&lt;/a&gt; - The beta testing service hosted on iTunes Connect (requires iOS 8 or later).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hockeyapp.net" rel="nofollow"&gt;HockeyApp&lt;/a&gt; - With HockeyApp, you can distribute beta versions of your app, collect live crash reports, get feedback from users, and analyze test coverage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/boarding"&gt;boarding&lt;/a&gt; - Instantly create a simple signup page for TestFlight beta testers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bitstadium/HockeyKit"&gt;HockeyKit&lt;/a&gt; - A software update kit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rollout.io/" rel="nofollow"&gt;Rollout.io&lt;/a&gt; - SDK to patch, fix bugs, modify and manipulate native apps (Obj-c &amp;amp; Swift) in real-time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://theapplaunchpad.com/" rel="nofollow"&gt;AppLaunchpad&lt;/a&gt; - Free App Store screenshot builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LaunchKit/LaunchKit"&gt;LaunchKit&lt;/a&gt; - A set of web-based tools for mobile app developers, now open source!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://instabug.com" rel="nofollow"&gt;Instabug&lt;/a&gt; - In-app feedback, Bug and Crash reporting, Fix Bugs Faster through user-steps, video recordings, screen annotation, network requests logging.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electricbolt/appfiguratesdk"&gt;Appfigurate&lt;/a&gt; - Secure runtime configuration for iOS and watchOS, apps and app extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IdeasOnCanvas/ScreenshotFramer"&gt;ScreenshotFramer&lt;/a&gt; - With Screenshot Framer you can easily create nice-looking and localized App Store Images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://semaphoreci.com/product/ios" rel="nofollow"&gt;Semaphore&lt;/a&gt; - CI/CD service which makes it easy to build, test and deploy applications for any Apple device. iOS support is fully integrated in Semaphore 2.0, so you can use the same powerful CI/CD pipeline features for iOS as you do for Linux-based development.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-app-store" class="anchor" aria-hidden="true" href="#app-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;App Store&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/app-store/review/#common-app-rejections" rel="nofollow"&gt;Apple's Common App Rejections Styleguide&lt;/a&gt; - Highlighted some of the most common issues that cause apps to get rejected.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mobileaction.co" rel="nofollow"&gt;Free App Store Optimization Tool&lt;/a&gt; - Lets you track your App Store visibility in terms of keywords and competitors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oisin/app-release-checklist/blob/master/checklist.md"&gt;App Release Checklist&lt;/a&gt; - A checklist to pore over before you ship that amazing app that has taken ages to complete, but you don't want to rush out in case you commit a schoolboy error that will end up making you look dumber than you are.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Harpy"&gt;Harpy&lt;/a&gt; - Notify users when a new version of your iOS app is available, and prompt them with the App Store link.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arashpayan/appirater"&gt;appirater&lt;/a&gt; - A utility that reminds your iPhone app's users to review the app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Siren"&gt;Siren&lt;/a&gt; - Notify users when a new version of your app is available and prompt them to upgrade.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aashishtamsya/Appstore-Review-Guidelines"&gt;Appstore Review Guidelines&lt;/a&gt; - A curated list of points which a developer has to keep in mind before submitting his/her application on appstore for review.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amebalabs/AppVersion"&gt;AppVersion&lt;/a&gt; - Keep users on the up-to date version of your App.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-extensions-xcode-8" class="anchor" aria-hidden="true" href="#extensions-xcode-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions (Xcode 8+)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BalestraPatrick/CleanClosureXcode"&gt;CleanClosureXcode&lt;/a&gt; - An Xcode Source Editor extension to clean the closure syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cyanzhong/xTextHandler"&gt;xTextHandler&lt;/a&gt; - Xcode Source Editor Extension Toolset (Plugins for Xcode 8).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bouke/SwiftInitializerGenerator"&gt;SwiftInitializerGenerator&lt;/a&gt; - Xcode 8 Source Code Extension to Generate Swift Initializers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sergdort/XcodeEquatableGenerator"&gt;XcodeEquatableGenerator&lt;/a&gt; - Xcode 8 Source Code Extension will generate conformance to Swift Equatable protocol based on type and fields selection.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markohlebar/Import"&gt;Import&lt;/a&gt; - Xcode extension for adding imports from anywhere in the code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/velyan/Mark"&gt;Mark&lt;/a&gt; - Xcode extension for generating MARK comments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Otbivnoe/XShared"&gt;XShared&lt;/a&gt; - Xcode extension which allows you copying the code with special formatting quotes for social (Slack, Telegram).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bunn/Xgist"&gt;XGist&lt;/a&gt; - Xcode extension which allows you to send your text selection or entire file to GitHub's Gist and automatically copy the Gist URL into your Clipboard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://objectivec2swift.com/" rel="nofollow"&gt;Swiftify&lt;/a&gt; - Objective-C to Swift online code converter and Xcode extension.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serhii-londar/DocumenterXcode"&gt;DocumenterXcode&lt;/a&gt; - Attempt to give a new life for VVDocumenter-Xcode as source editor extension.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Karetski/Snowonder"&gt;Snowonder&lt;/a&gt; - Magical import declarations formatter for Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/XVimProject/XVim2"&gt;XVim2&lt;/a&gt; - Vim key-bindings for Xcode 9.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/velyan/Comment-Spell-Checker"&gt;Comment Spell Checker&lt;/a&gt; - Xcode extension for spell checking and auto correcting code comments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bow-swift/nef-plugin"&gt;nef&lt;/a&gt; - This Xcode extension enables you to make a code selection and export it to a snippets. Available on Mac AppStore.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-themes" class="anchor" aria-hidden="true" href="#themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Themes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://draculatheme.com/xcode/" rel="nofollow"&gt;Dracula Theme&lt;/a&gt; - A dark theme for Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hdoria/xcode-themes"&gt;Xcode themes list&lt;/a&gt; - Color themes for Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Solarized-Dark-for-Xcode/"&gt;Solarized-Dark-for-Xcode&lt;/a&gt; - Solarized Dark Theme for Xcode 5.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cargath/WWDC2016-Xcode-Color-Scheme"&gt;WWDC2016 Xcode Color Scheme&lt;/a&gt; - A color scheme for Xcode based on the WWDC 2016 invitation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/durul/Xcodetheme"&gt;DRL Theme&lt;/a&gt; - A soft darkness theme for Xcode.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-xcode" class="anchor" aria-hidden="true" href="#other-xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Xcode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aashishtamsya/awesome-xcode-scripts"&gt;awesome-xcode-scripts&lt;/a&gt; - A curated list of useful xcode scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/synx"&gt;Synx&lt;/a&gt; - A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tintenklecks/IBDelegateCodesippets"&gt;dsnip&lt;/a&gt; - Tool to generate (native) Xcode code snippets from all protocols/delegate methods of UIKit (UITableView, ...)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeskConnect/SBShortcutMenuSimulator"&gt;SBShortcutMenuSimulator&lt;/a&gt; - 3D Touch shortcuts in the Simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aashishtamsya/awesome-gitignore-templates"&gt;awesome-gitignore-templates&lt;/a&gt; - A collection of swift, objective-c, android and many more langugages .gitignore templates.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artemnovichkov/swift-project-template"&gt;swift-project-template&lt;/a&gt; - Template for iOS Swift project generation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Juanpe/Swift-VIPER-Module"&gt;Swift-VIPER-Module&lt;/a&gt; - Xcode template for create modules with VIPER Architecture written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/ViperC"&gt;ViperC&lt;/a&gt; - Xcode template for VIPER Architecture for both Objective-C and Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ismetanin/XcodeCodeSnippets"&gt;XcodeCodeSnippets&lt;/a&gt; - A set of code snippets for iOS development, includes code and comments snippets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=stevemoser.xcode-keybindings" rel="nofollow"&gt;Xcode Keymap for Visual Studio Code&lt;/a&gt; - This extension ports popular Xcode keyboard shortcuts to Visual Studio Code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Camji55/xtm"&gt;Xcode Template Manager&lt;/a&gt; - Xcode Template Manager is a Swift command line tool that helps you manage your Xcode project templates.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EvsenevDev/VIPERModuleTemplate"&gt;VIPER Module Template&lt;/a&gt; - Xcode Template of VIPER Module which generates all layers of VIPER.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/Swift-CheatSheet"&gt;Swift Cheat Sheet&lt;/a&gt; - A quick reference cheat sheet for common, high level topics in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/Objective-C-CheatSheet"&gt;Objective-C Cheat Sheet&lt;/a&gt; - A quick reference cheat sheet for common, high level topics in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/SwiftSnippets"&gt;SwiftSnippets&lt;/a&gt; - A collection of Swift snippets to be used in Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whitef0x0/app-store-checklist"&gt;App Store Checklist&lt;/a&gt; - A checklist of what to look for before submitting your app to the App Store.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ole/whats-new-in-swift-4"&gt;whats-new-in-swift-4&lt;/a&gt; - An Xcode playground showcasing the new features in Swift 4.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://erenkabakci.github.io/WWDC-Recap/" rel="nofollow"&gt;WWDC-Recap&lt;/a&gt; - A collection of session summaries in markdown format, from WWDC 19 &amp;amp; 17.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-style-guides" class="anchor" aria-hidden="true" href="#style-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style Guides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/NYTimes/objective-c-style-guide"&gt;NY Times - Objective C Style Guide&lt;/a&gt; - The Objective-C Style Guide used by The New York Times.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/objective-c-style-guide"&gt;raywenderlich Style Guide&lt;/a&gt; - A style guide that outlines the coding conventions for raywenderlich.com.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/github/objective-c-style-guide"&gt;GitHub Objective-C Style Guide&lt;/a&gt; - Style guide &amp;amp; coding conventions for Objective-C projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/soffes/812796"&gt;Objective-C Coding Convention and Best Practices&lt;/a&gt; - Gist with coding conventions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/swift-style-guide"&gt;Swift Style Guide by @raywenderlich&lt;/a&gt; - The official Swift style guide for raywenderlich.com.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/ios-style"&gt;Spotify Objective-C Coding Style&lt;/a&gt; - Guidelines for iOS development in use at Spotify.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/github/swift-style-guide"&gt;GitHub - Style guide &amp;amp; coding conventions for Swift projects&lt;/a&gt; - A guide to our Swift style and conventions by @github.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/futurice/ios-good-practices"&gt;Futurice iOS Good Practices&lt;/a&gt; - iOS starting guide and good practices suggestions by &lt;a href="https://github.com/futurice"&gt;@futurice&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SlideShareInc/swift-style-guide/blob/master/swift_style_guide.md"&gt;SlideShare Swift Style Guide&lt;/a&gt; - SlideShare Swift Style Guide we are using for our upcoming iOS 8 only app written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prolificinteractive/swift-style-guide"&gt;Prolific Interactive Style Guide&lt;/a&gt; - A style guide for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linkedin/swift-style-guide"&gt;Swift Style Guide by LinkedIn&lt;/a&gt; - LinkedIn's Official Swift Style Guide.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-good-websites" class="anchor" aria-hidden="true" href="#good-websites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Good Websites&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-news-blogs-and-more" class="anchor" aria-hidden="true" href="#news-blogs-and-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News, Blogs and more&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bgr.com/ios-7/" rel="nofollow"&gt;BGR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.imore.com/" rel="nofollow"&gt;iMore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lifehacker.com/tag/ios" rel="nofollow"&gt;Lifehacker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nshipster.com" rel="nofollow"&gt;NSHipster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.objc.io/" rel="nofollow"&gt;Objc.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://asciiwwdc.com/" rel="nofollow"&gt;ASCIIwwdc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.natashatherobot.com/" rel="nofollow"&gt;Natasha The Robot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/swift/blog/" rel="nofollow"&gt;Apple's Swift Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/iOSProgramming/" rel="nofollow"&gt;iOS Programming Subreddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ScottLogic/iOS8-day-by-day"&gt;iOS8-day-by-day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ioscreator.com/" rel="nofollow"&gt;iOScreator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mathewsanders.com/" rel="nofollow"&gt;Mathew Sanders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hboon.com/iosdevnuggets/" rel="nofollow"&gt;iOS Dev Nuggets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/9magnets/iOS-Developer-and-Designer-Interview-Questions"&gt;iOS Developer and Designer interview&lt;/a&gt; - A small guide to help those looking to hire a developer or designer for iOS work.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ScottLogic/iOS9-day-by-day"&gt;iOS9-day-by-day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.fb.com/category/ios/" rel="nofollow"&gt;Code Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rgnlax/Feeds-for-iOS-Developer"&gt;Feeds for iOS Developer&lt;/a&gt; - The list of RSS feeds for iOS developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cocoacontrols.com/" rel="nofollow"&gt;Cocoa Controls&lt;/a&gt; - Open source UI components for iOS and macOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-uikit-references" class="anchor" aria-hidden="true" href="#uikit-references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UIKit references&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://iosfonts.com/" rel="nofollow"&gt;iOS Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/mattt/5135521"&gt;UIAppearance list&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-forums-and-discuss-lists" class="anchor" aria-hidden="true" href="#forums-and-discuss-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forums and discuss lists&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/ios" rel="nofollow"&gt;"iOS" on Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tutorials-and-keynotes" class="anchor" aria-hidden="true" href="#tutorials-and-keynotes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorials and Keynotes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.appcoda.com/" rel="nofollow"&gt;AppCoda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/ios/index.htm" rel="nofollow"&gt;Tutorials Point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codewithchris.com/" rel="nofollow"&gt;Code with Chris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cocoawithlove.com/" rel="nofollow"&gt;Cocoa with Love&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCysEngjfeIYapEER9K8aikw/videos" rel="nofollow"&gt;Brian Advent youtube channel&lt;/a&gt; - Swift tutorials Youtube Channel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/ios" rel="nofollow"&gt;raywenderlich.com&lt;/a&gt; - Tutorials for developers and gamers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mikeash.com/pyblog/" rel="nofollow"&gt;Mike Ash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bignerdranch.com/blog/category/ios/" rel="nofollow"&gt;Big Nerd Ranch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.tutsplus.com/categories/ios-sdk" rel="nofollow"&gt;Tuts+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thinkster.io/a-better-way-to-learn-swift" rel="nofollow"&gt;Thinkster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swifteducation"&gt;Swift Education&lt;/a&gt; - A community of educators sharing materials for teaching Swift and app development.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cocoadevcentral.com" rel="nofollow"&gt;Cocoa Dev Central&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://useyourloaf.com/" rel="nofollow"&gt;Use Your Loaf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jamesonquave.com/blog/tutorials/" rel="nofollow"&gt;Swift Tutorials by Jameson Quave&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hsavit1/Awesome-Swift-Education"&gt;Awesome-Swift-Education&lt;/a&gt; - All of the resources for Learning About Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uraimo/Awesome-Swift-Playgrounds"&gt;Awesome-Swift-Playgrounds&lt;/a&gt; - A List of Awesome Swift Playgrounds!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nettlep/learn-swift"&gt;learn-swift&lt;/a&gt; - Learn Apple's Swift programming language interactively through these playgrounds.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teamtreehouse.com/library/topic:ios" rel="nofollow"&gt;Treehouse's iOS Courses and Workshops&lt;/a&gt; - Topics for beginner and advanced developers in both Objective-C and Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakarmy/swift-summary"&gt;The Swift Summary Book&lt;/a&gt; - A summary of Apple's Swift language written on Playgrounds.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com" rel="nofollow"&gt;Hacking With Swift&lt;/a&gt; - Learn to code iPhone and iPad apps with 3 Swift tutorials.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://academy.realm.io/" rel="nofollow"&gt;Realm Academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnappmaking.com" rel="nofollow"&gt;LearnAppMaking&lt;/a&gt; - LearnAppMaking helps app developers to build, launch and market iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/livevideo/ios-development-with-swift-lv" rel="nofollow"&gt;iOS Development with Swift in Motion &lt;/a&gt; -  This live video course locks in the language fundamentals and then offers interesting examples and exercises to build and practice your knowledge and skills.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zagahr/Conferences.digital"&gt;Conferences.digital&lt;/a&gt; - Watch conference videos in a native macOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://daddycoding.com/" rel="nofollow"&gt;DaddyCoding&lt;/a&gt; - iOS Tutorials ranging from beginners to advance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ios-ui-template" class="anchor" aria-hidden="true" href="#ios-ui-template"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS UI Template&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.invisionapp.com/inside-design/design-resources/tethr/" rel="nofollow"&gt;iOS UI Design Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ivomynttinen.com/blog/ios-design-guidelines" rel="nofollow"&gt;iOS Design Guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://facebook.design/" rel="nofollow"&gt;iOS GUI by Facebook Design Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-prototyping" class="anchor" aria-hidden="true" href="#prototyping"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prototyping&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.fluidui.com" rel="nofollow"&gt;FluidUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proto.io/" rel="nofollow"&gt;Proto.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.framer.com/" rel="nofollow"&gt;Framer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://principleformac.com/" rel="nofollow"&gt;Principle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-newsletters" class="anchor" aria-hidden="true" href="#newsletters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://weekly.awesomeios.com" rel="nofollow"&gt;AwesomeiOS Weekly&lt;/a&gt; - AwesomeiOS Weekly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ios-goodies.com" rel="nofollow"&gt;iOS Goodies&lt;/a&gt; - Weekly iOS newsletter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/newsletter" rel="nofollow"&gt;raywenderlich.com Weekly&lt;/a&gt; - sign up to receive the latest tutorials from raywenderlich.com each week.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iosdev.tools" rel="nofollow"&gt;iOS Dev Tools Weekly&lt;/a&gt; - The greatest iOS development tools, including websites, desktop and mobile apps, and back-end services.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wanderbit.us4.list-manage.com/subscribe?u=4e20cd8ea3a0ce09ff4619a52&amp;amp;id=5898a5992b" rel="nofollow"&gt;iOS Trivia Weekly&lt;/a&gt; - Three challenging questions about iOS development every Wednesday.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://indieiosfocus.com/" rel="nofollow"&gt;Indie iOS Focus Weekly&lt;/a&gt; - Looking for the best iOS dev links, tutorials, &amp;amp; tips beyond the usual news? Curated by Chris Beshore. Published every Thursday.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iosdevweekly.com/" rel="nofollow"&gt;iOS Dev Weekly&lt;/a&gt; - Subscribe to a hand-picked round up of the best iOS development links every week. Free.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swiftweekly.github.io/" rel="nofollow"&gt;Swift Weekly Brief&lt;/a&gt; - A community-driven weekly newsletter about Swift.org. Curated by Jesse Squires and published for free every Thursday.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.serverswift.tech" rel="nofollow"&gt;Server-Side Swift Weekly&lt;/a&gt; - A weekly newsletter with the best links related to server-side Swift and cross-platform developer tools. Curated by &lt;a href="https://twitter.com/maxdesiatov" rel="nofollow"&gt;@maxdesiatov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://us11.campaign-archive.com/home/?u=cd1f3ed33c6527331d82107ba&amp;amp;id=532dc7fb64" rel="nofollow"&gt;iOS Cookies Newsletter&lt;/a&gt; - A weekly digest of new iOS libraries written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andybargh.com/swiftdevelopments/" rel="nofollow"&gt;Swift Developments&lt;/a&gt; - A weekly curated newsletter containing a hand picked selection of the latest links, videos, tools and tutorials for people interested in designing and developing their own iOS, WatchOS and AppleTV apps using Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-medium" class="anchor" aria-hidden="true" href="#medium"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Medium&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/ios-os-x-development" rel="nofollow"&gt;iOS App Development&lt;/a&gt; - Stories and technical tips about building apps for iOS, Apple Watch, and iPad/iPhone.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/swift-programming" rel="nofollow"&gt;Swift Programming&lt;/a&gt; - The Swift Programming Language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/flawless-app-stories" rel="nofollow"&gt;Flawless App&lt;/a&gt; - Development &amp;amp; design &amp;amp; marketing tips for iOS developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-social-media" class="anchor" aria-hidden="true" href="#social-media"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Social Media&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-twitter" class="anchor" aria-hidden="true" href="#twitter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Twitter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/objcio" rel="nofollow"&gt;@objcio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/CocoaPods" rel="nofollow"&gt;@CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/CocoaPodsFeed" rel="nofollow"&gt;@CocoaPodsFeed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/RubyMotion" rel="nofollow"&gt;@RubyMotion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-podcasts" class="anchor" aria-hidden="true" href="#podcasts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Podcasts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/podcast" rel="nofollow"&gt;The Ray Wenderlich Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.imore.com/debug" rel="nofollow"&gt;Debug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.appstorypodcast.com" rel="nofollow"&gt;App Story&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devchat.tv/iphreaks/" rel="nofollow"&gt;iPhreaks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.relay.fm/radar" rel="nofollow"&gt;Under the Radar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://coreint.org/" rel="nofollow"&gt;Core Intuition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.swiftplayhouse.com/" rel="nofollow"&gt;Swift Playhouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://releasenotes.tv/" rel="nofollow"&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mtjc.fireside.fm/" rel="nofollow"&gt;More Than Just Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spec.fm/podcasts/runtime" rel="nofollow"&gt;Runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://consultpodcast.com/#_=_" rel="nofollow"&gt;Consult&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spec.fm/podcasts/swift-unwrapped" rel="nofollow"&gt;Swift Unwrapped&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/fireside-swift/id1269435221?mt=2" rel="nofollow"&gt;Fireside Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.swiftbysundell.com/podcast/" rel="nofollow"&gt;Swift by Sundell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-books" class="anchor" aria-hidden="true" href="#books"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://books.apple.com/us/book/swift-programming-language/id881256329" rel="nofollow"&gt;The Swift Programming Language by Apple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bignerdranch.com/books/ios-programming-the-big-nerd-ranch-guide-sixth-edition/" rel="nofollow"&gt;iOS Programming: The Big Nerd Ranch Guide by Christian Keur, Aaron Hillegass, Joe Conway&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Programming-Objective-C-6th-Developers-Library/dp/0321967607" rel="nofollow"&gt;Programming in Objective-C by Stephen G. Kochan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mikeash.com/book.html" rel="nofollow"&gt;The Complete Friday Q &amp;amp; A: Volume 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Core-Data-iOS-Data-Driven-Applications/dp/0321670426" rel="nofollow"&gt;Core Data for iOS: Developing Data-Driven Applications for the iPad, iPhone, and iPod touch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Cocoa-Design-Patterns-Erik-Buck/dp/0321535022" rel="nofollow"&gt;Cocoa Design Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/hello-swift" rel="nofollow"&gt;Hello Swift! by Tanmay Bakshi with Lynn Beighley&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/ios-development-with-swift" rel="nofollow"&gt;iOS Development with Swift by Craig Grummitt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/anyone-can-create-an-app" rel="nofollow"&gt;Anyone Can Create an App by Wendy L. Wise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.objc.io/books/advanced-swift/" rel="nofollow"&gt;Advanced Swift by Chris Eidhof, Ole Begemann, and Airspeed Velocity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.objc.io/books/functional-swift/" rel="nofollow"&gt;Functional Swift by Chris Eidhof, Florian Kugler, and Wouter Swierstra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.objc.io/books/core-data/" rel="nofollow"&gt;Core Data by Florian Kugler and Daniel Eggert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/classic-computer-science-problems-in-swift" rel="nofollow"&gt;Classic Computer Science Problems in Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/swift-in-depth" rel="nofollow"&gt;Swift in Depth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-other-awesome-lists" class="anchor" aria-hidden="true" href="#other-awesome-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Awesome Lists&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Other amazingly awesome lists can be found in the&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bayandin/awesome-awesomeness"&gt;awesome-awesomeness&lt;/a&gt; list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dkhamsing/open-source-ios-apps"&gt;Open Source apps&lt;/a&gt; list of open source iOS apps.&lt;/li&gt;
&lt;li&gt;Awesome-swift
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/matteocrippa/awesome-swift"&gt;@matteocrippa&lt;/a&gt; - A collaborative list of awesome swift resources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Wolg/awesome-swift"&gt;@Wolg&lt;/a&gt; - A curated list of awesome Swift frameworks, libraries and software.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hsavit1/Awesome-Swift-Education"&gt;Awesome-Swift-Education&lt;/a&gt; - All of the resources for Learning About Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sanketfirodiya/sample-watchkit-apps"&gt;awesome watchkit apps&lt;/a&gt; curated list of sample watchkit apps and tutorials.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sanketfirodiya/iOS-learning-resources"&gt;iOS Learning Resources&lt;/a&gt; Comprehensive collection of high quality, frequently updated and well maintained iOS tutorial sites.&lt;/li&gt;
&lt;li&gt;Awesome iOS Animation
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ameizi/awesome-ios-animation"&gt;@ameizi&lt;/a&gt; - A curated list of awesome iOS animation, including Objective-C and Swift libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jzau/awesome-ios-animation"&gt;@jzau&lt;/a&gt; - Collection of Animation projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ameizi/awesome-ios-chart"&gt;awesome-ios-chart&lt;/a&gt; - A curated list of awesome iOS chart libraries, including Objective-C and Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vsouza/awesome-gists#ios"&gt;awesome-gists&lt;/a&gt; - A list of amazing gists (iOS section).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cjwirth/awesome-ios-ui"&gt;awesome-ios-ui&lt;/a&gt; - A curated list of awesome iOS UI/UX libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Awesome-Server-Side-Swift/TheList"&gt;Awesome-Server-Side-Swift/TheList&lt;/a&gt; - A list of Awesome Server Side Swift 3 projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaximAbramchuck/awesome-interview-questions#ios"&gt;awesome-interview-questions&lt;/a&gt; - A curated awesome list of lists of interview questions including iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bakkenbaeck/iOS-handbook"&gt;iOS-Playbook&lt;/a&gt; - Guidelines and best practices for excellent iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jVirus/iOS-Learning-Materials"&gt;iOS-Learning-Materials&lt;/a&gt; - Curated list of articles, web-resources, tutorials and code repositories that may help you dig a little bit deeper into iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carolanitz/Awesome-iOS-Twitter"&gt;Awesome-iOS-Twitter&lt;/a&gt; - A curated list of awesome iOS Twitter accounts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LisaDziuba/Marketing-for-Engineers"&gt;Marketing for Engineers&lt;/a&gt; - A curated collection of marketing articles &amp;amp; tools to grow your product.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olucurious/Awesome-ARKit"&gt;Awesome ARKit&lt;/a&gt; - A curated list of awesome ARKit projects and resources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lascorbe/CocoaConferences"&gt;CocoaConferences&lt;/a&gt; - List of cocoa conferences for iOS &amp;amp; macOS developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/example-ios-apps"&gt;example-ios-apps&lt;/a&gt; - A curated list of Open Source example iOS apps developed in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackr.io/tutorials/learn-ios-swift" rel="nofollow"&gt;Curated-Resources-for-Learning-Swift&lt;/a&gt; - A curated list of resources recommended by the developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/smalam119/classic-problem-solving-algorithms-and-data-structures-in-swift"&gt;ClassicProblemSolvingAndDataStructuresInSwift&lt;/a&gt; - Collection of popular algorithms, data structure and problem solving in Swift 4.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serhii-londar/open-source-mac-os-apps"&gt;Awesome list of open source applications for macOS&lt;/a&gt; - List of awesome open source applications for macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dashvlas/awesome-ios-interview"&gt;Awesome iOS Interview question list&lt;/a&gt; - Guide for interviewers and interviewees. Review these iOS interview questions - and get some practical tips along the way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/app-developers/top"&gt;Top App Developers&lt;/a&gt; - A list of top iOS app developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-and-license" class="anchor" aria-hidden="true" href="#contributing-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing and License&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vsouza/awesome-ios/blob/master/.github/CONTRIBUTING.md"&gt;See the guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Distributed under the MIT license. See LICENSE for more information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vsouza</author><guid isPermaLink="false">https://github.com/vsouza/awesome-ios</guid><pubDate>Mon, 09 Dec 2019 00:19:00 GMT</pubDate></item><item><title>mozilla-mobile/firefox-ios #20 in Swift, This month</title><link>https://github.com/mozilla-mobile/firefox-ios</link><description>&lt;p&gt;&lt;i&gt;Firefox for iOS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-firefox-for-ios---" class="anchor" aria-hidden="true" href="#firefox-for-ios---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Firefox for iOS &lt;a href="https://codebeat.co/projects/github-com-mozilla-firefox-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/20b5b52f8d698b6663ae70eefc16b0946571e009/68747470733a2f2f636f6465626561742e636f2f6261646765732f36376535386236642d626338392d346632322d626138662d373636386139633135633561" alt="codebeat badge" data-canonical-src="https://codebeat.co/badges/67e58b6d-bc89-4f22-ba8f-7668a9c15c5a" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://dashboard.buddybuild.com/apps/57bf25c0f096bc01001e21e0/build/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fa67952a021d36ddae3ef0471b6c020db91a40fa/68747470733a2f2f64617368626f6172642e62756464796275696c642e636f6d2f6170692f737461747573496d6167653f61707049443d353762663235633066303936626330313030316532316530266272616e63683d6d6173746572266275696c643d6c6174657374" alt="BuddyBuild" data-canonical-src="https://dashboard.buddybuild.com/api/statusImage?appID=57bf25c0f096bc01001e21e0&amp;amp;branch=master&amp;amp;build=latest" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/mozilla-mobile/firefox-ios/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9528dbfe07462ac8ebe1b38a983ea97be198f375/68747470733a2f2f636f6465636f762e696f2f67682f6d6f7a696c6c612d6d6f62696c652f66697265666f782d696f732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mozilla-mobile/firefox-ios/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Download on the &lt;a href="https://itunes.apple.com/app/firefox-web-browser/id989804926" rel="nofollow"&gt;App Store&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-this-branch-master" class="anchor" aria-hidden="true" href="#this-branch-master"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;This branch (master)&lt;/h2&gt;
&lt;p&gt;This branch only works with Xcode 11 and supports iOS 11.0 and above&lt;/p&gt;
&lt;p&gt;Please make sure you aim your pull requests in the right direction.&lt;/p&gt;
&lt;p&gt;For bug fixes and features for a specific release use the version branch.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-involved" class="anchor" aria-hidden="true" href="#getting-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting involved&lt;/h2&gt;
&lt;p&gt;Want to contribute but don't know where to start? Here is a list of &lt;a href="https://github.com/mozilla-mobile/firefox-ios/issues?q=is%3Aissue+is%3Aopen+label%3A%22Contributor+OK+%F0%9F%A4%9D%22"&gt;issues that are contributor friendly&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-code" class="anchor" aria-hidden="true" href="#building-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the code&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install the latest &lt;a href="https://developer.apple.com/xcode/downloads/" rel="nofollow"&gt;Xcode developer tools&lt;/a&gt; from Apple.&lt;/li&gt;
&lt;li&gt;Install Carthage
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew update
brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Clone the repository:
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/mozilla-mobile/firefox-ios&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Pull in the project dependencies:
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; firefox-ios
sh ./bootstrap.sh&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Client.xcodeproj&lt;/code&gt; in Xcode.&lt;/li&gt;
&lt;li&gt;Build the &lt;code&gt;Fennec&lt;/code&gt; scheme in Xcode.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-building-user-scripts" class="anchor" aria-hidden="true" href="#building-user-scripts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building User Scripts&lt;/h2&gt;
&lt;p&gt;User Scripts (JavaScript injected into the &lt;code&gt;WKWebView&lt;/code&gt;) are compiled, concatenated and minified using &lt;a href="https://webpack.js.org/" rel="nofollow"&gt;webpack&lt;/a&gt;. User Scripts to be aggregated are placed in the following directories:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/Client
|-- /Frontend
    |-- /UserContent
        |-- /UserScripts
            |-- /AllFrames
            |   |-- /AtDocumentEnd
            |   |-- /AtDocumentStart
            |-- /MainFrame
                |-- /AtDocumentEnd
                |-- /AtDocumentStart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This reduces the total possible number of User Scripts down to four. The compiled output from concatenating and minifying the User Scripts placed in these folders resides in &lt;code&gt;/Client/Assets&lt;/code&gt; and are named accordingly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AllFramesAtDocumentEnd.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AllFramesAtDocumentStart.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MainFrameAtDocumentEnd.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MainFrameAtDocumentStart.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To simplify the build process, these compiled files are checked-in to this repository. When adding or editing User Scripts, these files can be re-compiled with &lt;code&gt;webpack&lt;/code&gt; manually. This requires Node.js to be installed and all required &lt;code&gt;npm&lt;/code&gt; packages can be installed by running &lt;code&gt;npm install&lt;/code&gt; in the root directory of the project. User Scripts can be compiled by running the following &lt;code&gt;npm&lt;/code&gt; command in the root directory of the project:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contributor-guidelines" class="anchor" aria-hidden="true" href="#contributor-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributor guidelines&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-creating-a-pull-request" class="anchor" aria-hidden="true" href="#creating-a-pull-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a pull request&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;All pull requests must be associated with a specific Issue. If an issue doesn't exist please first create it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-swift-style" class="anchor" aria-hidden="true" href="#swift-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift style&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Swift code should generally follow the conventions listed at &lt;a href="https://github.com/raywenderlich/swift-style-guide"&gt;https://github.com/raywenderlich/swift-style-guide&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;Exception: we use 4-space indentation instead of 2.&lt;/li&gt;
&lt;li&gt;This is a loose standard. We do our best to follow this style&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-whitespace" class="anchor" aria-hidden="true" href="#whitespace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Whitespace&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;New code should not contain any trailing whitespace.&lt;/li&gt;
&lt;li&gt;We recommend enabling both the "Automatically trim trailing whitespace" and "Including whitespace-only lines" preferences in Xcode (under Text Editing).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase --whitespace=fix&lt;/code&gt; can also be used to remove whitespace from your commits before issuing a pull request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-commits" class="anchor" aria-hidden="true" href="#commits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commits&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Each commit should have a single clear purpose. If a commit contains multiple unrelated changes, those changes should be split into separate commits.&lt;/li&gt;
&lt;li&gt;If a commit requires another commit to build properly, those commits should be squashed.&lt;/li&gt;
&lt;li&gt;Follow-up commits for any review comments should be squashed. Do not include "Fixed PR comments", merge commits, or other "temporary" commits in pull requests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mozilla-mobile</author><guid isPermaLink="false">https://github.com/mozilla-mobile/firefox-ios</guid><pubDate>Mon, 09 Dec 2019 00:20:00 GMT</pubDate></item><item><title>xmartlabs/XLPagerTabStrip #21 in Swift, This month</title><link>https://github.com/xmartlabs/XLPagerTabStrip</link><description>&lt;p&gt;&lt;i&gt;Android PagerTabStrip for iOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-xlpagertabstrip" class="anchor" aria-hidden="true" href="#xlpagertabstrip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XLPagerTabStrip&lt;/h1&gt;
&lt;p align="left"&gt;
&lt;a href="https://travis-ci.org/xmartlabs/XLPagerTabStrip" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2d16544f1c7a922cd953d2d6e8c3be9147ca1dc5/68747470733a2f2f7472617669732d63692e6f72672f786d6172746c6162732f584c506167657254616253747269702e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://travis-ci.org/xmartlabs/XLPagerTabStrip.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4f118b3bbdae3a6c576b02083da10f466a7d46d9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d694f532d626c75652e7376673f7374796c653d666c6174"&gt;&lt;img src="https://camo.githubusercontent.com/4f118b3bbdae3a6c576b02083da10f466a7d46d9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d694f532d626c75652e7376673f7374796c653d666c6174" alt="Platform iOS" data-canonical-src="https://img.shields.io/badge/platform-iOS-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/251e6a3e9e63afd624f423e8beb24e4a3144074d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7377696674352d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Swift 5 compatible" data-canonical-src="https://img.shields.io/badge/swift5-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/XLPagerTabStrip" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ec5c2a0e0b1b35289a77e3b5f568fbcd6a62fd0/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f584c506167657254616253747269702e737667" alt="CocoaPods compatible" data-canonical-src="https://img.shields.io/cocoapods/v/XLPagerTabStrip.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/xmartlabs/XLPagerTabStrip/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ad0bc4de8816451a4a76b886b76142b99d10ffb/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174" alt="License: MIT" data-canonical-src="http://img.shields.io/badge/license-MIT-blue.svg?style=flat" style="max-width:100%;"&gt;
&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Made with &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;‚ù§Ô∏è&lt;/g-emoji&gt; by &lt;a href="http://xmartlabs.com" rel="nofollow"&gt;XMARTLABS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Android &lt;a href="http://developer.android.com/reference/android/support/v4/view/PagerTabStrip.html" rel="nofollow"&gt;PagerTabStrip&lt;/a&gt; for iOS!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XLPagerTabStrip&lt;/strong&gt; is a &lt;em&gt;Container View Controller&lt;/em&gt; that allows us to switch easily among a collection of view controllers. Pan gesture can be used to move on to next or previous view controller. It shows a interactive indicator of the current, previous, next child view controllers.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;th&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/instagram.gif"&gt;&lt;img src="Example/instagram.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/spotify.gif"&gt;&lt;img src="Example/spotify.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/youtube.gif"&gt;&lt;img src="Example/youtube.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/pagerTabStripTypes.gif"&gt;&lt;img src="Example/pagerTabStripTypes.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-getting-involved" class="anchor" aria-hidden="true" href="#getting-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting involved&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt; please feel free to &lt;strong&gt;submit pull requests&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;have a feature request&lt;/strong&gt; please &lt;strong&gt;open an issue&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt; or &lt;strong&gt;need help&lt;/strong&gt; please &lt;strong&gt;check older issues, &lt;a href="#faq"&gt;FAQ&lt;/a&gt; and threads on &lt;a href="http://stackoverflow.com/questions/tagged/XLPagerTabStrip" rel="nofollow"&gt;StackOverflow&lt;/a&gt; (Tag 'XLPagerTabStrip') before submitting an issue&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Before contribute check the &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; file for more info.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you use &lt;strong&gt;XLPagerTabStrip&lt;/strong&gt; in your app we would love to hear about it! Drop us a line on &lt;a href="https://twitter.com/xmartlabs" rel="nofollow"&gt;twitter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pager-types" class="anchor" aria-hidden="true" href="#pager-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pager Types&lt;/h2&gt;
&lt;p&gt;The library provides 4 different ways to show the view controllers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-button-bar" class="anchor" aria-hidden="true" href="#button-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Button Bar&lt;/h3&gt;
&lt;p&gt;This is likely the most common pager type. It's used by many well-known apps such as instagram, youtube, skype, and many others.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/barButton.gif"&gt;&lt;img src="Example/barButton.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bar" class="anchor" aria-hidden="true" href="#bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bar&lt;/h3&gt;
&lt;p&gt;This mode doesn't show a title neither an image. It only shows a bar that indicates the current view controller.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/bar.gif"&gt;&lt;img src="Example/bar.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-twitter" class="anchor" aria-hidden="true" href="#twitter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Twitter&lt;/h3&gt;
&lt;p&gt;A long time ago, the twitter app made use of this type of pager in the app main screen.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/twitter.gif"&gt;&lt;img src="Example/twitter.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-segmented" class="anchor" aria-hidden="true" href="#segmented"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Segmented&lt;/h3&gt;
&lt;p&gt;This mode uses a &lt;code&gt;UISegmentedControl&lt;/code&gt; to indicate which view controller is being displayed.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/segmented.gif"&gt;&lt;img src="Example/segmented.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Basically, we just need to provide the list of child view controllers to show, and these view controllers should provide the information (title or image) that will be shown in the associated indicator.&lt;/p&gt;
&lt;p&gt;Let's see the steps to do this:&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-choose-which-type-of-pager-we-want-to-create" class="anchor" aria-hidden="true" href="#choose-which-type-of-pager-we-want-to-create"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choose which type of pager we want to create&lt;/h5&gt;
&lt;p&gt;First, we must choose the type of pager we want to create.  Depending on our choice, we will have to create a view controller that extends from one of the following controllers: &lt;code&gt;TwitterPagerTabStripViewController&lt;/code&gt;, &lt;code&gt;ButtonBarPagerTabStripViewController&lt;/code&gt;, &lt;code&gt;SegmentedPagerTabStripViewController&lt;/code&gt;, &lt;code&gt;BarPagerTabStripViewController&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All these built-in pager controllers extend from the base class &lt;code&gt;PagerTabStripViewController&lt;/code&gt;.
You can also make your custom pager controller by extending directly from &lt;code&gt;PagerTabStripViewController&lt;/code&gt; in the event that no pager menu type fits your needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;XLPagerTabStrip&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyPagerTabStripName&lt;/span&gt;: &lt;span class="pl-e"&gt;ButtonBarPagerTabStripViewController &lt;/span&gt;{
  &lt;span class="pl-k"&gt;..&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-connect-outlets-and-add-layout-constraints" class="anchor" aria-hidden="true" href="#connect-outlets-and-add-layout-constraints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connect outlets and add layout constraints&lt;/h5&gt;
&lt;p&gt;We strongly recommend using IB to set up our page controller views.&lt;/p&gt;
&lt;p&gt;Drag a &lt;code&gt;UIViewController&lt;/code&gt; into the storyboard and set up its class with your pager controller (&lt;code&gt;MyPagerTabStripName&lt;/code&gt;).
Drag a &lt;code&gt;UIScrollView&lt;/code&gt; into your view controller view and connect &lt;code&gt;PagerTabStripViewController&lt;/code&gt; &lt;code&gt;containerView&lt;/code&gt; outlet with the scroll view.&lt;/p&gt;
&lt;p&gt;Depending on which type of paging view controller you are working with you may have to connect more outlets.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;BarPagerTabStripViewController&lt;/code&gt;, we should connect &lt;code&gt;barView&lt;/code&gt; outlet. barView type is UIView. &lt;code&gt;ButtonBarPagerTabStripViewController&lt;/code&gt; requires us to connect &lt;code&gt;buttonBarView&lt;/code&gt; outlet. &lt;code&gt;buttonBarView&lt;/code&gt; type is &lt;code&gt;ButtonBarView&lt;/code&gt; which extends from &lt;code&gt;UICollectionView&lt;/code&gt;. &lt;code&gt;SegmentedPagerTabStripViewController&lt;/code&gt; has a &lt;code&gt;segmentedControl&lt;/code&gt; outlet; if the outlet is not connected the library try to set up the navigationItem &lt;code&gt;titleView&lt;/code&gt; property using a &lt;code&gt;UISegmentedControl&lt;/code&gt;. &lt;code&gt;TwitterPagerTabStripViewController&lt;/code&gt; doesn't require us to connect any additional outlet.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The example project contains a example for each pager controller type and we can look into it to see how views were added and how outlets were connected.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;&lt;a id="user-content-provide-the-view-controllers-that-will-appear-embedded-into-the-pagertabstrip-view-controller" class="anchor" aria-hidden="true" href="#provide-the-view-controllers-that-will-appear-embedded-into-the-pagertabstrip-view-controller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Provide the view controllers that will appear embedded into the PagerTabStrip view controller&lt;/h5&gt;
&lt;p&gt;You can provide the view controllers by overriding &lt;code&gt;func viewControllers(for: pagerTabStripController: PagerTabStripViewController) -&amp;gt; [UIViewController]&lt;/code&gt; method.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewControllers&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;pagerTabStripController&lt;/span&gt;: PagerTabStripViewController) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [UIViewController] {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; [&lt;span class="pl-c1"&gt;MyEmbeddedViewController&lt;/span&gt;(), &lt;span class="pl-c1"&gt;MySecondEmbeddedViewController&lt;/span&gt;()]
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The method above is the only method declared in &lt;code&gt;PagerTabStripDataSource&lt;/code&gt; protocol. We don't need to explicitly conform to it since base pager class already does it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;&lt;a id="user-content-provide-information-to-show-in-each-indicator" class="anchor" aria-hidden="true" href="#provide-information-to-show-in-each-indicator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Provide information to show in each indicator&lt;/h5&gt;
&lt;p&gt;Every UIViewController that will appear within the PagerTabStrip needs to provide either a title or an image.
In order to do so they should conform to &lt;code&gt;IndicatorInfoProvider&lt;/code&gt; by implementing &lt;code&gt;func indicatorInfo(for pagerTabStripController: PagerTabStripViewController) -&amp;gt; IndicatorInfo&lt;/code&gt;
which provides the information required to show the PagerTabStrip menu (indicator) associated with the view controller.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyEmbeddedViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UITableViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;IndicatorInfoProvider &lt;/span&gt;{

  &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;indicatorInfo&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;pagerTabStripController&lt;/span&gt;: PagerTabStripViewController) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; IndicatorInfo {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;IndicatorInfo&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Child title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;For a detailed step-by-step guide about how to use the library, please check out this community &lt;a href="https://medium.com/michaeladeyeri/how-to-implement-android-like-tab-layouts-in-ios-using-swift-3-578516c3aa9" rel="nofollow"&gt;blog post&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;That's it! We're done! &lt;g-emoji class="g-emoji" alias="beers" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png"&gt;üçª&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="beers" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png"&gt;üçª&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h2&gt;
&lt;h5&gt;&lt;a id="user-content-pager-behaviour" class="anchor" aria-hidden="true" href="#pager-behaviour"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pager Behaviour&lt;/h5&gt;
&lt;p&gt;The pager indicator can be updated progressive as we swipe or at once in the middle of the transition between the view controllers.
By setting up &lt;code&gt;pagerBehaviour&lt;/code&gt; property we can choose how the indicator should be updated.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; pagerBehaviour&lt;span class="pl-k"&gt;:&lt;/span&gt; PagerTabStripBehaviour&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PagerTabStripBehaviour&lt;/span&gt; {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;common&lt;/span&gt;(&lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;skipIntermediteViewControllers&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;progressive&lt;/span&gt;(&lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;skipIntermediteViewControllers&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;elasticIndicatorLimit&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Default Values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Twitter Type&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PagerTabStripBehaviour.&lt;span class="pl-c1"&gt;common&lt;/span&gt;(&lt;span class="pl-c1"&gt;skipIntermediateViewControllers&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Segmented Type&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PagerTabStripBehaviour.&lt;span class="pl-c1"&gt;common&lt;/span&gt;(&lt;span class="pl-c1"&gt;skipIntermediateViewControllers&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bar Type&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PagerTabStripBehaviour.&lt;span class="pl-c1"&gt;progressive&lt;/span&gt;(&lt;span class="pl-c1"&gt;skipIntermediateViewControllers&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;elasticIndicatorLimit&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ButtonBar Type&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PagerTabStripBehaviour.&lt;span class="pl-c1"&gt;progressive&lt;/span&gt;(&lt;span class="pl-c1"&gt;skipIntermediateViewControllers&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;elasticIndicatorLimit&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you might have noticed, &lt;code&gt;common&lt;/code&gt; and &lt;code&gt;progressive&lt;/code&gt; enumeration cases have &lt;code&gt;skipIntermediateViewControllers&lt;/code&gt; and &lt;code&gt;elasticIndicatorLimit&lt;/code&gt; associated values.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;skipIntermediateViewControllers&lt;/code&gt; allows us to skip intermediate view controllers when a tab indicator is tapped.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;elasticIndicatorLimit&lt;/code&gt; allows us to tension the indicator when we reach a limit, I mean when we try to move forward from last indicator or move back from first indicator.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-pagertabstripdelegate--pagertabstripisprogressivedelegate" class="anchor" aria-hidden="true" href="#pagertabstripdelegate--pagertabstripisprogressivedelegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PagerTabStripDelegate &amp;amp; PagerTabStripIsProgressiveDelegate&lt;/h5&gt;
&lt;p&gt;Normally we don't need to implement these protocols because each pager type already conforms to it in order to properly update its indicator. However, there may be some scenarios when overriding a method may come in handy.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;PagerTabStripDelegate&lt;/span&gt;: &lt;span class="pl-k"&gt;class&lt;/span&gt; {

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;updateIndicator&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;viewController&lt;/span&gt;: PagerTabStripViewController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;fromIndex&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;toIndex&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;PagerTabStripIsProgressiveDelegate&lt;/span&gt; : &lt;span class="pl-e"&gt;PagerTabStripDelegate &lt;/span&gt;{

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;updateIndicator&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;viewController&lt;/span&gt;: PagerTabStripViewController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;fromIndex&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;toIndex&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;withProgressPercentage&lt;/span&gt; &lt;span class="pl-smi"&gt;progressPercentage&lt;/span&gt;: CGFloat, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;indexWasChanged&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Again, the method invoked by the library depends on the &lt;code&gt;pagerBehaviour&lt;/code&gt; value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-buttonbar-customization" class="anchor" aria-hidden="true" href="#buttonbar-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ButtonBar Customization&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarBackgroundColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; buttonBar minimumInteritemSpacing value, note that button bar extends from UICollectionView&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarMinimumInteritemSpacing&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; buttonBar minimumLineSpacing value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarMinimumLineSpacing&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; buttonBar flow layout left content inset value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarLeftContentInset&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; buttonBar flow layout right content inset value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarRightContentInset&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; selected bar view is created programmatically so it's important to set up the following 2 properties properly&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedBarBackgroundColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIColor.&lt;span class="pl-smi"&gt;black&lt;/span&gt;
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedBarHeight&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; each buttonBar item is a UICollectionView cell of type ButtonBarViewCell&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarItemBackgroundColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarItemFont&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIFont.&lt;span class="pl-c1"&gt;systemFont&lt;/span&gt;(&lt;span class="pl-c1"&gt;ofSize&lt;/span&gt;: &lt;span class="pl-c1"&gt;18&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; helps to determine the cell width, it represent the space before and after the title label&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarItemLeftRightMargin&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarItemTitleColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; in case the barView items do not fill the screen width this property stretch the cells to fill the screen&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarItemsShouldFillAvailiableWidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only used if button bar is created programmatically and not using storyboards or nib files as recommended.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; buttonBarHeight&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Settings should be called before &lt;code&gt;viewDidLoad&lt;/code&gt; is called.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLoad&lt;/span&gt;() {
   &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;settings&lt;/span&gt;.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedBarHeight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
   &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;settings&lt;/span&gt;.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedBarBackgroundColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIColor.&lt;span class="pl-smi"&gt;white&lt;/span&gt;

   &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewDidLoad&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-update-cells-when-selected-indicator-changes" class="anchor" aria-hidden="true" href="#update-cells-when-selected-indicator-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update cells when selected indicator changes&lt;/h5&gt;
&lt;p&gt;We may need to update the indicator cell when the displayed view controller changes. The following function properties help to accomplish that. Depending on our pager &lt;code&gt;pagerBehaviour&lt;/code&gt; value we will have to set up &lt;code&gt;changeCurrentIndex&lt;/code&gt; or &lt;code&gt;changeCurrentIndexProgressive&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; changeCurrentIndex&lt;span class="pl-k"&gt;:&lt;/span&gt; ((&lt;span class="pl-c1"&gt;oldCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;newCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt;)&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; changeCurrentIndexProgressive&lt;span class="pl-k"&gt;:&lt;/span&gt; ((&lt;span class="pl-c1"&gt;oldCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;newCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;progressPercentage&lt;/span&gt;: CGFloat, &lt;span class="pl-c1"&gt;changeCurrentIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt;)&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;changeCurrentIndexProgressive &lt;span class="pl-k"&gt;=&lt;/span&gt; { (&lt;span class="pl-c1"&gt;oldCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;newCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;progressPercentage&lt;/span&gt;: CGFloat, &lt;span class="pl-c1"&gt;changeCurrentIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; changeCurrentIndex &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; }

    oldCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;label&lt;/span&gt;.&lt;span class="pl-smi"&gt;textColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIColor&lt;/span&gt;(&lt;span class="pl-c1"&gt;white&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;alpha&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;)
    newCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;label&lt;/span&gt;.&lt;span class="pl-smi"&gt;textColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIColor.&lt;span class="pl-smi"&gt;white&lt;/span&gt;

    &lt;span class="pl-k"&gt;if&lt;/span&gt; animated {
        UIView.&lt;span class="pl-c1"&gt;animate&lt;/span&gt;(&lt;span class="pl-c1"&gt;withDuration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;animations&lt;/span&gt;: { () &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
            newCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;transform&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CGAffineTransform&lt;/span&gt;(&lt;span class="pl-c1"&gt;scaleX&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;)
            oldCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;transform&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CGAffineTransform&lt;/span&gt;(&lt;span class="pl-c1"&gt;scaleX&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.8&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.8&lt;/span&gt;)
        })
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        newCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;transform&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CGAffineTransform&lt;/span&gt;(&lt;span class="pl-c1"&gt;scaleX&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;)
        oldCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;transform&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CGAffineTransform&lt;/span&gt;(&lt;span class="pl-c1"&gt;scaleX&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.8&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.8&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-bar-type-customization" class="anchor" aria-hidden="true" href="#bar-type-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bar Type Customization&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;barBackgroundColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedBarBackgroundColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; barHeight is only set up when the bar is created programmatically and not using storyboards or xib files as recommended.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;barHeight&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-twitter-type-customization" class="anchor" aria-hidden="true" href="#twitter-type-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Twitter Type Customization&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;dotColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIColor&lt;/span&gt;(&lt;span class="pl-c1"&gt;white&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;alpha&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.4&lt;/span&gt;)
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedDotColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIColor.&lt;span class="pl-smi"&gt;white&lt;/span&gt;
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;portraitTitleFont&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIFont.&lt;span class="pl-c1"&gt;systemFont&lt;/span&gt;(&lt;span class="pl-c1"&gt;ofSize&lt;/span&gt;: &lt;span class="pl-c1"&gt;18&lt;/span&gt;)
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;landscapeTitleFont&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIFont.&lt;span class="pl-c1"&gt;systemFont&lt;/span&gt;(&lt;span class="pl-c1"&gt;ofSize&lt;/span&gt;: &lt;span class="pl-c1"&gt;15&lt;/span&gt;)
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;titleColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIColor.&lt;span class="pl-smi"&gt;white&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-segmented-type-customization" class="anchor" aria-hidden="true" href="#segmented-type-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Segmented Type Customization&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;segmentedControlColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 9.3+&lt;/li&gt;
&lt;li&gt;Xcode 10.2+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Follow these 3 steps to run Example project: Clone XLPagerTabStrip repository, open XLPagerTabStrip workspace and run the &lt;em&gt;Example&lt;/em&gt; project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects.&lt;/p&gt;
&lt;p&gt;To install XLPagerTabStrip, simply add the following line to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;XLPagerTabStrip&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 9.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a simple, decentralized dependency manager for Cocoa.&lt;/p&gt;
&lt;p&gt;To install XLPagerTabStrip, simply add the following line to your Cartfile:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "xmartlabs/XLPagerTabStrip" ~&amp;gt; 9.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-how-to-change-the-visible-child-view-controller-programmatically" class="anchor" aria-hidden="true" href="#how-to-change-the-visible-child-view-controller-programmatically"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to change the visible child view controller programmatically&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;PagerTabStripViewController&lt;/code&gt; provides the following methods to programmatically change the visible child view controller:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;moveToViewController&lt;/span&gt;(&lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)
&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;moveToViewController&lt;/span&gt;(&lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)
&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;moveTo&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;viewController&lt;/span&gt;&lt;/span&gt;: UIViewController)
&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;moveTo&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;viewController&lt;/span&gt;&lt;/span&gt;: UIViewController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-how-to-migrate-from-swift-2-to-swift-3-" class="anchor" aria-hidden="true" href="#how-to-migrate-from-swift-2-to-swift-3-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to migrate from Swift 2 to Swift 3 &lt;a name="user-content-migrate"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Check out &lt;a href="https://github.com/xmartlabs/XLPagerTabStrip/blob/master/Migration.md"&gt;our migration guide&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mtnBarreto"&gt;Martin Barreto&lt;/a&gt; (&lt;a href="https://twitter.com/mtnBarreto" rel="nofollow"&gt;@mtnBarreto&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-change-log" class="anchor" aria-hidden="true" href="#change-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Log&lt;/h2&gt;
&lt;p&gt;This can be found in the &lt;a href="CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; file.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xmartlabs</author><guid isPermaLink="false">https://github.com/xmartlabs/XLPagerTabStrip</guid><pubDate>Mon, 09 Dec 2019 00:21:00 GMT</pubDate></item><item><title>iina/iina #22 in Swift, This month</title><link>https://github.com/iina/iina</link><description>&lt;p&gt;&lt;i&gt;The modern video player for macOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/iina/iina/raw/master/iina/Assets.xcassets/AppIcon.appiconset/256-1.png"&gt;&lt;img src="https://github.com/iina/iina/raw/master/iina/Assets.xcassets/AppIcon.appiconset/256-1.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a id="user-content-iina" class="anchor" aria-hidden="true" href="#iina"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IINA&lt;/h1&gt;
&lt;p align="center"&gt;IINA is the &lt;b&gt;modern&lt;/b&gt; video player for macOS.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="https://iina.io" rel="nofollow"&gt;Website&lt;/a&gt; ¬∑
&lt;a href="https://github.com/iina/iina/releases"&gt;Releases&lt;/a&gt; ¬∑
&lt;a href="https://t.me/IINAUsers" rel="nofollow"&gt;Telegram Group&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Based on &lt;a href="https://github.com/mpv-player/mpv"&gt;mpv&lt;/a&gt;, which provides the best decoding capacity on macOS&lt;/li&gt;
&lt;li&gt;Designed with modern versions of macOS (10.11+) in mind&lt;/li&gt;
&lt;li&gt;All the features you need for video and music: subtitles, playlists, chapters‚Ä¶and much, much more!&lt;/li&gt;
&lt;li&gt;Force Touch, picture-in-picture and advanced Touch Bar support&lt;/li&gt;
&lt;li&gt;Customizable user interface including multiple color schemes and on screen controller (OSC) layout positioning&lt;/li&gt;
&lt;li&gt;Standalone Music Mode designed for audio files&lt;/li&gt;
&lt;li&gt;Video thumbnails&lt;/li&gt;
&lt;li&gt;Online subtitle searching and intelligent local subtitle matching&lt;/li&gt;
&lt;li&gt;Unlimited playback history&lt;/li&gt;
&lt;li&gt;Convenient and interactive settings for video/audio filters&lt;/li&gt;
&lt;li&gt;Fully customizable keyboard, mouse, trackpad, and gesture controls&lt;/li&gt;
&lt;li&gt;mpv configuration files and script system for advanced users&lt;/li&gt;
&lt;li&gt;Command line tool and browser extensions provided&lt;/li&gt;
&lt;li&gt;In active development&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;IINA uses &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; for managing the installation of third-party libraries. If you don't already have it installed, here's how you can do so:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-rubygems" class="anchor" aria-hidden="true" href="#using-rubygems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using RubyGems&lt;/h4&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;sudo gem install cocoapods&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-using-homebrew" class="anchor" aria-hidden="true" href="#using-homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Homebrew&lt;/h4&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;brew install cocoapods&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;pod install&lt;/code&gt; in project's root directory.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;IINA ships with pre-compiled dynamic libraries for convenience reasons. If you aren't planning on modifying these libraries, you can follow the instructions below to build IINA; otherwise, skip down to &lt;a href="#building-mpv-manually"&gt;Building mpv manually&lt;/a&gt;:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-pre-compiled-libraries" class="anchor" aria-hidden="true" href="#using-the-pre-compiled-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the pre-compiled libraries&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open iina.xcworkspace in the &lt;a href="https://itunes.apple.com/us/app/xcode/id497799835" rel="nofollow"&gt;latest public version of Xcode&lt;/a&gt;. &lt;em&gt;IINA may not build if you use any other version.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build the project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-building-mpv-manually" class="anchor" aria-hidden="true" href="#building-mpv-manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building mpv manually&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Build your own copy of mpv. If you're using a package manager to manage dependencies, the steps below outline the process.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-homebrew" class="anchor" aria-hidden="true" href="#homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homebrew&lt;/h4&gt;
&lt;p&gt;Use our tap as it passes in the correct flags to mpv's configure script:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;brew tap iina/homebrew-mpv-iina&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;brew install mpv-iina&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-macports" class="anchor" aria-hidden="true" href="#macports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MacPorts&lt;/h4&gt;
&lt;p&gt;Pass in these flags when installing:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;# &lt;span class="pl-s1"&gt;port install mpv +uchardet -bundle -rubberband configure.args=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--enable-libmpv-shared --enable-lua --enable-libarchive --enable-libbluray --disable-swift --disable-rubberband&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy the latest &lt;a href="https://github.com/mpv-player/mpv/tree/master/libmpv"&gt;header files from mpv&lt;/a&gt; (*.h) into &lt;code&gt;deps/include/mpv/&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;other/parse_doc.rb&lt;/code&gt;. This script will fetch the latest mpv documentation and generate &lt;code&gt;MPVOption.swift&lt;/code&gt;, &lt;code&gt;MPVCommand.swift&lt;/code&gt; and &lt;code&gt;MPVProperty.swift&lt;/code&gt;. This is only needed when updating libmpv. Note that if the API changes, the player source code may also need to be changed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;other/change_lib_dependencies.rb&lt;/code&gt;. This script will deploy the dependent libraries into &lt;code&gt;deps/lib&lt;/code&gt;. If you're using a package manager to manage dependencies, invoke it like so:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-homebrew-1" class="anchor" aria-hidden="true" href="#homebrew-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homebrew&lt;/h4&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;other/change_lib_dependencies.rb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;brew --prefix&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;brew --prefix mpv-iina&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;/lib/libmpv.dylib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-macports-1" class="anchor" aria-hidden="true" href="#macports-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MacPorts&lt;/h4&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;port contents mpv &lt;span class="pl-k"&gt;|&lt;/span&gt; grep &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\.dylib$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; xargs other/change_lib_dependencies.rb /opt/local&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open iina.xcworkspace in the &lt;a href="https://itunes.apple.com/us/app/xcode/id497799835" rel="nofollow"&gt;latest public version of Xcode&lt;/a&gt;. &lt;em&gt;IINA may not build if you use any other version.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove all of references to .dylib files from the Frameworks group in the sidebar and drag all the .dylib files in &lt;code&gt;deps/lib&lt;/code&gt; to that group.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Drag all the .dylib files in &lt;code&gt;deps/lib&lt;/code&gt; into the "Embedded Binaries" section of the iina target.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build the project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;IINA is always looking for contributions, whether it's through bug reports, code, or new translations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you find a bug in IINA, or would like to suggest a new feature or enhancement, it'd be nice if you could &lt;a href="https://github.com/iina/iina/issues"&gt;search your problem first&lt;/a&gt;; while we don't mind duplicates, keeping issues unique helps us save time and considates effort. If you can't find your issue, feel free to &lt;a href="https://github.com/iina/iina/issues/new"&gt;file a new one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're looking to contribute code, please read &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;‚Äìit has information on IINA's process for handling contributions, and tips on how the code is structured to make your work easier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you'd like to translate IINA to your language, please check the &lt;a href="https://github.com/iina/iina/wiki/Translation-Status"&gt;Translation Status&lt;/a&gt; page first: if a language is labeled as "Need help", then feel free to &lt;a href="https://github.com/iina/iina/wiki/Translation#update-translations"&gt;update the translation&lt;/a&gt;. If it doesn't contain your language at all, you can &lt;a href="https://github.com/iina/iina/wiki/Translation"&gt;submit a new translation&lt;/a&gt;. If you need help working on a translation, you can contact &lt;a href="https://github.com/lhc70000"&gt;@lhc70000&lt;/a&gt; or file an issue and one of the maintainers will try to help you out.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>iina</author><guid isPermaLink="false">https://github.com/iina/iina</guid><pubDate>Mon, 09 Dec 2019 00:22:00 GMT</pubDate></item><item><title>ephread/Instructions #23 in Swift, This month</title><link>https://github.com/ephread/Instructions</link><description>&lt;p&gt;&lt;i&gt;Create walkthroughs and guided tours (coach marks) in a simple way, with Swift.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/dd6f8e6c865dcf4f9198310e3008f3e71a238e92/68747470733a2f2f692e696d6775722e636f6d2f305746527338652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/dd6f8e6c865dcf4f9198310e3008f3e71a238e92/68747470733a2f2f692e696d6775722e636f6d2f305746527338652e706e67" alt="Instructions" data-canonical-src="https://i.imgur.com/0WFRs8e.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ephread/Instructions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c3359d73eefc8b0db34e40009e556315f5ca1c9/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f657068726561642f496e737472756374696f6e732e737667" alt="Travis build status" data-canonical-src="https://img.shields.io/travis/ephread/Instructions.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codebeat.co/projects/github-com-ephread-instructions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/febbce698fc4cbb7d713287ef0bf9352fd23ecc4/68747470733a2f2f636f6465626561742e636f2f6261646765732f37626262313762352d326364652d343130382d616163302d656566636434333963663966" alt="codebeat badge" data-canonical-src="https://codebeat.co/badges/7bbb17b5-2cde-4108-aac0-eefcd439cf9f" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/ephread/Instructions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74b060e12e6db0dee1ac17cb4abe9a56bd300b24/68747470733a2f2f636f6465636f762e696f2f67682f657068726561642f496e737472756374696f6e732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/ephread/Instructions/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://cocoapods.org/pods/Instructions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3057668b0a66df2d5f72a4c5c2314f7caaa1d9f/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f496e737472756374696f6e732e737667" alt="CocoaPods Shield" data-canonical-src="https://img.shields.io/cocoapods/v/Instructions.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/ephread/Instructions?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/ephread/Instructions" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add customizable coach marks into your iOS project. Available for both iPhone and iPad.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asking-questions--contributing"&gt;Asking Questions / Contributing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#asking-questions"&gt;Asking Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cocoapods"&gt;CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#carthage"&gt;Carthage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manually"&gt;Manually&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-usage"&gt;Advanced Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#instructions-within-app-extensions"&gt;Usage within App Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/072ef03302b2ba16605c71f8e5e7a19bb700e149/687474703a2f2f692e696d6775722e636f6d2f4a556c514839462e676966"&gt;&lt;img src="https://camo.githubusercontent.com/072ef03302b2ba16605c71f8e5e7a19bb700e149/687474703a2f2f692e696d6775722e636f6d2f4a556c514839462e676966" alt="Instructions Demo" data-canonical-src="http://i.imgur.com/JUlQH9F.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#advanced-usage"&gt;Customizable highlight system&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#providing-custom-views"&gt;Customizable views&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#customizing-how-the-coach-mark-will-show"&gt;Customizable positions&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#let-users-skip-the-tour"&gt;Skipable tour&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#piloting-the-flow-from-the-code"&gt;Pilotable from code&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#usage-within-app-extensions"&gt;App Extensions support&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#animating-coach-marks"&gt;Animatable coach marks&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Right-to-left support&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Size transition support (orientation and multi-tasking)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Partial &lt;code&gt;UIVisualEffectView&lt;/code&gt; support&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Cross controllers walkthrough&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Multiple coach marks support&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 11 / Swift 5+&lt;/li&gt;
&lt;li&gt;iOS 11.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-asking-questions--contributing" class="anchor" aria-hidden="true" href="#asking-questions--contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asking Questions / Contributing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-asking-questions" class="anchor" aria-hidden="true" href="#asking-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asking questions&lt;/h3&gt;
&lt;p&gt;If you need help with something in particular, ask a question in the &lt;a href="https://gitter.im/ephread/Instructions" rel="nofollow"&gt;Gitter room&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;If you want to contribute, be sure to take a look at &lt;a href="https://github.com/ephread/Instructions/blob/master/CONTRIBUTING.md"&gt;the contributing guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Add Instructions to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;10.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Instructions&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.4.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add Instructions to your Cartfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "ephread/Instructions" ~&amp;gt; 1.4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can then update, build and drag the generated framework into your project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ carthage update
$ carthage build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;p&gt;If you rather stay away from both CocoaPods and Carthage, you can also install Instructions manually, with the cost of managing updates yourself.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-embedded-framework" class="anchor" aria-hidden="true" href="#embedded-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Framework&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Drag the Instructions.xcodeproj into the project navigator of your application's Xcode project.&lt;/li&gt;
&lt;li&gt;Still in the project navigator, select your application project. The target configuration panel should show up.&lt;/li&gt;
&lt;li&gt;Select the appropriate target and in the "General" panel, scroll down to the section named "Embedded Binaries".&lt;/li&gt;
&lt;li&gt;Click on the + button and select the "Instructions.framework" under the "Product" directory.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h3&gt;
&lt;p&gt;Open up the controller for which you wish to display coach marks and instantiate a new &lt;code&gt;CoachMarksController&lt;/code&gt;. You should also provide a &lt;code&gt;dataSource&lt;/code&gt;, which is an object conforming to the &lt;code&gt;CoachMarksControllerDataSource&lt;/code&gt; protocol.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DefaultViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;CoachMarksControllerDataSource&lt;/span&gt;, &lt;span class="pl-e"&gt;CoachMarksControllerDelegate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; coachMarksController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CoachMarksController&lt;/span&gt;()

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLoad&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewDidLoad&lt;/span&gt;()

        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataSource&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-data-source" class="anchor" aria-hidden="true" href="#data-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Source&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;CoachMarksControllerDataSource&lt;/code&gt; declares three mandatory methods.&lt;/p&gt;
&lt;p&gt;The first one asks for the number of coach marks to display. Let's pretend that you want to display only one coach mark. Note that the &lt;code&gt;CoachMarksController&lt;/code&gt; requesting the information is supplied, allowing you to supply data for multiple &lt;code&gt;CoachMarksController&lt;/code&gt;, within a single dataSource.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;numberOfCoachMarks&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second one asks for metadata. This allows you to customize how a coach mark will position and appear, but won't let you define its look (more on this later). Metadata are packaged in a struct named &lt;code&gt;CoachMark&lt;/code&gt;. Note the parameter &lt;code&gt;coachMarkAt&lt;/code&gt;, it gives you the coach mark logical position, much like and &lt;code&gt;IndexPath&lt;/code&gt; would do. &lt;code&gt;coachMarksController&lt;/code&gt; provides you with an easy way to create a default &lt;code&gt;CoachMark&lt;/code&gt; object, from a given view.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pointOfInterest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIView&lt;/span&gt;()

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController,
                              &lt;span class="pl-en"&gt;coachMarkAt&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; CoachMark {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; coachMarksController.&lt;span class="pl-smi"&gt;helper&lt;/span&gt;.&lt;span class="pl-c1"&gt;makeCoachMark&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: pointOfInterest)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The third one supplies two views (much like &lt;code&gt;cellForRowAtIndexPath&lt;/code&gt;) in the form a Tuple. The &lt;em&gt;body&lt;/em&gt; view is mandatory, as it's the core of the coach mark. The &lt;em&gt;arrow&lt;/em&gt; view is optional.&lt;/p&gt;
&lt;p&gt;But for now, lets just return the default views provided by Instructions.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;coachMarkViewsAt&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;madeFrom&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMark&lt;/span&gt;: CoachMark) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; (bodyView: CoachMarkBodyView, arrowView: CoachMarkArrowView&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; coachViews &lt;span class="pl-k"&gt;=&lt;/span&gt; coachMarksController.&lt;span class="pl-smi"&gt;helper&lt;/span&gt;.&lt;span class="pl-c1"&gt;makeDefaultCoachViews&lt;/span&gt;(&lt;span class="pl-c1"&gt;withArrow&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;arrowOrientation&lt;/span&gt;: coachMark.&lt;span class="pl-smi"&gt;arrowOrientation&lt;/span&gt;)

    coachViews.&lt;span class="pl-smi"&gt;bodyView&lt;/span&gt;.&lt;span class="pl-smi"&gt;hintLabel&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello! I'm a Coach Mark!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    coachViews.&lt;span class="pl-smi"&gt;bodyView&lt;/span&gt;.&lt;span class="pl-smi"&gt;nextLabel&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ok!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;return&lt;/span&gt; (&lt;span class="pl-c1"&gt;bodyView&lt;/span&gt;: coachViews.&lt;span class="pl-smi"&gt;bodyView&lt;/span&gt;, &lt;span class="pl-c1"&gt;arrowView&lt;/span&gt;: coachViews.&lt;span class="pl-smi"&gt;arrowView&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-starting-the-coach-marks-flow" class="anchor" aria-hidden="true" href="#starting-the-coach-marks-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting the coach marks flow&lt;/h4&gt;
&lt;p&gt;Once the &lt;code&gt;dataSource&lt;/code&gt; is set up, you can start displaying the coach marks. You will most likely supply &lt;code&gt;self&lt;/code&gt; to &lt;code&gt;start&lt;/code&gt;. While the overlay adds itself as a child of the current window (to be on top of everything), the &lt;code&gt;CoachMarksController&lt;/code&gt; will add itself as a child of the view controller you provide. That way, the &lt;code&gt;CoachMarksController&lt;/code&gt; will receive size change events and react accordingly. Be careful, you can't call &lt;code&gt;start&lt;/code&gt; in the &lt;code&gt;viewDidLoad&lt;/code&gt; method, since the view hierarchy has to be set up and ready for Instructions to work properly.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidAppear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewDidAppear&lt;/span&gt;(animated)

    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-c1"&gt;window&lt;/span&gt;(&lt;span class="pl-c1"&gt;over&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;))
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-stopping-the-coach-marks-flow" class="anchor" aria-hidden="true" href="#stopping-the-coach-marks-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stopping the coach marks flow&lt;/h4&gt;
&lt;p&gt;You should always stop the flow, once the view disappear. To avoid animation artefacts and timing issues, don't forget to add the following code to your &lt;code&gt;viewWillDisappear&lt;/code&gt; method. Calling &lt;code&gt;stop(immediately: true)&lt;/code&gt; will ensure that the flow is stopped immediately upon the disappearance of the view.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillDisappear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillDisappear&lt;/span&gt;(animated)

    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;.&lt;span class="pl-c1"&gt;stop&lt;/span&gt;(&lt;span class="pl-c1"&gt;immediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You're all set. For more examples you can check the &lt;code&gt;Examples/&lt;/code&gt; directory provided with the library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-usage" class="anchor" aria-hidden="true" href="#advanced-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Usage&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-customizing-general-properties" class="anchor" aria-hidden="true" href="#customizing-general-properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing general properties&lt;/h4&gt;
&lt;p&gt;You can customized the background color of the overlay using this property:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;overlay.color&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also make the overlay blur the content sitting behind it. Setting this property to anything else than &lt;code&gt;nil&lt;/code&gt; will disable the &lt;code&gt;overlay.color&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;overlay.blurEffectStyle: UIBlurEffectStyle?&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Last, you can make the overlay tappable. A tap on the overlay will hide the current coach mark and display the next one.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;overlay.allowTap: Bool&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; The blurring overlay is not supported in app extensions.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-providing-a-custom-cutout-path" class="anchor" aria-hidden="true" href="#providing-a-custom-cutout-path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Providing a custom cutout path&lt;/h4&gt;
&lt;p&gt;If you dislike how the default cutout path looks like, you can customize it by providing a block to &lt;code&gt;makeCoachMark(for:)&lt;/code&gt;. The cutout path will automatically be stored in the &lt;code&gt;cutoutPath&lt;/code&gt; property of the returning &lt;code&gt;CoachMark&lt;/code&gt; object:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; coachMark &lt;span class="pl-k"&gt;=&lt;/span&gt; coachMarksController.&lt;span class="pl-smi"&gt;helper&lt;/span&gt;.&lt;span class="pl-c1"&gt;makeCoachMark&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: customView) {
(&lt;span class="pl-c1"&gt;frame&lt;/span&gt;: CGRect) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIBezierPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This will create an oval cutout a bit larger than the view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;UIBezierPath&lt;/span&gt;(&lt;span class="pl-c1"&gt;ovalIn&lt;/span&gt;: frame.&lt;span class="pl-c1"&gt;insetBy&lt;/span&gt;(&lt;span class="pl-c1"&gt;dx&lt;/span&gt;: &lt;span class="pl-c1"&gt;-4&lt;/span&gt;, &lt;span class="pl-c1"&gt;dy&lt;/span&gt;: &lt;span class="pl-c1"&gt;-4&lt;/span&gt;))
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;frame&lt;/code&gt; will be the frame of &lt;code&gt;customView&lt;/code&gt; converted in the &lt;code&gt;coachMarksController.view&lt;/code&gt; referential, so don't have to worry about making sure the coordinates are in the appropriate referential. You can provide any kind of shape, from a simple rectangle to a complex star.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-providing-custom-views" class="anchor" aria-hidden="true" href="#providing-custom-views"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Providing custom views&lt;/h4&gt;
&lt;p&gt;You can (and you should) provide custom views. A coach mark is composed of two views, a &lt;em&gt;body&lt;/em&gt; view and an &lt;em&gt;arrow&lt;/em&gt; view. Note that the term &lt;em&gt;arrow&lt;/em&gt; might be misleading. It doesn't have to be an actual arrow, it can be anything you want.&lt;/p&gt;
&lt;p&gt;A &lt;em&gt;body&lt;/em&gt; view must conform to the &lt;code&gt;CoachMarkBodyView&lt;/code&gt; protocol. An &lt;em&gt;arrow&lt;/em&gt; view must conform to the &lt;code&gt;CoachMarkArrowView&lt;/code&gt; protocol. Both of them must also be subclasses of &lt;code&gt;UIView&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Returning a &lt;code&gt;CoachMarkBodyView&lt;/code&gt; view is mandatory, while returning a &lt;code&gt;CoachMarkArrowView&lt;/code&gt; is optional.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-coachmarkbodyview-protocol" class="anchor" aria-hidden="true" href="#coachmarkbodyview-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CoachMarkBodyView Protocol&lt;/h5&gt;
&lt;p&gt;This protocol defines two properties.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nextControl: UIControl? { get }&lt;/code&gt; you must implement a getter method for this property in your view, this will let the &lt;code&gt;CoachMarkController&lt;/code&gt; know which control should be tapped, to display the next coach mark. Note that it doesn't have to be a subview, you can return the view itself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;highlightArrowDelegate: CoachMarkBodyHighlightArrowDelegate?&lt;/code&gt; in case the view itself is the control receiving taps, you might want to forward its highlight state to the &lt;em&gt;arrow&lt;/em&gt; view (so they can look as if they are the same component). The &lt;code&gt;CoachMarkController&lt;/code&gt; will automatically set an appropriate delegate to this property. You'll then be able to do this:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; highlighted&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
	&lt;span class="pl-k"&gt;didSet&lt;/span&gt; {
	    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;highlightArrowDelegate&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;highlightArrow&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;highlighted&lt;/span&gt;)
	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-taking-orientation-into-account" class="anchor" aria-hidden="true" href="#taking-orientation-into-account"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Taking orientation into account&lt;/h5&gt;
&lt;p&gt;Remember the following method, from the dataSource?&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;coachMarkViewsAt&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;madeFrom&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMark&lt;/span&gt;: CoachMark) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; (bodyView: CoachMarkBodyView, arrowView: CoachMarkArrowView&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
	&lt;span class="pl-k"&gt;let&lt;/span&gt; coachViews &lt;span class="pl-k"&gt;=&lt;/span&gt; coachMarksController.&lt;span class="pl-smi"&gt;helper&lt;/span&gt;.&lt;span class="pl-c1"&gt;makeDefaultCoachViews&lt;/span&gt;(&lt;span class="pl-c1"&gt;withArrow&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;arrowOrientation&lt;/span&gt;: coachMark.&lt;span class="pl-smi"&gt;arrowOrientation&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When providing a customized view, you need to provide an &lt;em&gt;arrow&lt;/em&gt; view with the approriate orientation (i. e. in the case of an actual arrow, pointing upward or downward). The &lt;code&gt;CoachMarkController&lt;/code&gt; will tell you which orientation it expects, through the following property: &lt;code&gt;CoachMark.arrowOrientation&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Browse the &lt;code&gt;Example/&lt;/code&gt; directory for more details.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-presentation-context" class="anchor" aria-hidden="true" href="#presentation-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presentation Context&lt;/h4&gt;
&lt;p&gt;You can choose in which context the coach marks will be displayed, by passing it to `start(in: PresentationContext). The available contexts are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.newWindow(over: UIViewController, at: UIWindowLevel?)&lt;/code&gt; ‚Äì A new window created at the given &lt;code&gt;UIWindowLevel&lt;/code&gt; (not available in app extensions);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.currentWindow(of: UIViewController)&lt;/code&gt; ‚Äì The window displaying the given &lt;code&gt;UIViewController&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.viewController(_: UIViewController)&lt;/code&gt; ‚Äì In the &lt;code&gt;view&lt;/code&gt; of the given &lt;code&gt;UIViewController&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, you can also provide use &lt;code&gt;window(over: UIViewController)&lt;/code&gt;, which is a convience static method equivalent to calling &lt;code&gt;.newWindow(over: UIViewController, at: UIWindowLevelNormal + 1)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; When using a blur effect on the overlay, setting the window level to anything above &lt;code&gt;UIWindowLevelStatusBar&lt;/code&gt; is not supported.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-customizing-how-the-coach-mark-will-show" class="anchor" aria-hidden="true" href="#customizing-how-the-coach-mark-will-show"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing how the coach mark will show&lt;/h4&gt;
&lt;p&gt;You can customize the following properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gapBetweenBodyAndArrow: CGFloat&lt;/code&gt;: the vertical gap between the &lt;em&gt;body&lt;/em&gt; and the &lt;em&gt;arrow&lt;/em&gt; in a given coach mark.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pointOfInterest: CGPoint?&lt;/code&gt;: the point toward which the arrow will face. At the moment, it's only used to shift the arrow horizontally and make it sits above or below the point of interest.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gapBetweenCoachMarkAndCutoutPath: CGFloat&lt;/code&gt;: the gap between the coach mark and the cutout path.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;maxWidth: CGFloat&lt;/code&gt;: the maximum width a coach mark can take. You don't want your coach marks to be too wide, especially on iPads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;horizontalMargin: CGFloat&lt;/code&gt; is the margin (both leading and trailing) between the edges of the overlay view and the coach mark. Note that if the max width of your coach mark is less than the width of the overlay view, you view will either stack on the left or on the right, leaving space on the other side.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;arrowOrientation: CoachMarkArrowOrientation?&lt;/code&gt; is the orientation of the arrow (not the coach mark, meaning setting this property to &lt;code&gt;.Top&lt;/code&gt; will display the coach mark below the point of interest). Although it's usually pre-computed by the library, you can override it in &lt;code&gt;coachMarksForIndex:&lt;/code&gt; or in &lt;code&gt;coachMarkWillShow:&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;displayOverCutoutPath: Bool&lt;/code&gt; enables the coach mark to be displayed over the cutout path; please note that arrows won't be visible if you set this property to &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;disableOverlayTap: Bool&lt;/code&gt; is used to disable the ability to tap on the overlay to show the next coach mark, on a case-by-case basis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;allowTouchInsideCutoutPath: Bool&lt;/code&gt; is used to allow touch forwarding inside the cutout path. Take a look at &lt;code&gt;TransitionFromCodeViewController&lt;/code&gt;, in the &lt;code&gt;Example/&lt;/code&gt; directory, for more information.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-animating-coach-marks" class="anchor" aria-hidden="true" href="#animating-coach-marks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animating coach marks&lt;/h4&gt;
&lt;p&gt;To animates coach marks, you will need to implement the &lt;code&gt;CoachMarksControllerAnimationDelegate&lt;/code&gt; protocol.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;fetchAppearanceTransitionOfCoachMark&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarkView&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;using&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;: CoachMarkTransitionManager)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;fetchDisappearanceTransitionOfCoachMark&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarkView&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;using&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;: CoachMarkTransitionManager)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;fetchIdleAnimationOfCoachMark&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarkView&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;using&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;: CoachMarkAnimationManager)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All methods from this delegate work in similar ways. First, you will need to specify the general parameters of the animation via &lt;code&gt;manager.parameters&lt;/code&gt; properties. These properties match the configuration parameters that you can provide to &lt;code&gt;UIView.animate&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;duration: TimeInterval&lt;/code&gt;: the total duration of the animation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;delay: TimeInterval&lt;/code&gt;: the amount of time to wai before beginning the animations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;options: UIViewAnimationOptions&lt;/code&gt;: a mask of options indicating how you want to perform the animations (for regular animations).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;keyframeOptions: UIViewKeyframeAnimationOptions&lt;/code&gt;: a mask of options indicating how you want to perform the animations (for keyframe animations).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you've set the parameters, you should provide your animations by calling &lt;code&gt;manager.animate&lt;/code&gt;. The method signature is different wether you are animating the idle state of coach marks, or making them appear/disappear.&lt;/p&gt;
&lt;p&gt;You should provide your animations in a block passed to the &lt;code&gt;animate&lt;/code&gt; parameter, in a similar fashion to &lt;code&gt;UIView.animate&lt;/code&gt;. If you need to access the animation parameters or the coach mark metadata, a &lt;code&gt;CoachMarkAnimationManagementContext&lt;/code&gt; containing these will be provided to your animation block. You shouldn't capture a reference to manager from the animation block.&lt;/p&gt;
&lt;p&gt;For an implemntation example, you can also take a look a the &lt;code&gt;DelegateViewController&lt;/code&gt; class found in the &lt;code&gt;Example&lt;/code&gt; directory.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-appearance-and-disappearance-specifics" class="anchor" aria-hidden="true" href="#appearance-and-disappearance-specifics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Appearance and disappearance specifics&lt;/h5&gt;
&lt;p&gt;If you need to define an initial state, you should do so by providing a block to the &lt;code&gt;fromInitialState&lt;/code&gt; property. While directly setting values on &lt;code&gt;coachMarkView&lt;/code&gt; in the method before calling &lt;code&gt;manager.animate()&lt;/code&gt; might work, it's not garanteed to.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-let-users-skip-the-tour" class="anchor" aria-hidden="true" href="#let-users-skip-the-tour"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let users skip the tour&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-control" class="anchor" aria-hidden="true" href="#control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Control&lt;/h5&gt;
&lt;p&gt;You can provide the user with a mean to skip the coach marks. First, you will need to set
&lt;code&gt;skipView&lt;/code&gt; with a &lt;code&gt;UIView&lt;/code&gt; conforming to the &lt;code&gt;CoachMarkSkipView&lt;/code&gt; protocol. This protocol defines a single property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;CoachMarkSkipView&lt;/span&gt; : &lt;span class="pl-k"&gt;class&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; skipControl&lt;span class="pl-k"&gt;:&lt;/span&gt; UIControl&lt;span class="pl-k"&gt;?&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You must implement a getter method for this property in your view. This will let the &lt;code&gt;CoachMarkController&lt;/code&gt; know which control should be tapped, to skip the tour. Note that, again, it doesn't have to be a subview, you can return the view itself.&lt;/p&gt;
&lt;p&gt;As usual, Instructions provides a default implementation of &lt;code&gt;CoachMarkSkipView&lt;/code&gt; named &lt;code&gt;CoachMarkSkipDefaultView&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-datasource" class="anchor" aria-hidden="true" href="#datasource"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dataSource&lt;/h5&gt;
&lt;p&gt;To define how the view will position itself, you can use a method from the &lt;code&gt;CoachMarkControllerDataSource&lt;/code&gt; protocol. This method is optional.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;constraintsForSkipView&lt;/span&gt; &lt;span class="pl-smi"&gt;skipView&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;inParent&lt;/span&gt; &lt;span class="pl-smi"&gt;parentView&lt;/span&gt;: UIView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [NSLayoutConstraint]&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method will be called by the &lt;code&gt;CoachMarksController&lt;/code&gt; before starting the tour and whenever there is a size change. It gives you the &lt;em&gt;skip button&lt;/em&gt; and the view in which it will be positioned and expects an array of &lt;code&gt;NSLayoutConstraints&lt;/code&gt; in return. These constraints will define how the &lt;em&gt;skip button&lt;/em&gt; will be positioned in its parent. You should not add the constraints yourself, just return them.&lt;/p&gt;
&lt;p&gt;Returning &lt;code&gt;nil&lt;/code&gt; will tell the &lt;code&gt;CoachMarksController&lt;/code&gt; to use the defaults constraints, which will position the &lt;em&gt;skip button&lt;/em&gt; at the top of the screen. Returning an empty array is discouraged, as it will most probably lead to an akward positioning.&lt;/p&gt;
&lt;p&gt;For more information about the skip mechanism, you can check the &lt;code&gt;Example/&lt;/code&gt; directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-piloting-the-flow-from-the-code" class="anchor" aria-hidden="true" href="#piloting-the-flow-from-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Piloting the flow from the code&lt;/h4&gt;
&lt;p&gt;Should you ever need to programmatically show the coach mark, &lt;code&gt;CoachMarkController.flow&lt;/code&gt; also provides the following methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;showNext&lt;/span&gt;(&lt;span class="pl-en"&gt;numberOfCoachMarksToSkip&lt;/span&gt; &lt;span class="pl-smi"&gt;numberToSkip&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;showPrevious&lt;/span&gt;(&lt;span class="pl-en"&gt;numberOfCoachMarksToSkip&lt;/span&gt; &lt;span class="pl-smi"&gt;numberToSkip&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can specify a number of coach marks to skip (effectively jumping forward or backward to a further index).&lt;/p&gt;
&lt;p&gt;Take a look at &lt;code&gt;TransitionFromCodeViewController&lt;/code&gt;, in the &lt;code&gt;Example/&lt;/code&gt; directory, to get an idea of how you can leverage this method, in order to ask the user to perform certain actions.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-a-delegate" class="anchor" aria-hidden="true" href="#using-a-delegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using a delegate&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;CoachMarkController&lt;/code&gt; will notify the delegate on multiple occasions. All those methods are optionals.&lt;/p&gt;
&lt;p&gt;First, when a coach mark will show. You might want to change something about the view. For that reason, the &lt;code&gt;CoachMark&lt;/code&gt; metadata structure is passed as an &lt;code&gt;inout&lt;/code&gt; object, so you can update it with new parameters.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;willShow&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMark&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; CoachMark, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Second, when a coach mark disappears.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;willHide&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMark&lt;/span&gt;: CoachMark, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Third, when all coach marks have been displayed. &lt;code&gt;didEndShowingBySkipping&lt;/code&gt; specify whether the flow completed because the user requested it to end.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;didEndShowingBySkipping&lt;/span&gt; &lt;span class="pl-smi"&gt;skipped&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-react-when-the-user-tap-the-overlay" class="anchor" aria-hidden="true" href="#react-when-the-user-tap-the-overlay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React when the user tap the overlay&lt;/h5&gt;
&lt;p&gt;Whenever the user will tap the overlay, you will get notified through:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;shouldHandleOverlayTap&lt;/span&gt;(&lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Returning &lt;code&gt;true&lt;/code&gt; will let Instructions continue the flow normally, while returning &lt;code&gt;false&lt;/code&gt; will interrupt it. If you choose to interrupt the flow, you're responsible for either stopping or pausing it or manually show the next coach marks (see &lt;a href="#piloting-the-flow-from-the-code"&gt;Piloting the flow from the code&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;index&lt;/code&gt; is the index of the coach mark currently displayed.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-pausing-and-resuming-the-flow" class="anchor" aria-hidden="true" href="#pausing-and-resuming-the-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pausing and resuming the flow&lt;/h5&gt;
&lt;p&gt;It's as simple as calling &lt;code&gt;coachMarksController.flow.pause()&lt;/code&gt; and &lt;code&gt;coachMarksController.flow.resume()&lt;/code&gt;. While pausing, you can also choose to hide Instructions's overlay altogether (&lt;code&gt;.pause(and: hideInstructions)&lt;/code&gt;), or only hide the overlay and retain its touch blocking capabilities (&lt;code&gt;.pause(and: hideOverlay)&lt;/code&gt;).&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-performing-animations-before-showing-coach-marks" class="anchor" aria-hidden="true" href="#performing-animations-before-showing-coach-marks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performing animations before showing coach marks&lt;/h5&gt;
&lt;p&gt;You can perform animation on views, before or after showing a given coach mark.
For instance, you might want to collapse a table view and show only its header, before referring to those headers with a coach mark. Instructions offers a simple way to insert your own animations into the flow.&lt;/p&gt;
&lt;p&gt;For instance, let's say you want to perform an animation &lt;em&gt;before&lt;/em&gt; a coach mark shows.
You'll implement some logic into the &lt;code&gt;coachMarkWillShow&lt;/code&gt; delegate method.
To ensure you don't have to hack something up and turn asynchronous animation blocks into synchronous ones, you can pause the flow, perform the animation and then start the flow again. This will ensure your UI never get stalled.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;willShow&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMark&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; CoachMark, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) {
	 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Pause to be able to play the animation and then show the coach mark.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    coachMarksController.&lt;span class="pl-smi"&gt;flow&lt;/span&gt;.&lt;span class="pl-c1"&gt;pause&lt;/span&gt;()

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Run the animation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    UIView.&lt;span class="pl-c1"&gt;animateWithDuration&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;animations&lt;/span&gt;: { () &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;‚Ä¶&lt;/span&gt;
    }, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;finished&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Once the animation is completed, we update the coach mark,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and start the display again. Since inout parameters cannot be&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; captured by the closure, you can use the following method to update&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the coachmark. It will only work if you paused the flow.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        coachMarksController.&lt;span class="pl-smi"&gt;helper&lt;/span&gt;.&lt;span class="pl-c1"&gt;updateCurrentCoachMarkForView&lt;/span&gt;(myView)
        coachMarksController.&lt;span class="pl-smi"&gt;flow&lt;/span&gt;.&lt;span class="pl-c1"&gt;resume&lt;/span&gt;()
    })
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; Since the blurring overlay snapshots the view during coach mark appearance/disappearance,
you should make sure that animations targeting your own view don't occur while a coach mark
is appearing or disappearing. Otherwise, the animation won't be visible.&lt;/p&gt;
&lt;p&gt;You may also want to customize the properties defining the of for the classic transparency overlay, as Instructions will fall back to using the classic type if &lt;code&gt;UIAccessibilityIsReduceTransparencyEnabled()&lt;/code&gt; returns true.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-skipping-a-coach-mark" class="anchor" aria-hidden="true" href="#skipping-a-coach-mark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Skipping a coach mark&lt;/h5&gt;
&lt;p&gt;You can skip a given coach mark by implementing the following method defined in &lt;code&gt;CoachMarksControllerDelegate&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;coachMarkWillLoadAt&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;coachMarkWillLoadAt:&lt;/code&gt; is called right before a given coach mark will show. To prevent a CoachMark from showing, you can return &lt;code&gt;false&lt;/code&gt; from this method.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-customizing-ornaments-of-the-overlay" class="anchor" aria-hidden="true" href="#customizing-ornaments-of-the-overlay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing ornaments of the overlay&lt;/h5&gt;
&lt;p&gt;It's possible to add custom views which will be displayed over the overlay by implementing the following method of &lt;code&gt;CoachMarksControllerDelegate&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController,
                          &lt;span class="pl-en"&gt;configureOrnamentsOfOverlay&lt;/span&gt; &lt;span class="pl-smi"&gt;overlay&lt;/span&gt;: UIView)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just add the ornaments to the provided view (&lt;code&gt;overlay&lt;/code&gt;) and Instructions should take care of the rest. Please note, however, that these ornaments will be displayed over the cutout, but under the coach marks.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-dealing-with-frame-changes" class="anchor" aria-hidden="true" href="#dealing-with-frame-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with frame changes&lt;/h4&gt;
&lt;p&gt;Since Instructions doesn't hold any reference to the &lt;em&gt;views of interest&lt;/em&gt;, it cannot respond to their
change of frame automatically.&lt;/p&gt;
&lt;p&gt;Instructions provide two methods to deal with frame changes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CoachMarkController.prepareForChange()&lt;/code&gt;, called before a change of frame, to hide
the coach mark and the cutout path.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CoachMarkController.restoreAfterChangeDidComplete()&lt;/code&gt;, called after a change of frame
to show the coach mark and the cutout again.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although you can call these methods at any time while Instructions is idle, the result will not
look smooth if the coach mark is already displayed. It's better to perform the changes between
two coach marks, by pausing and resuming the flow. &lt;a href="https://github.com/ephread/Instructions/blob/master/Examples/Example/KeyboardViewController.swift"&gt;&lt;code&gt;KeyboardViewController&lt;/code&gt;&lt;/a&gt; shows an
example of this technique.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage-within-app-extensions" class="anchor" aria-hidden="true" href="#usage-within-app-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage within App Extensions&lt;/h3&gt;
&lt;p&gt;If you wish to add Instructions within App Extensions, there's additional work you need to perform.
An example is available in the &lt;code&gt;App Extensions Example/&lt;/code&gt; directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h4&gt;
&lt;p&gt;Instructions comes with two shared schemes, &lt;code&gt;Instructions&lt;/code&gt; and &lt;code&gt;InstructionsAppExtensions&lt;/code&gt;. The only differences between the two is that &lt;code&gt;InstructionsAppExtensions&lt;/code&gt; does not depend upon the &lt;code&gt;UIApplication.sharedApplication()&lt;/code&gt;, making it suitable for App Extensions.&lt;/p&gt;
&lt;p&gt;In the following examples, let's consider a project with two targets, one for a regular application (&lt;code&gt;Instructions App Extensions Example&lt;/code&gt;) and another for an app extension (&lt;code&gt;Keyboard Extension&lt;/code&gt;).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cocoapods-1" class="anchor" aria-hidden="true" href="#cocoapods-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h4&gt;
&lt;p&gt;If you're importing Instructions with CocoaPods, you'll need to edit your &lt;code&gt;Podfile&lt;/code&gt; to make it look
like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Instructions App Extensions Example&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Instructions&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Keyboard Extension&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;InstructionsAppExtensions&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If Instructions is only imported from within App Extension target, you don't need the first block.&lt;/p&gt;
&lt;p&gt;When compiling either targets, CocoaPods will make sure the appropriate flags are set, thus
allowing/forbidding calls to &lt;code&gt;UIApplication.sharedApplication()&lt;/code&gt;.
You don't need to change your code.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-frameworks-carthage--manual-management" class="anchor" aria-hidden="true" href="#frameworks-carthage--manual-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frameworks (Carthage / Manual management)&lt;/h4&gt;
&lt;p&gt;If you're importing Instructions through frameworks, you'll notice that the two shared schemes
(&lt;code&gt;Instructions&lt;/code&gt; and &lt;code&gt;InstructionsAppExtensions&lt;/code&gt;) both result in different frameworks.&lt;/p&gt;
&lt;p&gt;You need to embed both frameworks and link them to the proper targets.
Make sure they look like theses:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Instructions App Extensions Example&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e99891789c98b6cd23f6ad9b2d14708e7816088c/687474703a2f2f692e696d6775722e636f6d2f334d334251614f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e99891789c98b6cd23f6ad9b2d14708e7816088c/687474703a2f2f692e696d6775722e636f6d2f334d334251614f2e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/3M3BQaO.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keyboard Extension&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d3bf1d5f9e077b68ace557b163ad2e544d2a2be0/687474703a2f2f692e696d6775722e636f6d2f4c417456306f412e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d3bf1d5f9e077b68ace557b163ad2e544d2a2be0/687474703a2f2f692e696d6775722e636f6d2f4c417456306f412e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/LAtV0oA.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you plan to add Instructions only to the App Extension target, you don't need to add &lt;code&gt;Instructions.frameworks&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-import-statements" class="anchor" aria-hidden="true" href="#import-statements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Import statements&lt;/h5&gt;
&lt;p&gt;When importing Instructions from files within &lt;code&gt;Instructions App Extensions Example&lt;/code&gt;,
you should use the regular import statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Instructions&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, when importing Instructions from files within &lt;code&gt;Keyboard Extension&lt;/code&gt;, you should
use the specific statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;InstructionsAppExtensions&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; &lt;strong&gt;Please be extremely careful&lt;/strong&gt;, as you will be able to import regular &lt;em&gt;Instructions&lt;/em&gt;
from within an app extension without breaking anything. It will work. However, you're at a
high risk of rejection from the Apple Store. Uses of &lt;code&gt;UIApplication.sharedApplication()&lt;/code&gt;
are statically checked during compilation but nothing prevents you from performing the calls
at runtime. Fortunately Xcode should warn you if you've mistakenly linked with a framework
not suited for App Extensions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Instructions is released under the MIT license. See LICENSE for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ephread</author><guid isPermaLink="false">https://github.com/ephread/Instructions</guid><pubDate>Mon, 09 Dec 2019 00:23:00 GMT</pubDate></item><item><title>danielgindi/Charts #24 in Swift, This month</title><link>https://github.com/danielgindi/Charts</link><description>&lt;p&gt;&lt;i&gt;Beautiful charts for iOS/tvOS/OSX! The Apple side of the crossplatform MPAndroidChart.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;Version 3.4.0&lt;/strong&gt;, synced to &lt;a href="https://github.com/PhilJay/MPAndroidChart/commit/f6a398b"&gt;MPAndroidChart #f6a398b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c6f7ce37a23ae05e72a70bf7e2978b0cd2ebdd6e/68747470733a2f2f7261772e6769746875622e636f6d2f64616e69656c67696e64692f4368617274732f6d61737465722f4173736574732f666561747572655f677261706869632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c6f7ce37a23ae05e72a70bf7e2978b0cd2ebdd6e/68747470733a2f2f7261772e6769746875622e636f6d2f64616e69656c67696e64692f4368617274732f6d61737465722f4173736574732f666561747572655f677261706869632e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/danielgindi/Charts/master/Assets/feature_graphic.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3ec53f843d26d0d0f8fc1c8b0c2d6ba12e9b527e/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4368617274732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3ec53f843d26d0d0f8fc1c8b0c2d6ba12e9b527e/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4368617274732e737667" alt="Supported Platforms" data-canonical-src="https://img.shields.io/cocoapods/p/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/danielgindi/Charts/releases"&gt;&lt;img src="https://camo.githubusercontent.com/a337dd2eacabc7ca4739ae7a62711390a16910b1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f64616e69656c67696e64692f4368617274732e737667" alt="Releases" data-canonical-src="https://img.shields.io/github/release/danielgindi/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/pods/charts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7e5ddbe9672eed6ec4505b7f71ec5be7b5cfa27/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4368617274732e737667" alt="Latest pod release" data-canonical-src="https://img.shields.io/cocoapods/v/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/danielgindi/Charts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3868a63b91220618d8ff25b3bebe838c8213178/68747470733a2f2f7472617669732d63692e6f72672f64616e69656c67696e64692f4368617274732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/danielgindi/Charts.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/danielgindi/Charts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f55978bcf0a11ed1fbd5eca65b826d871e0d382/68747470733a2f2f636f6465636f762e696f2f67682f64616e69656c67696e64692f4368617274732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/danielgindi/Charts/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/danielgindi/Charts?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/734e5f07cb46b57180113a9faf97701418edf8e3/68747470733a2f2f6261646765732e6769747465722e696d2f64616e69656c67696e64692f4368617274732e737667" alt="Join the chat at https://gitter.im/danielgindi/Charts" data-canonical-src="https://badges.gitter.im/danielgindi/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-just-a-heads-up-charts-30-has-some-breaking-changes-please-read-the-releasemigration-notes" class="anchor" aria-hidden="true" href="#just-a-heads-up-charts-30-has-some-breaking-changes-please-read-the-releasemigration-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Just a heads up: Charts 3.0 has some breaking changes. Please read &lt;a href="https://github.com/danielgindi/Charts/releases/tag/v3.0.0"&gt;the release/migration notes&lt;/a&gt;.&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-another-heads-up-chartsrealm-is-now-in-a-separate-repo-pods-is-also-now-charts-and-chartsrealm-instead-of-chartscore-and-chartsrealm" class="anchor" aria-hidden="true" href="#another-heads-up-chartsrealm-is-now-in-a-separate-repo-pods-is-also-now-charts-and-chartsrealm-instead-of-chartscore-and-chartsrealm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Another heads up: ChartsRealm is now in a &lt;a href="https://github.com/danielgindi/ChartsRealm"&gt;separate repo&lt;/a&gt;. Pods is also now &lt;code&gt;Charts&lt;/code&gt; and &lt;code&gt;ChartsRealm&lt;/code&gt;, instead of &lt;del&gt;&lt;code&gt;Charts/Core&lt;/code&gt;&lt;/del&gt; and &lt;del&gt;&lt;code&gt;Charts/Realm&lt;/code&gt;&lt;/del&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-one-more-heads-up-as-swift-evolves-if-you-are-not-using-the-latest-swift-compiler-you-shouldnt-check-out-the-master-branch-instead-you-should-go-to-the-release-page-and-pick-up-whatever-suits-you" class="anchor" aria-hidden="true" href="#one-more-heads-up-as-swift-evolves-if-you-are-not-using-the-latest-swift-compiler-you-shouldnt-check-out-the-master-branch-instead-you-should-go-to-the-release-page-and-pick-up-whatever-suits-you"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One more heads up: As Swift evolves, if you are not using the latest Swift compiler, you shouldn't check out the master branch. Instead, you should go to the release page and pick up whatever suits you.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 11 / Swift 5 (master branch)&lt;/li&gt;
&lt;li&gt;iOS &amp;gt;= 8.0 (Use as an &lt;strong&gt;Embedded&lt;/strong&gt; Framework)&lt;/li&gt;
&lt;li&gt;tvOS &amp;gt;= 9.0&lt;/li&gt;
&lt;li&gt;macOS &amp;gt;= 10.11&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Okay so there's this beautiful library called &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/philippjahoda" rel="nofollow"&gt;Philipp Jahoda&lt;/a&gt; which has become very popular amongst Android developers, but there was no decent solution to create charts for iOS.&lt;/p&gt;
&lt;p&gt;I've chosen to write it in &lt;code&gt;Swift&lt;/code&gt; as it can be highly optimized by the compiler, and can be used in both &lt;code&gt;Swift&lt;/code&gt; and &lt;code&gt;ObjC&lt;/code&gt; project. The demo project is written in &lt;code&gt;ObjC&lt;/code&gt; to demonstrate how it works.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;An amazing feature&lt;/strong&gt; of this library now, for Android, iOS, tvOS and macOS, is the time it saves you when developing for both platforms, as the learning curve is singleton- it happens only once, and the code stays very similar so developers don't have to go around and re-invent the app to produce the same output with a different library. (And that's not even considering the fact that there's not really another good choice out there currently...)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-having-trouble-running-the-demo" class="anchor" aria-hidden="true" href="#having-trouble-running-the-demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Having trouble running the demo?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ChartsDemo/ChartsDemo.xcodeproj&lt;/code&gt; is the demo project for iOS/tvOS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ChartsDemo-OSX/ChartsDemo-OSX.xcodeproj&lt;/code&gt; is the demo project for macOS&lt;/li&gt;
&lt;li&gt;Make sure you are running a supported version of Xcode.
&lt;ul&gt;
&lt;li&gt;Usually it is specified here a few lines above.&lt;/li&gt;
&lt;li&gt;In most cases it will be the latest Xcode version.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make sure that your project supports Swift 5.0&lt;/li&gt;
&lt;li&gt;Optional: Run &lt;code&gt;carthage checkout&lt;/code&gt; in the project folder, to fetch dependencies (i.e testing dependencies).
&lt;ul&gt;
&lt;li&gt;If you don't have Carthage - you can get it &lt;a href="https://github.com/Carthage/Carthage/releases"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;In order to correctly compile:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Drag the &lt;code&gt;Charts.xcodeproj&lt;/code&gt; to your project&lt;/li&gt;
&lt;li&gt;Go to your target's settings, hit the "+" under the "Embedded Binaries" section, and select the Charts.framework&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@import Charts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;When using Swift in an ObjC project:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;You need to import your Bridging Header. Usually it is "&lt;em&gt;YourProject-Swift.h&lt;/em&gt;", so in ChartsDemo it's "&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;". Do not try to actually include "&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;" in your project :-)&lt;/li&gt;
&lt;li&gt;(Xcode 8.1 and earlier) Under "Build Options", mark "Embedded Content Contains Swift Code"&lt;/li&gt;
&lt;li&gt;(Xcode 8.2+) Under "Build Options", mark "Always Embed Swift Standard Libraries"&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="5"&gt;
&lt;li&gt;When using &lt;a href="https://realm.io/" rel="nofollow"&gt;Realm.io&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;Note that the Realm framework is not linked with Charts - it is only there for &lt;em&gt;optional&lt;/em&gt; bindings. Which means that you need to have the framework in your project, and in a compatible version to whatever is compiled with Charts. We will do our best to always compile against the latest version.&lt;/li&gt;
&lt;li&gt;You'll need to add &lt;code&gt;ChartsRealm&lt;/code&gt; as a dependency too.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-3rd-party-tutorials" class="anchor" aria-hidden="true" href="#3rd-party-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3rd party tutorials&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@skoli/using-realm-and-charts-with-swift-3-in-ios-10-40c42e3838c0#.2gyymwfh8" rel="nofollow"&gt;Using Realm and Charts with Swift 3 in iOS 10 (Sami Korpela)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@OsianSmith/creating-a-line-chart-in-swift-3-and-ios-10-2f647c95392e" rel="nofollow"&gt;Creating a Line Chart in Swift 3 and iOS 10 (Osian Smith)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/annalizhaz/ChartsForSwiftBasic"&gt;Beginning Set-up and Example Using Charts with Swift 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Want your tutorial to show here? Create a PR!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-cant-compile" class="anchor" aria-hidden="true" href="#cant-compile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can't compile?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Please note the difference between installing a compiled framework from CocoaPods or Carthage, and copying the source code.&lt;/li&gt;
&lt;li&gt;Please read the &lt;strong&gt;Usage&lt;/strong&gt; section again.&lt;/li&gt;
&lt;li&gt;Search in the issues&lt;/li&gt;
&lt;li&gt;Try to politely ask in the issues section&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-other-problems--feature-requests" class="anchor" aria-hidden="true" href="#other-problems--feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other problems / feature requests&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Search in the issues&lt;/li&gt;
&lt;li&gt;Try to politely ask in the issues section&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cocoapods-install" class="anchor" aria-hidden="true" href="#cocoapods-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods Install&lt;/h2&gt;
&lt;p&gt;Add &lt;code&gt;pod 'Charts'&lt;/code&gt; to your Podfile. "Charts" is the name of the library.&lt;br&gt;
For &lt;a href="https://realm.io/" rel="nofollow"&gt;Realm&lt;/a&gt; support, please add &lt;code&gt;pod 'ChartsRealm'&lt;/code&gt; too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;del&gt;&lt;code&gt;pod 'ios-charts'&lt;/code&gt;&lt;/del&gt; is not the correct library, and refers to a different project by someone else.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-carthage-install" class="anchor" aria-hidden="true" href="#carthage-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage Install&lt;/h2&gt;
&lt;p&gt;Charts now include Carthage prebuilt binaries.&lt;/p&gt;
&lt;pre lang="carthage"&gt;&lt;code&gt;github "danielgindi/Charts" == 3.4.0
github "danielgindi/Charts" ~&amp;gt; 3.4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In order to build the binaries for a new release, use &lt;code&gt;carthage build --no-skip-current &amp;amp;&amp;amp; carthage archive Charts&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3rd-party-bindings" class="anchor" aria-hidden="true" href="#3rd-party-bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3rd party bindings&lt;/h2&gt;
&lt;p&gt;Xamarin (by @Flash3001): &lt;em&gt;iOS&lt;/em&gt; - &lt;a href="https://github.com/Flash3001/iOSCharts.Xamarin"&gt;GitHub&lt;/a&gt;/&lt;a href="https://www.nuget.org/packages/iOSCharts/" rel="nofollow"&gt;NuGet&lt;/a&gt;. &lt;em&gt;Android&lt;/em&gt; - &lt;a href="https://github.com/Flash3001/MPAndroidChart.Xamarin"&gt;GitHub&lt;/a&gt;/&lt;a href="https://www.nuget.org/packages/MPAndroidChart/" rel="nofollow"&gt;NuGet&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h2&gt;
&lt;p&gt;If you like what you see here, and want to support the work being done in this repository, you could:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contribute code, issues and pull requests&lt;/li&gt;
&lt;li&gt;Let people know this library exists (&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;üî•&lt;/g-emoji&gt; spread the word &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;üî•&lt;/g-emoji&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=68UL6Y8KUPS96" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="Donate" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt; (You can buy me a beer, or you can buy me dinner :-)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The author of &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt; is the reason that this library exists, and is accepting &lt;a href="https://github.com/PhilJay/MPAndroidChart#donations"&gt;donations&lt;/a&gt; on his page. He deserves them!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-questions--issues" class="anchor" aria-hidden="true" href="#questions--issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions &amp;amp; Issues&lt;/h2&gt;
&lt;p&gt;If you are having questions or problems, you should:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure you are using the latest version of the library. Check the &lt;a href="https://github.com/danielgindi/Charts/releases"&gt;&lt;strong&gt;release-section&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Study the Android version's &lt;a href="https://github.com/PhilJay/MPAndroidChart/wiki"&gt;&lt;strong&gt;Documentation-Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Study the (Still incomplete &lt;a href="http://cocoadocs.org/docsets/Charts/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c2cfb861972d8cf1f4a5ba62f1e4b8f3ad2a702d/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6d6574726963732f646f632d70657263656e742f4368617274732e737667" alt="Doc-Percent" data-canonical-src="https://img.shields.io/cocoapods/metrics/doc-percent/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt;) &lt;a href="http://cocoadocs.org/docsets/Charts/" rel="nofollow"&gt;&lt;strong&gt;Pod-Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Search or open questions on &lt;a href="http://stackoverflow.com/questions/tagged/ios-charts" rel="nofollow"&gt;&lt;strong&gt;stackoverflow&lt;/strong&gt;&lt;/a&gt; with the &lt;code&gt;ios-charts&lt;/code&gt; tag&lt;/li&gt;
&lt;li&gt;Search &lt;a href="https://github.com/danielgindi/Charts/issues"&gt;&lt;strong&gt;known issues&lt;/strong&gt;&lt;/a&gt; for your problem (open and closed)&lt;/li&gt;
&lt;li&gt;Create new issues (please &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;üî•&lt;/g-emoji&gt; &lt;strong&gt;search known issues before&lt;/strong&gt; &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;üî•&lt;/g-emoji&gt;, do not create duplicate issues)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Core features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8 different chart types&lt;/li&gt;
&lt;li&gt;Scaling on both axes (with touch-gesture, axes separately or pinch-zoom)&lt;/li&gt;
&lt;li&gt;Dragging / Panning (with touch-gesture)&lt;/li&gt;
&lt;li&gt;Combined-Charts (line-, bar-, scatter-, candle-stick-, bubble-)&lt;/li&gt;
&lt;li&gt;Dual (separate) Axes&lt;/li&gt;
&lt;li&gt;Customizable Axes (both x- and y-axis)&lt;/li&gt;
&lt;li&gt;Highlighting values (with customizable popup-views)&lt;/li&gt;
&lt;li&gt;Save chart to camera-roll / export to PNG/JPEG&lt;/li&gt;
&lt;li&gt;Predefined color templates&lt;/li&gt;
&lt;li&gt;Legends (generated automatically, customizable)&lt;/li&gt;
&lt;li&gt;Animations (build up animations, on both x- and y-axis)&lt;/li&gt;
&lt;li&gt;Limit lines (providing additional information, maximums, ...)&lt;/li&gt;
&lt;li&gt;Fully customizable (paints, typefaces, legends, colors, background, gestures, dashed lines, ...)&lt;/li&gt;
&lt;li&gt;Plotting data directly from &lt;a href="https://realm.io" rel="nofollow"&gt;&lt;strong&gt;Realm.io&lt;/strong&gt;&lt;/a&gt; mobile database (&lt;a href="https://github.com/danielgindi/ChartsRealm"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Chart types:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Screenshots are currently taken from the original repository, as they render exactly the same :-)&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a9eaa5fc7fb6c1e70b22acd09385055e0f5c4fe7/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274342e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a9eaa5fc7fb6c1e70b22acd09385055e0f5c4fe7/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274342e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart4.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8c1c9cf68af994a1e17690834603c450638cc62c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/8c1c9cf68af994a1e17690834603c450638cc62c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274332e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart3.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (cubic lines)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4e85ee91169c2ad5dc500b3b415a0c974766615d/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f63756269636c696e6563686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4e85ee91169c2ad5dc500b3b415a0c974766615d/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f63756269636c696e6563686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/cubiclinechart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (gradient fill)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e9f3408cc22c2896a897e9ed92a2fd2cbcf40493/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f6c696e655f63686172745f6772616469656e742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e9f3408cc22c2896a897e9ed92a2fd2cbcf40493/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f6c696e655f63686172745f6772616469656e742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/line_chart_gradient.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Combined-Chart (bar- and linechart in this case)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e29d8d3316203700965cc6cc56e67b779f2845bb/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f636f6d62696e65645f63686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e29d8d3316203700965cc6cc56e67b779f2845bb/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f636f6d62696e65645f63686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/combined_chart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;BarChart (with legend, simple design)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/78b4bc4e50e151970961daf56e81c4c0db72d27c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6261726368617274332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/78b4bc4e50e151970961daf56e81c4c0db72d27c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6261726368617274332e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_barchart3.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BarChart (grouped DataSets)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4bf136c2fd25bcbeac0bcf363bc8f48dae0651fc/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f67726f7570656462617263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4bf136c2fd25bcbeac0bcf363bc8f48dae0651fc/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f67726f7570656462617263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/groupedbarchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Horizontal-BarChart&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2ec281e0ac3013076bff1c3ac00d8d6de372d7a4/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f686f72697a6f6e74616c5f62617263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/2ec281e0ac3013076bff1c3ac00d8d6de372d7a4/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f686f72697a6f6e74616c5f62617263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/horizontal_barchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PieChart (with selection, ...)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7e8a4a3c938c21d032d44d999edd781b6e146f2a/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f7069656368617274312e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7e8a4a3c938c21d032d44d999edd781b6e146f2a/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f7069656368617274312e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/simpledesign_piechart1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ScatterChart&lt;/strong&gt; (with squares, triangles, circles, ... and more)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6b254aa699df7f9464967009129c3017de721b77/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f7363617474657263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6b254aa699df7f9464967009129c3017de721b77/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f7363617474657263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/scatterchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CandleStickChart&lt;/strong&gt; (for financial data)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6dbee4e35fde8691e5ac29417583dc8e16608895/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f63616e646c65737469636b63686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6dbee4e35fde8691e5ac29417583dc8e16608895/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f63616e646c65737469636b63686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/candlestickchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BubbleChart&lt;/strong&gt; (area covered by bubbles indicates the value)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6704c21e680e831c3c07d0bebf2676f5e99a3d41/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f627562626c6563686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6704c21e680e831c3c07d0bebf2676f5e99a3d41/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f627562626c6563686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/bubblechart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RadarChart&lt;/strong&gt; (spider web chart)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/782ded242133f98db56004fc94401570b8749620/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f726164617263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/782ded242133f98db56004fc94401570b8749620/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f726164617263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/radarchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Currently there's no need for documentation for the iOS/tvOS/macOS version, as the API is &lt;strong&gt;95% the same&lt;/strong&gt; as on Android.&lt;br&gt;
You can read the official &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt; documentation here: &lt;a href="https://github.com/PhilJay/MPAndroidChart/wiki"&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Or you can see the Charts Demo project in both Objective-C and Swift (&lt;a href="https://github.com/danielgindi/Charts/tree/master/ChartsDemo-iOS"&gt;&lt;strong&gt;ChartsDemo-iOS&lt;/strong&gt;&lt;/a&gt;, as well as macOS &lt;a href="https://github.com/danielgindi/Charts/tree/master/ChartsDemo-macOS"&gt;&lt;strong&gt;ChartsDemo-macOS&lt;/strong&gt;&lt;/a&gt;) and learn the how-tos from it.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-special-thanks" class="anchor" aria-hidden="true" href="#special-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Thanks&lt;/h1&gt;
&lt;p&gt;Goes to &lt;a href="https://github.com/liuxuan30"&gt;@liuxuan30&lt;/a&gt;, &lt;a href="https://github.com/petester42"&gt;@petester42&lt;/a&gt; and  &lt;a href="https://github.com/AlBirdie"&gt;@AlBirdie&lt;/a&gt; for new features, bugfixes, and lots and lots of involvement in our open-sourced community! You guys are a huge help to all of those coming here with questions and issues, and I couldn't respond to all of those without you.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Copyright 2016 Daniel Cohen Gindi &amp;amp; Philipp Jahoda&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>danielgindi</author><guid isPermaLink="false">https://github.com/danielgindi/Charts</guid><pubDate>Mon, 09 Dec 2019 00:24:00 GMT</pubDate></item><item><title>rileytestut/AltStore #25 in Swift, This month</title><link>https://github.com/rileytestut/AltStore</link><description>&lt;p&gt;&lt;i&gt;AltStore is an alternative app store for non-jailbroken iOS devices.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-altstore" class="anchor" aria-hidden="true" href="#altstore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AltStore&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;AltStore is an alternative app store for non-jailbroken iOS devices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://swift.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/440edeeeb3b2c1b118c6184fd929167587dea9a2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352e302d6f72616e67652e737667" alt="Swift Version" data-canonical-src="https://img.shields.io/badge/swift-5.0-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/agpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cb1d26ec555a33e9f09fe279b5edc49996a3bb3b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4147504c25323076332d626c75652e737667" alt="License: AGPL v3" data-canonical-src="https://img.shields.io/badge/License-AGPL%20v3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a34cfbf37ba6848362bf2bee0f3915c2e38b1cc1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="PRs Welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AltStore is an iOS application that allows you to sideload other apps (.ipa files) onto your iOS device with just your Apple ID. AltStore resigns apps with your personal development certificate and sends them to a desktop app, AltServer, which installs the resigned apps back to your device using iTunes WiFi sync. To prevent apps from expiring, AltStore will also periodically refresh your apps in the background when on the same WiFi as AltServer.&lt;/p&gt;
&lt;p&gt;For the initial release, I focused on building a solid foundation for distributing my own apps ‚Äî primarily Delta, &lt;a href="https://github.com/rileytestut/Delta"&gt;my all-in-one emulator for iOS&lt;/a&gt;. Now that Delta has been released, however, I'm beginning work on adding support for &lt;em&gt;anyone&lt;/em&gt; to list and distribute their apps through AltStore (contributions welcome! &lt;g-emoji class="g-emoji" alias="slightly_smiling_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f642.png"&gt;üôÇ&lt;/g-emoji&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Resigns and installs any app with your Apple ID&lt;/li&gt;
&lt;li&gt;Installs apps over WiFi using AltServer&lt;/li&gt;
&lt;li&gt;Refreshes apps periodically in the background to prevent them from expiring (when on same WiFi as AltServer)&lt;/li&gt;
&lt;li&gt;Handles app updates directly through AltStore&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 11&lt;/li&gt;
&lt;li&gt;iOS 12.2+ (AltStore)&lt;/li&gt;
&lt;li&gt;macOS 10.14.4+ (AltServer)&lt;/li&gt;
&lt;li&gt;Swift 5+&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why iOS 12.2+ and macOS 10.14.4+? Doing so allows me to distribute all AltStore apps without embedding Swift libraries inside them. This helps me afford bandwidth costs by reducing download sizes by roughly 30%, but also noticeably improves how long it takes to install/refresh apps with AltStore. If you're compiling AltStore and/or AltServer yourself, however, you should be able to lower their deployment targets to iOS 12.0 and macOS 10.14.0, respectively, without any issues.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-overview" class="anchor" aria-hidden="true" href="#project-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Overview&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-altstore-1" class="anchor" aria-hidden="true" href="#altstore-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AltStore&lt;/h3&gt;
&lt;p&gt;AltStore is just a regular, sandboxed iOS application. The AltStore app target contains the vast majority of AltStore's functionality, including all the logic for downloading and updating apps through AltStore. AltStore makes heavy use of standard iOS frameworks and technologies most iOS developers are familiar with, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Core Data&lt;/li&gt;
&lt;li&gt;Storyboards/Nibs&lt;/li&gt;
&lt;li&gt;Auto Layout&lt;/li&gt;
&lt;li&gt;Background App Refresh&lt;/li&gt;
&lt;li&gt;Network.framework (new in iOS 12)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-altserver" class="anchor" aria-hidden="true" href="#altserver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AltServer&lt;/h3&gt;
&lt;p&gt;AltServer is also just a regular, sandboxed macOS application. AltServer is significantly less complex than AltStore though, and for that reason consists of only a handful of files.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-altkit" class="anchor" aria-hidden="true" href="#altkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AltKit&lt;/h3&gt;
&lt;p&gt;AltKit is a shared framework that includes common code between AltStore and AltServer.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-altsign" class="anchor" aria-hidden="true" href="#altsign"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AltSign&lt;/h3&gt;
&lt;p&gt;AltSign is my internal framework used by both AltStore and AltServer to communicate with Apple's servers and resign apps. For more info, check the &lt;a href="https://github.com/rileytestut/altsign"&gt;AltSign repo&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-roxas" class="anchor" aria-hidden="true" href="#roxas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roxas&lt;/h3&gt;
&lt;p&gt;Roxas is my internal framework used across all my iOS projects, developed to simplify a variety of common tasks used in iOS development. For more info, check the &lt;a href="https://github.com/rileytestut/roxas"&gt;Roxas repo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compilation-instructions" class="anchor" aria-hidden="true" href="#compilation-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compilation Instructions&lt;/h2&gt;
&lt;p&gt;AltStore and AltServer are both fairly straightforward to compile and run if you're already an iOS or macOS developer. To compile AltStore and/or AltServer:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone the repository
&lt;pre&gt;&lt;code&gt;git clone https://github.com/rileytestut/AltStore.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Update submodules:
&lt;pre&gt;&lt;code&gt;cd AltStore 
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;AltStore.xcworkspace&lt;/code&gt; and select the AltStore project in the project navigator. On the &lt;code&gt;Signing &amp;amp; Capabilities&lt;/code&gt; tab, change the team from &lt;code&gt;Yvette Testut&lt;/code&gt; to your own account.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;(AltStore only)&lt;/strong&gt; Change the value for &lt;code&gt;ALTDeviceID&lt;/code&gt; in the Info.plist to your device's UDID. Normally, AltServer embeds the device's UDID in AltStore's Info.plist during installation. When running through Xcode you'll need to set the value yourself or else AltStore won't resign (or even install) apps for the proper device.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;(AltStore only)&lt;/strong&gt; Change the value for &lt;code&gt;ALTServerID&lt;/code&gt; in the Info.plist to your AltServer's serverID. This is embedded by AltServer during installation to help AltStore distinguish between multiple AltServers on the same network, and you can find this by using a Bonjour browsing application and noting the serverID advertised by AltServer. This isn't strictly necessary, because if AltStore can't find the AltServer with the embedded serverID it still falls back to trying another AltServer. However, this will help in cases where there are multiple AltServers running (plus the error messages are more helpful).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;(AltServer only)&lt;/strong&gt; Install Carthage (if you use Homebrew, you can do this with &lt;code&gt;brew install carthage&lt;/code&gt;). Then run &lt;code&gt;carthage update&lt;/code&gt; in the root directory of the repository.&lt;/li&gt;
&lt;li&gt;Build + run app! &lt;g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png"&gt;üéâ&lt;/g-emoji&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h2&gt;
&lt;p&gt;Due to the licensing of some dependencies used by AltStore, I have no choice but to distribute AltStore under the &lt;strong&gt;AGPLv3 license&lt;/strong&gt;. That being said, my goal for AltStore is for it to be an open source project &lt;em&gt;anyone&lt;/em&gt; can use without restrictions, so I explicitly give permission for anyone to use, modify, and distribute all &lt;em&gt;my&lt;/em&gt; original code for this project in any form, with or without attribution, without fear of legal consequences (dependencies remain under their original licenses, however).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact-me" class="anchor" aria-hidden="true" href="#contact-me"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact Me&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Email: &lt;a href="mailto:riley@rileytestut.com"&gt;riley@rileytestut.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/rileytestut" rel="nofollow"&gt;@rileytestut&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Questions about AltStore in general? Make sure to read the FAQ at &lt;a href="https://altstore.io/faq/" rel="nofollow"&gt;https://altstore.io/faq/&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rileytestut</author><guid isPermaLink="false">https://github.com/rileytestut/AltStore</guid><pubDate>Mon, 09 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>