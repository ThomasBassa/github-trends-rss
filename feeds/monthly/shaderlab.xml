<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: ShaderLab, This month</title><link>https://github.com/trending/shaderlab?since=monthly</link><description>The top repositories on GitHub for shaderlab, measured monthly</description><pubDate>Sat, 09 Nov 2019 01:04:25 GMT</pubDate><lastBuildDate>Sat, 09 Nov 2019 01:04:25 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>candycat1992/Unity_Shaders_Book #1 in ShaderLab, This month</title><link>https://github.com/candycat1992/Unity_Shaders_Book</link><description>&lt;p&gt;&lt;i&gt;:book: 书籍《Unity Shader入门精要》源代码&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-unity-shader入门精要源代码" class="anchor" aria-hidden="true" href="#unity-shader入门精要源代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;《Unity Shader入门精要》源代码&lt;/h1&gt;
&lt;p&gt;本项目是书籍《Unity Shader入门精要》的配套源代码。最新版本请移步&lt;a href="https://github.com/candycat1992/Unity_Shaders_Book"&gt;本项目的Github页面&lt;/a&gt;。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-源码下载" class="anchor" aria-hidden="true" href="#源码下载"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;源码下载&lt;/h1&gt;
&lt;p&gt;我们推荐您从Github上clone项目源码并及时检查更新。如果下载速度过慢可以移步&lt;a href="https://pan.baidu.com/s/1hr4crsS" rel="nofollow"&gt;百度网盘地址&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;纸质版书籍可在以下链接购买：&lt;a href="https://www.amazon.cn/Unity-Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%86%AF%E4%B9%90%E4%B9%90/dp/B01G95GMU6/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1464607131&amp;amp;sr=1-1&amp;amp;keywords=unity+shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81" rel="nofollow"&gt;亚马逊&lt;/a&gt;、&lt;a href="http://product.dangdang.com/23972910.html" rel="nofollow"&gt;当当&lt;/a&gt;、&lt;a href="http://item.jd.com/11927199.html" rel="nofollow"&gt;京东&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-随书彩图" class="anchor" aria-hidden="true" href="#随书彩图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;随书彩图&lt;/h1&gt;
&lt;p&gt;我们提供了包含书中所有插图的彩色版插图集锦：&lt;a href="http://candycat1992.github.io/unity_shaders_book/unity_shaders_book_images.html" rel="nofollow"&gt;HTML&lt;/a&gt;，&lt;a href="http://candycat1992.github.io/unity_shaders_book/unity_shaders_book_images.pdf" rel="nofollow"&gt;PDF&lt;/a&gt;。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-2019年新增改版后的第十八章" class="anchor" aria-hidden="true" href="#2019年新增改版后的第十八章"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2019年新增：改版后的第十八章&lt;/h1&gt;
&lt;p&gt;当年乐观地以为自己有时间写第二版，是我太年轻了…… 第一版由于我能力有限的确有很多问题，感谢大家一直以来的支持。当年在我有时间的时候曾经花了一些时间重写了第18章，本来是想要放到第二版里的，但是目前第二版遥遥无期，索性直接把改版后的第18章直接放出来，希望能让读者有新的收获：&lt;a href="http://candycat1992.github.io/unity_shaders_book/unity_shaders_book_chapter_18.pdf" rel="nofollow"&gt;改版后的第18章&lt;/a&gt;。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-第四章勘误" class="anchor" aria-hidden="true" href="#第四章勘误"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;第四章勘误&lt;/h1&gt;
&lt;p&gt;由于数学章是全书的重要基础，我们决定把第四章公开，来及时让读者获取最新的第四章数学章的内容：&lt;a href="http://candycat1992.github.io/unity_shaders_book/unity_shaders_book_chapter_4.pdf" rel="nofollow"&gt;PDF&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：我们可能会根据读者勘误随时更新该文档，内容和页号可能会与读者手中的版本不同，实体书中的勘误会在每次重印时进行修正。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-读者反馈和勘误" class="anchor" aria-hidden="true" href="#读者反馈和勘误"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;读者反馈和勘误&lt;/h1&gt;
&lt;p&gt;尽管我们在本书的编写过程中多次检查内容的正确性，但不可避免书中仍然会出现一些错误，欢迎读者批评指正。任何关于本书内容、源码等方面的问题，欢迎读者反映到本书源码所在的&lt;a href="https://github.com/candycat1992/Unity_Shaders_Book/issues"&gt;Github讨论页&lt;/a&gt;，也可以发邮件（&lt;a href="mailto:lelefeng1992@gmail.com"&gt;lelefeng1992@gmail.com&lt;/a&gt;）联系笔者。&lt;/p&gt;
&lt;p&gt;关于目前&lt;strong&gt;已发现的错误&lt;/strong&gt;我们会及时在网上更新：&lt;a href="http://candycat1992.github.io/unity_shaders_book/unity_shaders_book_corrigenda.html" rel="nofollow"&gt;勘误列表&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我们也维护了读者反馈的问题列表：&lt;a href="http://candycat1992.github.io/unity_shaders_book/unity_shaders_book_faq.html" rel="nofollow"&gt;FAQ&lt;/a&gt;。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-unity版本" class="anchor" aria-hidden="true" href="#unity版本"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unity版本&lt;/h1&gt;
&lt;p&gt;我们&lt;strong&gt;推荐使用Unity 5.0以上的版本来编译本项目&lt;/strong&gt;。如果你打算&lt;strong&gt;使用更低版本的Unity，那么在学习本书时可能就会遇到一些问题&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;你可能发现会有些菜单或变量在你的Unity中找不到，这可能就是由于Unity版本不同造成的。绝大多数情况下，本书的代码和指令仍然可以工作良好，但在一些特殊情况下，Unity可能会更改底层的实现细节，造成同样的代码会得到不一样的效果（例如，在非统一缩放时对法线进行变换）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;还有一些问题是Unity提供的内置变量、宏和函数，例如我们在书中经常会使用UnityObjectToWorldNormal内置函数把法线从模型空间变换到世界空间中，但这个函数是在Unity 5中才被引入的，因此如果读者使用的是Unity 5之前的版本就会报错。类似的情况还有和阴影相关的宏和变量等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;和Unity 4.x版本相比，Unity 5.x最大的变化之一就是很多以前只有在专业版才支持的功能，在免费版也同样提供了。因此，如果读者使用的是Unity 4.x免费版，可能会发现本书中的某些材质会出错。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-unity-53及其以下unity-5x版本" class="anchor" aria-hidden="true" href="#unity-53及其以下unity-5x版本"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unity 5.3及其以下Unity 5.x版本&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;分支链接&lt;/strong&gt;：&lt;a href="https://github.com/candycat1992/Unity_Shaders_Book/tree/master"&gt;master&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在本书编写时，我们使用的版本是Unity 5.3，因此使用这些Unity版本的读者请使用本项目&lt;a href="https://github.com/candycat1992/Unity_Shaders_Book/tree/master"&gt;master&lt;/a&gt;分支的相关代码。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-unity-54及其以上unity-5x版本" class="anchor" aria-hidden="true" href="#unity-54及其以上unity-5x版本"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unity 5.4及其以上Unity 5.x版本&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;分支链接&lt;/strong&gt;：&lt;a href="https://github.com/candycat1992/Unity_Shaders_Book/tree/unity_5_4"&gt;unity_5_4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unity 5.4对Shader部分进行了一些比较大的更新，比较明显的变化有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用了unity_XXX来代替原有的XXX变换矩阵，例如_Object2World被替换成了unity_ObjectToWorld，_World2Object被替换成了unity_WorldToObject（均在UnityShaderVariables.cginc文件中被声明），_LightMatrix0被替换成了unity_WorldToLight（在AutoLight.cginc文件中被声明）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用了一些内置函数来代替某些运算，例如mul(UNITY_MATRIX_MVP,&lt;em&gt;)相关计算被替换成了UnityObjectToClipPos(&lt;/em&gt;)。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在学习本书时，读者需要注意代码中一些由于更新造成的变化。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-升级unity-55" class="anchor" aria-hidden="true" href="#升级unity-55"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;升级Unity 5.5&lt;/h3&gt;
&lt;p&gt;从Unity 5.5开始，Unity在某些平台（如DX11、DX12、PS4、Xbox One、Metal）等平台对深度缓存进行了反转操作，使得在近平面处的深度值为1，而远平面处为0。这样做的原因主要是为了更加充分得利用浮点深度缓存，具体原因可以参见NVIDIA的相关博客&lt;a href="https://developer.nvidia.com/content/depth-precision-visualized" rel="nofollow"&gt;Depth Precision Visualized&lt;/a&gt;。Unity在&lt;a href="https://docs.unity3d.com/Manual/UpgradeGuide55.html" rel="nofollow"&gt;Upgrading to Unity 5.5&lt;/a&gt;和&lt;a href="https://docs.unity3d.com/Manual/SL-PlatformDifferences.html" rel="nofollow"&gt;Platform-specific rendering differences&lt;/a&gt;文档中对此进行了说明。&lt;/p&gt;
&lt;p&gt;在本书代码中，我们在第13章用到了深度纹理，其中对于使用了Linear01Depth、LinearEyeDepth等Unity内置函数的部分不受此变化影响，但我们在Chapter13-MotionBlurWithDepthTexture中直接访问了深度值来计算世界空间下的坐标：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Get the depth buffer value at this pixel.
float d = SAMPLE_DEPTH_TEXTURE(_CameraDepthTexture, i.uv_depth);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这使得在反转深度缓存的情况下会得到错误的结果。为了解决这个问题，我们可以使用内置宏来判断深度是否已被反转，并据此来做出相应的计算。变化后的代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Get the depth buffer value at this pixel.
float d = SAMPLE_DEPTH_TEXTURE(_CameraDepthTexture, i.uv_depth);
#if defined(UNITY_REVERSED_Z)
	d = 1.0 - d;
#endif
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-截止到目前的unity-2017版本" class="anchor" aria-hidden="true" href="#截止到目前的unity-2017版本"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;截止到目前的Unity 2017版本&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;分支链接&lt;/strong&gt;：&lt;a href="https://github.com/candycat1992/Unity_Shaders_Book/tree/unity_2017_1"&gt;unity_2017_1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unity 2017对Shader部分没有较大更新，我们主要做了以下更改来消除升级造成的Shader Warning信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用内置的UnityObjectToViewPos(*)函数来代替mul(UNITY_MATRIX_MV, *)对顶点进行变换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在学习本书时，读者需要注意代码中一些由于更新造成的变化。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-使用说明" class="anchor" aria-hidden="true" href="#使用说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用说明&lt;/h1&gt;
&lt;p&gt;本书源码的组织方式大多按资源类型和章节进行划分，主要包含了以下关键文件夹：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件夹&lt;/th&gt;
&lt;th align="left"&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Assets/Scenes&lt;/td&gt;
&lt;td align="left"&gt;包含了各章对应的场景，每个章节对应一个子文件夹，例如第七章所有场景所在的子文件夹为Assets/Scenes/Chapter7。每个场景的命名方式为Scene_章号_小节号_次小节号，例如7.2.3节对应的场景名为Scene_7_2_3。如果同一个小节包含了多个场景，那么会使用英文字母作为后缀依次表示，例如7.1.2节包含了两个场景Scene_7_1_2_a和Scene_7_1_2_b。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assets/Shaders&lt;/td&gt;
&lt;td align="left"&gt;包含了各章实现的Unity Shader文件，每个章节对应一个子文件夹，例如第七章实现的所有Unity Shader所在的子文件夹为Assets/Shaders/Chapter7。每个Unity Shader的命名方式为ChapterX-功能，例如第七章使用渐变纹理的Unity Shader名为Chapter7-RampTexture。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assets/Materials&lt;/td&gt;
&lt;td align="left"&gt;包含了各章对应的材质，每个章节对应一个子文件夹，例如第七章所有材质所在的子文件夹为Assets/Materials/Chapter7。每个材质的命名方式与它使用的Unity Shader名称相匹配，并以Mat作为后缀，例如使用名为Chapter7-RampTexture的Unity Shader的材质名称是RampTextureMat。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assets/Scripts&lt;/td&gt;
&lt;td align="left"&gt;包含了各章对应的C#脚本，每个章节对应一个子文件夹，例如第五章所有脚本所在的子文件夹为Assets/Scripts/Chapter5。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assets/Textures&lt;/td&gt;
&lt;td align="left"&gt;包含了各章使用的纹理贴图，每个章节对应一个子文件夹，例如第七章使用的所有纹理所在的子文件夹为Assets/Textures/Chapter7。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;除了上述文件夹外，源码中还包含了一些辅助文件夹，例如Assets/Editor文件夹中包含了一些需要在编辑器状态下运行的脚本，Assets/Prefabs文件夹下包含了各章使用的预设模型和其他常用预设模型等。&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>candycat1992</author><guid isPermaLink="false">https://github.com/candycat1992/Unity_Shaders_Book</guid><pubDate>Sat, 09 Nov 2019 00:01:00 GMT</pubDate></item><item><title>UnityTechnologies/ShaderGraph_ExampleLibrary #2 in ShaderLab, This month</title><link>https://github.com/UnityTechnologies/ShaderGraph_ExampleLibrary</link><description>&lt;p&gt;&lt;i&gt;A library of Shaders created using Unity's Shader Graph.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-shader-graph-example-library" class="anchor" aria-hidden="true" href="#shader-graph-example-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shader Graph Example Library&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b11ff9a975ef57d8253a960290f5fcf6ccd6cedc/68747470733a2f2f692e696d6775722e636f6d2f6b41534a784e312e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b11ff9a975ef57d8253a960290f5fcf6ccd6cedc/68747470733a2f2f692e696d6775722e636f6d2f6b41534a784e312e706e67" alt="Player Lineup" data-canonical-src="https://i.imgur.com/kASJxN1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This project is a library of different custom shaders created using &lt;a href="https://forum.unity.com/threads/feedback-wanted-shader-graph.511960/" rel="nofollow"&gt;Unity's Shader Graph feature&lt;/a&gt;. All of the shaders are compatible for the &lt;a href="https://forum.unity.com/threads/feedback-wanted-scriptable-render-pipelines.470095/" rel="nofollow"&gt;Lightweight Scriptable Render Pipeline&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These Shader Graphs are provided as-is; so your mileage may vary! You are more than welcome to modify/change/extract/use any of the examples.&lt;/p&gt;
&lt;p&gt;Contains examples for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mesh Renderers/Skinned Mesh Renderers (located in ExampleScene-Player)&lt;/li&gt;
&lt;li&gt;Simple Particles&lt;/li&gt;
&lt;li&gt;Procedural Graphs and Animations (Using no Textures)&lt;/li&gt;
&lt;li&gt;Sprites&lt;/li&gt;
&lt;li&gt;Some 'Scenarios' such as Triplanar Grass and Vertex Offset Sine Wave&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Software Requirement&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version: Unity 2018.3.0f2&lt;/li&gt;
&lt;li&gt;Package: com.unity.render-pipelines.lightweight: 4.6.0-preview&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Known Issues&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is sometimes an issue when opening the project for the first time that textures set in the Material Inspector aren't being applied properly; the current 'fix' is to open the related Shader Graph, click the "Save' button and the Material should update. :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contact&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;if you have any issues &amp;amp; requests for the Shader Graph Example Library; please reach out to Andy Touch:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Email: andyt[at]unity3d.com&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/andytouch" rel="nofollow"&gt;@andytouch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And please get in touch if you use any of the examples for anything! :)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>UnityTechnologies</author><guid isPermaLink="false">https://github.com/UnityTechnologies/ShaderGraph_ExampleLibrary</guid><pubDate>Sat, 09 Nov 2019 00:02:00 GMT</pubDate></item><item><title>Unity-Technologies/Addressables-Sample #3 in ShaderLab, This month</title><link>https://github.com/Unity-Technologies/Addressables-Sample</link><description>&lt;p&gt;&lt;i&gt;Demo project using Addressables package&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-addressables-sample" class="anchor" aria-hidden="true" href="#addressables-sample"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Addressables-Sample&lt;/h1&gt;
&lt;p&gt;Demo project using Addressables package&lt;/p&gt;
&lt;p&gt;These samples are broken up into projects based on high level functionality.  These are intended as jumping off points for your own development.  These have not been tested, and are not guarenteed to work in your situation.  They are just examples, to make some concepts easier to understand, or easier to replicate in your own project.  Use at your own risk.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-projects" class="anchor" aria-hidden="true" href="#projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-basicbasic-assetreference" class="anchor" aria-hidden="true" href="#basicbasic-assetreference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Basic/Basic AssetReference&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;Several sample scenes to display functionality surrounding the asset reference class.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scenes/BasicReference
&lt;ul&gt;
&lt;li&gt;Simplest example using a refrence to spawn and destroy a game object&lt;/li&gt;
&lt;li&gt;Each object is instantiated directly via the &lt;code&gt;AssetReference&lt;/code&gt; which will increment the ref count.&lt;/li&gt;
&lt;li&gt;Each object spawned has a script on it that will cause it to release itself after a certain amount of time. This destroys the object and decrements the ref count.&lt;/li&gt;
&lt;li&gt;Any instances still around when the scene closes will automatically be released (decrementing ref count) by the scene closing process (even if their self-destruct script were disabled).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scenes/ListOfReferences
&lt;ul&gt;
&lt;li&gt;Showcases using references within a list.&lt;/li&gt;
&lt;li&gt;Key feature: once an &lt;code&gt;AssetReference&lt;/code&gt; is loaded it keeps a member callled &lt;code&gt;.Asset&lt;/code&gt;.  In this example, you would not want to use the on-complete callback to save off the asset as the loads may not complete in the same order as they were triggered. Thus it's useful that the reference keeps up with its own loaded asset.&lt;/li&gt;
&lt;li&gt;Here the objects are instantiated via the traditional &lt;code&gt;GameObject.Instantiate&lt;/code&gt; which will not increment the Addressables ref count.  These objects still call into Addressables to release themselves, but since they were not instantiated via Addressables, the release only destroys the object, and does not decrement the ref count.&lt;/li&gt;
&lt;li&gt;The manager of these AssetReferences must release them in &lt;code&gt;OnDestroy&lt;/code&gt; or the ref count will survive the closing of the scene.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scenes/FilteredReferences
&lt;ul&gt;
&lt;li&gt;Showcases utilizing the various filtering options on the &lt;code&gt;AssetReference&lt;/code&gt; class.&lt;/li&gt;
&lt;li&gt;This scene also shows an alternative loading patter to the one used in other scenes.  It shows how you can utilize the Asset property.  It is recommended that you only use the Asset for ease of load.  You could theoretically also use it to poll completion, but you would never find out about errors in that usage.&lt;/li&gt;
&lt;li&gt;This sample shows loading via the &lt;code&gt;AssetReference&lt;/code&gt; but instantiating via Unity's built in method.  This will only increment the ref count once (for the load).&lt;/li&gt;
&lt;li&gt;Currently, the objects created are being destroyed with Addressables.ReleaseInstance even though they were not created that way.  As of version 0.8, this will throw a warning, but still delete the asset.  In the future, our intent is to make this method not destroy the asset, or print a warning.  Instead it will return a boolean so you can destroy manually if needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-basicscene-loading" class="anchor" aria-hidden="true" href="#basicscene-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Basic/Scene Loading&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;The ins and outs of scene loading.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scenes/Bootstrap
&lt;ul&gt;
&lt;li&gt;This is the scene to start with.  From this one you can transition to the other scenes.&lt;/li&gt;
&lt;li&gt;"Transition to Next Scene" will open a new scene (non-additively), which will close the current scene.&lt;/li&gt;
&lt;li&gt;"Add Object" will instantiate an addressable prefab into the scene.  The point of this button is to show that these items do not need ReleaseInstance called on them.  Should you use the Profiler, you will see they get cleaned up on scene close.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scenes/Foundation
&lt;ul&gt;
&lt;li&gt;This is the scene you transition to from Bootstrap.&lt;/li&gt;
&lt;li&gt;"Load *" buttons will open other scenes additively.&lt;/li&gt;
&lt;li&gt;"Unload *" buttons will unload scenes that have been additively loaded.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scenes/ItemScenes/*
&lt;ul&gt;
&lt;li&gt;These scenes just contain items with no code.  Their purpose is to be additively loaded by the Foundation scene.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-basiccomponentreference" class="anchor" aria-hidden="true" href="#basiccomponentreference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Basic/ComponentReference&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;This example creates an AssetReference that is restricted to having a specific Component.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scenes/SampleScene
&lt;ul&gt;
&lt;li&gt;This scene has a Spawner game object that alternates between spawning a direct reference prefab and an addressable one.&lt;/li&gt;
&lt;li&gt;Both the direct reference and the addressable ComponentReference can only be set to one of the prefabs with the component ColorChanger on it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scripts/ComponentReference - ComponentReference
&lt;ul&gt;
&lt;li&gt;This is the class that inhertits from AssetReference.  It is generic and does not specify which Components it might care about.  A concrete child of this class is required for serialization to work.&lt;/li&gt;
&lt;li&gt;At edit-time it validates that the asset set on it is a GameObject with the requried Component.&lt;/li&gt;
&lt;li&gt;At runtime it can load/instantiate the GameObject, then return the desired component.  API matches base class (LoadAssetAsync &amp;amp; InstantiateAsync).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scripts/ColorChanger -  ColorChanger &amp;amp; ComponentReferenceColorChanger
&lt;ul&gt;
&lt;li&gt;The component type we chose to care about.&lt;/li&gt;
&lt;li&gt;Note that this file includes a concrete version of the ComponentReference.  This is needed because if your game code just specified a ComponentReference it could not serialize or show up in the inspector.  This ComponentReferenceColorChanger is what makes serialization and the inspector UI work.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-basicsprite-land" class="anchor" aria-hidden="true" href="#basicsprite-land"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Basic/Sprite Land&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;2019.3.0a11+&lt;/em&gt; - Sprite demo is back.  There was an engine bug causing a crash when loading out of sprite sheets that caused us to remove this demo.  This is in 2019.3 alpha, and is being backported to 2019.2 and 2018.4.  If you use this demo, and your game crashes, or you get warnings about "gfx" not on main thread, you don't have a fixed vesrion of the platform.
There are three sprite access methods currently demo'd in this sample.  The on-screen button will change functionality with each click, so you can demo the methods in order.  We have some additional mechanisms coming in Addressables 1.2+.  We will update this demo once that is out.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scenes/SampleScene
&lt;ul&gt;
&lt;li&gt;First is having an AssetReference directly to a single sprite.  Since this sprite is a single entry, we can reference the asset directly and get the sprite.  This is the most simple case.&lt;/li&gt;
&lt;li&gt;Second is accessing a sprite from within a sprite sheet. This is the one that was causing a crash, but should be fixed now.  Here we load the sprite sheet asset as type IList.  This tells addressables to load all the sub-objects that are sprites, and return them as a list.&lt;/li&gt;
&lt;li&gt;Third is accessing a sprite from within an atals. In this case, you have to use addressables to load the sprite atlas, then use the normal atlas API to load a given sprite from it.  This example also shows extending the AssetReference to provide a typed refernce that Addressables doesn't come with (AssetReferenceT in this case).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;All code is in Scripts/SpriteControlTest.cs&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-basicspace-shooter" class="anchor" aria-hidden="true" href="#basicspace-shooter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Basic/Space Shooter&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;A very simple Unity tutorial that we converted to use addressables.  The main code file to look at would be Done_GameController.cs, but in general, this is just meant as a simple project to explore.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-advancedtexture-variations" class="anchor" aria-hidden="true" href="#advancedtexture-variations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Advanced/Texture Variations&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;An example project to show one use case or workflow for creating "variants".  The new build pipeline (Scriptable Build Pipeline) upon which Addressables is built, does not support asset bundle variants.  This old mechanism was useful in many instances, so this sample is meant to show how to accomplish similar results for one of those instances.  There are other purpose for variants not shown here.  Some will be coming in future samples.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scenes/SampleScene
&lt;ul&gt;
&lt;li&gt;In the scene, there's a prefab with an existing texture that can load alternate textures based on button input.  (VariationController.cs)&lt;/li&gt;
&lt;li&gt;The project only has one instance of the texture in question (Texture/tree2.png).  It is marked as addressable, with the address "tree" and no labels&lt;/li&gt;
&lt;li&gt;The group containing "tree" has a custom schema added to it (TextureVariationSchema).  This defines the label for the provided texture, and a scale and label for alternate textures.&lt;/li&gt;
&lt;li&gt;For "Fast Mode" in the player, run with the play mode script of "Vary Fast".  This will look at all the label variations defined in the schema, and apply all labels to the "tree".  This will then go into play mode in the normal Fast Mode setup of loading from AssetDatabase, but will fake having an "HD", "SD", etc. version of the texture.&lt;/li&gt;
&lt;li&gt;For "Virtual Mode" in the player, run with the play mode script of "Virtual Variety".  This will do the same things as the "Vary Fast" script above.  Note, this is not a very accurate virtual mode right now because it does not emulate the fact that each variety should be in its own bundle.&lt;/li&gt;
&lt;li&gt;With the build script of "Pack Variations" selected, building the player content will:
&lt;ul&gt;
&lt;li&gt;Find all groups with the TextureVariationSchema&lt;/li&gt;
&lt;li&gt;Loop over all size/label pairs, and copy the textures on-disk.&lt;/li&gt;
&lt;li&gt;Change the import settings on the created textures so as to scale them.&lt;/li&gt;
&lt;li&gt;Build all bundles&lt;/li&gt;
&lt;li&gt;Remove the extra files/groups that were created.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;After building with "Pack Variations", you can enter play mode using the standard "Packed Play Mode" script.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-advancedsync-addressables" class="anchor" aria-hidden="true" href="#advancedsync-addressables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Advanced/Sync Addressables&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;Synchronous Addressables!  What a crazy thing.  The value of exploring this demo can be broken into two categories.  One is looking at what would be involved in making addressables synchronous.  The other is looking at creating custom providers.
On the synchronous front, this can be used as a starting point for making your own project support synchronous loading.  As you can see in the code, there are a lot of fail cases, but if you can know that things are on-device and ready to go, it should work.&lt;br&gt;
For custom providers, this project has a couple examples.  Custom providers are a really good way to extend addressables.  They are relatively easy to create and set up, but open up a lot of opportunity to inject logic during your load or instantiate.&lt;/p&gt;
&lt;p&gt;Why don't we put these sync methods in Addressables itself?  The best way to understand that is to look at SyncAddressables/SyncAddressables.cs and search for "throw".  The code is very specific about how it needs to be used, and will cause pain for the caller if not used in the right way at the right time.  That being said, if you want to create a game built on sync interfaces, you can copy this code, and run with it.  If you are using it, all the existing async methods would still work, so you are capable of doing a mix &amp;amp; match in your game, if you are willing to accept the constraints when doing things sync. Note that the group schema is what associates a given asset group with either the sync providers or the regular ones.  So you could not mix &amp;amp; match within a group.&lt;/p&gt;
&lt;p&gt;One common workflow not shown here would have been to set things up to support async loading, but sync instantiation.  This would only work if the game always instantiated after loading was complete. That complicates the game-code, but is a simplified version of this demo from the addressables standpoint.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Not all play modes done.&lt;/em&gt;  Packed content (for play mode, or the player) needs no custom builders.  Fast mode and Virtual mode on the other hand do.  At this point, we have only implemented a sample script for Fast Mode.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scenes/SampleScene
&lt;ul&gt;
&lt;li&gt;This scene waits until the SyncAddressables system has been initialized, and then starts spawning a cube every 60 fixed-update calls.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SyncAddressables code
&lt;ul&gt;
&lt;li&gt;SyncAddressables.cs - A class that simply calls into Addressables and adds some synchronous guards.  Contains methods for:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ready()&lt;/code&gt; - True if the main addressables has finished initializing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LoadAsset&amp;lt;&amp;gt;()&lt;/code&gt; &amp;amp; &lt;code&gt;Instantiate()&lt;/code&gt; - Calls the addressables version of the method, returning the result if things were ready, throwing exceptions if not.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SyncBundleProvider.cs - Loads the asset bundle into memory using synchronous methods.  If the bundle is online this will fail.  Also note, in it's current form, this will fail on Android as loading there is a little more complex.  It can load sync, we just didn't have time to add that support to this demo.  This is the most likely point in the flow for there to be an issue in the sync process.  If this were used in production, it would probably need extended error checking.&lt;/li&gt;
&lt;li&gt;SyncBundledAssetProvider.cs - Loads from an asset bundle using the synchronous methods.  This is unlikely to be a failure point, as it isn't called until the bundle is loaded successfully.&lt;/li&gt;
&lt;li&gt;Editor/SyncFastModeBuild.cs - Since fast mode does not load from bundles, the default fast mode script has to inject it's own provider for all assets.  This custom script just replaces that standard provider with a sync one.&lt;/li&gt;
&lt;li&gt;SyncAssetDatabaseProvider.cs - An overriden provider to do asset database loads immediately.&lt;/li&gt;
&lt;li&gt;No Change Needed: SyncBuildScriptPackedMode or SyncBuildScriptPackedPlayMode.  Since the group schema allows you to specify provider, the standard build script works as is.&lt;/li&gt;
&lt;li&gt;Missing - the two main things missing from this demo are Virtual mode and the ability to load from Resources using the sync interfaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-advancedcustom-analyze-rule" class="anchor" aria-hidden="true" href="#advancedcustom-analyze-rule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Advanced/Custom Analyze Rule&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;This sample shows how to create custom AnalyzeRules for use within the Analyze window.  Both rules follow the recommended pattern for adding themselves to the UI.  There are no scenes to look at in this project, just analyze code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Editor/AddressHasC
&lt;ul&gt;
&lt;li&gt;This is a non-fixable rule (meaning it will not fix itself).&lt;/li&gt;
&lt;li&gt;When run, it checks that all addresses have a capital C in them.  Any that do not are flagged as errors.&lt;/li&gt;
&lt;li&gt;A rule like this would be useful if your studio enforced some sort of naming convention on addresses. (though it would probably be best if it could fix itself)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Editor/PathAddressIsPath
&lt;ul&gt;
&lt;li&gt;This is a fixable rule.  Running fix on it will change addresses to comply with the rule.&lt;/li&gt;
&lt;li&gt;When run, it first identifies all addresses that seem to be paths.  Of those, it makes sure that the address actually matches the path of the asset.&lt;/li&gt;
&lt;li&gt;This would be useful if you primarily left the addresses of your assets as the path (which is the default when marking an asset addressable).  If the asset is moved within the project, then the address no longer maps to where it is. This rule could fix that.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Unity-Technologies</author><guid isPermaLink="false">https://github.com/Unity-Technologies/Addressables-Sample</guid><pubDate>Sat, 09 Nov 2019 00:03:00 GMT</pubDate></item></channel></rss>