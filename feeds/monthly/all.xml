<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: All Languages, This month</title><link>https://github.com/trending/all?since=monthly</link><description>The top repositories on GitHub for all, measured monthly</description><pubDate>Wed, 13 Nov 2019 01:06:19 GMT</pubDate><lastBuildDate>Wed, 13 Nov 2019 01:06:19 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>facebookresearch/detectron2 #1 in All Languages, This month</title><link>https://github.com/facebookresearch/detectron2</link><description>&lt;p&gt;&lt;i&gt;Detectron2 is FAIR's next-generation research platform for object detection and segmentation.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href=".github/Detectron2-Logo-Horz.svg"&gt;&lt;img src=".github/Detectron2-Logo-Horz.svg" width="300" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Detectron2 is Facebook AI Research's next generation software system
that implements state-of-the-art object detection algorithms.
It is a ground-up rewrite of the previous version,
&lt;a href="https://github.com/facebookresearch/Detectron/"&gt;Detectron&lt;/a&gt;,
and it originates from &lt;a href="https://github.com/facebookresearch/maskrcnn-benchmark/"&gt;maskrcnn-benchmark&lt;/a&gt;.&lt;/p&gt;
&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1381301/66535560-d3422200-eace-11e9-9123-5535d469db19.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1381301/66535560-d3422200-eace-11e9-9123-5535d469db19.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-whats-new" class="anchor" aria-hidden="true" href="#whats-new"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's New&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;It is powered by the &lt;a href="https://pytorch.org" rel="nofollow"&gt;PyTorch&lt;/a&gt; deep learning framework.&lt;/li&gt;
&lt;li&gt;Includes more features such as panoptic segmentation, densepose, Cascade R-CNN, rotated bounding boxes, etc.&lt;/li&gt;
&lt;li&gt;Can be used as a library to support &lt;a href="projects/"&gt;different projects&lt;/a&gt; on top of it.
We'll open source more research projects in this way.&lt;/li&gt;
&lt;li&gt;It &lt;a href="https://detectron2.readthedocs.io/notes/benchmarks.html" rel="nofollow"&gt;trains much faster&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See our &lt;a href="https://ai.facebook.com/blog/-detectron2-a-pytorch-based-modular-object-detection-library-/" rel="nofollow"&gt;blog post&lt;/a&gt;
to see more demos and learn about detectron2.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;See &lt;a href="INSTALL.md"&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;See &lt;a href="GETTING_STARTED.md"&gt;GETTING_STARTED.md&lt;/a&gt;,
or the &lt;a href="https://colab.research.google.com/drive/16jcaJoc6bCFAQ96jDe2HwtXj7BMD_-m5" rel="nofollow"&gt;Colab Notebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Learn more at our &lt;a href="https://detectron2.readthedocs.org" rel="nofollow"&gt;documentation&lt;/a&gt;.
And see &lt;a href="projects/"&gt;projects/&lt;/a&gt; for some projects that are built on top of detectron2.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-model-zoo-and-baselines" class="anchor" aria-hidden="true" href="#model-zoo-and-baselines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Zoo and Baselines&lt;/h2&gt;
&lt;p&gt;We provide a large set of baseline results and trained models available for download in the &lt;a href="MODEL_ZOO.md"&gt;Detectron2 Model Zoo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Detectron2 is released under the &lt;a href="LICENSE"&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citing-detectron" class="anchor" aria-hidden="true" href="#citing-detectron"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citing Detectron&lt;/h2&gt;
&lt;p&gt;If you use Detectron2 in your research or wish to refer to the baseline results published in the &lt;a href="MODEL_ZOO.md"&gt;Model Zoo&lt;/a&gt;, please use the following BibTeX entry.&lt;/p&gt;
&lt;div class="highlight highlight-text-bibtex"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@misc&lt;/span&gt;{&lt;span class="pl-en"&gt;wu2019detectron2&lt;/span&gt;,
  &lt;span class="pl-s"&gt;author&lt;/span&gt; =       &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;Yuxin Wu and Alexander Kirillov and Francisco Massa and&lt;/span&gt;
&lt;span class="pl-s"&gt;                  Wan-Yen Lo and Ross Girshick&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;title&lt;/span&gt; =        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;Detectron2&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;howpublished&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;\url{https://github.com/facebookresearch/detectron2}&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;year&lt;/span&gt; =         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;2019&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebookresearch</author><guid isPermaLink="false">https://github.com/facebookresearch/detectron2</guid><pubDate>Wed, 13 Nov 2019 00:01:00 GMT</pubDate></item><item><title>google-research/google-research #2 in All Languages, This month</title><link>https://github.com/google-research/google-research</link><description>&lt;p&gt;&lt;i&gt;Google AI Research&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-google-ai-research" class="anchor" aria-hidden="true" href="#google-ai-research"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Google AI Research&lt;/h1&gt;
&lt;p&gt;This repository contains code released by
&lt;a href="https://ai.google/research" rel="nofollow"&gt;Google AI Research&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Because the repo is large, we recommend you clone the repo without its history.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:google-research/google-research.git --depth=1
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Disclaimer: This is not an official Google product.&lt;/em&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google-research</author><guid isPermaLink="false">https://github.com/google-research/google-research</guid><pubDate>Wed, 13 Nov 2019 00:02:00 GMT</pubDate></item><item><title>TheAlgorithms/Java #3 in All Languages, This month</title><link>https://github.com/TheAlgorithms/Java</link><description>&lt;p&gt;&lt;i&gt;All Algorithms implemented in Java&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-the-algorithms---java" class="anchor" aria-hidden="true" href="#the-algorithms---java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Algorithms - Java&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.paypal.me/TheAlgorithms/100" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d5d24e33e2f4b6fe53987419a21b203c03789a8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NOTE: A &lt;a href="https://github.com/TheAlgorithms/Java/tree/Development"&gt;Development&lt;/a&gt; branch is made for this repo where we are trying to migrate the existing project to a Java project structure. You can switch to &lt;a href="https://github.com/TheAlgorithms/Java/tree/Development"&gt;Development&lt;/a&gt; branch for contributions. Please refer &lt;a href="https://github.com/TheAlgorithms/Java/issues/474"&gt;this issue&lt;/a&gt; for more info.&lt;/p&gt;
&lt;p&gt;You can play around (run and edit) the Algorithms or contribute to them using Gitpod.io a free online dev environment with a single click. No need to worry about the Dev enviroment.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/TheAlgorithms/Java" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1eb1ddfea6092593649f0117f7262ffa8fbd3017/68747470733a2f2f676974706f642e696f2f627574746f6e2f6f70656e2d696e2d676974706f642e737667" alt="Open in Gitpod" data-canonical-src="https://gitpod.io/button/open-in-gitpod.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-all-algorithms-implemented-in-java-for-education" class="anchor" aria-hidden="true" href="#all-algorithms-implemented-in-java-for-education"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All algorithms implemented in Java (for education)&lt;/h3&gt;
&lt;p&gt;These implementations are for learning purposes. They may be less efficient than the implementations in the Java standard library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution Guidelines&lt;/h2&gt;
&lt;p&gt;Read our &lt;a href="CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-channel" class="anchor" aria-hidden="true" href="#community-channel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Channel&lt;/h2&gt;
&lt;p&gt;We're on &lt;a href="https://gitter.im/TheAlgorithms" rel="nofollow"&gt;Gitter&lt;/a&gt;! Please join us.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-algorithms" class="anchor" aria-hidden="true" href="#algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Algorithms&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="DIRECTORY.md"&gt;directory&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>TheAlgorithms</author><guid isPermaLink="false">https://github.com/TheAlgorithms/Java</guid><pubDate>Wed, 13 Nov 2019 00:03:00 GMT</pubDate></item><item><title>vlang/v #4 in All Languages, This month</title><link>https://github.com/vlang/v</link><description>&lt;p&gt;&lt;i&gt;Simple, fast, safe, compiled language for developing maintainable software. Compiles itself in &lt;1s with zero dependencies. Stable 0.2 release in November 2019. https://vlang.io&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/donnisnoni95/v-logo/master/dist/v-logo.svg?sanitize=true"&gt;&lt;img width="80" src="https://raw.githubusercontent.com/donnisnoni95/v-logo/master/dist/v-logo.svg?sanitize=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-v-programming-language" class="anchor" aria-hidden="true" href="#the-v-programming-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The V Programming Language&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/vlang/v/commits/master"&gt;&lt;img src="https://github.com/vlang/v/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://patreon.com/vlang" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c985beda5ab41e03db19da50fe2e06d409ba7f66/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e742e7376673f75726c3d6874747073253341253246253246736869656c6473696f2d70617472656f6e2e6865726f6b756170702e636f6d253246766c616e67253246706c6564676573267374796c653d666f722d7468652d6261646765" height="20" data-canonical-src="https://img.shields.io/endpoint.svg?url=https%3A%2F%2Fshieldsio-patreon.herokuapp.com%2Fvlang%2Fpledges&amp;amp;style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vlang.io" rel="nofollow"&gt;https://vlang.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Documentation: &lt;a href="https://vlang.io/docs" rel="nofollow"&gt;vlang.io/docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Changelog: &lt;a href="https://github.com/vlang/v/blob/master/CHANGELOG.md"&gt;github.com/vlang/v/blob/master/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Twitter: &lt;a href="https://twitter.com/v_language" rel="nofollow"&gt;twitter.com/v_language&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Discord (primary community): &lt;a href="https://discord.gg/n7c74HM" rel="nofollow"&gt;discord.gg/n7c74HM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Installing V: &lt;a href="https://github.com/vlang/v#installing-v-from-source"&gt;github.com/vlang/v#installing-v-from-source&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-key-features-of-v" class="anchor" aria-hidden="true" href="#key-features-of-v"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Features of V&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Simplicity: the language can be learned in less than an hour&lt;/li&gt;
&lt;li&gt;Fast compilation: ≈100k — 1.2 million loc/s&lt;/li&gt;
&lt;li&gt;Easy to develop: V compiles itself in less than a second&lt;/li&gt;
&lt;li&gt;Performance: within 3% of C&lt;/li&gt;
&lt;li&gt;Safety: no null, no globals, no undefined behavior, immutability by default&lt;/li&gt;
&lt;li&gt;C to V translation&lt;/li&gt;
&lt;li&gt;Hot code reloading&lt;/li&gt;
&lt;li&gt;Powerful UI and graphics libraries&lt;/li&gt;
&lt;li&gt;Easy cross compilation&lt;/li&gt;
&lt;li&gt;REPL&lt;/li&gt;
&lt;li&gt;Built-in ORM&lt;/li&gt;
&lt;li&gt;C and JavaScript backends&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;V 1.0 release is planned for December 2019. Right now V is in an alpha stage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-v-from-source" class="anchor" aria-hidden="true" href="#installing-v-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing V from source&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-linux-macos-windows-bsd-solaris-wsl-android-raspbian" class="anchor" aria-hidden="true" href="#linux-macos-windows-bsd-solaris-wsl-android-raspbian"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux, macOS, Windows, *BSD, Solaris, WSL, Android, Raspbian&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/vlang/v
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; v
make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's it! Now you have a V executable at &lt;code&gt;[path to V repo]/v&lt;/code&gt;. &lt;code&gt;[path to V repo]&lt;/code&gt; can be anywhere.&lt;/p&gt;
&lt;p&gt;(On Windows &lt;code&gt;make&lt;/code&gt; means running &lt;code&gt;make.bat&lt;/code&gt;, so make sure you use &lt;code&gt;cmd.exe&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;V is being constantly updated. To update V, simply run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;v up
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-c-compiler" class="anchor" aria-hidden="true" href="#c-compiler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C compiler&lt;/h3&gt;
&lt;p&gt;You'll need Clang or GCC or Visual Studio. If you are doing development, you most likely already have one of those installed.&lt;/p&gt;
&lt;p&gt;Otherwise, follow these instructions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/vlang/v/wiki/Installing-a-C-compiler-on-Linux-macOS"&gt;https://github.com/vlang/v/wiki/Installing-a-C-compiler-on-Linux-macOS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/vlang/v/wiki/Installing-a-C-compiler-on-Windows"&gt;github.com/vlang/v/wiki/Installing-a-C-compiler-on-Windows&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-symlinking" class="anchor" aria-hidden="true" href="#symlinking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Symlinking&lt;/h3&gt;
&lt;p&gt;You can create a &lt;code&gt;/usr/local/bin/v&lt;/code&gt; symlink so that V is globally available:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo ./v symlink&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/vlang/v
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; v
docker build -t vlang &lt;span class="pl-c1"&gt;.&lt;/span&gt;
docker run --rm -it vlang:latest
v&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-testing-and-running-the-examples" class="anchor" aria-hidden="true" href="#testing-and-running-the-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing and running the examples&lt;/h3&gt;
&lt;p&gt;Make sure V can compile itself:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;v v.v
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ v
V 0.1.x
Use Ctrl-C or &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;exit&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt; to &lt;span class="pl-c1"&gt;exit&lt;/span&gt;

&amp;gt;&amp;gt;&amp;gt; println(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
hello world
&amp;gt;&amp;gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; examples
v hello_world.v &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./hello_world    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or simply&lt;/span&gt;
v run hello_world.v                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; this builds the program and runs it right away&lt;/span&gt;

v word_counter.v &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./word_counter cinderella.txt
v run news_fetcher.v
v run tetris/tetris.v&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/vlang/v/master/examples/tetris/screenshot.png"&gt;&lt;img src="https://raw.githubusercontent.com/vlang/v/master/examples/tetris/screenshot.png" width="300" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In order to build Tetris and anything else using the graphics module, you will need to install glfw and freetype libraries.&lt;/p&gt;
&lt;p&gt;If you plan to use the http package, you also need to install OpenSSL on non-Windows systems.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;macOS:
brew install glfw freetype openssl

Debian/Ubuntu:
sudo apt install libglfw3 libglfw3-dev libfreetype6-dev libssl-dev

Arch/Manjaro:
sudo pacman -S glfw-x11 freetype2

Fedora:
sudo dnf install glfw glfw-devel freetype-devel

Windows:
git clone --depth=1 https://github.com/ubawurinna/freetype-windows-binaries [path to v repo]/thirdparty/freetype/

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;glfw dependency will be removed soon.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-javascript-backend" class="anchor" aria-hidden="true" href="#javascript-backend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JavaScript backend&lt;/h2&gt;
&lt;p&gt;&lt;a href="examples/hello_v_js.v"&gt;examples/hello_v_js.v&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-v"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt; {
                &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello from V.js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;v -o hi.js examples/hello_v_js.v &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; node hi.js
Hello from V.js
Hello from V.js
Hello from V.js&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/vlang/v/wiki/Troubleshooting"&gt;https://github.com/vlang/v/wiki/Troubleshooting&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Code structure:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/vlang/v/blob/master/CONTRIBUTING.md"&gt;https://github.com/vlang/v/blob/master/CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you introduce a breaking change and rebuild V, you will no longer be able to use V to build itself. So it's a good idea to make a backup copy of a working compiler executable.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vlang</author><guid isPermaLink="false">https://github.com/vlang/v</guid><pubDate>Wed, 13 Nov 2019 00:04:00 GMT</pubDate></item><item><title>hoanhan101/ultimate-go #5 in All Languages, This month</title><link>https://github.com/hoanhan101/ultimate-go</link><description>&lt;p&gt;&lt;i&gt;Ultimate Go study guide, with heavily documented code and programs analysis all in 1 place →&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ultimate-go" class="anchor" aria-hidden="true" href="#ultimate-go"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ultimate Go&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/hoanhan101/ultimate-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/deb98c855e4148fe5089e4897c4bb6fc40654a79/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f686f616e68616e3130312f756c74696d6174652d676f" alt="Go Report Card" data-canonical-src="https://goreportcard.com/badge/github.com/hoanhan101/ultimate-go" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3f5ed6db38a222e2388c4796878558630336fc01/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f686f616e68616e3130312f756c74696d6174652d676f"&gt;&lt;img src="https://camo.githubusercontent.com/3f5ed6db38a222e2388c4796878558630336fc01/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f686f616e68616e3130312f756c74696d6174652d676f" alt="" data-canonical-src="https://img.shields.io/github/stars/hoanhan101/ultimate-go" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/56c323f5f9e4493dc5aebaac3609ff32d18295ab/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f686f616e68616e3130312f756c74696d6174652d676f"&gt;&lt;img src="https://camo.githubusercontent.com/56c323f5f9e4493dc5aebaac3609ff32d18295ab/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f686f616e68616e3130312f756c74696d6174652d676f" alt="" data-canonical-src="https://img.shields.io/github/forks/hoanhan101/ultimate-go" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://news.ycombinator.com/item?id=20701671" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7123c6c54586a493ec1ff4408eb2a04874629bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6861636b65726e6577732d3435302532422d6f72616e6765" alt="hackernews" data-canonical-src="https://img.shields.io/badge/hackernews-450%2B-orange" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.reddit.com/r/golang/comments/cqqi9h/ultimate_go_study_guides_with_heavily_documented/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a49cd64d227acbda30a3479c28c080eedbb9d74e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f722f676f6c616e672d3235352532422d6f72616e6765" alt="r/golang" data-canonical-src="https://img.shields.io/badge/r/golang-255%2B-orange" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.reddit.com/r/compsci/comments/cr3jzh/ultimate_go_study_guides_with_heavily_documented/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7f84308d2cc5f7d7a072070dfe70ba17bf7fcc5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f722f636f6d707363692d36302532422d6f72616e6765" alt="r/compsci" data-canonical-src="https://img.shields.io/badge/r/compsci-60%2B-orange" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.reddit.com/r/programming/comments/cr3gqu/ultimate_go_study_guides_with_heavily_documented/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/378dc48186b2e6fd4c0a2bfc93f581850818771c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f722f70726f6772616d6d696e672d34302532422d6f72616e6765" alt="r/programming" data-canonical-src="https://img.shields.io/badge/r/programming-40%2B-orange" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.getrevue.co/profile/hoanhan101" rel="nofollow"&gt;If you're interested in weekly coding interview problems with detailed solutions, test cases, and program analysis newsletter →&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="gopher.png"&gt;&lt;img src="gopher.png" alt="gopher" width="300" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;This repo contains my notes on learning Go and computer systems. Different people have different
learning style. For me, I learn best by doing and walking through examples. Hence, I am trying to
take notes carefully and comment directly on the source code, rather than writing up Markdown
files. That way, I can understand every single line of code as I am reading and also be mindful of
the theories behind the scene.&lt;/p&gt;
&lt;p&gt;In the mix, I also include links to other articles that I find helpful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.safaribooksonline.com/library/view/ultimate-go-programming/9780134757476/" rel="nofollow"&gt;Ultimate Go
Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/README.md"&gt;ardanlabs/gotraining/topics/courses/go
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Computer-Systems-Programmers-Perspective-3rd/dp/013409266X" rel="nofollow"&gt;Computer Systems: A Programmer's
Perspective&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MariaLetta/free-gophers-pack"&gt;Free Gophers Pack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Status&lt;/h2&gt;
&lt;p&gt;It is a work in progress.&lt;/p&gt;
&lt;p&gt;Below is the outline of all the topics. Normally, a topic is covered when there is a link,
or several links next to it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tasks&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Phase 1: Finish Ultimate Go Programming's video lectures&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Phase 2: Fill in all the missing details using Ardan Labs's links and examples&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Phase 3: Study Computer Systems book to reinforce the theory. Build more programs if needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Design Philosophy&lt;/strong&gt;:
&lt;a href="https://github.com/ardanlabs/gotraining/blob/master/topics/go/README.md"&gt;Guideline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Language Mechanics&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Syntax&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Variable: &lt;a href="go/language/variable.go"&gt;Built-in types | Zero value concept | Initialization | Conversion vs Casting
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Struct: &lt;a href="go/language/struct.go"&gt;Initialization | Name type vs Anonymous type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pointer:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/language/pointer.go"&gt;Passing by value | Escape analysis | Stack space | Garbage Collection
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang/go/wiki/CodeReviewComments#receiver-type"&gt;Golang's Code Review Receiver
Type&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Constant: &lt;a href="go/language/constant.go"&gt;Initialization | iota&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Function: &lt;a href="go/language/function.go"&gt;Initialization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Structures&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Array: &lt;a href="go/language/array.go"&gt;CPU Cache | TLB | Initialization | Iteration | Type array | Contiguous memory
allocation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Slice: &lt;a href="go/language/slice.go"&gt;Initialization | Length vs Capacity | Reference Type | Appending | Slice of Slice |
Copy of Slice | UTF-8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Map: &lt;a href="go/language/map.go"&gt;Initialization | Iteration | Deleting | Finding | Restriction &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Decoupling&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Method:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/language/method_1.go"&gt;Value and Pointer Receiver Call&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/language/method_2.go"&gt;Value and Pointer Semantics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/language/method_3.go"&gt;Methods are just functions | Function variable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interface:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/language/interface_1.go"&gt;Valueless type | Concrete type vs Interface type | Relationship | Polymorphic function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/language/interface_2.go"&gt;Interface via Pointer Receiver | Method set | Slice of Interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Embedding:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/language/embedding_1.go"&gt;Declaring fields, NOT Embedding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/language/embedding_2.go"&gt;Embedding type | Inner type promotion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/language/embedding_3.go"&gt;Embedded type and Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/language/embedding_4.go"&gt;Outer and inner type implementing the same Interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exporting:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/language/exporting/README.md"&gt;Guideline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/language/exporting/exporting_1"&gt;Exported identifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/language/exporting/exporting_2"&gt;Accessing a value of an unexported identifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/language/exporting/exporting_3"&gt;Unexported fields from an exported struct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/language/exporting/exporting_4"&gt;Exported types with embedded unexported types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Software Design&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Composition:
&lt;a href="https://github.com/ardanlabs/gotraining/tree/master/topics/go#interface-and-composition-design"&gt;Guideline&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Grouping types:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/design/grouping_types_1.go"&gt;Grouping By State&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/grouping_types_2.go"&gt;Grouping By Behavior&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Decoupling:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/design/decoupling_1.go"&gt;Struct Composition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/decoupling_2.go"&gt;Decoupling With Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/decoupling_3.go"&gt;Interface Composition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/decoupling_4.go"&gt;Decoupling With Interface Composition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Conversion:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/design/conversion_1.go"&gt;Interface Conversions | Type Assertion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/conversion_2.go"&gt;Runtime Type Assertion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interface Pollution:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/design/pollution_1.go"&gt;Interface Pollution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/pollution_2.go"&gt;Remove Interface Pollution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mocking:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/design/mocking_1.go"&gt;Package To Mock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/mocking_2.go"&gt;Sample Client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Error Handling:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/design/error_1.go"&gt;Default error values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/error_2.go"&gt;Error variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/error_3.go"&gt;Type as context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/error_4.go"&gt;Behavior as context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/error_5.go"&gt;Finding the bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/design/error_6.go"&gt;Wrapping Errors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Packaging:
&lt;a href="https://github.com/ardanlabs/gotraining/blob/master/topics/go/design/packaging/README.md"&gt;Guideline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concurrency&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mechanics&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Goroutine:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/concurrency/goroutine_1.go"&gt;Go Scheduler Internals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/goroutine_2.go"&gt;Language Mechanics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/goroutine_3.go"&gt;Goroutine time slicing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/goroutine_4.go"&gt;Goroutines and parallelism&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Data race:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/concurrency/data_race_1.go"&gt;Race Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/data_race_2.go"&gt;Atomic Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/data_race_3.go"&gt;Mutexes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/data_race_4.go"&gt;Read/Write Mutex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Channel:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ardanlabs/gotraining/tree/master/topics/go#concurrent-software-design"&gt;Guideline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/channel_1.go"&gt;Language Mechanics | Unbuffered channel: Signaling with(out) data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/channel_2.go"&gt;Unbuffered channel: Double signal | Buffered channel: Close and range | Unbuffered
channel: select and receive | Unbuffered channel: select and send | Buffered channel:
Select and drop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/channel_3.go"&gt;Unbuffered channel (Tennis match)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/channel_4.go"&gt;Unbuffered channel (Replay race)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/channel_5.go"&gt;Buffered channel: Fan Out&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/channel_6.go"&gt;Select&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Patterns&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Context:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/concurrency/context_1.go"&gt;Store and retrieve values from a context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/context_2.go"&gt;WithCancel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/context_3.go"&gt;WithDeadline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/context_4.go"&gt;WithTimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/concurrency/context_5.go"&gt;Request/Response&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pattern
&lt;ul&gt;
&lt;li&gt;Task&lt;/li&gt;
&lt;li&gt;Logger&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testing and Profiling&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Testing:
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/testing/basic_test.go"&gt;Basic Unit Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/testing/table_test.go"&gt;Table Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/testing/sub_test.go"&gt;Sub Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/testing/web_server"&gt;Web Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/testing/web_test.go"&gt;Mock Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/testing/README.md"&gt;Test Coverage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Benchmarking
&lt;ul&gt;
&lt;li&gt;&lt;a href="go/benchmark/basic_test.go"&gt;Basic Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="go/benchmark/sub_test.go"&gt;Sub Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fuzzing
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ardanlabs/gotraining/blob/master/topics/go/testing/fuzzing/README.md"&gt;Guideline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Profiling
&lt;ul&gt;
&lt;li&gt;Stack Trace: &lt;a href="go/profiling/stack_trace_1.go"&gt;Review&lt;/a&gt; | &lt;a href="go/profiling/stack_trace_2.go"&gt;Packing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GODEBUG: &lt;a href="go/profiling/memory_tracing.go"&gt;Memory Tracing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Packages&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Context&lt;/li&gt;
&lt;li&gt;Encoding&lt;/li&gt;
&lt;li&gt;IO&lt;/li&gt;
&lt;li&gt;Logging&lt;/li&gt;
&lt;li&gt;Reflection&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-stargazers-over-time" class="anchor" aria-hidden="true" href="#stargazers-over-time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stargazers over time&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://starchart.cc/hoanhan101/ultimate-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/075e86db03205599d2495c2ae38af197a99d6afe/68747470733a2f2f7374617263686172742e63632f686f616e68616e3130312f756c74696d6174652d676f2e737667" alt="Stargazers over time" data-canonical-src="https://starchart.cc/hoanhan101/ultimate-go.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hoanhan101</author><guid isPermaLink="false">https://github.com/hoanhan101/ultimate-go</guid><pubDate>Wed, 13 Nov 2019 00:05:00 GMT</pubDate></item><item><title>openai/gpt-2 #6 in All Languages, This month</title><link>https://github.com/openai/gpt-2</link><description>&lt;p&gt;&lt;i&gt;Code for the paper "Language Models are Unsupervised Multitask Learners"&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Archive (code is provided as-is, no updates expected)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-gpt-2" class="anchor" aria-hidden="true" href="#gpt-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gpt-2&lt;/h1&gt;
&lt;p&gt;Code and models from the paper &lt;a href="https://d4mucfpksywv.cloudfront.net/better-language-models/language-models.pdf" rel="nofollow"&gt;"Language Models are Unsupervised Multitask Learners"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can read about GPT-2 and its staged release in our &lt;a href="https://blog.openai.com/better-language-models/" rel="nofollow"&gt;original blog post&lt;/a&gt;, &lt;a href="https://openai.com/blog/gpt-2-6-month-follow-up/" rel="nofollow"&gt;6 month follow-up post&lt;/a&gt;, and &lt;a href="https://www.openai.com/blog/gpt-2-1-5b-release/" rel="nofollow"&gt;final post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We have also &lt;a href="https://github.com/openai/gpt-2-output-dataset"&gt;released a dataset&lt;/a&gt; for researchers to study their behaviors.&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;*&lt;/sup&gt; &lt;em&gt;Note that our original parameter counts were wrong due to an error (in our previous blog posts and paper).  Thus you may have seen small referred to as 117M and medium referred to as 345M.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;This repository is meant to be a starting point for researchers and engineers to experiment with GPT-2.&lt;/p&gt;
&lt;p&gt;For basic information, see our &lt;a href="./model_card.md"&gt;model card&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-some-caveats" class="anchor" aria-hidden="true" href="#some-caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some caveats&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GPT-2 models' robustness and worst case behaviors are not well-understood.  As with any machine-learned model, carefully evaluate GPT-2 for your use case, especially if used without fine-tuning or in safety-critical applications where reliability is important.&lt;/li&gt;
&lt;li&gt;The dataset our GPT-2 models were trained on contains many texts with &lt;a href="https://twitter.com/TomerUllman/status/1101485289720242177" rel="nofollow"&gt;biases&lt;/a&gt; and factual inaccuracies, and thus GPT-2 models are likely to be biased and inaccurate as well.&lt;/li&gt;
&lt;li&gt;To avoid having samples mistaken as human-written, we recommend clearly labeling samples as synthetic before wide dissemination.  Our models are often incoherent or inaccurate in subtle ways, which takes more than a quick read for a human to notice.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-work-with-us" class="anchor" aria-hidden="true" href="#work-with-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Work with us&lt;/h3&gt;
&lt;p&gt;Please &lt;a href="mailto:languagequestions@openai.com"&gt;let us know&lt;/a&gt; if you’re doing interesting research with or working on applications of GPT-2!  We’re especially interested in hearing from and potentially working with those who are studying&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Potential malicious use cases and defenses against them (e.g. the detectability of synthetic text)&lt;/li&gt;
&lt;li&gt;The extent of problematic content (e.g. bias) being baked into the models and effective mitigations&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./DEVELOPERS.md"&gt;DEVELOPERS.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./CONTRIBUTORS.md"&gt;CONTRIBUTORS.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;Please use the following bibtex entry:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{radford2019language,
  title={Language Models are Unsupervised Multitask Learners},
  author={Radford, Alec and Wu, Jeff and Child, Rewon and Luan, David and Amodei, Dario and Sutskever, Ilya},
  year={2019}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-future-work" class="anchor" aria-hidden="true" href="#future-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Future work&lt;/h2&gt;
&lt;p&gt;We may release code for evaluating the models on various benchmarks.&lt;/p&gt;
&lt;p&gt;We are still considering release of the larger models.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="./LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openai</author><guid isPermaLink="false">https://github.com/openai/gpt-2</guid><pubDate>Wed, 13 Nov 2019 00:06:00 GMT</pubDate></item><item><title>microsoft/vscode #7 in All Languages, This month</title><link>https://github.com/microsoft/vscode</link><description>&lt;p&gt;&lt;i&gt;Visual Studio Code&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-visual-studio-code---open-source-code---oss" class="anchor" aria-hidden="true" href="#visual-studio-code---open-source-code---oss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio Code - Open Source ("Code - OSS")&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.azure.com/vscode/VSCode/_build/latest?definitionId=12" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f20567452d9138054e0ca9b7140e5b3d2ffb11d8/68747470733a2f2f6465762e617a7572652e636f6d2f7673636f64652f5653436f64652f5f617069732f6275696c642f7374617475732f5653253230436f64653f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/vscode/VSCode/_apis/build/status/VS%20Code?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc"&gt;&lt;img src="https://camo.githubusercontent.com/cf974a4808e0dbc611bbcef98acfc6677af4689f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f4d6963726f736f66742f7673636f64652f666561747572652d726571756573742e737667" alt="Feature Requests" data-canonical-src="https://img.shields.io/github/issues/Microsoft/vscode/feature-request.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Microsoft/vscode/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Abug"&gt;&lt;img src="https://camo.githubusercontent.com/130b23a27ab8ee345bf6d02187f49b287aa1521f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f4d6963726f736f66742f7673636f64652f6275672e737667" alt="Bugs" data-canonical-src="https://img.shields.io/github/issues/Microsoft/vscode/bug.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Microsoft/vscode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/750ae6a0dbd84e32738e6d4a21a79ce5fb51c21b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e2532306769747465722d79656c6c6f772e737667" alt="Gitter" data-canonical-src="https://img.shields.io/badge/chat-on%20gitter-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-repository" class="anchor" aria-hidden="true" href="#the-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Repository&lt;/h2&gt;
&lt;p&gt;This repository ("&lt;code&gt;Code - OSS&lt;/code&gt;") is where we (Microsoft) develop the &lt;a href="https://code.visualstudio.com" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; product. Not only do we work on code and issues here, we also publish our &lt;a href="https://github.com/microsoft/vscode/wiki/Roadmap"&gt;roadmap&lt;/a&gt;, &lt;a href="https://github.com/microsoft/vscode/wiki/Iteration-Plans"&gt;monthly iteration plans&lt;/a&gt;, and our &lt;a href="https://github.com/microsoft/vscode/wiki/Running-the-Endgame"&gt;endgame plans&lt;/a&gt;. This source code is available to everyone under the standard &lt;a href="https://github.com/microsoft/vscode/blob/master/LICENSE.txt"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-visual-studio-code" class="anchor" aria-hidden="true" href="#visual-studio-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio Code&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1487073/58344409-70473b80-7e0a-11e9-8570-b2efc6f8fa44.png"&gt;&lt;img alt="VS Code in action" src="https://user-images.githubusercontent.com/1487073/58344409-70473b80-7e0a-11e9-8570-b2efc6f8fa44.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; is a distribution of the &lt;code&gt;Code - OSS&lt;/code&gt; repository with Microsoft specific customizations released under a traditional &lt;a href="https://code.visualstudio.com/License/" rel="nofollow"&gt;Microsoft product license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; combines the simplicity of a code editor with what developers need for their core edit-build-debug cycle. It provides comprehensive code editing, navigation, and understanding support along with lightweight debugging, a rich extensibility model, and lightweight integration with existing tools.&lt;/p&gt;
&lt;p&gt;Visual Studio Code is updated monthly with new features and bug fixes. You can download it for Windows, macOS, and Linux on &lt;a href="https://code.visualstudio.com/Download" rel="nofollow"&gt;Visual Studio Code's website&lt;/a&gt;. To get the latest releases every day, install the &lt;a href="https://code.visualstudio.com/insiders" rel="nofollow"&gt;Insiders build&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;There are many ways in which you can participate in the project, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/vscode/issues"&gt;Submit bugs and feature requests&lt;/a&gt;, and help us verify as they are checked in&lt;/li&gt;
&lt;li&gt;Review &lt;a href="https://github.com/microsoft/vscode/pulls"&gt;source code changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Review the &lt;a href="https://github.com/microsoft/vscode-docs"&gt;documentation&lt;/a&gt; and make pull requests for anything from typos to new content&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are interested in fixing issues and contributing directly to the code base,
please see the document &lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute"&gt;How to Contribute&lt;/a&gt;, which covers the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run"&gt;How to build and run from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute#debugging"&gt;The development workflow, including debugging and running tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/Coding-Guidelines"&gt;Coding guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute#pull-requests"&gt;Submitting pull requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/vscode/wiki/How-to-Contribute#where-to-contribute"&gt;Finding an issue to work on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aka.ms/vscodeloc" rel="nofollow"&gt;Contributing to translations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-feedback" class="anchor" aria-hidden="true" href="#feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ask a question on &lt;a href="https://stackoverflow.com/questions/tagged/vscode" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CONTRIBUTING.md"&gt;Request a new feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Up vote &lt;a href="https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc"&gt;popular feature requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/issues"&gt;File an issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Follow &lt;a href="https://twitter.com/code" rel="nofollow"&gt;@code&lt;/a&gt; and let us know what you think!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Projects&lt;/h2&gt;
&lt;p&gt;Many of the core components and extensions to Code live in their own repositories on GitHub. For example, the &lt;a href="https://github.com/microsoft/vscode-node-debug"&gt;node debug adapter&lt;/a&gt; and the &lt;a href="https://github.com/microsoft/vscode-mono-debug"&gt;mono debug adapter&lt;/a&gt; have their own repositories. For a complete list, please visit the &lt;a href="https://github.com/Microsoft/vscode/wiki/Related-Projects"&gt;Related Projects&lt;/a&gt; page on our &lt;a href="https://github.com/Microsoft/vscode/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bundled-extensions" class="anchor" aria-hidden="true" href="#bundled-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bundled Extensions&lt;/h2&gt;
&lt;p&gt;Code includes a set of built-in extensions located in the &lt;a href="extensions"&gt;extensions&lt;/a&gt; folder, including grammars and snippets for many languages. Extensions that provide rich language support (code completion, Go to Definition) for a language have the suffix &lt;code&gt;language-features&lt;/code&gt;. For example, the &lt;code&gt;json&lt;/code&gt; extension provides coloring for &lt;code&gt;JSON&lt;/code&gt; and the &lt;code&gt;json-language-features&lt;/code&gt; provides rich language support for &lt;code&gt;JSON&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt;
&lt;p&gt;Licensed under the &lt;a href="LICENSE.txt"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/vscode</guid><pubDate>Wed, 13 Nov 2019 00:07:00 GMT</pubDate></item><item><title>evilsocket/pwnagotchi #8 in All Languages, This month</title><link>https://github.com/evilsocket/pwnagotchi</link><description>&lt;p&gt;&lt;i&gt;(⌐■_■) - Deep Reinforcement Learning instrumenting bettercap for WiFi pwning.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-pwnagotchi" class="anchor" aria-hidden="true" href="#pwnagotchi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pwnagotchi&lt;/h1&gt;
&lt;p align="center"&gt;
    &lt;a href="https://github.com/evilsocket/pwnagotchi/releases/latest"&gt;&lt;img alt="Release" src="https://camo.githubusercontent.com/9ae707a55ead5a1e951d8504ebc47fe6f2259198/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6576696c736f636b65742f70776e61676f746368692e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/release/evilsocket/pwnagotchi.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/evilsocket/pwnagotchi/blob/master/LICENSE.md"&gt;&lt;img alt="Software License" src="https://camo.githubusercontent.com/268d96c6dd81f1fff98b19675ef5867412a2a223/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c332d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/license-GPL3-brightgreen.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/evilsocket/pwnagotchi/graphs/contributors"&gt;&lt;img alt="Contributors" src="https://camo.githubusercontent.com/929754fc02f162895d1d3ac191ff93d5f0deefb2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6576696c736f636b65742f70776e61676f74636869" data-canonical-src="https://img.shields.io/github/contributors/evilsocket/pwnagotchi" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://travis-ci.org/evilsocket/pwnagotchi" rel="nofollow"&gt;&lt;img alt="Travis" src="https://camo.githubusercontent.com/bb71ac99b3141520709ab3799968d900a4e7d193/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6576696c736f636b65742f70776e61676f746368692f6d61737465722e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/travis/evilsocket/pwnagotchi/master.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://invite.pwnagotchi.ai/" rel="nofollow"&gt;&lt;img alt="Slack" src="https://camo.githubusercontent.com/8b7d4aafb27072069011eadd46bdf045d3139533/68747470733a2f2f696e766974652e70776e61676f746368692e61692f62616467652e737667" data-canonical-src="https://invite.pwnagotchi.ai/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://community.pwnagotchi.ai/" rel="nofollow"&gt;&lt;img alt="Forum" src="https://camo.githubusercontent.com/daa0ff8b7d7ba2ee06e9bfb8e72eb7b0a54e0649/68747470733a2f2f696d672e736869656c64732e696f2f646973636f757273652f706f7374733f7365727665723d6874747073253341253246253246636f6d6d756e6974792e70776e61676f746368692e6169253246267374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/discourse/posts?server=https%3A%2F%2Fcommunity.pwnagotchi.ai%2F&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://twitter.com/intent/follow?screen_name=pwnagotchi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/342b3854fb5df1b53672e419d06fbd99da5a4eb6/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f70776e61676f746368693f7374796c653d736f6369616c266c6f676f3d74776974746572" alt="follow on Twitter" data-canonical-src="https://img.shields.io/twitter/follow/pwnagotchi?style=social&amp;amp;logo=twitter" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pwnagotchi.ai/" rel="nofollow"&gt;Pwnagotchi&lt;/a&gt; is an &lt;a href="https://hackernoon.com/intuitive-rl-intro-to-advantage-actor-critic-a2c-4ff545978752" rel="nofollow"&gt;A2C&lt;/a&gt;-based "AI" leveraging &lt;a href="https://www.bettercap.org/" rel="nofollow"&gt;bettercap&lt;/a&gt; that learns from its surrounding WiFi environment to maximize the crackable WPA key material it captures (either passively, or by performing authentication and association attacks). This material is collected as PCAP files containing any form of handshake supported by &lt;a href="https://hashcat.net/hashcat/" rel="nofollow"&gt;hashcat&lt;/a&gt;, including &lt;a href="https://www.evilsocket.net/2019/02/13/Pwning-WiFi-networks-with-bettercap-and-the-PMKID-client-less-attack/" rel="nofollow"&gt;PMKIDs&lt;/a&gt;,
full and half WPA handshakes.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e8bbbda8fbeb4da294be75c896026fc777c1a199/68747470733a2f2f692e696d6775722e636f6d2f5836384758726e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e8bbbda8fbeb4da294be75c896026fc777c1a199/68747470733a2f2f692e696d6775722e636f6d2f5836384758726e2e706e67" alt="ui" data-canonical-src="https://i.imgur.com/X68GXrn.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Instead of merely playing &lt;a href="https://becominghuman.ai/getting-mario-back-into-the-gym-setting-up-super-mario-bros-in-openais-gym-8e39a96c1e41?gi=c4b66c3d5ced" rel="nofollow"&gt;Super Mario or Atari games&lt;/a&gt; like most reinforcement learning-based "AI" &lt;em&gt;(yawn)&lt;/em&gt;, Pwnagotchi tunes &lt;a href="https://github.com/evilsocket/pwnagotchi/blob/master/pwnagotchi/defaults.yml#L73"&gt;its parameters&lt;/a&gt; over time to &lt;strong&gt;get better at pwning WiFi things to&lt;/strong&gt; in the environments you expose it to.&lt;/p&gt;
&lt;p&gt;More specifically, Pwnagotchi is using an &lt;a href="https://stable-baselines.readthedocs.io/en/master/modules/policies.html#stable_baselines.common.policies.MlpLstmPolicy" rel="nofollow"&gt;LSTM with MLP feature extractor&lt;/a&gt; as its policy network for the &lt;a href="https://stable-baselines.readthedocs.io/en/master/modules/a2c.html" rel="nofollow"&gt;A2C agent&lt;/a&gt;. If you're unfamiliar with A2C, here is &lt;a href="https://hackernoon.com/intuitive-rl-intro-to-advantage-actor-critic-a2c-4ff545978752" rel="nofollow"&gt;a very good introductory explanation&lt;/a&gt; (in comic form!) of the basic principles behind how Pwnagotchi learns. (You can read more about how Pwnagotchi learns in the &lt;a href="https://www.pwnagotchi.ai/usage/#training-the-ai" rel="nofollow"&gt;Usage&lt;/a&gt; doc.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keep in mind:&lt;/strong&gt; Unlike the usual RL simulations, Pwnagotchi learns over time. Time for a Pwnagotchi is measured in epochs; a single epoch can last from a few seconds to minutes, depending on how many access points and client stations are visible. Do not expect your Pwnagotchi to perform amazingly well at the very beginning, as it will be &lt;a href="https://hackernoon.com/intuitive-rl-intro-to-advantage-actor-critic-a2c-4ff545978752" rel="nofollow"&gt;exploring&lt;/a&gt; several combinations of &lt;a href="https://www.pwnagotchi.ai/usage/#training-the-ai" rel="nofollow"&gt;key parameters&lt;/a&gt; to determine ideal adjustments for pwning the particular environment you are exposing it to during its beginning epochs ... but ** listen to your Pwnagotchi when it tells you it's boring!** Bring it into novel WiFi environments with you and have it observe new networks and capture new handshakes—and you'll see. :)&lt;/p&gt;
&lt;p&gt;Multiple units within close physical proximity can "talk" to each other, advertising their presence to each other by broadcasting custom information elements using a parasite protocol I've built on top of the existing dot11 standard. Over time, two or more units trained together will learn to cooperate upon detecting each other's presence by dividing the available channels among them for optimal pwnage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.pwnagotchi.ai" rel="nofollow"&gt;https://www.pwnagotchi.ai&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-links" class="anchor" aria-hidden="true" href="#links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th&gt;Official Links&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Website&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pwnagotchi.ai/" rel="nofollow"&gt;pwnagotchi.ai&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Forum&lt;/td&gt;
&lt;td&gt;&lt;a href="https://community.pwnagotchi.ai/" rel="nofollow"&gt;community.pwnagotchi.ai&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Slack&lt;/td&gt;
&lt;td&gt;&lt;a href="https://invite.pwnagotchi.ai/" rel="nofollow"&gt;pwnagotchi.slack.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Subreddit&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.reddit.com/r/pwnagotchi/" rel="nofollow"&gt;r/pwnagotchi&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Twitter&lt;/td&gt;
&lt;td&gt;&lt;a href="https://twitter.com/pwnagotchi" rel="nofollow"&gt;@pwnagotchi&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pwnagotchi&lt;/code&gt; is made with ♥  by &lt;a href="https://twitter.com/evilsocket" rel="nofollow"&gt;@evilsocket&lt;/a&gt; and the &lt;a href="https://github.com/evilsocket/pwnagotchi/graphs/contributors"&gt;amazing dev team&lt;/a&gt;. It is released under the GPL3 license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>evilsocket</author><guid isPermaLink="false">https://github.com/evilsocket/pwnagotchi</guid><pubDate>Wed, 13 Nov 2019 00:08:00 GMT</pubDate></item><item><title>llvm/llvm-project #9 in All Languages, This month</title><link>https://github.com/llvm/llvm-project</link><description>&lt;p&gt;&lt;i&gt;The LLVM Project is a collection of modular and reusable compiler and toolchain technologies. Note: the repository does not accept github pull requests at this moment. Please submit your patches at http://reviews.llvm.org.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-the-llvm-compiler-infrastructure" class="anchor" aria-hidden="true" href="#the-llvm-compiler-infrastructure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The LLVM Compiler Infrastructure&lt;/h1&gt;
&lt;p&gt;This directory and its subdirectories contain source code for LLVM,
a toolkit for the construction of highly optimized compilers,
optimizers, and runtime environments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started-with-the-llvm-system" class="anchor" aria-hidden="true" href="#getting-started-with-the-llvm-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started with the LLVM System&lt;/h2&gt;
&lt;p&gt;Taken from &lt;a href="https://llvm.org/docs/GettingStarted.html" rel="nofollow"&gt;https://llvm.org/docs/GettingStarted.html&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h3&gt;
&lt;p&gt;Welcome to the LLVM project!&lt;/p&gt;
&lt;p&gt;The LLVM project has multiple components. The core of the project is
itself called "LLVM". This contains all of the tools, libraries, and header
files needed to process intermediate representations and converts it into
object files.  Tools include an assembler, disassembler, bitcode analyzer, and
bitcode optimizer.  It also contains basic regression tests.&lt;/p&gt;
&lt;p&gt;C-like languages use the &lt;a href="http://clang.llvm.org/" rel="nofollow"&gt;Clang&lt;/a&gt; front end.  This
component compiles C, C++, Objective C, and Objective C++ code into LLVM bitcode
-- and from there into object files, using LLVM.&lt;/p&gt;
&lt;p&gt;Other components include:
the &lt;a href="https://libcxx.llvm.org" rel="nofollow"&gt;libc++ C++ standard library&lt;/a&gt;,
the &lt;a href="https://lld.llvm.org" rel="nofollow"&gt;LLD linker&lt;/a&gt;, and more.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-the-source-code-and-building-llvm" class="anchor" aria-hidden="true" href="#getting-the-source-code-and-building-llvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting the Source Code and Building LLVM&lt;/h3&gt;
&lt;p&gt;The LLVM Getting Started documentation may be out of date.  The &lt;a href="http://clang.llvm.org/get_started.html" rel="nofollow"&gt;Clang
Getting Started&lt;/a&gt; page might have more
accurate information.&lt;/p&gt;
&lt;p&gt;This is an example workflow and configuration to get and build the LLVM source:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Checkout LLVM (including related subprojects like Clang):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/llvm/llvm-project.git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or, on windows, &lt;code&gt;git clone --config core.autocrlf=false  https://github.com/llvm/llvm-project.git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure and build LLVM and Clang:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cd llvm-project&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cmake -G &amp;lt;generator&amp;gt; [options] ../llvm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Some common generators are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ninja&lt;/code&gt; --- for generating &lt;a href="https://ninja-build.org" rel="nofollow"&gt;Ninja&lt;/a&gt;
build files. Most llvm developers use Ninja.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt; --- for generating make-compatible parallel makefiles.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Visual Studio&lt;/code&gt; --- for generating Visual Studio projects and
solutions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Xcode&lt;/code&gt; --- for generating Xcode projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some Common options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-DLLVM_ENABLE_PROJECTS='...'&lt;/code&gt; --- semicolon-separated list of the LLVM
subprojects you'd like to additionally build. Can include any of: clang,
clang-tools-extra, libcxx, libcxxabi, libunwind, lldb, compiler-rt, lld,
polly, or debuginfo-tests.&lt;/p&gt;
&lt;p&gt;For example, to build LLVM, Clang, libcxx, and libcxxabi, use
&lt;code&gt;-DLLVM_ENABLE_PROJECTS="clang;libcxx;libcxxabi"&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-DCMAKE_INSTALL_PREFIX=directory&lt;/code&gt; --- Specify for &lt;em&gt;directory&lt;/em&gt; the full
pathname of where you want the LLVM tools and libraries to be installed
(default &lt;code&gt;/usr/local&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-DCMAKE_BUILD_TYPE=type&lt;/code&gt; --- Valid options for &lt;em&gt;type&lt;/em&gt; are Debug,
Release, RelWithDebInfo, and MinSizeRel. Default is Debug.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-DLLVM_ENABLE_ASSERTIONS=On&lt;/code&gt; --- Compile with assertion checks enabled
(default is Yes for Debug builds, No for all other build types).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run your build tool of choice!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The default target (i.e. &lt;code&gt;ninja&lt;/code&gt; or &lt;code&gt;make&lt;/code&gt;) will build all of LLVM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;check-all&lt;/code&gt; target (i.e. &lt;code&gt;ninja check-all&lt;/code&gt;) will run the
regression tests to ensure everything is in working order.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CMake will generate build targets for each tool and library, and most
LLVM sub-projects generate their own &lt;code&gt;check-&amp;lt;project&amp;gt;&lt;/code&gt; target.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Running a serial build will be &lt;em&gt;slow&lt;/em&gt;.  To improve speed, try running a
parallel build. That's done by default in Ninja; for &lt;code&gt;make&lt;/code&gt;, use
&lt;code&gt;make -j NNN&lt;/code&gt; (NNN is the number of parallel jobs, use e.g. number of
CPUs you have.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more information see &lt;a href="https://llvm.org/docs/CMake.html" rel="nofollow"&gt;CMake&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Consult the
&lt;a href="https://llvm.org/docs/GettingStarted.html#getting-started-with-llvm" rel="nofollow"&gt;Getting Started with LLVM&lt;/a&gt;
page for detailed information on configuring and compiling LLVM. You can visit
&lt;a href="https://llvm.org/docs/GettingStarted.html#directory-layout" rel="nofollow"&gt;Directory Layout&lt;/a&gt;
to learn about the layout of the source code tree.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>llvm</author><guid isPermaLink="false">https://github.com/llvm/llvm-project</guid><pubDate>Wed, 13 Nov 2019 00:09:00 GMT</pubDate></item><item><title>streamlit/streamlit #10 in All Languages, This month</title><link>https://github.com/streamlit/streamlit</link><description>&lt;p&gt;&lt;i&gt;Streamlit — The fastest way to build custom ML tools&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-welcome-to-streamlit-wave" class="anchor" aria-hidden="true" href="#welcome-to-streamlit-wave"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to Streamlit &lt;g-emoji class="g-emoji" alias="wave" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png"&gt;👋&lt;/g-emoji&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;The fastest way to build custom ML tools.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Streamlit lets you create apps for your machine learning projects with deceptively simple Python scripts. It supports hot-reloading, so your app updates live as you edit and save your file. No need to mess with HTTP requests, HTML, JavaScript, etc. All you need is your favorite editor and a browser. Take a look at Streamlit in action:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5ae1dcfd188be26bbb0648fb62e9d6d593dbb6f5/68747470733a2f2f617773312e646973636f757273652d63646e2e636f6d2f7374616e6461726431302f75706c6f6164732f73747265616d6c69742f6f726967696e616c2f31582f323932653938356637663735656637626566386332376235383939663731663736636435373765302e676966"&gt;&lt;img src="https://camo.githubusercontent.com/5ae1dcfd188be26bbb0648fb62e9d6d593dbb6f5/68747470733a2f2f617773312e646973636f757273652d63646e2e636f6d2f7374616e6461726431302f75706c6f6164732f73747265616d6c69742f6f726967696e616c2f31582f323932653938356637663735656637626566386332376235383939663731663736636435373765302e676966" alt="Example of live coding a dashboard in Streamlit|635x380" data-canonical-src="https://aws1.discourse-cdn.com/standard10/uploads/streamlit/original/1X/292e985f7f75ef7bef8c27b5899f71f76cd577e0.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Check out our &lt;a href="https://towardsdatascience.com/coding-ml-tools-like-you-code-ml-models-ddba3357eace" rel="nofollow"&gt;launch blog post&lt;/a&gt;!!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip install streamlit
streamlit hello&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;Streamlit lets you build interactive apps ridiculously easily:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; streamlit &lt;span class="pl-k"&gt;as&lt;/span&gt; st

x &lt;span class="pl-k"&gt;=&lt;/span&gt; st.slider(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Select a value&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
st.write(x, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;squared is&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, x &lt;span class="pl-k"&gt;*&lt;/span&gt; x)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1e18efff3f06946e9d1559712cea0cb76364f004/68747470733a2f2f73747265616d6c69742d64656d6f2d646174612e73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f737175617265642d696d6167652d666f722d6769746875622d726561646d652d322e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/1e18efff3f06946e9d1559712cea0cb76364f004/68747470733a2f2f73747265616d6c69742d64656d6f2d646174612e73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f737175617265642d696d6167652d666f722d6769746875622d726561646d652d322e706e67" width="490/" data-canonical-src="https://streamlit-demo-data.s3-us-west-2.amazonaws.com/squared-image-for-github-readme-2.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-a-bigger-example" class="anchor" aria-hidden="true" href="#a-bigger-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Bigger Example&lt;/h2&gt;
&lt;p&gt;Despite its simplicity Streamlit lets you build incredibly rich and powerful tools. &lt;a href="https://github.com/streamlit/demo-self-driving"&gt;This demo project&lt;/a&gt; lets you browse the entire &lt;a href="https://github.com/udacity/self-driving-car"&gt;Udacity self-driving-car dataset&lt;/a&gt; and run inference in real time using the &lt;a href="https://pjreddie.com/darknet/yolo" rel="nofollow"&gt;YOLO object detection net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/streamlit/demo-self-driving/master/av_final_optimized.gif"&gt;&lt;img src="https://raw.githubusercontent.com/streamlit/demo-self-driving/master/av_final_optimized.gif" alt="Making-of Animation" title="Making-of Animation" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The complete demo is implemented in less than 300 lines of Python. In fact, the app contains &lt;a href="https://github.com/streamlit/demo-self-driving/blob/master/app.py"&gt;only 23 Streamlit calls&lt;/a&gt; which illustrates all the major building blocks of Streamlit. You can try it right now with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip install --upgrade streamlit opencv-python
streamlit run https://raw.githubusercontent.com/streamlit/demo-self-driving/master/app.py&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-more-information" class="anchor" aria-hidden="true" href="#more-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More Information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Our &lt;a href="https://towardsdatascience.com/coding-ml-tools-like-you-code-ml-models-ddba3357eace" rel="nofollow"&gt;launch post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Our lovely &lt;a href="https://discuss.streamlit.io/" rel="nofollow"&gt;community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Streamlit &lt;a href="https://streamlit.io/docs" rel="nofollow"&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More &lt;a href="https://github.com/streamlit/"&gt;demo projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you would like to contribute, see &lt;a href="https://github.com/streamlit/streamlit/wiki/Contributing"&gt;instructions here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-streamlit-for-teams" class="anchor" aria-hidden="true" href="#streamlit-for-teams"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Streamlit for Teams&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://streamlit.io/forteams/" rel="nofollow"&gt;Streamlit for Teams&lt;/a&gt; is our enterprise edition, with single-click deploy, authentication, web editing, versioning, and more. Please contact us if you would like to learn more.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Streamlit is completely free and open source and licensed under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;Apache 2.0&lt;/a&gt; license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>streamlit</author><guid isPermaLink="false">https://github.com/streamlit/streamlit</guid><pubDate>Wed, 13 Nov 2019 00:10:00 GMT</pubDate></item><item><title>robbyrussell/oh-my-zsh #11 in All Languages, This month</title><link>https://github.com/robbyrussell/oh-my-zsh</link><description>&lt;p&gt;&lt;i&gt;🙃 A delightful community-driven (with 1,300+ contributors) framework for managing your zsh configuration. Includes 200+ optional plugins (rails, git, OSX, hub, capistrano, brew, ant, php, python, etc), over 140 themes to spice up your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5c385f15f3eaedb72cfcfbbaf75355b700ac0757/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6f686d797a73682f6f682d6d792d7a73682d6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/5c385f15f3eaedb72cfcfbbaf75355b700ac0757/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6f686d797a73682f6f682d6d792d7a73682d6c6f676f2e706e67" alt="Oh My Zsh" data-canonical-src="https://s3.amazonaws.com/ohmyzsh/oh-my-zsh-logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Oh My Zsh is an open source, community-driven framework for managing your &lt;a href="https://www.zsh.org/" rel="nofollow"&gt;zsh&lt;/a&gt; configuration.&lt;/p&gt;
&lt;p&gt;Sounds boring. Let's try again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Oh My Zsh will not make you a 10x developer...but you may feel like one.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Once installed, your terminal shell will become the talk of the town &lt;em&gt;or your money back!&lt;/em&gt; With each keystroke in your command prompt, you'll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in cafés and ask you, &lt;em&gt;"that is amazing! are you some sort of genius?"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Finally, you'll begin to get the sort of attention that you have always felt you deserved. ...or maybe you'll use the time that you're saving to start flossing more often. &lt;g-emoji class="g-emoji" alias="grimacing" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62c.png"&gt;😬&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;To learn more, visit &lt;a href="https://ohmyz.sh" rel="nofollow"&gt;ohmyz.sh&lt;/a&gt; and follow &lt;a href="https://twitter.com/ohmyzsh" rel="nofollow"&gt;@ohmyzsh&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A Unix-like operating system: macOS, Linux, BSD. On Windows: WSL is preferred, but cygwin or msys also mostly work.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zsh.org" rel="nofollow"&gt;Zsh&lt;/a&gt; should be installed (v4.3.9 or more recent). If not pre-installed (run &lt;code&gt;zsh --version&lt;/code&gt; to confirm), check the following instructions here: &lt;a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Installing-ZSH"&gt;Installing ZSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;wget&lt;/code&gt; should be installed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt; should be installed&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-basic-installation" class="anchor" aria-hidden="true" href="#basic-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Installation&lt;/h3&gt;
&lt;p&gt;Oh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either &lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;wget&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-via-curl" class="anchor" aria-hidden="true" href="#via-curl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;via curl&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sh -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-via-wget" class="anchor" aria-hidden="true" href="#via-wget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;via wget&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sh -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;wget -O- https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-manual-inspection" class="anchor" aria-hidden="true" href="#manual-inspection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual inspection&lt;/h4&gt;
&lt;p&gt;It's a good idea to inspect the install script from projects you don't yet know. You can do
that by downloading the install script first, looking through it so everything looks normal,
then running it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -Lo install.sh https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
sh install.sh&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-using-oh-my-zsh" class="anchor" aria-hidden="true" href="#using-oh-my-zsh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Oh My Zsh&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h3&gt;
&lt;p&gt;Oh My Zsh comes with a shitload of plugins to take advantage of. You can take a look in the &lt;a href="https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins"&gt;plugins&lt;/a&gt; directory and/or the &lt;a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins"&gt;wiki&lt;/a&gt; to see what's currently available.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-enabling-plugins" class="anchor" aria-hidden="true" href="#enabling-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling Plugins&lt;/h4&gt;
&lt;p&gt;Once you spot a plugin (or several) that you'd like to use with Oh My Zsh, you'll need to enable them in the &lt;code&gt;.zshrc&lt;/code&gt; file. You'll find the zshrc file in your &lt;code&gt;$HOME&lt;/code&gt; directory. Open it with your favorite text editor and you'll see a spot to list all the plugins you want to load.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;vi &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zshrc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, this might begin to look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;plugins=(
  git
  bundler
  dotenv
  osx
  rake
  rbenv
  ruby
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note that the plugins are separated by whitespace. &lt;strong&gt;Do not&lt;/strong&gt; use commas between them.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-plugins" class="anchor" aria-hidden="true" href="#using-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Plugins&lt;/h4&gt;
&lt;p&gt;Most plugins (should! we're working on this) include a &lt;strong&gt;README&lt;/strong&gt;, which documents how to use them.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-themes" class="anchor" aria-hidden="true" href="#themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Themes&lt;/h3&gt;
&lt;p&gt;We'll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred themes now bundled. Most of them have &lt;a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes"&gt;screenshots&lt;/a&gt; on the wiki. Check them out!&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-selecting-a-theme" class="anchor" aria-hidden="true" href="#selecting-a-theme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selecting a Theme&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Robby's theme is the default one. It's not the fanciest one. It's not the simplest one. It's just the right one (for him).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Once you find a theme that you'd like to use, you will need to edit the &lt;code&gt;~/.zshrc&lt;/code&gt; file. You'll see an environment variable (all caps) in there that looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ZSH_THEME=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;robbyrussell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use a different theme, simply change the value to match the name of your desired theme. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ZSH_THEME=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;agnoster&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (this is one of the fancy ones)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; see https://github.com/robbyrussell/oh-my-zsh/wiki/Themes#agnoster&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note: many themes require installing the &lt;a href="https://github.com/powerline/fonts"&gt;Powerline Fonts&lt;/a&gt; in order to render properly.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Open up a new terminal window and your prompt should look something like this:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png" alt="Agnoster theme" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In case you did not find a suitable theme for your needs, please have a look at the wiki for &lt;a href="https://github.com/robbyrussell/oh-my-zsh/wiki/External-themes"&gt;more of them&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you're feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ZSH_THEME=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;random&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (...please let it be pie... please be some pie..)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And if you want to pick random theme from a list of your favorite themes:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ZSH_THEME_RANDOM_CANDIDATES=(
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;robbyrussell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;agnoster&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-advanced-topics" class="anchor" aria-hidden="true" href="#advanced-topics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Topics&lt;/h2&gt;
&lt;p&gt;If you're the type that likes to get their hands dirty, these sections might resonate.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-installation" class="anchor" aria-hidden="true" href="#advanced-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Installation&lt;/h3&gt;
&lt;p&gt;Some users may want to manually install Oh My Zsh, or change the default path or other settings that
the installer accepts (these settings are also documented at the top of the install script).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-custom-directory" class="anchor" aria-hidden="true" href="#custom-directory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Directory&lt;/h4&gt;
&lt;p&gt;The default location is &lt;code&gt;~/.oh-my-zsh&lt;/code&gt; (hidden in your home directory)&lt;/p&gt;
&lt;p&gt;If you'd like to change the install directory with the &lt;code&gt;ZSH&lt;/code&gt; environment variable, either by running
&lt;code&gt;export ZSH=/your/path&lt;/code&gt; before installing, or by setting it before the end of the install pipeline
like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ZSH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/.dotfiles/oh-my-zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; sh install.sh&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-unattended-install" class="anchor" aria-hidden="true" href="#unattended-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unattended install&lt;/h4&gt;
&lt;p&gt;If you're running the Oh My Zsh install script as part of an automated install, you can pass the
flag &lt;code&gt;--unattended&lt;/code&gt; to the &lt;code&gt;install.sh&lt;/code&gt; script. This will have the effect of not trying to change
the default shell, and also won't run &lt;code&gt;zsh&lt;/code&gt; when the installation has finished.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sh -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --unattended&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-installing-from-a-forked-repository" class="anchor" aria-hidden="true" href="#installing-from-a-forked-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing from a forked repository&lt;/h4&gt;
&lt;p&gt;The install script also accepts these variables to allow installation of a different repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;REPO&lt;/code&gt; (default: &lt;code&gt;robbyrussell/oh-my-zsh&lt;/code&gt;): this takes the form of &lt;code&gt;owner/repository&lt;/code&gt;. If you set
this variable, the installer will look for a repository at &lt;code&gt;https://github.com/{owner}/{repository}&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;REMOTE&lt;/code&gt; (default: &lt;code&gt;https://github.com/${REPO}.git&lt;/code&gt;): this is the full URL of the git repository
clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab,
Bitbucket...) or if you want to clone with SSH instead of HTTPS (&lt;code&gt;git@github.com:user/project.git&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE: it's incompatible with setting the &lt;code&gt;REPO&lt;/code&gt; variable. This setting will take precedence.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BRANCH&lt;/code&gt; (default: &lt;code&gt;master&lt;/code&gt;): you can use this setting if you want to change the default branch to be
checked out when cloning the repository. This might be useful for testing a Pull Request, or if you
want to use a branch other than &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;REPO=apjanke/oh-my-zsh BRANCH=edge sh install.sh&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-manual-installation" class="anchor" aria-hidden="true" href="#manual-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual Installation&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-1-clone-the-repository" class="anchor" aria-hidden="true" href="#1-clone-the-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Clone the repository:&lt;/h5&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/robbyrussell/oh-my-zsh.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/.oh-my-zsh&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-2-optionally-backup-your-existing-zshrc-file" class="anchor" aria-hidden="true" href="#2-optionally-backup-your-existing-zshrc-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. &lt;em&gt;Optionally&lt;/em&gt;, backup your existing &lt;code&gt;~/.zshrc&lt;/code&gt; file:&lt;/h5&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cp &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zshrc &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zshrc.orig&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-3-create-a-new-zsh-configuration-file" class="anchor" aria-hidden="true" href="#3-create-a-new-zsh-configuration-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Create a new zsh configuration file&lt;/h5&gt;
&lt;p&gt;You can create a new zsh config file by copying the template that we have included for you.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cp &lt;span class="pl-k"&gt;~&lt;/span&gt;/.oh-my-zsh/templates/zshrc.zsh-template &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zshrc&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-4-change-your-default-shell" class="anchor" aria-hidden="true" href="#4-change-your-default-shell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. Change your default shell&lt;/h5&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;chsh -s &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;which zsh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You must log out from your user session and log back in to see this change.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-5-initialize-your-new-zsh-configuration" class="anchor" aria-hidden="true" href="#5-initialize-your-new-zsh-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. Initialize your new zsh configuration&lt;/h5&gt;
&lt;p&gt;Once you open up a new terminal window, it should load zsh with Oh My Zsh's configuration.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-problems" class="anchor" aria-hidden="true" href="#installation-problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Problems&lt;/h3&gt;
&lt;p&gt;If you have any hiccups installing, here are a few common fixes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You &lt;em&gt;might&lt;/em&gt; need to modify your &lt;code&gt;PATH&lt;/code&gt; in &lt;code&gt;~/.zshrc&lt;/code&gt; if you're not able to find some commands after
switching to &lt;code&gt;oh-my-zsh&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you installed manually or changed the install location, check the &lt;code&gt;ZSH&lt;/code&gt; environment variable in
&lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-custom-plugins-and-themes" class="anchor" aria-hidden="true" href="#custom-plugins-and-themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Plugins and Themes&lt;/h3&gt;
&lt;p&gt;If you want to override any of the default behaviors, just add a new file (ending in &lt;code&gt;.zsh&lt;/code&gt;) in the &lt;code&gt;custom/&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;If you have many functions that go well together, you can put them as a &lt;code&gt;XYZ.plugin.zsh&lt;/code&gt; file in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and then enable this plugin.&lt;/p&gt;
&lt;p&gt;If you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and it will be loaded instead of the one in &lt;code&gt;plugins/&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-updates" class="anchor" aria-hidden="true" href="#getting-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Updates&lt;/h2&gt;
&lt;p&gt;By default, you will be prompted to check for upgrades every few weeks. If you would like &lt;code&gt;oh-my-zsh&lt;/code&gt; to automatically upgrade itself without prompting you, set the following in your &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;DISABLE_UPDATE_PROMPT=true&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To disable automatic upgrades, set the following in your &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;DISABLE_AUTO_UPDATE=true&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manual-updates" class="anchor" aria-hidden="true" href="#manual-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual Updates&lt;/h3&gt;
&lt;p&gt;If you'd like to upgrade at any point in time (maybe someone just released a new plugin and you don't want to wait a week?) you just need to run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;upgrade_oh_my_zsh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Magic! &lt;g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png"&gt;🎉&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-uninstalling-oh-my-zsh" class="anchor" aria-hidden="true" href="#uninstalling-oh-my-zsh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uninstalling Oh My Zsh&lt;/h2&gt;
&lt;p&gt;Oh My Zsh isn't for everyone. We'll miss you, but we want to make this an easy breakup.&lt;/p&gt;
&lt;p&gt;If you want to uninstall &lt;code&gt;oh-my-zsh&lt;/code&gt;, just run &lt;code&gt;uninstall_oh_my_zsh&lt;/code&gt; from the command-line. It will remove itself and revert your previous &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt; configuration.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-contribute-to-oh-my-zsh" class="anchor" aria-hidden="true" href="#how-do-i-contribute-to-oh-my-zsh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I contribute to Oh My Zsh?&lt;/h2&gt;
&lt;p&gt;Before you participate in our delightful community, please read the &lt;a href="CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm far from being a &lt;a href="https://www.zsh.org/" rel="nofollow"&gt;Zsh&lt;/a&gt; expert and suspect there are many ways to improve – if you have ideas on how to make the configuration easier to maintain (and faster), don't hesitate to fork and send pull requests!&lt;/p&gt;
&lt;p&gt;We also need people to test out pull-requests. So take a look through &lt;a href="https://github.com/robbyrussell/oh-my-zsh/issues"&gt;the open issues&lt;/a&gt; and help where you can.&lt;/p&gt;
&lt;p&gt;See &lt;a href="CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-do-not-send-us-themes" class="anchor" aria-hidden="true" href="#do-not-send-us-themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Do NOT send us themes&lt;/h3&gt;
&lt;p&gt;We have (more than) enough themes for the time being. Please add your theme to the &lt;a href="https://github.com/robbyrussell/oh-my-zsh/wiki/External-themes"&gt;external themes&lt;/a&gt; wiki page.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;Oh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn't be so awesome.&lt;/p&gt;
&lt;p&gt;Thank you so much!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-follow-us" class="anchor" aria-hidden="true" href="#follow-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Follow Us&lt;/h2&gt;
&lt;p&gt;We're on the social media.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ohmyzsh" rel="nofollow"&gt;@ohmyzsh&lt;/a&gt; on Twitter. You should follow it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/Oh-My-Zsh-296616263819290/" rel="nofollow"&gt;Oh My Zsh&lt;/a&gt; on Facebook.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-merchandise" class="anchor" aria-hidden="true" href="#merchandise"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Merchandise&lt;/h2&gt;
&lt;p&gt;We have &lt;a href="https://shop.planetargon.com/collections/oh-my-zsh?utm_source=github" rel="nofollow"&gt;stickers, shirts, and coffee mugs available&lt;/a&gt; for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Oh My Zsh is released under the &lt;a href="LICENSE.txt"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about-planet-argon" class="anchor" aria-hidden="true" href="#about-planet-argon"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About Planet Argon&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2e25402354b4d603cd19245214d0be9c08ea71b2/68747470733a2f2f70612d6769746875622d6173736574732e73332e616d617a6f6e6177732e636f6d2f504152474f4e5f6c6f676f5f6469676974616c5f434f4c2d736d616c6c2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/2e25402354b4d603cd19245214d0be9c08ea71b2/68747470733a2f2f70612d6769746875622d6173736574732e73332e616d617a6f6e6177732e636f6d2f504152474f4e5f6c6f676f5f6469676974616c5f434f4c2d736d616c6c2e6a7067" alt="Planet Argon" data-canonical-src="https://pa-github-assets.s3.amazonaws.com/PARGON_logo_digital_COL-small.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Oh My Zsh was started by the team at &lt;a href="https://www.planetargon.com/?utm_source=github" rel="nofollow"&gt;Planet Argon&lt;/a&gt;, a &lt;a href="https://www.planetargon.com/skills/ruby-on-rails-development?utm_source=github" rel="nofollow"&gt;Ruby on Rails development agency&lt;/a&gt;. Check out our &lt;a href="https://www.planetargon.com/open-source?utm_source=github" rel="nofollow"&gt;other open source projects&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>robbyrussell</author><guid isPermaLink="false">https://github.com/robbyrussell/oh-my-zsh</guid><pubDate>Wed, 13 Nov 2019 00:11:00 GMT</pubDate></item><item><title>danielmiessler/SecLists #12 in All Languages, This month</title><link>https://github.com/danielmiessler/SecLists</link><description>&lt;p&gt;&lt;i&gt;SecLists is the security tester's companion. It's a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/78c3052d3f17986584f0e6c6b62295f05e93372d/68747470733a2f2f64616e69656c6d696573736c65722e636f6d2f696d616765732f7365636c697374732d6c6f6e672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/78c3052d3f17986584f0e6c6b62295f05e93372d/68747470733a2f2f64616e69656c6d696573736c65722e636f6d2f696d616765732f7365636c697374732d6c6f6e672e706e67" alt="seclists.png" title="seclists.png" data-canonical-src="https://danielmiessler.com/images/seclists-long.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-about-seclists" class="anchor" aria-hidden="true" href="#about-seclists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About SecLists&lt;/h3&gt;
&lt;p&gt;SecLists is the security tester's companion. It's a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more. The goal is to enable a security tester to pull this repository onto a new testing box and have access to every type of list that may be needed.&lt;/p&gt;
&lt;p&gt;This project is maintained by &lt;a href="https://danielmiessler.com/" rel="nofollow"&gt;Daniel Miessler&lt;/a&gt;, &lt;a href="http://www.securityaegis.com" rel="nofollow"&gt;Jason Haddix&lt;/a&gt;, and &lt;a href="https://twitter.com/g0tmi1k" rel="nofollow"&gt;g0tmi1k&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Zip&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -c https://github.com/danielmiessler/SecLists/archive/master.zip -O SecList.zip \
  &amp;amp;&amp;amp; unzip SecList.zip \
  &amp;amp;&amp;amp; rm -f SecList.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Git (Small)&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/danielmiessler/SecLists.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Git (Complete)&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/danielmiessler/SecLists.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Kali Linux&lt;/strong&gt; (&lt;a href="https://tools.kali.org/password-attacks/seclists" rel="nofollow"&gt;Tool Page&lt;/a&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt -y install seclists
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-attribution" class="anchor" aria-hidden="true" href="#attribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Attribution&lt;/h3&gt;
&lt;p&gt;See &lt;a href="CONTRIBUTORS.md"&gt;CONTRIBUTORS.md&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;See &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-similar-projects" class="anchor" aria-hidden="true" href="#similar-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Similar Projects&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings"&gt;PayloadsAllTheThings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fuzzdb-project/fuzzdb"&gt;FuzzDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h3&gt;
&lt;p&gt;This project is licensed under the &lt;a href="LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4a532bce81bb6f7afe93d9b9a857093fd525071e/68747470733a2f2f64616e69656c6d696573736c65722e636f6d2f696d616765732f6d69746c6963656e73652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4a532bce81bb6f7afe93d9b9a857093fd525071e/68747470733a2f2f64616e69656c6d696573736c65722e636f6d2f696d616765732f6d69746c6963656e73652e706e67" alt="MIT License" data-canonical-src="https://danielmiessler.com/images/mitlicense.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;—&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;NOTE: Downloading this repository is likely to cause a false-positive alarm by your anti-virus or anti-malware software, the filepath should be whitelisted. There is nothing in SecLists that can harm your computer as-is, however it's not recommended to store these files on a server or other important system due to the risk of local file include attacks.&lt;/sup&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>danielmiessler</author><guid isPermaLink="false">https://github.com/danielmiessler/SecLists</guid><pubDate>Wed, 13 Nov 2019 00:12:00 GMT</pubDate></item><item><title>brightmart/albert_zh #13 in All Languages, This month</title><link>https://github.com/brightmart/albert_zh</link><description>&lt;p&gt;&lt;i&gt;A LITE BERT FOR SELF-SUPERVISED LEARNING OF LANGUAGE REPRESENTATIONS, 海量中文预训练ALBERT模型&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-albert_zh" class="anchor" aria-hidden="true" href="#albert_zh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;albert_zh&lt;/h1&gt;
&lt;p&gt;An Implementation of &lt;a href="https://arxiv.org/pdf/1909.11942.pdf" rel="nofollow"&gt;A Lite Bert For Self-Supervised Learning Language Representations&lt;/a&gt; with TensorFlow&lt;/p&gt;
&lt;p&gt;ALBert is based on Bert, but with some improvements. It achieves state of the art performance on main benchmarks with 30% parameters less.&lt;/p&gt;
&lt;p&gt;For albert_base_zh it only has ten percentage parameters compare of original bert model, and main accuracy is retained.&lt;/p&gt;
&lt;p&gt;Different version of ALBERT pre-trained model for Chinese, including TensorFlow, PyTorch and Keras, is available now.&lt;/p&gt;
&lt;p&gt;海量中文语料上预训练ALBERT模型：参数更少，效果更好。预训练小模型也能拿下13项NLP任务，ALBERT三大改造登顶GLUE基准&lt;/p&gt;
&lt;p&gt;一键运行10个数据集、9个基线模型、不同任务上模型效果的详细对比，见&lt;a href="https://github.com/chineseGLUE/chineseGLUE"&gt;中文任务基准测评chineseGLUE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/brightmart/albert_zh/blob/master/resources/albert_tiny_compare_s.jpg"&gt;&lt;img src="https://github.com/brightmart/albert_zh/raw/master/resources/albert_tiny_compare_s.jpg" width="90%" height="70%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-模型下载-download-pre-trained-models-of-chinese" class="anchor" aria-hidden="true" href="#模型下载-download-pre-trained-models-of-chinese"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模型下载 Download Pre-trained Models of Chinese&lt;/h2&gt;
&lt;p&gt;1、&lt;a href="https://storage.googleapis.com/albert_zh/albert_tiny.zip" rel="nofollow"&gt;albert_tiny_zh&lt;/a&gt;, &lt;a href="https://storage.googleapis.com/albert_zh/albert_tiny_489k.zip" rel="nofollow"&gt;albert_tiny_zh(训练更久，累积学习20亿个样本)&lt;/a&gt;，文件大小16M、参数为4M&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;训练和推理预测速度提升约10倍，精度基本保留，模型大小为bert的1/25；语义相似度数据集LCQMC测试集上达到85.4%，相比bert_base仅下降1.5个点。

lcqmc训练使用如下参数： --max_seq_length=128 --train_batch_size=64   --learning_rate=1e-4   --num_train_epochs=5 

albert_tiny使用同样的大规模中文语料数据，层数仅为4层、hidden size等向量维度大幅减少; 尝试使用如下学习率来获得更好效果：{2e-5, 6e-5, 1e-4} 

【使用场景】任务相对比较简单一些或实时性要求高的任务，如语义相似度等句子对任务、分类任务；比较难的任务如阅读理解等，可以使用其他大模型。

 例如，可以使用[Tensorflow Lite](https://www.tensorflow.org/lite)在移动端进行部署，本文[随后](#use_tflite)针对这一点进行了介绍，包括如何把模型转换成Tensorflow Lite格式和对其进行性能测试等。
 
 一键运行albert_tiny_zh(linux,lcqmc任务)：
 1) git clone https://github.com/brightmart/albert_zh
 2) cd albert_zh
 3) bash run_classifier_lcqmc.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1.1、&lt;a href="https://storage.googleapis.com/albert_zh/albert_tiny_zh_google.zip" rel="nofollow"&gt;albert_tiny_google_zh(累积学习10亿个样本,google版本)&lt;/a&gt;，模型大小16M、性能与albert_tiny_zh一致&lt;/p&gt;
&lt;p&gt;1.2、&lt;a href="https://storage.googleapis.com/albert_zh/albert_small_zh_google.zip" rel="nofollow"&gt;albert_small_google_zh(累积学习10亿个样本,google版本)&lt;/a&gt;，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 速度比bert_base快4倍；LCQMC测试集上比Bert下降仅0.9个点；去掉adam后模型大小18.5M；使用方法，见 #下游任务 Fine-tuning on Downstream Task     
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2、&lt;a href="https://storage.googleapis.com/albert_zh/albert_large_zh.zip" rel="nofollow"&gt;albert_large_zh&lt;/a&gt;,参数量，层数24，文件大小为64M&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;参数量和模型大小为bert_base的六分之一；在口语化描述相似性数据集LCQMC的测试集上相比bert_base上升0.2个点
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3、&lt;a href="https://storage.googleapis.com/albert_zh/albert_base_zh_additional_36k_steps.zip" rel="nofollow"&gt;albert_base_zh(额外训练了1.5亿个实例即 36k steps * batch_size 4096)&lt;/a&gt;; &lt;a href="https://storage.googleapis.com/albert_zh/albert_base_zh.zip" rel="nofollow"&gt; albert_base_zh(小模型体验版)&lt;/a&gt;, 参数量12M, 层数12，大小为40M&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;参数量为bert_base的十分之一，模型大小也十分之一；在口语化描述相似性数据集LCQMC的测试集上相比bert_base下降约0.6~1个点；
相比未预训练，albert_base提升14个点
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4、&lt;a href="https://storage.googleapis.com/albert_zh/albert_xlarge_zh_177k.zip" rel="nofollow"&gt;albert_xlarge_zh_177k &lt;/a&gt;;
&lt;a href="https://storage.googleapis.com/albert_zh/albert_xlarge_zh_183k.zip" rel="nofollow"&gt;albert_xlarge_zh_183k(优先尝试)&lt;/a&gt;参数量，层数24，文件大小为230M&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;参数量和模型大小为bert_base的二分之一；需要一张大的显卡；完整测试对比将后续添加；batch_size不能太小，否则可能影响精度
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-updates" class="anchor" aria-hidden="true" href="#updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updates&lt;/h2&gt;
&lt;p&gt;******* 2019-11-03: add google version of albert_small, albert_tiny;&lt;/p&gt;
&lt;p&gt;add method to deploy ablert_tiny to mobile devices with only 0.1 second inference time for sequence length 128, 60M memory *******&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;***** 2019-10-30: add a simple guide about converting the model to Tensorflow Lite for edge deployment *****&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;***** 2019-10-15: albert_tiny_zh, 10 times fast than bert base for training and inference, accuracy remains *****&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;***** 2019-10-07: more models of albert *****&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;add albert_xlarge_zh; albert_base_zh_additional_steps, training with more instances&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;***** 2019-10-04: PyTorch and Keras versions of albert were supported *****&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;a.Convert to PyTorch version and do your tasks through &lt;a href="https://github.com/lonePatient/albert_pytorch"&gt;albert_pytorch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;b.Load pre-trained model with keras using one line of codes through &lt;a href="https://github.com/bojone/bert4keras"&gt;bert4keras&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;c.Use albert with TensorFlow 2.0: Use or load pre-trained model with tf2.0 through &lt;a href="https://github.com/kpe/bert-for-tf2"&gt;bert-for-tf2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Releasing albert_xlarge on 6th Oct&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;***** 2019-10-02: albert_large_zh,albert_base_zh *****&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Relesed albert_base_zh with only 10% parameters of bert_base, a small model(40M) &amp;amp; training can be very fast.&lt;/p&gt;
&lt;p&gt;Relased albert_large_zh with only 16% parameters of bert_base(64M)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;***** 2019-09-28: codes and test functions *****&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Add codes and test functions for three main changes of albert from bert&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-albert模型介绍-introduction-of-albert" class="anchor" aria-hidden="true" href="#albert模型介绍-introduction-of-albert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ALBERT模型介绍 Introduction of ALBERT&lt;/h2&gt;
&lt;p&gt;ALBERT模型是BERT的改进版，与最近其他State of the art的模型不同的是，这次是预训练小模型，效果更好、参数更少。&lt;/p&gt;
&lt;p&gt;它对BERT进行了三个改造 Three main changes of ALBert from Bert：&lt;/p&gt;
&lt;p&gt;1）词嵌入向量参数的因式分解 Factorized embedding parameterization&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; O(V * H) to O(V * E + E * H)
 
 如以ALBert_xxlarge为例，V=30000, H=4096, E=128
   
 那么原先参数为V * H= 30000 * 4096 = 1.23亿个参数，现在则为V * E + E * H = 30000*128+128*4096 = 384万 + 52万 = 436万，
   
 词嵌入相关的参数变化前是变换后的28倍。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2）跨层参数共享 Cross-Layer Parameter Sharing&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 参数共享能显著减少参数。共享可以分为全连接层、注意力层的参数共享；注意力层的参数对效果的减弱影响小一点。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3）段落连续性任务 Inter-sentence coherence loss.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 使用段落连续性任务。正例，使用从一个文档中连续的两个文本段落；负例，使用从一个文档中连续的两个文本段落，但位置调换了。
 
 避免使用原有的NSP任务，原有的任务包含隐含了预测主题这类过于简单的任务。

  We maintain that inter-sentence modeling is an important aspect of language understanding, but we propose a loss 
  based primarily on coherence. That is, for ALBERT, we use a sentence-order prediction (SOP) loss, which avoids topic 
  prediction and instead focuses on modeling inter-sentence coherence. The SOP loss uses as positive examples the 
  same technique as BERT (two consecutive segments from the same document), and as negative examples the same two 
  consecutive segments but with their order swapped. This forces the model to learn finer-grained distinctions about
  discourse-level coherence properties. 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他变化，还有 Other changes：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1）去掉了dropout  Remove dropout to enlarge capacity of model.
    最大的模型，训练了1百万步后，还是没有过拟合训练数据。说明模型的容量还可以更大，就移除了dropout
    （dropout可以认为是随机的去掉网络中的一部分，同时使网络变小一些）
    We also note that, even after training for 1M steps, our largest models still do not overfit to their training data. 
    As a result, we decide to remove dropout to further increase our model capacity.
    其他型号的模型，在我们的实现中我们还是会保留原始的dropout的比例，防止模型对训练数据的过拟合。
    
2）为加快训练速度，使用LAMB做为优化器 Use LAMB as optimizer, to train with big batch size
  使用了大的batch_size来训练(4096)。 LAMB优化器使得我们可以训练，特别大的批次batch_size，如高达6万。

3）使用n-gram(uni-gram,bi-gram, tri-gram）来做遮蔽语言模型 Use n-gram as make language model
   即以不同的概率使用n-gram,uni-gram的概率最大，bi-gram其次，tri-gram概率最小。
   本项目中目前使用的是在中文上做whole word mask，稍后会更新一下与n-gram mask的效果对比。n-gram从spanBERT中来。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-训练语料训练配置-training-data--configuration" class="anchor" aria-hidden="true" href="#训练语料训练配置-training-data--configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;训练语料/训练配置 Training Data &amp;amp; Configuration&lt;/h2&gt;
&lt;p&gt;30g中文语料，超过100亿汉字，包括多个百科、新闻、互动社区。&lt;/p&gt;
&lt;p&gt;预训练序列长度sequence_length设置为512，批次batch_size为4096，训练产生了3.5亿个训练数据(instance)；每一个模型默认会训练125k步，albert_xxlarge将训练更久。&lt;/p&gt;
&lt;p&gt;作为比较，roberta_zh预训练产生了2.5亿个训练数据、序列长度为256。由于albert_zh预训练生成的训练数据更多、使用的序列长度更长，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;我们预计albert_zh会有比roberta_zh更好的性能表现，并且能更好处理较长的文本。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;训练使用TPU v3 Pod，我们使用的是v3-256，它包含32个v3-8。每个v3-8机器，含有128G的显存。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-模型性能与对比英文-performance-and-comparision" class="anchor" aria-hidden="true" href="#模型性能与对比英文-performance-and-comparision"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模型性能与对比(英文) Performance and Comparision&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/brightmart/albert_zh/blob/master/resources/state_of_the_art.jpg"&gt;&lt;img src="https://github.com/brightmart/albert_zh/raw/master/resources/state_of_the_art.jpg" width="80%" height="40%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/brightmart/albert_zh/blob/master/resources/albert_performance.jpg"&gt;&lt;img src="https://github.com/brightmart/albert_zh/raw/master/resources/albert_performance.jpg" width="80%" height="40%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/brightmart/albert_zh/blob/master/resources/add_data_removing_dropout.jpg"&gt;&lt;img src="https://github.com/brightmart/albert_zh/raw/master/resources/add_data_removing_dropout.jpg" width="80%" height="40%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-中文任务集上效果对比测试-performance-on-chinese-datasets" class="anchor" aria-hidden="true" href="#中文任务集上效果对比测试-performance-on-chinese-datasets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;中文任务集上效果对比测试 Performance on Chinese datasets&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-问题匹配语任务lcqmcsentence-pair-matching" class="anchor" aria-hidden="true" href="#问题匹配语任务lcqmcsentence-pair-matching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;问题匹配语任务：LCQMC(Sentence Pair Matching)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;模型&lt;/th&gt;
&lt;th align="center"&gt;开发集(Dev)&lt;/th&gt;
&lt;th align="center"&gt;测试集(Test)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;BERT&lt;/td&gt;
&lt;td align="center"&gt;89.4(88.4)&lt;/td&gt;
&lt;td align="center"&gt;86.9(86.4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ERNIE&lt;/td&gt;
&lt;td align="center"&gt;89.8 (89.6)&lt;/td&gt;
&lt;td align="center"&gt;87.2 (87.0)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;BERT-wwm&lt;/td&gt;
&lt;td align="center"&gt;89.4 (89.2)&lt;/td&gt;
&lt;td align="center"&gt;87.0 (86.8)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;BERT-wwm-ext&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RoBERTa-zh-base&lt;/td&gt;
&lt;td align="center"&gt;88.7&lt;/td&gt;
&lt;td align="center"&gt;87.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RoBERTa-zh-Large&lt;/td&gt;
&lt;td align="center"&gt;&lt;em&gt;&lt;strong&gt;89.9(89.6)&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td align="center"&gt;87.2(86.7)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RoBERTa-zh-Large(20w_steps)&lt;/td&gt;
&lt;td align="center"&gt;89.7&lt;/td&gt;
&lt;td align="center"&gt;87.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALBERT-zh-tiny&lt;/td&gt;
&lt;td align="center"&gt;--&lt;/td&gt;
&lt;td align="center"&gt;85.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALBERT-zh-small&lt;/td&gt;
&lt;td align="center"&gt;--&lt;/td&gt;
&lt;td align="center"&gt;86.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALBERT-zh-small(Pytorch)&lt;/td&gt;
&lt;td align="center"&gt;--&lt;/td&gt;
&lt;td align="center"&gt;86.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALBERT-zh-base-additional-36k-steps&lt;/td&gt;
&lt;td align="center"&gt;87.8&lt;/td&gt;
&lt;td align="center"&gt;86.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALBERT-zh-base&lt;/td&gt;
&lt;td align="center"&gt;87.2&lt;/td&gt;
&lt;td align="center"&gt;86.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALBERT-large&lt;/td&gt;
&lt;td align="center"&gt;88.7&lt;/td&gt;
&lt;td align="center"&gt;87.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALBERT-xlarge&lt;/td&gt;
&lt;td align="center"&gt;87.3&lt;/td&gt;
&lt;td align="center"&gt;&lt;em&gt;&lt;strong&gt;87.7&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：只跑了一次ALBERT-xlarge，效果还可能提升&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-自然语言推断xnli-of-chinese-version" class="anchor" aria-hidden="true" href="#自然语言推断xnli-of-chinese-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自然语言推断：XNLI of Chinese Version&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;模型&lt;/th&gt;
&lt;th align="center"&gt;开发集&lt;/th&gt;
&lt;th align="center"&gt;测试集&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;BERT&lt;/td&gt;
&lt;td align="center"&gt;77.8 (77.4)&lt;/td&gt;
&lt;td align="center"&gt;77.8 (77.5)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ERNIE&lt;/td&gt;
&lt;td align="center"&gt;79.7 (79.4)&lt;/td&gt;
&lt;td align="center"&gt;78.6 (78.2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;BERT-wwm&lt;/td&gt;
&lt;td align="center"&gt;79.0 (78.4)&lt;/td&gt;
&lt;td align="center"&gt;78.2 (78.0)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;BERT-wwm-ext&lt;/td&gt;
&lt;td align="center"&gt;79.4 (78.6)&lt;/td&gt;
&lt;td align="center"&gt;78.7 (78.3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;XLNet&lt;/td&gt;
&lt;td align="center"&gt;79.2&lt;/td&gt;
&lt;td align="center"&gt;78.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RoBERTa-zh-base&lt;/td&gt;
&lt;td align="center"&gt;79.8&lt;/td&gt;
&lt;td align="center"&gt;78.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RoBERTa-zh-Large&lt;/td&gt;
&lt;td align="center"&gt;80.2 (80.0)&lt;/td&gt;
&lt;td align="center"&gt;79.9 (79.5)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALBERT-base&lt;/td&gt;
&lt;td align="center"&gt;77.0&lt;/td&gt;
&lt;td align="center"&gt;77.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALBERT-large&lt;/td&gt;
&lt;td align="center"&gt;78.0&lt;/td&gt;
&lt;td align="center"&gt;77.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALBERT-xlarge&lt;/td&gt;
&lt;td align="center"&gt;?&lt;/td&gt;
&lt;td align="center"&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：BERT-wwm-ext来自于&lt;a href="https://github.com/ymcui/Chinese-BERT-wwm"&gt;这里&lt;/a&gt;；XLNet来自于&lt;a href="https://github.com/ymcui/Chinese-PreTrained-XLNet"&gt;这里&lt;/a&gt;; RoBERTa-zh-base，指12层RoBERTa中文模型&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-阅读理解任务crmc2018" class="anchor" aria-hidden="true" href="#阅读理解任务crmc2018"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;阅读理解任务：CRMC2018&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/brightmart/albert_zh/blob/master/resources/crmc2018_compare_s.jpg"&gt;&lt;img src="https://github.com/brightmart/albert_zh/raw/master/resources/crmc2018_compare_s.jpg" width="90%" height="70%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-语言模型文本段预测准确性训练时间-mask-language-model-accuarcy--training-time" class="anchor" aria-hidden="true" href="#语言模型文本段预测准确性训练时间-mask-language-model-accuarcy--training-time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;语言模型、文本段预测准确性、训练时间 Mask Language Model Accuarcy &amp;amp; Training Time&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Model&lt;/th&gt;
&lt;th align="center"&gt;MLM eval acc&lt;/th&gt;
&lt;th align="center"&gt;SOP eval acc&lt;/th&gt;
&lt;th align="center"&gt;Training(Hours)&lt;/th&gt;
&lt;th align="center"&gt;Loss eval&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;albert_zh_base&lt;/td&gt;
&lt;td align="center"&gt;79.1%&lt;/td&gt;
&lt;td align="center"&gt;99.0%&lt;/td&gt;
&lt;td align="center"&gt;6h&lt;/td&gt;
&lt;td align="center"&gt;1.01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;albert_zh_large&lt;/td&gt;
&lt;td align="center"&gt;80.9%&lt;/td&gt;
&lt;td align="center"&gt;98.6%&lt;/td&gt;
&lt;td align="center"&gt;22.5h&lt;/td&gt;
&lt;td align="center"&gt;0.93&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;albert_zh_xlarge&lt;/td&gt;
&lt;td align="center"&gt;?&lt;/td&gt;
&lt;td align="center"&gt;?&lt;/td&gt;
&lt;td align="center"&gt;53h(预估)&lt;/td&gt;
&lt;td align="center"&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;albert_zh_xxlarge&lt;/td&gt;
&lt;td align="center"&gt;?&lt;/td&gt;
&lt;td align="center"&gt;?&lt;/td&gt;
&lt;td align="center"&gt;106h(预估)&lt;/td&gt;
&lt;td align="center"&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：? 将很快替换&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-模型参数和配置-configuration-of-models" class="anchor" aria-hidden="true" href="#模型参数和配置-configuration-of-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模型参数和配置 Configuration of Models&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/brightmart/albert_zh/blob/master/resources/albert_configuration.jpg"&gt;&lt;img src="https://github.com/brightmart/albert_zh/raw/master/resources/albert_configuration.jpg" width="80%" height="40%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-代码实现和测试-implementation-and-code-testing" class="anchor" aria-hidden="true" href="#代码实现和测试-implementation-and-code-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码实现和测试 Implementation and Code Testing&lt;/h2&gt;
&lt;p&gt;通过运行以下命令测试主要的改进点，包括但不限于词嵌入向量参数的因式分解、跨层参数共享、段落连续性任务等。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python test_changes.py
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-预训练-pre-training" class="anchor" aria-hidden="true" href="#预训练-pre-training"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;预训练 Pre-training&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-生成特定格式的文件tfrecords-generate-tfrecords-files" class="anchor" aria-hidden="true" href="#生成特定格式的文件tfrecords-generate-tfrecords-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;生成特定格式的文件(tfrecords) Generate tfrecords Files&lt;/h4&gt;
&lt;p&gt;Run following command 运行以下命令即可。项目自动了一个示例的文本文件(data/news_zh_1.txt)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   bash create_pretrain_data.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你有很多文本文件，可以通过传入参数的方式，生成多个特定格式的文件(tfrecords）&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-support-english-and-other-non-chinese-language" class="anchor" aria-hidden="true" href="#support-english-and-other-non-chinese-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support English and Other Non-Chinese Language:&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;If you are doing pre-train for english or other language,which is not chinese, 
you should set hyperparameter of non_chinese to True on create_pretraining_data.py; 
otherwise, by default it is doing chinese pre-train using whole word mask of chinese.
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-执行预训练-pre-training-on-gputpu-using-the-command" class="anchor" aria-hidden="true" href="#执行预训练-pre-training-on-gputpu-using-the-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;执行预训练 pre-training on GPU/TPU using the command&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;GPU(brightmart版, tiny模型):
export BERT_BASE_DIR=./albert_tiny_zh
nohup python3 run_pretraining.py --input_file=./data/tf*.tfrecord  \
--output_dir=./my_new_model_path --do_train=True --do_eval=True --bert_config_file=$BERT_BASE_DIR/albert_config_tiny.json \
--train_batch_size=4096 --max_seq_length=512 --max_predictions_per_seq=51 \
--num_train_steps=125000 --num_warmup_steps=12500 --learning_rate=0.00176    \
--save_checkpoints_steps=2000  --init_checkpoint=$BERT_BASE_DIR/albert_model.ckpt &amp;amp;

GPU(Google版本, small模型):
export BERT_BASE_DIR=./albert_small_zh_google
nohup python3 run_pretraining_google.py --input_file=./data/tf*.tfrecord --eval_batch_size=64 \
--output_dir=./my_new_model_path --do_train=True --do_eval=True --albert_config_file=$BERT_BASE_DIR/albert_config_small_google.json  --export_dir=./my_new_model_path_export \
--train_batch_size=4096 --max_seq_length=512 --max_predictions_per_seq=20 \
--num_train_steps=125000 --num_warmup_steps=12500 --learning_rate=0.00176   \
--save_checkpoints_steps=2000 --init_checkpoint=$BERT_BASE_DIR/albert_model.ckpt

TPU, add something like this:
    --use_tpu=True  --tpu_name=grpc://10.240.1.66:8470 --tpu_zone=us-central1-a
    
注：如果你重头开始训练，可以不指定init_checkpoint；
如果你从现有的模型基础上训练，指定一下BERT_BASE_DIR的路径，并确保bert_config_file和init_checkpoint两个参数的值能对应到相应的文件上；
领域上的预训练，根据数据的大小，可以不用训练特别久。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-下游任务-fine-tuning-on-downstream-task" class="anchor" aria-hidden="true" href="#下游任务-fine-tuning-on-downstream-task"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;下游任务 Fine-tuning on Downstream Task&lt;/h2&gt;
&lt;h5&gt;&lt;a id="user-content-使用tensorflow" class="anchor" aria-hidden="true" href="#使用tensorflow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用TensorFlow:&lt;/h5&gt;
&lt;p&gt;以使用albert_base做LCQMC任务为例。LCQMC任务是在口语化描述的数据集上做文本的相似性预测。&lt;/p&gt;
&lt;p&gt;We will use LCQMC dataset for fine-tuning, it is oral language corpus, it is used to train and predict semantic similarity of a pair of sentences.&lt;/p&gt;
&lt;p&gt;下载&lt;a href="https://drive.google.com/open?id=1HXYMqsXjmA5uIfu_SFqP7r_vZZG-m_H0" rel="nofollow"&gt;LCQMC&lt;/a&gt;数据集，包含训练、验证和测试集，训练集包含24万口语化描述的中文句子对，标签为1或0。1为句子语义相似，0为语义不相似。&lt;/p&gt;
&lt;p&gt;通过运行下列命令做LCQMC数据集上的fine-tuning:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. Clone this project:
      
      git clone https://github.com/brightmart/albert_zh.git
      
2. Fine-tuning by running the following command.
    brightmart版本的tiny模型
    export BERT_BASE_DIR=./albert_tiny_zh
    export TEXT_DIR=./lcqmc
    nohup python3 run_classifier.py   --task_name=lcqmc_pair   --do_train=true   --do_eval=true   --data_dir=$TEXT_DIR   --vocab_file=./albert_config/vocab.txt  \
    --bert_config_file=./albert_config/albert_config_tiny.json --max_seq_length=128 --train_batch_size=64   --learning_rate=1e-4  --num_train_epochs=5 \
    --output_dir=./albert_lcqmc_checkpoints --init_checkpoint=$BERT_BASE_DIR/albert_model.ckpt &amp;amp;
    
    google版本的small模型
    export BERT_BASE_DIR=./albert_small_zh
    export TEXT_DIR=./lcqmc
    nohup python3 run_classifier_sp_google.py --task_name=lcqmc_pair   --do_train=true   --do_eval=true   --data_dir=$TEXT_DIR   --vocab_file=./albert_config/vocab.txt  \
    --albert_config_file=./$BERT_BASE_DIR/albert_config_small_google.json --max_seq_length=128 --train_batch_size=64   --learning_rate=1e-4   --num_train_epochs=5 \
    --output_dir=./albert_lcqmc_checkpoints --init_checkpoint=$BERT_BASE_DIR/albert_model.ckpt &amp;amp;

Notice/注：
    1) you need to download pre-trained chinese albert model, and also download LCQMC dataset 
    你需要下载预训练的模型，并放入到项目当前项目，假设目录名称为albert_tiny_zh; 需要下载LCQMC数据集，并放入到当前项目，
    假设数据集目录名称为lcqmc

    2) for Fine-tuning, you can try to add small percentage of dropout(e.g. 0.1) by changing parameters of 
      attention_probs_dropout_prob &amp;amp; hidden_dropout_prob on albert_config_xxx.json. By default, we set dropout as zero. 
    
    3) you can try different learning rate {2e-5, 6e-5, 1e-4} for better performance 
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-使用tensorflow-litetflite在移动端进行部署" class="anchor" aria-hidden="true" href="#使用tensorflow-litetflite在移动端进行部署"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-use_tflite"&gt;&lt;/a&gt;使用TensorFlow Lite(TFLite)在移动端进行部署:&lt;/h5&gt;
&lt;p&gt;这里我们主要介绍TFLite模型格式转换和性能测试。转换成TFLite模型后，对于如何在移
动端使用该模型，可以参考TFLite提供的&lt;a href="https://www.tensorflow.org/lite/examples" rel="nofollow"&gt;Android/iOS应用完整开发案例教程页面&lt;/a&gt;。
该页面目前已经包含了&lt;a href="https://github.com/tensorflow/examples/blob/master/lite/examples/text_classification/android"&gt;文本分类&lt;/a&gt;，
&lt;a href="https://github.com/tensorflow/examples/blob/master/lite/examples/bert_qa/android"&gt;文本问答&lt;/a&gt;两个Android案例。&lt;/p&gt;
&lt;p&gt;下面以&lt;a href="https://storage.googleapis.com/albert_zh/albert_tiny.zip" rel="nofollow"&gt;albert_tiny_zh&lt;/a&gt;
为例来介绍TFLite模型格式转换和性能测试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Freeze graph from the checkpoint&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ensure to have &amp;gt;=1.14 1.x installed to use the freeze_graph tool as it is removed from 2.x distribution&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install tensorflow==1.15

freeze_graph --input_checkpoint=./albert_model.ckpt \
  --output_graph=/tmp/albert_tiny_zh.pb \
  --output_node_names=cls/predictions/truediv \
  --checkpoint_version=1 --input_meta_graph=./albert_model.ckpt.meta --input_binary=true
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Convert to TFLite format&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We are going to use the new experimental tf-&amp;gt;tflite converter that's distributed with the Tensorflow nightly build.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install tf-nightly

tflite_convert --graph_def_file=/tmp/albert_tiny_zh.pb \
  --input_arrays='input_ids,input_mask,segment_ids,masked_lm_positions,masked_lm_ids,masked_lm_weights' \
  --output_arrays='cls/predictions/truediv' \
  --input_shapes=1,128:1,128:128:1,128:1,128:1,128 \
  --output_file=/tmp/albert_tiny_zh.tflite \
  --enable_v1_converter --experimental_new_converter
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Benchmark the performance of the TFLite model&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;See &lt;a href="https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/tools/benchmark"&gt;here&lt;/a&gt;
for details about the performance benchmark tools in TFLite. For example: after
building the benchmark tool binary for an Android phone, do the following to
get an idea of how the TFLite model performs on the phone&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;adb push /tmp/albert_tiny_zh.tflite /data/local/tmp/
adb shell /data/local/tmp/benchmark_model_performance_options --graph=/data/local/tmp/albert_tiny_zh.tflite --perf_options_list=cpu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On an Android phone w/ Qualcomm's SD845 SoC, via the above benchmark tool, as
of 2019/11/01, the inference latency is ~120ms w/ this converted TFLite model
using 4 threads on CPU, and the memory usage is ~60MB for the model during
inference. Note the performance will improve further with future TFLite
implementation optimizations.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-使用pytorch版本" class="anchor" aria-hidden="true" href="#使用pytorch版本"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用PyTorch版本:&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;download pre-trained model, and convert to PyTorch using:
 
  python convert_albert_tf_checkpoint_to_pytorch.py     
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;using &lt;a href="https://github.com/lonePatient/albert_pytorch"&gt;albert_pytorch&lt;/a&gt;&lt;/p&gt;&lt;a href="https://github.com/lonePatient/albert_pytorch"&gt;
&lt;h5&gt;&lt;a id="user-content-使用keras加载" class="anchor" aria-hidden="true" href="#使用keras加载"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用Keras加载:&lt;/h5&gt;
&lt;/a&gt;&lt;p&gt;&lt;a href="https://github.com/lonePatient/albert_pytorch"&gt;&lt;/a&gt;&lt;a href="https://github.com/bojone/bert4keras"&gt;bert4keras&lt;/a&gt; 适配albert，能成功加载albert_zh的权重，只需要在load_pretrained_model函数里加上albert=True&lt;/p&gt;
&lt;p&gt;load pre-trained model with bert4keras&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-使用tf20加载" class="anchor" aria-hidden="true" href="#使用tf20加载"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用tf2.0加载:&lt;/h5&gt;
&lt;p&gt;&lt;a href="https://github.com/kpe/bert-for-tf2"&gt;bert-for-tf2&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-使用案例-基于用户输入预测文本相似性-use-case-text-similarity-based-on-user-input" class="anchor" aria-hidden="true" href="#使用案例-基于用户输入预测文本相似性-use-case-text-similarity-based-on-user-input"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用案例-基于用户输入预测文本相似性 Use Case-Text Similarity Based on User Input&lt;/h2&gt;
&lt;p&gt;功能说明：用户可以通过本例了解如何加载训训练集实现基于用户输入的短文本相似度判断。可以基于该代码将程序灵活地拓展为后台服务或增加文本分类等示例。&lt;/p&gt;
&lt;p&gt;涉及代码：similarity.py、args.py&lt;/p&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;p&gt;1、使用本模型进行文本相似性训练，保存模型文件至相应目录下&lt;/p&gt;
&lt;p&gt;2、根据实际情况，修改args.py中的参数，参数说明如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;模型目录，存放ckpt文件&lt;/span&gt;
model_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.join(file_path, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;albert_lcqmc_checkpoints/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;config文件，存放模型的json文件&lt;/span&gt;
config_name &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.join(file_path, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;albert_config/albert_config_tiny.json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;ckpt文件名称&lt;/span&gt;
ckpt_name &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.join(model_dir, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;model.ckpt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;输出文件目录，训练时的模型输出目录&lt;/span&gt;
output_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.join(file_path, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;albert_lcqmc_checkpoints/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;vocab文件目录&lt;/span&gt;
vocab_file &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.join(file_path, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;albert_config/vocab.txt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;数据目录，训练使用的数据集存放目录&lt;/span&gt;
data_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.join(file_path, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;data/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本例中的文件结构为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;|__args.py

|__similarity.py

|__data

|__albert_config

|__albert_lcqmc_checkpoints

|__lcqmc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3、修改用户输入单词&lt;/p&gt;
&lt;p&gt;打开similarity.py，最底部如下代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;__name__&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__main__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:
    sim &lt;span class="pl-k"&gt;=&lt;/span&gt; BertSim()
    sim.start_model()
    sim.predict_sentences([(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我喜欢妈妈做的汤&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;妈妈做的汤我很喜欢喝&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中sim.start_model()表示加载模型，sim.predict_sentences的输入为一个元组数组，元组中包含两个元素分别为需要判定相似的句子。&lt;/p&gt;
&lt;p&gt;4、运行python文件：similarity.py&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-支持的序列长度与批次大小的关系12g显存-trade-off-between-batch-size-and-sequence-length" class="anchor" aria-hidden="true" href="#支持的序列长度与批次大小的关系12g显存-trade-off-between-batch-size-and-sequence-length"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;支持的序列长度与批次大小的关系,12G显存 Trade off between batch Size and sequence length&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;System&lt;/th&gt;
&lt;th&gt;Seq Length&lt;/th&gt;
&lt;th&gt;Max Batch Size&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;albert-base&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;256&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;384&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;512&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;albert-large&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;256&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;384&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;512&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;albert-xlarge&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-学习曲线-training-loss-of-xlarge-of-albert_zh" class="anchor" aria-hidden="true" href="#学习曲线-training-loss-of-xlarge-of-albert_zh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;学习曲线 Training Loss of xlarge of albert_zh&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/brightmart/albert_zh/blob/master/resources/xlarge_loss.jpg"&gt;&lt;img src="https://github.com/brightmart/albert_zh/raw/master/resources/xlarge_loss.jpg" width="80%" height="40%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-所有的参数-parameters-of-albert_xlarge" class="anchor" aria-hidden="true" href="#所有的参数-parameters-of-albert_xlarge"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;所有的参数 Parameters of albert_xlarge&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/brightmart/albert_zh/blob/master/resources/albert_large_zh_parameters.jpg"&gt;&lt;img src="https://github.com/brightmart/albert_zh/raw/master/resources/albert_large_zh_parameters.jpg" width="80%" height="40%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-技术交流与问题讨论qq群-836811304-join-us-on-qq-group" class="anchor" aria-hidden="true" href="#技术交流与问题讨论qq群-836811304-join-us-on-qq-group"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术交流与问题讨论QQ群: 836811304 Join us on QQ group&lt;/h4&gt;
&lt;p&gt;If you have any question, you can raise an issue, or send me an email: &lt;a href="mailto:brightmart@hotmail.com"&gt;brightmart@hotmail.com&lt;/a&gt;;&lt;/p&gt;
&lt;p&gt;Currently how to use PyTorch version of albert is not clear yet, if you know how to do that, just email us or open an issue.&lt;/p&gt;
&lt;p&gt;You can also send pull request to report you performance on your task or add methods on how to load models for PyTorch and so on.&lt;/p&gt;
&lt;p&gt;If you have ideas for generate best performance pre-training Chinese model, please also let me know.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-research-supported-with-cloud-tpus-from-googles-tensorflow-research-cloud-tfrc" class="anchor" aria-hidden="true" href="#research-supported-with-cloud-tpus-from-googles-tensorflow-research-cloud-tfrc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Research supported with Cloud TPUs from Google's TensorFlow Research Cloud (TFRC)&lt;/h5&gt;
&lt;h2&gt;&lt;a id="user-content-cite-us" class="anchor" aria-hidden="true" href="#cite-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cite Us&lt;/h2&gt;
&lt;p&gt;Bright Liang Xu, albert_zh, (2019), GitHub repository, &lt;a href="https://github.com/brightmart/albert_zh"&gt;https://github.com/brightmart/albert_zh&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;p&gt;1、&lt;a href="https://arxiv.org/pdf/1909.11942.pdf" rel="nofollow"&gt;ALBERT: A Lite BERT For Self-Supervised Learning Of Language Representations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;a href="https://arxiv.org/pdf/1810.04805.pdf" rel="nofollow"&gt;BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、&lt;a href="https://arxiv.org/abs/1907.10529" rel="nofollow"&gt;SpanBERT: Improving Pre-training by Representing and Predicting Spans&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4、&lt;a href="https://arxiv.org/pdf/1907.11692.pdf" rel="nofollow"&gt;RoBERTa: A Robustly Optimized BERT Pretraining Approach&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5、&lt;a href="https://arxiv.org/pdf/1904.00962.pdf" rel="nofollow"&gt;Large Batch Optimization for Deep Learning: Training BERT in 76 minutes(LAMB)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;6、&lt;a href="https://github.com/ymcui/LAMB_Optimizer_TF"&gt;LAMB Optimizer,TensorFlow version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;7、&lt;a href="http://baijiahao.baidu.com/s?id=1645712785366950083&amp;amp;wfr=spider&amp;amp;for=pc" rel="nofollow"&gt;预训练小模型也能拿下13项NLP任务，ALBERT三大改造登顶GLUE基准&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;8、 &lt;a href="https://github.com/lonePatient/albert_pytorch"&gt;albert_pytorch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9、&lt;a href="https://github.com/bojone/bert4keras"&gt;load albert with keras&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10、&lt;a href="https://github.com/kpe/bert-for-tf2"&gt;load albert with tf2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;11、&lt;a href="https://github.com/google-research/google-research/tree/master/albert"&gt;repo of albert from google&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;12、&lt;a href="https://github.com/chineseGLUE/chineseGLUE"&gt;chineseGLUE-中文任务基准测评：公开可用多个任务、基线模型、广泛测评与效果对比&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>brightmart</author><guid isPermaLink="false">https://github.com/brightmart/albert_zh</guid><pubDate>Wed, 13 Nov 2019 00:13:00 GMT</pubDate></item><item><title>30-seconds/30-seconds-of-code #14 in All Languages, This month</title><link>https://github.com/30-seconds/30-seconds-of-code</link><description>&lt;p&gt;&lt;i&gt;A curated collection of useful JavaScript snippets that you can understand in 30 seconds or less.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;[![Logo](/logo.png)](&lt;a href="https://30secondsofcode.org/" rel="nofollow"&gt;https://30secondsofcode.org/&lt;/a&gt;)

# 30 seconds of code

[![License](&lt;a href="https://img.shields.io/badge/license-CC0--1.0-blue.svg)](https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE" rel="nofollow"&gt;https://img.shields.io/badge/license-CC0--1.0-blue.svg)](https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE&lt;/a&gt;) [![npm Downloads](&lt;a href="https://img.shields.io/npm/dt/30-seconds-of-code.svg)](https://www.npmjs.com/package/30-seconds-of-code" rel="nofollow"&gt;https://img.shields.io/npm/dt/30-seconds-of-code.svg)](https://www.npmjs.com/package/30-seconds-of-code&lt;/a&gt;) [![npm Version](&lt;a href="https://img.shields.io/npm/v/30-seconds-of-code.svg)](https://www.npmjs.com/package/30-seconds-of-code" rel="nofollow"&gt;https://img.shields.io/npm/v/30-seconds-of-code.svg)](https://www.npmjs.com/package/30-seconds-of-code&lt;/a&gt;) [![Known Vulnerabilities](&lt;a href="https://snyk.io/test/github/30-seconds/30-seconds-of-code/badge.svg?targetFile=package.json)](https://snyk.io/test/github/30-seconds/30-seconds-of-code?targetFile=package.json" rel="nofollow"&gt;https://snyk.io/test/github/30-seconds/30-seconds-of-code/badge.svg?targetFile=package.json)](https://snyk.io/test/github/30-seconds/30-seconds-of-code?targetFile=package.json&lt;/a&gt;) [![Travis Build](&lt;a href="https://travis-ci.com/30-seconds/30-seconds-of-code.svg?branch=master)](https://travis-ci.com/30-seconds/30-seconds-of-code" rel="nofollow"&gt;https://travis-ci.com/30-seconds/30-seconds-of-code.svg?branch=master)](https://travis-ci.com/30-seconds/30-seconds-of-code&lt;/a&gt;) &amp;lt;br/&amp;gt;
[![Awesome](&lt;a href="https://awesome.re/badge.svg)](https://awesome.re" rel="nofollow"&gt;https://awesome.re/badge.svg)](https://awesome.re&lt;/a&gt;) [![ProductHunt](&lt;a href="https://img.shields.io/badge/producthunt-vote-orange.svg)](https://www.producthunt.com/posts/30-seconds-of-code" rel="nofollow"&gt;https://img.shields.io/badge/producthunt-vote-orange.svg)](https://www.producthunt.com/posts/30-seconds-of-code&lt;/a&gt;) [![js-semistandard-style](&lt;a href="https://img.shields.io/badge/code%20style-semistandard-brightgreen.svg)](https://github.com/Flet/semistandard" rel="nofollow"&gt;https://img.shields.io/badge/code%20style-semistandard-brightgreen.svg)](https://github.com/Flet/semistandard&lt;/a&gt;) [![PRs Welcome](&lt;a href="https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com" rel="nofollow"&gt;https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com&lt;/a&gt;)

&amp;gt; Curated collection of useful JavaScript snippets that you can understand in 30 seconds or less.

* Use &amp;lt;kbd&amp;gt;Ctrl&amp;lt;/kbd&amp;gt; + &amp;lt;kbd&amp;gt;F&amp;lt;/kbd&amp;gt; or &amp;lt;kbd&amp;gt;command&amp;lt;/kbd&amp;gt; + &amp;lt;kbd&amp;gt;F&amp;lt;/kbd&amp;gt; to search for a snippet.
* Contributions welcome, please read the [contribution guide](CONTRIBUTING.md).
* Snippets are written in ES6, use the [Babel transpiler](&lt;a href="https://babeljs.io/" rel="nofollow"&gt;https://babeljs.io/&lt;/a&gt;) to ensure backwards-compatibility.
* You can import these snippets into VSCode, by following the instructions found [here](&lt;a href="https://github.com/30-seconds/30-seconds-of-code/tree/master/vscode_snippets"&gt;https://github.com/30-seconds/30-seconds-of-code/tree/master/vscode_snippets&lt;/a&gt;).
* You can search, view and copy these snippets from a terminal, using the CLI application from [this repo](&lt;a href="https://github.com/sQVe/30s"&gt;https://github.com/sQVe/30s&lt;/a&gt;).
* If you want to follow 30-seconds-of-code on social media, you can find us on [Facebook](&lt;a href="https://www.facebook.com/30secondsofcode" rel="nofollow"&gt;https://www.facebook.com/30secondsofcode&lt;/a&gt;), [Instagram](&lt;a href="https://www.instagram.com/30secondsofcode" rel="nofollow"&gt;https://www.instagram.com/30secondsofcode&lt;/a&gt;) and [Twitter](&lt;a href="https://twitter.com/30secondsofcode" rel="nofollow"&gt;https://twitter.com/30secondsofcode&lt;/a&gt;).

#### Related projects

* [30 Seconds of CSS](&lt;a href="https://30-seconds.github.io/30-seconds-of-css/" rel="nofollow"&gt;https://30-seconds.github.io/30-seconds-of-css/&lt;/a&gt;)
* [30 Seconds of Interviews](&lt;a href="https://30secondsofinterviews.org/" rel="nofollow"&gt;https://30secondsofinterviews.org/&lt;/a&gt;)
* [30 Seconds of React](&lt;a href="https://github.com/30-seconds/30-seconds-of-react"&gt;https://github.com/30-seconds/30-seconds-of-react&lt;/a&gt;)
* [30 Seconds of Python](&lt;a href="https://github.com/30-seconds/30-seconds-of-python-code"&gt;https://github.com/30-seconds/30-seconds-of-python-code&lt;/a&gt;)
* [30 Seconds of PHP](&lt;a href="https://github.com/30-seconds/30-seconds-of-php-code"&gt;https://github.com/30-seconds/30-seconds-of-php-code&lt;/a&gt;)
* [30 Seconds of Knowledge](&lt;a href="https://chrome.google.com/webstore/detail/30-seconds-of-knowledge/mmgplondnjekobonklacmemikcnhklla" rel="nofollow"&gt;https://chrome.google.com/webstore/detail/30-seconds-of-knowledge/mmgplondnjekobonklacmemikcnhklla&lt;/a&gt;)
* [30 Seconds of Kotlin](&lt;a href="https://github.com/IvanMwiruki/30-seconds-of-kotlin"&gt;https://github.com/IvanMwiruki/30-seconds-of-kotlin&lt;/a&gt;) _(unofficial)_

#### Package

&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; **NOTICE:** A few of our snippets are not yet optimized for production (see disclaimers for individual snippet issues).

You can find a package with all the snippets on [npm](&lt;a href="https://www.npmjs.com/package/30-seconds-of-code" rel="nofollow"&gt;https://www.npmjs.com/package/30-seconds-of-code&lt;/a&gt;).

```bash
# With npm
npm install 30-seconds-of-code

# With yarn
yarn add 30-seconds-of-code
```

[CDN link](&lt;a href="https://unpkg.com/30-seconds-of-code/" rel="nofollow"&gt;https://unpkg.com/30-seconds-of-code/&lt;/a&gt;)

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Details&amp;lt;/summary&amp;gt;

**Browser**

```html
&amp;lt;script src="&lt;a href="https://unpkg.com/30-seconds-of-code@1/dist/_30s.es5.min.js&amp;quot;&amp;gt;&amp;lt;/script" rel="nofollow"&gt;https://unpkg.com/30-seconds-of-code@1/dist/_30s.es5.min.js"&amp;gt;&amp;lt;/script&lt;/a&gt;&amp;gt;
&amp;lt;script&amp;gt;
  _30s.average(1, 2, 3);
&amp;lt;/script&amp;gt;
```

**Node**

```js
// CommonJS
const _30s = require('30-seconds-of-code');
_30s.average(1, 2, 3);

// ES Modules
import _30s from '30-seconds-of-code';
_30s.average(1, 2, 3);
```

&amp;lt;/details&amp;gt;

## Contents

### &lt;g-emoji class="g-emoji" alias="electric_plug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50c.png"&gt;🔌&lt;/g-emoji&gt; Adapter

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`ary`](#ary)
* [`call`](#call)
* [`collectInto`](#collectinto)
* [`flip`](#flip)
* [`over`](#over)
* [`overArgs`](#overargs)
* [`pipeAsyncFunctions`](#pipeasyncfunctions)
* [`pipeFunctions`](#pipefunctions)
* [`promisify`](#promisify)
* [`rearg`](#rearg)
* [`spreadOver`](#spreadover)
* [`unary`](#unary)

&amp;lt;/details&amp;gt;

### &lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt; Array

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`all`](#all)
* [`allEqual`](#allequal)
* [`any`](#any)
* [`arrayToCSV`](#arraytocsv)
* [`bifurcate`](#bifurcate)
* [`bifurcateBy`](#bifurcateby)
* [`chunk`](#chunk)
* [`compact`](#compact)
* [`countBy`](#countby)
* [`countOccurrences`](#countoccurrences)
* [`deepFlatten`](#deepflatten)
* [`difference`](#difference)
* [`differenceBy`](#differenceby)
* [`differenceWith`](#differencewith)
* [`drop`](#drop)
* [`dropRight`](#dropright)
* [`dropRightWhile`](#droprightwhile)
* [`dropWhile`](#dropwhile)
* [`everyNth`](#everynth)
* [`filterFalsy`](#filterfalsy)
* [`filterNonUnique`](#filternonunique)
* [`filterNonUniqueBy`](#filternonuniqueby)
* [`findLast`](#findlast)
* [`findLastIndex`](#findlastindex)
* [`flatten`](#flatten)
* [`forEachRight`](#foreachright)
* [`groupBy`](#groupby)
* [`head`](#head)
* [`includesAll`](#includesall)
* [`includesAny`](#includesany)
* [`indexOfAll`](#indexofall)
* [`initial`](#initial)
* [`initialize2DArray`](#initialize2darray)
* [`initializeArrayWithRange`](#initializearraywithrange)
* [`initializeArrayWithRangeRight`](#initializearraywithrangeright)
* [`initializeArrayWithValues`](#initializearraywithvalues)
* [`initializeNDArray`](#initializendarray)
* [`intersection`](#intersection)
* [`intersectionBy`](#intersectionby)
* [`intersectionWith`](#intersectionwith)
* [`isSorted`](#issorted)
* [`join`](#join)
* [`JSONtoCSV`](#jsontocsv-)
* [`last`](#last)
* [`longestItem`](#longestitem)
* [`mapObject`](#mapobject-)
* [`maxN`](#maxn)
* [`minN`](#minn)
* [`none`](#none)
* [`nthElement`](#nthelement)
* [`offset`](#offset)
* [`partition`](#partition)
* [`permutations`](#permutations-)
* [`pull`](#pull)
* [`pullAtIndex`](#pullatindex-)
* [`pullAtValue`](#pullatvalue-)
* [`pullBy`](#pullby-)
* [`reducedFilter`](#reducedfilter)
* [`reduceSuccessive`](#reducesuccessive)
* [`reduceWhich`](#reducewhich)
* [`reject`](#reject)
* [`remove`](#remove)
* [`sample`](#sample)
* [`sampleSize`](#samplesize)
* [`shank`](#shank)
* [`shuffle`](#shuffle)
* [`similarity`](#similarity)
* [`sortedIndex`](#sortedindex)
* [`sortedIndexBy`](#sortedindexby)
* [`sortedLastIndex`](#sortedlastindex)
* [`sortedLastIndexBy`](#sortedlastindexby)
* [`stableSort`](#stablesort-)
* [`symmetricDifference`](#symmetricdifference)
* [`symmetricDifferenceBy`](#symmetricdifferenceby)
* [`symmetricDifferenceWith`](#symmetricdifferencewith)
* [`tail`](#tail)
* [`take`](#take)
* [`takeRight`](#takeright)
* [`takeRightWhile`](#takerightwhile)
* [`takeWhile`](#takewhile)
* [`toHash`](#tohash)
* [`union`](#union)
* [`unionBy`](#unionby)
* [`unionWith`](#unionwith)
* [`uniqueElements`](#uniqueelements)
* [`uniqueElementsBy`](#uniqueelementsby)
* [`uniqueElementsByRight`](#uniqueelementsbyright)
* [`uniqueSymmetricDifference`](#uniquesymmetricdifference)
* [`unzip`](#unzip)
* [`unzipWith`](#unzipwith-)
* [`without`](#without)
* [`xProd`](#xprod)
* [`zip`](#zip)
* [`zipObject`](#zipobject)
* [`zipWith`](#zipwith-)

&amp;lt;/details&amp;gt;

### &lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt; Browser

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`arrayToHtmlList`](#arraytohtmllist)
* [`bottomVisible`](#bottomvisible)
* [`copyToClipboard`](#copytoclipboard-)
* [`counter`](#counter-)
* [`createElement`](#createelement)
* [`createEventHub`](#createeventhub-)
* [`currentURL`](#currenturl)
* [`detectDeviceType`](#detectdevicetype)
* [`elementContains`](#elementcontains)
* [`elementIsVisibleInViewport`](#elementisvisibleinviewport-)
* [`formToObject`](#formtoobject)
* [`getImages`](#getimages)
* [`getScrollPosition`](#getscrollposition)
* [`getStyle`](#getstyle)
* [`hasClass`](#hasclass)
* [`hashBrowser`](#hashbrowser-)
* [`hide`](#hide)
* [`httpsRedirect`](#httpsredirect)
* [`insertAfter`](#insertafter)
* [`insertBefore`](#insertbefore)
* [`isBrowserTabFocused`](#isbrowsertabfocused)
* [`nodeListToArray`](#nodelisttoarray)
* [`observeMutations`](#observemutations-)
* [`off`](#off)
* [`on`](#on)
* [`onUserInputChange`](#onuserinputchange-)
* [`prefix`](#prefix)
* [`recordAnimationFrames`](#recordanimationframes)
* [`redirect`](#redirect)
* [`runAsync`](#runasync-)
* [`scrollToTop`](#scrolltotop)
* [`serializeForm`](#serializeform)
* [`setStyle`](#setstyle)
* [`show`](#show)
* [`smoothScroll`](#smoothscroll)
* [`toggleClass`](#toggleclass)
* [`triggerEvent`](#triggerevent)
* [`UUIDGeneratorBrowser`](#uuidgeneratorbrowser)

&amp;lt;/details&amp;gt;

### &lt;g-emoji class="g-emoji" alias="stopwatch" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/23f1.png"&gt;⏱️&lt;/g-emoji&gt; Date

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`dayOfYear`](#dayofyear)
* [`formatDuration`](#formatduration)
* [`getColonTimeFromDate`](#getcolontimefromdate)
* [`getDaysDiffBetweenDates`](#getdaysdiffbetweendates)
* [`getMeridiemSuffixOfInteger`](#getmeridiemsuffixofinteger)
* [`isAfterDate`](#isafterdate)
* [`isBeforeDate`](#isbeforedate)
* [`isSameDate`](#issamedate)
* [`isWeekday`](#isweekday)
* [`isWeekend`](#isweekend)
* [`maxDate`](#maxdate)
* [`minDate`](#mindate)
* [`tomorrow`](#tomorrow)
* [`yesterday`](#yesterday)

&amp;lt;/details&amp;gt;

### &lt;g-emoji class="g-emoji" alias="control_knobs" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f39b.png"&gt;🎛️&lt;/g-emoji&gt; Function

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`attempt`](#attempt)
* [`bind`](#bind)
* [`bindKey`](#bindkey)
* [`chainAsync`](#chainasync)
* [`checkProp`](#checkprop)
* [`compose`](#compose)
* [`composeRight`](#composeright)
* [`converge`](#converge)
* [`curry`](#curry)
* [`debounce`](#debounce)
* [`defer`](#defer)
* [`delay`](#delay)
* [`functionName`](#functionname)
* [`hz`](#hz)
* [`memoize`](#memoize-)
* [`negate`](#negate)
* [`once`](#once)
* [`partial`](#partial)
* [`partialRight`](#partialright)
* [`runPromisesInSeries`](#runpromisesinseries)
* [`sleep`](#sleep)
* [`throttle`](#throttle-)
* [`times`](#times)
* [`uncurry`](#uncurry)
* [`unfold`](#unfold)
* [`when`](#when)

&amp;lt;/details&amp;gt;

### &lt;g-emoji class="g-emoji" alias="heavy_division_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2797.png"&gt;➗&lt;/g-emoji&gt; Math

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`approximatelyEqual`](#approximatelyequal)
* [`average`](#average)
* [`averageBy`](#averageby)
* [`binomialCoefficient`](#binomialcoefficient)
* [`clampNumber`](#clampnumber)
* [`degreesToRads`](#degreestorads)
* [`digitize`](#digitize)
* [`distance`](#distance)
* [`elo`](#elo-)
* [`factorial`](#factorial)
* [`fibonacci`](#fibonacci)
* [`gcd`](#gcd)
* [`geometricProgression`](#geometricprogression)
* [`hammingDistance`](#hammingdistance)
* [`inRange`](#inrange)
* [`isDivisible`](#isdivisible)
* [`isEven`](#iseven)
* [`isNegativeZero`](#isnegativezero)
* [`isOdd`](#isodd)
* [`isPrime`](#isprime)
* [`lcm`](#lcm)
* [`luhnCheck`](#luhncheck-)
* [`mapNumRange`](#mapnumrange)
* [`maxBy`](#maxby)
* [`median`](#median)
* [`midpoint`](#midpoint)
* [`minBy`](#minby)
* [`percentile`](#percentile)
* [`powerset`](#powerset)
* [`primes`](#primes)
* [`radsToDegrees`](#radstodegrees)
* [`randomIntArrayInRange`](#randomintarrayinrange)
* [`randomIntegerInRange`](#randomintegerinrange)
* [`randomNumberInRange`](#randomnumberinrange)
* [`round`](#round)
* [`sdbm`](#sdbm)
* [`standardDeviation`](#standarddeviation)
* [`sum`](#sum)
* [`sumBy`](#sumby)
* [`sumPower`](#sumpower)
* [`toSafeInteger`](#tosafeinteger)
* [`vectorDistance`](#vectordistance)

&amp;lt;/details&amp;gt;

### &lt;g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png"&gt;📦&lt;/g-emoji&gt; Node

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`atob`](#atob)
* [`btoa`](#btoa)
* [`colorize`](#colorize)
* [`createDirIfNotExists`](#createdirifnotexists)
* [`hasFlags`](#hasflags)
* [`hashNode`](#hashnode)
* [`isDuplexStream`](#isduplexstream)
* [`isReadableStream`](#isreadablestream)
* [`isStream`](#isstream)
* [`isTravisCI`](#istravisci)
* [`isWritableStream`](#iswritablestream)
* [`JSONToFile`](#jsontofile)
* [`readFileLines`](#readfilelines)
* [`untildify`](#untildify)
* [`UUIDGeneratorNode`](#uuidgeneratornode)

&amp;lt;/details&amp;gt;

### &lt;g-emoji class="g-emoji" alias="card_file_box" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5c3.png"&gt;🗃️&lt;/g-emoji&gt; Object

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`bindAll`](#bindall)
* [`deepClone`](#deepclone)
* [`deepFreeze`](#deepfreeze)
* [`deepGet`](#deepget)
* [`deepMapKeys`](#deepmapkeys-)
* [`defaults`](#defaults)
* [`dig`](#dig)
* [`equals`](#equals-)
* [`findKey`](#findkey)
* [`findLastKey`](#findlastkey)
* [`flattenObject`](#flattenobject)
* [`forOwn`](#forown)
* [`forOwnRight`](#forownright)
* [`functions`](#functions)
* [`get`](#get)
* [`hasKey`](#haskey)
* [`invertKeyValues`](#invertkeyvalues)
* [`lowercaseKeys`](#lowercasekeys)
* [`mapKeys`](#mapkeys)
* [`mapValues`](#mapvalues)
* [`matches`](#matches)
* [`matchesWith`](#matcheswith)
* [`merge`](#merge)
* [`nest`](#nest)
* [`objectFromPairs`](#objectfrompairs)
* [`objectToPairs`](#objecttopairs)
* [`omit`](#omit)
* [`omitBy`](#omitby)
* [`orderBy`](#orderby)
* [`pick`](#pick)
* [`pickBy`](#pickby)
* [`renameKeys`](#renamekeys)
* [`shallowClone`](#shallowclone)
* [`size`](#size)
* [`transform`](#transform)
* [`truthCheckCollection`](#truthcheckcollection)
* [`unflattenObject`](#unflattenobject-)

&amp;lt;/details&amp;gt;

### &lt;g-emoji class="g-emoji" alias="scroll" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png"&gt;📜&lt;/g-emoji&gt; String

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`byteSize`](#bytesize)
* [`capitalize`](#capitalize)
* [`capitalizeEveryWord`](#capitalizeeveryword)
* [`compactWhitespace`](#compactwhitespace)
* [`CSVToArray`](#csvtoarray)
* [`CSVToJSON`](#csvtojson-)
* [`decapitalize`](#decapitalize)
* [`escapeHTML`](#escapehtml)
* [`escapeRegExp`](#escaperegexp)
* [`fromCamelCase`](#fromcamelcase)
* [`indentString`](#indentstring)
* [`isAbsoluteURL`](#isabsoluteurl)
* [`isAnagram`](#isanagram)
* [`isLowerCase`](#islowercase)
* [`isUpperCase`](#isuppercase)
* [`mapString`](#mapstring)
* [`mask`](#mask)
* [`pad`](#pad)
* [`palindrome`](#palindrome)
* [`pluralize`](#pluralize)
* [`removeNonASCII`](#removenonascii)
* [`reverseString`](#reversestring)
* [`sortCharactersInString`](#sortcharactersinstring)
* [`splitLines`](#splitlines)
* [`stringPermutations`](#stringpermutations-)
* [`stripHTMLTags`](#striphtmltags)
* [`toCamelCase`](#tocamelcase)
* [`toKebabCase`](#tokebabcase)
* [`toSnakeCase`](#tosnakecase)
* [`toTitleCase`](#totitlecase)
* [`truncateString`](#truncatestring)
* [`unescapeHTML`](#unescapehtml)
* [`URLJoin`](#urljoin-)
* [`words`](#words)

&amp;lt;/details&amp;gt;

### &lt;g-emoji class="g-emoji" alias="page_with_curl" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c3.png"&gt;📃&lt;/g-emoji&gt; Type

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`getType`](#gettype)
* [`is`](#is)
* [`isArrayLike`](#isarraylike)
* [`isBoolean`](#isboolean)
* [`isEmpty`](#isempty)
* [`isFunction`](#isfunction)
* [`isNil`](#isnil)
* [`isNull`](#isnull)
* [`isNumber`](#isnumber)
* [`isObject`](#isobject)
* [`isObjectLike`](#isobjectlike)
* [`isPlainObject`](#isplainobject)
* [`isPrimitive`](#isprimitive)
* [`isPromiseLike`](#ispromiselike)
* [`isString`](#isstring)
* [`isSymbol`](#issymbol)
* [`isUndefined`](#isundefined)
* [`isValidJSON`](#isvalidjson)

&amp;lt;/details&amp;gt;

### &lt;g-emoji class="g-emoji" alias="wrench" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png"&gt;🔧&lt;/g-emoji&gt; Utility

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;View contents&amp;lt;/summary&amp;gt;

* [`castArray`](#castarray)
* [`cloneRegExp`](#cloneregexp)
* [`coalesce`](#coalesce)
* [`coalesceFactory`](#coalescefactory)
* [`extendHex`](#extendhex)
* [`getURLParameters`](#geturlparameters)
* [`hexToRGB`](#hextorgb-)
* [`httpGet`](#httpget)
* [`httpPost`](#httppost)
* [`isBrowser`](#isbrowser)
* [`mostPerformant`](#mostperformant)
* [`nthArg`](#ntharg)
* [`objectToQueryString`](#objecttoquerystring)
* [`parseCookie`](#parsecookie)
* [`prettyBytes`](#prettybytes-)
* [`randomHexColorCode`](#randomhexcolorcode)
* [`RGBToHex`](#rgbtohex)
* [`serializeCookie`](#serializecookie)
* [`timeTaken`](#timetaken)
* [`toCurrency`](#tocurrency)
* [`toDecimalMark`](#todecimalmark)
* [`toOrdinalSuffix`](#toordinalsuffix)
* [`validateNumber`](#validatenumber)
* [`yesNo`](#yesno)

&amp;lt;/details&amp;gt;


---

## &lt;g-emoji class="g-emoji" alias="electric_plug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50c.png"&gt;🔌&lt;/g-emoji&gt; Adapter


### ary

Creates a function that accepts up to `n` arguments, ignoring any additional arguments.

Call the provided function, `fn`, with up to `n` arguments, using `Array.prototype.slice(0,n)` and the spread operator (`...`).

```js
const ary = (fn, n) =&amp;gt; (...args) =&amp;gt; fn(...args.slice(0, n));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const firstTwoMax = ary(Math.max, 2);
[[2, 6, 'a'], [6, 4, 8], [10]].map(x =&amp;gt; firstTwoMax(...x)); // [6, 6, 10]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### call

Given a key and a set of arguments, call them when given a context. Primarily useful in composition.

Use a closure to call a stored key with stored arguments.

```js
const call = (key, ...args) =&amp;gt; context =&amp;gt; context[key](...args);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
Promise.resolve([1, 2, 3])
  .then(call('map', x =&amp;gt; 2 * x))
  .then(console.log); // [ 2, 4, 6 ]
const map = call.bind(null, 'map');
Promise.resolve([1, 2, 3])
  .then(map(x =&amp;gt; 2 * x))
  .then(console.log); // [ 2, 4, 6 ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### collectInto

Changes a function that accepts an array into a variadic function.

Given a function, return a closure that collects all inputs into an array-accepting function.

```js
const collectInto = fn =&amp;gt; (...args) =&amp;gt; fn(args);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const Pall = collectInto(Promise.all.bind(Promise));
let p1 = Promise.resolve(1);
let p2 = Promise.resolve(2);
let p3 = new Promise(resolve =&amp;gt; setTimeout(resolve, 2000, 3));
Pall(p1, p2, p3).then(console.log); // [1, 2, 3] (after about 2 seconds)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### flip

Flip takes a function as an argument, then makes the first argument the last.

Return a closure that takes variadic inputs, and splices the last argument to make it the first argument before applying the rest.

```js
const flip = fn =&amp;gt; (first, ...rest) =&amp;gt; fn(...rest, first);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
let a = { name: 'John Smith' };
let b = {};
const mergeFrom = flip(Object.assign);
let mergePerson = mergeFrom.bind(null, a);
mergePerson(b); // == b
b = {};
Object.assign(b, a); // == b
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### over

Creates a function that invokes each provided function with the arguments it receives and returns the results.

Use `Array.prototype.map()` and `Function.prototype.apply()` to apply each function to the given arguments.

```js
const over = (...fns) =&amp;gt; (...args) =&amp;gt; fns.map(fn =&amp;gt; fn.apply(null, args));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const minMax = over(Math.min, Math.max);
minMax(1, 2, 3, 4, 5); // [1,5]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### overArgs

Creates a function that invokes the provided function with its arguments transformed.

Use `Array.prototype.map()` to apply `transforms` to `args` in combination with the spread operator (`...`) to pass the transformed arguments to `fn`.

```js
const overArgs = (fn, transforms) =&amp;gt; (...args) =&amp;gt; fn(...args.map((val, i) =&amp;gt; transforms[i](val)));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const square = n =&amp;gt; n * n;
const double = n =&amp;gt; n * 2;
const fn = overArgs((x, y) =&amp;gt; [x, y], [square, double]);
fn(9, 3); // [81, 6]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### pipeAsyncFunctions

Performs left-to-right function composition for asynchronous functions.

Use `Array.prototype.reduce()` with the spread operator (`...`) to perform left-to-right function composition using `Promise.then()`.
The functions can return a combination of: simple values, `Promise`'s, or they can be defined as `async` ones returning through `await`.
All functions must be unary.

```js
const pipeAsyncFunctions = (...fns) =&amp;gt; arg =&amp;gt; fns.reduce((p, f) =&amp;gt; p.then(f), Promise.resolve(arg));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const sum = pipeAsyncFunctions(
  x =&amp;gt; x + 1,
  x =&amp;gt; new Promise(resolve =&amp;gt; setTimeout(() =&amp;gt; resolve(x + 2), 1000)),
  x =&amp;gt; x + 3,
  async x =&amp;gt; (await x) + 4
);
(async() =&amp;gt; {
  console.log(await sum(5)); // 15 (after one second)
})();
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### pipeFunctions

Performs left-to-right function composition.

Use `Array.prototype.reduce()` with the spread operator (`...`) to perform left-to-right function composition.
The first (leftmost) function can accept one or more arguments; the remaining functions must be unary.

```js
const pipeFunctions = (...fns) =&amp;gt; fns.reduce((f, g) =&amp;gt; (...args) =&amp;gt; g(f(...args)));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const add5 = x =&amp;gt; x + 5;
const multiply = (x, y) =&amp;gt; x * y;
const multiplyAndAdd5 = pipeFunctions(multiply, add5);
multiplyAndAdd5(5, 2); // 15
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### promisify

Converts an asynchronous function to return a promise.

*In Node 8+, you can use [`util.promisify`](&lt;a href="https://nodejs.org/api/util.html#util_util_promisify_original)*" rel="nofollow"&gt;https://nodejs.org/api/util.html#util_util_promisify_original)*&lt;/a&gt;

Use currying to return a function returning a `Promise` that calls the original function.
Use the `...rest` operator to pass in all the parameters.

```js
const promisify = func =&amp;gt; (...args) =&amp;gt;
  new Promise((resolve, reject) =&amp;gt;
    func(...args, (err, result) =&amp;gt; (err ? reject(err) : resolve(result)))
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const delay = promisify((d, cb) =&amp;gt; setTimeout(cb, d));
delay(2000).then(() =&amp;gt; console.log('Hi!')); // // Promise resolves after 2s
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### rearg

Creates a function that invokes the provided function with its arguments arranged according to the specified indexes.

Use `Array.prototype.map()` to reorder arguments based on `indexes` in combination with the spread operator (`...`) to pass the transformed arguments to `fn`.

```js
const rearg = (fn, indexes) =&amp;gt; (...args) =&amp;gt; fn(...indexes.map(i =&amp;gt; args[i]));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
var rearged = rearg(
  function(a, b, c) {
    return [a, b, c];
  },
  [2, 0, 1]
);
rearged('b', 'c', 'a'); // ['a', 'b', 'c']
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### spreadOver

Takes a variadic function and returns a closure that accepts an array of arguments to map to the inputs of the function.

Use closures and the spread operator (`...`) to map the array of arguments to the inputs of the function.

```js
const spreadOver = fn =&amp;gt; argsArr =&amp;gt; fn(...argsArr);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const arrayMax = spreadOver(Math.max);
arrayMax([1, 2, 3]); // 3
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### unary

Creates a function that accepts up to one argument, ignoring any additional arguments.

Call the provided function, `fn`, with just the first argument given.

```js
const unary = fn =&amp;gt; val =&amp;gt; fn(val);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
['6', '8', '10'].map(unary(parseInt)); // [6, 8, 10]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

---

## &lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt; Array


### all

Returns `true` if the provided predicate function returns `true` for all elements in a collection, `false` otherwise.

Use `Array.prototype.every()` to test if all elements in the collection return `true` based on `fn`.
Omit the second argument, `fn`, to use `Boolean` as a default.

```js
const all = (arr, fn = Boolean) =&amp;gt; arr.every(fn);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
all([4, 2, 3], x =&amp;gt; x &amp;gt; 1); // true
all([1, 2, 3]); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### allEqual

Check if all elements in an array are equal.

Use `Array.prototype.every()` to check if all the elements of the array are the same as the first one.
Elements in the array are compared using the strict comparison operator, which does not account for `NaN` self-inequality.

```js
const allEqual = arr =&amp;gt; arr.every(val =&amp;gt; val === arr[0]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
allEqual([1, 2, 3, 4, 5, 6]); // false
allEqual([1, 1, 1, 1]); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### any

Returns `true` if the provided predicate function returns `true` for at least one element in a collection, `false` otherwise.

Use `Array.prototype.some()` to test if any elements in the collection return `true` based on `fn`.
Omit the second argument, `fn`, to use `Boolean` as a default.

```js
const any = (arr, fn = Boolean) =&amp;gt; arr.some(fn);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
any([0, 1, 2, 0], x =&amp;gt; x &amp;gt;= 2); // true
any([0, 0, 1, 0]); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### arrayToCSV

Converts a 2D array to a comma-separated values (CSV) string.

Use `Array.prototype.map()` and `Array.prototype.join(delimiter)` to combine individual 1D arrays (rows) into strings.
Use `Array.prototype.join('\n')` to combine all rows into a CSV string, separating each row with a newline.
Omit the second argument, `delimiter`, to use a default delimiter of `,`.

```js
const arrayToCSV = (arr, delimiter = ',') =&amp;gt;
  arr
    .map(v =&amp;gt; v.map(x =&amp;gt; (isNaN(x) ? `"${x.replace(/"/g, '""')}"` : x)).join(delimiter))
    .join('\n');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
arrayToCSV([['a', 'b'], ['c', 'd']]); // '"a","b"\n"c","d"'
arrayToCSV([['a', 'b'], ['c', 'd']], ';'); // '"a";"b"\n"c";"d"'
arrayToCSV([['a', '"b" great'], ['c', 3.1415]]); // '"a","""b"" great"\n"c",3.1415'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### bifurcate

Splits values into two groups. If an element in `filter` is truthy, the corresponding element in the collection belongs to the first group; otherwise, it belongs to the second group.

Use `Array.prototype.reduce()` and `Array.prototype.push()` to add elements to groups, based on `filter`.

```js
const bifurcate = (arr, filter) =&amp;gt;
  arr.reduce((acc, val, i) =&amp;gt; (acc[filter[i] ? 0 : 1].push(val), acc), [[], []]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
bifurcate(['beep', 'boop', 'foo', 'bar'], [true, true, false, true]); // [ ['beep', 'boop', 'bar'], ['foo'] ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### bifurcateBy

Splits values into two groups according to a predicate function, which specifies which group an element in the input collection belongs to. If the predicate function returns a truthy value, the collection element belongs to the first group; otherwise, it belongs to the second group.

Use `Array.prototype.reduce()` and `Array.prototype.push()` to add elements to groups, based on the value returned by `fn` for each element.

```js
const bifurcateBy = (arr, fn) =&amp;gt;
  arr.reduce((acc, val, i) =&amp;gt; (acc[fn(val, i) ? 0 : 1].push(val), acc), [[], []]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
bifurcateBy(['beep', 'boop', 'foo', 'bar'], x =&amp;gt; x[0] === 'b'); // [ ['beep', 'boop', 'bar'], ['foo'] ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### chunk

Chunks an array into smaller arrays of a specified size.

Use `Array.from()` to create a new array, that fits the number of chunks that will be produced.
Use `Array.prototype.slice()` to map each element of the new array to a chunk the length of `size`.
If the original array can't be split evenly, the final chunk will contain the remaining elements.

```js
const chunk = (arr, size) =&amp;gt;
  Array.from({ length: Math.ceil(arr.length / size) }, (v, i) =&amp;gt;
    arr.slice(i * size, i * size + size)
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
chunk([1, 2, 3, 4, 5], 2); // [[1,2],[3,4],[5]]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### compact

Removes falsy values from an array.

Use `Array.prototype.filter()` to filter out falsy values (`false`, `null`, `0`, `""`, `undefined`, and `NaN`).

```js
const compact = arr =&amp;gt; arr.filter(Boolean);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
compact([0, 1, false, 2, '', 3, 'a', 'e' * 23, NaN, 's', 34]); // [ 1, 2, 3, 'a', 's', 34 ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### countBy

Groups the elements of an array based on the given function and returns the count of elements in each group.

Use `Array.prototype.map()` to map the values of an array to a function or property name.
Use `Array.prototype.reduce()` to create an object, where the keys are produced from the mapped results.

```js
const countBy = (arr, fn) =&amp;gt;
  arr.map(typeof fn === 'function' ? fn : val =&amp;gt; val[fn]).reduce((acc, val) =&amp;gt; {
    acc[val] = (acc[val] || 0) + 1;
    return acc;
  }, {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
countBy([6.1, 4.2, 6.3], Math.floor); // {4: 1, 6: 2}
countBy(['one', 'two', 'three'], 'length'); // {3: 2, 5: 1}
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### countOccurrences

Counts the occurrences of a value in an array.

Use `Array.prototype.reduce()` to increment a counter each time you encounter the specific value inside the array.

```js
const countOccurrences = (arr, val) =&amp;gt; arr.reduce((a, v) =&amp;gt; (v === val ? a + 1 : a), 0);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
countOccurrences([1, 1, 2, 1, 2, 3], 1); // 3
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### deepFlatten

Deep flattens an array.

Use recursion.
Use `Array.prototype.concat()` with an empty array (`[]`) and the spread operator (`...`) to flatten an array.
Recursively flatten each element that is an array.

```js
const deepFlatten = arr =&amp;gt; [].concat(...arr.map(v =&amp;gt; (Array.isArray(v) ? deepFlatten(v) : v)));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
deepFlatten([1, [2], [[3], 4], 5]); // [1,2,3,4,5]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### difference

Returns the difference between two arrays.

Create a `Set` from `b`, then use `Array.prototype.filter()` on `a` to only keep values not contained in `b`.

```js
const difference = (a, b) =&amp;gt; {
  const s = new Set(b);
  return a.filter(x =&amp;gt; !s.has(x));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
difference([1, 2, 3], [1, 2, 4]); // [3]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### differenceBy

Returns the difference between two arrays, after applying the provided function to each array element of both.

Create a `Set` by applying `fn` to each element in `b`, then use `Array.prototype.map()` to apply `fn` to each element in `a`, then `Array.prototype.filter()`

```js
const differenceBy = (a, b, fn) =&amp;gt; {
  const s = new Set(b.map(fn));
  return a.map(fn).filter(el =&amp;gt; !s.has(el));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor); // [1]
differenceBy([{ x: 2 }, { x: 1 }], [{ x: 1 }], v =&amp;gt; v.x); // [2]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### differenceWith

Filters out all values from an array for which the comparator function does not return `true`.

Use `Array.prototype.filter()` and `Array.prototype.findIndex()` to find the appropriate values.

```js
const differenceWith = (arr, val, comp) =&amp;gt; arr.filter(a =&amp;gt; val.findIndex(b =&amp;gt; comp(a, b)) === -1);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
differenceWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0], (a, b) =&amp;gt; Math.round(a) === Math.round(b)); // [1, 1.2]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### drop

Returns a new array with `n` elements removed from the left.

Use `Array.prototype.slice()` to remove the specified number of elements from the left.

```js
const drop = (arr, n = 1) =&amp;gt; arr.slice(n);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
drop([1, 2, 3]); // [2,3]
drop([1, 2, 3], 2); // [3]
drop([1, 2, 3], 42); // []
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### dropRight

Returns a new array with `n` elements removed from the right.

Use `Array.prototype.slice()` to remove the specified number of elements from the right.

```js
const dropRight = (arr, n = 1) =&amp;gt; arr.slice(0, -n);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
dropRight([1, 2, 3]); // [1,2]
dropRight([1, 2, 3], 2); // [1]
dropRight([1, 2, 3], 42); // []
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### dropRightWhile

Removes elements from the end of an array until the passed function returns `true`. Returns the remaining elements in the array.

Loop through the array, using `Array.prototype.slice()` to drop the last element of the array until the returned value from the function is `true`.
Returns the remaining elements.

```js
const dropRightWhile = (arr, func) =&amp;gt; {
  let rightIndex = arr.length;
  while (rightIndex-- &amp;amp;&amp;amp; !func(arr[rightIndex]));
  return arr.slice(0, rightIndex + 1);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
dropRightWhile([1, 2, 3, 4], n =&amp;gt; n &amp;lt; 3); // [1, 2]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### dropWhile

Removes elements in an array until the passed function returns `true`. Returns the remaining elements in the array.

Loop through the array, using `Array.prototype.slice()` to drop the first element of the array until the returned value from the function is `true`.
Returns the remaining elements.

```js
const dropWhile = (arr, func) =&amp;gt; {
  while (arr.length &amp;gt; 0 &amp;amp;&amp;amp; !func(arr[0])) arr = arr.slice(1);
  return arr;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
dropWhile([1, 2, 3, 4], n =&amp;gt; n &amp;gt;= 3); // [3,4]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### everyNth

Returns every nth element in an array.

Use `Array.prototype.filter()` to create a new array that contains every nth element of a given array.

```js
const everyNth = (arr, nth) =&amp;gt; arr.filter((e, i) =&amp;gt; i % nth === nth - 1);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
everyNth([1, 2, 3, 4, 5, 6], 2); // [ 2, 4, 6 ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### filterFalsy

Filters out the falsy values in an array.

Use `Array.prototype.filter()` to get an array containing only truthy values.

```js
const filterFalsy = arr =&amp;gt; arr.filter(Boolean);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
filterFalsy(['', true, {}, false, 'sample', 1, 0]); // [true, {}, 'sample', 1]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### filterNonUnique

Filters out the non-unique values in an array.

Use `Array.prototype.filter()` for an array containing only the unique values.

```js
const filterNonUnique = arr =&amp;gt; arr.filter(i =&amp;gt; arr.indexOf(i) === arr.lastIndexOf(i));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
filterNonUnique([1, 2, 2, 3, 4, 4, 5]); // [1, 3, 5]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### filterNonUniqueBy

Filters out the non-unique values in an array, based on a provided comparator function.

Use `Array.prototype.filter()` and `Array.prototype.every()` for an array containing only the unique values, based on the comparator function, `fn`.
The comparator function takes four arguments: the values of the two elements being compared and their indexes.

```js
const filterNonUniqueBy = (arr, fn) =&amp;gt;
  arr.filter((v, i) =&amp;gt; arr.every((x, j) =&amp;gt; (i === j) === fn(v, x, i, j)));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
filterNonUniqueBy(
  [
    { id: 0, value: 'a' },
    { id: 1, value: 'b' },
    { id: 2, value: 'c' },
    { id: 1, value: 'd' },
    { id: 0, value: 'e' }
  ],
  (a, b) =&amp;gt; a.id == b.id
); // [ { id: 2, value: 'c' } ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### findLast

Returns the last element for which the provided function returns a truthy value.

Use `Array.prototype.filter()` to remove elements for which `fn` returns falsy values, `Array.prototype.pop()` to get the last one.

```js
const findLast = (arr, fn) =&amp;gt; arr.filter(fn).pop();
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
findLast([1, 2, 3, 4], n =&amp;gt; n % 2 === 1); // 3
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### findLastIndex

Returns the index of the last element for which the provided function returns a truthy value.

Use `Array.prototype.map()` to map each element to an array with its index and value.
Use `Array.prototype.filter()` to remove elements for which `fn` returns falsy values, `Array.prototype.pop()` to get the last one.
`-1` is the default value when not found.

```js
const findLastIndex = (arr, fn) =&amp;gt;
  (arr
    .map((val, i) =&amp;gt; [i, val])
    .filter(([i, val]) =&amp;gt; fn(val, i, arr))
    .pop() || [-1])[0];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
findLastIndex([1, 2, 3, 4], n =&amp;gt; n % 2 === 1); // 2 (index of the value 3)
findLastIndex([1, 2, 3, 4], n =&amp;gt; n === 5); // -1 (default value when not found)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### flatten

Flattens an array up to the specified depth.

Use recursion, decrementing `depth` by 1 for each level of depth.
Use `Array.prototype.reduce()` and `Array.prototype.concat()` to merge elements or arrays.
Base case, for `depth` equal to `1` stops recursion.
Omit the second argument, `depth` to flatten only to a depth of `1` (single flatten).

```js
const flatten = (arr, depth = 1) =&amp;gt;
  arr.reduce((a, v) =&amp;gt; a.concat(depth &amp;gt; 1 &amp;amp;&amp;amp; Array.isArray(v) ? flatten(v, depth - 1) : v), []);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
flatten([1, [2], 3, 4]); // [1, 2, 3, 4]
flatten([1, [2, [3, [4, 5], 6], 7], 8], 2); // [1, 2, 3, [4, 5], 6, 7, 8]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### forEachRight

Executes a provided function once for each array element, starting from the array's last element.

Use `Array.prototype.slice(0)` to clone the given array, `Array.prototype.reverse()` to reverse it and `Array.prototype.forEach()` to iterate over the reversed array.

```js
const forEachRight = (arr, callback) =&amp;gt;
  arr
    .slice(0)
    .reverse()
    .forEach(callback);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
forEachRight([1, 2, 3, 4], val =&amp;gt; console.log(val)); // '4', '3', '2', '1'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### groupBy

Groups the elements of an array based on the given function.

Use `Array.prototype.map()` to map the values of an array to a function or property name.
Use `Array.prototype.reduce()` to create an object, where the keys are produced from the mapped results.

```js
const groupBy = (arr, fn) =&amp;gt;
  arr.map(typeof fn === 'function' ? fn : val =&amp;gt; val[fn]).reduce((acc, val, i) =&amp;gt; {
    acc[val] = (acc[val] || []).concat(arr[i]);
    return acc;
  }, {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
groupBy([6.1, 4.2, 6.3], Math.floor); // {4: [4.2], 6: [6.1, 6.3]}
groupBy(['one', 'two', 'three'], 'length'); // {3: ['one', 'two'], 5: ['three']}
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### head

Returns the head of a list.

Use `arr[0]` to return the first element of the passed array.

```js
const head = arr =&amp;gt; arr[0];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
head([1, 2, 3]); // 1
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### includesAll

Returns `true` if all the elements ιν `values` are included in `arr`, `false` otherwise.

Use `Array.prototype.every()` and `Array.prototype.includes()` to check if all elements of `values` are included in `arr`.

```js
const includesAll = (arr, values) =&amp;gt; values.every(v =&amp;gt; arr.includes(v));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
includesAll([1, 2, 3, 4], [1, 4]); // true
includesAll([1, 2, 3, 4], [1, 5]); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### includesAny

Returns `true` if at least one element of values is included in arr , `false` otherwise.

Use `Array.prototype.some()` and `Array.prototype.includes()` to check if at least one element of `values` is included in `arr`.

```js
const includesAny = (arr, values) =&amp;gt; values.some(v =&amp;gt; arr.includes(v));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
includesAny([1, 2, 3, 4], [2, 9]); // true
includesAny([1, 2, 3, 4], [8, 9]); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### indexOfAll

Returns all indices of `val` in an array.
If `val` never occurs, returns `[]`.

Use `Array.prototype.reduce()` to loop over elements and store indices for matching elements.
Return the array of indices.

```js
const indexOfAll = (arr, val) =&amp;gt; arr.reduce((acc, el, i) =&amp;gt; (el === val ? [...acc, i] : acc), []);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
indexOfAll([1, 2, 3, 1, 2, 3], 1); // [0,3]
indexOfAll([1, 2, 3], 4); // []
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### initial

Returns all the elements of an array except the last one.

Use `arr.slice(0,-1)` to return all but the last element of the array.

```js
const initial = arr =&amp;gt; arr.slice(0, -1);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
initial([1, 2, 3]); // [1,2]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### initialize2DArray

Initializes a 2D array of given width and height and value.

Use `Array.prototype.map()` to generate h rows where each is a new array of size w initialize with value. If the value is not provided, default to `null`.

```js
const initialize2DArray = (w, h, val = null) =&amp;gt;
  Array.from({ length: h }).map(() =&amp;gt; Array.from({ length: w }).fill(val));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
initialize2DArray(2, 2, 0); // [[0,0], [0,0]]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### initializeArrayWithRange

Initializes an array containing the numbers in the specified range where `start` and `end` are inclusive with their common difference `step`.

Use `Array.from()` to create an array of the desired length, `(end - start + 1)/step`, and a map function to fill it with the desired values in the given range.
You can omit `start` to use a default value of `0`.
You can omit `step` to use a default value of `1`.

```js
const initializeArrayWithRange = (end, start = 0, step = 1) =&amp;gt;
  Array.from({ length: Math.ceil((end - start + 1) / step) }, (v, i) =&amp;gt; i * step + start);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
initializeArrayWithRange(5); // [0,1,2,3,4,5]
initializeArrayWithRange(7, 3); // [3,4,5,6,7]
initializeArrayWithRange(9, 0, 2); // [0,2,4,6,8]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### initializeArrayWithRangeRight

Initializes an array containing the numbers in the specified range (in reverse) where `start` and `end` are inclusive with their common difference `step`.

Use `Array.from(Math.ceil((end+1-start)/step))` to create an array of the desired length(the amounts of elements is equal to `(end-start)/step` or `(end+1-start)/step` for inclusive end), `Array.prototype.map()` to fill with the desired values in a range.
You can omit `start` to use a default value of `0`.
You can omit `step` to use a default value of `1`.

```js
const initializeArrayWithRangeRight = (end, start = 0, step = 1) =&amp;gt;
  Array.from({ length: Math.ceil((end + 1 - start) / step) }).map(
    (v, i, arr) =&amp;gt; (arr.length - i - 1) * step + start
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
initializeArrayWithRangeRight(5); // [5,4,3,2,1,0]
initializeArrayWithRangeRight(7, 3); // [7,6,5,4,3]
initializeArrayWithRangeRight(9, 0, 2); // [8,6,4,2,0]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### initializeArrayWithValues

Initializes and fills an array with the specified values.

Use `Array(n)` to create an array of the desired length, `fill(v)` to fill it with the desired values.
You can omit `val` to use a default value of `0`.

```js
const initializeArrayWithValues = (n, val = 0) =&amp;gt; Array(n).fill(val);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
initializeArrayWithValues(5, 2); // [2, 2, 2, 2, 2]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### initializeNDArray

Create a n-dimensional array with given value.

Use recursion.
Use `Array.prototype.map()` to generate rows where each is a new array initialized using `initializeNDArray`.

```js
const initializeNDArray = (val, ...args) =&amp;gt;
  args.length === 0
    ? val
    : Array.from({ length: args[0] }).map(() =&amp;gt; initializeNDArray(val, ...args.slice(1)));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
initializeNDArray(1, 3); // [1,1,1]
initializeNDArray(5, 2, 2, 2); // [[[5,5],[5,5]],[[5,5],[5,5]]]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### intersection

Returns a list of elements that exist in both arrays.

Create a `Set` from `b`, then use `Array.prototype.filter()` on `a` to only keep values contained in `b`.

```js
const intersection = (a, b) =&amp;gt; {
  const s = new Set(b);
  return a.filter(x =&amp;gt; s.has(x));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
intersection([1, 2, 3], [4, 3, 2]); // [2, 3]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### intersectionBy

Returns a list of elements that exist in both arrays, after applying the provided function to each array element of both.

Create a `Set` by applying `fn` to all elements in `b`, then use `Array.prototype.filter()` on `a` to only keep elements, which produce values contained in `b` when `fn` is applied to them.

```js
const intersectionBy = (a, b, fn) =&amp;gt; {
  const s = new Set(b.map(fn));
  return a.filter(x =&amp;gt; s.has(fn(x)));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor); // [2.1]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### intersectionWith

Returns a list of elements that exist in both arrays, using a provided comparator function.

Use `Array.prototype.filter()` and `Array.prototype.findIndex()` in combination with the provided comparator to determine intersecting values.

```js
const intersectionWith = (a, b, comp) =&amp;gt; a.filter(x =&amp;gt; b.findIndex(y =&amp;gt; comp(x, y)) !== -1);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
intersectionWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0, 3.9], (a, b) =&amp;gt; Math.round(a) === Math.round(b)); // [1.5, 3, 0]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isSorted

Returns `1` if the array is sorted in ascending order, `-1` if it is sorted in descending order or `0` if it is not sorted.

Calculate the ordering `direction` for the first two elements.
Use `Object.entries()` to loop over array objects and compare them in pairs.
Return `0` if the `direction` changes or the `direction` if the last element is reached.

```js
const isSorted = arr =&amp;gt; {
  let direction = -(arr[0] - arr[1]);
  for (let [i, val] of arr.entries()) {
    direction = !direction ? -(arr[i - 1] - arr[i]) : direction;
    if (i === arr.length - 1) return !direction ? 0 : direction;
    else if ((val - arr[i + 1]) * direction &amp;gt; 0) return 0;
  }
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isSorted([0, 1, 2, 2]); // 1
isSorted([4, 3, 2]); // -1
isSorted([4, 3, 5]); // 0
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### join

Joins all elements of an array into a string and returns this string.
Uses a separator and an end separator.

Use `Array.prototype.reduce()` to combine elements into a string.
Omit the second argument, `separator`, to use a default separator of `','`.
Omit the third argument, `end`, to use the same value as `separator` by default.

```js
const join = (arr, separator = ',', end = separator) =&amp;gt;
  arr.reduce(
    (acc, val, i) =&amp;gt;
      i === arr.length - 2
        ? acc + val + end
        : i === arr.length - 1
        ? acc + val
        : acc + val + separator,
    ''
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
join(['pen', 'pineapple', 'apple', 'pen'], ',', '&amp;amp;'); // "pen,pineapple,apple&amp;amp;pen"
join(['pen', 'pineapple', 'apple', 'pen'], ','); // "pen,pineapple,apple,pen"
join(['pen', 'pineapple', 'apple', 'pen']); // "pen,pineapple,apple,pen"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### JSONtoCSV ![advanced](/advanced.svg)

Converts an array of objects to a comma-separated values (CSV) string that contains only the `columns` specified.

Use `Array.prototype.join(delimiter)` to combine all the names in `columns` to create the first row.
Use `Array.prototype.map()` and `Array.prototype.reduce()` to create a row for each object, substituting non-existent values with empty strings and only mapping values in `columns`.
Use `Array.prototype.join('\n')` to combine all rows into a string.
Omit the third argument, `delimiter`, to use a default delimiter of `,`.

```js
const JSONtoCSV = (arr, columns, delimiter = ',') =&amp;gt;
  [
    columns.join(delimiter),
    ...arr.map(obj =&amp;gt;
      columns.reduce(
        (acc, key) =&amp;gt; `${acc}${!acc.length ? '' : delimiter}"${!obj[key] ? '' : obj[key]}"`,
        ''
      )
    )
  ].join('\n');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
JSONtoCSV([{ a: 1, b: 2 }, { a: 3, b: 4, c: 5 }, { a: 6 }, { b: 7 }], ['a', 'b']); // 'a,b\n"1","2"\n"3","4"\n"6",""\n"","7"'
JSONtoCSV([{ a: 1, b: 2 }, { a: 3, b: 4, c: 5 }, { a: 6 }, { b: 7 }], ['a', 'b'], ';'); // 'a;b\n"1";"2"\n"3";"4"\n"6";""\n"";"7"'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### last

Returns the last element in an array.

Use `arr.length - 1` to compute the index of the last element of the given array and returning it.

```js
const last = arr =&amp;gt; arr[arr.length - 1];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
last([1, 2, 3]); // 3
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### longestItem

Takes any number of iterable objects or objects with a `length` property and returns the longest one.
If multiple objects have the same length, the first one will be returned.
Returns `undefined` if no arguments are provided.

Use `Array.prototype.reduce()`, comparing the `length` of objects to find the longest one.

```js
const longestItem = (...vals) =&amp;gt; vals.reduce((a, x) =&amp;gt; (x.length &amp;gt; a.length ? x : a));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
longestItem('this', 'is', 'a', 'testcase'); // 'testcase'
longestItem(...['a', 'ab', 'abc']); // 'abc'
longestItem(...['a', 'ab', 'abc'], 'abcd'); // 'abcd'
longestItem([1, 2, 3], [1, 2], [1, 2, 3, 4, 5]); // [1, 2, 3, 4, 5]
longestItem([1, 2, 3], 'foobar'); // 'foobar'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### mapObject ![advanced](/advanced.svg)

Maps the values of an array to an object using a function, where the key-value pairs consist of the stringified value as the key and the mapped value.

Use an anonymous inner function scope to declare an undefined memory space, using closures to store a return value. Use a new `Array` to store the array with a map of the function over its data set and a comma operator to return a second step, without needing to move from one context to another (due to closures and order of operations).

```js
const mapObject = (arr, fn) =&amp;gt;
  (a =&amp;gt; (
    (a = [arr, arr.map(fn)]), a[0].reduce((acc, val, ind) =&amp;gt; ((acc[val] = a[1][ind]), acc), {})
  ))();
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const squareIt = arr =&amp;gt; mapObject(arr, a =&amp;gt; a * a);
squareIt([1, 2, 3]); // { 1: 1, 2: 4, 3: 9 }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### maxN

Returns the `n` maximum elements from the provided array.
If `n` is greater than or equal to the provided array's length, then return the original array (sorted in descending order).

Use `Array.prototype.sort()` combined with the spread operator (`...`) to create a shallow clone of the array and sort it in descending order.
Use `Array.prototype.slice()` to get the specified number of elements.
Omit the second argument, `n`, to get a one-element array.

```js
const maxN = (arr, n = 1) =&amp;gt; [...arr].sort((a, b) =&amp;gt; b - a).slice(0, n);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
maxN([1, 2, 3]); // [3]
maxN([1, 2, 3], 2); // [3,2]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### minN

Returns the `n` minimum elements from the provided array.
If `n` is greater than or equal to the provided array's length, then return the original array (sorted in ascending order).

Use `Array.prototype.sort()` combined with the spread operator (`...`) to create a shallow clone of the array and sort it in ascending order.
Use `Array.prototype.slice()` to get the specified number of elements.
Omit the second argument, `n`, to get a one-element array.

```js
const minN = (arr, n = 1) =&amp;gt; [...arr].sort((a, b) =&amp;gt; a - b).slice(0, n);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
minN([1, 2, 3]); // [1]
minN([1, 2, 3], 2); // [1,2]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### none

Returns `true` if the provided predicate function returns `false` for all elements in a collection, `false` otherwise.

Use `Array.prototype.some()` to test if any elements in the collection return `true` based on `fn`.
Omit the second argument, `fn`, to use `Boolean` as a default.

```js
const none = (arr, fn = Boolean) =&amp;gt; !arr.some(fn);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
none([0, 1, 3, 0], x =&amp;gt; x == 2); // true
none([0, 0, 0]); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### nthElement

Returns the nth element of an array.

Use `Array.prototype.slice()` to get an array containing the nth element at the first place.
If the index is out of bounds, return `undefined`.
Omit the second argument, `n`, to get the first element of the array.

```js
const nthElement = (arr, n = 0) =&amp;gt; (n === -1 ? arr.slice(n) : arr.slice(n, n + 1))[0];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
nthElement(['a', 'b', 'c'], 1); // 'b'
nthElement(['a', 'b', 'b'], -3); // 'a'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### offset

Moves the specified amount of elements to the end of the array.

Use `Array.prototype.slice()` twice to get the elements after the specified index and the elements before that.
Use the spread operator(`...`) to combine the two into one array.
If `offset` is negative, the elements will be moved from end to start.

```js
const offset = (arr, offset) =&amp;gt; [...arr.slice(offset), ...arr.slice(0, offset)];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
offset([1, 2, 3, 4, 5], 2); // [3, 4, 5, 1, 2]
offset([1, 2, 3, 4, 5], -2); // [4, 5, 1, 2, 3]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### partition

Groups the elements into two arrays, depending on the provided function's truthiness for each element.

Use `Array.prototype.reduce()` to create an array of two arrays.
Use `Array.prototype.push()` to add elements for which `fn` returns `true` to the first array and elements for which `fn` returns `false` to the second one.

```js
const partition = (arr, fn) =&amp;gt;
  arr.reduce(
    (acc, val, i, arr) =&amp;gt; {
      acc[fn(val, i, arr) ? 0 : 1].push(val);
      return acc;
    },
    [[], []]
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const users = [{ user: 'barney', age: 36, active: false }, { user: 'fred', age: 40, active: true }];
partition(users, o =&amp;gt; o.active); // [[{ 'user': 'fred',    'age': 40, 'active': true }],[{ 'user': 'barney',  'age': 36, 'active': false }]]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### permutations ![advanced](/advanced.svg)

&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; **WARNING**: This function's execution time increases exponentially with each array element. Anything more than 8 to 10 entries will cause your browser to hang as it tries to solve all the different combinations.

Generates all permutations of an array's elements (contains duplicates).

Use recursion.
For each element in the given array, create all the partial permutations for the rest of its elements.
Use `Array.prototype.map()` to combine the element with each partial permutation, then `Array.prototype.reduce()` to combine all permutations in one array.
Base cases are for array `length` equal to `2` or `1`.

```js
const permutations = arr =&amp;gt; {
  if (arr.length &amp;lt;= 2) return arr.length === 2 ? [arr, [arr[1], arr[0]]] : arr;
  return arr.reduce(
    (acc, item, i) =&amp;gt;
      acc.concat(
        permutations([...arr.slice(0, i), ...arr.slice(i + 1)]).map(val =&amp;gt; [item, ...val])
      ),
    []
  );
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
permutations([1, 33, 5]); // [ [ 1, 33, 5 ], [ 1, 5, 33 ], [ 33, 1, 5 ], [ 33, 5, 1 ], [ 5, 1, 33 ], [ 5, 33, 1 ] ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### pull

Mutates the original array to filter out the values specified.

Use `Array.prototype.filter()` and `Array.prototype.includes()` to pull out the values that are not needed.
Use `Array.prototype.length = 0` to mutate the passed in an array by resetting it's length to zero and `Array.prototype.push()` to re-populate it with only the pulled values.

```js
const pull = (arr, ...args) =&amp;gt; {
  let argState = Array.isArray(args[0]) ? args[0] : args;
  let pulled = arr.filter((v, i) =&amp;gt; !argState.includes(v));
  arr.length = 0;
  pulled.forEach(v =&amp;gt; arr.push(v));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
let myArray = ['a', 'b', 'c', 'a', 'b', 'c'];
pull(myArray, 'a', 'c'); // myArray = [ 'b', 'b' ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### pullAtIndex ![advanced](/advanced.svg)

Mutates the original array to filter out the values at the specified indexes.

Use `Array.prototype.filter()` and `Array.prototype.includes()` to pull out the values that are not needed.
Use `Array.prototype.length = 0` to mutate the passed in an array by resetting it's length to zero and `Array.prototype.push()` to re-populate it with only the pulled values.
Use `Array.prototype.push()` to keep track of pulled values

```js
const pullAtIndex = (arr, pullArr) =&amp;gt; {
  let removed = [];
  let pulled = arr
    .map((v, i) =&amp;gt; (pullArr.includes(i) ? removed.push(v) : v))
    .filter((v, i) =&amp;gt; !pullArr.includes(i));
  arr.length = 0;
  pulled.forEach(v =&amp;gt; arr.push(v));
  return removed;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
let myArray = ['a', 'b', 'c', 'd'];
let pulled = pullAtIndex(myArray, [1, 3]); // myArray = [ 'a', 'c' ] , pulled = [ 'b', 'd' ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### pullAtValue ![advanced](/advanced.svg)

Mutates the original array to filter out the values specified. Returns the removed elements.

Use `Array.prototype.filter()` and `Array.prototype.includes()` to pull out the values that are not needed.
Use `Array.prototype.length = 0` to mutate the passed in an array by resetting it's length to zero and `Array.prototype.push()` to re-populate it with only the pulled values.
Use `Array.prototype.push()` to keep track of pulled values

```js
const pullAtValue = (arr, pullArr) =&amp;gt; {
  let removed = [],
    pushToRemove = arr.forEach((v, i) =&amp;gt; (pullArr.includes(v) ? removed.push(v) : v)),
    mutateTo = arr.filter((v, i) =&amp;gt; !pullArr.includes(v));
  arr.length = 0;
  mutateTo.forEach(v =&amp;gt; arr.push(v));
  return removed;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
let myArray = ['a', 'b', 'c', 'd'];
let pulled = pullAtValue(myArray, ['b', 'd']); // myArray = [ 'a', 'c' ] , pulled = [ 'b', 'd' ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### pullBy ![advanced](/advanced.svg)

Mutates the original array to filter out the values specified, based on a given iterator function.

Check if the last argument provided in a function.
Use `Array.prototype.map()` to apply the iterator function `fn` to all array elements.
Use `Array.prototype.filter()` and `Array.prototype.includes()` to pull out the values that are not needed.
Use `Array.prototype.length = 0` to mutate the passed in an array by resetting it's length to zero and `Array.prototype.push()` to re-populate it with only the pulled values.

```js
const pullBy = (arr, ...args) =&amp;gt; {
  const length = args.length;
  let fn = length &amp;gt; 1 ? args[length - 1] : undefined;
  fn = typeof fn == 'function' ? (args.pop(), fn) : undefined;
  let argState = (Array.isArray(args[0]) ? args[0] : args).map(val =&amp;gt; fn(val));
  let pulled = arr.filter((v, i) =&amp;gt; !argState.includes(fn(v)));
  arr.length = 0;
  pulled.forEach(v =&amp;gt; arr.push(v));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
var myArray = [{ x: 1 }, { x: 2 }, { x: 3 }, { x: 1 }];
pullBy(myArray, [{ x: 1 }, { x: 3 }], o =&amp;gt; o.x); // myArray = [{ x: 2 }]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### reducedFilter

Filter an array of objects based on a condition while also filtering out unspecified keys.

Use `Array.prototype.filter()` to filter the array based on the predicate `fn` so that it returns the objects for which the condition returned a truthy value.
On the filtered array, use `Array.prototype.map()` to return the new object using `Array.prototype.reduce()` to filter out the keys which were not supplied as the `keys` argument.

```js
const reducedFilter = (data, keys, fn) =&amp;gt;
  data.filter(fn).map(el =&amp;gt;
    keys.reduce((acc, key) =&amp;gt; {
      acc[key] = el[key];
      return acc;
    }, {})
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const data = [
  {
    id: 1,
    name: 'john',
    age: 24
  },
  {
    id: 2,
    name: 'mike',
    age: 50
  }
];

reducedFilter(data, ['id', 'name'], item =&amp;gt; item.age &amp;gt; 24); // [{ id: 2, name: 'mike'}]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### reduceSuccessive

Applies a function against an accumulator and each element in the array (from left to right), returning an array of successively reduced values.

Use `Array.prototype.reduce()` to apply the given function to the given array, storing each new result.

```js
const reduceSuccessive = (arr, fn, acc) =&amp;gt;
  arr.reduce((res, val, i, arr) =&amp;gt; (res.push(fn(res.slice(-1)[0], val, i, arr)), res), [acc]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
reduceSuccessive([1, 2, 3, 4, 5, 6], (acc, val) =&amp;gt; acc + val, 0); // [0, 1, 3, 6, 10, 15, 21]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### reduceWhich

Returns the minimum/maximum value of an array, after applying the provided function to set comparing rule.

Use `Array.prototype.reduce()` in combination with the `comparator` function to get the appropriate element in the array.
You can omit the second parameter, `comparator`, to use the default one that returns the minimum element in the array.

```js
const reduceWhich = (arr, comparator = (a, b) =&amp;gt; a - b) =&amp;gt;
  arr.reduce((a, b) =&amp;gt; (comparator(a, b) &amp;gt;= 0 ? b : a));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
reduceWhich([1, 3, 2]); // 1
reduceWhich([1, 3, 2], (a, b) =&amp;gt; b - a); // 3
reduceWhich(
  [{ name: 'Tom', age: 12 }, { name: 'Jack', age: 18 }, { name: 'Lucy', age: 9 }],
  (a, b) =&amp;gt; a.age - b.age
); // {name: "Lucy", age: 9}
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### reject

Filters an array's values based on a predicate function, returning only values for which the predicate function returns `true`.

Use `Array.prototype.filter()` in combination with the predicate function, `pred`, to return only the values for which `pred()` returns `true`.

```js
const reject = (pred, array) =&amp;gt; array.filter((...args) =&amp;gt; !pred(...args));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
reject(x =&amp;gt; x % 2 === 0, [1, 2, 3, 4, 5]); // [1, 3, 5]
reject(word =&amp;gt; word.length &amp;gt; 4, ['Apple', 'Pear', 'Kiwi', 'Banana']); // ['Pear', 'Kiwi']
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### remove

Removes elements from an array for which the given function returns `false`.

Use `Array.prototype.filter()` to find array elements that return truthy values and `Array.prototype.reduce()` to remove elements using `Array.prototype.splice()`.
The `func` is invoked with three arguments (`value, index, array`).

```js
const remove = (arr, func) =&amp;gt;
  Array.isArray(arr)
    ? arr.filter(func).reduce((acc, val) =&amp;gt; {
        arr.splice(arr.indexOf(val), 1);
        return acc.concat(val);
      }, [])
    : [];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
remove([1, 2, 3, 4], n =&amp;gt; n % 2 === 0); // [2, 4]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sample

Returns a random element from an array.

Use `Math.random()` to generate a random number, multiply it by `length` and round it off to the nearest whole number using `Math.floor()`.
This method also works with strings.

```js
const sample = arr =&amp;gt; arr[Math.floor(Math.random() * arr.length)];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sample([3, 7, 9, 11]); // 9
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sampleSize

Gets `n` random elements at unique keys from `array` up to the size of `array`.

Shuffle the array using the [Fisher-Yates algorithm](&lt;a href="https://github.com/30-seconds/30-seconds-of-code#shuffle"&gt;https://github.com/30-seconds/30-seconds-of-code#shuffle&lt;/a&gt;).
Use `Array.prototype.slice()` to get the first `n` elements.
Omit the second argument, `n` to get only one element at random from the array.

```js
const sampleSize = ([...arr], n = 1) =&amp;gt; {
  let m = arr.length;
  while (m) {
    const i = Math.floor(Math.random() * m--);
    [arr[m], arr[i]] = [arr[i], arr[m]];
  }
  return arr.slice(0, n);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sampleSize([1, 2, 3], 2); // [3,1]
sampleSize([1, 2, 3], 4); // [2,3,1]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### shank

Has the same functionality as [`Array.prototype.splice()`](&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice&lt;/a&gt;), but returning a new array instead of mutating the original array.

Use `Array.prototype.slice()` and `Array.prototype.concat()` to get a new array with the new contents after removing existing elements and/or adding new elements.
Omit the second argument, `index`, to start at `0`.
Omit the third argument, `delCount`, to remove `0` elements.
Omit the fourth argument, `elements`, in order to not add any new elements.

```js
const shank = (arr, index = 0, delCount = 0, ...elements) =&amp;gt;
  arr
    .slice(0, index)
    .concat(elements)
    .concat(arr.slice(index + delCount));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const names = ['alpha', 'bravo', 'charlie'];
const namesAndDelta = shank(names, 1, 0, 'delta'); // [ 'alpha', 'delta', 'bravo', 'charlie' ]
const namesNoBravo = shank(names, 1, 1); // [ 'alpha', 'charlie' ]
console.log(names); // ['alpha', 'bravo', 'charlie']
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### shuffle

Randomizes the order of the values of an array, returning a new array.

Uses the [Fisher-Yates algorithm](&lt;a href="https://github.com/30-seconds/30-seconds-of-code#shuffle"&gt;https://github.com/30-seconds/30-seconds-of-code#shuffle&lt;/a&gt;) to reorder the elements of the array.

```js
const shuffle = ([...arr]) =&amp;gt; {
  let m = arr.length;
  while (m) {
    const i = Math.floor(Math.random() * m--);
    [arr[m], arr[i]] = [arr[i], arr[m]];
  }
  return arr;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const foo = [1, 2, 3];
shuffle(foo); // [2, 3, 1], foo = [1, 2, 3]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### similarity

Returns an array of elements that appear in both arrays.

Use `Array.prototype.filter()` to remove values that are not part of `values`, determined using `Array.prototype.includes()`.

```js
const similarity = (arr, values) =&amp;gt; arr.filter(v =&amp;gt; values.includes(v));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
similarity([1, 2, 3], [1, 2, 4]); // [1, 2]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sortedIndex

Returns the lowest index at which value should be inserted into array in order to maintain its sort order.

Check if the array is sorted in descending order (loosely).
Use `Array.prototype.findIndex()` to find the appropriate index where the element should be inserted.

```js
const sortedIndex = (arr, n) =&amp;gt; {
  const isDescending = arr[0] &amp;gt; arr[arr.length - 1];
  const index = arr.findIndex(el =&amp;gt; (isDescending ? n &amp;gt;= el : n &amp;lt;= el));
  return index === -1 ? arr.length : index;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sortedIndex([5, 3, 2, 1], 4); // 1
sortedIndex([30, 50], 40); // 1
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sortedIndexBy

Returns the lowest index at which value should be inserted into array in order to maintain its sort order, based on a provided iterator function.

Check if the array is sorted in descending order (loosely).
Use `Array.prototype.findIndex()` to find the appropriate index where the element should be inserted, based on the iterator function `fn`.

```js
const sortedIndexBy = (arr, n, fn) =&amp;gt; {
  const isDescending = fn(arr[0]) &amp;gt; fn(arr[arr.length - 1]);
  const val = fn(n);
  const index = arr.findIndex(el =&amp;gt; (isDescending ? val &amp;gt;= fn(el) : val &amp;lt;= fn(el)));
  return index === -1 ? arr.length : index;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sortedIndexBy([{ x: 4 }, { x: 5 }], { x: 4 }, o =&amp;gt; o.x); // 0
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sortedLastIndex

Returns the highest index at which value should be inserted into array in order to maintain its sort order.

Check if the array is sorted in descending order (loosely).
Use `Array.prototype.reverse()` and `Array.prototype.findIndex()` to find the appropriate last index where the element should be inserted.

```js
const sortedLastIndex = (arr, n) =&amp;gt; {
  const isDescending = arr[0] &amp;gt; arr[arr.length - 1];
  const index = arr.reverse().findIndex(el =&amp;gt; (isDescending ? n &amp;lt;= el : n &amp;gt;= el));
  return index === -1 ? 0 : arr.length - index;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sortedLastIndex([10, 20, 30, 30, 40], 30); // 4
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sortedLastIndexBy

Returns the highest index at which value should be inserted into array in order to maintain its sort order, based on a provided iterator function.

Check if the array is sorted in descending order (loosely).
Use `Array.prototype.map()` to apply the iterator function to all elements of the array.
Use `Array.prototype.reverse()` and `Array.prototype.findIndex()` to find the appropriate last index where the element should be inserted, based on the provided iterator function.

```js
const sortedLastIndexBy = (arr, n, fn) =&amp;gt; {
  const isDescending = fn(arr[0]) &amp;gt; fn(arr[arr.length - 1]);
  const val = fn(n);
  const index = arr
    .map(fn)
    .reverse()
    .findIndex(el =&amp;gt; (isDescending ? val &amp;lt;= el : val &amp;gt;= el));
  return index === -1 ? 0 : arr.length - index;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sortedLastIndexBy([{ x: 4 }, { x: 5 }], { x: 4 }, o =&amp;gt; o.x); // 1
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### stableSort ![advanced](/advanced.svg)

Performs stable sorting of an array, preserving the initial indexes of items when their values are the same.
Does not mutate the original array, but returns a new array instead.

Use `Array.prototype.map()` to pair each element of the input array with its corresponding index.
Use `Array.prototype.sort()` and a `compare` function to sort the list, preserving their initial order if the items compared are equal.
Use `Array.prototype.map()` to convert back to the initial array items.

```js
const stableSort = (arr, compare) =&amp;gt;
  arr
    .map((item, index) =&amp;gt; ({ item, index }))
    .sort((a, b) =&amp;gt; compare(a.item, b.item) || a.index - b.index)
    .map(({ item }) =&amp;gt; item);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
const stable = stableSort(arr, () =&amp;gt; 0); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### symmetricDifference

Returns the symmetric difference between two arrays, without filtering out duplicate values.

Create a `Set` from each array, then use `Array.prototype.filter()` on each of them to only keep values not contained in the other.

```js
const symmetricDifference = (a, b) =&amp;gt; {
  const sA = new Set(a),
    sB = new Set(b);
  return [...a.filter(x =&amp;gt; !sB.has(x)), ...b.filter(x =&amp;gt; !sA.has(x))];
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
symmetricDifference([1, 2, 3], [1, 2, 4]); // [3, 4]
symmetricDifference([1, 2, 2], [1, 3, 1]); // [2, 2, 3]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### symmetricDifferenceBy

Returns the symmetric difference between two arrays, after applying the provided function to each array element of both.

Create a `Set` by applying `fn` to each array's elements, then use `Array.prototype.filter()` on each of them to only keep values not contained in the other.

```js
const symmetricDifferenceBy = (a, b, fn) =&amp;gt; {
  const sA = new Set(a.map(v =&amp;gt; fn(v))),
    sB = new Set(b.map(v =&amp;gt; fn(v)));
  return [...a.filter(x =&amp;gt; !sB.has(fn(x))), ...b.filter(x =&amp;gt; !sA.has(fn(x)))];
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
symmetricDifferenceBy([2.1, 1.2], [2.3, 3.4], Math.floor); // [ 1.2, 3.4 ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### symmetricDifferenceWith

Returns the symmetric difference between two arrays, using a provided function as a comparator.

Use `Array.prototype.filter()` and `Array.prototype.findIndex()` to find the appropriate values.

```js
const symmetricDifferenceWith = (arr, val, comp) =&amp;gt; [
  ...arr.filter(a =&amp;gt; val.findIndex(b =&amp;gt; comp(a, b)) === -1),
  ...val.filter(a =&amp;gt; arr.findIndex(b =&amp;gt; comp(a, b)) === -1)
];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
symmetricDifferenceWith(
  [1, 1.2, 1.5, 3, 0],
  [1.9, 3, 0, 3.9],
  (a, b) =&amp;gt; Math.round(a) === Math.round(b)
); // [1, 1.2, 3.9]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### tail

Returns all elements in an array except for the first one.

Return `Array.prototype.slice(1)` if the array's `length` is more than `1`, otherwise, return the whole array.

```js
const tail = arr =&amp;gt; (arr.length &amp;gt; 1 ? arr.slice(1) : arr);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
tail([1, 2, 3]); // [2,3]
tail([1]); // [1]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### take

Returns an array with n elements removed from the beginning.

Use `Array.prototype.slice()` to create a slice of the array with `n` elements taken from the beginning.

```js
const take = (arr, n = 1) =&amp;gt; arr.slice(0, n);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
take([1, 2, 3], 5); // [1, 2, 3]
take([1, 2, 3], 0); // []
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### takeRight

Returns an array with n elements removed from the end.

Use `Array.prototype.slice()` to create a slice of the array with `n` elements taken from the end.

```js
const takeRight = (arr, n = 1) =&amp;gt; arr.slice(arr.length - n, arr.length);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
takeRight([1, 2, 3], 2); // [ 2, 3 ]
takeRight([1, 2, 3]); // [3]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### takeRightWhile

Removes elements from the end of an array until the passed function returns `true`. Returns the removed elements.

Loop through the array, using a `Array.prototype.reduceRight()` and accumulating elements while the function returns falsy value.

```js
const takeRightWhile = (arr, func) =&amp;gt;
  arr.reduceRight((acc, el) =&amp;gt; (func(el) ? acc : [el, ...acc]), []);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
takeRightWhile([1, 2, 3, 4], n =&amp;gt; n &amp;lt; 3); // [3, 4]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### takeWhile

Removes elements in an array until the passed function returns `true`. Returns the removed elements.

Loop through the array, using a `for...of` loop over `Array.prototype.entries()` until the returned value from the function is `true`.
Return the removed elements, using `Array.prototype.slice()`.

```js
const takeWhile = (arr, func) =&amp;gt; {
  for (const [i, val] of arr.entries()) if (func(val)) return arr.slice(0, i);
  return arr;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
takeWhile([1, 2, 3, 4], n =&amp;gt; n &amp;gt;= 3); // [1, 2]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### toHash

Reduces a given Array-like into a value hash (keyed data store).

Given an Iterable or Array-like structure, call `Array.prototype.reduce.call()` on the provided object to step over it and return an Object, keyed by the reference value.

```js
const toHash = (object, key) =&amp;gt;
  Array.prototype.reduce.call(
    object,
    (acc, data, index) =&amp;gt; ((acc[!key ? index : data[key]] = data), acc),
    {}
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
toHash([4, 3, 2, 1]); // { 0: 4, 1: 3, 2: 2, 3: 1 }
toHash([{ a: 'label' }], 'a'); // { label: { a: 'label' } }
// A more in depth example:
let users = [{ id: 1, first: 'Jon' }, { id: 2, first: 'Joe' }, { id: 3, first: 'Moe' }];
let managers = [{ manager: 1, employees: [2, 3] }];
// We use function here because we want a bindable reference, but a closure referencing the hash would work, too.
managers.forEach(
  manager =&amp;gt;
    (manager.employees = manager.employees.map(function(id) {
      return this[id];
    }, toHash(users, 'id')))
);
managers; // [ { manager:1, employees: [ { id: 2, first: "Joe" }, { id: 3, first: "Moe" } ] } ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### union

Returns every element that exists in any of the two arrays once.

Create a `Set` with all values of `a` and `b` and convert to an array.

```js
const union = (a, b) =&amp;gt; Array.from(new Set([...a, ...b]));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
union([1, 2, 3], [4, 3, 2]); // [1,2,3,4]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### unionBy

Returns every element that exists in any of the two arrays once, after applying the provided function to each array element of both.

Create a `Set` by applying all `fn` to all values of `a`.
Create a `Set` from `a` and all elements in `b` whose value, after applying `fn` does not match a value in the previously created set.
Return the last set converted to an array.

```js
const unionBy = (a, b, fn) =&amp;gt; {
  const s = new Set(a.map(fn));
  return Array.from(new Set([...a, ...b.filter(x =&amp;gt; !s.has(fn(x)))]));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
unionBy([2.1], [1.2, 2.3], Math.floor); // [2.1, 1.2]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### unionWith

Returns every element that exists in any of the two arrays once, using a provided comparator function.

Create a `Set` with all values of `a` and values in `b` for which the comparator finds no matches in `a`, using `Array.prototype.findIndex()`.

```js
const unionWith = (a, b, comp) =&amp;gt;
  Array.from(new Set([...a, ...b.filter(x =&amp;gt; a.findIndex(y =&amp;gt; comp(x, y)) === -1)]));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
unionWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0, 3.9], (a, b) =&amp;gt; Math.round(a) === Math.round(b)); // [1, 1.2, 1.5, 3, 0, 3.9]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### uniqueElements

Returns all unique values of an array.

Use ES6 `Set` and the `...rest` operator to discard all duplicated values.

```js
const uniqueElements = arr =&amp;gt; [...new Set(arr)];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
uniqueElements([1, 2, 2, 3, 4, 4, 5]); // [1, 2, 3, 4, 5]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### uniqueElementsBy

Returns all unique values of an array, based on a provided comparator function.

Use `Array.prototype.reduce()` and `Array.prototype.some()` for an array containing only the first unique occurrence of each value, based on the comparator function, `fn`.
The comparator function takes two arguments: the values of the two elements being compared.

```js
const uniqueElementsBy = (arr, fn) =&amp;gt;
  arr.reduce((acc, v) =&amp;gt; {
    if (!acc.some(x =&amp;gt; fn(v, x))) acc.push(v);
    return acc;
  }, []);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
uniqueElementsBy(
  [
    { id: 0, value: 'a' },
    { id: 1, value: 'b' },
    { id: 2, value: 'c' },
    { id: 1, value: 'd' },
    { id: 0, value: 'e' }
  ],
  (a, b) =&amp;gt; a.id == b.id
); // [ { id: 0, value: 'a' }, { id: 1, value: 'b' }, { id: 2, value: 'c' } ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### uniqueElementsByRight

Returns all unique values of an array, based on a provided comparator function, starting from the right.

Use `Array.prototype.reduceRight()` and `Array.prototype.some()` for an array containing only the last unique occurrence of each value, based on the comparator function, `fn`.
The comparator function takes two arguments: the values of the two elements being compared.

```js
const uniqueElementsByRight = (arr, fn) =&amp;gt;
  arr.reduceRight((acc, v) =&amp;gt; {
    if (!acc.some(x =&amp;gt; fn(v, x))) acc.push(v);
    return acc;
  }, []);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
uniqueElementsByRight(
  [
    { id: 0, value: 'a' },
    { id: 1, value: 'b' },
    { id: 2, value: 'c' },
    { id: 1, value: 'd' },
    { id: 0, value: 'e' }
  ],
  (a, b) =&amp;gt; a.id == b.id
); // [ { id: 0, value: 'e' }, { id: 1, value: 'd' }, { id: 2, value: 'c' } ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### uniqueSymmetricDifference

Returns the unique symmetric difference between two arrays, not containing duplicate values from either array.

Use `Array.prototype.filter()` and `Array.prototype.includes()` on each array to remove values contained in the other, then create a `Set` from the results, removing duplicate values.

```js
const uniqueSymmetricDifference = (a, b) =&amp;gt; [
  ...new Set([...a.filter(v =&amp;gt; !b.includes(v)), ...b.filter(v =&amp;gt; !a.includes(v))])
];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
uniqueSymmetricDifference([1, 2, 3], [1, 2, 4]); // [3, 4]
uniqueSymmetricDifference([1, 2, 2], [1, 3, 1]); // [2, 3]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### unzip

Creates an array of arrays, ungrouping the elements in an array produced by [zip](#zip).

Use `Math.max.apply()` to get the longest subarray in the array, `Array.prototype.map()` to make each element an array.
Use `Array.prototype.reduce()` and `Array.prototype.forEach()` to map grouped values to individual arrays.

```js
const unzip = arr =&amp;gt;
  arr.reduce(
    (acc, val) =&amp;gt; (val.forEach((v, i) =&amp;gt; acc[i].push(v)), acc),
    Array.from({
      length: Math.max(...arr.map(x =&amp;gt; x.length))
    }).map(x =&amp;gt; [])
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
unzip([['a', 1, true], ['b', 2, false]]); // [['a', 'b'], [1, 2], [true, false]]
unzip([['a', 1, true], ['b', 2]]); // [['a', 'b'], [1, 2], [true]]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### unzipWith ![advanced](/advanced.svg)

Creates an array of elements, ungrouping the elements in an array produced by [zip](#zip) and applying the provided function.

Use `Math.max.apply()` to get the longest subarray in the array, `Array.prototype.map()` to make each element an array.
Use `Array.prototype.reduce()` and `Array.prototype.forEach()` to map grouped values to individual arrays.
Use `Array.prototype.map()` and the spread operator (`...`) to apply `fn` to each individual group of elements.

```js
const unzipWith = (arr, fn) =&amp;gt;
  arr
    .reduce(
      (acc, val) =&amp;gt; (val.forEach((v, i) =&amp;gt; acc[i].push(v)), acc),
      Array.from({
        length: Math.max(...arr.map(x =&amp;gt; x.length))
      }).map(x =&amp;gt; [])
    )
    .map(val =&amp;gt; fn(...val));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
unzipWith([[1, 10, 100], [2, 20, 200]], (...args) =&amp;gt; args.reduce((acc, v) =&amp;gt; acc + v, 0)); // [3, 30, 300]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### without

Filters out the elements of an array, that have one of the specified values.

Use `Array.prototype.filter()` to create an array excluding(using `!Array.includes()`) all given values.

```js
const without = (arr, ...args) =&amp;gt; arr.filter(v =&amp;gt; !args.includes(v));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
without([2, 1, 2, 3], 1, 2); // [3]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### xProd

Creates a new array out of the two supplied by creating each possible pair from the arrays.

Use `Array.prototype.reduce()`, `Array.prototype.map()` and `Array.prototype.concat()` to produce every possible pair from the elements of the two arrays and save them in an array.

```js
const xProd = (a, b) =&amp;gt; a.reduce((acc, x) =&amp;gt; acc.concat(b.map(y =&amp;gt; [x, y])), []);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
xProd([1, 2], ['a', 'b']); // [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### zip

Creates an array of elements, grouped based on the position in the original arrays.

Use `Math.max.apply()` to get the longest array in the arguments.
Creates an array with that length as return value and use `Array.from()` with a map-function to create an array of grouped elements.
If lengths of the argument-arrays vary, `undefined` is used where no value could be found.

```js
const zip = (...arrays) =&amp;gt; {
  const maxLength = Math.max(...arrays.map(x =&amp;gt; x.length));
  return Array.from({ length: maxLength }).map((_, i) =&amp;gt; {
    return Array.from({ length: arrays.length }, (_, k) =&amp;gt; arrays[k][i]);
  });
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
zip(['a', 'b'], [1, 2], [true, false]); // [['a', 1, true], ['b', 2, false]]
zip(['a'], [1, 2], [true, false]); // [['a', 1, true], [undefined, 2, false]]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### zipObject

Given an array of valid property identifiers and an array of values, return an object associating the properties to the values.

Since an object can have undefined values but not undefined property pointers, the array of properties is used to decide the structure of the resulting object using `Array.prototype.reduce()`.

```js
const zipObject = (props, values) =&amp;gt;
  props.reduce((obj, prop, index) =&amp;gt; ((obj[prop] = values[index]), obj), {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
zipObject(['a', 'b', 'c'], [1, 2]); // {a: 1, b: 2, c: undefined}
zipObject(['a', 'b'], [1, 2, 3]); // {a: 1, b: 2}
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### zipWith ![advanced](/advanced.svg)

Creates an array of elements, grouped based on the position in the original arrays and using function as the last value to specify how grouped values should be combined.

Check if the last argument provided is a function.
Use `Math.max()` to get the longest array in the arguments.
Creates an array with that length as return value and use `Array.from()` with a map-function to create an array of grouped elements.
If lengths of the argument-arrays vary, `undefined` is used where no value could be found.
The function is invoked with the elements of each group `(...group)`.

```js
const zipWith = (...array) =&amp;gt; {
  const fn = typeof array[array.length - 1] === 'function' ? array.pop() : undefined;
  return Array.from({ length: Math.max(...array.map(a =&amp;gt; a.length)) }, (_, i) =&amp;gt;
    fn ? fn(...array.map(a =&amp;gt; a[i])) : array.map(a =&amp;gt; a[i])
  );
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
zipWith([1, 2], [10, 20], [100, 200], (a, b, c) =&amp;gt; a + b + c); // [111,222]
zipWith(
  [1, 2, 3],
  [10, 20],
  [100, 200],
  (a, b, c) =&amp;gt; (a != null ? a : 'a') + (b != null ? b : 'b') + (c != null ? c : 'c')
); // [111, 222, '3bc']
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

---

## &lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt; Browser


### arrayToHtmlList

Converts the given array elements into `&amp;lt;li&amp;gt;` tags and appends them to the list of the given id.

Use `Array.prototype.map()`, `document.querySelector()`, and an anonymous inner closure to create a list of html tags.

```js
const arrayToHtmlList = (arr, listID) =&amp;gt;
  (el =&amp;gt; (
    (el = document.querySelector('#' + listID)),
    (el.innerHTML += arr.map(item =&amp;gt; `&amp;lt;li&amp;gt;${item}&amp;lt;/li&amp;gt;`).join(''))
  ))();
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
arrayToHtmlList(['item 1', 'item 2'], 'myListID');
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### bottomVisible

Returns `true` if the bottom of the page is visible, `false` otherwise.

Use `scrollY`, `scrollHeight` and `clientHeight` to determine if the bottom of the page is visible.

```js
const bottomVisible = () =&amp;gt;
  document.documentElement.clientHeight + window.scrollY &amp;gt;=
  (document.documentElement.scrollHeight || document.documentElement.clientHeight);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
bottomVisible(); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### copyToClipboard ![advanced](/advanced.svg)

&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; **NOTICE:** The same functionality can be easily implemented by using the new asynchronous Clipboard API, which is still experimental but should be used in the future instead of this snippet. Find out more about it [here](&lt;a href="https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard"&gt;https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard&lt;/a&gt;).

Copy a string to the clipboard. 
Only works as a result of user action (i.e. inside a `click` event listener).

Create a new `&amp;lt;textarea&amp;gt;` element, fill it with the supplied data and add it to the HTML document.
Use `Selection.getRangeAt()`to store the selected range (if any).
Use `document.execCommand('copy')` to copy to the clipboard.
Remove the `&amp;lt;textarea&amp;gt;` element from the HTML document.
Finally, use `Selection().addRange()` to recover the original selected range (if any).

```js
const copyToClipboard = str =&amp;gt; {
  const el = document.createElement('textarea');
  el.value = str;
  el.setAttribute('readonly', '');
  el.style.position = 'absolute';
  el.style.left = '-9999px';
  document.body.appendChild(el);
  const selected =
    document.getSelection().rangeCount &amp;gt; 0 ? document.getSelection().getRangeAt(0) : false;
  el.select();
  document.execCommand('copy');
  document.body.removeChild(el);
  if (selected) {
    document.getSelection().removeAllRanges();
    document.getSelection().addRange(selected);
  }
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
copyToClipboard('Lorem ipsum'); // 'Lorem ipsum' copied to clipboard.
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### counter ![advanced](/advanced.svg)

Creates a counter with the specified range, step and duration for the specified selector.

Check if `step` has the proper sign and change it accordingly.
Use `setInterval()` in combination with `Math.abs()` and `Math.floor()` to calculate the time between each new text draw.
Use `document.querySelector().innerHTML` to update the value of the selected element.
Omit the fourth parameter, `step`, to use a default step of `1`.
Omit the fifth parameter, `duration`, to use a default duration of `2000`ms.

```js
const counter = (selector, start, end, step = 1, duration = 2000) =&amp;gt; {
  let current = start,
    _step = (end - start) * step &amp;lt; 0 ? -step : step,
    timer = setInterval(() =&amp;gt; {
      current += _step;
      document.querySelector(selector).innerHTML = current;
      if (current &amp;gt;= end) document.querySelector(selector).innerHTML = end;
      if (current &amp;gt;= end) clearInterval(timer);
    }, Math.abs(Math.floor(duration / (end - start))));
  return timer;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
counter('#my-id', 1, 1000, 5, 2000); // Creates a 2-second timer for the element with id="my-id"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### createElement

Creates an element from a string (without appending it to the document). 
If the given string contains multiple elements, only the first one will be returned.

Use `document.createElement()` to create a new element.
Set its `innerHTML` to the string supplied as the argument. 
Use `ParentNode.firstElementChild` to return the element version of the string.

```js
const createElement = str =&amp;gt; {
  const el = document.createElement('div');
  el.innerHTML = str;
  return el.firstElementChild;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const el = createElement(
  `&amp;lt;div class="container"&amp;gt;
    &amp;lt;p&amp;gt;Hello!&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;`
);
console.log(el.className); // 'container'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### createEventHub ![advanced](/advanced.svg)

Creates a pub/sub ([publish–subscribe](&lt;a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern" rel="nofollow"&gt;https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern&lt;/a&gt;)) event hub with `emit`, `on`, and `off` methods.

Use `Object.create(null)` to create an empty `hub` object that does not inherit properties from `Object.prototype`.
For `emit`, resolve the array of handlers based on the `event` argument and then run each one with `Array.prototype.forEach()` by passing in the data as an argument.
For `on`, create an array for the event if it does not yet exist, then use `Array.prototype.push()` to add the handler
to the array.
For `off`, use `Array.prototype.findIndex()` to find the index of the handler in the event array and remove it using `Array.prototype.splice()`.

```js
const createEventHub = () =&amp;gt; ({
  hub: Object.create(null),
  emit(event, data) {
    (this.hub[event] || []).forEach(handler =&amp;gt; handler(data));
  },
  on(event, handler) {
    if (!this.hub[event]) this.hub[event] = [];
    this.hub[event].push(handler);
  },
  off(event, handler) {
    const i = (this.hub[event] || []).findIndex(h =&amp;gt; h === handler);
    if (i &amp;gt; -1) this.hub[event].splice(i, 1);
    if (this.hub[event].length === 0) delete this.hub[event];
  }
});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const handler = data =&amp;gt; console.log(data);
const hub = createEventHub();
let increment = 0;

// Subscribe: listen for different types of events
hub.on('message', handler);
hub.on('message', () =&amp;gt; console.log('Message event fired'));
hub.on('increment', () =&amp;gt; increment++);

// Publish: emit events to invoke all handlers subscribed to them, passing the data to them as an argument
hub.emit('message', 'hello world'); // logs 'hello world' and 'Message event fired'
hub.emit('message', { hello: 'world' }); // logs the object and 'Message event fired'
hub.emit('increment'); // `increment` variable is now 1

// Unsubscribe: stop a specific handler from listening to the 'message' event
hub.off('message', handler);
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### currentURL

Returns the current URL.

Use `window.location.href` to get current URL.

```js
const currentURL = () =&amp;gt; window.location.href;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
currentURL(); // '&lt;a href="https://google.com" rel="nofollow"&gt;https://google.com&lt;/a&gt;'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### detectDeviceType

Detects whether the website is being opened in a mobile device or a desktop/laptop.

Use a regular expression to test the `navigator.userAgent` property to figure out if the device is a mobile device or a desktop/laptop.

```js
const detectDeviceType = () =&amp;gt;
  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
    ? 'Mobile'
    : 'Desktop';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
detectDeviceType(); // "Mobile" or "Desktop"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### elementContains

Returns `true` if the `parent` element contains the `child` element, `false` otherwise.

Check that `parent` is not the same element as `child`, use `parent.contains(child)` to check if the `parent` element contains the `child` element.

```js
const elementContains = (parent, child) =&amp;gt; parent !== child &amp;amp;&amp;amp; parent.contains(child);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
elementContains(document.querySelector('head'), document.querySelector('title')); // true
elementContains(document.querySelector('body'), document.querySelector('body')); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### elementIsVisibleInViewport ![advanced](/advanced.svg)

Returns `true` if the element specified is visible in the viewport, `false` otherwise.

Use `Element.getBoundingClientRect()` and the `window.inner(Width|Height)` values
to determine if a given element is visible in the viewport.
Omit the second argument to determine if the element is entirely visible, or specify `true` to determine if
it is partially visible.

```js
const elementIsVisibleInViewport = (el, partiallyVisible = false) =&amp;gt; {
  const { top, left, bottom, right } = el.getBoundingClientRect();
  const { innerHeight, innerWidth } = window;
  return partiallyVisible
    ? ((top &amp;gt; 0 &amp;amp;&amp;amp; top &amp;lt; innerHeight) || (bottom &amp;gt; 0 &amp;amp;&amp;amp; bottom &amp;lt; innerHeight)) &amp;amp;&amp;amp;
        ((left &amp;gt; 0 &amp;amp;&amp;amp; left &amp;lt; innerWidth) || (right &amp;gt; 0 &amp;amp;&amp;amp; right &amp;lt; innerWidth))
    : top &amp;gt;= 0 &amp;amp;&amp;amp; left &amp;gt;= 0 &amp;amp;&amp;amp; bottom &amp;lt;= innerHeight &amp;amp;&amp;amp; right &amp;lt;= innerWidth;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
// e.g. 100x100 viewport and a 10x10px element at position {top: -1, left: 0, bottom: 9, right: 10}
elementIsVisibleInViewport(el); // false - (not fully visible)
elementIsVisibleInViewport(el, true); // true - (partially visible)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### formToObject

Encode a set of form elements as an `object`.

Use the `FormData` constructor to convert the HTML `form` to `FormData`, `Array.from()` to convert to an array.
Collect the object from the array, using `Array.prototype.reduce()`.

```js
const formToObject = form =&amp;gt;
  Array.from(new FormData(form)).reduce(
    (acc, [key, value]) =&amp;gt; ({
      ...acc,
      [key]: value
    }),
    {}
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
formToObject(document.querySelector('#form')); // { email: 'test@email.com', name: 'Test Name' }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### getImages

Fetches all images from within an element and puts them into an array

Use `Element.prototype.getElementsByTagName()` to fetch all `&amp;lt;img&amp;gt;` elements inside the provided element, `Array.prototype.map()` to map every `src` attribute of their respective `&amp;lt;img&amp;gt;` element, then create a `Set` to eliminate duplicates and return the array.

```js
const getImages = (el, includeDuplicates = false) =&amp;gt; {
  const images = [...el.getElementsByTagName('img')].map(img =&amp;gt; img.getAttribute('src'));
  return includeDuplicates ? images : [...new Set(images)];
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
getImages(document, true); // ['image1.jpg', 'image2.png', 'image1.png', '...']
getImages(document, false); // ['image1.jpg', 'image2.png', '...']
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### getScrollPosition

Returns the scroll position of the current page.

Use `pageXOffset` and `pageYOffset` if they are defined, otherwise `scrollLeft` and `scrollTop`.
You can omit `el` to use a default value of `window`.

```js
const getScrollPosition = (el = window) =&amp;gt; ({
  x: el.pageXOffset !== undefined ? el.pageXOffset : el.scrollLeft,
  y: el.pageYOffset !== undefined ? el.pageYOffset : el.scrollTop
});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
getScrollPosition(); // {x: 0, y: 200}
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### getStyle

Returns the value of a CSS rule for the specified element.

Use `Window.getComputedStyle()` to get the value of the CSS rule for the specified element.

```js
const getStyle = (el, ruleName) =&amp;gt; getComputedStyle(el)[ruleName];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
getStyle(document.querySelector('p'), 'font-size'); // '16px'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### hasClass

Returns `true` if the element has the specified class, `false` otherwise.

Use `element.classList.contains()` to check if the element has the specified class.

```js
const hasClass = (el, className) =&amp;gt; el.classList.contains(className);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
hasClass(document.querySelector('p.special'), 'special'); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### hashBrowser ![advanced](/advanced.svg)

Creates a hash for a value using the [SHA-256](&lt;a href="https://en.wikipedia.org/wiki/SHA-2" rel="nofollow"&gt;https://en.wikipedia.org/wiki/SHA-2&lt;/a&gt;) algorithm. Returns a promise.

Use the [SubtleCrypto](&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto&lt;/a&gt;) API to create a hash for the given value.

```js
const hashBrowser = val =&amp;gt;
  crypto.subtle.digest('SHA-256', new TextEncoder('utf-8').encode(val)).then(h =&amp;gt; {
    let hexes = [],
      view = new DataView(h);
    for (let i = 0; i &amp;lt; view.byteLength; i += 4)
      hexes.push(('00000000' + view.getUint32(i).toString(16)).slice(-8));
    return hexes.join('');
  });
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
hashBrowser(JSON.stringify({ a: 'a', b: [1, 2, 3, 4], foo: { c: 'bar' } })).then(console.log); // '04aa106279f5977f59f9067fa9712afc4aedc6f5862a8defc34552d8c7206393'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### hide

Hides all the elements specified.

Use `NodeList.prototype.forEach()` to apply `display: none` to each element specified.

```js
const hide = (...el) =&amp;gt; [...el].forEach(e =&amp;gt; (e.style.display = 'none'));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
hide(document.querySelectorAll('img')); // Hides all &amp;lt;img&amp;gt; elements on the page
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### httpsRedirect

Redirects the page to HTTPS if its currently in HTTP. Also, pressing the back button doesn't take it back to the HTTP page as its replaced in the history.

Use `location.protocol` to get the protocol currently being used. If it's not HTTPS, use `location.replace()` to replace the existing page with the HTTPS version of the page. Use `location.href` to get the full address, split it with `String.prototype.split()` and remove the protocol part of the URL.

```js
const httpsRedirect = () =&amp;gt; {
  if (location.protocol !== 'https:') location.replace('https://' + location.href.split('//')[1]);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
httpsRedirect(); // If you are on &lt;a href="http://mydomain.com" rel="nofollow"&gt;http://mydomain.com&lt;/a&gt;, you are redirected to &lt;a href="https://mydomain.com" rel="nofollow"&gt;https://mydomain.com&lt;/a&gt;
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### insertAfter

Inserts an HTML string after the end of the specified element.

Use `el.insertAdjacentHTML()` with a position of `'afterend'` to parse `htmlString` and insert it after the end of `el`.

```js
const insertAfter = (el, htmlString) =&amp;gt; el.insertAdjacentHTML('afterend', htmlString);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
insertAfter(document.getElementById('myId'), '&amp;lt;p&amp;gt;after&amp;lt;/p&amp;gt;'); // &amp;lt;div id="myId"&amp;gt;...&amp;lt;/div&amp;gt; &amp;lt;p&amp;gt;after&amp;lt;/p&amp;gt;
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### insertBefore

Inserts an HTML string before the start of the specified element.

Use `el.insertAdjacentHTML()` with a position of `'beforebegin'` to parse `htmlString` and insert it before the start of `el`.

```js
const insertBefore = (el, htmlString) =&amp;gt; el.insertAdjacentHTML('beforebegin', htmlString);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
insertBefore(document.getElementById('myId'), '&amp;lt;p&amp;gt;before&amp;lt;/p&amp;gt;'); // &amp;lt;p&amp;gt;before&amp;lt;/p&amp;gt; &amp;lt;div id="myId"&amp;gt;...&amp;lt;/div&amp;gt;
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isBrowserTabFocused

Returns `true` if the browser tab of the page is focused, `false` otherwise.

Use the `Document.hidden` property, introduced by the Page Visibility API to check if the browser tab of the page is visible or hidden.

```js
const isBrowserTabFocused = () =&amp;gt; !document.hidden;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isBrowserTabFocused(); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### nodeListToArray

Converts a `NodeList` to an array.

Use spread operator inside new array to convert a `NodeList` to an array.

```js
const nodeListToArray = nodeList =&amp;gt; [...nodeList];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
nodeListToArray(document.childNodes); // [ &amp;lt;!DOCTYPE html&amp;gt;, html ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### observeMutations ![advanced](/advanced.svg)

Returns a new MutationObserver and runs the provided callback for each mutation on the specified element.

Use a [`MutationObserver`](&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver&lt;/a&gt;) to observe mutations on the given element.
Use `Array.prototype.forEach()` to run the callback for each mutation that is observed.
Omit the third argument, `options`, to use the default [options](&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver#MutationObserverInit" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver#MutationObserverInit&lt;/a&gt;) (all `true`).

```js
const observeMutations = (element, callback, options) =&amp;gt; {
  const observer = new MutationObserver(mutations =&amp;gt; mutations.forEach(m =&amp;gt; callback(m)));
  observer.observe(
    element,
    Object.assign(
      {
        childList: true,
        attributes: true,
        attributeOldValue: true,
        characterData: true,
        characterDataOldValue: true,
        subtree: true
      },
      options
    )
  );
  return observer;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const obs = observeMutations(document, console.log); // Logs all mutations that happen on the page
obs.disconnect(); // Disconnects the observer and stops logging mutations on the page
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### off

Removes an event listener from an element.

Use `EventTarget.removeEventListener()` to remove an event listener from an element. 
Omit the fourth argument `opts` to use `false` or specify it based on the options used when the event listener was added.

```js
const off = (el, evt, fn, opts = false) =&amp;gt; el.removeEventListener(evt, fn, opts);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const fn = () =&amp;gt; console.log('!');
document.body.addEventListener('click', fn);
off(document.body, 'click', fn); // no longer logs '!' upon clicking on the page
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### on

Adds an event listener to an element with the ability to use event delegation.

Use `EventTarget.addEventListener()` to add an event listener to an element. If there is a `target` property supplied to the options object, ensure the event target matches the target specified and then invoke the callback by supplying the correct `this` context.
Returns a reference to the custom delegator function, in order to be possible to use with [`off`](#off).
Omit `opts` to default to non-delegation behavior and event bubbling.

```js
const on = (el, evt, fn, opts = {}) =&amp;gt; {
  const delegatorFn = e =&amp;gt; e.target.matches(opts.target) &amp;amp;&amp;amp; fn.call(e.target, e);
  el.addEventListener(evt, opts.target ? delegatorFn : fn, opts.options || false);
  if (opts.target) return delegatorFn;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const fn = () =&amp;gt; console.log('!');
on(document.body, 'click', fn); // logs '!' upon clicking the body
on(document.body, 'click', fn, { target: 'p' }); // logs '!' upon clicking a `p` element child of the body
on(document.body, 'click', fn, { options: true }); // use capturing instead of bubbling
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### onUserInputChange ![advanced](/advanced.svg)

Run the callback whenever the user input type changes (`mouse` or `touch`). Useful for enabling/disabling code depending on the input device. This process is dynamic and works with hybrid devices (e.g. touchscreen laptops).

Use two event listeners. Assume `mouse` input initially and bind a `touchstart` event listener to the document. 
On `touchstart`, add a `mousemove` event listener to listen for two consecutive `mousemove` events firing within 20ms, using `performance.now()`.
Run the callback with the input type as an argument in either of these situations.

```js
const onUserInputChange = callback =&amp;gt; {
  let type = 'mouse',
    lastTime = 0;
  const mousemoveHandler = () =&amp;gt; {
    const now = performance.now();
    if (now - lastTime &amp;lt; 20)
      (type = 'mouse'), callback(type), document.removeEventListener('mousemove', mousemoveHandler);
    lastTime = now;
  };
  document.addEventListener('touchstart', () =&amp;gt; {
    if (type === 'touch') return;
    (type = 'touch'), callback(type), document.addEventListener('mousemove', mousemoveHandler);
  });
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
onUserInputChange(type =&amp;gt; {
  console.log('The user is now using', type, 'as an input method.');
});
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### prefix

Returns the prefixed version (if necessary) of a CSS property that the browser supports.

Use `Array.prototype.findIndex()` on an array of vendor prefix strings to test if `document.body` has one of them defined in its `CSSStyleDeclaration` object, otherwise return `null`.
Use `String.prototype.charAt()` and `String.prototype.toUpperCase()` to capitalize the property, which will be appended to the vendor prefix string.

```js
const prefix = prop =&amp;gt; {
  const capitalizedProp = prop.charAt(0).toUpperCase() + prop.slice(1);
  const prefixes = ['', 'webkit', 'moz', 'ms', 'o'];
  const i = prefixes.findIndex(
    prefix =&amp;gt; typeof document.body.style[prefix ? prefix + capitalizedProp : prop] !== 'undefined'
  );
  return i !== -1 ? (i === 0 ? prop : prefixes[i] + capitalizedProp) : null;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
prefix('appearance'); // 'appearance' on a supported browser, otherwise 'webkitAppearance', 'mozAppearance', 'msAppearance' or 'oAppearance'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### recordAnimationFrames

Invokes the provided callback on each animation frame.

Use recursion. 
Provided that `running` is `true`, continue invoking `window.requestAnimationFrame()` which invokes the provided callback. 
Return an object with two methods `start` and `stop` to allow manual control of the recording. 
Omit the second argument, `autoStart`, to implicitly call `start` when the function is invoked.

```js
const recordAnimationFrames = (callback, autoStart = true) =&amp;gt; {
  let running = true,
    raf;
  const stop = () =&amp;gt; {
    running = false;
    cancelAnimationFrame(raf);
  };
  const start = () =&amp;gt; {
    running = true;
    run();
  };
  const run = () =&amp;gt; {
    raf = requestAnimationFrame(() =&amp;gt; {
      callback();
      if (running) run();
    });
  };
  if (autoStart) start();
  return { start, stop };
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const cb = () =&amp;gt; console.log('Animation frame fired');
const recorder = recordAnimationFrames(cb); // logs 'Animation frame fired' on each animation frame
recorder.stop(); // stops logging
recorder.start(); // starts again
const recorder2 = recordAnimationFrames(cb, false); // `start` needs to be explicitly called to begin recording frames
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### redirect

Redirects to a specified URL.

Use `window.location.href` or `window.location.replace()` to redirect to `url`.
Pass a second argument to simulate a link click (`true` - default) or an HTTP redirect (`false`).

```js
const redirect = (url, asLink = true) =&amp;gt;
  asLink ? (window.location.href = url) : window.location.replace(url);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
redirect('&lt;a href="https://google.com" rel="nofollow"&gt;https://google.com&lt;/a&gt;');
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### runAsync ![advanced](/advanced.svg)

Runs a function in a separate thread by using a [Web Worker](&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers&lt;/a&gt;), allowing long running functions to not block the UI.

Create a new `Worker` using a `Blob` object URL, the contents of which should be the stringified version of the supplied function.
Immediately post the return value of calling the function back.
Return a promise, listening for `onmessage` and `onerror` events and resolving the data posted back from the worker, or throwing an error.

```js
const runAsync = fn =&amp;gt; {
  const worker = new Worker(
    URL.createObjectURL(new Blob([`postMessage((${fn})());`]), {
      type: 'application/javascript; charset=utf-8'
    })
  );
  return new Promise((res, rej) =&amp;gt; {
    worker.onmessage = ({ data }) =&amp;gt; {
      res(data), worker.terminate();
    };
    worker.onerror = err =&amp;gt; {
      rej(err), worker.terminate();
    };
  });
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const longRunningFunction = () =&amp;gt; {
  let result = 0;
  for (let i = 0; i &amp;lt; 1000; i++)
    for (let j = 0; j &amp;lt; 700; j++) for (let k = 0; k &amp;lt; 300; k++) result = result + i + j + k;

  return result;
};
/*
  NOTE: Since the function is running in a different context, closures are not supported.
  The function supplied to `runAsync` gets stringified, so everything becomes literal.
  All variables and functions must be defined inside.
*/
runAsync(longRunningFunction).then(console.log); // 209685000000
runAsync(() =&amp;gt; 10 ** 3).then(console.log); // 1000
let outsideVariable = 50;
runAsync(() =&amp;gt; typeof outsideVariable).then(console.log); // 'undefined'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### scrollToTop

Smooth-scrolls to the top of the page.

Get distance from top using `document.documentElement.scrollTop` or `document.body.scrollTop`.
Scroll by a fraction of the distance from the top. Use `window.requestAnimationFrame()` to animate the scrolling.

```js
const scrollToTop = () =&amp;gt; {
  const c = document.documentElement.scrollTop || document.body.scrollTop;
  if (c &amp;gt; 0) {
    window.requestAnimationFrame(scrollToTop);
    window.scrollTo(0, c - c / 8);
  }
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
scrollToTop();
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### serializeForm

Encode a set of form elements as a query string.

Use the `FormData` constructor to convert the HTML `form` to `FormData`, `Array.from()` to convert to an array, passing a map function as the second argument.
Use `Array.prototype.map()` and `window.encodeURIComponent()` to encode each field's value.
Use `Array.prototype.join()` with appropriate argumens to produce an appropriate query string.

```js
const serializeForm = form =&amp;gt;
  Array.from(new FormData(form), field =&amp;gt; field.map(encodeURIComponent).join('=')).join('&amp;amp;');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
serializeForm(document.querySelector('#form')); // email=test%40email.com&amp;amp;name=Test%20Name
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### setStyle

Sets the value of a CSS rule for the specified element.

Use `element.style` to set the value of the CSS rule for the specified element to `val`.

```js
const setStyle = (el, ruleName, val) =&amp;gt; (el.style[ruleName] = val);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
setStyle(document.querySelector('p'), 'font-size', '20px'); // The first &amp;lt;p&amp;gt; element on the page will have a font-size of 20px
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### show

Shows all the elements specified.

Use the spread operator (`...`) and `Array.prototype.forEach()` to clear the `display` property for each element specified.

```js
const show = (...el) =&amp;gt; [...el].forEach(e =&amp;gt; (e.style.display = ''));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
show(...document.querySelectorAll('img')); // Shows all &amp;lt;img&amp;gt; elements on the page
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### smoothScroll

Smoothly scrolls the element on which it's called into the visible area of the browser window.

Use `.scrollIntoView` method to scroll the element. 
Pass `{ behavior: 'smooth' }` to `.scrollIntoView` so it scrolls smoothly.

```js
const smoothScroll = element =&amp;gt;
  document.querySelector(element).scrollIntoView({
    behavior: 'smooth'
  });
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
smoothScroll('#fooBar'); // scrolls smoothly to the element with the id fooBar
smoothScroll('.fooBar'); // scrolls smoothly to the first element with a class of fooBar
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### toggleClass

Toggle a class for an element.

Use `element.classList.toggle()` to toggle the specified class for the element.

```js
const toggleClass = (el, className) =&amp;gt; el.classList.toggle(className);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
toggleClass(document.querySelector('p.special'), 'special'); // The paragraph will not have the 'special' class anymore
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### triggerEvent

Triggers a specific event on a given element, optionally passing custom data.

Use `new CustomEvent()` to create an event from the specified `eventType` and details.
Use `el.dispatchEvent()` to trigger the newly created event on the given element.
Omit the third argument, `detail`, if you do not want to pass custom data to the triggered event.

```js
const triggerEvent = (el, eventType, detail) =&amp;gt;
  el.dispatchEvent(new CustomEvent(eventType, { detail }));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
triggerEvent(document.getElementById('myId'), 'click');
triggerEvent(document.getElementById('myId'), 'click', { username: 'bob' });
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### UUIDGeneratorBrowser

Generates a UUID in a browser.

Use `crypto` API to generate a UUID, compliant with [RFC4122](&lt;a href="https://www.ietf.org/rfc/rfc4122.txt" rel="nofollow"&gt;https://www.ietf.org/rfc/rfc4122.txt&lt;/a&gt;) version 4.

```js
const UUIDGeneratorBrowser = () =&amp;gt;
  ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =&amp;gt;
    (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] &amp;amp; (15 &amp;gt;&amp;gt; (c / 4)))).toString(16)
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
UUIDGeneratorBrowser(); // '7982fcfe-5721-4632-bede-6000885be57d'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

---

## &lt;g-emoji class="g-emoji" alias="stopwatch" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/23f1.png"&gt;⏱️&lt;/g-emoji&gt; Date


### dayOfYear

Gets the day of the year from a `Date` object.

Use `new Date()` and `Date.prototype.getFullYear()` to get the first day of the year as a `Date` object, subtract it from the provided `date` and divide with the milliseconds in each day to get the result.
Use `Math.floor()` to appropriately round the resulting day count to an integer.

```js
const dayOfYear = date =&amp;gt;
  Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
dayOfYear(new Date()); // 272
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### formatDuration

Returns the human readable format of the given number of milliseconds.

Divide `ms` with the appropriate values to obtain the appropriate values for `day`, `hour`, `minute`, `second` and `millisecond`.
Use `Object.entries()` with `Array.prototype.filter()` to keep only non-zero values.
Use `Array.prototype.map()` to create the string for each value, pluralizing appropriately.
Use `String.prototype.join(', ')` to combine the values into a string.

```js
const formatDuration = ms =&amp;gt; {
  if (ms &amp;lt; 0) ms = -ms;
  const time = {
    day: Math.floor(ms / 86400000),
    hour: Math.floor(ms / 3600000) % 24,
    minute: Math.floor(ms / 60000) % 60,
    second: Math.floor(ms / 1000) % 60,
    millisecond: Math.floor(ms) % 1000
  };
  return Object.entries(time)
    .filter(val =&amp;gt; val[1] !== 0)
    .map(([key, val]) =&amp;gt; `${val} ${key}${val !== 1 ? 's' : ''}`)
    .join(', ');
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
formatDuration(1001); // '1 second, 1 millisecond'
formatDuration(34325055574); // '397 days, 6 hours, 44 minutes, 15 seconds, 574 milliseconds'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### getColonTimeFromDate

Returns a string of the form `HH:MM:SS` from a `Date` object.

Use `Date.prototype.toTimeString()` and `String.prototype.slice()` to get the `HH:MM:SS` part of a given `Date` object.

```js
const getColonTimeFromDate = date =&amp;gt; date.toTimeString().slice(0, 8);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
getColonTimeFromDate(new Date()); // "08:38:00"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### getDaysDiffBetweenDates

Returns the difference (in days) between two dates.

Calculate the difference (in days) between two `Date` objects.

```js
const getDaysDiffBetweenDates = (dateInitial, dateFinal) =&amp;gt;
  (dateFinal - dateInitial) / (1000 * 3600 * 24);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
getDaysDiffBetweenDates(new Date('2017-12-13'), new Date('2017-12-22')); // 9
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### getMeridiemSuffixOfInteger

Converts an integer to a suffixed string, adding `am` or `pm` based on its value.

Use the modulo operator (`%`) and conditional checks to transform an integer to a stringified 12-hour format with meridiem suffix.

```js
const getMeridiemSuffixOfInteger = num =&amp;gt;
  num === 0 || num === 24
    ? 12 + 'am'
    : num === 12
    ? 12 + 'pm'
    : num &amp;lt; 12
    ? (num % 12) + 'am'
    : (num % 12) + 'pm';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
getMeridiemSuffixOfInteger(0); // "12am"
getMeridiemSuffixOfInteger(11); // "11am"
getMeridiemSuffixOfInteger(13); // "1pm"
getMeridiemSuffixOfInteger(25); // "1pm"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isAfterDate

Check if a date is after another date.

Use the greater than operator (`&amp;gt;`) to check if the first date comes after the second one.

```js
const isAfterDate = (dateA, dateB) =&amp;gt; dateA &amp;gt; dateB;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isAfterDate(new Date(2010, 10, 21), new Date(2010, 10, 20)); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isBeforeDate

Check if a date is before another date.

Use the less than operator (`&amp;lt;`) to check if the first date comes before the second one.

```js
const isBeforeDate = (dateA, dateB) =&amp;gt; dateA &amp;lt; dateB;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isBeforeDate(new Date(2010, 10, 20), new Date(2010, 10, 21)); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isSameDate

Check if a date is the same as another date.

Use `Date.prototype.toISOString()` and strict equality checking (`===`) to check if the first date is the same as the second one.

```js
const isSameDate = (dateA, dateB) =&amp;gt; dateA.toISOString() === dateB.toISOString();
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isSameDate(new Date(2010, 10, 20), new Date(2010, 10, 20)); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isWeekday

Results in a boolean representation of a specific date.

Pass the specific date object firstly.
Use `Date.getDay()` to check weekday by using a modulo operator and then returning a boolean.

```js
const isWeekday = (t = new Date()) =&amp;gt; {
  return t.getDay() % 6 !== 0;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isWeekday(); // true (if current date is 2019-07-19)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isWeekend

Results in a boolean representation of a specific date.

Pass the specific date object firstly.
Use `Date.getDay()` to check weekend based on the day being returned as 0 - 6 using a modulo operation then return a boolean.

```js
const isWeekend = (t = new Date()) =&amp;gt; {
  return t.getDay() % 6 === 0;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isWeekend(); // 2018-10-19 (if current date is 2018-10-18)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### maxDate

Returns the maximum of the given dates.

Use the ES6 spread syntax with `Math.max` to find the maximum date value, `new Date()` to convert it to a `Date` object.

```js
const maxDate = dates =&amp;gt; new Date(Math.max(...dates));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const array = [
  new Date(2017, 4, 13),
  new Date(2018, 2, 12),
  new Date(2016, 0, 10),
  new Date(2016, 0, 9)
];
maxDate(array); // 2018-03-11T22:00:00.000Z
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### minDate

Returns the minimum of the given dates.

Use the ES6 spread syntax to find the minimum date value, `new Date()` to convert it to a `Date` object.

```js
const minDate = dates =&amp;gt; new Date(Math.min(...dates));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const array = [
  new Date(2017, 4, 13),
  new Date(2018, 2, 12),
  new Date(2016, 0, 10),
  new Date(2016, 0, 9)
];
minDate(array); // 2016-01-08T22:00:00.000Z
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### tomorrow

Results in a string representation of tomorrow's date.

Use `new Date()` to get the current date, increment by one using `Date.getDate()` and set the value to the result using `Date.setDate()`. 
Use `Date.prototype.toISOString()` to return a string in `yyyy-mm-dd` format.

```js
const tomorrow = () =&amp;gt; {
  let t = new Date();
  t.setDate(t.getDate() + 1);
  return t.toISOString().split('T')[0];
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
tomorrow(); // 2018-10-19 (if current date is 2018-10-18)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### yesterday

Results in a string representation of yesterday's date.

Use `new Date()` to get the current date, decrement by one using `Date.getDate()` and set the value to the result using `Date.setDate()`.
Use `Date.prototype.toISOString()` to return a string in `yyyy-mm-dd` format.

```js
const yesterday = () =&amp;gt; {
  let t = new Date();
  t.setDate(t.getDate() - 1);
  return t.toISOString().split('T')[0];
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
yesterday(); // 2018-10-17 (if current date is 2018-10-18)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

---

## &lt;g-emoji class="g-emoji" alias="control_knobs" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f39b.png"&gt;🎛️&lt;/g-emoji&gt; Function


### attempt

Attempts to invoke a function with the provided arguments, returning either the result or the caught error object.

Use a `try... catch` block to return either the result of the function or an appropriate error.

```js
const attempt = (fn, ...args) =&amp;gt; {
  try {
    return fn(...args);
  } catch (e) {
    return e instanceof Error ? e : new Error(e);
  }
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
var elements = attempt(function(selector) {
  return document.querySelectorAll(selector);
}, '&amp;gt;_&amp;gt;');
if (elements instanceof Error) elements = []; // elements = []
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### bind

Creates a function that invokes `fn` with a given context, optionally adding any additional supplied parameters to the beginning of the arguments.

Return a `function` that uses `Function.prototype.apply()` to apply the given `context` to `fn`.
Use `Array.prototype.concat()` to prepend any additional supplied parameters to the arguments.

```js
const bind = (fn, context, ...boundArgs) =&amp;gt; (...args) =&amp;gt; fn.apply(context, [...boundArgs, ...args]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
function greet(greeting, punctuation) {
  return greeting + ' ' + this.user + punctuation;
}
const freddy = { user: 'fred' };
const freddyBound = bind(greet, freddy);
console.log(freddyBound('hi', '!')); // 'hi fred!'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### bindKey

Creates a function that invokes the method at a given key of an object, optionally adding any additional supplied parameters to the beginning of the arguments.

Return a `function` that uses `Function.prototype.apply()` to bind `context[fn]` to `context`.
Use the spread operator (`...`) to prepend any additional supplied parameters to the arguments.

```js
const bindKey = (context, fn, ...boundArgs) =&amp;gt; (...args) =&amp;gt;
  context[fn].apply(context, [...boundArgs, ...args]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const freddy = {
  user: 'fred',
  greet: function(greeting, punctuation) {
    return greeting + ' ' + this.user + punctuation;
  }
};
const freddyBound = bindKey(freddy, 'greet');
console.log(freddyBound('hi', '!')); // 'hi fred!'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### chainAsync

Chains asynchronous functions.

Loop through an array of functions containing asynchronous events, calling `next` when each asynchronous event has completed.

```js
const chainAsync = fns =&amp;gt; {
  let curr = 0;
  const last = fns[fns.length - 1];
  const next = () =&amp;gt; {
    const fn = fns[curr++];
    fn === last ? fn() : fn(next);
  };
  next();
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
chainAsync([
  next =&amp;gt; {
    console.log('0 seconds');
    setTimeout(next, 1000);
  },
  next =&amp;gt; {
    console.log('1 second');
    setTimeout(next, 1000);
  },
  () =&amp;gt; {
    console.log('2 second');
  }
]);
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### checkProp

Given a `predicate` function and a `prop` string, this curried function will then take an `object` to inspect by calling the property and passing it to the predicate.

Summon `prop` on `obj`, pass it to a provided `predicate` function and return a masked boolean.

```js
const checkProp = (predicate, prop) =&amp;gt; obj =&amp;gt; !!predicate(obj[prop]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const lengthIs4 = checkProp(l =&amp;gt; l === 4, 'length');
lengthIs4([]); // false
lengthIs4([1,2,3,4]); // true
lengthIs4(new Set([1,2,3,4])); // false (Set uses Size, not length)

const session = { user: {} };
const validUserSession = checkProps(u =&amp;gt; u.active &amp;amp;&amp;amp; !u.disabled, 'user');

validUserSession(session); // false

session.user.active = true;
validUserSession(session); // true

const noLength(l =&amp;gt; l === undefined, 'length');
noLength([]); // false
noLength({}); // true
noLength(new Set()); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### compose

Performs right-to-left function composition.

Use `Array.prototype.reduce()` to perform right-to-left function composition.
The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.

```js
const compose = (...fns) =&amp;gt; fns.reduce((f, g) =&amp;gt; (...args) =&amp;gt; f(g(...args)));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const add5 = x =&amp;gt; x + 5;
const multiply = (x, y) =&amp;gt; x * y;
const multiplyAndAdd5 = compose(
  add5,
  multiply
);
multiplyAndAdd5(5, 2); // 15
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### composeRight

Performs left-to-right function composition.

Use `Array.prototype.reduce()` to perform left-to-right function composition.
The first (leftmost) function can accept one or more arguments; the remaining functions must be unary.

```js
const composeRight = (...fns) =&amp;gt; fns.reduce((f, g) =&amp;gt; (...args) =&amp;gt; g(f(...args)));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const add = (x, y) =&amp;gt; x + y;
const square = x =&amp;gt; x * x;
const addAndSquare = composeRight(add, square);
addAndSquare(1, 2); // 9
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### converge

Accepts a converging function and a list of branching functions and returns a function that applies each branching function to the arguments and the results of the branching functions are passed as arguments to the converging function.

Use `Array.prototype.map()` and `Function.prototype.apply()` to apply each function to the given arguments.
Use the spread operator (`...`) to call `coverger` with the results of all other functions.

```js
const converge = (converger, fns) =&amp;gt; (...args) =&amp;gt; converger(...fns.map(fn =&amp;gt; fn.apply(null, args)));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const average = converge((a, b) =&amp;gt; a / b, [
  arr =&amp;gt; arr.reduce((a, v) =&amp;gt; a + v, 0),
  arr =&amp;gt; arr.length
]);
average([1, 2, 3, 4, 5, 6, 7]); // 4
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### curry

Curries a function.

Use recursion.
If the number of provided arguments (`args`) is sufficient, call the passed function `fn`.
Otherwise, return a curried function `fn` that expects the rest of the arguments.
If you want to curry a function that accepts a variable number of arguments (a variadic function, e.g. `Math.min()`), you can optionally pass the number of arguments to the second parameter `arity`.

```js
const curry = (fn, arity = fn.length, ...args) =&amp;gt;
  arity &amp;lt;= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
curry(Math.pow)(2)(10); // 1024
curry(Math.min, 3)(10)(50)(2); // 2
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### debounce

Creates a debounced function that delays invoking the provided function until at least `ms` milliseconds have elapsed since the last time it was invoked.

Each time the debounced function is invoked, clear the current pending timeout with `clearTimeout()` and use `setTimeout()` to create a new timeout that delays invoking the function until at least `ms` milliseconds has elapsed. Use `Function.prototype.apply()` to apply the `this` context to the function and provide the necessary arguments.
Omit the second argument, `ms`, to set the timeout at a default of 0 ms.

```js
const debounce = (fn, ms = 0) =&amp;gt; {
  let timeoutId;
  return function(...args) {
    clearTimeout(timeoutId);
    timeoutId = setTimeout(() =&amp;gt; fn.apply(this, args), ms);
  };
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
window.addEventListener(
  'resize',
  debounce(() =&amp;gt; {
    console.log(window.innerWidth);
    console.log(window.innerHeight);
  }, 250)
); // Will log the window dimensions at most every 250ms
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### defer

Defers invoking a function until the current call stack has cleared.

Use `setTimeout()` with a timeout of 1ms to add a new event to the browser event queue and allow the rendering engine to complete its work. Use the spread (`...`) operator to supply the function with an arbitrary number of arguments.

```js
const defer = (fn, ...args) =&amp;gt; setTimeout(fn, 1, ...args);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
// Example A:
defer(console.log, 'a'), console.log('b'); // logs 'b' then 'a'

// Example B:
document.querySelector('#someElement').innerHTML = 'Hello';
longRunningFunction(); // Browser will not update the HTML until this has finished
defer(longRunningFunction); // Browser will update the HTML then run the function
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### delay

Invokes the provided function after `wait` milliseconds.

Use `setTimeout()` to delay execution of `fn`.
Use the spread (`...`) operator to supply the function with an arbitrary number of arguments.

```js
const delay = (fn, wait, ...args) =&amp;gt; setTimeout(fn, wait, ...args);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
delay(
  function(text) {
    console.log(text);
  },
  1000,
  'later'
); // Logs 'later' after one second.
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### functionName

Logs the name of a function.

Use `console.debug()` and the `name` property of the passed method to log the method's name to the `debug` channel of the console.

```js
const functionName = fn =&amp;gt; (console.debug(fn.name), fn);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
functionName(Math.max); // max (logged in debug channel of console)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### hz

Returns the number of times a function executed per second. 
`hz` is the unit for `hertz`, the unit of frequency defined as one cycle per second.

Use `performance.now()` to get the difference in milliseconds before and after the iteration loop to calculate the time elapsed executing the function `iterations` times. 
Return the number of cycles per second by converting milliseconds to seconds and dividing it by the time elapsed. 
Omit the second argument, `iterations`, to use the default of 100 iterations.

```js
const hz = (fn, iterations = 100) =&amp;gt; {
  const before = performance.now();
  for (let i = 0; i &amp;lt; iterations; i++) fn();
  return (1000 * iterations) / (performance.now() - before);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
// 10,000 element array
const numbers = Array(10000)
  .fill()
  .map((_, i) =&amp;gt; i);

// Test functions with the same goal: sum up the elements in the array
const sumReduce = () =&amp;gt; numbers.reduce((acc, n) =&amp;gt; acc + n, 0);
const sumForLoop = () =&amp;gt; {
  let sum = 0;
  for (let i = 0; i &amp;lt; numbers.length; i++) sum += numbers[i];
  return sum;
};

// `sumForLoop` is nearly 10 times faster
Math.round(hz(sumReduce)); // 572
Math.round(hz(sumForLoop)); // 4784
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### memoize ![advanced](/advanced.svg)

Returns the memoized (cached) function.

Create an empty cache by instantiating a new `Map` object.
Return a function which takes a single argument to be supplied to the memoized function by first checking if the function's output for that specific input value is already cached, or store and return it if not. The `function` keyword must be used in order to allow the memoized function to have its `this` context changed if necessary.
Allow access to the `cache` by setting it as a property on the returned function.

```js
const memoize = fn =&amp;gt; {
  const cache = new Map();
  const cached = function(val) {
    return cache.has(val) ? cache.get(val) : cache.set(val, fn.call(this, val)) &amp;amp;&amp;amp; cache.get(val);
  };
  cached.cache = cache;
  return cached;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
// See the `anagrams` snippet.
const anagramsCached = memoize(anagrams);
anagramsCached('javascript'); // takes a long time
anagramsCached('javascript'); // returns virtually instantly since it's now cached
console.log(anagramsCached.cache); // The cached anagrams map
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### negate

Negates a predicate function.

Take a predicate function and apply the not operator (`!`) to it with its arguments.

```js
const negate = func =&amp;gt; (...args) =&amp;gt; !func(...args);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
[1, 2, 3, 4, 5, 6].filter(negate(n =&amp;gt; n % 2 === 0)); // [ 1, 3, 5 ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### once

Ensures a function is called only once.

Utilizing a closure, use a flag, `called`, and set it to `true` once the function is called for the first time, preventing it from being called again. In order to allow the function to have its `this` context changed (such as in an event listener), the `function` keyword must be used, and the supplied function must have the context applied.
Allow the function to be supplied with an arbitrary number of arguments using the rest/spread (`...`) operator.

```js
const once = fn =&amp;gt; {
  let called = false;
  return function(...args) {
    if (called) return;
    called = true;
    return fn.apply(this, args);
  };
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const startApp = function(event) {
  console.log(this, event); // document.body, MouseEvent
};
document.body.addEventListener('click', once(startApp)); // only runs `startApp` once upon click
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### partial

Creates a function that invokes `fn` with `partials` prepended to the arguments it receives.

Use the spread operator (`...`) to prepend `partials` to the list of arguments of `fn`.

```js
const partial = (fn, ...partials) =&amp;gt; (...args) =&amp;gt; fn(...partials, ...args);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const greet = (greeting, name) =&amp;gt; greeting + ' ' + name + '!';
const greetHello = partial(greet, 'Hello');
greetHello('John'); // 'Hello John!'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### partialRight

Creates a function that invokes `fn` with `partials` appended to the arguments it receives.

Use the spread operator (`...`) to append `partials` to the list of arguments of `fn`.

```js
const partialRight = (fn, ...partials) =&amp;gt; (...args) =&amp;gt; fn(...args, ...partials);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const greet = (greeting, name) =&amp;gt; greeting + ' ' + name + '!';
const greetJohn = partialRight(greet, 'John');
greetJohn('Hello'); // 'Hello John!'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### runPromisesInSeries

Runs an array of promises in series.

Use `Array.prototype.reduce()` to create a promise chain, where each promise returns the next promise when resolved.

```js
const runPromisesInSeries = ps =&amp;gt; ps.reduce((p, next) =&amp;gt; p.then(next), Promise.resolve());
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const delay = d =&amp;gt; new Promise(r =&amp;gt; setTimeout(r, d));
runPromisesInSeries([() =&amp;gt; delay(1000), () =&amp;gt; delay(2000)]); // Executes each promise sequentially, taking a total of 3 seconds to complete
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sleep

Delays the execution of an asynchronous function.

Delay executing part of an `async` function, by putting it to sleep, returning a `Promise`.

```js
const sleep = ms =&amp;gt; new Promise(resolve =&amp;gt; setTimeout(resolve, ms));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
async function sleepyWork() {
  console.log("I'm going to sleep for 1 second.");
  await sleep(1000);
  console.log('I woke up after 1 second.');
}
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### throttle ![advanced](/advanced.svg)

Creates a throttled function that only invokes the provided function at most once per every `wait` milliseconds

Use `setTimeout()` and `clearTimeout()` to throttle the given method, `fn`.
Use `Function.prototype.apply()` to apply the `this` context to the function and provide the necessary `arguments`.
Use `Date.now()` to keep track of the last time the throttled function was invoked.
Omit the second argument, `wait`, to set the timeout at a default of 0 ms.

```js
const throttle = (fn, wait) =&amp;gt; {
  let inThrottle, lastFn, lastTime;
  return function() {
    const context = this,
      args = arguments;
    if (!inThrottle) {
      fn.apply(context, args);
      lastTime = Date.now();
      inThrottle = true;
    } else {
      clearTimeout(lastFn);
      lastFn = setTimeout(function() {
        if (Date.now() - lastTime &amp;gt;= wait) {
          fn.apply(context, args);
          lastTime = Date.now();
        }
      }, Math.max(wait - (Date.now() - lastTime), 0));
    }
  };
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
window.addEventListener(
  'resize',
  throttle(function(evt) {
    console.log(window.innerWidth);
    console.log(window.innerHeight);
  }, 250)
); // Will log the window dimensions at most every 250ms
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### times

Iterates over a callback `n` times

Use `Function.call()` to call `fn` `n` times or until it returns `false`.
Omit the last argument, `context`, to use an `undefined` object (or the global object in non-strict mode).

```js
const times = (n, fn, context = undefined) =&amp;gt; {
  let i = 0;
  while (fn.call(context, i) !== false &amp;amp;&amp;amp; ++i &amp;lt; n) {}
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
var output = '';
times(5, i =&amp;gt; (output += i));
console.log(output); // 01234
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### uncurry

Uncurries a function up to depth `n`.

Return a variadic function.
Use `Array.prototype.reduce()` on the provided arguments to call each subsequent curry level of the function.
If the `length` of the provided arguments is less than `n` throw an error.
Otherwise, call `fn` with the proper amount of arguments, using `Array.prototype.slice(0, n)`.
Omit the second argument, `n`, to uncurry up to depth `1`.

```js
const uncurry = (fn, n = 1) =&amp;gt; (...args) =&amp;gt; {
  const next = acc =&amp;gt; args =&amp;gt; args.reduce((x, y) =&amp;gt; x(y), acc);
  if (n &amp;gt; args.length) throw new RangeError('Arguments too few!');
  return next(fn)(args.slice(0, n));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const add = x =&amp;gt; y =&amp;gt; z =&amp;gt; x + y + z;
const uncurriedAdd = uncurry(add, 3);
uncurriedAdd(1, 2, 3); // 6
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### unfold

Builds an array, using an iterator function and an initial seed value.

Use a `while` loop and `Array.prototype.push()` to call the function repeatedly until it returns `false`.
The iterator function accepts one argument (`seed`) and must always return an array with two elements ([`value`, `nextSeed`]) or `false` to terminate.

```js
const unfold = (fn, seed) =&amp;gt; {
  let result = [],
    val = [null, seed];
  while ((val = fn(val[1]))) result.push(val[0]);
  return result;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
var f = n =&amp;gt; (n &amp;gt; 50 ? false : [-n, n + 10]);
unfold(f, 10); // [-10, -20, -30, -40, -50]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### when

Tests a value, `x`, against a predicate function. If `true`, return `fn(x)`. Else, return `x`. 

Return a function expecting a single value, `x`, that returns the appropriate value based on `pred`.

```js
const when = (pred, whenTrue) =&amp;gt; x =&amp;gt; (pred(x) ? whenTrue(x) : x);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const doubleEvenNumbers = when(x =&amp;gt; x % 2 === 0, x =&amp;gt; x * 2);
doubleEvenNumbers(2); // 4
doubleEvenNumbers(1); // 1
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

---

## &lt;g-emoji class="g-emoji" alias="heavy_division_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2797.png"&gt;➗&lt;/g-emoji&gt; Math


### approximatelyEqual

Checks if two numbers are approximately equal to each other.

Use `Math.abs()` to compare the absolute difference of the two values to `epsilon`.
Omit the third parameter, `epsilon`, to use a default value of `0.001`.

```js
const approximatelyEqual = (v1, v2, epsilon = 0.001) =&amp;gt; Math.abs(v1 - v2) &amp;lt; epsilon;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
approximatelyEqual(Math.PI / 2.0, 1.5708); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### average

Returns the average of two or more numbers.

Use `Array.prototype.reduce()` to add each value to an accumulator, initialized with a value of `0`, divide by the `length` of the array.

```js
const average = (...nums) =&amp;gt; nums.reduce((acc, val) =&amp;gt; acc + val, 0) / nums.length;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
average(...[1, 2, 3]); // 2
average(1, 2, 3); // 2
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### averageBy

Returns the average of an array, after mapping each element to a value using the provided function.

Use `Array.prototype.map()` to map each element to the value returned by `fn`, `Array.prototype.reduce()` to add each value to an accumulator, initialized with a value of `0`, divide by the `length` of the array.

```js
const averageBy = (arr, fn) =&amp;gt;
  arr.map(typeof fn === 'function' ? fn : val =&amp;gt; val[fn]).reduce((acc, val) =&amp;gt; acc + val, 0) /
  arr.length;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
averageBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o =&amp;gt; o.n); // 5
averageBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'); // 5
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### binomialCoefficient

Evaluates the binomial coefficient of two integers `n` and `k`.

Use `Number.isNaN()` to check if any of the two values is `NaN`.
Check if `k` is less than `0`, greater than or equal to `n`, equal to `1` or `n - 1` and return the appropriate result.
Check if `n - k` is less than `k` and switch their values accordingly.
Loop from `2` through `k` and calculate the binomial coefficient.
Use `Math.round()` to account for rounding errors in the calculation.

```js
const binomialCoefficient = (n, k) =&amp;gt; {
  if (Number.isNaN(n) || Number.isNaN(k)) return NaN;
  if (k &amp;lt; 0 || k &amp;gt; n) return 0;
  if (k === 0 || k === n) return 1;
  if (k === 1 || k === n - 1) return n;
  if (n - k &amp;lt; k) k = n - k;
  let res = n;
  for (let j = 2; j &amp;lt;= k; j++) res *= (n - j + 1) / j;
  return Math.round(res);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
binomialCoefficient(8, 2); // 28
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### clampNumber

Clamps `num` within the inclusive range specified by the boundary values `a` and `b`.

If `num` falls within the range, return `num`.
Otherwise, return the nearest number in the range.

```js
const clampNumber = (num, a, b) =&amp;gt; Math.max(Math.min(num, Math.max(a, b)), Math.min(a, b));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
clampNumber(2, 3, 5); // 3
clampNumber(1, -1, -5); // -1
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### degreesToRads

Converts an angle from degrees to radians.

Use `Math.PI` and the degree to radian formula to convert the angle from degrees to radians.

```js
const degreesToRads = deg =&amp;gt; (deg * Math.PI) / 180.0;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
degreesToRads(90.0); // ~1.5708
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### digitize

Converts a number to an array of digits.

Convert the number to a string, using the spread operator (`...`) to build an array.
Use `Array.prototype.map()` and `parseInt()` to transform each value to an integer.

```js
const digitize = n =&amp;gt; [...`${n}`].map(i =&amp;gt; parseInt(i));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
digitize(123); // [1, 2, 3]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### distance

Returns the distance between two points.

Use `Math.hypot()` to calculate the Euclidean distance between two points.

```js
const distance = (x0, y0, x1, y1) =&amp;gt; Math.hypot(x1 - x0, y1 - y0);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
distance(1, 1, 2, 3); // 2.23606797749979
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### elo ![advanced](/advanced.svg)

Computes the new ratings between two or more opponents using the [Elo rating system](&lt;a href="https://en.wikipedia.org/wiki/Elo_rating_system" rel="nofollow"&gt;https://en.wikipedia.org/wiki/Elo_rating_system&lt;/a&gt;). It takes an array
of pre-ratings and returns an array containing post-ratings.
The array should be ordered from best performer to worst performer (winner -&amp;gt; loser).

Use the exponent `**` operator and math operators to compute the expected score (chance of winning).
of each opponent and compute the new rating for each.
Loop through the ratings, using each permutation to compute the post-Elo rating for each player in a pairwise fashion. 
Omit the second argument to use the default `kFactor` of 32.

```js
const elo = ([...ratings], kFactor = 32, selfRating) =&amp;gt; {
  const [a, b] = ratings;
  const expectedScore = (self, opponent) =&amp;gt; 1 / (1 + 10 ** ((opponent - self) / 400));
  const newRating = (rating, i) =&amp;gt;
    (selfRating || rating) + kFactor * (i - expectedScore(i ? a : b, i ? b : a));
  if (ratings.length === 2) return [newRating(a, 1), newRating(b, 0)];

  for (let i = 0, len = ratings.length; i &amp;lt; len; i++) {
    let j = i;
    while (j &amp;lt; len - 1) {
      j++;
      [ratings[i], ratings[j]] = elo([ratings[i], ratings[j]], kFactor);
    }
  }
  return ratings;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
// Standard 1v1s
elo([1200, 1200]); // [1216, 1184]
elo([1200, 1200], 64); // [1232, 1168]
// 4 player FFA, all same rank
elo([1200, 1200, 1200, 1200]).map(Math.round); // [1246, 1215, 1185, 1154]
/*
For teams, each rating can adjusted based on own team's average rating vs.
average rating of opposing team, with the score being added to their
own individual rating by supplying it as the third argument.
*/
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### factorial

Calculates the factorial of a number.

Use recursion.
If `n` is less than or equal to `1`, return `1`.
Otherwise, return the product of `n` and the factorial of `n - 1`.
Throws an exception if `n` is a negative number.

```js
const factorial = n =&amp;gt;
  n &amp;lt; 0
    ? (() =&amp;gt; {
        throw new TypeError('Negative numbers are not allowed!');
      })()
    : n &amp;lt;= 1
    ? 1
    : n * factorial(n - 1);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
factorial(6); // 720
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### fibonacci

Generates an array, containing the Fibonacci sequence, up until the nth term.

Create an empty array of the specific length, initializing the first two values (`0` and `1`).
Use `Array.prototype.reduce()` to add values into the array, using the sum of the last two values, except for the first two.

```js
const fibonacci = n =&amp;gt;
  Array.from({ length: n }).reduce(
    (acc, val, i) =&amp;gt; acc.concat(i &amp;gt; 1 ? acc[i - 1] + acc[i - 2] : i),
    []
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
fibonacci(6); // [0, 1, 1, 2, 3, 5]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### gcd

Calculates the greatest common divisor between two or more numbers/arrays.

The inner `_gcd` function uses recursion.
Base case is when `y` equals `0`. In this case, return `x`.
Otherwise, return the GCD of `y` and the remainder of the division `x/y`.

```js
const gcd = (...arr) =&amp;gt; {
  const _gcd = (x, y) =&amp;gt; (!y ? x : gcd(y, x % y));
  return [...arr].reduce((a, b) =&amp;gt; _gcd(a, b));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
gcd(8, 36); // 4
gcd(...[12, 8, 32]); // 4
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### geometricProgression

Initializes an array containing the numbers in the specified range where `start` and `end` are inclusive and the ratio between two terms is `step`.
Returns an error if `step` equals `1`.

Use `Array.from()`, `Math.log()` and `Math.floor()` to create an array of the desired length, `Array.prototype.map()` to fill with the desired values in a range.
Omit the second argument, `start`, to use a default value of `1`.
Omit the third argument, `step`, to use a default value of `2`.

```js
const geometricProgression = (end, start = 1, step = 2) =&amp;gt;
  Array.from({ length: Math.floor(Math.log(end / start) / Math.log(step)) + 1 }).map(
    (v, i) =&amp;gt; start * step ** i
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
geometricProgression(256); // [1, 2, 4, 8, 16, 32, 64, 128, 256]
geometricProgression(256, 3); // [3, 6, 12, 24, 48, 96, 192]
geometricProgression(256, 1, 4); // [1, 4, 16, 64, 256]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### hammingDistance

Calculates the Hamming distance between two values.

Use XOR operator (`^`) to find the bit difference between the two numbers, convert to a binary string using `toString(2)`.
Count and return the number of `1`s in the string, using `match(/1/g)`.

```js
const hammingDistance = (num1, num2) =&amp;gt; ((num1 ^ num2).toString(2).match(/1/g) || '').length;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
hammingDistance(2, 3); // 1
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### inRange

Checks if the given number falls within the given range.

Use arithmetic comparison to check if the given number is in the specified range.
If the second parameter, `end`, is not specified, the range is considered to be from `0` to `start`.

```js
const inRange = (n, start, end = null) =&amp;gt; {
  if (end &amp;amp;&amp;amp; start &amp;gt; end) [end, start] = [start, end];
  return end == null ? n &amp;gt;= 0 &amp;amp;&amp;amp; n &amp;lt; start : n &amp;gt;= start &amp;amp;&amp;amp; n &amp;lt; end;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
inRange(3, 2, 5); // true
inRange(3, 4); // true
inRange(2, 3, 5); // false
inRange(3, 2); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isDivisible

Checks if the first numeric argument is divisible by the second one.

Use the modulo operator (`%`) to check if the remainder is equal to `0`.

```js
const isDivisible = (dividend, divisor) =&amp;gt; dividend % divisor === 0;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isDivisible(6, 3); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isEven

Returns `true` if the given number is even, `false` otherwise.

Checks whether a number is odd or even using the modulo (`%`) operator.
Returns `true` if the number is even, `false` if the number is odd.

```js
const isEven = num =&amp;gt; num % 2 === 0;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isEven(3); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isNegativeZero

Checks if the given value is equal to negative zero (`-0`).

Checks whether a passed value is equal to `0` and if `1` divided by the value equals `-Infinity`.

```js
const isNegativeZero = val =&amp;gt; val === 0 &amp;amp;&amp;amp; 1 / val === -Infinity;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isNegativeZero(-0); // true
isNegativeZero(0); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isOdd

Returns `true` if the given number is odd, `false` otherwise.

Checks whether a number is odd or even using the modulo (`%`) operator.
Returns `true` if the number is odd, `false` if the number is even.

```js
const isOdd = num =&amp;gt; num % 2 === 1;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isOdd(3); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isPrime

Checks if the provided integer is a prime number.

Check numbers from `2` to the square root of the given number.
Return `false` if any of them divides the given number, else return `true`, unless the number is less than `2`.

```js
const isPrime = num =&amp;gt; {
  const boundary = Math.floor(Math.sqrt(num));
  for (var i = 2; i &amp;lt;= boundary; i++) if (num % i === 0) return false;
  return num &amp;gt;= 2;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isPrime(11); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### lcm

Returns the least common multiple of two or more numbers.

Use the greatest common divisor (GCD) formula and the fact that `lcm(x,y) = x * y / gcd(x,y)` to determine the least common multiple.
The GCD formula uses recursion.

```js
const lcm = (...arr) =&amp;gt; {
  const gcd = (x, y) =&amp;gt; (!y ? x : gcd(y, x % y));
  const _lcm = (x, y) =&amp;gt; (x * y) / gcd(x, y);
  return [...arr].reduce((a, b) =&amp;gt; _lcm(a, b));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
lcm(12, 7); // 84
lcm(...[1, 3, 4, 5]); // 60
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### luhnCheck ![advanced](/advanced.svg)

Implementation of the [Luhn Algorithm](&lt;a href="https://en.wikipedia.org/wiki/Luhn_algorithm" rel="nofollow"&gt;https://en.wikipedia.org/wiki/Luhn_algorithm&lt;/a&gt;) used to validate a variety of identification numbers, such as credit card numbers, IMEI numbers, National Provider Identifier numbers etc.

Use `String.prototype.split('')`, `Array.prototype.reverse()` and `Array.prototype.map()` in combination with `parseInt()` to obtain an array of digits.
Use `Array.prototype.splice(0,1)` to obtain the last digit.
Use `Array.prototype.reduce()` to implement the Luhn Algorithm.
Return `true` if `sum` is divisible by `10`, `false` otherwise.

```js
const luhnCheck = num =&amp;gt; {
  let arr = (num + '')
    .split('')
    .reverse()
    .map(x =&amp;gt; parseInt(x));
  let lastDigit = arr.splice(0, 1)[0];
  let sum = arr.reduce((acc, val, i) =&amp;gt; (i % 2 !== 0 ? acc + val : acc + ((val * 2) % 9) || 9), 0);
  sum += lastDigit;
  return sum % 10 === 0;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
luhnCheck('4485275742308327'); // true
luhnCheck(6011329933655299); //  false
luhnCheck(123456789); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### mapNumRange

Maps a number from one range to another range.

Returns `num` mapped between `outMin`-`outMax` from `inMin`-`inMax`.

```js
const mapNumRange = (num, inMin, inMax, outMin, outMax) =&amp;gt;
  ((num - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
mapNumRange(5, 0, 10, 0, 100); // 50
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### maxBy

Returns the maximum value of an array, after mapping each element to a value using the provided function.

Use `Array.prototype.map()` to map each element to the value returned by `fn`, `Math.max()` to get the maximum value.

```js
const maxBy = (arr, fn) =&amp;gt; Math.max(...arr.map(typeof fn === 'function' ? fn : val =&amp;gt; val[fn]));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
maxBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o =&amp;gt; o.n); // 8
maxBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'); // 8
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### median

Returns the median of an array of numbers.

Find the middle of the array, use `Array.prototype.sort()` to sort the values.
Return the number at the midpoint if `length` is odd, otherwise the average of the two middle numbers.

```js
const median = arr =&amp;gt; {
  const mid = Math.floor(arr.length / 2),
    nums = [...arr].sort((a, b) =&amp;gt; a - b);
  return arr.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
median([5, 6, 50, 1, -5]); // 5
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### midpoint

Calculates the midpoint between two pairs of (x,y) points.

Destructure the array to get `x1`, `y1`, `x2` and `y2`, calculate the midpoint for each dimension by dividing the sum of the two endpoints by `2`.

```js
const midpoint = ([x1, y1], [x2, y2]) =&amp;gt; [(x1 + x2) / 2, (y1 + y2) / 2];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
midpoint([2, 2], [4, 4]); // [3, 3]
midpoint([4, 4], [6, 6]); // [5, 5]
midpoint([1, 3], [2, 4]); // [1.5, 3.5]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### minBy

Returns the minimum value of an array, after mapping each element to a value using the provided function.

Use `Array.prototype.map()` to map each element to the value returned by `fn`, `Math.min()` to get the minimum value.

```js
const minBy = (arr, fn) =&amp;gt; Math.min(...arr.map(typeof fn === 'function' ? fn : val =&amp;gt; val[fn]));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
minBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o =&amp;gt; o.n); // 2
minBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'); // 2
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### percentile

Uses the percentile formula to calculate how many numbers in the given array are less or equal to the given value.

Use `Array.prototype.reduce()` to calculate how many numbers are below the value and how many are the same value and apply the percentile formula.

```js
const percentile = (arr, val) =&amp;gt;
  (100 * arr.reduce((acc, v) =&amp;gt; acc + (v &amp;lt; val ? 1 : 0) + (v === val ? 0.5 : 0), 0)) / arr.length;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
percentile([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 6); // 55
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### powerset

Returns the powerset of a given array of numbers.

Use `Array.prototype.reduce()` combined with `Array.prototype.map()` to iterate over elements and combine into an array containing all combinations.

```js
const powerset = arr =&amp;gt; arr.reduce((a, v) =&amp;gt; a.concat(a.map(r =&amp;gt; [v].concat(r))), [[]]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
powerset([1, 2]); // [[], [1], [2], [2, 1]]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### primes

Generates primes up to a given number, using the Sieve of Eratosthenes.

Generate an array from `2` to the given number. Use `Array.prototype.filter()` to filter out the values divisible by any number from `2` to the square root of the provided number.

```js
const primes = num =&amp;gt; {
  let arr = Array.from({ length: num - 1 }).map((x, i) =&amp;gt; i + 2),
    sqroot = Math.floor(Math.sqrt(num)),
    numsTillSqroot = Array.from({ length: sqroot - 1 }).map((x, i) =&amp;gt; i + 2);
  numsTillSqroot.forEach(x =&amp;gt; (arr = arr.filter(y =&amp;gt; y % x !== 0 || y === x)));
  return arr;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
primes(10); // [2,3,5,7]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### radsToDegrees

Converts an angle from radians to degrees.

Use `Math.PI` and the radian to degree formula to convert the angle from radians to degrees.

```js
const radsToDegrees = rad =&amp;gt; (rad * 180.0) / Math.PI;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
radsToDegrees(Math.PI / 2); // 90
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### randomIntArrayInRange

Returns an array of n random integers in the specified range.

Use `Array.from()` to create an empty array of the specific length, `Math.random()` to generate a random number and map it to the desired range, using `Math.floor()` to make it an integer.

```js
const randomIntArrayInRange = (min, max, n = 1) =&amp;gt;
  Array.from({ length: n }, () =&amp;gt; Math.floor(Math.random() * (max - min + 1)) + min);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
randomIntArrayInRange(12, 35, 10); // [ 34, 14, 27, 17, 30, 27, 20, 26, 21, 14 ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### randomIntegerInRange

Returns a random integer in the specified range.

Use `Math.random()` to generate a random number and map it to the desired range, using `Math.floor()` to make it an integer.

```js
const randomIntegerInRange = (min, max) =&amp;gt; Math.floor(Math.random() * (max - min + 1)) + min;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
randomIntegerInRange(0, 5); // 2
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### randomNumberInRange

Returns a random number in the specified range.

Use `Math.random()` to generate a random value, map it to the desired range using multiplication.

```js
const randomNumberInRange = (min, max) =&amp;gt; Math.random() * (max - min) + min;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
randomNumberInRange(2, 10); // 6.0211363285087005
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### round

Rounds a number to a specified amount of digits.

Use `Math.round()` and template literals to round the number to the specified number of digits.
Omit the second argument, `decimals` to round to an integer.

```js
const round = (n, decimals = 0) =&amp;gt; Number(`${Math.round(`${n}e${decimals}`)}e-${decimals}`);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
round(1.005, 2); // 1.01
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sdbm

Hashes the input string into a whole number.

Use `String.prototype.split('')` and `Array.prototype.reduce()` to create a hash of the input string, utilizing bit shifting.

```js
const sdbm = str =&amp;gt; {
  let arr = str.split('');
  return arr.reduce(
    (hashCode, currentVal) =&amp;gt;
      (hashCode = currentVal.charCodeAt(0) + (hashCode &amp;lt;&amp;lt; 6) + (hashCode &amp;lt;&amp;lt; 16) - hashCode),
    0
  );
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sdbm('name'); // -3521204949
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### standardDeviation

Returns the standard deviation of an array of numbers.

Use `Array.prototype.reduce()` to calculate the mean, variance and the sum of the variance of the values, the variance of the values, then
determine the standard deviation.
You can omit the second argument to get the sample standard deviation or set it to `true` to get the population standard deviation.

```js
const standardDeviation = (arr, usePopulation = false) =&amp;gt; {
  const mean = arr.reduce((acc, val) =&amp;gt; acc + val, 0) / arr.length;
  return Math.sqrt(
    arr.reduce((acc, val) =&amp;gt; acc.concat((val - mean) ** 2), []).reduce((acc, val) =&amp;gt; acc + val, 0) /
      (arr.length - (usePopulation ? 0 : 1))
  );
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
standardDeviation([10, 2, 38, 23, 38, 23, 21]); // 13.284434142114991 (sample)
standardDeviation([10, 2, 38, 23, 38, 23, 21], true); // 12.29899614287479 (population)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sum

Returns the sum of two or more numbers/arrays.

Use `Array.prototype.reduce()` to add each value to an accumulator, initialized with a value of `0`.

```js
const sum = (...arr) =&amp;gt; [...arr].reduce((acc, val) =&amp;gt; acc + val, 0);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sum(1, 2, 3, 4); // 10
sum(...[1, 2, 3, 4]); // 10
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sumBy

Returns the sum of an array, after mapping each element to a value using the provided function.

Use `Array.prototype.map()` to map each element to the value returned by `fn`, `Array.prototype.reduce()` to add each value to an accumulator, initialized with a value of `0`.

```js
const sumBy = (arr, fn) =&amp;gt;
  arr.map(typeof fn === 'function' ? fn : val =&amp;gt; val[fn]).reduce((acc, val) =&amp;gt; acc + val, 0);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sumBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o =&amp;gt; o.n); // 20
sumBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'); // 20
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sumPower

Returns the sum of the powers of all the numbers from `start` to `end` (both inclusive).

Use `Array.prototype.fill()` to create an array of all the numbers in the target range, `Array.prototype.map()` and the exponent operator (`**`) to raise them to `power` and `Array.prototype.reduce()` to add them together.
Omit the second argument, `power`, to use a default power of `2`.
Omit the third argument, `start`, to use a default starting value of `1`.

```js
const sumPower = (end, power = 2, start = 1) =&amp;gt;
  Array(end + 1 - start)
    .fill(0)
    .map((x, i) =&amp;gt; (i + start) ** power)
    .reduce((a, b) =&amp;gt; a + b, 0);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sumPower(10); // 385
sumPower(10, 3); // 3025
sumPower(10, 3, 5); // 2925
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### toSafeInteger

Converts a value to a safe integer.

Use `Math.max()` and `Math.min()` to find the closest safe value.
Use `Math.round()` to convert to an integer.

```js
const toSafeInteger = num =&amp;gt;
  Math.round(Math.max(Math.min(num, Number.MAX_SAFE_INTEGER), Number.MIN_SAFE_INTEGER));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
toSafeInteger('3.2'); // 3
toSafeInteger(Infinity); // 9007199254740991
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### vectorDistance

Returns the distance between two vectors.

Use `Array.prototype.reduce()`, `Math.pow()` and `Math.sqrt()` to calculate the Euclidean distance between two vectors.

```js
const vectorDistance = (...coords) =&amp;gt; {
  let pointLength = Math.trunc(coords.length / 2);
  let sum = coords
    .slice(0, pointLength)
    .reduce((acc, val, i) =&amp;gt; acc + Math.pow(val - coords[pointLength + i], 2), 0);
  return Math.sqrt(sum);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
vectorDistance(10, 0, 5, 20, 0, 10); // 11.180339887498949
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

---

## &lt;g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png"&gt;📦&lt;/g-emoji&gt; Node


### atob

Decodes a string of data which has been encoded using base-64 encoding.

Create a `Buffer` for the given string with base-64 encoding and use `Buffer.toString('binary')` to return the decoded string.

```js
const atob = str =&amp;gt; Buffer.from(str, 'base64').toString('binary');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
atob('Zm9vYmFy'); // 'foobar'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### btoa

Creates a base-64 encoded ASCII string from a String object in which each character in the string is treated as a byte of binary data.

Create a `Buffer` for the given string with binary encoding and use `Buffer.toString('base64')` to return the encoded string.

```js
const btoa = str =&amp;gt; Buffer.from(str, 'binary').toString('base64');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
btoa('foobar'); // 'Zm9vYmFy'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### colorize

Add special characters to text to print in color in the console (combined with `console.log()`).

Use template literals and special characters to add the appropriate color code to the string output.
For background colors, add a special character that resets the background color at the end of the string.

```js
const colorize = (...args) =&amp;gt; ({
  black: `\x1b[30m${args.join(' ')}`,
  red: `\x1b[31m${args.join(' ')}`,
  green: `\x1b[32m${args.join(' ')}`,
  yellow: `\x1b[33m${args.join(' ')}`,
  blue: `\x1b[34m${args.join(' ')}`,
  magenta: `\x1b[35m${args.join(' ')}`,
  cyan: `\x1b[36m${args.join(' ')}`,
  white: `\x1b[37m${args.join(' ')}`,
  bgBlack: `\x1b[40m${args.join(' ')}\x1b[0m`,
  bgRed: `\x1b[41m${args.join(' ')}\x1b[0m`,
  bgGreen: `\x1b[42m${args.join(' ')}\x1b[0m`,
  bgYellow: `\x1b[43m${args.join(' ')}\x1b[0m`,
  bgBlue: `\x1b[44m${args.join(' ')}\x1b[0m`,
  bgMagenta: `\x1b[45m${args.join(' ')}\x1b[0m`,
  bgCyan: `\x1b[46m${args.join(' ')}\x1b[0m`,
  bgWhite: `\x1b[47m${args.join(' ')}\x1b[0m`
});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
console.log(colorize('foo').red); // 'foo' (red letters)
console.log(colorize('foo', 'bar').bgBlue); // 'foo bar' (blue background)
console.log(colorize(colorize('foo').yellow, colorize('foo').green).bgWhite); // 'foo bar' (first word in yellow letters, second word in green letters, white background for both)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### createDirIfNotExists

Creates a directory, if it does not exist.

Use `fs.existsSync()` to check if the directory exists, `fs.mkdirSync()` to create it.

```js
const fs = require('fs');
const createDirIfNotExists = dir =&amp;gt; (!fs.existsSync(dir) ? fs.mkdirSync(dir) : undefined);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
createDirIfNotExists('test'); // creates the directory 'test', if it doesn't exist
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### hasFlags

Check if the current process's arguments contain the specified flags.

Use `Array.prototype.every()` and `Array.prototype.includes()` to check if `process.argv` contains all the specified flags.
Use a regular expression to test if the specified flags are prefixed with `-` or `--` and prefix them accordingly.

```js
const hasFlags = (...flags) =&amp;gt;
  flags.every(flag =&amp;gt; process.argv.includes(/^-{1,2}/.test(flag) ? flag : '--' + flag));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
// node myScript.js -s --test --cool=true
hasFlags('-s'); // true
hasFlags('--test', 'cool=true', '-s'); // true
hasFlags('special'); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### hashNode

Creates a hash for a value using the [SHA-256](&lt;a href="https://en.wikipedia.org/wiki/SHA-2" rel="nofollow"&gt;https://en.wikipedia.org/wiki/SHA-2&lt;/a&gt;) algorithm. Returns a promise.

Use `crypto` API to create a hash for the given value, `setTimeout` to prevent blocking on a long operation, and a `Promise` to give it a familiar interface.

```js
const crypto = require('crypto');
const hashNode = val =&amp;gt;
  new Promise(resolve =&amp;gt;
    setTimeout(
      () =&amp;gt;
        resolve(
          crypto
            .createHash('sha256')
            .update(val)
            .digest('hex')
        ),
      0
    )
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
hashNode(JSON.stringify({ a: 'a', b: [1, 2, 3, 4], foo: { c: 'bar' } })).then(console.log); // '04aa106279f5977f59f9067fa9712afc4aedc6f5862a8defc34552d8c7206393'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isDuplexStream

Checks if the given argument is a duplex (readable and writable) stream.

Check if the value is different from `null`, use `typeof` to check if a value is of type `object` and the `pipe` property is of type `function`.
Additionally check if the `typeof` the `_read`, `_write` and `_readableState`, `_writableState` properties are `function` and `object` respectively.

```js
const isDuplexStream = val =&amp;gt;
  val !== null &amp;amp;&amp;amp;
  typeof val === 'object' &amp;amp;&amp;amp;
  typeof val.pipe === 'function' &amp;amp;&amp;amp;
  typeof val._read === 'function' &amp;amp;&amp;amp;
  typeof val._readableState === 'object' &amp;amp;&amp;amp;
  typeof val._write === 'function' &amp;amp;&amp;amp;
  typeof val._writableState === 'object';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const Stream = require('stream');
isDuplexStream(new Stream.Duplex()); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isReadableStream

Checks if the given argument is a readable stream.

Check if the value is different from `null`, use `typeof` to check if the value is of type `object` and the `pipe` property is of type `function`.
Additionally check if the `typeof` the `_read` and `_readableState` properties are `function` and `object` respectively.

```js
const isReadableStream = val =&amp;gt;
  val !== null &amp;amp;&amp;amp;
  typeof val === 'object' &amp;amp;&amp;amp;
  typeof val.pipe === 'function' &amp;amp;&amp;amp;
  typeof val._read === 'function' &amp;amp;&amp;amp;
  typeof val._readableState === 'object';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const fs = require('fs');
isReadableStream(fs.createReadStream('test.txt')); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isStream

Checks if the given argument is a stream.

Check if the value is different from `null`, use `typeof` to check if the value is of type `object` and the `pipe` property is of type `function`.

```js
const isStream = val =&amp;gt; val !== null &amp;amp;&amp;amp; typeof val === 'object' &amp;amp;&amp;amp; typeof val.pipe === 'function';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const fs = require('fs');
isStream(fs.createReadStream('test.txt')); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isTravisCI

Checks if the current environment is [Travis CI](&lt;a href="https://travis-ci.org/" rel="nofollow"&gt;https://travis-ci.org/&lt;/a&gt;).

Checks if the current environment has the `TRAVIS` and `CI` environment variables ([reference](&lt;a href="https://docs.travis-ci.com/user/environment-variables/#Default-Environment-Variables" rel="nofollow"&gt;https://docs.travis-ci.com/user/environment-variables/#Default-Environment-Variables&lt;/a&gt;)).

```js
const isTravisCI = () =&amp;gt; 'TRAVIS' in process.env &amp;amp;&amp;amp; 'CI' in process.env;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isTravisCI(); // true (if code is running on Travis CI)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isWritableStream

Checks if the given argument is a writable stream.

Check if the value is different from `null`, use `typeof` to check if the value is of type `object` and the `pipe` property is of type `function`.
Additionally check if the `typeof` the `_write` and `_writableState` properties are `function` and `object` respectively.

```js
const isWritableStream = val =&amp;gt;
  val !== null &amp;amp;&amp;amp;
  typeof val === 'object' &amp;amp;&amp;amp;
  typeof val.pipe === 'function' &amp;amp;&amp;amp;
  typeof val._write === 'function' &amp;amp;&amp;amp;
  typeof val._writableState === 'object';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const fs = require('fs');
isWritableStream(fs.createWriteStream('test.txt')); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### JSONToFile

Writes a JSON object to a file.

Use `fs.writeFile()`, template literals and `JSON.stringify()` to write a `json` object to a `.json` file.

```js
const fs = require('fs');
const JSONToFile = (obj, filename) =&amp;gt;
  fs.writeFile(`${filename}.json`, JSON.stringify(obj, null, 2));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
JSONToFile({ test: 'is passed' }, 'testJsonFile'); // writes the object to 'testJsonFile.json'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### readFileLines

Returns an array of lines from the specified file.

Use `readFileSync` function in `fs` node package to create a `Buffer` from a file.
convert buffer to string using `toString(encoding)` function.
creating an array from contents of file by `split`ing file content line by line (each `\n`).

```js
const fs = require('fs');
const readFileLines = filename =&amp;gt;
  fs
    .readFileSync(filename)
    .toString('UTF8')
    .split('\n');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
/*
contents of test.txt :
  line1
  line2
  line3
  ___________________________
*/
let arr = readFileLines('test.txt');
console.log(arr); // ['line1', 'line2', 'line3']
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### untildify

Converts a tilde path to an absolute path.

Use `String.prototype.replace()` with a regular expression and `OS.homedir()` to replace the `~` in the start of the path with the home directory.

```js
const untildify = str =&amp;gt; str.replace(/^~($|\/|\\)/, `${require('os').homedir()}$1`);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
untildify('~/node'); // '/Users/aUser/node'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### UUIDGeneratorNode

Generates a UUID in Node.JS.

Use `crypto` API to generate a UUID, compliant with [RFC4122](&lt;a href="https://www.ietf.org/rfc/rfc4122.txt" rel="nofollow"&gt;https://www.ietf.org/rfc/rfc4122.txt&lt;/a&gt;) version 4.

```js
const crypto = require('crypto');
const UUIDGeneratorNode = () =&amp;gt;
  ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =&amp;gt;
    (c ^ (crypto.randomBytes(1)[0] &amp;amp; (15 &amp;gt;&amp;gt; (c / 4)))).toString(16)
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
UUIDGeneratorNode(); // '79c7c136-60ee-40a2-beb2-856f1feabefc'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

---

## &lt;g-emoji class="g-emoji" alias="card_file_box" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5c3.png"&gt;🗃️&lt;/g-emoji&gt; Object


### bindAll

Binds methods of an object to the object itself, overwriting the existing method.

Use `Array.prototype.forEach()` to return a `function` that uses `Function.prototype.apply()` to apply the given context (`obj`) to `fn` for each function specified.

```js
const bindAll = (obj, ...fns) =&amp;gt;
  fns.forEach(
    fn =&amp;gt; (
      (f = obj[fn]),
      (obj[fn] = function() {
        return f.apply(obj);
      })
    )
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
var view = {
  label: 'docs',
  click: function() {
    console.log('clicked ' + this.label);
  }
};
bindAll(view, 'click');
jQuery(element).on('click', view.click); // Logs 'clicked docs' when clicked.
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### deepClone

Creates a deep clone of an object.

Use recursion.
Check if the passed object is `null` and, if so, return `null`.
Use `Object.assign()` and an empty object (`{}`) to create a shallow clone of the original.
Use `Object.keys()` and `Array.prototype.forEach()` to determine which key-value pairs need to be deep cloned.

```js
const deepClone = obj =&amp;gt; {
  if (obj === null) return null;
  let clone = Object.assign({}, obj);
  Object.keys(clone).forEach(
    key =&amp;gt; (clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key])
  );
  return Array.isArray(obj) &amp;amp;&amp;amp; obj.length
    ? (clone.length = obj.length) &amp;amp;&amp;amp; Array.from(clone)
    : Array.isArray(obj)
    ? Array.from(obj)
    : clone;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const a = { foo: 'bar', obj: { a: 1, b: 2 } };
const b = deepClone(a); // a !== b, a.obj !== b.obj
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### deepFreeze

Deep freezes an object.

Calls `Object.freeze(obj)` recursively on all unfrozen properties of passed object that are `instanceof` object.

```js
const deepFreeze = obj =&amp;gt;
  Object.keys(obj).forEach(prop =&amp;gt;
    !(obj[prop] instanceof Object) || Object.isFrozen(obj[prop]) ? null : deepFreeze(obj[prop])
  ) || Object.freeze(obj);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
'use strict';

const o = deepFreeze([1, [2, 3]]);

o[0] = 3; // not allowed
o[1][0] = 4; // not allowed as well
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### deepGet

Returns the target value in a nested JSON object, based on the `keys` array.

Compare the keys you want in the nested JSON object as an `Array`.
Use `Array.prototype.reduce()` to get value from nested JSON object one by one. 
If the key exists in object, return target value, otherwise, return `null`.

```js
const deepGet = (obj, keys) =&amp;gt; keys.reduce((xs, x) =&amp;gt; (xs &amp;amp;&amp;amp; xs[x] ? xs[x] : null), obj);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
let index = 2;
const data = {
  foo: {
    foz: [1, 2, 3],
    bar: {
      baz: ['a', 'b', 'c']
    }
  }
};
deepGet(data, ['foo', 'foz', index]); // get 3
deepGet(data, ['foo', 'bar', 'baz', 8, 'foz']); // null
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### deepMapKeys ![advanced](/advanced.svg)

Deep maps an object's keys.

Creates an object with the same values as the provided object and keys generated by running the provided function for each key.
Use `Object.keys(obj)` to iterate over the object's keys. 
Use `Array.prototype.reduce()` to create a new object with the same values and mapped keys using `fn`.

```js
const deepMapKeys = (obj, f) =&amp;gt;
  Array.isArray(obj)
    ? obj.map(val =&amp;gt; deepMapKeys(val, f))
    : typeof obj === 'object'
    ? Object.keys(obj).reduce((acc, current) =&amp;gt; {
        const val = obj[current];
        acc[f(current)] =
          val !== null &amp;amp;&amp;amp; typeof val === 'object' ? deepMapKeys(val, f) : (acc[f(current)] = val);
        return acc;
      }, {})
    : obj;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const obj = {
  foo: '1',
  nested: {
    child: {
      withArray: [
        {
          grandChild: ['hello']
        }
      ]
    }
  }
};
const upperKeysObj = deepMapKeys(obj, key =&amp;gt; key.toUpperCase());
/*
{
  "FOO":"1",
  "NESTED":{
    "CHILD":{
      "WITHARRAY":[
        {
          "GRANDCHILD":[ 'hello' ]
        }
      ]
    }
  }
}
*/
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### defaults

Assigns default values for all properties in an object that are `undefined`.

Use `Object.assign()` to create a new empty object and copy the original one to maintain key order, use `Array.prototype.reverse()` and the spread operator `...` to combine the default values from left to right, finally use `obj` again to overwrite properties that originally had a value.

```js
const defaults = (obj, ...defs) =&amp;gt; Object.assign({}, obj, ...defs.reverse(), obj);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
defaults({ a: 1 }, { b: 2 }, { b: 6 }, { a: 3 }); // { a: 1, b: 2 }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### dig

Returns the target value in a nested JSON object, based on the given key.

Use the `in` operator to check if `target` exists in `obj`.
If found, return the value of `obj[target]`, otherwise use `Object.values(obj)` and `Array.prototype.reduce()` to recursively call `dig` on each nested object until the first matching key/value pair is found.

```js
const dig = (obj, target) =&amp;gt;
  target in obj
    ? obj[target]
    : Object.values(obj).reduce((acc, val) =&amp;gt; {
        if (acc !== undefined) return acc;
        if (typeof val === 'object') return dig(val, target);
      }, undefined);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const data = {
  level1: {
    level2: {
      level3: 'some data'
    }
  }
};
dig(data, 'level3'); // 'some data'
dig(data, 'level4'); // undefined
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### equals ![advanced](/advanced.svg)

Performs a deep comparison between two values to determine if they are equivalent.

Check if the two values are identical, if they are both `Date` objects with the same time, using `Date.getTime()` or if they are both non-object values with an equivalent value (strict comparison).
Check if only one value is `null` or `undefined` or if their prototypes differ.
If none of the above conditions are met, use `Object.keys()` to check if both values have the same number of keys, then use `Array.prototype.every()` to check if every key in the first value exists in the second one and if they are equivalent by calling this method recursively.

```js
const equals = (a, b) =&amp;gt; {
  if (a === b) return true;
  if (a instanceof Date &amp;amp;&amp;amp; b instanceof Date) return a.getTime() === b.getTime();
  if (!a || !b || (typeof a !== 'object' &amp;amp;&amp;amp; typeof b !== 'object')) return a === b;
  if (a.prototype !== b.prototype) return false;
  let keys = Object.keys(a);
  if (keys.length !== Object.keys(b).length) return false;
  return keys.every(k =&amp;gt; equals(a[k], b[k]));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
equals({ a: [2, { e: 3 }], b: [4], c: 'foo' }, { a: [2, { e: 3 }], b: [4], c: 'foo' }); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### findKey

Returns the first key that satisfies the provided testing function. Otherwise `undefined` is returned.

Use `Object.keys(obj)` to get all the properties of the object, `Array.prototype.find()` to test the provided function for each key-value pair. The callback receives three arguments - the value, the key and the object.

```js
const findKey = (obj, fn) =&amp;gt; Object.keys(obj).find(key =&amp;gt; fn(obj[key], key, obj));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
findKey(
  {
    barney: { age: 36, active: true },
    fred: { age: 40, active: false },
    pebbles: { age: 1, active: true }
  },
  o =&amp;gt; o['active']
); // 'barney'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### findLastKey

Returns the last key that satisfies the provided testing function.
Otherwise `undefined` is returned.

Use `Object.keys(obj)` to get all the properties of the object, `Array.prototype.reverse()` to reverse their order and `Array.prototype.find()` to test the provided function for each key-value pair.
The callback receives three arguments - the value, the key and the object.

```js
const findLastKey = (obj, fn) =&amp;gt;
  Object.keys(obj)
    .reverse()
    .find(key =&amp;gt; fn(obj[key], key, obj));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
findLastKey(
  {
    barney: { age: 36, active: true },
    fred: { age: 40, active: false },
    pebbles: { age: 1, active: true }
  },
  o =&amp;gt; o['active']
); // 'pebbles'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### flattenObject

Flatten an object with the paths for keys.

Use recursion.
Use `Object.keys(obj)` combined with `Array.prototype.reduce()` to convert every leaf node to a flattened path node.
If the value of a key is an object, the function calls itself with the appropriate `prefix` to create the path using `Object.assign()`.
Otherwise, it adds the appropriate prefixed key-value pair to the accumulator object.
You should always omit the second argument, `prefix`, unless you want every key to have a prefix.

```js
const flattenObject = (obj, prefix = '') =&amp;gt;
  Object.keys(obj).reduce((acc, k) =&amp;gt; {
    const pre = prefix.length ? prefix + '.' : '';
    if (typeof obj[k] === 'object') Object.assign(acc, flattenObject(obj[k], pre + k));
    else acc[pre + k] = obj[k];
    return acc;
  }, {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
flattenObject({ a: { b: { c: 1 } }, d: 1 }); // { 'a.b.c': 1, d: 1 }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### forOwn

Iterates over all own properties of an object, running a callback for each one.

Use `Object.keys(obj)` to get all the properties of the object, `Array.prototype.forEach()` to run the provided function for each key-value pair. The callback receives three arguments - the value, the key and the object.

```js
const forOwn = (obj, fn) =&amp;gt; Object.keys(obj).forEach(key =&amp;gt; fn(obj[key], key, obj));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
forOwn({ foo: 'bar', a: 1 }, v =&amp;gt; console.log(v)); // 'bar', 1
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### forOwnRight

Iterates over all own properties of an object in reverse, running a callback for each one.

Use `Object.keys(obj)` to get all the properties of the object, `Array.prototype.reverse()` to reverse their order and `Array.prototype.forEach()` to run the provided function for each key-value pair. The callback receives three arguments - the value, the key and the object.

```js
const forOwnRight = (obj, fn) =&amp;gt;
  Object.keys(obj)
    .reverse()
    .forEach(key =&amp;gt; fn(obj[key], key, obj));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
forOwnRight({ foo: 'bar', a: 1 }, v =&amp;gt; console.log(v)); // 1, 'bar'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### functions

Returns an array of function property names from own (and optionally inherited) enumerable properties of an object.

Use `Object.keys(obj)` to iterate over the object's own properties.
If `inherited` is `true`, use `Object.get.PrototypeOf(obj)` to also get the object's inherited properties.
Use `Array.prototype.filter()` to keep only those properties that are functions.
Omit the second argument, `inherited`, to not include inherited properties by default.

```js
const functions = (obj, inherited = false) =&amp;gt;
  (inherited
    ? [...Object.keys(obj), ...Object.keys(Object.getPrototypeOf(obj))]
    : Object.keys(obj)
  ).filter(key =&amp;gt; typeof obj[key] === 'function');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
function Foo() {
  this.a = () =&amp;gt; 1;
  this.b = () =&amp;gt; 2;
}
Foo.prototype.c = () =&amp;gt; 3;
functions(new Foo()); // ['a', 'b']
functions(new Foo(), true); // ['a', 'b', 'c']
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### get

Retrieve a set of properties indicated by the given selectors from an object.

Use `Array.prototype.map()` for each selector, `String.prototype.replace()` to replace square brackets with dots, `String.prototype.split('.')` to split each selector, `Array.prototype.filter()` to remove empty values and `Array.prototype.reduce()` to get the value indicated by it.

```js
const get = (from, ...selectors) =&amp;gt;
  [...selectors].map(s =&amp;gt;
    s
      .replace(/\[([^\[\]]*)\]/g, '.$1.')
      .split('.')
      .filter(t =&amp;gt; t !== '')
      .reduce((prev, cur) =&amp;gt; prev &amp;amp;&amp;amp; prev[cur], from)
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const obj = { selector: { to: { val: 'val to select' } }, target: [1, 2, { a: 'test' }] };
get(obj, 'selector.to.val', 'target[0]', 'target[2].a'); // ['val to select', 1, 'test']
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### hasKey

Returns `true` if the target value exists in a JSON object, `false` otherwise.

Check if `keys` is non-empty and use `Array.prototype.every()` to sequentially check its keys to internal depth of the object, `obj`. 
Use `Object.prototype.hasOwnProperty()` to check if `obj` does not have the current key or is not an object, stop propagation and return `false`.
Otherwise assign the key's value to `obj` to use on the next iteration.

Return `false` beforehand if given key list is empty.

```js
const hasKey = (obj, keys) =&amp;gt; {
  return (
    keys.length &amp;gt; 0 &amp;amp;&amp;amp;
    keys.every(key =&amp;gt; {
      if (typeof obj !== 'object' || !obj.hasOwnProperty(key)) return false;
      obj = obj[key];
      return true;
    })
  );
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
let obj = {
  a: 1,
  b: { c: 4 },
  'b.d': 5
};
hasKey(obj, ['a']); // true
hasKey(obj, ['b']); // true
hasKey(obj, ['b', 'c']); // true
hasKey(obj, ['b.d']); // true
hasKey(obj, ['d']); // false
hasKey(obj, ['c']); // false
hasKey(obj, ['b', 'f']); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### invertKeyValues

Inverts the key-value pairs of an object, without mutating it. The corresponding inverted value of each inverted key is an array of keys responsible for generating the inverted value. If a function is supplied, it is applied to each inverted key.

Use `Object.keys()` and `Array.prototype.reduce()` to invert the key-value pairs of an object and apply the function provided (if any).
Omit the second argument, `fn`, to get the inverted keys without applying a function to them.

```js
const invertKeyValues = (obj, fn) =&amp;gt;
  Object.keys(obj).reduce((acc, key) =&amp;gt; {
    const val = fn ? fn(obj[key]) : obj[key];
    acc[val] = acc[val] || [];
    acc[val].push(key);
    return acc;
  }, {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
invertKeyValues({ a: 1, b: 2, c: 1 }); // { 1: [ 'a', 'c' ], 2: [ 'b' ] }
invertKeyValues({ a: 1, b: 2, c: 1 }, value =&amp;gt; 'group' + value); // { group1: [ 'a', 'c' ], group2: [ 'b' ] }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### lowercaseKeys

Creates a new object from the specified object, where all the keys are in lowercase.

Use `Object.keys()` and `Array.prototype.reduce()` to create a new object from the specified object.
Convert each key in the original object to lowercase, using `String.toLowerCase()`.

```js
const lowercaseKeys = obj =&amp;gt;
  Object.keys(obj).reduce((acc, key) =&amp;gt; {
    acc[key.toLowerCase()] = obj[key];
    return acc;
  }, {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const myObj = { Name: 'Adam', sUrnAME: 'Smith' };
const myObjLower = lowercaseKeys(myObj); // {name: 'Adam', surname: 'Smith'};
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### mapKeys

Creates an object with keys generated by running the provided function for each key and the same values as the provided object.

Use `Object.keys(obj)` to iterate over the object's keys.
Use `Array.prototype.reduce()` to create a new object with the same values and mapped keys using `fn`.

```js
const mapKeys = (obj, fn) =&amp;gt;
  Object.keys(obj).reduce((acc, k) =&amp;gt; {
    acc[fn(obj[k], k, obj)] = obj[k];
    return acc;
  }, {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
mapKeys({ a: 1, b: 2 }, (val, key) =&amp;gt; key + val); // { a1: 1, b2: 2 }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### mapValues

Creates an object with the same keys as the provided object and values generated by running the provided function for each value.

Use `Object.keys(obj)` to iterate over the object's keys.
Use `Array.prototype.reduce()` to create a new object with the same keys and mapped values using `fn`.

```js
const mapValues = (obj, fn) =&amp;gt;
  Object.keys(obj).reduce((acc, k) =&amp;gt; {
    acc[k] = fn(obj[k], k, obj);
    return acc;
  }, {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const users = {
  fred: { user: 'fred', age: 40 },
  pebbles: { user: 'pebbles', age: 1 }
};
mapValues(users, u =&amp;gt; u.age); // { fred: 40, pebbles: 1 }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### matches

Compares two objects to determine if the first one contains equivalent property values to the second one.

Use `Object.keys(source)` to get all the keys of the second object, then `Array.prototype.every()`, `Object.hasOwnProperty()` and strict comparison to determine if all keys exist in the first object and have the same values.

```js
const matches = (obj, source) =&amp;gt;
  Object.keys(source).every(key =&amp;gt; obj.hasOwnProperty(key) &amp;amp;&amp;amp; obj[key] === source[key]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
matches({ age: 25, hair: 'long', beard: true }, { hair: 'long', beard: true }); // true
matches({ hair: 'long', beard: true }, { age: 25, hair: 'long', beard: true }); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### matchesWith

Compares two objects to determine if the first one contains equivalent property values to the second one, based on a provided function.

Use `Object.keys(source)` to get all the keys of the second object, then `Array.prototype.every()`, `Object.hasOwnProperty()` and the provided function to determine if all keys exist in the first object and have equivalent values.
If no function is provided, the values will be compared using the equality operator.

```js
const matchesWith = (obj, source, fn) =&amp;gt;
  Object.keys(source).every(key =&amp;gt;
    obj.hasOwnProperty(key) &amp;amp;&amp;amp; fn
      ? fn(obj[key], source[key], key, obj, source)
      : obj[key] == source[key]
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const isGreeting = val =&amp;gt; /^h(?:i|ello)$/.test(val);
matchesWith(
  { greeting: 'hello' },
  { greeting: 'hi' },
  (oV, sV) =&amp;gt; isGreeting(oV) &amp;amp;&amp;amp; isGreeting(sV)
); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### merge

Creates a new object from the combination of two or more objects.

Use `Array.prototype.reduce()` combined with `Object.keys(obj)` to iterate over all objects and keys.
Use `hasOwnProperty()` and `Array.prototype.concat()` to append values for keys existing in multiple objects.

```js
const merge = (...objs) =&amp;gt;
  [...objs].reduce(
    (acc, obj) =&amp;gt;
      Object.keys(obj).reduce((a, k) =&amp;gt; {
        acc[k] = acc.hasOwnProperty(k) ? [].concat(acc[k]).concat(obj[k]) : obj[k];
        return acc;
      }, {}),
    {}
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const object = {
  a: [{ x: 2 }, { y: 4 }],
  b: 1
};
const other = {
  a: { z: 3 },
  b: [2, 3],
  c: 'foo'
};
merge(object, other); // { a: [ { x: 2 }, { y: 4 }, { z: 3 } ], b: [ 1, 2, 3 ], c: 'foo' }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### nest

Given a flat array of objects linked to one another, it will nest them recursively.
Useful for nesting comments, such as the ones on reddit.com.

Use recursion.
Use `Array.prototype.filter()` to filter the items where the `id` matches the `link`, then `Array.prototype.map()` to map each one to a new object that has a `children` property which recursively nests the items based on which ones are children of the current item.
Omit the second argument, `id`, to default to `null` which indicates the object is not linked to another one (i.e. it is a top level object).
Omit the third argument, `link`, to use `'parent_id'` as the default property which links the object to another one by its `id`.

```js
const nest = (items, id = null, link = 'parent_id') =&amp;gt;
  items
    .filter(item =&amp;gt; item[link] === id)
    .map(item =&amp;gt; ({ ...item, children: nest(items, item.id) }));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
// One top level comment
const comments = [
  { id: 1, parent_id: null },
  { id: 2, parent_id: 1 },
  { id: 3, parent_id: 1 },
  { id: 4, parent_id: 2 },
  { id: 5, parent_id: 4 }
];
const nestedComments = nest(comments); // [{ id: 1, parent_id: null, children: [...] }]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### objectFromPairs

Creates an object from the given key-value pairs.

Use `Array.prototype.reduce()` to create and combine key-value pairs.

```js
const objectFromPairs = arr =&amp;gt; arr.reduce((a, [key, val]) =&amp;gt; ((a[key] = val), a), {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
objectFromPairs([['a', 1], ['b', 2]]); // {a: 1, b: 2}
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### objectToPairs

Creates an array of key-value pair arrays from an object.

Use `Object.keys()` and `Array.prototype.map()` to iterate over the object's keys and produce an array with key-value pairs.

```js
const objectToPairs = obj =&amp;gt; Object.keys(obj).map(k =&amp;gt; [k, obj[k]]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
objectToPairs({ a: 1, b: 2 }); // [ ['a', 1], ['b', 2] ]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### omit

Omits the key-value pairs corresponding to the given keys from an object.

Use `Object.keys(obj)`, `Array.prototype.filter()` and `Array.prototype.includes()` to remove the provided keys.
Use `Array.prototype.reduce()` to convert the filtered keys back to an object with the corresponding key-value pairs.

```js
const omit = (obj, arr) =&amp;gt;
  Object.keys(obj)
    .filter(k =&amp;gt; !arr.includes(k))
    .reduce((acc, key) =&amp;gt; ((acc[key] = obj[key]), acc), {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
omit({ a: 1, b: '2', c: 3 }, ['b']); // { 'a': 1, 'c': 3 }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### omitBy

Creates an object composed of the properties the given function returns falsy for. The function is invoked with two arguments: (value, key).

Use `Object.keys(obj)` and `Array.prototype.filter()`to remove the keys for which `fn` returns a truthy value.
Use `Array.prototype.reduce()` to convert the filtered keys back to an object with the corresponding key-value pairs.

```js
const omitBy = (obj, fn) =&amp;gt;
  Object.keys(obj)
    .filter(k =&amp;gt; !fn(obj[k], k))
    .reduce((acc, key) =&amp;gt; ((acc[key] = obj[key]), acc), {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
omitBy({ a: 1, b: '2', c: 3 }, x =&amp;gt; typeof x === 'number'); // { b: '2' }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### orderBy

Returns a sorted array of objects ordered by properties and orders.

Uses `Array.prototype.sort()`, `Array.prototype.reduce()` on the `props` array with a default value of `0`, use array destructuring to swap the properties position depending on the order passed.
If no `orders` array is passed it sort by `'asc'` by default.

```js
const orderBy = (arr, props, orders) =&amp;gt;
  [...arr].sort((a, b) =&amp;gt;
    props.reduce((acc, prop, i) =&amp;gt; {
      if (acc === 0) {
        const [p1, p2] = orders &amp;amp;&amp;amp; orders[i] === 'desc' ? [b[prop], a[prop]] : [a[prop], b[prop]];
        acc = p1 &amp;gt; p2 ? 1 : p1 &amp;lt; p2 ? -1 : 0;
      }
      return acc;
    }, 0)
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const users = [{ name: 'fred', age: 48 }, { name: 'barney', age: 36 }, { name: 'fred', age: 40 }];
orderBy(users, ['name', 'age'], ['asc', 'desc']); // [{name: 'barney', age: 36}, {name: 'fred', age: 48}, {name: 'fred', age: 40}]
orderBy(users, ['name', 'age']); // [{name: 'barney', age: 36}, {name: 'fred', age: 40}, {name: 'fred', age: 48}]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### pick

Picks the key-value pairs corresponding to the given keys from an object.

Use `Array.prototype.reduce()` to convert the filtered/picked keys back to an object with the corresponding key-value pairs if the key exists in the object.

```js
const pick = (obj, arr) =&amp;gt;
  arr.reduce((acc, curr) =&amp;gt; (curr in obj &amp;amp;&amp;amp; (acc[curr] = obj[curr]), acc), {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
pick({ a: 1, b: '2', c: 3 }, ['a', 'c']); // { 'a': 1, 'c': 3 }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### pickBy

Creates an object composed of the properties the given function returns truthy for. The function is invoked with two arguments: (value, key).

Use `Object.keys(obj)` and `Array.prototype.filter()`to remove the keys for which `fn` returns a falsy value.
Use `Array.prototype.reduce()` to convert the filtered keys back to an object with the corresponding key-value pairs.

```js
const pickBy = (obj, fn) =&amp;gt;
  Object.keys(obj)
    .filter(k =&amp;gt; fn(obj[k], k))
    .reduce((acc, key) =&amp;gt; ((acc[key] = obj[key]), acc), {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
pickBy({ a: 1, b: '2', c: 3 }, x =&amp;gt; typeof x === 'number'); // { 'a': 1, 'c': 3 }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### renameKeys

Replaces the names of multiple object keys with the values provided.

Use `Object.keys()` in combination with `Array.prototype.reduce()` and the spread operator (`...`) to get the object's keys and rename them according to `keysMap`.

```js
const renameKeys = (keysMap, obj) =&amp;gt;
  Object.keys(obj).reduce(
    (acc, key) =&amp;gt; ({
      ...acc,
      ...{ [keysMap[key] || key]: obj[key] }
    }),
    {}
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const obj = { name: 'Bobo', job: 'Front-End Master', shoeSize: 100 };
renameKeys({ name: 'firstName', job: 'passion' }, obj); // { firstName: 'Bobo', passion: 'Front-End Master', shoeSize: 100 }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### shallowClone

Creates a shallow clone of an object.

Use `Object.assign()` and an empty object (`{}`) to create a shallow clone of the original.

```js
const shallowClone = obj =&amp;gt; Object.assign({}, obj);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const a = { x: true, y: 1 };
const b = shallowClone(a); // a !== b
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### size

Get size of arrays, objects or strings.

Get type of `val` (`array`, `object` or `string`). 
Use `length` property for arrays.
Use `length` or `size` value if available or number of keys for objects.
Use `size` of a [`Blob` object](&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/API/Blob&lt;/a&gt;) created from `val` for strings.
Split strings into array of characters with `split('')` and return its length.

```js
const size = val =&amp;gt;
  Array.isArray(val)
    ? val.length
    : val &amp;amp;&amp;amp; typeof val === 'object'
    ? val.size || val.length || Object.keys(val).length
    : typeof val === 'string'
    ? new Blob([val]).size
    : 0;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
size([1, 2, 3, 4, 5]); // 5
size('size'); // 4
size({ one: 1, two: 2, three: 3 }); // 3
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### transform

Applies a function against an accumulator and each key in the object (from left to right).

Use `Object.keys(obj)` to iterate over each key in the object, `Array.prototype.reduce()` to call the apply the specified function against the given accumulator.

```js
const transform = (obj, fn, acc) =&amp;gt; Object.keys(obj).reduce((a, k) =&amp;gt; fn(a, obj[k], k, obj), acc);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
transform(
  { a: 1, b: 2, c: 1 },
  (r, v, k) =&amp;gt; {
    (r[v] || (r[v] = [])).push(k);
    return r;
  },
  {}
); // { '1': ['a', 'c'], '2': ['b'] }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### truthCheckCollection

Checks if the predicate (second argument) is truthy on all elements of a collection (first argument).

Use `Array.prototype.every()` to check if each passed object has the specified property and if it returns a truthy value.

```js
const truthCheckCollection = (collection, pre) =&amp;gt; collection.every(obj =&amp;gt; obj[pre]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
truthCheckCollection([{ user: 'Tinky-Winky', sex: 'male' }, { user: 'Dipsy', sex: 'male' }], 'sex'); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### unflattenObject ![advanced](/advanced.svg)

Unflatten an object with the paths for keys.

Use `Object.keys(obj)` combined with `Array.prototype.reduce()` to convert flattened path node to a leaf node.
If the value of a key contains a dot delimiter (`.`), use `Array.prototype.split('.')`, string transformations and `JSON.parse()` to create an object, then `Object.assign()` to create the leaf node.
Otherwise, add the appropriate key-value pair to the accumulator object.

```js
const unflattenObject = obj =&amp;gt;
  Object.keys(obj).reduce((acc, k) =&amp;gt; {
    if (k.indexOf('.') !== -1) {
      const keys = k.split('.');
      Object.assign(
        acc,
        JSON.parse(
          '{' +
            keys.map((v, i) =&amp;gt; (i !== keys.length - 1 ? `"${v}":{` : `"${v}":`)).join('') +
            obj[k] +
            '}'.repeat(keys.length)
        )
      );
    } else acc[k] = obj[k];
    return acc;
  }, {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
unflattenObject({ 'a.b.c': 1, d: 1 }); // { a: { b: { c: 1 } }, d: 1 }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

---

## &lt;g-emoji class="g-emoji" alias="scroll" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png"&gt;📜&lt;/g-emoji&gt; String


### byteSize

Returns the length of a string in bytes.

Convert a given string to a [`Blob` Object](&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/API/Blob&lt;/a&gt;) and find its `size`.

```js
const byteSize = str =&amp;gt; new Blob([str]).size;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
byteSize('&lt;g-emoji class="g-emoji" alias="grinning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f600.png"&gt;😀&lt;/g-emoji&gt;'); // 4
byteSize('Hello World'); // 11
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### capitalize

Capitalizes the first letter of a string.

Use array destructuring and `String.prototype.toUpperCase()` to capitalize first letter, `...rest` to get array of characters after first letter and then `Array.prototype.join('')` to make it a string again.
Omit the `lowerRest` parameter to keep the rest of the string intact, or set it to `true` to convert to lowercase.

```js
const capitalize = ([first, ...rest], lowerRest = false) =&amp;gt;
  first.toUpperCase() + (lowerRest ? rest.join('').toLowerCase() : rest.join(''));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
capitalize('fooBar'); // 'FooBar'
capitalize('fooBar', true); // 'Foobar'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### capitalizeEveryWord

Capitalizes the first letter of every word in a string.

Use `String.prototype.replace()` to match the first character of each word and `String.prototype.toUpperCase()` to capitalize it.

```js
const capitalizeEveryWord = str =&amp;gt; str.replace(/\b[a-z]/g, char =&amp;gt; char.toUpperCase());
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
capitalizeEveryWord('hello world!'); // 'Hello World!'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### compactWhitespace

Returns a string with whitespaces compacted.

Use `String.prototype.replace()` with a regular expression to replace all occurrences of 2 or more whitespace characters with a single space.

```js
const compactWhitespace = str =&amp;gt; str.replace(/\s{2,}/g, ' ');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
compactWhitespace('Lorem    Ipsum'); // 'Lorem Ipsum'
compactWhitespace('Lorem \n Ipsum'); // 'Lorem Ipsum'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### CSVToArray

Converts a comma-separated values (CSV) string to a 2D array.

Use `Array.prototype.slice()` and `Array.prototype.indexOf('\n')` to remove the first row (title row) if `omitFirstRow` is `true`.
Use `String.prototype.split('\n')` to create a string for each row, then `String.prototype.split(delimiter)` to separate the values in each row.
Omit the second argument, `delimiter`, to use a default delimiter of `,`.
Omit the third argument, `omitFirstRow`, to include the first row (title row) of the CSV string.

```js
const CSVToArray = (data, delimiter = ',', omitFirstRow = false) =&amp;gt;
  data
    .slice(omitFirstRow ? data.indexOf('\n') + 1 : 0)
    .split('\n')
    .map(v =&amp;gt; v.split(delimiter));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
CSVToArray('a,b\nc,d'); // [['a','b'],['c','d']];
CSVToArray('a;b\nc;d', ';'); // [['a','b'],['c','d']];
CSVToArray('col1,col2\na,b\nc,d', ',', true); // [['a','b'],['c','d']];
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### CSVToJSON ![advanced](/advanced.svg)

Converts a comma-separated values (CSV) string to a 2D array of objects.
The first row of the string is used as the title row.

Use `Array.prototype.slice()` and `Array.prototype.indexOf('\n')` and `String.prototype.split(delimiter)` to separate the first row (title row) into values.
Use `String.prototype.split('\n')` to create a string for each row, then `Array.prototype.map()` and `String.prototype.split(delimiter)` to separate the values in each row.
Use `Array.prototype.reduce()` to create an object for each row's values, with the keys parsed from the title row.
Omit the second argument, `delimiter`, to use a default delimiter of `,`.

```js
const CSVToJSON = (data, delimiter = ',') =&amp;gt; {
  const titles = data.slice(0, data.indexOf('\n')).split(delimiter);
  return data
    .slice(data.indexOf('\n') + 1)
    .split('\n')
    .map(v =&amp;gt; {
      const values = v.split(delimiter);
      return titles.reduce((obj, title, index) =&amp;gt; ((obj[title] = values[index]), obj), {});
    });
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
CSVToJSON('col1,col2\na,b\nc,d'); // [{'col1': 'a', 'col2': 'b'}, {'col1': 'c', 'col2': 'd'}];
CSVToJSON('col1;col2\na;b\nc;d', ';'); // [{'col1': 'a', 'col2': 'b'}, {'col1': 'c', 'col2': 'd'}];
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### decapitalize

Decapitalizes the first letter of a string.

Use array destructuring and `String.toLowerCase()` to decapitalize first letter, `...rest` to get array of characters after first letter and then `Array.prototype.join('')` to make it a string again.
Omit the `upperRest` parameter to keep the rest of the string intact, or set it to `true` to convert to uppercase.

```js
const decapitalize = ([first, ...rest], upperRest = false) =&amp;gt;
  first.toLowerCase() + (upperRest ? rest.join('').toUpperCase() : rest.join(''));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
decapitalize('FooBar'); // 'fooBar'
decapitalize('FooBar', true); // 'fOOBAR'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### escapeHTML

Escapes a string for use in HTML.

Use `String.prototype.replace()` with a regexp that matches the characters that need to be escaped, using a callback function to replace each character instance with its associated escaped character using a dictionary (object).

```js
const escapeHTML = str =&amp;gt;
  str.replace(
    /[&amp;amp;&amp;lt;&amp;gt;'"]/g,
    tag =&amp;gt;
      ({
        '&amp;amp;': '&amp;amp;amp;',
        '&amp;lt;': '&amp;amp;lt;',
        '&amp;gt;': '&amp;amp;gt;',
        "'": '&amp;amp;#39;',
        '"': '&amp;amp;quot;'
      }[tag] || tag)
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
escapeHTML('&amp;lt;a href="#"&amp;gt;Me &amp;amp; you&amp;lt;/a&amp;gt;'); // '&amp;amp;lt;a href=&amp;amp;quot;#&amp;amp;quot;&amp;amp;gt;Me &amp;amp;amp; you&amp;amp;lt;/a&amp;amp;gt;'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### escapeRegExp

Escapes a string to use in a regular expression.

Use `String.prototype.replace()` to escape special characters.

```js
const escapeRegExp = str =&amp;gt; str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&amp;amp;');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
escapeRegExp('(test)'); // \\(test\\)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### fromCamelCase

Converts a string from camelcase.

Use `String.prototype.replace()` to remove underscores, hyphens, and spaces and convert words to camelcase.
Omit the second argument to use a default `separator` of `_`.

```js
const fromCamelCase = (str, separator = '_') =&amp;gt;
  str
    .replace(/([a-z\d])([A-Z])/g, '$1' + separator + '$2')
    .replace(/([A-Z]+)([A-Z][a-z\d]+)/g, '$1' + separator + '$2')
    .toLowerCase();
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
fromCamelCase('someDatabaseFieldName', ' '); // 'some database field name'
fromCamelCase('someLabelThatNeedsToBeCamelized', '-'); // 'some-label-that-needs-to-be-camelized'
fromCamelCase('someJavascriptProperty', '_'); // 'some_javascript_property'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### indentString

Indents each line in the provided string.

Use `String.replace` and a regular expression to add the character specified by `indent` `count` times at the start of each line.
Omit the third parameter, `indent`, to use a default indentation character of `' '`.

```js
const indentString = (str, count, indent = ' ') =&amp;gt; str.replace(/^/gm, indent.repeat(count));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
indentString('Lorem\nIpsum', 2); // '  Lorem\n  Ipsum'
indentString('Lorem\nIpsum', 2, '_'); // '__Lorem\n__Ipsum'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isAbsoluteURL

Returns `true` if the given string is an absolute URL, `false` otherwise.

Use a regular expression to test if the string is an absolute URL.

```js
const isAbsoluteURL = str =&amp;gt; /^[a-z][a-z0-9+.-]*:/.test(str);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isAbsoluteURL('&lt;a href="https://google.com" rel="nofollow"&gt;https://google.com&lt;/a&gt;'); // true
isAbsoluteURL('ftp://www.myserver.net'); // true
isAbsoluteURL('/foo/bar'); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isAnagram

Checks if a string is an anagram of another string (case-insensitive, ignores spaces, punctuation and special characters).

Use `String.toLowerCase()`, `String.prototype.replace()` with an appropriate regular expression to remove unnecessary characters, `String.prototype.split('')`, `Array.prototype.sort()` and `Array.prototype.join('')` on both strings to normalize them, then check if their normalized forms are equal.

```js
const isAnagram = (str1, str2) =&amp;gt; {
  const normalize = str =&amp;gt;
    str
      .toLowerCase()
      .replace(/[^a-z0-9]/gi, '')
      .split('')
      .sort()
      .join('');
  return normalize(str1) === normalize(str2);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isAnagram('iceman', 'cinema'); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isLowerCase

Checks if a string is lower case.

Convert the given string to lower case, using `String.toLowerCase()` and compare it to the original.

```js
const isLowerCase = str =&amp;gt; str === str.toLowerCase();
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isLowerCase('abc'); // true
isLowerCase('a3@$'); // true
isLowerCase('Ab4'); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isUpperCase

Checks if a string is upper case.

Convert the given string to upper case, using `String.prototype.toUpperCase()` and compare it to the original.

```js
const isUpperCase = str =&amp;gt; str === str.toUpperCase();
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isUpperCase('ABC'); // true
isUpperCase('A3@$'); // true
isUpperCase('aB4'); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### mapString

Creates a new string with the results of calling a provided function on every character in the calling string.

Use `String.prototype.split('')` and `Array.prototype.map()` to call the provided function, `fn`, for each character in `str`.
Use `Array.prototype.join('')` to recombine the array of characters into a string.
The callback function, `fn`, takes three arguments (the current character, the index of the current character and the string `mapString` was called upon).

```js
const mapString = (str, fn) =&amp;gt;
  str
    .split('')
    .map((c, i) =&amp;gt; fn(c, i, str))
    .join('');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
mapString('lorem ipsum', c =&amp;gt; c.toUpperCase()); // 'LOREM IPSUM'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### mask

Replaces all but the last `num` of characters with the specified mask character.

Use `String.prototype.slice()` to grab the portion of the characters that will remain unmasked and use `String.padStart()` to fill the beginning of the string with the mask character up to the original length.
Omit the second argument, `num`, to keep a default of `4` characters unmasked. If `num` is negative, the unmasked characters will be at the start of the string.
Omit the third argument, `mask`, to use a default character of `'*'` for the mask.

```js
const mask = (cc, num = 4, mask = '*') =&amp;gt; `${cc}`.slice(-num).padStart(`${cc}`.length, mask);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
mask(1234567890); // '******7890'
mask(1234567890, 3); // '*******890'
mask(1234567890, -4, '$'); // '$$$$567890'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### pad

Pads a string on both sides with the specified character, if it's shorter than the specified length.

Use `String.padStart()` and `String.padEnd()` to pad both sides of the given string.
Omit the third argument, `char`, to use the whitespace character as the default padding character.

```js
const pad = (str, length, char = ' ') =&amp;gt;
  str.padStart((str.length + length) / 2, char).padEnd(length, char);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
pad('cat', 8); // '  cat   '
pad(String(42), 6, '0'); // '004200'
pad('foobar', 3); // 'foobar'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### palindrome

Returns `true` if the given string is a palindrome, `false` otherwise.

Convert the string to `String.prototype.toLowerCase()` and use `String.prototype.replace()` to remove non-alphanumeric characters from it.
Then, use the spread operator (`...`) to split the string into individual characters, `Array.prototype.reverse()`, `String.prototype.join('')` and compare it to the original, unreversed string, after converting it to `String.prototype.toLowerCase()`.

```js
const palindrome = str =&amp;gt; {
  const s = str.toLowerCase().replace(/[\W_]/g, '');
  return s === [...s].reverse().join('');
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
palindrome('taco cat'); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### pluralize

Returns the singular or plural form of the word based on the input number. If the first argument is an `object`, it will use a closure by returning a function that can auto-pluralize words that don't simply end in `s` if the supplied dictionary contains the word.

If `num` is either `-1` or `1`, return the singular form of the word. If `num` is any other number, return the plural form. Omit the third argument to use the default of the singular word + `s`, or supply a custom pluralized word when necessary. If the first argument is an `object`, utilize a closure by returning a function which can use the supplied dictionary to resolve the correct plural form of the word.

```js
const pluralize = (val, word, plural = word + 's') =&amp;gt; {
  const _pluralize = (num, word, plural = word + 's') =&amp;gt;
    [1, -1].includes(Number(num)) ? word : plural;
  if (typeof val === 'object') return (num, word) =&amp;gt; _pluralize(num, word, val[word]);
  return _pluralize(val, word, plural);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
pluralize(0, 'apple'); // 'apples'
pluralize(1, 'apple'); // 'apple'
pluralize(2, 'apple'); // 'apples'
pluralize(2, 'person', 'people'); // 'people'

const PLURALS = {
  person: 'people',
  radius: 'radii'
};
const autoPluralize = pluralize(PLURALS);
autoPluralize(2, 'person'); // 'people'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### removeNonASCII

Removes non-printable ASCII characters.

Use a regular expression to remove non-printable ASCII characters.

```js
const removeNonASCII = str =&amp;gt; str.replace(/[^\x20-\x7E]/g, '');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
removeNonASCII('äÄçÇéÉêlorem-ipsumöÖÐþúÚ'); // 'lorem-ipsum'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### reverseString

Reverses a string.

Use the spread operator (`...`) and `Array.prototype.reverse()` to reverse the order of the characters in the string.
Combine characters to get a string using `String.prototype.join('')`.

```js
const reverseString = str =&amp;gt; [...str].reverse().join('');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
reverseString('foobar'); // 'raboof'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### sortCharactersInString

Alphabetically sorts the characters in a string.

Use the spread operator (`...`), `Array.prototype.sort()` and  `String.localeCompare()` to sort the characters in `str`, recombine using `String.prototype.join('')`.

```js
const sortCharactersInString = str =&amp;gt; [...str].sort((a, b) =&amp;gt; a.localeCompare(b)).join('');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
sortCharactersInString('cabbage'); // 'aabbceg'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### splitLines

Splits a multiline string into an array of lines.

Use `String.prototype.split()` and a regular expression to match line breaks and create an array.

```js
const splitLines = str =&amp;gt; str.split(/\r?\n/);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
splitLines('This\nis a\nmultiline\nstring.\n'); // ['This', 'is a', 'multiline', 'string.' , '']
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### stringPermutations ![advanced](/advanced.svg)

&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; **WARNING**: This function's execution time increases exponentially with each character. Anything more than 8 to 10 characters will cause your browser to hang as it tries to solve all the different combinations.

Generates all permutations of a string (contains duplicates).

Use recursion.
For each letter in the given string, create all the partial permutations for the rest of its letters.
Use `Array.prototype.map()` to combine the letter with each partial permutation, then `Array.prototype.reduce()` to combine all permutations in one array.
Base cases are for string `length` equal to `2` or `1`.

```js
const stringPermutations = str =&amp;gt; {
  if (str.length &amp;lt;= 2) return str.length === 2 ? [str, str[1] + str[0]] : [str];
  return str
    .split('')
    .reduce(
      (acc, letter, i) =&amp;gt;
        acc.concat(stringPermutations(str.slice(0, i) + str.slice(i + 1)).map(val =&amp;gt; letter + val)),
      []
    );
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
stringPermutations('abc'); // ['abc','acb','bac','bca','cab','cba']
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### stripHTMLTags

Removes HTML/XML tags from string.

Use a regular expression to remove HTML/XML tags from a string.

```js
const stripHTMLTags = str =&amp;gt; str.replace(/&amp;lt;[^&amp;gt;]*&amp;gt;/g, '');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
stripHTMLTags('&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;lorem&amp;lt;/em&amp;gt; &amp;lt;strong&amp;gt;ipsum&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;'); // 'lorem ipsum'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### toCamelCase

Converts a string to camelcase.

Break the string into words and combine them capitalizing the first letter of each word, using a regexp.

```js
const toCamelCase = str =&amp;gt; {
  let s =
    str &amp;amp;&amp;amp;
    str
      .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)
      .map(x =&amp;gt; x.slice(0, 1).toUpperCase() + x.slice(1).toLowerCase())
      .join('');
  return s.slice(0, 1).toLowerCase() + s.slice(1);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
toCamelCase('some_database_field_name'); // 'someDatabaseFieldName'
toCamelCase('Some label that needs to be camelized'); // 'someLabelThatNeedsToBeCamelized'
toCamelCase('some-javascript-property'); // 'someJavascriptProperty'
toCamelCase('some-mixed_string with spaces_underscores-and-hyphens'); // 'someMixedStringWithSpacesUnderscoresAndHyphens'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### toKebabCase

Converts a string to kebab case.

Break the string into words and combine them adding `-` as a separator, using a regexp.

```js
const toKebabCase = str =&amp;gt;
  str &amp;amp;&amp;amp;
  str
    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)
    .map(x =&amp;gt; x.toLowerCase())
    .join('-');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
toKebabCase('camelCase'); // 'camel-case'
toKebabCase('some text'); // 'some-text'
toKebabCase('some-mixed_string With spaces_underscores-and-hyphens'); // 'some-mixed-string-with-spaces-underscores-and-hyphens'
toKebabCase('AllThe-small Things'); // "all-the-small-things"
toKebabCase('IAmListeningToFMWhileLoadingDifferentURLOnMyBrowserAndAlsoEditingSomeXMLAndHTML'); // "i-am-listening-to-fm-while-loading-different-url-on-my-browser-and-also-editing-xml-and-html"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### toSnakeCase

Converts a string to snake case.

Break the string into words and combine them adding `_` as a separator, using a regexp.

```js
const toSnakeCase = str =&amp;gt;
  str &amp;amp;&amp;amp;
  str
    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)
    .map(x =&amp;gt; x.toLowerCase())
    .join('_');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
toSnakeCase('camelCase'); // 'camel_case'
toSnakeCase('some text'); // 'some_text'
toSnakeCase('some-mixed_string With spaces_underscores-and-hyphens'); // 'some_mixed_string_with_spaces_underscores_and_hyphens'
toSnakeCase('AllThe-small Things'); // "all_the_smal_things"
toSnakeCase('IAmListeningToFMWhileLoadingDifferentURLOnMyBrowserAndAlsoEditingSomeXMLAndHTML'); // "i_am_listening_to_fm_while_loading_different_url_on_my_browser_and_also_editing_some_xml_and_html"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### toTitleCase

Converts a string to title case.

Break the string into words, using a regexp, and combine them capitalizing the first letter of each word and adding a whitespace between them.

```js
const toTitleCase = str =&amp;gt;
  str
    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)
    .map(x =&amp;gt; x.charAt(0).toUpperCase() + x.slice(1))
    .join(' ');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
toTitleCase('some_database_field_name'); // 'Some Database Field Name'
toTitleCase('Some label that needs to be title-cased'); // 'Some Label That Needs To Be Title Cased'
toTitleCase('some-package-name'); // 'Some Package Name'
toTitleCase('some-mixed_string with spaces_underscores-and-hyphens'); // 'Some Mixed String With Spaces Underscores And Hyphens'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### truncateString

Truncates a string up to a specified length.

Determine if the string's `length` is greater than `num`.
Return the string truncated to the desired length, with `'...'` appended to the end or the original string.

```js
const truncateString = (str, num) =&amp;gt;
  str.length &amp;gt; num ? str.slice(0, num &amp;gt; 3 ? num - 3 : num) + '...' : str;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
truncateString('boomerang', 7); // 'boom...'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### unescapeHTML

Unescapes escaped HTML characters.

Use `String.prototype.replace()` with a regex that matches the characters that need to be unescaped, using a callback function to replace each escaped character instance with its associated unescaped character using a dictionary (object).

```js
const unescapeHTML = str =&amp;gt;
  str.replace(
    /&amp;amp;amp;|&amp;amp;lt;|&amp;amp;gt;|&amp;amp;#39;|&amp;amp;quot;/g,
    tag =&amp;gt;
      ({
        '&amp;amp;amp;': '&amp;amp;',
        '&amp;amp;lt;': '&amp;lt;',
        '&amp;amp;gt;': '&amp;gt;',
        '&amp;amp;#39;': "'",
        '&amp;amp;quot;': '"'
      }[tag] || tag)
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
unescapeHTML('&amp;amp;lt;a href=&amp;amp;quot;#&amp;amp;quot;&amp;amp;gt;Me &amp;amp;amp; you&amp;amp;lt;/a&amp;amp;gt;'); // '&amp;lt;a href="#"&amp;gt;Me &amp;amp; you&amp;lt;/a&amp;gt;'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### URLJoin ![advanced](/advanced.svg)

Joins all given URL segments together, then normalizes the resulting URL.

Use `String.prototype.join('/')` to combine URL segments, then a series of `String.prototype.replace()` calls with various regexps to normalize the resulting URL (remove double slashes, add proper slashes for protocol, remove slashes before parameters, combine parameters with `'&amp;amp;'` and normalize first parameter delimiter).

```js
const URLJoin = (...args) =&amp;gt;
  args
    .join('/')
    .replace(/[\/]+/g, '/')
    .replace(/^(.+):\//, '$1://')
    .replace(/^file:/, 'file:/')
    .replace(/\/(\?|&amp;amp;|#[^!])/g, '$1')
    .replace(/\?/g, '&amp;amp;')
    .replace('&amp;amp;', '?');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
URLJoin('&lt;a href="http://www.google.com" rel="nofollow"&gt;http://www.google.com&lt;/a&gt;', 'a', '/b/cd', '?foo=123', '?bar=foo'); // '&lt;a href="http://www.google.com/a/b/cd?foo=123&amp;amp;bar=foo" rel="nofollow"&gt;http://www.google.com/a/b/cd?foo=123&amp;amp;bar=foo&lt;/a&gt;'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### words

Converts a given string into an array of words.

Use `String.prototype.split()` with a supplied pattern (defaults to non-alpha as a regexp) to convert to an array of strings. Use `Array.prototype.filter()` to remove any empty strings.
Omit the second argument to use the default regexp.

```js
const words = (str, pattern = /[^a-zA-Z-]+/) =&amp;gt; str.split(pattern).filter(Boolean);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
words('I love javaScript!!'); // ["I", "love", "javaScript"]
words('python, javaScript &amp;amp; coffee'); // ["python", "javaScript", "coffee"]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

---

## &lt;g-emoji class="g-emoji" alias="page_with_curl" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c3.png"&gt;📃&lt;/g-emoji&gt; Type


### getType

Returns the native type of a value.

Returns lowercased constructor name of value, `"undefined"` or `"null"` if value is `undefined` or `null`.

```js
const getType = v =&amp;gt;
  v === undefined ? 'undefined' : v === null ? 'null' : v.constructor.name.toLowerCase();
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
getType(new Set([1, 2, 3])); // 'set'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### is

Checks if the provided value is of the specified type.

Ensure the value is not `undefined` or `null` using `Array.prototype.includes()`, and compare the `constructor` property on the value with `type` to check if the provided value is of the specified `type`.

```js
const is = (type, val) =&amp;gt; ![, null].includes(val) &amp;amp;&amp;amp; val.constructor === type;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
is(Array, [1]); // true
is(ArrayBuffer, new ArrayBuffer()); // true
is(Map, new Map()); // true
is(RegExp, /./g); // true
is(Set, new Set()); // true
is(WeakMap, new WeakMap()); // true
is(WeakSet, new WeakSet()); // true
is(String, ''); // true
is(String, new String('')); // true
is(Number, 1); // true
is(Number, new Number(1)); // true
is(Boolean, true); // true
is(Boolean, new Boolean(true)); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isArrayLike

Checks if the provided argument is array-like (i.e. is iterable).

Check if the provided argument is not `null` and that its `Symbol.iterator` property is a function.

```js
const isArrayLike = obj =&amp;gt; obj != null &amp;amp;&amp;amp; typeof obj[Symbol.iterator] === 'function';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isArrayLike(document.querySelectorAll('.className')); // true
isArrayLike('abc'); // true
isArrayLike(null); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isBoolean

Checks if the given argument is a native boolean element.

Use `typeof` to check if a value is classified as a boolean primitive.

```js
const isBoolean = val =&amp;gt; typeof val === 'boolean';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isBoolean(null); // false
isBoolean(false); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isEmpty

Returns true if the a value is an empty object, collection, has no enumerable properties or is any type that is not considered a collection.

Check if the provided value is `null` or if its `length` is equal to `0`.

```js
const isEmpty = val =&amp;gt; val == null || !(Object.keys(val) || val).length;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isEmpty([]); // true
isEmpty({}); // true
isEmpty(''); // true
isEmpty([1, 2]); // false
isEmpty({ a: 1, b: 2 }); // false
isEmpty('text'); // false
isEmpty(123); // true - type is not considered a collection
isEmpty(true); // true - type is not considered a collection
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isFunction

Checks if the given argument is a function.

Use `typeof` to check if a value is classified as a function primitive.

```js
const isFunction = val =&amp;gt; typeof val === 'function';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isFunction('x'); // false
isFunction(x =&amp;gt; x); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isNil

Returns `true` if the specified value is `null` or `undefined`, `false` otherwise.

Use the strict equality operator to check if the value and of `val` are equal to `null` or `undefined`.

```js
const isNil = val =&amp;gt; val === undefined || val === null;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isNil(null); // true
isNil(undefined); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isNull

Returns `true` if the specified value is `null`, `false` otherwise.

Use the strict equality operator to check if the value and of `val` are equal to `null`.

```js
const isNull = val =&amp;gt; val === null;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isNull(null); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isNumber

Checks if the given argument is a number.

Use `typeof` to check if a value is classified as a number primitive. 
To safeguard against `NaN`, check if `val === val` (as `NaN` has a `typeof` equal to `number` and is the only value not equal to itself).

```js
const isNumber = val =&amp;gt; typeof val === 'number' &amp;amp;&amp;amp; val === val;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isNumber(1); // true
isNumber('1'); // false
isNumber(NaN); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isObject

Returns a boolean determining if the passed value is an object or not.

Uses the  `Object` constructor to create an object wrapper for the given value. 
If the value is `null` or `undefined`, create and return an empty object. Οtherwise, return an object of a type that corresponds to the given value.

```js
const isObject = obj =&amp;gt; obj === Object(obj);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isObject([1, 2, 3, 4]); // true
isObject([]); // true
isObject(['Hello!']); // true
isObject({ a: 1 }); // true
isObject({}); // true
isObject(true); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isObjectLike

Checks if a value is object-like.

Check if the provided value is not `null` and its `typeof` is equal to `'object'`.

```js
const isObjectLike = val =&amp;gt; val !== null &amp;amp;&amp;amp; typeof val === 'object';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isObjectLike({}); // true
isObjectLike([1, 2, 3]); // true
isObjectLike(x =&amp;gt; x); // false
isObjectLike(null); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isPlainObject

Checks if the provided value is an object created by the Object constructor.

Check if the provided value is truthy, use `typeof` to check if it is an object and `Object.constructor` to make sure the constructor is equal to `Object`.

```js
const isPlainObject = val =&amp;gt; !!val &amp;amp;&amp;amp; typeof val === 'object' &amp;amp;&amp;amp; val.constructor === Object;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isPlainObject({ a: 1 }); // true
isPlainObject(new Map()); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isPrimitive

Returns a boolean determining if the passed value is primitive or not.

Create an object from `val` and compare it with `val` to determine if the passed value is primitive (i.e. not equal to the created object).

```js
const isPrimitive = val =&amp;gt; Object(val) !== val;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isPrimitive(null); // true
isPrimitive(50); // true
isPrimitive('Hello!'); // true
isPrimitive(false); // true
isPrimitive(Symbol()); // true
isPrimitive([]); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isPromiseLike

Returns `true` if an object looks like a [`Promise`](&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&lt;/a&gt;), `false` otherwise.

Check if the object is not `null`, its `typeof` matches either `object` or `function` and if it has a `.then` property, which is also a `function`.

```js
const isPromiseLike = obj =&amp;gt;
  obj !== null &amp;amp;&amp;amp;
  (typeof obj === 'object' || typeof obj === 'function') &amp;amp;&amp;amp;
  typeof obj.then === 'function';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isPromiseLike({
  then: function() {
    return '';
  }
}); // true
isPromiseLike(null); // false
isPromiseLike({}); // false
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isString

Checks if the given argument is a string. Only works for string primitives.

Use `typeof` to check if a value is classified as a string primitive.

```js
const isString = val =&amp;gt; typeof val === 'string';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isString('10'); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isSymbol

Checks if the given argument is a symbol.

Use `typeof` to check if a value is classified as a symbol primitive.

```js
const isSymbol = val =&amp;gt; typeof val === 'symbol';
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isSymbol(Symbol('x')); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isUndefined

Returns `true` if the specified value is `undefined`, `false` otherwise.

Use the strict equality operator to check if the value and of `val` are equal to `undefined`.

```js
const isUndefined = val =&amp;gt; val === undefined;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isUndefined(undefined); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isValidJSON

Checks if the provided string is a valid JSON.

Use `JSON.parse()` and a `try... catch` block to check if the provided string is a valid JSON.

```js
const isValidJSON = str =&amp;gt; {
  try {
    JSON.parse(str);
    return true;
  } catch (e) {
    return false;
  }
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isValidJSON('{"name":"Adam","age":20}'); // true
isValidJSON('{"name":"Adam",age:"20"}'); // false
isValidJSON(null); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

---

## &lt;g-emoji class="g-emoji" alias="wrench" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png"&gt;🔧&lt;/g-emoji&gt; Utility


### castArray

Casts the provided value as an array if it's not one.

Use `Array.prototype.isArray()` to determine if `val` is an array and return it as-is or encapsulated in an array accordingly.

```js
const castArray = val =&amp;gt; (Array.isArray(val) ? val : [val]);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
castArray('foo'); // ['foo']
castArray([1]); // [1]
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### cloneRegExp

Clones a regular expression.

Use `new RegExp()`, `RegExp.source` and `RegExp.flags` to clone the given regular expression.

```js
const cloneRegExp = regExp =&amp;gt; new RegExp(regExp.source, regExp.flags);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const regExp = /lorem ipsum/gi;
const regExp2 = cloneRegExp(regExp); // /lorem ipsum/gi
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### coalesce

Returns the first non-null/undefined argument.

Use `Array.prototype.find()` to return the first non `null`/`undefined` argument.

```js
const coalesce = (...args) =&amp;gt; args.find(_ =&amp;gt; ![undefined, null].includes(_));
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
coalesce(null, undefined, '', NaN, 'Waldo'); // ""
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### coalesceFactory

Returns a customized coalesce function that returns the first argument that returns `true` from the provided argument validation function.

Use `Array.prototype.find()` to return the first argument that returns `true` from the provided argument validation function.

```js
const coalesceFactory = valid =&amp;gt; (...args) =&amp;gt; args.find(valid);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const customCoalesce = coalesceFactory(_ =&amp;gt; ![null, undefined, '', NaN].includes(_));
customCoalesce(undefined, null, NaN, '', 'Waldo'); // "Waldo"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### extendHex

Extends a 3-digit color code to a 6-digit color code.

Use `Array.prototype.map()`, `String.prototype.split()` and `Array.prototype.join()` to join the mapped array for converting a 3-digit RGB notated hexadecimal color-code to the 6-digit form.
`Array.prototype.slice()` is used to remove `#` from string start since it's added once.

```js
const extendHex = shortHex =&amp;gt;
  '#' +
  shortHex
    .slice(shortHex.startsWith('#') ? 1 : 0)
    .split('')
    .map(x =&amp;gt; x + x)
    .join('');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
extendHex('#03f'); // '#0033ff'
extendHex('05a'); // '#0055aa'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### getURLParameters

Returns an object containing the parameters of the current URL.

Use `String.match()` with an appropriate regular expression to get all key-value pairs, `Array.prototype.reduce()` to map and combine them into a single object.
Pass `location.search` as the argument to apply to the current `url`.

```js
const getURLParameters = url =&amp;gt;
  (url.match(/([^?=&amp;amp;]+)(=([^&amp;amp;]*))/g) || []).reduce(
    (a, v) =&amp;gt; ((a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a),
    {}
  );
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
getURLParameters('&lt;a href="http://url.com/page?name=Adam&amp;amp;surname=Smith" rel="nofollow"&gt;http://url.com/page?name=Adam&amp;amp;surname=Smith&lt;/a&gt;'); // {name: 'Adam', surname: 'Smith'}
getURLParameters('google.com'); // {}
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### hexToRGB ![advanced](/advanced.svg)

Converts a color code to a `rgb()` or `rgba()` string if alpha value is provided.

Use bitwise right-shift operator and mask bits with `&amp;amp;` (and) operator to convert a hexadecimal color code (with or without prefixed with `#`) to a string with the RGB values. If it's 3-digit color code, first convert to 6-digit version. If an alpha value is provided alongside 6-digit hex, give `rgba()` string in return.

```js
const hexToRGB = hex =&amp;gt; {
  let alpha = false,
    h = hex.slice(hex.startsWith('#') ? 1 : 0);
  if (h.length === 3) h = [...h].map(x =&amp;gt; x + x).join('');
  else if (h.length === 8) alpha = true;
  h = parseInt(h, 16);
  return (
    'rgb' +
    (alpha ? 'a' : '') +
    '(' +
    (h &amp;gt;&amp;gt;&amp;gt; (alpha ? 24 : 16)) +
    ', ' +
    ((h &amp;amp; (alpha ? 0x00ff0000 : 0x00ff00)) &amp;gt;&amp;gt;&amp;gt; (alpha ? 16 : 8)) +
    ', ' +
    ((h &amp;amp; (alpha ? 0x0000ff00 : 0x0000ff)) &amp;gt;&amp;gt;&amp;gt; (alpha ? 8 : 0)) +
    (alpha ? `, ${h &amp;amp; 0x000000ff}` : '') +
    ')'
  );
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
hexToRGB('#27ae60ff'); // 'rgba(39, 174, 96, 255)'
hexToRGB('27ae60'); // 'rgb(39, 174, 96)'
hexToRGB('#fff'); // 'rgb(255, 255, 255)'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### httpGet

Makes a `GET` request to the passed URL.

Use [`XMLHttpRequest`](&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest&lt;/a&gt;) web api to make a `get` request to the given `url`.
Handle the `onload` event, by calling the given `callback` the `responseText`.
Handle the `onerror` event, by running the provided `err` function.
Omit the third argument, `err`, to log errors to the console's `error` stream by default.

```js
const httpGet = (url, callback, err = console.error) =&amp;gt; {
  const request = new XMLHttpRequest();
  request.open('GET', url, true);
  request.onload = () =&amp;gt; callback(request.responseText);
  request.onerror = () =&amp;gt; err(request);
  request.send();
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
httpGet(
  '&lt;a href="https://jsonplaceholder.typicode.com/posts/1" rel="nofollow"&gt;https://jsonplaceholder.typicode.com/posts/1&lt;/a&gt;',
  console.log
); /*
Logs: {
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}
*/
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### httpPost

Makes a `POST` request to the passed URL.

Use [`XMLHttpRequest`](&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest&lt;/a&gt;) web api to make a `post` request to the given `url`.
Set the value of an `HTTP` request header with `setRequestHeader` method.
Handle the `onload` event, by calling the given `callback` the `responseText`.
Handle the `onerror` event, by running the provided `err` function.
Omit the third argument, `data`, to send no data to the provided `url`.
Omit the fourth argument, `err`, to log errors to the console's `error` stream by default.

```js
const httpPost = (url, data, callback, err = console.error) =&amp;gt; {
  const request = new XMLHttpRequest();
  request.open('POST', url, true);
  request.setRequestHeader('Content-type', 'application/json; charset=utf-8');
  request.onload = () =&amp;gt; callback(request.responseText);
  request.onerror = () =&amp;gt; err(request);
  request.send(data);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const newPost = {
  userId: 1,
  id: 1337,
  title: 'Foo',
  body: 'bar bar bar'
};
const data = JSON.stringify(newPost);
httpPost(
  '&lt;a href="https://jsonplaceholder.typicode.com/posts" rel="nofollow"&gt;https://jsonplaceholder.typicode.com/posts&lt;/a&gt;',
  data,
  console.log
); /*
Logs: {
  "userId": 1,
  "id": 1337,
  "title": "Foo",
  "body": "bar bar bar"
}
*/
httpPost(
  '&lt;a href="https://jsonplaceholder.typicode.com/posts" rel="nofollow"&gt;https://jsonplaceholder.typicode.com/posts&lt;/a&gt;',
  null, // does not send a body
  console.log
); /*
Logs: {
  "id": 101
}
*/
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### isBrowser

Determines if the current runtime environment is a browser so that front-end modules can run on the server (Node) without throwing errors.

Use `Array.prototype.includes()` on the `typeof` values of both `window` and `document` (globals usually only available in a browser environment unless they were explicitly defined), which will return `true` if one of them is `undefined`.
`typeof` allows globals to be checked for existence without throwing a `ReferenceError`.
If both of them are not `undefined`, then the current environment is assumed to be a browser.

```js
const isBrowser = () =&amp;gt; ![typeof window, typeof document].includes('undefined');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
isBrowser(); // true (browser)
isBrowser(); // false (Node)
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### mostPerformant

Returns the index of the function in an array of functions which executed the fastest.

Use `Array.prototype.map()` to generate an array where each value is the total time taken to execute the function after `iterations` times. Use the difference in `performance.now()` values before and after to get the total time in milliseconds to a high degree of accuracy.
Use `Math.min()` to find the minimum execution time, and return the index of that shortest time which corresponds to the index of the most performant function.
Omit the second argument, `iterations`, to use a default of 10,000 iterations. The more iterations, the more reliable the result but the longer it will take.

```js
const mostPerformant = (fns, iterations = 10000) =&amp;gt; {
  const times = fns.map(fn =&amp;gt; {
    const before = performance.now();
    for (let i = 0; i &amp;lt; iterations; i++) fn();
    return performance.now() - before;
  });
  return times.indexOf(Math.min(...times));
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
mostPerformant([
  () =&amp;gt; {
    // Loops through the entire array before returning `false`
    [1, 2, 3, 4, 5, 6, 7, 8, 9, '10'].every(el =&amp;gt; typeof el === 'number');
  },
  () =&amp;gt; {
    // Only needs to reach index `1` before returning false
    [1, '2', 3, 4, 5, 6, 7, 8, 9, 10].every(el =&amp;gt; typeof el === 'number');
  }
]); // 1
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### nthArg

Creates a function that gets the argument at index `n`. If `n` is negative, the nth argument from the end is returned.

Use `Array.prototype.slice()` to get the desired argument at index `n`.

```js
const nthArg = n =&amp;gt; (...args) =&amp;gt; args.slice(n)[0];
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
const third = nthArg(2);
third(1, 2, 3); // 3
third(1, 2); // undefined
const last = nthArg(-1);
last(1, 2, 3, 4, 5); // 5
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### objectToQueryString

Returns a query string generated from the key-value pairs of the given object.

Use `Array.prototype.reduce()` on `Object.entries(queryParameters)` to create the query string.
Determine the `symbol` to be either `?` or `&amp;amp;` based on the `index` and concatenate `val` to `queryString` only if it's a string.
Return the `queryString` or an empty string when the `queryParameters` are falsy.

```js
const objectToQueryString = queryParameters =&amp;gt; {
  return queryParameters
    ? Object.entries(queryParameters).reduce((queryString, [key, val], index) =&amp;gt; {
      const symbol = index === 0 ? '?' : '&amp;amp;';
      queryString += typeof val === 'string' ? `${symbol}${key}=${val}` : '';
      return queryString;
    }, '')
    : '';
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
objectToQueryString({ page: '1', size: '2kg', key: undefined }); // '?page=1&amp;amp;size=2kg'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### parseCookie

Parse an HTTP Cookie header string and return an object of all cookie name-value pairs.

Use `String.prototype.split(';')` to separate key-value pairs from each other.
Use `Array.prototype.map()` and `String.prototype.split('=')` to separate keys from values in each pair.
Use `Array.prototype.reduce()` and `decodeURIComponent()` to create an object with all key-value pairs.

```js
const parseCookie = str =&amp;gt;
  str
    .split(';')
    .map(v =&amp;gt; v.split('='))
    .reduce((acc, v) =&amp;gt; {
      acc[decodeURIComponent(v[0].trim())] = decodeURIComponent(v[1].trim());
      return acc;
    }, {});
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
parseCookie('foo=bar; equation=E%3Dmc%5E2'); // { foo: 'bar', equation: 'E=mc^2' }
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### prettyBytes ![advanced](/advanced.svg)

Converts a number in bytes to a human-readable string.

Use an array dictionary of units to be accessed based on the exponent.
Use `Number.toPrecision()` to truncate the number to a certain number of digits.
Return the prettified string by building it up, taking into account the supplied options and whether it is negative or not.
Omit the second argument, `precision`, to use a default precision of `3` digits.
Omit the third argument, `addSpace`, to add space between the number and unit by default.

```js
const prettyBytes = (num, precision = 3, addSpace = true) =&amp;gt; {
  const UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
  if (Math.abs(num) &amp;lt; 1) return num + (addSpace ? ' ' : '') + UNITS[0];
  const exponent = Math.min(Math.floor(Math.log10(num &amp;lt; 0 ? -num : num) / 3), UNITS.length - 1);
  const n = Number(((num &amp;lt; 0 ? -num : num) / 1000 ** exponent).toPrecision(precision));
  return (num &amp;lt; 0 ? '-' : '') + n + (addSpace ? ' ' : '') + UNITS[exponent];
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
prettyBytes(1000); // "1 KB"
prettyBytes(-27145424323.5821, 5); // "-27.145 GB"
prettyBytes(123456789, 3, false); // "123MB"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### randomHexColorCode

Generates a random hexadecimal color code.

Use `Math.random` to generate a random 24-bit(6x4bits) hexadecimal number. Use bit shifting and then convert it to an hexadecimal String using `toString(16)`.

```js
const randomHexColorCode = () =&amp;gt; {
  let n = (Math.random() * 0xfffff * 1000000).toString(16);
  return '#' + n.slice(0, 6);
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
randomHexColorCode(); // "#e34155"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### RGBToHex

Converts the values of RGB components to a color code.

Convert given RGB parameters to hexadecimal string using bitwise left-shift operator (`&amp;lt;&amp;lt;`) and `toString(16)`, then `String.padStart(6,'0')` to get a 6-digit hexadecimal value.

```js
const RGBToHex = (r, g, b) =&amp;gt; ((r &amp;lt;&amp;lt; 16) + (g &amp;lt;&amp;lt; 8) + b).toString(16).padStart(6, '0');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
RGBToHex(255, 165, 1); // 'ffa501'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### serializeCookie

Serialize a cookie name-value pair into a Set-Cookie header string.

Use template literals and `encodeURIComponent()` to create the appropriate string.

```js
const serializeCookie = (name, val) =&amp;gt; `${encodeURIComponent(name)}=${encodeURIComponent(val)}`;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
serializeCookie('foo', 'bar'); // 'foo=bar'
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### timeTaken

Measures the time taken by a function to execute.

Use `console.time()` and `console.timeEnd()` to measure the difference between the start and end times to determine how long the callback took to execute.

```js
const timeTaken = callback =&amp;gt; {
  console.time('timeTaken');
  const r = callback();
  console.timeEnd('timeTaken');
  return r;
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
timeTaken(() =&amp;gt; Math.pow(2, 10)); // 1024, (logged): timeTaken: 0.02099609375ms
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### toCurrency

Take a number and return specified currency formatting.

Use `Intl.NumberFormat` to enable country / currency sensitive formatting.

```js
const toCurrency = (n, curr, LanguageFormat = undefined) =&amp;gt;
  Intl.NumberFormat(LanguageFormat, { style: 'currency', currency: curr }).format(n);
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
toCurrency(123456.789, 'EUR'); // €123,456.79  | currency: Euro | currencyLangFormat: Local
toCurrency(123456.789, 'USD', 'en-us'); // $123,456.79  | currency: US Dollar | currencyLangFormat: English (United States)
toCurrency(123456.789, 'USD', 'fa'); // ۱۲۳٬۴۵۶٫۷۹ ؜$ | currency: US Dollar | currencyLangFormat: Farsi
toCurrency(322342436423.2435, 'JPY'); // ¥322,342,436,423 | currency: Japanese Yen | currencyLangFormat: Local
toCurrency(322342436423.2435, 'JPY', 'fi'); // 322 342 436 423 ¥ | currency: Japanese Yen | currencyLangFormat: Finnish
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### toDecimalMark

Use `toLocaleString()` to convert a float-point arithmetic to the [Decimal mark](&lt;a href="https://en.wikipedia.org/wiki/Decimal_mark" rel="nofollow"&gt;https://en.wikipedia.org/wiki/Decimal_mark&lt;/a&gt;) form. It makes a comma separated string from a number.

```js
const toDecimalMark = num =&amp;gt; num.toLocaleString('en-US');
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
toDecimalMark(12305030388.9087); // "12,305,030,388.909"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### toOrdinalSuffix

Adds an ordinal suffix to a number.

Use the modulo operator (`%`) to find values of single and tens digits.
Find which ordinal pattern digits match.
If digit is found in teens pattern, use teens ordinal.

```js
const toOrdinalSuffix = num =&amp;gt; {
  const int = parseInt(num),
    digits = [int % 10, int % 100],
    ordinals = ['st', 'nd', 'rd', 'th'],
    oPattern = [1, 2, 3, 4],
    tPattern = [11, 12, 13, 14, 15, 16, 17, 18, 19];
  return oPattern.includes(digits[0]) &amp;amp;&amp;amp; !tPattern.includes(digits[1])
    ? int + ordinals[digits[0] - 1]
    : int + ordinals[3];
};
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
toOrdinalSuffix('123'); // "123rd"
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### validateNumber

Returns `true` if the given value is a number, `false` otherwise.

Use `!isNaN()` in combination with `parseFloat()` to check if the argument is a number.
Use `isFinite()` to check if the number is finite.
Use `Number()` to check if the coercion holds.

```js
const validateNumber = n =&amp;gt; !isNaN(parseFloat(n)) &amp;amp;&amp;amp; isFinite(n) &amp;amp;&amp;amp; Number(n) == n;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
validateNumber('10'); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

### yesNo

Returns `true` if the string is `y`/`yes` or `false` if the string is `n`/`no`.

Use `RegExp.test()` to check if the string evaluates to `y/yes` or `n/no`.
Omit the second argument, `def` to set the default answer as `no`.

```js
const yesNo = (val, def = false) =&amp;gt;
  /^(y|yes)$/i.test(val) ? true : /^(n|no)$/i.test(val) ? false : def;
```

&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Examples&amp;lt;/summary&amp;gt;

```js
yesNo('Y'); // true
yesNo('yes'); // true
yesNo('No'); // false
yesNo('Foo', true); // true
```
&amp;lt;/details&amp;gt;

&amp;lt;br&amp;gt;[⬆ Back to top](#contents)

## Collaborators

| [&amp;lt;img src="&lt;a href="https://github.com/Chalarangelo.png"&gt;https://github.com/Chalarangelo.png&lt;/a&gt;" width="100px;"/&amp;gt;](&lt;a href="https://github.com/Chalarangelo)&amp;lt;br/"&gt;https://github.com/Chalarangelo)&amp;lt;br/&lt;/a&gt;&amp;gt; [&amp;lt;sub&amp;gt;Angelos Chalaris&amp;lt;/sub&amp;gt;](&lt;a href="https://github.com/Chalarangelo"&gt;https://github.com/Chalarangelo&lt;/a&gt;) | [&amp;lt;img src="&lt;a href="https://github.com/flxwu.png"&gt;https://github.com/flxwu.png&lt;/a&gt;" width="100px;"/&amp;gt;](&lt;a href="https://github.com/flxwu)&amp;lt;br/"&gt;https://github.com/flxwu)&amp;lt;br/&lt;/a&gt;&amp;gt; [&amp;lt;sub&amp;gt;Felix Wu&amp;lt;/sub&amp;gt;](&lt;a href="https://github.com/Pl4gue"&gt;https://github.com/Pl4gue&lt;/a&gt;) | [&amp;lt;img src="&lt;a href="https://github.com/fejes713.png"&gt;https://github.com/fejes713.png&lt;/a&gt;" width="100px;"/&amp;gt;](&lt;a href="https://github.com/fejes713)&amp;lt;br/"&gt;https://github.com/fejes713)&amp;lt;br/&lt;/a&gt;&amp;gt; [&amp;lt;sub&amp;gt;Stefan Feješ&amp;lt;/sub&amp;gt;](&lt;a href="https://github.com/fejes713"&gt;https://github.com/fejes713&lt;/a&gt;)  | [&amp;lt;img src="&lt;a href="https://github.com/kingdavidmartins.png"&gt;https://github.com/kingdavidmartins.png&lt;/a&gt;" width="100px;"/&amp;gt;](&lt;a href="https://github.com/kingdavidmartins)&amp;lt;br/"&gt;https://github.com/kingdavidmartins)&amp;lt;br/&lt;/a&gt;&amp;gt; [&amp;lt;sub&amp;gt;King David Martins&amp;lt;/sub&amp;gt;](&lt;a href="https://github.com/iamsoorena"&gt;https://github.com/iamsoorena&lt;/a&gt;) | [&amp;lt;img src="&lt;a href="https://github.com/iamsoorena.png"&gt;https://github.com/iamsoorena.png&lt;/a&gt;" width="100px;"/&amp;gt;](&lt;a href="https://github.com/iamsoorena)&amp;lt;br/"&gt;https://github.com/iamsoorena)&amp;lt;br/&lt;/a&gt;&amp;gt; [&amp;lt;sub&amp;gt;Soorena Soleimani&amp;lt;/sub&amp;gt;](&lt;a href="https://github.com/iamsoorena"&gt;https://github.com/iamsoorena&lt;/a&gt;) |
| --- | --- | --- | --- | --- |
| [&amp;lt;img src="&lt;a href="https://github.com/elderhsouza.png"&gt;https://github.com/elderhsouza.png&lt;/a&gt;" width="100px;"/&amp;gt;](&lt;a href="https://github.com/elderhsouza)&amp;lt;br/"&gt;https://github.com/elderhsouza)&amp;lt;br/&lt;/a&gt;&amp;gt; [&amp;lt;sub&amp;gt;Elder Henrique Souza&amp;lt;/sub&amp;gt;](&lt;a href="https://github.com/elderhsouza"&gt;https://github.com/elderhsouza&lt;/a&gt;) | [&amp;lt;img src="&lt;a href="https://github.com/skatcat31.png"&gt;https://github.com/skatcat31.png&lt;/a&gt;" width="100px;"/&amp;gt;](&lt;a href="https://github.com/skatcat31)&amp;lt;br/"&gt;https://github.com/skatcat31)&amp;lt;br/&lt;/a&gt;&amp;gt; [&amp;lt;sub&amp;gt;Robert Mennell&amp;lt;/sub&amp;gt;](&lt;a href="https://github.com/skatcat31"&gt;https://github.com/skatcat31&lt;/a&gt;) | [&amp;lt;img src="&lt;a href="https://github.com/atomiks.png"&gt;https://github.com/atomiks.png&lt;/a&gt;" width="100px;"/&amp;gt;](&lt;a href="https://github.com/atomiks)&amp;lt;br/"&gt;https://github.com/atomiks)&amp;lt;br/&lt;/a&gt;&amp;gt; [&amp;lt;sub&amp;gt;atomiks&amp;lt;/sub&amp;gt;](&lt;a href="https://github.com/atomiks"&gt;https://github.com/atomiks&lt;/a&gt;)  |


## Credits

*Logos made by [Angelos Chalaris](&lt;a href="https://github.com/Chalarangelo"&gt;https://github.com/Chalarangelo&lt;/a&gt;) are licensed under the [MIT](&lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;https://opensource.org/licenses/MIT&lt;/a&gt;) license.*
*This README is built using [markdown-builder](&lt;a href="https://github.com/30-seconds/markdown-builder).*"&gt;https://github.com/30-seconds/markdown-builder).*&lt;/a&gt;

&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>30-seconds</author><guid isPermaLink="false">https://github.com/30-seconds/30-seconds-of-code</guid><pubDate>Wed, 13 Nov 2019 00:14:00 GMT</pubDate></item><item><title>hankcs/HanLP #15 in All Languages, This month</title><link>https://github.com/hankcs/HanLP</link><description>&lt;p&gt;&lt;i&gt;自然语言处理 中文分词 词性标注 命名实体识别 依存句法分析 新词发现  关键词短语提取 自动摘要 文本分类聚类 拼音简繁&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hanlp-han-language-processing" class="anchor" aria-hidden="true" href="#hanlp-han-language-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HanLP: Han Language Processing&lt;/h1&gt;
&lt;p&gt;汉语言处理包
&lt;a href="https://mvnrepository.com/artifact/com.hankcs/hanlp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0d06421cbca00bb4087442e8b19c55068c0e30dd/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d6d657461646174612f762f687474702f63656e7472616c2e6d6176656e2e6f72672f6d6176656e322f636f6d2f68616e6b63732f68616e6c702f6d6176656e2d6d657461646174612e786d6c2e737667" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-metadata/v/http/central.maven.org/maven2/com/hankcs/hanlp/maven-metadata.xml.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/hankcs/hanlp/releases"&gt;&lt;img src="https://camo.githubusercontent.com/697f43a3d9d012256876858245cad40f6606b7b5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f68616e6b63732f48616e4c502e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/hankcs/HanLP.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8cb994f6c4a156c623fe057fccd7fb7d7d2e8c9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322d3445423142412e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/samurais/hanlp-api/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b0c76b0fa02220759e2017d2b856a9487ea31f9/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f73746172732f73616d75726169732f68616e6c702d6170692e7376673f6d61784167653d32353932303030" alt="Docker Stars" data-canonical-src="https://img.shields.io/docker/stars/samurais/hanlp-api.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;HanLP是一系列模型与算法组成的NLP工具包，由大快搜索主导并完全开源，目标是普及自然语言处理在生产环境中的应用。HanLP具备功能完善、性能高效、架构清晰、语料时新、可自定义的特点。内部算法经过工业界和学术界考验，配套书籍&lt;a href="http://nlp.hankcs.com/book.php" rel="nofollow"&gt;《自然语言处理入门》&lt;/a&gt;已经出版。&lt;/p&gt;
&lt;p&gt;HanLP提供下列功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文分词
&lt;ul&gt;
&lt;li&gt;HMM-Bigram（速度与精度最佳平衡；一百兆内存）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#1-%E7%AC%AC%E4%B8%80%E4%B8%AAdemo"&gt;最短路分词&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#5-n-%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E5%88%86%E8%AF%8D"&gt;N-最短路分词&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;由字构词（侧重精度，全世界最大语料库，可识别新词；适合NLP任务）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;感知机分词&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#6-crf%E5%88%86%E8%AF%8D"&gt;CRF分词&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;词典分词（侧重速度，每秒数千万字符；省内存）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#7-%E6%9E%81%E9%80%9F%E8%AF%8D%E5%85%B8%E5%88%86%E8%AF%8D"&gt;极速词典分词&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;所有分词器都支持：
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#4-%E7%B4%A2%E5%BC%95%E5%88%86%E8%AF%8D"&gt;索引全切分模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#8-%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%8D%E5%85%B8"&gt;用户自定义词典&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/blob/master/src/test/java/com/hankcs/demo/DemoPerceptronLexicalAnalyzer.java#L29"&gt;兼容繁体中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki"&gt;训练用户自己的领域模型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;词性标注
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/blob/master/src/main/java/com/hankcs/hanlp/seg/Segment.java#L584"&gt;HMM词性标注&lt;/a&gt;（速度快）&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;感知机词性标注&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP/wiki/CRF%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90"&gt;CRF词性标注&lt;/a&gt;（精度高）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;命名实体识别
&lt;ul&gt;
&lt;li&gt;基于HMM角色标注的命名实体识别 （速度快）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#9-%E4%B8%AD%E5%9B%BD%E4%BA%BA%E5%90%8D%E8%AF%86%E5%88%AB"&gt;中国人名识别&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#10-%E9%9F%B3%E8%AF%91%E4%BA%BA%E5%90%8D%E8%AF%86%E5%88%AB"&gt;音译人名识别&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#11-%E6%97%A5%E6%9C%AC%E4%BA%BA%E5%90%8D%E8%AF%86%E5%88%AB"&gt;日本人名识别&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#12-%E5%9C%B0%E5%90%8D%E8%AF%86%E5%88%AB"&gt;地名识别&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#13-%E6%9C%BA%E6%9E%84%E5%90%8D%E8%AF%86%E5%88%AB"&gt;实体机构名识别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基于线性模型的命名实体识别（精度高）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;感知机命名实体识别&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP/wiki/CRF%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90"&gt;CRF命名实体识别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;关键词提取
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#14-%E5%85%B3%E9%94%AE%E8%AF%8D%E6%8F%90%E5%8F%96"&gt;TextRank关键词提取&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;自动摘要
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#15-%E8%87%AA%E5%8A%A8%E6%91%98%E8%A6%81"&gt;TextRank自动摘要&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;短语提取
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#16-%E7%9F%AD%E8%AF%AD%E6%8F%90%E5%8F%96"&gt;基于互信息和左右信息熵的短语提取&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#17-%E6%8B%BC%E9%9F%B3%E8%BD%AC%E6%8D%A2"&gt;拼音转换&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;多音字、声母、韵母、声调&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#18-%E7%AE%80%E7%B9%81%E8%BD%AC%E6%8D%A2"&gt;简繁转换&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;简繁分歧词（简体、繁体、臺灣正體、香港繁體）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#19-%E6%96%87%E6%9C%AC%E6%8E%A8%E8%8D%90"&gt;文本推荐&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;语义推荐、拼音推荐、字词推荐&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;依存句法分析
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#21-%E4%BE%9D%E5%AD%98%E5%8F%A5%E6%B3%95%E5%88%86%E6%9E%90"&gt;基于神经网络的高性能依存句法分析器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/blob/master/src/test/java/com/hankcs/demo/DemoDependencyParser.java#L34"&gt;基于ArcEager转移系统的柱搜索依存句法分析器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB%E4%B8%8E%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90"&gt;文本分类&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB%E4%B8%8E%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90#%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90"&gt;情感分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E6%96%87%E6%9C%AC%E8%81%9A%E7%B1%BB"&gt;文本聚类&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;KMeans、Repeated Bisection、自动推断聚类数目k&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/word2vec"&gt;word2vec&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;词向量训练、加载、词语相似度计算、语义运算、查询、KMeans聚类&lt;/li&gt;
&lt;li&gt;文档语义相似度计算&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/tree/master/src/main/java/com/hankcs/hanlp/corpus"&gt;语料库工具&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;部分默认模型训练自小型语料库，鼓励用户自行训练。所有模块提供&lt;a href="https://github.com/hankcs/HanLP/wiki"&gt;训练接口&lt;/a&gt;，语料可参考&lt;a href="http://file.hankcs.com/corpus/pku98.zip" rel="nofollow"&gt;98年人民日报语料库&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在提供丰富功能的同时，HanLP内部模块坚持低耦合、模型坚持惰性加载、服务坚持静态提供、词典坚持明文发布，使用非常方便。默认模型训练自全世界最大规模的中文语料库，同时自带一些语料处理工具，帮助用户训练自己的模型。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-项目主页" class="anchor" aria-hidden="true" href="#项目主页"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目主页&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://nlp.hankcs.com/book.php" rel="nofollow"&gt;《自然语言处理入门》&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt;&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP/tree/v1.7.5/src/test/java/com/hankcs/book"&gt;随书代码&lt;/a&gt;、&lt;a href="http://hanlp.com/" rel="nofollow"&gt;在线演示&lt;/a&gt;、&lt;a href="https://github.com/hankcs/pyhanlp"&gt;Python调用&lt;/a&gt;、&lt;a href="https://github.com/hankcs/hanlp-lucene-plugin"&gt;Solr及Lucene插件&lt;/a&gt;、&lt;a href="https://bbs.hankcs.com/" rel="nofollow"&gt;论坛&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP/wiki/papers"&gt;论文引用&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP/wiki"&gt;更多信息&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-下载与配置" class="anchor" aria-hidden="true" href="#下载与配置"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;下载与配置&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-方式一maven" class="anchor" aria-hidden="true" href="#方式一maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方式一、Maven&lt;/h3&gt;
&lt;p&gt;为了方便用户，特提供内置了数据包的Portable版，只需在pom.xml加入：&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.hankcs&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;hanlp&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;portable-1.7.5&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;零配置，即可使用基本功能（除由字构词、依存句法分析外的全部功能）。如果用户有自定义的需求，可以参考方式二，使用hanlp.properties进行配置（Portable版同样支持hanlp.properties）。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-方式二下载jardatahanlpproperties" class="anchor" aria-hidden="true" href="#方式二下载jardatahanlpproperties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方式二、下载jar、data、hanlp.properties&lt;/h3&gt;
&lt;p&gt;HanLP将数据与程序分离，给予用户自定义的自由。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-1下载datazip" class="anchor" aria-hidden="true" href="#1下载datazip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1、下载：&lt;a href="http://nlp.hankcs.com/download.php?file=data" rel="nofollow"&gt;data.zip&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;下载后解压到任意目录，接下来通过配置文件告诉HanLP数据包的位置。&lt;/p&gt;
&lt;p&gt;HanLP中的数据分为&lt;em&gt;词典&lt;/em&gt;和&lt;em&gt;模型&lt;/em&gt;，其中&lt;em&gt;词典&lt;/em&gt;是词法分析必需的，&lt;em&gt;模型&lt;/em&gt;是句法分析必需的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;data
│
├─dictionary
└─model
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;用户可以自行增删替换，如果不需要句法分析等功能的话，随时可以删除model文件夹。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模型跟词典没有绝对的区别，隐马模型被做成人人都可以编辑的词典形式，不代表它不是模型。&lt;/li&gt;
&lt;li&gt;GitHub代码库中已经包含了data.zip中的词典，直接编译运行自动缓存即可；模型则需要额外下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-2下载jar和配置文件hanlp-releasezip" class="anchor" aria-hidden="true" href="#2下载jar和配置文件hanlp-releasezip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2、下载jar和配置文件：&lt;a href="http://nlp.hankcs.com/download.php?file=jar" rel="nofollow"&gt;hanlp-release.zip&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;配置文件的作用是告诉HanLP数据包的位置，只需修改第一行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root=D:/JavaProjects/HanLP/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;为data的&lt;strong&gt;父目录&lt;/strong&gt;即可，比如data目录是&lt;code&gt;/Users/hankcs/Documents/data&lt;/code&gt;，那么&lt;code&gt;root=/Users/hankcs/Documents/&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;最后将&lt;code&gt;hanlp.properties&lt;/code&gt;放入classpath即可，对于多数项目，都可以放到src或resources目录下，编译时IDE会自动将其复制到classpath中。除了配置文件外，还可以使用环境变量&lt;code&gt;HANLP_ROOT&lt;/code&gt;来设置&lt;code&gt;root&lt;/code&gt;。安卓项目请参考&lt;a href="https://github.com/hankcs/HanLPAndroidDemo"&gt;demo&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果放置不当，HanLP会提示当前环境下的合适路径，并且尝试从项目根目录读取数据集。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-调用方法" class="anchor" aria-hidden="true" href="#调用方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;调用方法&lt;/h2&gt;
&lt;p&gt;HanLP几乎所有的功能都可以通过工具类&lt;code&gt;HanLP&lt;/code&gt;快捷调用，当你想不起来调用方法时，只需键入&lt;code&gt;HanLP.&lt;/code&gt;，IDE应当会给出提示，并展示HanLP完善的文档。&lt;/p&gt;
&lt;p&gt;所有Demo都位于&lt;a href="https://github.com/hankcs/HanLP/tree/master/src/test/java/com/hankcs/demo"&gt;com.hankcs.demo&lt;/a&gt;下，比文档覆盖了更多细节，更新更及时，&lt;strong&gt;强烈建议运行一遍&lt;/strong&gt;。此处仅列举部分常用接口。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-1-第一个demo" class="anchor" aria-hidden="true" href="#1-第一个demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 第一个Demo&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;你好，欢迎使用HanLP汉语处理包！&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;内存要求
&lt;ul&gt;
&lt;li&gt;内存120MB以上（-Xms120m -Xmx120m -Xmn64m），标准数据包（35万核心词库+默认用户词典），分词测试正常。全部词典和模型都是惰性加载的，不使用的模型相当于不存在，可以自由删除。&lt;/li&gt;
&lt;li&gt;HanLP对词典的数据结构进行了长期的优化，可以应对绝大多数场景。哪怕HanLP的词典上百兆也无需担心，因为在内存中被精心压缩过。如果内存非常有限，请使用小词典。HanLP默认使用大词典，同时提供小词典，请参考配置文件章节。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;写给正在编译HanLP的开发者
&lt;ul&gt;
&lt;li&gt;如果你正在编译运行从Github检出的HanLP代码，并且没有下载data缓存，那么首次加载词典/模型会发生一个&lt;em&gt;自动缓存&lt;/em&gt;的过程。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;自动缓存&lt;/em&gt;的目的是为了加速词典载入速度，在下次载入时，缓存的词典文件会带来毫秒级的加载速度。由于词典体积很大，&lt;em&gt;自动缓存&lt;/em&gt;会耗费一些时间，请耐心等待。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;自动缓存&lt;/em&gt;缓存的不是明文词典，而是双数组Trie树、DAWG、AhoCorasickDoubleArrayTrie等数据结构。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-2-标准分词" class="anchor" aria-hidden="true" href="#2-标准分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 标准分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;StandardTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商品和服务&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;HanLP中有一系列“开箱即用”的静态分词器，以&lt;code&gt;Tokenizer&lt;/code&gt;结尾，在接下来的例子中会继续介绍。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HanLP.segment&lt;/code&gt;其实是对&lt;code&gt;StandardTokenizer.segment&lt;/code&gt;的包装。&lt;/li&gt;
&lt;li&gt;分词结果包含词性，每个词性的意思请查阅&lt;a href="http://www.hankcs.com/nlp/part-of-speech-tagging.html#h2-8" rel="nofollow"&gt;《HanLP词性标注集》&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/segment/the-word-graph-is-generated.html" rel="nofollow"&gt;《词图的生成》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-3-nlp分词" class="anchor" aria-hidden="true" href="#3-nlp分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. NLP分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;NLPTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我新造一个词叫幻想乡你能识别并标注正确词性吗？&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 注意观察下面两个“希望”的词性、两个“晚霞”的词性&lt;/span&gt;
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;NLPTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;analyze(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我的希望是希望张晚霞的背影被晚霞映红&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;translateLabels());
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;NLPTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;analyze(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;支援臺灣正體香港繁體：微软公司於1975年由比爾·蓋茲和保羅·艾倫創立。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;NLP分词&lt;code&gt;NLPTokenizer&lt;/code&gt;会执行词性标注和命名实体识别，由&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;结构化感知机序列标注框架&lt;/a&gt;支撑。&lt;/li&gt;
&lt;li&gt;默认模型训练自&lt;code&gt;9970&lt;/code&gt;万字的大型综合语料库，是已知范围内&lt;strong&gt;全世界最大&lt;/strong&gt;的中文分词语料库。语料库规模决定实际效果，面向生产环境的语料库应当在千万字量级。欢迎用户在自己的语料上&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;训练新模型&lt;/a&gt;以适应新领域、识别新的命名实体。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-4-索引分词" class="anchor" aria-hidden="true" href="#4-索引分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. 索引分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;IndexTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;主副食品&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Term&lt;/span&gt; term &lt;span class="pl-k"&gt;:&lt;/span&gt; termList)
{
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(term &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; [&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; term&lt;span class="pl-k"&gt;.&lt;/span&gt;offset &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; (term&lt;span class="pl-k"&gt;.&lt;/span&gt;offset &lt;span class="pl-k"&gt;+&lt;/span&gt; term&lt;span class="pl-k"&gt;.&lt;/span&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;length()) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;索引分词&lt;code&gt;IndexTokenizer&lt;/code&gt;是面向搜索引擎的分词器，能够对长词全切分，另外通过&lt;code&gt;term.offset&lt;/code&gt;可以获取单词在文本中的偏移量。&lt;/li&gt;
&lt;li&gt;任何分词器都可以通过基类&lt;code&gt;Segment&lt;/code&gt;的&lt;code&gt;enableIndexMode&lt;/code&gt;方法激活索引模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-5-n-最短路径分词" class="anchor" aria-hidden="true" href="#5-n-最短路径分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. N-最短路径分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; nShortSegment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;NShortSegment&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableCustomDictionary(&lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;enablePlaceRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;enableOrganizationRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; shortestSegment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;DijkstraSegment&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableCustomDictionary(&lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;enablePlaceRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;enableOrganizationRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;今天，刘志军案的关键人物,山西女商人丁书苗在市二中院出庭受审。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;刘喜杰石国祥会见吴亚琴先进事迹报告团成员&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        };
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;N-最短分词：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; nShortSegment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;最短路分词：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; shortestSegment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence));
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;N最短路分词器&lt;code&gt;NShortSegment&lt;/code&gt;比最短路分词器慢，但是效果稍微好一些，对命名实体识别能力更强。&lt;/li&gt;
&lt;li&gt;一般场景下最短路分词的精度已经足够，而且速度比N最短路分词器快几倍，请酌情选择。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/segment/n-shortest-path-to-the-java-implementation-and-application-segmentation.html" rel="nofollow"&gt;《N最短路径的Java实现与分词应用》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-6-crf分词" class="anchor" aria-hidden="true" href="#6-crf分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6. CRF分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;        &lt;span class="pl-smi"&gt;CRFLexicalAnalyzer&lt;/span&gt; analyzer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;CRFLexicalAnalyzer&lt;/span&gt;();
        &lt;span class="pl-k"&gt;String&lt;/span&gt;[] tests &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商品和服务&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;上海华安工业（集团）公司董事长谭旭光和秘书胡花蕊来到美国纽约现代艺术博物馆参观&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;微软公司於1975年由比爾·蓋茲和保羅·艾倫創立，18年啟動以智慧雲端、前端為導向的大改組。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 支持繁体中文&lt;/span&gt;
        };
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; tests)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(analyzer&lt;span class="pl-k"&gt;.&lt;/span&gt;analyze(sentence));
        }&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;CRF对新词有很好的识别能力，但是开销较大。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/CRF%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90"&gt;《CRF中文分词、词性标注与命名实体识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-7-极速词典分词" class="anchor" aria-hidden="true" href="#7-极速词典分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7. 极速词典分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 演示极速分词，基于AhoCorasickDoubleArrayTrie实现的词典分词，适用于“高吞吐量”“精度一般”的场合&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoHighSpeedSegment&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;String&lt;/span&gt; text &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;江西鄱阳湖干枯，中国最大淡水湖变成大草原&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;SpeedTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(text));
        &lt;span class="pl-k"&gt;long&lt;/span&gt; start &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;currentTimeMillis();
        &lt;span class="pl-k"&gt;int&lt;/span&gt; pressure &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000000&lt;/span&gt;;
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; pressure; &lt;span class="pl-k"&gt;++&lt;/span&gt;i)
        {
            &lt;span class="pl-smi"&gt;SpeedTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(text);
        }
        &lt;span class="pl-k"&gt;double&lt;/span&gt; costTime &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;currentTimeMillis() &lt;span class="pl-k"&gt;-&lt;/span&gt; start) &lt;span class="pl-k"&gt;/&lt;/span&gt; (&lt;span class="pl-k"&gt;double&lt;/span&gt;)&lt;span class="pl-c1"&gt;1000&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;分词速度：%.2f字每秒&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, text&lt;span class="pl-k"&gt;.&lt;/span&gt;length() &lt;span class="pl-k"&gt;*&lt;/span&gt; pressure &lt;span class="pl-k"&gt;/&lt;/span&gt; costTime);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;极速分词是词典最长分词，速度极其快，精度一般。&lt;/li&gt;
&lt;li&gt;在i7-6700K上跑出了4500万字每秒的速度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html" rel="nofollow"&gt;《Aho Corasick自动机结合DoubleArrayTrie极速多模式匹配》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-8-用户自定义词典" class="anchor" aria-hidden="true" href="#8-用户自定义词典"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8. 用户自定义词典&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 演示用户词典的动态增删&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoCustomDictionary&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 动态增加&lt;/span&gt;
        &lt;span class="pl-smi"&gt;CustomDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;攻城狮&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 强行插入&lt;/span&gt;
        &lt;span class="pl-smi"&gt;CustomDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;insert(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;白富美&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nz 1024&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 删除词语（注释掉试试）&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;        CustomDictionary.remove("攻城狮");&lt;/span&gt;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;CustomDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;单身狗&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nz 1024 n 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;CustomDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;单身狗&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));

        &lt;span class="pl-smi"&gt;String&lt;/span&gt; text &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;攻城狮逆袭单身狗，迎娶白富美，走上人生巅峰&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 怎么可能噗哈哈！&lt;/span&gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; AhoCorasickDoubleArrayTrie自动机扫描文本中出现的自定义词语&lt;/span&gt;
        &lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;[] charArray &lt;span class="pl-k"&gt;=&lt;/span&gt; text&lt;span class="pl-k"&gt;.&lt;/span&gt;toCharArray();
        &lt;span class="pl-smi"&gt;CustomDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;parseText(charArray, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;AhoCorasickDoubleArrayTrie&lt;/span&gt;.&lt;span class="pl-k"&gt;IHit&amp;lt;&lt;span class="pl-smi"&gt;CoreDictionary&lt;/span&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Attribute&lt;/span&gt;&amp;gt;()
        {
            &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
            &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; hit(&lt;span class="pl-k"&gt;int&lt;/span&gt; begin, &lt;span class="pl-k"&gt;int&lt;/span&gt; end, &lt;span class="pl-smi"&gt;CoreDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Attribute&lt;/span&gt; value)
            {
                &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[%d:%d]=%s %s&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, begin, end, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;(charArray, begin, end &lt;span class="pl-k"&gt;-&lt;/span&gt; begin), value);
            }
        });

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 自定义词典在所有分词器中都有效&lt;/span&gt;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(text));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CustomDictionary&lt;/code&gt;是一份全局的用户自定义词典，可以随时增删，影响全部分词器。另外可以在任何分词器中关闭它。通过代码动态增删不会保存到词典文件。&lt;/li&gt;
&lt;li&gt;中文分词≠词典，词典无法解决中文分词，&lt;code&gt;Segment&lt;/code&gt;提供高低优先级应对不同场景，请参考&lt;a href="https://github.com/hankcs/HanLP/wiki/FAQ#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BF%AE%E6%94%B9%E4%BA%86%E8%AF%8D%E5%85%B8%E8%BF%98%E6%98%AF%E6%B2%A1%E6%9C%89%E6%95%88%E6%9E%9C"&gt;FAQ&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;追加词典
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CustomDictionary&lt;/code&gt;主词典文本路径是&lt;code&gt;data/dictionary/custom/CustomDictionary.txt&lt;/code&gt;，用户可以在此增加自己的词语（不推荐）；也可以单独新建一个文本文件，通过配置文件&lt;code&gt;CustomDictionaryPath=data/dictionary/custom/CustomDictionary.txt; 我的词典.txt;&lt;/code&gt;来追加词典（推荐）。&lt;/li&gt;
&lt;li&gt;始终建议将相同词性的词语放到同一个词典文件里，便于维护和分享。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;词典格式
&lt;ul&gt;
&lt;li&gt;每一行代表一个单词，格式遵从&lt;code&gt;[单词] [词性A] [A的频次] [词性B] [B的频次] ...&lt;/code&gt; 如果不填词性则表示采用词典的默认词性。&lt;/li&gt;
&lt;li&gt;词典的默认词性默认是名词n，可以通过配置文件修改：&lt;code&gt;全国地名大全.txt ns;&lt;/code&gt;如果词典路径后面空格紧接着词性，则该词典默认是该词性。&lt;/li&gt;
&lt;li&gt;在统计分词中，并不保证自定义词典中的词一定被切分出来。用户可在理解后果的情况下通过&lt;code&gt;Segment#enableCustomDictionaryForcing&lt;/code&gt;强制生效。&lt;/li&gt;
&lt;li&gt;关于用户词典的更多信息请参考&lt;strong&gt;词典说明&lt;/strong&gt;一章。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/program/java/tire-tree-participle.html" rel="nofollow"&gt;《Trie树分词》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html" rel="nofollow"&gt;《Aho Corasick自动机结合DoubleArrayTrie极速多模式匹配》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-9-中国人名识别" class="anchor" aria-hidden="true" href="#9-中国人名识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9. 中国人名识别&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;签约仪式前，秦光荣、李纪恒、仇和等一同会见了参加签约的企业家。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;王国强、高峰、汪洋、张朝阳光着头、韩寒、小四&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;张浩和胡健康复员回家了&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;王总和小丽结婚了&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;编剧邵钧林和稽道青说&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;这里有关天培的有关事迹&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;龚学平等领导,邓颖超生前&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        };
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; segment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;newSegment()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableNameRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; segment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;目前分词器基本上都默认开启了中国人名识别，比如&lt;code&gt;HanLP.segment()&lt;/code&gt;接口中使用的分词器等等，用户不必手动开启；上面的代码只是为了强调。&lt;/li&gt;
&lt;li&gt;有一定的误命中率，比如误命中&lt;code&gt;关键年&lt;/code&gt;，则可以通过在&lt;code&gt;data/dictionary/person/nr.txt&lt;/code&gt;加入一条&lt;code&gt;关键年 A 1&lt;/code&gt;来排除&lt;code&gt;关键年&lt;/code&gt;作为人名的可能性，也可以将&lt;code&gt;关键年&lt;/code&gt;作为新词登记到自定义词典中。&lt;/li&gt;
&lt;li&gt;如果你通过上述办法解决了问题，欢迎向我提交pull request，词典也是宝贵的财富。&lt;/li&gt;
&lt;li&gt;建议NLP用户使用感知机或CRF词法分析器，精度更高。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/chinese-name-recognition-in-actual-hmm-viterbi-role-labeling.html" rel="nofollow"&gt;《实战HMM-Viterbi角色标注中国人名识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-10-音译人名识别" class="anchor" aria-hidden="true" href="#10-音译人名识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10. 音译人名识别&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一桶冰水当头倒下，微软的比尔盖茨、Facebook的扎克伯格跟桑德博格、亚马逊的贝索斯、苹果的库克全都不惜湿身入镜，这些硅谷的科技人，飞蛾扑火似地牺牲演出，其实全为了慈善。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;世界上最长的姓名是简森·乔伊·亚历山大·比基·卡利斯勒·达夫·埃利奥特·福克斯·伊维鲁莫·马尔尼·梅尔斯·帕特森·汤普森·华莱士·普雷斯顿。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        };
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; segment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;newSegment()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableTranslatedNameRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; segment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;目前分词器基本上都默认开启了音译人名识别，用户不必手动开启；上面的代码只是为了强调。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/name-transliteration-cascaded-hidden-markov-model-and-japanese-personal-names-recognition.html" rel="nofollow"&gt;《层叠隐马模型下的音译人名和日本人名识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-11-日本人名识别" class="anchor" aria-hidden="true" href="#11-日本人名识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11. 日本人名识别&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;北川景子参演了林诣彬导演的《速度与激情3》&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;林志玲亮相网友:确定不是波多野结衣？&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
};
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; segment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;newSegment()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableJapaneseNameRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; segment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;目前标准分词器默认关闭了日本人名识别，用户需要手动开启；这是因为日本人名的出现频率较低，但是又消耗性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/name-transliteration-cascaded-hidden-markov-model-and-japanese-personal-names-recognition.html" rel="nofollow"&gt;《层叠隐马模型下的音译人名和日本人名识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-12-地名识别" class="anchor" aria-hidden="true" href="#12-地名识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12. 地名识别&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;武胜县新学乡政府大楼门前锣鼓喧天&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;蓝翔给宁夏固原市彭阳县红河镇黑牛沟村捐赠了挖掘机&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
};
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; segment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;newSegment()&lt;span class="pl-k"&gt;.&lt;/span&gt;enablePlaceRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; segment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;目前标准分词器都默认关闭了地名识别，用户需要手动开启；这是因为消耗性能，其实多数地名都收录在核心词典和用户自定义词典中。&lt;/li&gt;
&lt;li&gt;在生产环境中，能靠词典解决的问题就靠词典解决，这是最高效稳定的方法。&lt;/li&gt;
&lt;li&gt;建议对命名实体识别要求较高的用户使用&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;感知机词法分析器&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/ner/place-names-to-identify-actual-hmm-viterbi-role-labeling.html" rel="nofollow"&gt;《实战HMM-Viterbi角色标注地名识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-13-机构名识别" class="anchor" aria-hidden="true" href="#13-机构名识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13. 机构名识别&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我在上海林原科技有限公司兼职工作，&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我经常在台川喜宴餐厅吃饭，&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;偶尔去地中海影城看电影。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
};
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; segment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;newSegment()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableOrganizationRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; segment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;目前分词器默认关闭了机构名识别，用户需要手动开启；这是因为消耗性能，其实常用机构名都收录在核心词典和用户自定义词典中。&lt;/li&gt;
&lt;li&gt;HanLP的目的不是演示动态识别，在生产环境中，能靠词典解决的问题就靠词典解决，这是最高效稳定的方法。&lt;/li&gt;
&lt;li&gt;建议对命名实体识别要求较高的用户使用&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;感知机词法分析器&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/ner/place-name-recognition-model-of-the-stacked-hmm-viterbi-role-labeling.html" rel="nofollow"&gt;《层叠HMM-Viterbi角色标注模型下的机构名识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-14-关键词提取" class="anchor" aria-hidden="true" href="#14-关键词提取"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14. 关键词提取&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;String&lt;/span&gt; content &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;程序员(英文Programmer)是从事程序开发、维护的专业人员。一般将程序员分为程序设计人员和程序编码人员，但两者的界限并不非常清楚，特别是在中国。软件从业人员分为初级程序员、高级程序员、系统分析员和项目经理四大类。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt; keywordList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;extractKeyword(content, &lt;span class="pl-c1"&gt;5&lt;/span&gt;);
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(keywordList);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;内部采用&lt;code&gt;TextRankKeyword&lt;/code&gt;实现，用户可以直接调用&lt;code&gt;TextRankKeyword.getKeywordList(document, size)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/textrank-algorithm-to-extract-the-keywords-java-implementation.html" rel="nofollow"&gt;《TextRank算法提取关键词的Java实现》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-15-自动摘要" class="anchor" aria-hidden="true" href="#15-自动摘要"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;15. 自动摘要&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;String&lt;/span&gt; document &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法可大致分为基本算法、数据结构的算法、数论算法、计算几何的算法、图的算法、动态规划以及数值分析、加密算法、排序算法、检索算法、随机化算法、并行算法、厄米变形模型、随机森林算法。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法可以宽泛的分为三类，&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一，有限的确定性算法，这类算法在有限的一段时间内终止。他们可能要花很长时间来执行指定的任务，但仍将在一定的时间内终止。这类算法得出的结果常取决于输入值。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;二，有限的非确定算法，这类算法在有限的时间内终止。然而，对于一个（或一些）给定的数值，算法的结果并不是唯一的或确定的。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;三，无限的算法，是那些由于没有定义终止定义条件，或定义的条件无法由输入的数据满足而不终止运行的算法。通常，无限算法的产生是由于未能确定的定义终止条件。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt; sentenceList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;extractSummary(document, &lt;span class="pl-c1"&gt;3&lt;/span&gt;);
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(sentenceList);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;内部采用&lt;code&gt;TextRankSentence&lt;/code&gt;实现，用户可以直接调用&lt;code&gt;TextRankSentence.getTopSentenceList(document, size)&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/textrank-algorithm-java-implementation-of-automatic-abstract.html" rel="nofollow"&gt;《TextRank算法自动摘要的Java实现》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-16-短语提取" class="anchor" aria-hidden="true" href="#16-短语提取"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;16. 短语提取&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;String&lt;/span&gt; text &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法工程师&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法（Algorithm）是一系列解决问题的清晰指令，也就是说，能够对一定规范的输入，在有限时间内获得所要求的输出。如果一个算法有缺陷，或不适合于某个问题，执行这个算法将不会解决这个问题。不同的算法可能用不同的时间、空间或效率来完成同样的任务。一个算法的优劣可以用空间复杂度与时间复杂度来衡量。算法工程师就是利用算法处理事物的人。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1职位简介&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法工程师是一个非常高端的职位；&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;专业要求：计算机、电子、通信、数学等相关专业；&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;学历要求：本科及其以上的学历，大多数是硕士学历及其以上；&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;语言要求：英语要求是熟练，基本上能阅读国外专业书刊；&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;必须掌握计算机相关知识，熟练使用仿真工具MATLAB等，必须会一门编程语言。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2研究方向&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;视频算法工程师、图像处理算法工程师、音频算法工程师 通信基带算法工程师&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3目前国内外状况&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;目前国内从事算法研究的工程师不少，但是高级算法工程师却很少，是一个非常紧缺的专业工程师。算法工程师根据研究领域来分主要有音频/视频算法处理、图像技术方面的二维信息算法处理和通信物理层、雷达信号处理、生物医学信号处理等领域的一维信息算法处理。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;在计算机音视频和图形图像技术等二维信息算法处理方面目前比较先进的视频处理算法：机器视觉成为此类算法研究的核心；另外还有2D转3D算法(2D-to-3D conversion)，去隔行算法(de-interlacing)，运动估计运动补偿算法(Motion estimation/Motion Compensation)，去噪算法(Noise Reduction)，缩放算法(scaling)，锐化处理算法(Sharpness)，超分辨率算法(Super Resolution),手势识别(gesture recognition),人脸识别(face recognition)。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;在通信物理层等一维信息领域目前常用的算法：无线领域的RRM、RTT，传送领域的调制解调、信道均衡、信号检测、网络优化、信号分解等。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;另外数据挖掘、互联网搜索算法也成为当今的热门方向。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法工程师逐渐往人工智能方向发展。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt; phraseList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;extractPhrase(text, &lt;span class="pl-c1"&gt;10&lt;/span&gt;);
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(phraseList);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;内部采用&lt;code&gt;MutualInformationEntropyPhraseExtractor&lt;/code&gt;实现，用户可以直接调用&lt;code&gt;MutualInformationEntropyPhraseExtractor.extractPhrase(text, size)&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/extraction-and-identification-of-mutual-information-about-the-phrase-based-on-information-entropy.html" rel="nofollow"&gt;《基于互信息和左右信息熵的短语提取识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-17-拼音转换" class="anchor" aria-hidden="true" href="#17-拼音转换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;17. 拼音转换&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 汉字转拼音&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoPinyin&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;String&lt;/span&gt; text &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;重载不是重任&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt;&amp;gt;&lt;/span&gt; pinyinList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;convertToPinyinList(text);
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;原文,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;char&lt;/span&gt; c &lt;span class="pl-k"&gt;:&lt;/span&gt; text&lt;span class="pl-k"&gt;.&lt;/span&gt;toCharArray())
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%c,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, c);
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;拼音（数字音调）,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin);
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;拼音（符号音调）,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getPinyinWithToneMark());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;拼音（无音调）,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getPinyinWithoutTone());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;声调,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getTone());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;声母,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getShengmu());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;韵母,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getYunmu());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;输入法头,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getHead());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;HanLP不仅支持基础的汉字转拼音，还支持声母、韵母、音调、音标和输入法首字母首声母功能。&lt;/li&gt;
&lt;li&gt;HanLP能够识别多音字，也能给繁体中文注拼音。&lt;/li&gt;
&lt;li&gt;最重要的是，HanLP采用的模式匹配升级到&lt;code&gt;AhoCorasickDoubleArrayTrie&lt;/code&gt;，性能大幅提升，能够提供毫秒级的响应速度！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/java-chinese-characters-to-pinyin-and-simplified-conversion-realization.html#h2-17" rel="nofollow"&gt;《汉字转拼音与简繁转换的Java实现》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-18-简繁转换" class="anchor" aria-hidden="true" href="#18-简繁转换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;18. 简繁转换&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 简繁转换&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoTraditionalChinese2SimplifiedChinese&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;convertToTraditionalChinese(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;用笔记本电脑写程序&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;convertToSimplifiedChinese(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;「以後等妳當上皇后，就能買士多啤梨慶祝了」&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;HanLP能够识别简繁分歧词，比如&lt;code&gt;打印机=印表機&lt;/code&gt;。许多简繁转换工具不能区分“以后”“皇后”中的两个“后”字，HanLP可以。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/java-chinese-characters-to-pinyin-and-simplified-conversion-realization.html#h2-17" rel="nofollow"&gt;《汉字转拼音与简繁转换的Java实现》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-19-文本推荐" class="anchor" aria-hidden="true" href="#19-文本推荐"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;19. 文本推荐&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 文本推荐(句子级别，从一系列句子中挑出与输入句子最相似的那一个)&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoSuggester&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Suggester&lt;/span&gt; suggester &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Suggester&lt;/span&gt;();
        &lt;span class="pl-k"&gt;String&lt;/span&gt;[] titleArray &lt;span class="pl-k"&gt;=&lt;/span&gt;
        (
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;威廉王子发表演说 呼吁保护野生动物&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;《时代》年度人物最终入围名单出炉 普京马云入选&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;“黑格比”横扫菲：菲吸取“海燕”经验及早疏散&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;日本保密法将正式生效 日媒指其损害国民知情权&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;英报告说空气污染带来“公共健康危机”&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        )&lt;span class="pl-k"&gt;.&lt;/span&gt;split(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; title &lt;span class="pl-k"&gt;:&lt;/span&gt; titleArray)
        {
            suggester&lt;span class="pl-k"&gt;.&lt;/span&gt;addSentence(title);
        }

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(suggester&lt;span class="pl-k"&gt;.&lt;/span&gt;suggest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;发言&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;));       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 语义&lt;/span&gt;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(suggester&lt;span class="pl-k"&gt;.&lt;/span&gt;suggest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;危机公共&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;));   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 字符&lt;/span&gt;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(suggester&lt;span class="pl-k"&gt;.&lt;/span&gt;suggest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mayun&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;));      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 拼音&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;在搜索引擎的输入框中，用户输入一个词，搜索引擎会联想出最合适的搜索词，HanLP实现了类似的功能。&lt;/li&gt;
&lt;li&gt;可以动态调节每种识别器的权重&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-20-语义距离" class="anchor" aria-hidden="true" href="#20-语义距离"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;20. 语义距离&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 演示词向量的训练与应用&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoWord2Vec&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-smi"&gt;IOException&lt;/span&gt;
    {
        &lt;span class="pl-smi"&gt;WordVectorModel&lt;/span&gt; wordVectorModel &lt;span class="pl-k"&gt;=&lt;/span&gt; trainOrLoadModel();
        printNearest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;中国&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, wordVectorModel);
        printNearest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;美丽&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, wordVectorModel);
        printNearest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;购买&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, wordVectorModel);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 文档向量&lt;/span&gt;
        &lt;span class="pl-smi"&gt;DocVectorModel&lt;/span&gt; docVectorModel &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;DocVectorModel&lt;/span&gt;(wordVectorModel);
        &lt;span class="pl-k"&gt;String&lt;/span&gt;[] documents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;山东苹果丰收&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;农民在江苏种水稻&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;奥运会女排夺冠&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;世界锦标赛胜出&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;中国足球失败&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        };

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(docVectorModel&lt;span class="pl-k"&gt;.&lt;/span&gt;similarity(documents[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], documents[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]));
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(docVectorModel&lt;span class="pl-k"&gt;.&lt;/span&gt;similarity(documents[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], documents[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]));

        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; documents&lt;span class="pl-k"&gt;.&lt;/span&gt;length; i&lt;span class="pl-k"&gt;++&lt;/span&gt;)
        {
            docVectorModel&lt;span class="pl-k"&gt;.&lt;/span&gt;addDocument(i, documents[i]);
        }

        printNearestDocument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;体育&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, documents, docVectorModel);
        printNearestDocument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;农业&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, documents, docVectorModel);
        printNearestDocument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我要看比赛&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, documents, docVectorModel);
        printNearestDocument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;要不做饭吧&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, documents, docVectorModel);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/word2vec"&gt;word2vec文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/word2vec.html" rel="nofollow"&gt;《word2vec原理推导与代码分析》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-21-依存句法分析" class="anchor" aria-hidden="true" href="#21-依存句法分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;21. 依存句法分析&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 依存句法分析（MaxEnt和神经网络句法模型需要-Xms1g -Xmx1g -Xmn512m）&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoDependencyParser&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;CoNLLSentence&lt;/span&gt; sentence &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;parseDependency(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;徐先生还具体帮助他确定了把画雄鹰、松鼠和麻雀作为主攻目标。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(sentence);
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 可以方便地遍历它&lt;/span&gt;
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;CoNLLWord&lt;/span&gt; word &lt;span class="pl-k"&gt;:&lt;/span&gt; sentence)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s --(%s)--&amp;gt; %s&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;DEPREL&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;HEAD&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;);
        }
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 也可以直接拿到数组，任意顺序或逆序遍历&lt;/span&gt;
        &lt;span class="pl-k"&gt;CoNLLWord&lt;/span&gt;[] wordArray &lt;span class="pl-k"&gt;=&lt;/span&gt; sentence&lt;span class="pl-k"&gt;.&lt;/span&gt;getWordArray();
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; wordArray&lt;span class="pl-k"&gt;.&lt;/span&gt;length &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i&lt;span class="pl-k"&gt;--&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;CoNLLWord&lt;/span&gt; word &lt;span class="pl-k"&gt;=&lt;/span&gt; wordArray[i];
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s --(%s)--&amp;gt; %s&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;DEPREL&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;HEAD&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;);
        }
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 还可以直接遍历子树，从某棵子树的某个节点一路遍历到虚根&lt;/span&gt;
        &lt;span class="pl-smi"&gt;CoNLLWord&lt;/span&gt; head &lt;span class="pl-k"&gt;=&lt;/span&gt; wordArray[&lt;span class="pl-c1"&gt;12&lt;/span&gt;];
        &lt;span class="pl-k"&gt;while&lt;/span&gt; ((head &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;head&lt;span class="pl-k"&gt;.&lt;/span&gt;HEAD&lt;/span&gt;) &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (head &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;CoNLLWord&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;ROOT&lt;/span&gt;) &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;head&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;);
            &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s --(%s)--&amp;gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;head&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;, &lt;span class="pl-smi"&gt;head&lt;span class="pl-k"&gt;.&lt;/span&gt;DEPREL&lt;/span&gt;);
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;内部采用&lt;code&gt;NeuralNetworkDependencyParser&lt;/code&gt;实现，用户可以直接调用&lt;code&gt;NeuralNetworkDependencyParser.compute(sentence)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;也可以调用基于ArcEager转移系统的柱搜索依存句法分析器&lt;code&gt;KBeamArcEagerDependencyParser&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/parsing/neural-network-based-dependency-parser.html" rel="nofollow"&gt;《基于神经网络分类模型与转移系统的判决式依存句法分析器》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-词典说明" class="anchor" aria-hidden="true" href="#词典说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;词典说明&lt;/h2&gt;
&lt;p&gt;本章详细介绍HanLP中的词典格式，满足用户自定义的需要。HanLP中有许多词典，它们的格式都是相似的，形式都是文本文档，随时可以修改。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-基本格式" class="anchor" aria-hidden="true" href="#基本格式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基本格式&lt;/h3&gt;
&lt;p&gt;词典分为词频词性词典和词频词典。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;词频词性词典（如&lt;code&gt;CoreNatureDictionary.txt&lt;/code&gt;）
&lt;ul&gt;
&lt;li&gt;每一行代表一个单词，格式遵从&lt;code&gt;[单词] [词性A] [A的频次] [词性B] [B的频次] ...&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;支持省略词性和频次，直接一行一个单词。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.txt&lt;/code&gt;词典文件的分隔符为空格或制表符，所以不支持含有空格的词语。如果需要支持空格，请使用英文逗号&lt;code&gt;,&lt;/code&gt;分割的&lt;strong&gt;纯文本&lt;/strong&gt;&lt;code&gt;.csv&lt;/code&gt;文件。在使用Excel等富文本编辑器时，则请注意保存为&lt;strong&gt;纯文本&lt;/strong&gt;形式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;词频词典（如&lt;code&gt;CoreNatureDictionary.ngram.txt&lt;/code&gt;）
&lt;ul&gt;
&lt;li&gt;每一行代表一个单词或条目，格式遵从&lt;code&gt;[单词] [单词的频次]&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;每一行的分隔符为空格或制表符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;少数词典有自己的专用格式，比如同义词词典兼容《同义词词林扩展版》的文本格式，而转移矩阵词典则是一个csv表格。&lt;/p&gt;
&lt;p&gt;下文主要介绍通用词典，如不注明，词典特指通用词典。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-数据结构" class="anchor" aria-hidden="true" href="#数据结构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据结构&lt;/h3&gt;
&lt;p&gt;Trie树（字典树）是HanLP中使用最多的数据结构，为此，我实现了通用的Trie树，支持泛型、遍历、储存、载入。&lt;/p&gt;
&lt;p&gt;用户自定义词典采用AhoCorasickDoubleArrayTrie和二分Trie树储存，其他词典采用基于&lt;a href="http://www.hankcs.com/program/java/%E5%8F%8C%E6%95%B0%E7%BB%84trie%E6%A0%91doublearraytriejava%E5%AE%9E%E7%8E%B0.html" rel="nofollow"&gt;双数组Trie树(DoubleArrayTrie)&lt;/a&gt;实现的&lt;a href="http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html" rel="nofollow"&gt;AC自动机AhoCorasickDoubleArrayTrie&lt;/a&gt;。关于一些常用数据结构的性能评估，请参考&lt;a href="https://github.com/hankcs/HanLP/wiki/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84"&gt;wiki&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-储存形式" class="anchor" aria-hidden="true" href="#储存形式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;储存形式&lt;/h3&gt;
&lt;p&gt;词典有两个形态：文本文件(filename.txt)和缓存文件(filename.txt.bin或filename.txt.trie.dat和filename.txt.trie.value)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文本文件
&lt;ul&gt;
&lt;li&gt;采用明文储存，UTF-8编码，CRLF换行符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缓存文件
&lt;ul&gt;
&lt;li&gt;就是一些二进制文件，通常在文本文件的文件名后面加上.bin表示。有时候是.trie.dat和.trie.value。后者是历史遗留产物，分别代表trie树的数组和值。&lt;/li&gt;
&lt;li&gt;如果你修改了任何词典，只有删除缓存才能生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-修改方法" class="anchor" aria-hidden="true" href="#修改方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;修改方法&lt;/h3&gt;
&lt;p&gt;HanLP的核心词典训练自人民日报2014语料，语料不是完美的，总会存在一些错误。这些错误可能会导致分词出现奇怪的结果，这时请打开调试模式排查问题：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Config&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;enableDebug();&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;核心词性词频词典
&lt;ul&gt;
&lt;li&gt;比如你在&lt;code&gt;data/dictionary/CoreNatureDictionary.txt&lt;/code&gt;中发现了一个不是词的词，或者词性标注得明显不对，那么你可以修改它，然后删除缓存文件使其生效。&lt;/li&gt;
&lt;li&gt;目前&lt;code&gt;CoreNatureDictionary.ngram.txt&lt;/code&gt;的缓存依赖于&lt;code&gt;CoreNatureDictionary.txt&lt;/code&gt;的缓存，修改了后者之后必须同步删除前者的缓存，否则可能出错&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;核心二元文法词典
&lt;ul&gt;
&lt;li&gt;二元文法词典&lt;code&gt;data/dictionary/CoreNatureDictionary.ngram.txt&lt;/code&gt;储存的是两个词的接续，如果你发现不可能存在这种接续时，删掉即可。&lt;/li&gt;
&lt;li&gt;你也可以添加你认为合理的接续，但是这两个词必须同时在核心词典中才会生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;命名实体识别词典
&lt;ul&gt;
&lt;li&gt;基于角色标注的命名实体识别比较依赖词典，所以词典的质量大幅影响识别质量。&lt;/li&gt;
&lt;li&gt;这些词典的格式与原理都是类似的，请阅读&lt;a href="http://www.hankcs.com/category/nlp/ner/" rel="nofollow"&gt;相应的文章&lt;/a&gt;或代码修改它。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若还有疑问，请参考&lt;a href="http://nlp.hankcs.com/book.php" rel="nofollow"&gt;《自然语言处理入门》&lt;/a&gt;相应章节。如果问题解决了，欢迎向我提交一个pull request，这是我在代码库中保留明文词典的原因，众人拾柴火焰高！&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-自然语言处理入门" class="anchor" aria-hidden="true" href="#自然语言处理入门"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="http://nlp.hankcs.com/book.php" rel="nofollow"&gt;《自然语言处理入门》&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c2888cda58d5bbe02f06733a77c2f71ae4a6d222/687474703a2f2f66696c652e68616e6b63732e636f6d2f696d672f6e6c702d626f6f6b2d73717572652e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/c2888cda58d5bbe02f06733a77c2f71ae4a6d222/687474703a2f2f66696c652e68616e6b63732e636f6d2f696d672f6e6c702d626f6f6b2d73717572652e6a7067" alt="img" data-canonical-src="http://file.hankcs.com/img/nlp-book-squre.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一本配套HanLP的NLP入门书，基础理论与生产代码并重，Python与Java双实现。从基本概念出发，逐步介绍中文分词、词性标注、命名实体识别、信息抽取、文本聚类、文本分类、句法分析这几个热门问题的算法原理与工程实现。书中通过对多种算法的讲解，比较了它们的优缺点和适用场景，同时详细演示生产级成熟代码，助你真正将自然语言处理应用在生产环境中。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nlp.hankcs.com/book.php" rel="nofollow"&gt;《自然语言处理入门》&lt;/a&gt;由南方科技大学数学系创系主任夏志宏、微软亚洲研究院副院长周明、字节跳动人工智能实验室总监李航、华为诺亚方舟实验室语音语义首席科学家刘群、小米人工智能实验室主任兼NLP首席科学家王斌、中国科学院自动化研究所研究员宗成庆、清华大学副教授刘知远、北京理工大学副教授张华平和52nlp作序推荐。感谢各位前辈老师，希望这个项目和这本书能成为大家工程和学习上的“蝴蝶效应”，帮助大家在NLP之路上蜕变成蝶。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-版权" class="anchor" aria-hidden="true" href="#版权"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;版权&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-apache-license-version-20" class="anchor" aria-hidden="true" href="#apache-license-version-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apache License Version 2.0&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如不特殊注明，所有模块都以此协议授权使用。&lt;/li&gt;
&lt;li&gt;任何使用了HanLP的全部或部分功能、词典、模型的项目、产品或文章等形式的成果必须显式注明HanLP及此项目主页。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-青岛大快搜索计算技术股份有限公司" class="anchor" aria-hidden="true" href="#青岛大快搜索计算技术股份有限公司"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;青岛大快搜索计算技术股份有限公司&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HanLP从v1.3版本起正式由大快搜索主导开发，并拥有后续版本的版权，新版本继续完全开源，目前唯一官网为：&lt;a href="http://hanlp.com/" rel="nofollow"&gt;http://hanlp.com/&lt;/a&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-上海林原信息科技有限公司" class="anchor" aria-hidden="true" href="#上海林原信息科技有限公司"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;上海林原信息科技有限公司&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HanLP 早期得到了上海林原公司的大力支持，并拥有1.28及前序版本的版权，相关版本也曾在上海林源公司网站发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-其他版权方" class="anchor" aria-hidden="true" href="#其他版权方"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;其他版权方&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;实施上由个人维护，欢迎任何人与任何公司向本项目开源模块。&lt;/li&gt;
&lt;li&gt;充分尊重所有版权方的贡献，本项目不占有用户贡献模块的版权。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-鸣谢" class="anchor" aria-hidden="true" href="#鸣谢"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;鸣谢&lt;/h3&gt;
&lt;p&gt;感谢下列优秀开源项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hiroshi-manabe/darts-clone-java"&gt;darts-clone-java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/zhenyulu/archive/2007/04/18/718383.html" rel="nofollow"&gt;SharpICTCLAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isnowfy/snownlp"&gt;snownlp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NLPchina/ansj_seg"&gt;ansj_seg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NLPchina/nlp-lang"&gt;nlp-lang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢NLP界各位学者老师的著作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《基于角色标注的中国人名自动识别研究》张华平 刘群&lt;/li&gt;
&lt;li&gt;《基于层叠隐马尔可夫模型的中文命名实体识别》俞鸿魁 张华平 刘群 吕学强 施水才&lt;/li&gt;
&lt;li&gt;《基于角色标注的中文机构名识别》俞鸿魁 张华平 刘群&lt;/li&gt;
&lt;li&gt;《基于最大熵的依存句法分析》 辛霄 范士喜 王轩 王晓龙&lt;/li&gt;
&lt;li&gt;An Efficient Implementation of Trie Structures, JUN-ICHI AOE AND KATSUSHI MORIMOTO&lt;/li&gt;
&lt;li&gt;TextRank: Bringing Order into Texts, Rada Mihalcea and Paul Tarau&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢诸位用户的关注和使用，HanLP并不完善，未来还恳求各位NLP爱好者多多关照，提出宝贵意见。&lt;/p&gt;
&lt;p&gt;作者 &lt;a href="http://weibo.com/hankcs/" rel="nofollow"&gt;@hankcs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2016年9月16日&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hankcs</author><guid isPermaLink="false">https://github.com/hankcs/HanLP</guid><pubDate>Wed, 13 Nov 2019 00:15:00 GMT</pubDate></item><item><title>mrdoob/three.js #16 in All Languages, This month</title><link>https://github.com/mrdoob/three.js</link><description>&lt;p&gt;&lt;i&gt;JavaScript 3D library.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-threejs" class="anchor" aria-hidden="true" href="#threejs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;three.js&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/three" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0fca282ac930025311e3672ecb48aecda6be0c69/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f74687265652e737667" alt="NPM package" data-canonical-src="https://img.shields.io/npm/v/three.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=three" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91a1a0529030a2c91db5f311a668767213507664/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f7468726565" alt="Build Size" data-canonical-src="https://badgen.net/bundlephobia/minzip/three" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/mrdoob/three.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/19f1d00300465ccc055bf8178f75bfac522ab8fc/68747470733a2f2f7472617669732d63692e6f72672f6d72646f6f622f74687265652e6a732e7376673f6272616e63683d646576" alt="Build Status" data-canonical-src="https://travis-ci.org/mrdoob/three.js.svg?branch=dev" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/mrdoob/three.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8fe39a1cb0a6e83827694a9fe5a8d7c43529a4db/68747470733a2f2f696d672e736869656c64732e696f2f64617669642f6d72646f6f622f74687265652e6a732e737667" alt="Dependencies" data-canonical-src="https://img.shields.io/david/mrdoob/three.js.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/mrdoob/three.js#info=devDependencies" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c16c067e83ea0ed4c1684b0168185798a3438023/68747470733a2f2f696d672e736869656c64732e696f2f64617669642f6465762f6d72646f6f622f74687265652e6a732e737667" alt="Dev Dependencies" data-canonical-src="https://img.shields.io/david/dev/mrdoob/three.js.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/mrdoob/three.js/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0d5e1c6f6f4dcfe769b3c7fc40a7a2e79f63eb3/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6a6176617363726970742f672f6d72646f6f622f74687265652e6a732e7376673f6c6162656c3d636f64652532307175616c697479" alt="Language Grade" data-canonical-src="https://img.shields.io/lgtm/grade/javascript/g/mrdoob/three.js.svg?label=code%20quality" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-javascript-3d-library" class="anchor" aria-hidden="true" href="#javascript-3d-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JavaScript 3D library&lt;/h4&gt;
&lt;p&gt;The aim of the project is to create an easy to use, lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://threejs.org/examples/" rel="nofollow"&gt;Examples&lt;/a&gt; —
&lt;a href="http://threejs.org/docs/" rel="nofollow"&gt;Documentation&lt;/a&gt; —
&lt;a href="https://github.com/mrdoob/three.js/wiki"&gt;Wiki&lt;/a&gt; —
&lt;a href="https://github.com/mrdoob/three.js/wiki/Migration-Guide"&gt;Migrating&lt;/a&gt; —
&lt;a href="http://stackoverflow.com/questions/tagged/three.js" rel="nofollow"&gt;Questions&lt;/a&gt; —
&lt;a href="https://discourse.threejs.org/" rel="nofollow"&gt;Forum&lt;/a&gt; —
&lt;a href="https://gitter.im/mrdoob/three.js" rel="nofollow"&gt;Gitter&lt;/a&gt; —
&lt;a href="https://join.slack.com/t/threejs/shared_invite/enQtMzYxMzczODM2OTgxLTQ1YmY4YTQxOTFjNDAzYmQ4NjU2YzRhNzliY2RiNDEyYjU2MjhhODgyYWQ5Y2MyZTU3MWNkOGVmOGRhOTQzYTk" rel="nofollow"&gt;Slack&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;Download the &lt;a href="http://threejs.org/build/three.min.js" rel="nofollow"&gt;minified library&lt;/a&gt; and include it in your HTML, or install and import it as a &lt;a href="http://threejs.org/docs/#manual/introduction/Import-via-modules" rel="nofollow"&gt;module&lt;/a&gt;,
Alternatively, see &lt;a href="https://github.com/mrdoob/three.js/wiki/Build-instructions"&gt;how to build the library yourself&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-e"&gt;src&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;js/three.min.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; camera, scene, renderer;
&lt;span class="pl-k"&gt;var&lt;/span&gt; geometry, material, mesh;

&lt;span class="pl-en"&gt;init&lt;/span&gt;();
&lt;span class="pl-en"&gt;animate&lt;/span&gt;();

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;() {

	camera &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;THREE.PerspectiveCamera&lt;/span&gt;( &lt;span class="pl-c1"&gt;70&lt;/span&gt;, &lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;innerWidth&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;innerHeight&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.01&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt; );
	&lt;span class="pl-smi"&gt;camera&lt;/span&gt;.&lt;span class="pl-smi"&gt;position&lt;/span&gt;.&lt;span class="pl-c1"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;

	scene &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;THREE.Scene&lt;/span&gt;();

	geometry &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;THREE.BoxGeometry&lt;/span&gt;( &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.2&lt;/span&gt; );
	material &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;THREE.MeshNormalMaterial&lt;/span&gt;();

	mesh &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;THREE.Mesh&lt;/span&gt;( geometry, material );
	&lt;span class="pl-smi"&gt;scene&lt;/span&gt;.&lt;span class="pl-c1"&gt;add&lt;/span&gt;( mesh );

	renderer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;THREE.WebGLRenderer&lt;/span&gt;( { antialias&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; } );
	&lt;span class="pl-smi"&gt;renderer&lt;/span&gt;.&lt;span class="pl-en"&gt;setSize&lt;/span&gt;( &lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;innerWidth&lt;/span&gt;, &lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;innerHeight&lt;/span&gt; );
	&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;.&lt;span class="pl-c1"&gt;appendChild&lt;/span&gt;( &lt;span class="pl-smi"&gt;renderer&lt;/span&gt;.&lt;span class="pl-smi"&gt;domElement&lt;/span&gt; );

}

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;animate&lt;/span&gt;() {

	&lt;span class="pl-en"&gt;requestAnimationFrame&lt;/span&gt;( animate );

	&lt;span class="pl-smi"&gt;mesh&lt;/span&gt;.&lt;span class="pl-smi"&gt;rotation&lt;/span&gt;.&lt;span class="pl-c1"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.01&lt;/span&gt;;
	&lt;span class="pl-smi"&gt;mesh&lt;/span&gt;.&lt;span class="pl-smi"&gt;rotation&lt;/span&gt;.&lt;span class="pl-c1"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.02&lt;/span&gt;;

	&lt;span class="pl-smi"&gt;renderer&lt;/span&gt;.&lt;span class="pl-en"&gt;render&lt;/span&gt;( scene, camera );

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If everything went well you should see &lt;a href="https://jsfiddle.net/f2Lommf5/" rel="nofollow"&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-change-log" class="anchor" aria-hidden="true" href="#change-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change log&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mrdoob/three.js/releases"&gt;Releases&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mrdoob</author><guid isPermaLink="false">https://github.com/mrdoob/three.js</guid><pubDate>Wed, 13 Nov 2019 00:16:00 GMT</pubDate></item><item><title>2227324689/gpmall #17 in All Languages, This month</title><link>https://github.com/2227324689/gpmall</link><description>&lt;p&gt;&lt;i&gt;【咕泡学院实战项目】-基于SpringBoot+Dubbo构建的电商平台-微服务架构、商城、电商、微服务、高并发、kafka、Elasticsearch&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="README.assets/1566284996878.png"&gt;&lt;img src="README.assets/1566284996878.png" alt="1566284996878" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/2227324689/ToBeBetter/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/b28cf4816a133c75598a4d5ba5e182b9be15b439/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f6c2f706c75672e7376673f7374796c653d666c61742d737175617265" alt="license" data-canonical-src="https://img.shields.io/hexpm/l/plug.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/2227324689/gpmall/issues"&gt;&lt;img src="https://camo.githubusercontent.com/c3fa0b33ec638b94c3ff70de8468358b98a0a579/68747470733a2f2f696d672e736869656c64732e696f2f6269746275636b65742f6973737565732d7261772f323232373332343638392f546f42654265747465722e7376673f7374796c653d666c61742d737175617265" alt="issues" data-canonical-src="https://img.shields.io/bitbucket/issues-raw/2227324689/ToBeBetter.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.gupaoedu.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/25c13d81ce4704ffe32c4f3f6229ba487c59d0d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747261637425323075732d2545352541452539382545372542442539312d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="constract us" data-canonical-src="https://img.shields.io/badge/contract%20us-%E5%AE%98%E7%BD%91-brightgreen.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.gupaoedu.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5fa5f82b62f34bd2b3d49153dcabbbeaad3f608f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6f726967696e2d2545352539322539352545362542332541312545352541442541362545392539392541322d79656c6c6f77677265656e2e7376673f7374796c653d666c61742d737175617265" alt="origin" data-canonical-src="https://img.shields.io/badge/origin-%E5%92%95%E6%B3%A1%E5%AD%A6%E9%99%A2-yellowgreen.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://istio.tech" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b74f0c55895a3e31913261c2933ce1233f69fefb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f626c6f672d2545352538442539412545352541452541322d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="blog" data-canonical-src="https://img.shields.io/badge/blog-%E5%8D%9A%E5%AE%A2-orange.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="#"&gt;&lt;img src="https://camo.githubusercontent.com/6eaa95cc56a373ee1e042eeddcc6cbe7e5425527/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f617574686f722d4d69632d626c75652e7376673f7374796c653d666c61742d737175617265" alt="author" data-canonical-src="https://img.shields.io/badge/author-Mic-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="#"&gt;&lt;img src="https://camo.githubusercontent.com/ba1a5e25ab8f37c29f793c178661136669b299e6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c696e6b65642d67706d616c6c2d7265642e7376673f7374796c653d666c61742d737175617265" alt="Gpmall" data-canonical-src="https://img.shields.io/badge/linked-gpmall-red.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/24ca6a33f5d75b9ba27994d3f79b1c2c71af0741/687474703a2f2f686974732e6477796c2e696f2f67706d616c6c2f67706d616c6c2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/24ca6a33f5d75b9ba27994d3f79b1c2c71af0741/687474703a2f2f686974732e6477796c2e696f2f67706d616c6c2f67706d616c6c2e7376673f7374796c653d666c61742d737175617265" alt="hits" data-canonical-src="http://hits.dwyl.io/gpmall/gpmall.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gper.club" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b16e2bb7f37762226cfd9a9317f4f34d242b4a47/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d6d756e6974792d2545362538412538302545362539432541462545372541342542452545352538432542412d6c69676874677265792e7376673f7374796c653d666c61742d737175617265" alt="community" data-canonical-src="https://img.shields.io/badge/community-%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA-lightgrey.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-咕泡商城--微服务架构实战" class="anchor" aria-hidden="true" href="#咕泡商城--微服务架构实战"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;咕泡商城- 微服务架构实战&lt;/h1&gt;
&lt;p&gt;咕泡商城是&lt;a href="https://www.gupaoedu.com" rel="nofollow"&gt;咕泡学院&lt;/a&gt; Java架构课程中，帮助学员对于技术更好落地的一个实战项目，项目基于springboot2.1.6.RELEASE+Dubbo2.7.3 来构建微服务。&lt;/p&gt;
&lt;p&gt;业务模块划分，尽量贴合互联网公司的架构体系。所以，除了业务本身的复杂度不是很高之外，整体的架构基本和实际架构相差无几。&lt;/p&gt;
&lt;p&gt;但实际上，真实的生产级的项目由于用户量以及业务的复杂度，会变得非常复杂。 所以我们会让更多的人参与进来，从需求、设计、解决方案等方面出发来对项目进行迭代，从而培养出一定的&lt;/p&gt;
&lt;p&gt;实际解决方案的经验和能力。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-应用架构图" class="anchor" aria-hidden="true" href="#应用架构图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;应用架构图&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="README.assets/1565533924343.png"&gt;&lt;img src="README.assets/1565533924343.png" alt="1565533924343" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-项目演示地址" class="anchor" aria-hidden="true" href="#项目演示地址"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目演示地址&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;商场系统演示地址：&lt;a href="http://vip.istio.tech" rel="nofollow"&gt;http://vip.istio.tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;后台管理系统：开发中..&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-项目用到的技术" class="anchor" aria-hidden="true" href="#项目用到的技术"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目用到的技术&lt;/h1&gt;
&lt;p&gt;项目采用前后端分离开发，前端需要独立部署。目前核心的技术栈采用的是SpringBoot2.1.5.RELEASE+Dubbo2.7.2,&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-前端使用的技术" class="anchor" aria-hidden="true" href="#前端使用的技术"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;前端使用的技术&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;nodejs&lt;/li&gt;
&lt;li&gt;axios&lt;/li&gt;
&lt;li&gt;es6&lt;/li&gt;
&lt;li&gt;vue&lt;/li&gt;
&lt;li&gt;sass&lt;/li&gt;
&lt;li&gt;Element UI&lt;/li&gt;
&lt;li&gt;webpack&lt;/li&gt;
&lt;li&gt;vue router&lt;/li&gt;
&lt;li&gt;mockjs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-后端使用的技术" class="anchor" aria-hidden="true" href="#后端使用的技术"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;后端使用的技术&lt;/h2&gt;
&lt;p&gt;后端的主要架构是基于springboot+dubbo+mybatis.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SpringBoot2.1.6&lt;/li&gt;
&lt;li&gt;Mybatis&lt;/li&gt;
&lt;li&gt;Dubbo2.7.2&lt;/li&gt;
&lt;li&gt;Zookeeper&lt;/li&gt;
&lt;li&gt;Mysql&lt;/li&gt;
&lt;li&gt;Redis&lt;/li&gt;
&lt;li&gt;Elasticsearch&lt;/li&gt;
&lt;li&gt;Kafka&lt;/li&gt;
&lt;li&gt;druid&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;mybatis generator&lt;/li&gt;
&lt;li&gt;Sentinel&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-项目模块说明" class="anchor" aria-hidden="true" href="#项目模块说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目模块说明&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;db_script  本项目的数据库脚本&lt;/th&gt;
&lt;th&gt;使用mysql&lt;/th&gt;
&lt;th&gt;暂时未做分表处理，不过有考虑到分表的情况&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;gpmall-cashier 收银台，负责支付相关的交互逻辑&lt;/td&gt;
&lt;td&gt;web项目&lt;/td&gt;
&lt;td&gt;8083端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gpmall-commons 公共的组件&lt;/td&gt;
&lt;td&gt;jar&lt;/td&gt;
&lt;td&gt;公共组件，很多地方都有引用，改动的时候要注意&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gpmall-front  咕泡商城的前端项目&lt;/td&gt;
&lt;td&gt;前端项目&lt;/td&gt;
&lt;td&gt;使用vue、node、es等前端技术开发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gpmall-parent 父控文件，用来统一管理所有jar包&lt;/td&gt;
&lt;td&gt;父控文件&lt;/td&gt;
&lt;td&gt;用来统一管理所有项目的jar包的版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gpmall-shopping  商品/购物车/首页渲染等交互&lt;/td&gt;
&lt;td&gt;web项目&lt;/td&gt;
&lt;td&gt;8081端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gpmall-user  提供用户相关的交互，如登录、注册、个人中心等&lt;/td&gt;
&lt;td&gt;web项目&lt;/td&gt;
&lt;td&gt;8082端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;market-service 促销活动的Dubbo服务【暂时未联调完成，可以不启动】&lt;/td&gt;
&lt;td&gt;dubbo服务&lt;/td&gt;
&lt;td&gt;20884端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pay-service  提供支付处理能力&lt;/td&gt;
&lt;td&gt;dubbo服务&lt;/td&gt;
&lt;td&gt;20883端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shopping-service，提供购物车、推荐商品、商品等服务&lt;/td&gt;
&lt;td&gt;dubbo服务&lt;/td&gt;
&lt;td&gt;20881端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user-service ，提供用户相关服务&lt;/td&gt;
&lt;td&gt;dubbo服务&lt;/td&gt;
&lt;td&gt;20880端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;order-service ，提供订单服务&lt;/td&gt;
&lt;td&gt;dubbo服务&lt;/td&gt;
&lt;td&gt;20882端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PRD&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;存放prd需求文档，有想参与设计的同学，可以提供prd需求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wiki&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;帮助文档，需要每一位同学贡献自己的一份力量&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-项目开发进度" class="anchor" aria-hidden="true" href="#项目开发进度"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目开发进度&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-前台项目整体的规划有" class="anchor" aria-hidden="true" href="#前台项目整体的规划有"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;前台项目整体的规划有&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;首页渲染，轮播、自定义展示板块&lt;/li&gt;
&lt;li&gt;商品查询、商品展示、商品详情&lt;/li&gt;
&lt;li&gt;个人中心、用户注册、个人信息修改、收获地址维护&lt;/li&gt;
&lt;li&gt;购物车、订单查询、下单、支付&lt;/li&gt;
&lt;li&gt;促销活动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="README.assets/1565235690613.png"&gt;&lt;img src="README.assets/1565235690613.png" alt="1565235690613" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-后台规划" class="anchor" aria-hidden="true" href="#后台规划"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;后台规划&lt;/h2&gt;
&lt;h1&gt;&lt;a id="user-content-效果图" class="anchor" aria-hidden="true" href="#效果图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;效果图&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="README.assets/%E9%A1%B9%E7%9B%AE%E6%BC%94%E7%A4%BA%E5%9B%BE1.png"&gt;&lt;img src="README.assets/%E9%A1%B9%E7%9B%AE%E6%BC%94%E7%A4%BA%E5%9B%BE1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="README.assets/%E9%A1%B9%E7%9B%AE%E6%BC%94%E7%A4%BA%E5%9B%BE2.png"&gt;&lt;img src="README.assets/%E9%A1%B9%E7%9B%AE%E6%BC%94%E7%A4%BA%E5%9B%BE2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="README.assets/%E9%A1%B9%E7%9B%AE%E6%BC%94%E7%A4%BA%E5%9B%BE3.png"&gt;&lt;img src="README.assets/%E9%A1%B9%E7%9B%AE%E6%BC%94%E7%A4%BA%E5%9B%BE3.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-项目架构图" class="anchor" aria-hidden="true" href="#项目架构图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目架构图&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="README.assets/1565861422268.png"&gt;&lt;img src="README.assets/1565861422268.png" alt="1565861422268" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-如何贡献" class="anchor" aria-hidden="true" href="#如何贡献"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;如何贡献&lt;/h1&gt;
&lt;p&gt;非常欢迎您对Gpmall的开发作出贡献！ 你可以选择以下方式向Gpmall贡献：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/2227324689/gpmall/issues"&gt;Github - 发布issue进行问题反馈和建议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;通过Pull Request提交修复&lt;/li&gt;
&lt;li&gt;完善文档&lt;/li&gt;
&lt;li&gt;提交产品需求&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-技术交流及问题解答" class="anchor" aria-hidden="true" href="#技术交流及问题解答"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术交流及问题解答&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;助理&lt;/strong&gt; （一个程序员竟然有助理，不可思议）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="README.assets/1565592665627.png"&gt;&lt;img src="README.assets/1565592665627.png" alt="1565592665627" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="README.assets/1565592704023.png"&gt;&lt;img src="README.assets/1565592704023.png" alt="1565592704023" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;作者的个人博客&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://istio.tech" rel="nofollow"&gt;http://istio.tech&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>2227324689</author><guid isPermaLink="false">https://github.com/2227324689/gpmall</guid><pubDate>Wed, 13 Nov 2019 00:17:00 GMT</pubDate></item><item><title>ageron/handson-ml2 #18 in All Languages, This month</title><link>https://github.com/ageron/handson-ml2</link><description>&lt;p&gt;&lt;i&gt;A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in Python using Scikit-Learn, Keras and TensorFlow 2.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-machine-learning-notebooks" class="anchor" aria-hidden="true" href="#machine-learning-notebooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Machine Learning Notebooks&lt;/h1&gt;
&lt;p&gt;This project aims at teaching you the fundamentals of Machine Learning in
python. It contains the example code and solutions to the exercises in the second edition of my O'Reilly book &lt;a href="https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632/" rel="nofollow"&gt;Hands-on Machine Learning with Scikit-Learn, Keras and TensorFlow&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/04da787d30d234eed450dae6b5283b7210d8d10c/68747470733a2f2f696d616765732d6e612e73736c2d696d616765732d616d617a6f6e2e636f6d2f696d616765732f492f3531744f685051426d534c2e5f53583337395f424f312c3230342c3230332c3230305f2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/04da787d30d234eed450dae6b5283b7210d8d10c/68747470733a2f2f696d616765732d6e612e73736c2d696d616765732d616d617a6f6e2e636f6d2f696d616765732f492f3531744f685051426d534c2e5f53583337395f424f312c3230342c3230332c3230305f2e6a7067" title="book" width="150" data-canonical-src="https://images-na.ssl-images-amazon.com/images/I/51tOhPQBmSL._SX379_BO1,204,203,200_.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you are looking for the first edition notebooks, check out &lt;a href="https://github.com/ageron/handson-ml"&gt;ageron/handson-ml&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-want-to-play-with-these-notebooks-without-having-to-install-anything" class="anchor" aria-hidden="true" href="#want-to-play-with-these-notebooks-without-having-to-install-anything"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to play with these notebooks without having to install anything?&lt;/h3&gt;
&lt;p&gt;Use any of the following services.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Please be aware that these services provide temporary environments: anything you do will be deleted after a while, so make sure you save anything you care about.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open this repository in &lt;a href="https://colab.research.google.com/github/ageron/handson-ml2/blob/master/" rel="nofollow"&gt;Colaboratory&lt;/a&gt;:
&lt;a href="https://colab.research.google.com/github/ageron/handson-ml2/blob/master/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e69988217d15707bdd8b6b27f1d7d53a0dd00af7/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f696d672f636f6c61625f66617669636f6e2e69636f" width="90" data-canonical-src="https://colab.research.google.com/img/colab_favicon.ico" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or open it in &lt;a href="https://mybinder.org/v2/gh/ageron/handson-ml2/master" rel="nofollow"&gt;Binder&lt;/a&gt;:
&lt;a href="https://mybinder.org/v2/gh/ageron/handson-ml2/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/69ea8abed4df43bca4c671b965aeffef2c4f897a/68747470733a2f2f6d61747468696173627573736f6e6e6965722e636f6d2f706f7374732f696d672f62696e6465725f6c6f676f5f313238783132382e706e67" width="90" data-canonical-src="https://matthiasbussonnier.com/posts/img/binder_logo_128x128.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note&lt;/em&gt;: Most of the time, Binder starts up quickly and works great, but when handson-ml2 is updated, Binder creates a new environment from scratch, and this can take quite some time.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or open it in &lt;a href="https://beta.deepnote.com/launch?template=data-science&amp;amp;url=https%3A//github.com/ageron/handson-ml2/blob/master/index.ipynb" rel="nofollow"&gt;Deepnote&lt;/a&gt;:
&lt;a href="https://beta.deepnote.com/launch?template=data-science&amp;amp;url=https%3A//github.com/ageron/handson-ml2/blob/master/index.ipynb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3fae03be31b768100aa2a800d2cc3b6650c6cd48/68747470733a2f2f7777772e646565706e6f74652e636f6d2f7374617469632f696c6c757374726174696f6e2e706e67" width="150" data-canonical-src="https://www.deepnote.com/static/illustration.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-just-want-to-quickly-look-at-some-notebooks-without-executing-any-code" class="anchor" aria-hidden="true" href="#just-want-to-quickly-look-at-some-notebooks-without-executing-any-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Just want to quickly look at some notebooks, without executing any code?&lt;/h3&gt;
&lt;p&gt;Browse this repository using &lt;a href="http://nbviewer.jupyter.org/github/ageron/handson-ml2/blob/master/index.ipynb" rel="nofollow"&gt;jupyter.org's notebook viewer&lt;/a&gt;:
&lt;a href="http://nbviewer.jupyter.org/github/ageron/handson-ml2/blob/master/index.ipynb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/079030b4c39b76eafa0c6c3a5bd18112aafe42dd/68747470733a2f2f6a7570797465722e6f72672f6173736574732f6e61765f6c6f676f2e737667" width="150" data-canonical-src="https://jupyter.org/assets/nav_logo.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;a href="https://github.com/ageron/handson-ml2/blob/master/index.ipynb"&gt;github.com's notebook viewer&lt;/a&gt; also works but it is slower and the math equations are not always displayed correctly.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-want-to-install-this-project-on-your-own-machine" class="anchor" aria-hidden="true" href="#want-to-install-this-project-on-your-own-machine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to install this project on your own machine?&lt;/h3&gt;
&lt;p&gt;If you have a working Python 3.5+ environment and git is installed, then this project and its dependencies can be installed with pip. Open a terminal and run the following commands (do not type the &lt;code&gt;$&lt;/code&gt; signs, they just indicate that this is a terminal command):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ageron/handson-ml2.git
$ cd handson-ml2
$ python3 -m pip install --user --upgrade pip setuptools
$ # Read `requirements.txt` if you want to use a GPU.
$ python3 -m pip install --user --upgrade -r requirements.txt
$ jupyter notebook
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or using Anaconda:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ageron/handson-ml2.git
$ cd handson-ml2
$ # Read `environment.yml` if you want to use a GPU.
$ conda env create -f environment.yml
$ conda activate tf2
$ jupyter notebook
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you need more detailed installation instructions, read the &lt;a href="INSTALL.md"&gt;detailed installation instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;I would like to thank everyone who contributed to this project, either by providing useful feedback, filing issues or submitting Pull Requests. Special thanks go to Haesun Park who helped on some of the exercise solutions, and to Steven Bunkley and Ziembla who created the &lt;code&gt;docker&lt;/code&gt; directory.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ageron</author><guid isPermaLink="false">https://github.com/ageron/handson-ml2</guid><pubDate>Wed, 13 Nov 2019 00:18:00 GMT</pubDate></item><item><title>frank-lam/fullstack-tutorial #19 in All Languages, This month</title><link>https://github.com/frank-lam/fullstack-tutorial</link><description>&lt;p&gt;&lt;i&gt;🚀 fullstack tutorial 2019，后台技术栈/架构师之路/全栈开发社区，春招/秋招/校招/面试&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/fullstack-tutorial-logo.png"&gt;&lt;img src="assets/fullstack-tutorial-logo.png" alt="full stack developer tutorial" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;I&lt;/th&gt;
&lt;th align="center"&gt;II&lt;/th&gt;
&lt;th align="center"&gt;III&lt;/th&gt;
&lt;th align="center"&gt;IV&lt;/th&gt;
&lt;th align="center"&gt;V&lt;/th&gt;
&lt;th align="center"&gt;VI&lt;/th&gt;
&lt;th align="center"&gt;VII&lt;/th&gt;
&lt;th align="center"&gt;VIII&lt;/th&gt;
&lt;th align="center"&gt;IX&lt;/th&gt;
&lt;th align="center"&gt;X&lt;/th&gt;
&lt;th align="center"&gt;XI&lt;/th&gt;
&lt;th align="center"&gt;XII&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;算法&lt;br&gt;&lt;a href="#%E4%B8%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95"&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Java&lt;br&gt;&lt;a href="#%E4%BA%8Cjava"&gt;&lt;g-emoji class="g-emoji" alias="coffee" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png"&gt;☕️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Python&lt;br&gt;&lt;a href="#%E4%B8%89python"&gt;&lt;g-emoji class="g-emoji" alias="snake" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f40d.png"&gt;🐍&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;前端&lt;br&gt;&lt;a href="#%E5%9B%9B%E5%89%8D%E7%AB%AF"&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;数据库&lt;br&gt;&lt;a href="#%E4%BA%94%E6%95%B0%E6%8D%AE%E5%BA%93"&gt;&lt;g-emoji class="g-emoji" alias="floppy_disk" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4be.png"&gt;💾&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;操作系统&lt;br&gt;&lt;a href="#%E5%85%AD%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;网络通信&lt;br&gt;&lt;a href="#%E4%B8%83%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1"&gt;&lt;g-emoji class="g-emoji" alias="cloud" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2601.png"&gt;☁️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;分布式&lt;br&gt;&lt;a href="#%E5%85%AB%E5%88%86%E5%B8%83%E5%BC%8F"&gt;&lt;g-emoji class="g-emoji" alias="page_with_curl" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c3.png"&gt;📃&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;机器学习&lt;br&gt; &lt;a href="#%E4%B9%9D%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0"&gt;&lt;g-emoji class="g-emoji" alias="mag" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50d.png"&gt;🔍&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;工具&lt;br&gt;&lt;a href="#%E5%8D%81%E5%B7%A5%E5%85%B7"&gt;&lt;g-emoji class="g-emoji" alias="hammer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f528.png"&gt;🔨&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Learn&lt;br&gt;&lt;a href="#learn-"&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Talking&lt;br&gt;&lt;a href="#talking-bulb"&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div align="center"&gt;  
    &lt;p&gt;
        &lt;g-emoji class="g-emoji" alias="loudspeaker" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e2.png"&gt;📢&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="loudspeaker" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e2.png"&gt;📢&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="loudspeaker" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e2.png"&gt;📢&lt;/g-emoji&gt;
    &lt;/p&gt;
    &lt;p&gt;
 		和 400+ 技术达人在线交流：
      &lt;a href="notes/技术交流群.md"&gt;QQ技术交流群&lt;/a&gt;
    &lt;/p&gt;
  &lt;p&gt;
    欢迎光临我的技术博客：&lt;a href="https://www.frankfeekr.cn" rel="nofollow"&gt;www.frankfeekr.cn&lt;/a&gt;
  &lt;/p&gt;
    &lt;p&gt;
        欢迎志同道合的小伙伴加入开源小组：&lt;a href="notes/开源贡献.md"&gt;⊱ 开源小组，英雄招募令&lt;/a&gt;
    &lt;/p&gt;
    &lt;div&gt;
        &lt;br&gt;
        &lt;p&gt;
            &lt;g-emoji class="g-emoji" alias="dart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png"&gt;🎯&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="dart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png"&gt;🎯&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="dart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png"&gt;🎯&lt;/g-emoji&gt;
        &lt;/p&gt;
        &lt;p&gt;
             为极客打造，阅读体验更好的在线文档（与 GitHub 实时同步）
        &lt;/p&gt;
        &lt;p&gt;
            支持手机阅读，目录导航，Gitalk 评论，搜索定位
        &lt;/p&gt;
        &lt;p&gt;
            &lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;a href="https://frank-lam.github.io/fullstack-tutorial/#/" rel="nofollow"&gt;点击，即刻开始阅读！&lt;/a&gt;
        &lt;/p&gt;
    &lt;/div&gt;
        &lt;div&gt;
        &lt;br&gt;
        &lt;p&gt;
            &lt;g-emoji class="g-emoji" alias="dart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png"&gt;🎯&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="dart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png"&gt;🎯&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="dart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png"&gt;🎯&lt;/g-emoji&gt;
        &lt;/p&gt;
        &lt;p&gt;
             也许你特别钟爱 GitHub 的阅读体验，没关系
        &lt;/p&gt;
        &lt;p&gt;
            我也为您打造了一款 Chrome 插件 &lt;a href="https://github.com/fullstack-tutorial/github-markdown-toc"&gt;Chrome Extension：GitHub Markdown&lt;/a&gt;
        &lt;/p&gt;
        &lt;p&gt;
            方便在 GitHub 长文阅读时，在侧边栏生成标题目录定位
            &lt;/p&gt;
        &lt;p&gt;
            &lt;g-emoji class="g-emoji" alias="santa" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f385.png"&gt;🎅&lt;/g-emoji&gt; 特别鸣谢共同完成两位小伙伴：&lt;a href="https://github.com/dxiaoqi"&gt;@dxiaoqi&lt;/a&gt; &lt;a href="https://github.com/dzeze"&gt;@dzeze&lt;/a&gt;
    &lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-前言" class="anchor" aria-hidden="true" href="#前言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;前言&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.frankfeekr.cn/2019/05/09/%E8%B0%88%E8%B0%88%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%B9%E6%B3%95%E8%AE%BA/" rel="nofollow"&gt;谈谈技术学习的一些方法论&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在学习技术这条路上并不是一帆风顺，也一直在探索一条适合自己的学习方法。从一开始的技术小白，到现在还比较上道的老鸟，在这个过程中走了太多的弯路，想在这里和大家分享一些我的经历和学习方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.frankfeekr.cn/2019/05/27/%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8A%80%E6%9C%AF%E6%A0%88/" rel="nofollow"&gt;如何选择自己的技术栈&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在编程的世界里，该如何选择自己的技术栈呢。学前端？学 APP 开发？对于 Java、C++、C#、Python、PHP 又如何选择呢？人工智能现如今这么火，是不是机器学习、深度学习更高级一些呢？那么程序员又如何修炼内功呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91%E7%A5%9E%E5%85%B5%E5%88%A9%E5%99%A8.md"&gt;全栈开发神兵利器&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;工欲善其事，必先利其器。这里我将推荐开发过程中的提效工具、开发利器、协作工具、文档技术等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/XP%E6%9E%81%E9%99%90%E7%BC%96%E7%A8%8B.md"&gt;XP 极限编程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;敏捷软件开发中可能是最富有成效的几种方法学之一&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-技能图谱" class="anchor" aria-hidden="true" href="#技能图谱"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技能图谱&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/SkillTree/backend-skill.md"&gt;backend skill&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;后台开发技能图谱，从程序员的内功修炼到后台语言，分布式系统架构&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-一数据结构与算法" class="anchor" aria-hidden="true" href="#一数据结构与算法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一、数据结构与算法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95.md"&gt;数据结构与算法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　排序算法、动态规划、递归、回溯法、贪心算法等&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/%E6%B5%B7%E9%87%8F%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86.md"&gt;海量数据处理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;数据处理典型案例，逐渐更新&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-二java" class="anchor" aria-hidden="true" href="#二java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二、Java&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/JavaArchitecture/01-Java%E5%9F%BA%E7%A1%80.md"&gt;Java 基础概念&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　基本概念、面向对象、关键字、基本数据类型与运算、字符串与数组、异常处理、Object 通用方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/JavaArchitecture/02-Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6.md"&gt;Java 集合框架&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　数据结构 &amp;amp; 源码分析：ArrayList、Vector、LinkedList、HashMap、ConcurrentHashMap、HashSet、LinkedHashSet and LinkedHashMap&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/JavaArchitecture/03-Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B.md"&gt;Java 并发编程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　线程状态、线程机制、线程通信、J.U.C 组件、JMM、线程安全、锁优化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/JavaArchitecture/04-Java-IO.md"&gt;Java I/O&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　磁盘操作、字节操作、字符操作、对象操作、网络操作、NIO&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/JavaArchitecture/05-Java%E8%99%9A%E6%8B%9F%E6%9C%BA.md"&gt;Java 虚拟机&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　运行时数据区域、垃圾收集、内存分配机制、类加载机制、性能调优监控工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/JavaArchitecture/06-Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md"&gt;Java 设计模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　Java 常见的 10 余种设计模式，全 23 种设计模式逐步更新&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/JavaArchitecture/07-JavaWeb.md"&gt;Java Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　包含 Servlet &amp;amp; JSP、Spring、SpringMVC、Mybatis、Hibernate、Structs2 核心思想，如 IOC、AOP 等思想。SSM 更详细请转向：&lt;a href="notes/JavaWeb/Spring.md"&gt;Spring&lt;/a&gt; | &lt;a href="https://github.com/frank-lam/SpringMVC_MyBatis_Learning"&gt;SpringMVC&lt;/a&gt; | &lt;a href="https://github.com/frank-lam/SpringMVC_MyBatis_Learning"&gt;MyBatis&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-三python" class="anchor" aria-hidden="true" href="#三python"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;三、Python&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/Python/Python%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.md"&gt;Python 语言基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Scrapy 爬虫框架&lt;/li&gt;
&lt;li&gt;Flask&lt;/li&gt;
&lt;li&gt;Django&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-四前端" class="anchor" aria-hidden="true" href="#四前端"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四、前端&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/Frontend/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.md"&gt;前端知识体系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vue
&lt;ul&gt;
&lt;li&gt;第一个 Vue 应用程序&lt;/li&gt;
&lt;li&gt;Vue-cli 脚手架&lt;/li&gt;
&lt;li&gt;vue-router 路由&lt;/li&gt;
&lt;li&gt;vuex 状态管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Webpack&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
&lt;summary&gt;TODO LIST&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HTML(5)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSS(3)&lt;/p&gt;
&lt;p&gt;sass、scss、stylus&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSS 框架&lt;/p&gt;
&lt;p&gt;BootStarp、LayUI&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JavaScript&lt;/p&gt;
&lt;p&gt;基础语法、进阶、ES6&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JavaScript 框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vue&lt;/li&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;Angular&lt;/li&gt;
&lt;li&gt;jQuery&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Node&lt;/p&gt;
&lt;p&gt;常用 api、对象池、异常处理、进程通信、高并发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;静态编译&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flow&lt;/li&gt;
&lt;li&gt;TypeScript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打包工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;webpack&lt;/li&gt;
&lt;li&gt;glup&lt;/li&gt;
&lt;li&gt;rollup&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npm&lt;/li&gt;
&lt;li&gt;yarn&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-五数据库" class="anchor" aria-hidden="true" href="#五数据库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;五、数据库&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/MySQL.md"&gt;MySQL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;存储引擎、事务隔离级别、索引、主从复制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/Redis.md"&gt;Redis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Redis 核心知识&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/SQL.md"&gt;SQL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;常用 SQL 语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/PostgreSQL.md"&gt;PostgreSQL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个开源的关系数据库，是从伯克利写的 POSTGRES 软件包发展而来的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MongoDB&lt;/p&gt;
&lt;p&gt;基于分布式文件存储的数据库&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-六操作系统" class="anchor" aria-hidden="true" href="#六操作系统"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;六、操作系统&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.md"&gt;操作系统原理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　进程管理、死锁、内存管理、磁盘设备&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/Linux.md"&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　基础核心概念、常用命令使用&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-七网络通信" class="anchor" aria-hidden="true" href="#七网络通信"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;七、网络通信&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.md"&gt;计算机网络&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　传输层、应用层（HTTP）、网络层、网络安全&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/RESTful%20API.md"&gt;RESTful API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;软件架构风格、格设计原则和约束条件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8.md"&gt;Web网络安全&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;web前后端漏洞分析与防御，XSS 攻击、CSRF 攻击、DDoS 攻击、SQL 注入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Socket 网络编程&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-八分布式" class="anchor" aria-hidden="true" href="#八分布式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;八、分布式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/Docker%E5%9F%BA%E7%A1%80.md"&gt;Docker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;容器化引擎服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/%E5%BE%AE%E6%9C%8D%E5%8A%A1.md"&gt;微服务&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;微服务简介、API 网关、服务注册发现、服务通信&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/%E5%88%86%E5%B8%83%E5%BC%8F/Zookeeper.md"&gt;Zookeeper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;分布式协调服务，服务注册发现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/MicroService/kafka/README.md"&gt;Kafka&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;深入浅出 Kafka，将用最极简的语言带你走进 Kafka 的消息中间件世界&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.frankfeekr.cn/2019/07/24/influxdb-tutorial-start/" rel="nofollow"&gt;玩转时序数据库 InfluxDB（一）初体验&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【说明】&lt;strong&gt;分布式专题&lt;/strong&gt; 笔者也在学习中，这里列举了一些技能列表，笔者将局部更新。敬请期待&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;TODO LIST&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kubernetes（k8s）&lt;/p&gt;
&lt;p&gt;容器化部署，管理云平台中多个主机上的容器化的应用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;云计算&lt;/p&gt;
&lt;p&gt;SaaS（软件即服务） 、PaaS（平台即服务） 、IaaS（基础架构即服务）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Zookeeper&lt;/p&gt;
&lt;p&gt;分布式协调服务，服务注册发现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dubbo、Thrift（RPC 框架）&lt;/p&gt;
&lt;p&gt;分布式服务治理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分布式事务解决方案&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ActiveMQ、Kafka、RabbitMQ&lt;/p&gt;
&lt;p&gt;分布式消息通信&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;熔断，限流，降级机制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redis&lt;/p&gt;
&lt;p&gt;分布式缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mycat&lt;/p&gt;
&lt;p&gt;数据库路由&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nginx&lt;/p&gt;
&lt;p&gt;反向代理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tomcat&lt;/p&gt;
&lt;p&gt;Web Server 服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DevOps&lt;/p&gt;
&lt;p&gt;自动化运维，持续集成、持续交付、持续部署&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分布式锁&lt;/p&gt;
&lt;p&gt;基于 Redis、MySQL、Zookeeper 的分布式锁实现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FastDFS&lt;/p&gt;
&lt;p&gt;轻量级分布式文件管理系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go&lt;/p&gt;
&lt;p&gt;并发的、带垃圾回收的、快速编译的语言&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-九机器学习" class="anchor" aria-hidden="true" href="#九机器学习"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;九、机器学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/DeepLearning/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%88%9D%E8%AF%86.md"&gt;深度学习初识&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;经典机器学习算法&lt;/p&gt;
&lt;p&gt;K 近邻算法、线性回归、梯度下降法、逻辑回归、支持向量机、决策树、集成学习&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-十工具" class="anchor" aria-hidden="true" href="#十工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;十、工具&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/git-tutorial.md"&gt;Git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;学习指引，将用最极简的语言带你进入 Git 版本控制的世界&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/Git%E5%B7%A5%E4%BD%9C%E6%B5%81.md"&gt;Git 工作流&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;集中式工作流，功能分支工作流， GitFlow 工作流，Forking 工作流，Pull Requests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.md"&gt;正则表达式&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;常见符号含义，速查表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/frank-lam/lanproxy-nat"&gt;手把手教你搭建内网穿透服务&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基于 lanproxy 穿透服务，为你定了一键启动的服务端和客户端 Docker 镜像&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.frankfeekr.cn/2019/07/17/springboot-idea-jrebel-hotswap/" rel="nofollow"&gt;基于 SpringBoot &amp;amp; IDEA &amp;amp; JRebel 玩转远程热部署与远程调试&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;手把手带你玩转，远程调试与远程热部署&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="notes/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95.md"&gt;什么是 TDD 及常见的测试方法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-learn-" class="anchor" aria-hidden="true" href="#learn-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn &lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/LEARNLIST.md"&gt;LEARN_LIST&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　包含阅读清单，学习课程两部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="notes/web%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E6%A0%87%E5%87%86%E6%B5%81%E7%A8%8B.md"&gt;web应用开发标准流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-talking-bulb" class="anchor" aria-hidden="true" href="#talking-bulb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Talking &lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;p&gt;本仓库致力于成为一个全栈开发爱好者的学习指南，给初学者一个更明确的学习方向，同时也是对自己技能的强化和巩固。在架构师这条路上，希望和大家一起成长，帮助更多的计算机爱好者能够有一个明确的学习路径。持续不间断的维护本仓库，也欢迎有更多的极客们加入。&lt;/p&gt;
&lt;p&gt;都说好记性不如烂笔头，定期的学习和整理必然对学习巩固有所帮助，这里通过索引的方式对全栈开发技术做一个系统分类，方便随时巩固和学习，当然还有面试。在学习这条路上难免会有很多盲点和学不完的知识。有道无术，术尚可求，掌握好思维能力才能应对千变万化的技术。不要把大脑当成硬盘，也不要做高速运转的 CPU，而修行自己的大脑成为一个搜索引擎，学会分析解决问题。&lt;/p&gt;
&lt;p&gt;Since 20,May,2018&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;p&gt;个人的能力有限，在编写的过程中引用了诸多优秀的 GitHub 仓库。本项目的启发来自 &lt;a href="https://github.com/CyC2018"&gt;@CyC2018&lt;/a&gt; 的学习笔记，是一个非常优秀的开源项目，在本仓库中部分内容引用文字和图例；引用了 &lt;a href="https://github.com/CarpenterLee"&gt;@计算所的小鼠标&lt;/a&gt; 中对于 JCF 的源码分析和理解；引用了  &lt;a href="https://www.nowcoder.com/discuss/5949" rel="nofollow"&gt;阿里面试题总结&lt;/a&gt; 中全部的面试题，并对面经进行了整理勘误，并进行了知识拓展和修改；引用了 &lt;a href="https://www.nowcoder.com" rel="nofollow"&gt;牛客网&lt;/a&gt; 上的面试经验贴。也引用了知乎上的热门回答和优秀博客的回答。在这里特别鸣谢，我将每篇文章中做外链引用说明。&lt;/p&gt;
&lt;p&gt;文中我也推荐了学习的书籍和学习课程，都将附着上最高清、最形象的配图进行讲解。在文中的配图都来自自己绘制的、博客、Github、PDF书籍等等，这里没法一一感谢，谢谢你们。&lt;/p&gt;
&lt;p&gt;推荐一些优秀的开源项目，供大家参考，&lt;a href="notes/reference.md"&gt;reference&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;Thank you to all the people who already contributed to fullstack-tutorial !&lt;/p&gt;
&lt;p&gt;Please make sure to read the &lt;a href="notes/docs/%E5%A6%82%E4%BD%95%E7%BB%99%E6%88%91%E7%9A%84%E4%BB%93%E5%BA%93%E8%B4%A1%E7%8C%AE.md"&gt;Contributing Guide/如何给我的仓库贡献&lt;/a&gt; before making a pull request.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/frank-lam/fullstack-tutorial/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/3f2f555af2f8bafe9c03ab27a50fdc47c9c47728/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f66756c6c737461636b2d7475746f7269616c2f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/fullstack-tutorial/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-stargazers-over-time" class="anchor" aria-hidden="true" href="#stargazers-over-time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stargazers over time&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6aabd20964a55dab44207ed1f3bfd9318ecb7fce/68747470733a2f2f737461726368617274732e6865726f6b756170702e636f6d2f6672616e6b2d6c616d2f66756c6c737461636b2d7475746f7269616c2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/6aabd20964a55dab44207ed1f3bfd9318ecb7fce/68747470733a2f2f737461726368617274732e6865726f6b756170702e636f6d2f6672616e6b2d6c616d2f66756c6c737461636b2d7475746f7269616c2e737667" alt="Stargazers over time" data-canonical-src="https://starcharts.herokuapp.com/frank-lam/fullstack-tutorial.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://creativecommons.org/licenses/by-nc-sa/4.0/" rel="nofollow"&gt;&lt;img alt="知识共享许可协议" src="https://camo.githubusercontent.com/6887feb0136db5156c4f4146e3dd2681d06d9c75/68747470733a2f2f692e6372656174697665636f6d6d6f6e732e6f72672f6c2f62792d6e632d73612f342e302f38387833312e706e67" data-canonical-src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright (c) 2019-present, Frank Lam&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-关于作者-boy" class="anchor" aria-hidden="true" href="#关于作者-boy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;关于作者 &lt;g-emoji class="g-emoji" alias="boy" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f466.png"&gt;👦&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;div align="center"&gt;  
    &lt;p&gt;
        在颠覆世界的同时，也要好好关照自己。
    &lt;/p&gt;
&lt;a href="https://zhuanlan.zhihu.com/frankfeekr" rel="nofollow"&gt;&lt;/a&gt;&lt;a href="#backers" alt="sponsors on Open Collective"&gt;&lt;img src="https://camo.githubusercontent.com/f1f756223ef6bac8446e3239bdcc72e9ecce7582/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f66756c6c737461636b2d7475746f7269616c2f6261636b6572732f62616467652e737667" data-canonical-src="https://opencollective.com/fullstack-tutorial/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="#sponsors" alt="Sponsors on Open Collective"&gt;&lt;img src="https://camo.githubusercontent.com/e9fc4e5259d98340eb803537ffc070f893545871/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f66756c6c737461636b2d7475746f7269616c2f73706f6e736f72732f62616467652e737667" data-canonical-src="https://opencollective.com/fullstack-tutorial/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2c1905794b0e2b255a74a1ae33fbb06338fc5002/68747470733a2f2f696d672e736869656c64732e696f2f62616467652fe79fa5e4b98ee4b893e6a08f2d6672616e6b6665656b722d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/2c1905794b0e2b255a74a1ae33fbb06338fc5002/68747470733a2f2f696d672e736869656c64732e696f2f62616467652fe79fa5e4b98ee4b893e6a08f2d6672616e6b6665656b722d626c75652e737667" alt="QQ群" data-canonical-src="https://img.shields.io/badge/知乎专栏-frankfeekr-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://frankfeekr.cn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d4086661a7546c239b951d9cdb3c000b918f905/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f424c4f472d6672616e6b6665656b722e636e2d626c75652e737667" alt="BLOG" data-canonical-src="https://img.shields.io/badge/BLOG-frankfeekr.cn-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="mailto:frank_lin@whu.edu.cn"&gt;&lt;img src="https://camo.githubusercontent.com/07a5ce5262211d14ac51c165e4f3b2bfcd626d61/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f456d61696c2d6672616e6b5f5f6c696e407768752e6564752e636e2d6c69676874677265792e737667" alt="邮箱" data-canonical-src="https://img.shields.io/badge/Email-frank__lin@whu.edu.cn-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=593WvX0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f2fd48cbf44620f1ec27e4dac7cd079f5e8d143c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5151e7bea42d3836323631393530332d677265656e2e737667" alt="QQ群" data-canonical-src="https://img.shields.io/badge/QQ群-862619503-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;br&gt;&lt;br&gt;
    &lt;p&gt;
        from zero to hero.
    &lt;/p&gt;
&lt;/div&gt;
&lt;div align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/wechat-fullstack.png"&gt;&lt;img src="assets/wechat-fullstack.png" width="620" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/div&gt;&lt;br&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>frank-lam</author><guid isPermaLink="false">https://github.com/frank-lam/fullstack-tutorial</guid><pubDate>Wed, 13 Nov 2019 00:19:00 GMT</pubDate></item><item><title>williamfiset/Algorithms #20 in All Languages, This month</title><link>https://github.com/williamfiset/Algorithms</link><description>&lt;p&gt;&lt;i&gt;A collection of algorithms and data structures&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/williamfiset/Algorithms" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/84038731da1a8d0d43eb719f815d094cb6ce08c7/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f77696c6c69616d66697365742f416c676f726974686d732e737667" alt="Travis" data-canonical-src="https://img.shields.io/travis/williamfiset/Algorithms.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ccf4c50a1576b0dd30b286717451fa56b783512/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-algorithms--data-structures-project" class="anchor" aria-hidden="true" href="#algorithms--data-structures-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Algorithms &amp;amp; data structures project&lt;/h1&gt;
&lt;p&gt;Algorithms and data structures are amongst the most fundamental ingredients in the recipe for efficient code and good software design; knowledge of how to create and design excellent algorithms is an essential skill required in becoming an exemplary programmer. The goal of this repository is to demonstrate how to correctly implement the most common data structures and algorithms in the simplest and most elegant ways.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;This repository is contribution friendly &lt;g-emoji class="g-emoji" alias="smiley" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png"&gt;😃&lt;/g-emoji&gt;. If you're an algorithms enthusiast and want to add or improve an algorithm your contribution is welcome! Please be sure to checkout the &lt;a href="https://github.com/williamfiset/Algorithms/wiki"&gt;Wiki&lt;/a&gt; for instructions.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-data-structures" class="anchor" aria-hidden="true" href="#data-structures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Structures&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=q4fnJZr8ztY" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/balancedtree"&gt;Balanced Trees&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/balancedtree/AVLTreeRecursive.java"&gt;Avl Tree (recursive)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/balancedtree/AVLTreeRecursiveOptimized.java"&gt;Avl Tree (recursive, mildly optimized)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/balancedtree/RedBlackTree.java"&gt;Red Black Tree (recursive)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JfSdGQdAzq8" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/binarysearchtree/BinarySearchTree.java"&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/binarysearchtree/SplayTree.java"&gt;Splay Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/bloomfilter"&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PEnFFiQe1pM" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/dynamicarray"&gt;Dynamic Array&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/dynamicarray/IntArray.java"&gt;Dynamic array (integer only, fast)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/dynamicarray/DynamicArray.java"&gt;Dynamic array (generic)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RgITNht_f4Q" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/fenwicktree"&gt;Fenwick Tree&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/fenwicktree/FenwickTreeRangeQueryPointUpdate.java"&gt;Fenwick Tree (range query, point updates)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/fenwicktree/FenwickTreeRangeUpdatePointQuery.java"&gt;Fenwick Tree (range update, point query)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/set"&gt;Set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2E54GqF0H4s" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/hashtable"&gt;Hashtable&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/hashtable/HashTableDoubleHashing.java"&gt;Hashtable (double hashing)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/hashtable/HashTableLinearProbing.java"&gt;Hashtable (linear probing)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/hashtable/HashTableQuadraticProbing.java"&gt;Hashtable (quadratic probing)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/hashtable/HashTableSeperateChaining.java"&gt;Hashtable (separate chaining)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-Yn5DU0_-lw" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/linkedlist/DoublyLinkedList.java"&gt;Linked List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wptevk0bshY" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/priorityqueue"&gt;Priority Queue&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/priorityqueue/BinaryHeap.java"&gt;Min Binary Heap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/priorityqueue/MinIndexedBinaryHeap.java"&gt;Min Indexed Binary Heap (sorted key-value pairs, similar to hash-table)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/priorityqueue/MinDHeap.java"&gt;Min D-Heap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DT8xZ0Uf8wo" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/priorityqueue/MinIndexedDHeap.java"&gt;Min Indexed D-Heap (sorted key-value pairs, similar to hash-table)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/quadtree/QuadTree.java"&gt;Quad Tree [WIP]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KxzhEQ-zpDc" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/queue"&gt;Queue&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/queue/IntQueue.java"&gt;Queue (integer only, fixed size, fast)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/queue/Queue.java"&gt;Queue (linked list, generic)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/segmenttree"&gt;Segment Tree&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/segmenttree/CompactSegmentTree.java"&gt;Segment tree (array based, compact)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/segmenttree/Node.java"&gt;Segment tree (pointer implementation)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/skiplist/SkipList.java"&gt;Skip List [UNTESTED]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=L3ud3rXpIxA" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/stack"&gt;Stack&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/stack/IntStack.java"&gt;Stack (integer only, fixed size, fast)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/stack/Stack.java"&gt;Stack (linked list, generic)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zqKlL3ZpTqs" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/com/williamfiset/algorithms/datastructures/suffixarray"&gt;Suffix Array&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/suffixarray/SuffixArraySlow.java"&gt;Suffix Array (O(n²logn) construction)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/suffixarray/SuffixArrayMed.java"&gt;Suffix Array (O(nlog²(n)) construction)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/suffixarray/SuffixArrayFast.java"&gt;Suffix Array (O(nlog(n)) construction)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/trie/Trie.java"&gt;Trie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ibjEGG7ylHk" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/blob/master/com/williamfiset/algorithms/datastructures/unionfind/UnionFind.java"&gt;Union Find&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-dynamic-programming" class="anchor" aria-hidden="true" href="#dynamic-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic Programming&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/dp/CoinChange.java"&gt;Coin change problem&lt;/a&gt; &lt;strong&gt;- O(nW)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/dp/EditDistance.java"&gt;Edit distance&lt;/a&gt; &lt;strong&gt;- O(nm)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cJ21moQpofY" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/dp/Knapsack_01.java"&gt;Knapsack 0/1&lt;/a&gt; &lt;strong&gt;- O(nW)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/dp/KnapsackUnbounded.java"&gt;Knapsack unbounded (0/∞)&lt;/a&gt; &lt;strong&gt;- O(nW)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/dp/MaximumSubarray.java"&gt;Maximum contiguous subarray&lt;/a&gt; &lt;strong&gt;- O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/dp/LongestCommonSubsequence.java"&gt;Longest Common Subsequence (LCS)&lt;/a&gt; &lt;strong&gt;- O(nm)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/dp/LongestIncreasingSubsequence.java"&gt;Longest Increasing Subsequence (LIS)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/dp/LongestPalindromeSubsequence.java"&gt;Longest Palindrome Subsequence (LPS)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cY4HiiFHO1o" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingIterative.java"&gt;Traveling Salesman Problem (dynamic programming, iterative)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingRecursive.java"&gt;Traveling Salesman Problem (dynamic programming, recursive)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/dp/MinimumWeightPerfectMatching.java"&gt;Minimum Weight Perfect Matching (iterative, complete graph)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-geometry" class="anchor" aria-hidden="true" href="#geometry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Geometry&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/AngleBetweenVectors2D.java"&gt;Angle between 2D vectors&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/AngleBetweenVectors3D.java"&gt;Angle between 3D vectors&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/CircleCircleIntersectionPoints.js"&gt;Circle-circle intersection point(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/LineCircleIntersection.js"&gt;Circle-line intersection point(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/LineSegmentCircleIntersection.js"&gt;Circle-line segment intersection point(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/PointCircleTangent.java"&gt;Circle-point tangent line(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/ClosestPairOfPoints.java"&gt;Closest pair of points (line sweeping algorithm)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/CollinearPoints.java"&gt;Collinear points test (are three 2D points on the same line)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/ConvexHullGrahamScan.java"&gt;Convex hull (Graham Scan algorithm)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/ConvexHullMonotoneChainsAlgorithm.java"&gt;Convex hull (Monotone chain algorithm)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/ConvexPolygonArea.java"&gt;Convex polygon area&lt;/a&gt; &lt;strong&gt;- O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/ConvexPolygonCutWithLineSegment.java"&gt;Convex polygon cut&lt;/a&gt; &lt;strong&gt;- O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/ConvexPolygonContainsPoint.java"&gt;Convex polygon contains points&lt;/a&gt; &lt;strong&gt;- O(log(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/CoplanarPoints.java"&gt;Coplanar points test (are four 3D points on the same plane)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/Line.java"&gt;Line class (handy infinite line class)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/LineCircleIntersection.js"&gt;Line-circle intersection point(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/LineSegmentCircleIntersection.js"&gt;Line segment-circle intersection point(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/LineSegmentToGeneralForm.java"&gt;Line segment to general form (ax + by = c)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/LineSegmentLineSegmentIntersection.java"&gt;Line segment-line segment intersection&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/LongitudeLatitudeGeographicDistance.java"&gt;Longitude-Latitude geographic distance&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/PointInsideTriangle.java"&gt;Point is inside triangle check&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/PointRotation.java"&gt;Point rotation about point&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/TriangleArea.java"&gt;Triangle area algorithms&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/CircleCircleIntersectionArea.java"&gt;[UNTESTED] Circle-circle intersection area&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/geometry/CircularSegmentArea.java"&gt;[UNTESTED] Circular segment area&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-graph-theory" class="anchor" aria-hidden="true" href="#graph-theory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graph theory&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-tree-algorithms" class="anchor" aria-hidden="true" href="#tree-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tree algorithms&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeCanonicalFormAdjacencyList.java"&gt;Tree canonical form (tree isomorphism, tree encoding)&lt;/a&gt; &lt;strong&gt;- O(Elog(E))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeCenter.java"&gt;Tree center(s)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeDiameter.java"&gt;Tree diameter&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-network-flow" class="anchor" aria-hidden="true" href="#network-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Network flow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/networkflow/BipartiteGraphCheckAdjacencyList.java"&gt;Bipartite graph verification (adjacency list)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LdOnanfc5TM" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/networkflow/FordFulkersonDfsSolverAdjacencyList.java"&gt;Max flow &amp;amp; Min cut (Ford-Fulkerson with DFS, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(fE)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/networkflow/FordFulkersonDFSAdjacencyMatrix.java"&gt;Max flow &amp;amp; Min cut (Ford-Fulkerson with DFS, adjacency matrix)&lt;/a&gt; &lt;strong&gt;- O(fV&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RppuJYwlcI8" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/networkflow/EdmondsKarpAdjacencyList.java"&gt;Max flow &amp;amp; Min cut (Edmonds-Karp, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(VE&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/1ewLrXUz4kk" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/networkflow/CapacityScalingSolverAdjacencyList.java"&gt;Max flow &amp;amp; Min cut (Capacity scaling, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(E&lt;sup&gt;2&lt;/sup&gt;log&lt;sub&gt;2&lt;/sub&gt;(U))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/M6cm8UeeziI" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/networkflow/Dinics.java"&gt;Max flow &amp;amp; Min cut (Dinic's, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(EV&lt;sup&gt;2&lt;/sup&gt;) or O(E√V) for bipartite graphs&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/networkflow/MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList.java"&gt;Maximum Cardinality Bipartite Matching (augmenting path algorithm, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(VE)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/networkflow/MinCostMaxFlowWithBellmanFord.java"&gt;Min Cost Max Flow (Bellman-Ford, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(E&lt;sup&gt;2&lt;/sup&gt;V&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/networkflow/MinCostMaxFlowJohnsons.java"&gt;Min Cost Max Flow (Johnson's algorithm, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(E&lt;sup&gt;2&lt;/sup&gt;Vlog(V))&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-graph-theory" class="anchor" aria-hidden="true" href="#other-graph-theory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other graph theory&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aZXi1unBdJA" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/ArticulationPointsAdjacencyList.java"&gt;Articulation points/cut vertices (adjacency list)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/BellmanFordEdgeList.java"&gt;Bellman-Ford (edge list, negative cycles, fast &amp;amp; optimized)&lt;/a&gt; &lt;strong&gt;- O(VE)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lyw4FaxrwHg" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/BellmanFordAdjacencyList.java"&gt;Bellman-Ford (adjacency list, negative cycles)&lt;/a&gt; &lt;strong&gt;- O(VE)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/BellmanFordAdjacencyMatrix.java"&gt;Bellman-Ford (adjacency matrix, negative cycles)&lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;3&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oDqjPvD54Ss" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/BreadthFirstSearchAdjacencyListIterative.java"&gt;Breadth first search (adjacency list)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/BreadthFirstSearchAdjacencyListIterativeFastQueue.java"&gt;Breadth first search (adjacency list, fast queue)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aZXi1unBdJA" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/BridgesAdjacencyList.java"&gt;Bridges/cut edges (adjacency list)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/ConnectedComponentsAdjacencyList.java"&gt;Find connected components (adjacency list, union find)&lt;/a&gt; &lt;strong&gt;- O(Elog(E))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/ConnectedComponentsDfsSolverAdjacencyList.java"&gt;Find connected components (adjacency list, DFS)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/DepthFirstSearchAdjacencyListIterative.java"&gt;Depth first search (adjacency list, iterative)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/DepthFirstSearchAdjacencyListIterativeFastStack.java"&gt;Depth first search (adjacency list, iterative, fast stack)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7fujbpJ0LB4" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/DepthFirstSearchAdjacencyListRecursive.java"&gt;Depth first search (adjacency list, recursive)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pSqmAO-m7Lk" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/DijkstrasShortestPathAdjacencyList.java"&gt;Dijkstra's shortest path (adjacency list, lazy implementation)&lt;/a&gt; &lt;strong&gt;- O(Elog(V))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pSqmAO-m7Lk" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/DijkstrasShortestPathAdjacencyListWithDHeap.java"&gt;Dijkstra's shortest path (adjacency list, eager implementation + D-ary heap)&lt;/a&gt; &lt;strong&gt;- O(Elog&lt;sub&gt;E/V&lt;/sub&gt;(V))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8MpoO2zA2l4" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/EulerianPathDirectedEdgesAdjacencyList.java"&gt;Eulerian Path (directed edges)&lt;/a&gt; &lt;strong&gt;- O(E+V)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4NQ3HnhyNfQ" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/FloydWarshallSolver.java"&gt;Floyd Warshall algorithm (adjacency matrix, negative cycle check)&lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;3&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/GraphDiameter.java"&gt;Graph diameter (adjacency list)&lt;/a&gt; &lt;strong&gt;- O(VE)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/KruskalsEdgeList.java"&gt;Kruskal's min spanning tree algorithm (edge list, union find)&lt;/a&gt; &lt;strong&gt;- O(Elog(E))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JZBQLXgSGfs" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/KruskalsEdgeListPartialSortSolver.java"&gt;Kruskal's min spanning tree algorithm (edge list, union find, lazy sorting)&lt;/a&gt; &lt;strong&gt;- O(Elog(E))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jsmMtJpPnhU" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/LazyPrimsAdjacencyList.java"&gt;Prim's min spanning tree algorithm (lazy version, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(Elog(E))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/LazyPrimsAdjacencyMatrix.java"&gt;Prim's min spanning tree algorithm (lazy version, adjacency matrix)&lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xq3ABa-px_g" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/EagerPrimsAdjacencyList.java"&gt;Prim's min spanning tree algorithm (eager version, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(Elog(V))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/SteinerTree.java"&gt;Steiner tree (minimum spanning tree generalization)&lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;3&lt;/sup&gt; + V&lt;sup&gt;2&lt;/sup&gt; * 2&lt;sup&gt;T&lt;/sup&gt; + V * 3&lt;sup&gt;T&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TyWtx7q2D7Y" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/TarjanSccSolverAdjacencyList.java"&gt;Tarjan's strongly connected components algorithm (adjacency list) &lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/TarjanAdjacencyMatrix.java"&gt;Tarjan's strongly connected components algorithm (adjacency matrix) &lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=eL-KzMXSXXI" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/TopologicalSortAdjacencyList.java"&gt;Topological sort (acyclic graph, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/TopologicalSortAdjacencyMatrix.java"&gt;Topological sort (acyclic graph, adjacency matrix)&lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/TspBruteForce.java"&gt;Traveling Salesman Problem (brute force)&lt;/a&gt; &lt;strong&gt;- O(n!)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cY4HiiFHO1o" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingIterative.java"&gt;Traveling Salesman Problem (dynamic programming, iterative)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingRecursive.java"&gt;Traveling Salesman Problem (dynamic programming, recursive)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-linear-algebra" class="anchor" aria-hidden="true" href="#linear-algebra"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linear algebra&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/linearalgebra/FreivaldsAlgorithm.java"&gt;Freivald's algorithm (matrix multiplication verification)&lt;/a&gt; &lt;strong&gt;- O(kn&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/linearalgebra/GaussianElimination.java"&gt;Gaussian elimination (solve system of linear equations)&lt;/a&gt; &lt;strong&gt;- O(cr&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/linearalgebra/ModularLinearAlgebra.java"&gt;Gaussian elimination (modular version, prime finite field)&lt;/a&gt; &lt;strong&gt;- O(cr&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/linearalgebra/LinearRecurrenceSolver.java"&gt;Linear recurrence solver (finds nth term in a recurrence relation)&lt;/a&gt; &lt;strong&gt;- O(m&lt;sup&gt;3&lt;/sup&gt;log(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/linearalgebra/MatrixDeterminantLaplaceExpansion.java"&gt;Matrix determinant (Laplace/cofactor expansion)&lt;/a&gt; &lt;strong&gt;- O((n+2)!)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/linearalgebra/MatrixInverse.java"&gt;Matrix inverse&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;3&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/linearalgebra/MatrixMultiplication.java"&gt;Matrix multiplication&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;3&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/linearalgebra/MatrixPower.java"&gt;Matrix power&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;3&lt;/sup&gt;log(p))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/linearalgebra/RotateSquareMatrixInplace.java"&gt;Square matrix rotation&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-mathematics" class="anchor" aria-hidden="true" href="#mathematics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mathematics&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/ChineseRemainderTheorem.java"&gt;[UNTESTED] Chinese remainder theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/SieveOfEratosthenes.java"&gt;Prime number sieve (sieve of Eratosthenes)&lt;/a&gt; &lt;strong&gt;- O(nlog(log(n)))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/CompressedPrimeSieve.java"&gt;Prime number sieve (sieve of Eratosthenes, compressed)&lt;/a&gt; &lt;strong&gt;- O(nlog(log(n)))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/EulerTotientFunction.java"&gt;Totient function (phi function, relatively prime number count)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;1/4&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/EulerTotientFunctionWithSieve.java"&gt;Totient function using sieve (phi function, relatively prime number count)&lt;/a&gt; &lt;strong&gt;- O(nlog(log(n)))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/ExtendedEuclideanAlgorithm.java"&gt;Extended euclidean algorithm&lt;/a&gt; &lt;strong&gt;- ~O(log(a + b))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/GCD.java"&gt;Greatest Common Divisor (GCD)&lt;/a&gt; &lt;strong&gt;- ~O(log(a + b))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/FastFourierTransform.java"&gt;Fast Fourier transform (quick polynomial multiplication)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/FastFourierTransformComplexNumbers.java"&gt;Fast Fourier transform (quick polynomial multiplication, complex numbers)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/IsPrime.java"&gt;Primality check&lt;/a&gt; &lt;strong&gt;- O(√n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/RabinMillerPrimalityTest.py"&gt;Primality check (Rabin-Miller)&lt;/a&gt; &lt;strong&gt;- O(k)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/LCM.java"&gt;Least Common Multiple (LCM)&lt;/a&gt; &lt;strong&gt;- ~O(log(a + b))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/ModularInverse.java"&gt;Modular inverse&lt;/a&gt; &lt;strong&gt;- ~O(log(a + b))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/PrimeFactorization.java"&gt;Prime factorization (pollard rho)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;1/4&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/math/RelativelyPrime.java"&gt;Relatively prime check (coprimality check)&lt;/a&gt; &lt;strong&gt;- ~O(log(a + b))&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/other/BitManipulations.java"&gt;Bit manipulations&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/other/Permutations.java"&gt;List permutations&lt;/a&gt; &lt;strong&gt;- O(n!)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RnlHPR0lyOE" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/other/PowerSet.java"&gt;Power set (set of all subsets)&lt;/a&gt; &lt;strong&gt;- O(2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/other/Combinations.java"&gt;Set combinations&lt;/a&gt; &lt;strong&gt;- O(n choose r)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/other/CombinationsWithRepetition.java"&gt;Set combinations with repetition&lt;/a&gt; &lt;strong&gt;- O((n+r-1) choose r)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/other/SlidingWindowMaximum.java"&gt;Sliding Window Minimum/Maximum&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/other/SquareRootDecomposition.java"&gt;Square Root Decomposition&lt;/a&gt; &lt;strong&gt;- O(1) point updates, O(√n) range queries&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/other/UniqueCombinations.java"&gt;Unique set combinations&lt;/a&gt; &lt;strong&gt;- O(n choose r)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-search-algorithms" class="anchor" aria-hidden="true" href="#search-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Search algorithms&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/search/BinarySearch.java"&gt;Binary search (real numbers)&lt;/a&gt; &lt;strong&gt;- O(log(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/search/InterpolationSearch.java"&gt;Interpolation search (discrete discrete)&lt;/a&gt; &lt;strong&gt;- O(n) or O(log(log(n))) with uniform input&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/search/TernarySearch.java"&gt;Ternary search (real numbers)&lt;/a&gt; &lt;strong&gt;- O(log(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/search/TernarySearchDiscrete.java"&gt;Ternary search (discrete numbers)&lt;/a&gt; &lt;strong&gt;- O(log(n))&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-sorting-algorithms" class="anchor" aria-hidden="true" href="#sorting-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sorting algorithms&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/sorting/BubbleSort.java"&gt;Bubble sort&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/sorting/BucketSort.java"&gt;Bucket sort&lt;/a&gt; &lt;strong&gt;- Θ(n + k)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/sorting/CountingSort.java"&gt;Counting sort&lt;/a&gt; &lt;strong&gt;- O(n + k)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/sorting/Heapsort.java"&gt;Heapsort&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/sorting/InsertionSort.java"&gt;Insertion sort&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/sorting/Mergesort.java"&gt;Mergesort&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/sorting/Quicksort.java"&gt;Quicksort (in-place, Hoare partitioning)&lt;/a&gt; &lt;strong&gt;- Θ(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/sorting/SelectionSort.java"&gt;Selection sort&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-string-algorithms" class="anchor" aria-hidden="true" href="#string-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String algorithms&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/strings/BoothsAlgorithm.java"&gt;Booth's algorithm (finds lexicographically smallest string rotation)&lt;/a&gt; &lt;strong&gt;- O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/strings/KMP.java"&gt;Knuth-Morris-Pratt algorithm (finds pattern matches in text)&lt;/a&gt; &lt;strong&gt;- O(n+m)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/strings/LongestCommonPrefixArray.java"&gt;Longest Common Prefix (LCP) array&lt;/a&gt; &lt;strong&gt;- O(nlog(n)) bounded by SA construction, otherwise O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Ic80xQFWevc" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/strings/LongestCommonSubstring.java"&gt;Longest Common Substring (LCS)&lt;/a&gt; &lt;strong&gt;- O(nlog(n)) bounded by SA construction, otherwise O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OptoHwC3D-Y" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/strings/LongestRepeatedSubstring.java"&gt;Longest Repeated Substring (LRS)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/strings/ManachersAlgorithm.java"&gt;Manacher's algorithm (finds all palindromes in text)&lt;/a&gt; &lt;strong&gt;- O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/strings/RabinKarp.java"&gt;Rabin-Karp algorithm (finds pattern matches in text)&lt;/a&gt; &lt;strong&gt;- O(n+m)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/Algorithms/blob/master/com/williamfiset/algorithms/strings/SubstringVerificationSuffixArray.java"&gt;Substring verification with suffix array&lt;/a&gt; &lt;strong&gt;- O(nlog(n)) SA construction and O(mlog(n)) per query&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;This repository is released under the &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT license&lt;/a&gt;. In short, this means you are free to use this software in any personal, open-source or commercial projects. Attribution is optional but appreciated.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>williamfiset</author><guid isPermaLink="false">https://github.com/williamfiset/Algorithms</guid><pubDate>Wed, 13 Nov 2019 00:20:00 GMT</pubDate></item><item><title>swisskyrepo/PayloadsAllTheThings #21 in All Languages, This month</title><link>https://github.com/swisskyrepo/PayloadsAllTheThings</link><description>&lt;p&gt;&lt;i&gt;A list of useful payloads and bypass for Web Application Security and Pentest/CTF&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-payloads-all-the-things" class="anchor" aria-hidden="true" href="#payloads-all-the-things"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payloads All The Things&lt;/h1&gt;
&lt;p&gt;A list of useful payloads and bypasses for Web Application Security.
Feel free to improve with your payloads and techniques !
I &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; pull requests :)&lt;/p&gt;
&lt;p&gt;You can also contribute with a &lt;g-emoji class="g-emoji" alias="beers" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png"&gt;🍻&lt;/g-emoji&gt; IRL&lt;/p&gt;
&lt;p&gt;Every section contains the following files, you can use the &lt;code&gt;_template_vuln&lt;/code&gt; folder to create a new chapter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;README.md - vulnerability description and how to exploit it&lt;/li&gt;
&lt;li&gt;Intruder - a set of files to give to Burp Intruder&lt;/li&gt;
&lt;li&gt;Images - pictures for the README.md&lt;/li&gt;
&lt;li&gt;Files - some files referenced in the README.md&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You might also like the &lt;code&gt;Methodology and Resources&lt;/code&gt; folder :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/"&gt;Methodology and Resources&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md"&gt;Active Directory Attack.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Persistence.md"&gt;Linux - Persistence.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Privilege%20Escalation.md"&gt;Linux - Privilege Escalation.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Metasploit%20-%20Cheatsheet.md"&gt;Metasploit - Cheatsheet.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Methodology%20and%20enumeration.md"&gt;Methodology and enumeration.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Network%20Pivoting%20Techniques.md"&gt;Network Pivoting Techniques.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Network%20Discovery.md"&gt;Network Discovery.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md"&gt;Reverse Shell Cheatsheet.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Subdomains%20Enumeration.md"&gt;Subdomains Enumeration.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Download%20and%20Execute.md"&gt;Windows - Download and Execute.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Mimikatz.md"&gt;Windows - Mimikatz.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Persistence.md"&gt;Windows - Persistence.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Post%20Exploitation%20Koadic.md"&gt;Windows - Post Exploitation Koadic.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md"&gt;Windows - Privilege Escalation.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Using%20credentials.md"&gt;Windows - Using credentials.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/CVE%20Exploits"&gt;CVE Exploits&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apache Struts 2 CVE-2013-2251 CVE-2017-5638 CVE-2018-11776_.py&lt;/li&gt;
&lt;li&gt;Apache Struts 2 CVE-2017-9805.py&lt;/li&gt;
&lt;li&gt;Apache Struts 2 CVE-2018-11776.py&lt;/li&gt;
&lt;li&gt;Docker API RCE.py&lt;/li&gt;
&lt;li&gt;Drupalgeddon2 CVE-2018-7600.rb&lt;/li&gt;
&lt;li&gt;Heartbleed CVE-2014-0160.py&lt;/li&gt;
&lt;li&gt;JBoss CVE-2015-7501.py&lt;/li&gt;
&lt;li&gt;Jenkins CVE-2015-8103.py&lt;/li&gt;
&lt;li&gt;Jenkins CVE-2016-0792.py&lt;/li&gt;
&lt;li&gt;Rails CVE-2019-5420.rb&lt;/li&gt;
&lt;li&gt;Shellshock CVE-2014-6271.py&lt;/li&gt;
&lt;li&gt;Tomcat CVE-2017-12617.py&lt;/li&gt;
&lt;li&gt;WebLogic CVE-2016-3510.py&lt;/li&gt;
&lt;li&gt;WebLogic CVE-2017-10271.py&lt;/li&gt;
&lt;li&gt;WebLogic CVE-2018-2894.py&lt;/li&gt;
&lt;li&gt;WebSphere CVE-2015-7450.py&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You want more ? Check the &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/BOOKS.md"&gt;Books&lt;/a&gt; and &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/YOUTUBE.md"&gt;Youtube videos&lt;/a&gt; selections.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>swisskyrepo</author><guid isPermaLink="false">https://github.com/swisskyrepo/PayloadsAllTheThings</guid><pubDate>Wed, 13 Nov 2019 00:21:00 GMT</pubDate></item><item><title>elunez/eladmin #22 in All Languages, This month</title><link>https://github.com/elunez/eladmin</link><description>&lt;p&gt;&lt;i&gt;项目基于 Spring Boot 2.1.0 、 Jpa、 Spring Security、redis、Vue的前后端分离的后台管理系统，项目采用分模块开发方式， 权限控制采用 RBAC，支持数据字典与数据权限管理，支持一键生成前后端代码，支持动态路由&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-el-admin-后台管理系统" class="anchor" aria-hidden="true" href="#el-admin-后台管理系统"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;el-admin 后台管理系统&lt;/h1&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://github.com/elunez/eladmin/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/264c1d54ac99e2b6f94e00139f14bb91819f398d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e737667" alt="AUR" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitee.com/elunez/eladmin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0bb7ba5feb0c086c96c91bdaed2b1a4a4288e479/68747470733a2f2f67697465652e636f6d2f656c756e657a2f656c61646d696e2f62616467652f737461722e7376673f7468656d653d7768697465" alt="star" data-canonical-src="https://gitee.com/elunez/eladmin/badge/star.svg?theme=white" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/elunez/eladmin"&gt;&lt;img src="https://camo.githubusercontent.com/88fd50cc74b4e5f350515fa6b1339a840afebc9a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f656c756e657a2f656c61646d696e2e7376673f7374796c653d736f6369616c266c6162656c3d5374617273" alt="GitHub stars" data-canonical-src="https://img.shields.io/github/stars/elunez/eladmin.svg?style=social&amp;amp;label=Stars" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/elunez/eladmin"&gt;&lt;img src="https://camo.githubusercontent.com/adcd4dece025fdfa90646839ff050b596247b03e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f656c756e657a2f656c61646d696e2e7376673f7374796c653d736f6369616c266c6162656c3d466f726b" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/elunez/eladmin.svg?style=social&amp;amp;label=Fork" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-项目简介" class="anchor" aria-hidden="true" href="#项目简介"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目简介&lt;/h4&gt;
&lt;p&gt;eladmin基于 Spring Boot 2.1.0 、 Jpa、 Spring Security、redis、Vue的前后端分离的后台管理系统， 权限控制的方式为RBAC，项目支持数据字典与数据权限管理，支持一键生成前后端代码，支持前端菜单动态路由&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开发文档&lt;/strong&gt;  &lt;a href="https://docs.auauz.net" rel="nofollow"&gt;https://docs.auauz.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;体验地址&lt;/strong&gt;  &lt;a href="https://auauz.net/" rel="nofollow"&gt;https://auauz.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;账号密码&lt;/strong&gt; &lt;code&gt;admin/123456&lt;/code&gt;(默认密码都是123456)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-项目源码" class="anchor" aria-hidden="true" href="#项目源码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目源码&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;后端源码&lt;/th&gt;
&lt;th&gt;前端源码&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;github&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/elunez/eladmin"&gt;https://github.com/elunez/eladmin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/elunez/eladmin-web"&gt;https://github.com/elunez/eladmin-web&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;码云&lt;/td&gt;
&lt;td&gt;&lt;a href="https://gitee.com/elunez/eladmin" rel="nofollow"&gt;https://gitee.com/elunez/eladmin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://gitee.com/elunez/eladmin-web" rel="nofollow"&gt;https://gitee.com/elunez/eladmin-web&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-系统功能" class="anchor" aria-hidden="true" href="#系统功能"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;系统功能&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;用户管理：提供用户的相关配置，新增用户后，默认密码为123456&lt;/li&gt;
&lt;li&gt;角色管理：对权限与菜单进行分配，可根据部门设置角色的数据权限&lt;/li&gt;
&lt;li&gt;菜单管理：已实现菜单动态路由，后端可配置化，支持多级菜单&lt;/li&gt;
&lt;li&gt;部门管理：可配置系统组织架构，树形表格展示&lt;/li&gt;
&lt;li&gt;岗位管理：配置各个部门的职位&lt;/li&gt;
&lt;li&gt;字典管理：应广大码友的要求加入字典管理，可维护常用一些固定的数据，如：状态，性别等&lt;/li&gt;
&lt;li&gt;操作日志：记录用户操作的日志&lt;/li&gt;
&lt;li&gt;异常日志：记录异常日志，方便开发人员定位错误&lt;/li&gt;
&lt;li&gt;系统缓存：使用jedis将缓存操作可视化，并提供对redis的基本操作，可根据需求自行扩展&lt;/li&gt;
&lt;li&gt;SQL监控：采用druid 监控数据库访问性能，默认用户名admin，密码123456&lt;/li&gt;
&lt;li&gt;定时任务：整合Quartz做定时任务，加入任务日志，任务运行情况一目了然&lt;/li&gt;
&lt;li&gt;代码生成：高灵活度一键生成前后端代码，减少百分之80左右的工作任务&lt;/li&gt;
&lt;li&gt;邮件工具：配合富文本，发送html格式的邮件&lt;/li&gt;
&lt;li&gt;免费图床：使用sm.ms图床，用作公共图片上传使用&lt;/li&gt;
&lt;li&gt;七牛云存储：可同步七牛云存储的数据到系统，无需登录七牛云直接操作云数据&lt;/li&gt;
&lt;li&gt;支付宝支付：整合了支付宝支付并且提供了测试账号，可自行测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-项目结构" class="anchor" aria-hidden="true" href="#项目结构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目结构&lt;/h4&gt;
&lt;p&gt;项目采用按功能分模块开发方式，将通用的配置放在公共模块，&lt;code&gt;system&lt;/code&gt;模块为系统核心模块也是项目入口模块，&lt;code&gt;logging&lt;/code&gt; 模块为系统的日志模块，&lt;code&gt;tools&lt;/code&gt; 为第三方工具模块，包含了图床、邮件、七牛云、支付宝，&lt;code&gt;generator&lt;/code&gt; 为系统的代码生成模块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;eladmin-common 公共模块
&lt;ul&gt;
&lt;li&gt;annotation 为系统自定义注解&lt;/li&gt;
&lt;li&gt;aspect 自定义注解的切面&lt;/li&gt;
&lt;li&gt;base 提供了Entity、DTO基类和mapstruct的通用mapper&lt;/li&gt;
&lt;li&gt;config 自定义权限实现、redis配置、swagger配置&lt;/li&gt;
&lt;li&gt;exception 项目统一异常的处理&lt;/li&gt;
&lt;li&gt;utils 系统通用工具类&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;eladmin-system 系统核心模块（系统启动入口）
&lt;ul&gt;
&lt;li&gt;config 配置跨域与静态资源，与数据权限
&lt;ul&gt;
&lt;li&gt;thread 线程池相关&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;modules 系统相关模块(登录授权、系统监控、定时任务等)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;eladmin-logging 系统日志模块&lt;/li&gt;
&lt;li&gt;eladmin-tools 系统第三方工具模块&lt;/li&gt;
&lt;li&gt;eladmin-generator 系统代码生成模块&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-系统预览" class="anchor" aria-hidden="true" href="#系统预览"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;系统预览&lt;/h4&gt;
&lt;table&gt;
    &lt;tbody&gt;&lt;tr&gt;
        &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a7964175640235604cf81dc792264b2977b95883/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637376661383134346436383738382e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a7964175640235604cf81dc792264b2977b95883/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637376661383134346436383738382e706e67" data-canonical-src="https://i.loli.net/2019/05/18/5cdf77fa8144d68788.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bdce97e9a731674376e58623c9a2ca0afdb0bc46/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637373633393933653336313737382e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bdce97e9a731674376e58623c9a2ca0afdb0bc46/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637373633393933653336313737382e706e67" data-canonical-src="https://i.loli.net/2019/05/18/5cdf7763993e361778.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b869d38d6c4678532ffbd397229386f22cc0ff1b/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637373633393731643435333631352e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b869d38d6c4678532ffbd397229386f22cc0ff1b/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637373633393731643435333631352e706e67" data-canonical-src="https://i.loli.net/2019/05/18/5cdf7763971d453615.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/79ed99bdc9489a303ba0641a87d9320bfc76bdcd/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637373633326538356136303432332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/79ed99bdc9489a303ba0641a87d9320bfc76bdcd/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637373633326538356136303432332e706e67" data-canonical-src="https://i.loli.net/2019/05/18/5cdf77632e85a60423.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a3caebc5133ae467f1d4296afdf319a147fe8a31/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637373633326234623039303136352e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a3caebc5133ae467f1d4296afdf319a147fe8a31/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637373633326234623039303136352e706e67" data-canonical-src="https://i.loli.net/2019/05/18/5cdf77632b4b090165.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4a06cab3a89ee71f4ab0625ee453fcd3b5aa0213/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637373633393932393237373738332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4a06cab3a89ee71f4ab0625ee453fcd3b5aa0213/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637373633393932393237373738332e706e67" data-canonical-src="https://i.loli.net/2019/05/18/5cdf77639929277783.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;   
 &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d425be891db6969ae6c9efdf6c3bcdc789496828/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637383936396164633338393539392e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d425be891db6969ae6c9efdf6c3bcdc789496828/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30352f31382f3563646637383936396164633338393539392e706e67" data-canonical-src="https://i.loli.net/2019/05/18/5cdf78969adc389599.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-项目捐赠" class="anchor" aria-hidden="true" href="#项目捐赠"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目捐赠&lt;/h4&gt;
&lt;p&gt;项目的发展离不开你的支持，请作者喝杯咖啡吧！ps：辣条也行 ☕！ &lt;a href="https://docs.auauz.net/#/jz" rel="nofollow"&gt;Donate&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-反馈交流" class="anchor" aria-hidden="true" href="#反馈交流"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;反馈交流&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;QQ交流群：891137268&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elunez</author><guid isPermaLink="false">https://github.com/elunez/eladmin</guid><pubDate>Wed, 13 Nov 2019 00:22:00 GMT</pubDate></item><item><title>torvalds/linux #23 in All Languages, This month</title><link>https://github.com/torvalds/linux</link><description>&lt;p&gt;&lt;i&gt;Linux kernel source tree&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Linux kernel
============

There are several guides for kernel developers and users. These guides can
be rendered in a number of formats, like HTML and PDF. Please read
Documentation/admin-guide/README.rst first.

In order to build the documentation, use ``make htmldocs`` or
``make pdfdocs``.  The formatted documentation can also be read online at:

    &lt;a href="https://www.kernel.org/doc/html/latest/" rel="nofollow"&gt;https://www.kernel.org/doc/html/latest/&lt;/a&gt;

There are various text files in the Documentation/ subdirectory,
several of them using the Restructured Text markup notation.

Please read the Documentation/process/changes.rst file, as it contains the
requirements for building and running the kernel, and information about
the problems which may result by upgrading your kernel.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>torvalds</author><guid isPermaLink="false">https://github.com/torvalds/linux</guid><pubDate>Wed, 13 Nov 2019 00:23:00 GMT</pubDate></item><item><title>GoogleChrome/puppeteer #24 in All Languages, This month</title><link>https://github.com/GoogleChrome/puppeteer</link><description>&lt;p&gt;&lt;i&gt;Headless Chrome Node.js API&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-puppeteer" class="anchor" aria-hidden="true" href="#puppeteer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Puppeteer&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://travis-ci.com/GoogleChrome/puppeteer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9846912f1415a702360b4cb4558be9f645794f29/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f476f6f676c654368726f6d652f7075707065746565722f6d61737465722e737667" alt="Linux Build Status" data-canonical-src="https://img.shields.io/travis/com/GoogleChrome/puppeteer/master.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/aslushnikov/puppeteer/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/09ec0c7ea2113e4446fc9b224407d2421514671c/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f61736c7573686e696b6f762f7075707065746565722f6d61737465722e7376673f6c6f676f3d6170707665796f72" alt="Windows Build Status" data-canonical-src="https://img.shields.io/appveyor/ci/aslushnikov/puppeteer/master.svg?logo=appveyor" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://cirrus-ci.com/github/GoogleChrome/puppeteer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71f33232bdba9767b810ee4ce99738096d6627b2/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f476f6f676c654368726f6d652f7075707065746565722e737667" alt="Build Status" data-canonical-src="https://api.cirrus-ci.com/github/GoogleChrome/puppeteer.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/puppeteer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3841cbbe13528e2c04774ebd9129cfc71098befb/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7075707065746565722e737667" alt="NPM puppeteer package" data-canonical-src="https://img.shields.io/npm/v/puppeteer.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/GoogleChrome/puppeteer/issues"&gt;&lt;img src="https://camo.githubusercontent.com/773c7372a7bc5357b78541ef0fbdbc4c1de9f201/68747470733a2f2f697369746d61696e7461696e65642e636f6d2f62616467652f7265736f6c7574696f6e2f476f6f676c654368726f6d652f7075707065746565722e737667" alt="Issue resolution status" data-canonical-src="https://isitmaintained.com/badge/resolution/GoogleChrome/puppeteer.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/10379601/29446482-04f7036a-841f-11e7-9872-91d1fc2ea683.png"&gt;&lt;img src="https://user-images.githubusercontent.com/10379601/29446482-04f7036a-841f-11e7-9872-91d1fc2ea683.png" height="200" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-api--faq--contributing--troubleshooting" class="anchor" aria-hidden="true" href="#api--faq--contributing--troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/GoogleChrome/puppeteer/blob/v2.0.0/docs/api.md"&gt;API&lt;/a&gt; | &lt;a href="#faq"&gt;FAQ&lt;/a&gt; | &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; | &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md"&gt;Troubleshooting&lt;/a&gt;&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;Puppeteer is a Node library which provides a high-level API to control Chrome or Chromium over the &lt;a href="https://chromedevtools.github.io/devtools-protocol/" rel="nofollow"&gt;DevTools Protocol&lt;/a&gt;. Puppeteer runs &lt;a href="https://developers.google.com/web/updates/2017/04/headless-chrome" rel="nofollow"&gt;headless&lt;/a&gt; by default, but can be configured to run full (non-headless) Chrome or Chromium.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h6&gt;&lt;a id="user-content-what-can-i-do" class="anchor" aria-hidden="true" href="#what-can-i-do"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What can I do?&lt;/h6&gt;
&lt;p&gt;Most things that you can do manually in the browser can be done using Puppeteer! Here are a few examples to get you started:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate screenshots and PDFs of pages.&lt;/li&gt;
&lt;li&gt;Crawl a SPA (Single-Page Application) and generate pre-rendered content (i.e. "SSR" (Server-Side Rendering)).&lt;/li&gt;
&lt;li&gt;Automate form submission, UI testing, keyboard input, etc.&lt;/li&gt;
&lt;li&gt;Create an up-to-date, automated testing environment. Run your tests directly in the latest version of Chrome using the latest JavaScript and browser features.&lt;/li&gt;
&lt;li&gt;Capture a &lt;a href="https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference" rel="nofollow"&gt;timeline trace&lt;/a&gt; of your site to help diagnose performance issues.&lt;/li&gt;
&lt;li&gt;Test Chrome Extensions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Give it a spin: &lt;a href="https://try-puppeteer.appspot.com/" rel="nofollow"&gt;https://try-puppeteer.appspot.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;To use Puppeteer in your project, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm i puppeteer
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or "yarn add puppeteer"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: When you install Puppeteer, it downloads a recent version of Chromium (~170MB Mac, ~282MB Linux, ~280MB Win) that is guaranteed to work with the API. To skip the download, see &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/v2.0.0/docs/api.md#environment-variables"&gt;Environment variables&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-puppeteer-core" class="anchor" aria-hidden="true" href="#puppeteer-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;puppeteer-core&lt;/h3&gt;
&lt;p&gt;Since version 1.7.0 we publish the &lt;a href="https://www.npmjs.com/package/puppeteer-core" rel="nofollow"&gt;&lt;code&gt;puppeteer-core&lt;/code&gt;&lt;/a&gt; package,
a version of Puppeteer that doesn't download Chromium by default.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm i puppeteer-core
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or "yarn add puppeteer-core"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;puppeteer-core&lt;/code&gt; is intended to be a lightweight version of Puppeteer for launching an existing browser installation or for connecting to a remote one. Be sure that the version of puppeteer-core you install is compatible with the
browser you intend to connect to.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#puppeteer-vs-puppeteer-core"&gt;puppeteer vs puppeteer-core&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;Puppeteer follows the latest &lt;a href="https://github.com/nodejs/Release#release-schedule"&gt;maintenance LTS&lt;/a&gt; version of Node.&lt;/p&gt;
&lt;p&gt;Note: Prior to v1.18.1, Puppeteer required at least Node v6.4.0. All subsequent versions rely on
Node 8.9.0+. All examples below use async/await which is only supported in Node v7.6.0 or greater.&lt;/p&gt;
&lt;p&gt;Puppeteer will be familiar to people using other browser testing frameworks. You create an instance
of &lt;code&gt;Browser&lt;/code&gt;, open pages, and then manipulate them with &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/v2.0.0/docs/api.md#"&gt;Puppeteer's API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; - navigating to &lt;a href="https://example.com" rel="nofollow"&gt;https://example.com&lt;/a&gt; and saving a screenshot as &lt;em&gt;example.png&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;Save file as &lt;strong&gt;example.js&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;puppeteer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;puppeteer&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);

(&lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;browser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;puppeteer&lt;/span&gt;.&lt;span class="pl-en"&gt;launch&lt;/span&gt;();
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;page&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;browser&lt;/span&gt;.&lt;span class="pl-en"&gt;newPage&lt;/span&gt;();
  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;page&lt;/span&gt;.&lt;span class="pl-en"&gt;goto&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;page&lt;/span&gt;.&lt;span class="pl-en"&gt;screenshot&lt;/span&gt;({path&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;example.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;});

  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;browser&lt;/span&gt;.&lt;span class="pl-c1"&gt;close&lt;/span&gt;();
})();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Execute script on the command line&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;node example.js&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Puppeteer sets an initial page size to 800×600px, which defines the screenshot size. The page size can be customized  with &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/v2.0.0/docs/api.md#pagesetviewportviewport"&gt;&lt;code&gt;Page.setViewport()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; - create a PDF.&lt;/p&gt;
&lt;p&gt;Save file as &lt;strong&gt;hn.js&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;puppeteer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;puppeteer&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);

(&lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;browser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;puppeteer&lt;/span&gt;.&lt;span class="pl-en"&gt;launch&lt;/span&gt;();
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;page&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;browser&lt;/span&gt;.&lt;span class="pl-en"&gt;newPage&lt;/span&gt;();
  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;page&lt;/span&gt;.&lt;span class="pl-en"&gt;goto&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://news.ycombinator.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, {waitUntil&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;networkidle2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;});
  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;page&lt;/span&gt;.&lt;span class="pl-en"&gt;pdf&lt;/span&gt;({path&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hn.pdf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, format&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;});

  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;browser&lt;/span&gt;.&lt;span class="pl-c1"&gt;close&lt;/span&gt;();
})();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Execute script on the command line&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;node hn.js&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/v2.0.0/docs/api.md#pagepdfoptions"&gt;&lt;code&gt;Page.pdf()&lt;/code&gt;&lt;/a&gt; for more information about creating pdfs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; - evaluate script in the context of the page&lt;/p&gt;
&lt;p&gt;Save file as &lt;strong&gt;get-dimensions.js&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;puppeteer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;puppeteer&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);

(&lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;browser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;puppeteer&lt;/span&gt;.&lt;span class="pl-en"&gt;launch&lt;/span&gt;();
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;page&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;browser&lt;/span&gt;.&lt;span class="pl-en"&gt;newPage&lt;/span&gt;();
  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;page&lt;/span&gt;.&lt;span class="pl-en"&gt;goto&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Get the "viewport" of the page, as reported by the page.&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;dimensions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;page&lt;/span&gt;.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; {
      width&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;documentElement&lt;/span&gt;.&lt;span class="pl-smi"&gt;clientWidth&lt;/span&gt;,
      height&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;documentElement&lt;/span&gt;.&lt;span class="pl-smi"&gt;clientHeight&lt;/span&gt;,
      deviceScaleFactor&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-smi"&gt;devicePixelRatio&lt;/span&gt;
    };
  });

  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Dimensions:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, dimensions);

  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;browser&lt;/span&gt;.&lt;span class="pl-c1"&gt;close&lt;/span&gt;();
})();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Execute script on the command line&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;node get-dimensions.js&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/v2.0.0/docs/api.md#pageevaluatepagefunction-args"&gt;&lt;code&gt;Page.evaluate()&lt;/code&gt;&lt;/a&gt; for more information on &lt;code&gt;evaluate&lt;/code&gt; and related methods like &lt;code&gt;evaluateOnNewDocument&lt;/code&gt; and &lt;code&gt;exposeFunction&lt;/code&gt;.&lt;/p&gt;


&lt;h2&gt;&lt;a id="user-content-default-runtime-settings" class="anchor" aria-hidden="true" href="#default-runtime-settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default runtime settings&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. Uses Headless mode&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Puppeteer launches Chromium in &lt;a href="https://developers.google.com/web/updates/2017/04/headless-chrome" rel="nofollow"&gt;headless mode&lt;/a&gt;. To launch a full version of Chromium, set the &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/v2.0.0/docs/api.md#puppeteerlaunchoptions"&gt;&lt;code&gt;headless&lt;/code&gt; option&lt;/a&gt; when launching a browser:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;browser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;puppeteer&lt;/span&gt;.&lt;span class="pl-en"&gt;launch&lt;/span&gt;({headless&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;}); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default is true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2. Runs a bundled version of Chromium&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;By default, Puppeteer downloads and uses a specific version of Chromium so its API
is guaranteed to work out of the box. To use Puppeteer with a different version of Chrome or Chromium,
pass in the executable's path when creating a &lt;code&gt;Browser&lt;/code&gt; instance:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;browser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;puppeteer&lt;/span&gt;.&lt;span class="pl-en"&gt;launch&lt;/span&gt;({executablePath&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/path/to/Chrome&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/v2.0.0/docs/api.md#puppeteerlaunchoptions"&gt;&lt;code&gt;Puppeteer.launch()&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://www.howtogeek.com/202825/what%E2%80%99s-the-difference-between-chromium-and-chrome/" rel="nofollow"&gt;&lt;code&gt;this article&lt;/code&gt;&lt;/a&gt; for a description of the differences between Chromium and Chrome. &lt;a href="https://chromium.googlesource.com/chromium/src/+/master/docs/chromium_browser_vs_google_chrome.md" rel="nofollow"&gt;&lt;code&gt;This article&lt;/code&gt;&lt;/a&gt; describes some differences for Linux users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Creates a fresh user profile&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Puppeteer creates its own Chromium user profile which it &lt;strong&gt;cleans up on every run&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/GoogleChrome/puppeteer/blob/v2.0.0/docs/api.md"&gt;API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GoogleChrome/puppeteer/tree/master/examples/"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/transitive-bullshit/awesome-puppeteer"&gt;Community list of Puppeteer resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-debugging-tips" class="anchor" aria-hidden="true" href="#debugging-tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Turn off headless mode - sometimes it's useful to see what the browser is
displaying. Instead of launching in headless mode, launch a full version of
the browser using  &lt;code&gt;headless: false&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; const browser = await puppeteer.launch({headless: false});
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Slow it down - the &lt;code&gt;slowMo&lt;/code&gt; option slows down Puppeteer operations by the
specified amount of milliseconds. It's another way to help see what's going on.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; const browser = await puppeteer.launch({
   headless: false,
   slowMo: 250 // slow down by 250ms
 });
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Capture console output - You can listen for the &lt;code&gt;console&lt;/code&gt; event.
This is also handy when debugging code in &lt;code&gt;page.evaluate()&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; page.on('console', msg =&amp;gt; console.log('PAGE LOG:', msg.text()));

 await page.evaluate(() =&amp;gt; console.log(`url is ${location.href}`));
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use debugger in application code browser&lt;/p&gt;
&lt;p&gt;There are two execution context: node.js that is running test code, and the browser
running application code being tested. This lets you debug code in the
application code browser; ie code inside &lt;code&gt;evaluate()&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;{devtools: true}&lt;/code&gt; when launching Puppeteer:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;const browser = await puppeteer.launch({devtools: true});&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change default test timeout:&lt;/p&gt;
&lt;p&gt;jest: &lt;code&gt;jest.setTimeout(100000);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;jasmine: &lt;code&gt;jasmine.DEFAULT_TIMEOUT_INTERVAL = 100000;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;mocha: &lt;code&gt;this.timeout(100000);&lt;/code&gt; (don't forget to change test to use &lt;a href="https://stackoverflow.com/a/23492442" rel="nofollow"&gt;function and not '=&amp;gt;'&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add an evaluate statement with &lt;code&gt;debugger&lt;/code&gt; inside / add  &lt;code&gt;debugger&lt;/code&gt; to an existing evaluate statement:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;await page.evaluate(() =&amp;gt; {debugger;});&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The test will now stop executing in the above evaluate statement, and chromium will stop in debug mode.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use debugger in node.js&lt;/p&gt;
&lt;p&gt;This will let you debug test code. For example, you can step over &lt;code&gt;await page.click()&lt;/code&gt; in the node.js script and see the click happen in the application code browser.&lt;/p&gt;
&lt;p&gt;Note that you won't be able to run &lt;code&gt;await page.click()&lt;/code&gt; in
DevTools console due to this &lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=833928" rel="nofollow"&gt;Chromium bug&lt;/a&gt;. So if
you want to try something out, you have to add it to your test file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;debugger;&lt;/code&gt; to your test, eg:
&lt;pre&gt;&lt;code&gt;debugger;
await page.click('a[target=_blank]');
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;headless&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;node --inspect-brk&lt;/code&gt;, eg &lt;code&gt;node --inspect-brk node_modules/.bin/jest tests&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In Chrome open &lt;code&gt;chrome://inspect/#devices&lt;/code&gt; and click &lt;code&gt;inspect&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In the newly opened test browser, type &lt;code&gt;F8&lt;/code&gt; to resume test execution&lt;/li&gt;
&lt;li&gt;Now your &lt;code&gt;debugger&lt;/code&gt; will be hit and you can debug in the test browser&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable verbose logging - internal DevTools protocol traffic
will be logged via the &lt;a href="https://github.com/visionmedia/debug"&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/a&gt; module under the &lt;code&gt;puppeteer&lt;/code&gt; namespace.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; # Basic verbose logging
 env DEBUG="puppeteer:*" node script.js

 # Protocol traffic can be rather noisy. This example filters out all Network domain messages
 env DEBUG="puppeteer:*" env DEBUG_COLORS=true node script.js 2&amp;gt;&amp;amp;1 | grep -v '"Network'
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debug your Puppeteer (node) code easily, using &lt;a href="https://github.com/GoogleChromeLabs/ndb"&gt;ndb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;npm install -g ndb&lt;/code&gt; (or even better, use &lt;a href="https://github.com/zkat/npx"&gt;npx&lt;/a&gt;!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;add a &lt;code&gt;debugger&lt;/code&gt; to your Puppeteer (node) code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;add &lt;code&gt;ndb&lt;/code&gt; (or &lt;code&gt;npx ndb&lt;/code&gt;) before your test command. For example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ndb jest&lt;/code&gt; or &lt;code&gt;ndb mocha&lt;/code&gt; (or &lt;code&gt;npx ndb jest&lt;/code&gt; / &lt;code&gt;npx ndb mocha&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;debug your test inside chromium like a boss!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-contributing-to-puppeteer" class="anchor" aria-hidden="true" href="#contributing-to-puppeteer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Puppeteer&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get an overview of Puppeteer development.&lt;/p&gt;

&lt;h1&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h1&gt;
&lt;h4&gt;&lt;a id="user-content-q-who-maintains-puppeteer" class="anchor" aria-hidden="true" href="#q-who-maintains-puppeteer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: Who maintains Puppeteer?&lt;/h4&gt;
&lt;p&gt;The Chrome DevTools team maintains the library, but we'd love your help and expertise on the project!
See &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-q-what-are-puppeteers-goals-and-principles" class="anchor" aria-hidden="true" href="#q-what-are-puppeteers-goals-and-principles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: What are Puppeteer’s goals and principles?&lt;/h4&gt;
&lt;p&gt;The goals of the project are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide a slim, canonical library that highlights the capabilities of the &lt;a href="https://chromedevtools.github.io/devtools-protocol/" rel="nofollow"&gt;DevTools Protocol&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Provide a reference implementation for similar testing libraries. Eventually, these other frameworks could adopt Puppeteer as their foundational layer.&lt;/li&gt;
&lt;li&gt;Grow the adoption of headless/automated browser testing.&lt;/li&gt;
&lt;li&gt;Help dogfood new DevTools Protocol features...and catch bugs!&lt;/li&gt;
&lt;li&gt;Learn more about the pain points of automated browser testing and help fill those gaps.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We adapt &lt;a href="https://www.chromium.org/developers/core-principles" rel="nofollow"&gt;Chromium principles&lt;/a&gt; to help us drive product decisions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt;: Puppeteer has almost zero performance overhead over an automated page.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: Puppeteer operates off-process with respect to Chromium, making it safe to automate potentially malicious pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stability&lt;/strong&gt;: Puppeteer should not be flaky and should not leak memory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;: Puppeteer provides a high-level API that’s easy to use, understand, and debug.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-q-is-puppeteer-replacing-seleniumwebdriver" class="anchor" aria-hidden="true" href="#q-is-puppeteer-replacing-seleniumwebdriver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: Is Puppeteer replacing Selenium/WebDriver?&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;No&lt;/strong&gt;. Both projects are valuable for very different reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Selenium/WebDriver focuses on cross-browser automation; its value proposition is a single standard API that works across all major browsers.&lt;/li&gt;
&lt;li&gt;Puppeteer focuses on Chromium; its value proposition is richer functionality and higher reliability.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That said, you &lt;strong&gt;can&lt;/strong&gt; use Puppeteer to run tests against Chromium, e.g. using the community-driven &lt;a href="https://github.com/smooth-code/jest-puppeteer"&gt;jest-puppeteer&lt;/a&gt;. While this probably shouldn’t be your only testing solution, it does have a few good points compared to WebDriver:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Puppeteer requires zero setup and comes bundled with the Chromium version it works best with, making it &lt;a href="https://github.com/GoogleChrome/puppeteer/#getting-started"&gt;very easy to start with&lt;/a&gt;. At the end of the day, it’s better to have a few tests running chromium-only, than no tests at all.&lt;/li&gt;
&lt;li&gt;Puppeteer has event-driven architecture, which removes a lot of potential flakiness. There’s no need for evil “sleep(1000)” calls in puppeteer scripts.&lt;/li&gt;
&lt;li&gt;Puppeteer runs headless by default, which makes it fast to run. Puppeteer v1.5.0 also exposes browser contexts, making it possible to efficiently parallelize test execution.&lt;/li&gt;
&lt;li&gt;Puppeteer shines when it comes to debugging: flip the “headless” bit to false, add “slowMo”, and you’ll see what the browser is doing. You can even open Chrome DevTools to inspect the test environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-q-why-doesnt-puppeteer-vxxx-work-with-chromium-vyyy" class="anchor" aria-hidden="true" href="#q-why-doesnt-puppeteer-vxxx-work-with-chromium-vyyy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: Why doesn’t Puppeteer v.XXX work with Chromium v.YYY?&lt;/h4&gt;
&lt;p&gt;We see Puppeteer as an &lt;strong&gt;indivisible entity&lt;/strong&gt; with Chromium. Each version of Puppeteer bundles a specific version of Chromium – &lt;strong&gt;the only&lt;/strong&gt; version it is guaranteed to work with.&lt;/p&gt;
&lt;p&gt;This is not an artificial constraint: A lot of work on Puppeteer is actually taking place in the Chromium repository. Here’s a typical story:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A Puppeteer bug is reported: &lt;a href="https://github.com/GoogleChrome/puppeteer/issues/2709"&gt;https://github.com/GoogleChrome/puppeteer/issues/2709&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;It turned out this is an issue with the DevTools protocol, so we’re fixing it in Chromium: &lt;a href="https://chromium-review.googlesource.com/c/chromium/src/+/1102154" rel="nofollow"&gt;https://chromium-review.googlesource.com/c/chromium/src/+/1102154&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Once the upstream fix is landed, we roll updated Chromium into Puppeteer: &lt;a href="https://github.com/GoogleChrome/puppeteer/pull/2769"&gt;https://github.com/GoogleChrome/puppeteer/pull/2769&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, oftentimes it is desirable to use Puppeteer with the official Google Chrome rather than Chromium. For this to work, you should install a &lt;code&gt;puppeteer-core&lt;/code&gt; version that corresponds to the Chrome version.&lt;/p&gt;
&lt;p&gt;For example, in order to drive Chrome 71 with puppeteer-core, use &lt;code&gt;chrome-71&lt;/code&gt; npm tag:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install puppeteer-core@chrome-71&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-q-which-chromium-version-does-puppeteer-use" class="anchor" aria-hidden="true" href="#q-which-chromium-version-does-puppeteer-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: Which Chromium version does Puppeteer use?&lt;/h4&gt;
&lt;p&gt;Look for &lt;code&gt;chromium_revision&lt;/code&gt; in &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/master/package.json"&gt;package.json&lt;/a&gt;. To find the corresponding Chromium commit and version number, search for the revision prefixed by an &lt;code&gt;r&lt;/code&gt; in &lt;a href="https://omahaproxy.appspot.com/" rel="nofollow"&gt;OmahaProxy&lt;/a&gt;'s "Find Releases" section.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-q-whats-considered-a-navigation" class="anchor" aria-hidden="true" href="#q-whats-considered-a-navigation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: What’s considered a “Navigation”?&lt;/h4&gt;
&lt;p&gt;From Puppeteer’s standpoint, &lt;strong&gt;“navigation” is anything that changes a page’s URL&lt;/strong&gt;.
Aside from regular navigation where the browser hits the network to fetch a new document from the web server, this includes &lt;a href="https://www.w3.org/TR/html5/single-page.html#scroll-to-fragid" rel="nofollow"&gt;anchor navigations&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/History_API" rel="nofollow"&gt;History API&lt;/a&gt; usage.&lt;/p&gt;
&lt;p&gt;With this definition of “navigation,” &lt;strong&gt;Puppeteer works seamlessly with single-page applications.&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-q-whats-the-difference-between-a-trusted-and-untrusted-input-event" class="anchor" aria-hidden="true" href="#q-whats-the-difference-between-a-trusted-and-untrusted-input-event"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: What’s the difference between a “trusted" and "untrusted" input event?&lt;/h4&gt;
&lt;p&gt;In browsers, input events could be divided into two big groups: trusted vs. untrusted.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Trusted events&lt;/strong&gt;: events generated by users interacting with the page, e.g. using a mouse or keyboard.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Untrusted event&lt;/strong&gt;: events generated by Web APIs, e.g. &lt;code&gt;document.createEvent&lt;/code&gt; or &lt;code&gt;element.click()&lt;/code&gt; methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Websites can distinguish between these two groups:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using an &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Event/isTrusted" rel="nofollow"&gt;&lt;code&gt;Event.isTrusted&lt;/code&gt;&lt;/a&gt; event flag&lt;/li&gt;
&lt;li&gt;sniffing for accompanying events. For example, every trusted &lt;code&gt;'click'&lt;/code&gt; event is preceded by &lt;code&gt;'mousedown'&lt;/code&gt; and &lt;code&gt;'mouseup'&lt;/code&gt; events.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For automation purposes it’s important to generate trusted events. &lt;strong&gt;All input events generated with Puppeteer are trusted and fire proper accompanying events.&lt;/strong&gt; If, for some reason, one needs an untrusted event, it’s always possible to hop into a page context with &lt;code&gt;page.evaluate&lt;/code&gt; and generate a fake event:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;page&lt;/span&gt;.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;button[type=submit]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;click&lt;/span&gt;();
});&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-q-what-features-does-puppeteer-not-support" class="anchor" aria-hidden="true" href="#q-what-features-does-puppeteer-not-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: What features does Puppeteer not support?&lt;/h4&gt;
&lt;p&gt;You may find that Puppeteer does not behave as expected when controlling pages that incorporate audio and video. (For example, &lt;a href="https://github.com/GoogleChrome/puppeteer/issues/291"&gt;video playback/screenshots is likely to fail&lt;/a&gt;.) There are two reasons for this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Puppeteer is bundled with Chromium — not Chrome — and so by default, it inherits all of &lt;a href="https://www.chromium.org/audio-video" rel="nofollow"&gt;Chromium's media-related limitations&lt;/a&gt;. This means that Puppeteer does not support licensed formats such as AAC or H.264. (However, it is possible to force Puppeteer to use a separately-installed version Chrome instead of Chromium via the &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/v2.0.0/docs/api.md#puppeteerlaunchoptions"&gt;&lt;code&gt;executablePath&lt;/code&gt; option to &lt;code&gt;puppeteer.launch&lt;/code&gt;&lt;/a&gt;. You should only use this configuration if you need an official release of Chrome that supports these media formats.)&lt;/li&gt;
&lt;li&gt;Since Puppeteer (in all configurations) controls a desktop version of Chromium/Chrome, features that are only supported by the mobile version of Chrome are not supported. This means that Puppeteer &lt;a href="https://caniuse.com/#feat=http-live-streaming" rel="nofollow"&gt;does not support HTTP Live Streaming (HLS)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-q-i-am-having-trouble-installing--running-puppeteer-in-my-test-environment-where-should-i-look-for-help" class="anchor" aria-hidden="true" href="#q-i-am-having-trouble-installing--running-puppeteer-in-my-test-environment-where-should-i-look-for-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: I am having trouble installing / running Puppeteer in my test environment. Where should I look for help?&lt;/h4&gt;
&lt;p&gt;We have a &lt;a href="https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md"&gt;troubleshooting&lt;/a&gt; guide for various operating systems that lists the required dependencies.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-q-how-do-i-trytest-a-prerelease-version-of-puppeteer" class="anchor" aria-hidden="true" href="#q-how-do-i-trytest-a-prerelease-version-of-puppeteer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: How do I try/test a prerelease version of Puppeteer?&lt;/h4&gt;
&lt;p&gt;You can check out this repo or install the latest prerelease from npm:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm i --save puppeteer@next&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please note that prerelease may be unstable and contain bugs.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-q-i-have-more-questions-where-do-i-ask" class="anchor" aria-hidden="true" href="#q-i-have-more-questions-where-do-i-ask"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: I have more questions! Where do I ask?&lt;/h4&gt;
&lt;p&gt;There are many ways to get help on Puppeteer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/GoogleChrome/puppeteer/issues"&gt;bugtracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/puppeteer" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://join.slack.com/t/puppeteer/shared_invite/enQtMzU4MjIyMDA5NTM4LWI0YTE0MjM0NWQzYmE2MTRmNjM1ZTBkN2MxNmJmNTIwNTJjMmFhOWFjMGExMDViYjk2YjU2ZmYzMmE1NmExYzc" rel="nofollow"&gt;slack channel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure to search these channels before posting your question.&lt;/p&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>GoogleChrome</author><guid isPermaLink="false">https://github.com/GoogleChrome/puppeteer</guid><pubDate>Wed, 13 Nov 2019 00:24:00 GMT</pubDate></item></channel></rss>