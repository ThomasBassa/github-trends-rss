<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: All Languages, This month</title><link>https://github.com/trending/all?since=monthly</link><description>The top repositories on GitHub for all, measured monthly</description><pubDate>Sun, 01 Dec 2019 01:05:56 GMT</pubDate><lastBuildDate>Sun, 01 Dec 2019 01:05:56 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>CorentinJ/Real-Time-Voice-Cloning #1 in All Languages, This month</title><link>https://github.com/CorentinJ/Real-Time-Voice-Cloning</link><description>&lt;p&gt;&lt;i&gt;Clone a voice in 5 seconds to generate arbitrary speech in real-time&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-real-time-voice-cloning" class="anchor" aria-hidden="true" href="#real-time-voice-cloning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Real-Time Voice Cloning&lt;/h1&gt;
&lt;p&gt;This repository is an implementation of &lt;a href="https://arxiv.org/pdf/1806.04558.pdf" rel="nofollow"&gt;Transfer Learning from Speaker Verification to
Multispeaker Text-To-Speech Synthesis&lt;/a&gt; (SV2TTS) with a vocoder that works in real-time. Feel free to check &lt;a href="https://matheo.uliege.be/handle/2268.2/6801" rel="nofollow"&gt;my thesis&lt;/a&gt; if you're curious or if you're looking for info I haven't documented yet (don't hesitate to make an issue for that too). Mostly I would recommend giving a quick look to the figures beyond the introduction.&lt;/p&gt;
&lt;p&gt;SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video demonstration&lt;/strong&gt; (click the picture):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=-O_hYhToKoA" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c33f78be8afe656503da974c478ea2ba2647db7/68747470733a2f2f692e696d6775722e636f6d2f386c46556c677a2e706e67" alt="Toolbox demo" data-canonical-src="https://i.imgur.com/8lFUlgz.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-papers-implemented" class="anchor" aria-hidden="true" href="#papers-implemented"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Papers implemented&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;th&gt;Designation&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;Implementation source&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://arxiv.org/pdf/1806.04558.pdf" rel="nofollow"&gt;&lt;strong&gt;1806.04558&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;SV2TTS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;This repo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://arxiv.org/pdf/1802.08435.pdf" rel="nofollow"&gt;1802.08435&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;WaveRNN (vocoder)&lt;/td&gt;
&lt;td&gt;Efficient Neural Audio Synthesis&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/fatchord/WaveRNN"&gt;fatchord/WaveRNN&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://arxiv.org/pdf/1712.05884.pdf" rel="nofollow"&gt;1712.05884&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Tacotron 2 (synthesizer)&lt;/td&gt;
&lt;td&gt;Natural TTS Synthesis by Conditioning Wavenet on Mel Spectrogram Predictions&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Rayhane-mamah/Tacotron-2"&gt;Rayhane-mamah/Tacotron-2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://arxiv.org/pdf/1710.10467.pdf" rel="nofollow"&gt;1710.10467&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;GE2E (encoder)&lt;/td&gt;
&lt;td&gt;Generalized End-To-End Loss for Speaker Verification&lt;/td&gt;
&lt;td&gt;This repo&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;13/11/19&lt;/strong&gt;: I'm sorry that I can't maintain this repo as much as I wish I could. I'm working full time on improving voice cloning techniques and I don't have the time to share my improvements here. Plus this repo relies on a lot of old tensorflow code and it's hard to work with. If you're a researcher, then this repo might be of use to you. &lt;strong&gt;If you just want to clone your voice&lt;/strong&gt;, do check our demo on &lt;a href="https://www.resemble.ai/" rel="nofollow"&gt;Resemble.AI&lt;/a&gt; - it can run for free but it will be a bit slower, and it will give much better results than this repo.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;20/08/19:&lt;/strong&gt; I'm working on &lt;a href="https://github.com/resemble-ai/Resemblyzer"&gt;resemblyzer&lt;/a&gt;, an independent package for the voice encoder. You can use your trained encoder models from this repo with it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;06/07/19:&lt;/strong&gt; Need to run within a docker container on a remote server? See &lt;a href="https://sean.lane.sh/posts/2019/07/Running-the-Real-Time-Voice-Cloning-project-in-Docker/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;25/06/19:&lt;/strong&gt; Experimental support for low-memory GPUs (~2gb) added for the synthesizer. Pass &lt;code&gt;--low_mem&lt;/code&gt; to &lt;code&gt;demo_cli.py&lt;/code&gt; or &lt;code&gt;demo_toolbox.py&lt;/code&gt; to enable it. It adds a big overhead, so it's not recommended if you have enough VRAM.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;p&gt;You will need the following whether you plan to use the toolbox only or to retrain the models.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python 3.7&lt;/strong&gt;. Python 3.6 might work too, but I wouldn't go lower because I make extensive use of pathlib.&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; to install the necessary packages. Additionally you will need &lt;a href="https://pytorch.org/get-started/locally/" rel="nofollow"&gt;PyTorch&lt;/a&gt; (&amp;gt;=1.0.1).&lt;/p&gt;
&lt;p&gt;A GPU is mandatory, but you don't necessarily need a high tier GPU if you only want to use the toolbox.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pretrained-models" class="anchor" aria-hidden="true" href="#pretrained-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pretrained models&lt;/h3&gt;
&lt;p&gt;Download the latest &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/Pretrained-models"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-preliminary" class="anchor" aria-hidden="true" href="#preliminary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preliminary&lt;/h3&gt;
&lt;p&gt;Before you download any dataset, you can begin by testing your configuration with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python demo_cli.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If all tests pass, you're good to go.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-datasets" class="anchor" aria-hidden="true" href="#datasets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Datasets&lt;/h3&gt;
&lt;p&gt;For playing with the toolbox alone, I only recommend downloading &lt;a href="http://www.openslr.org/resources/12/train-clean-100.tar.gz" rel="nofollow"&gt;&lt;code&gt;LibriSpeech/train-clean-100&lt;/code&gt;&lt;/a&gt;. Extract the contents as &lt;code&gt;&amp;lt;datasets_root&amp;gt;/LibriSpeech/train-clean-100&lt;/code&gt; where &lt;code&gt;&amp;lt;datasets_root&amp;gt;&lt;/code&gt; is a directory of your choosing. Other datasets are supported in the toolbox, see &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/Training#datasets"&gt;here&lt;/a&gt;. You're free not to download any dataset, but then you will need your own data as audio files or you will have to record it with the toolbox.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-toolbox" class="anchor" aria-hidden="true" href="#toolbox"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Toolbox&lt;/h3&gt;
&lt;p&gt;You can then try the toolbox:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python demo_toolbox.py -d &amp;lt;datasets_root&amp;gt;&lt;/code&gt;&lt;br&gt;
or&lt;br&gt;
&lt;code&gt;python demo_toolbox.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;depending on whether you downloaded any datasets. If you are running an X-server or if you have the error &lt;code&gt;Aborted (core dumped)&lt;/code&gt;, see &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/issues/11#issuecomment-504733590"&gt;this issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-wiki" class="anchor" aria-hidden="true" href="#wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wiki&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How it all works&lt;/strong&gt; (WIP - &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/How-it-all-works"&gt;stub&lt;/a&gt;, you might be better off reading my thesis until it's done)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/Training"&gt;&lt;strong&gt;Training models yourself&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Training with other data/languages&lt;/strong&gt; (WIP - see &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/issues/30#issuecomment-507864097"&gt;here&lt;/a&gt; for now)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/TODO-&amp;amp;-planned-features"&gt;&lt;strong&gt;TODO and planned features&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions--issues" class="anchor" aria-hidden="true" href="#contributions--issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions &amp;amp; Issues&lt;/h2&gt;
&lt;p&gt;I'm working full-time as of June 2019. I don't have time to maintain this repo nor reply to issues. Sorry.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>CorentinJ</author><guid isPermaLink="false">https://github.com/CorentinJ/Real-Time-Voice-Cloning</guid><pubDate>Sun, 01 Dec 2019 00:01:00 GMT</pubDate></item><item><title>openai/gpt-2 #2 in All Languages, This month</title><link>https://github.com/openai/gpt-2</link><description>&lt;p&gt;&lt;i&gt;Code for the paper "Language Models are Unsupervised Multitask Learners"&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Archive (code is provided as-is, no updates expected)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-gpt-2" class="anchor" aria-hidden="true" href="#gpt-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gpt-2&lt;/h1&gt;
&lt;p&gt;Code and models from the paper &lt;a href="https://d4mucfpksywv.cloudfront.net/better-language-models/language-models.pdf" rel="nofollow"&gt;"Language Models are Unsupervised Multitask Learners"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can read about GPT-2 and its staged release in our &lt;a href="https://blog.openai.com/better-language-models/" rel="nofollow"&gt;original blog post&lt;/a&gt;, &lt;a href="https://openai.com/blog/gpt-2-6-month-follow-up/" rel="nofollow"&gt;6 month follow-up post&lt;/a&gt;, and &lt;a href="https://www.openai.com/blog/gpt-2-1-5b-release/" rel="nofollow"&gt;final post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We have also &lt;a href="https://github.com/openai/gpt-2-output-dataset"&gt;released a dataset&lt;/a&gt; for researchers to study their behaviors.&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;*&lt;/sup&gt; &lt;em&gt;Note that our original parameter counts were wrong due to an error (in our previous blog posts and paper).  Thus you may have seen small referred to as 117M and medium referred to as 345M.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;This repository is meant to be a starting point for researchers and engineers to experiment with GPT-2.&lt;/p&gt;
&lt;p&gt;For basic information, see our &lt;a href="./model_card.md"&gt;model card&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-some-caveats" class="anchor" aria-hidden="true" href="#some-caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some caveats&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GPT-2 models' robustness and worst case behaviors are not well-understood.  As with any machine-learned model, carefully evaluate GPT-2 for your use case, especially if used without fine-tuning or in safety-critical applications where reliability is important.&lt;/li&gt;
&lt;li&gt;The dataset our GPT-2 models were trained on contains many texts with &lt;a href="https://twitter.com/TomerUllman/status/1101485289720242177" rel="nofollow"&gt;biases&lt;/a&gt; and factual inaccuracies, and thus GPT-2 models are likely to be biased and inaccurate as well.&lt;/li&gt;
&lt;li&gt;To avoid having samples mistaken as human-written, we recommend clearly labeling samples as synthetic before wide dissemination.  Our models are often incoherent or inaccurate in subtle ways, which takes more than a quick read for a human to notice.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-work-with-us" class="anchor" aria-hidden="true" href="#work-with-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Work with us&lt;/h3&gt;
&lt;p&gt;Please &lt;a href="mailto:languagequestions@openai.com"&gt;let us know&lt;/a&gt; if you’re doing interesting research with or working on applications of GPT-2!  We’re especially interested in hearing from and potentially working with those who are studying&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Potential malicious use cases and defenses against them (e.g. the detectability of synthetic text)&lt;/li&gt;
&lt;li&gt;The extent of problematic content (e.g. bias) being baked into the models and effective mitigations&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./DEVELOPERS.md"&gt;DEVELOPERS.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./CONTRIBUTORS.md"&gt;CONTRIBUTORS.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;Please use the following bibtex entry:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{radford2019language,
  title={Language Models are Unsupervised Multitask Learners},
  author={Radford, Alec and Wu, Jeff and Child, Rewon and Luan, David and Amodei, Dario and Sutskever, Ilya},
  year={2019}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-future-work" class="anchor" aria-hidden="true" href="#future-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Future work&lt;/h2&gt;
&lt;p&gt;We may release code for evaluating the models on various benchmarks.&lt;/p&gt;
&lt;p&gt;We are still considering release of the larger models.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="./LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openai</author><guid isPermaLink="false">https://github.com/openai/gpt-2</guid><pubDate>Sun, 01 Dec 2019 00:02:00 GMT</pubDate></item><item><title>microsoft/vscode #3 in All Languages, This month</title><link>https://github.com/microsoft/vscode</link><description>&lt;p&gt;&lt;i&gt;Visual Studio Code&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-visual-studio-code---open-source-code---oss" class="anchor" aria-hidden="true" href="#visual-studio-code---open-source-code---oss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio Code - Open Source ("Code - OSS")&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.azure.com/vscode/VSCode/_build/latest?definitionId=12" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f20567452d9138054e0ca9b7140e5b3d2ffb11d8/68747470733a2f2f6465762e617a7572652e636f6d2f7673636f64652f5653436f64652f5f617069732f6275696c642f7374617475732f5653253230436f64653f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/vscode/VSCode/_apis/build/status/VS%20Code?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc"&gt;&lt;img src="https://camo.githubusercontent.com/cf974a4808e0dbc611bbcef98acfc6677af4689f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f4d6963726f736f66742f7673636f64652f666561747572652d726571756573742e737667" alt="Feature Requests" data-canonical-src="https://img.shields.io/github/issues/Microsoft/vscode/feature-request.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Microsoft/vscode/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Abug"&gt;&lt;img src="https://camo.githubusercontent.com/130b23a27ab8ee345bf6d02187f49b287aa1521f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f4d6963726f736f66742f7673636f64652f6275672e737667" alt="Bugs" data-canonical-src="https://img.shields.io/github/issues/Microsoft/vscode/bug.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Microsoft/vscode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/750ae6a0dbd84e32738e6d4a21a79ce5fb51c21b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e2532306769747465722d79656c6c6f772e737667" alt="Gitter" data-canonical-src="https://img.shields.io/badge/chat-on%20gitter-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-repository" class="anchor" aria-hidden="true" href="#the-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Repository&lt;/h2&gt;
&lt;p&gt;This repository ("&lt;code&gt;Code - OSS&lt;/code&gt;") is where we (Microsoft) develop the &lt;a href="https://code.visualstudio.com" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; product. Not only do we work on code and issues here, we also publish our &lt;a href="https://github.com/microsoft/vscode/wiki/Roadmap"&gt;roadmap&lt;/a&gt;, &lt;a href="https://github.com/microsoft/vscode/wiki/Iteration-Plans"&gt;monthly iteration plans&lt;/a&gt;, and our &lt;a href="https://github.com/microsoft/vscode/wiki/Running-the-Endgame"&gt;endgame plans&lt;/a&gt;. This source code is available to everyone under the standard &lt;a href="https://github.com/microsoft/vscode/blob/master/LICENSE.txt"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-visual-studio-code" class="anchor" aria-hidden="true" href="#visual-studio-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio Code&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1487073/58344409-70473b80-7e0a-11e9-8570-b2efc6f8fa44.png"&gt;&lt;img alt="VS Code in action" src="https://user-images.githubusercontent.com/1487073/58344409-70473b80-7e0a-11e9-8570-b2efc6f8fa44.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; is a distribution of the &lt;code&gt;Code - OSS&lt;/code&gt; repository with Microsoft specific customizations released under a traditional &lt;a href="https://code.visualstudio.com/License/" rel="nofollow"&gt;Microsoft product license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; combines the simplicity of a code editor with what developers need for their core edit-build-debug cycle. It provides comprehensive code editing, navigation, and understanding support along with lightweight debugging, a rich extensibility model, and lightweight integration with existing tools.&lt;/p&gt;
&lt;p&gt;Visual Studio Code is updated monthly with new features and bug fixes. You can download it for Windows, macOS, and Linux on &lt;a href="https://code.visualstudio.com/Download" rel="nofollow"&gt;Visual Studio Code's website&lt;/a&gt;. To get the latest releases every day, install the &lt;a href="https://code.visualstudio.com/insiders" rel="nofollow"&gt;Insiders build&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;There are many ways in which you can participate in the project, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/vscode/issues"&gt;Submit bugs and feature requests&lt;/a&gt;, and help us verify as they are checked in&lt;/li&gt;
&lt;li&gt;Review &lt;a href="https://github.com/microsoft/vscode/pulls"&gt;source code changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Review the &lt;a href="https://github.com/microsoft/vscode-docs"&gt;documentation&lt;/a&gt; and make pull requests for anything from typos to new content&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are interested in fixing issues and contributing directly to the code base,
please see the document &lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute"&gt;How to Contribute&lt;/a&gt;, which covers the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run"&gt;How to build and run from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute#debugging"&gt;The development workflow, including debugging and running tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/Coding-Guidelines"&gt;Coding guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute#pull-requests"&gt;Submitting pull requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/vscode/wiki/How-to-Contribute#where-to-contribute"&gt;Finding an issue to work on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aka.ms/vscodeloc" rel="nofollow"&gt;Contributing to translations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-feedback" class="anchor" aria-hidden="true" href="#feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ask a question on &lt;a href="https://stackoverflow.com/questions/tagged/vscode" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CONTRIBUTING.md"&gt;Request a new feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Up vote &lt;a href="https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc"&gt;popular feature requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/issues"&gt;File an issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Follow &lt;a href="https://twitter.com/code" rel="nofollow"&gt;@code&lt;/a&gt; and let us know what you think!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Projects&lt;/h2&gt;
&lt;p&gt;Many of the core components and extensions to VS Code live in their own repositories on GitHub. For example, the &lt;a href="https://github.com/microsoft/vscode-node-debug"&gt;node debug adapter&lt;/a&gt; and the &lt;a href="https://github.com/microsoft/vscode-mono-debug"&gt;mono debug adapter&lt;/a&gt; have their own repositories. For a complete list, please visit the &lt;a href="https://github.com/Microsoft/vscode/wiki/Related-Projects"&gt;Related Projects&lt;/a&gt; page on our &lt;a href="https://github.com/Microsoft/vscode/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bundled-extensions" class="anchor" aria-hidden="true" href="#bundled-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bundled Extensions&lt;/h2&gt;
&lt;p&gt;VS Code includes a set of built-in extensions located in the &lt;a href="extensions"&gt;extensions&lt;/a&gt; folder, including grammars and snippets for many languages. Extensions that provide rich language support (code completion, Go to Definition) for a language have the suffix &lt;code&gt;language-features&lt;/code&gt;. For example, the &lt;code&gt;json&lt;/code&gt; extension provides coloring for &lt;code&gt;JSON&lt;/code&gt; and the &lt;code&gt;json-language-features&lt;/code&gt; provides rich language support for &lt;code&gt;JSON&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt;
&lt;p&gt;Licensed under the &lt;a href="LICENSE.txt"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/vscode</guid><pubDate>Sun, 01 Dec 2019 00:03:00 GMT</pubDate></item><item><title>hankcs/HanLP #4 in All Languages, This month</title><link>https://github.com/hankcs/HanLP</link><description>&lt;p&gt;&lt;i&gt;自然语言处理 中文分词 词性标注 命名实体识别 依存句法分析 新词发现  关键词短语提取 自动摘要 文本分类聚类 拼音简繁&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hanlp-han-language-processing" class="anchor" aria-hidden="true" href="#hanlp-han-language-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HanLP: Han Language Processing&lt;/h1&gt;
&lt;p&gt;汉语言处理包
&lt;a href="https://mvnrepository.com/artifact/com.hankcs/hanlp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0d06421cbca00bb4087442e8b19c55068c0e30dd/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d6d657461646174612f762f687474702f63656e7472616c2e6d6176656e2e6f72672f6d6176656e322f636f6d2f68616e6b63732f68616e6c702f6d6176656e2d6d657461646174612e786d6c2e737667" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-metadata/v/http/central.maven.org/maven2/com/hankcs/hanlp/maven-metadata.xml.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/hankcs/hanlp/releases"&gt;&lt;img src="https://camo.githubusercontent.com/697f43a3d9d012256876858245cad40f6606b7b5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f68616e6b63732f48616e4c502e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/hankcs/HanLP.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8cb994f6c4a156c623fe057fccd7fb7d7d2e8c9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322d3445423142412e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/samurais/hanlp-api/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b0c76b0fa02220759e2017d2b856a9487ea31f9/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f73746172732f73616d75726169732f68616e6c702d6170692e7376673f6d61784167653d32353932303030" alt="Docker Stars" data-canonical-src="https://img.shields.io/docker/stars/samurais/hanlp-api.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;HanLP是一系列模型与算法组成的NLP工具包，目标是普及自然语言处理在生产环境中的应用。HanLP具备功能完善、性能高效、架构清晰、语料时新、可自定义的特点。内部算法经过工业界和学术界考验，配套书籍&lt;a href="http://nlp.hankcs.com/book.php" rel="nofollow"&gt;《自然语言处理入门》&lt;/a&gt;已经出版。&lt;/p&gt;
&lt;p&gt;HanLP提供下列功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文分词
&lt;ul&gt;
&lt;li&gt;HMM-Bigram（速度与精度最佳平衡；一百兆内存）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#1-%E7%AC%AC%E4%B8%80%E4%B8%AAdemo"&gt;最短路分词&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#5-n-%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E5%88%86%E8%AF%8D"&gt;N-最短路分词&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;由字构词（侧重精度，全世界最大语料库，可识别新词；适合NLP任务）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;感知机分词&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#6-crf%E5%88%86%E8%AF%8D"&gt;CRF分词&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;词典分词（侧重速度，每秒数千万字符；省内存）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#7-%E6%9E%81%E9%80%9F%E8%AF%8D%E5%85%B8%E5%88%86%E8%AF%8D"&gt;极速词典分词&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;所有分词器都支持：
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#4-%E7%B4%A2%E5%BC%95%E5%88%86%E8%AF%8D"&gt;索引全切分模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#8-%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%8D%E5%85%B8"&gt;用户自定义词典&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/blob/master/src/test/java/com/hankcs/demo/DemoPerceptronLexicalAnalyzer.java#L29"&gt;兼容繁体中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki"&gt;训练用户自己的领域模型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;词性标注
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/blob/master/src/main/java/com/hankcs/hanlp/seg/Segment.java#L584"&gt;HMM词性标注&lt;/a&gt;（速度快）&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;感知机词性标注&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP/wiki/CRF%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90"&gt;CRF词性标注&lt;/a&gt;（精度高）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;命名实体识别
&lt;ul&gt;
&lt;li&gt;基于HMM角色标注的命名实体识别 （速度快）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#9-%E4%B8%AD%E5%9B%BD%E4%BA%BA%E5%90%8D%E8%AF%86%E5%88%AB"&gt;中国人名识别&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#10-%E9%9F%B3%E8%AF%91%E4%BA%BA%E5%90%8D%E8%AF%86%E5%88%AB"&gt;音译人名识别&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#11-%E6%97%A5%E6%9C%AC%E4%BA%BA%E5%90%8D%E8%AF%86%E5%88%AB"&gt;日本人名识别&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#12-%E5%9C%B0%E5%90%8D%E8%AF%86%E5%88%AB"&gt;地名识别&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP#13-%E6%9C%BA%E6%9E%84%E5%90%8D%E8%AF%86%E5%88%AB"&gt;实体机构名识别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基于线性模型的命名实体识别（精度高）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;感知机命名实体识别&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP/wiki/CRF%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90"&gt;CRF命名实体识别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;关键词提取
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#14-%E5%85%B3%E9%94%AE%E8%AF%8D%E6%8F%90%E5%8F%96"&gt;TextRank关键词提取&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;自动摘要
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#15-%E8%87%AA%E5%8A%A8%E6%91%98%E8%A6%81"&gt;TextRank自动摘要&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;短语提取
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#16-%E7%9F%AD%E8%AF%AD%E6%8F%90%E5%8F%96"&gt;基于互信息和左右信息熵的短语提取&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#17-%E6%8B%BC%E9%9F%B3%E8%BD%AC%E6%8D%A2"&gt;拼音转换&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;多音字、声母、韵母、声调&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#18-%E7%AE%80%E7%B9%81%E8%BD%AC%E6%8D%A2"&gt;简繁转换&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;简繁分歧词（简体、繁体、臺灣正體、香港繁體）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#19-%E6%96%87%E6%9C%AC%E6%8E%A8%E8%8D%90"&gt;文本推荐&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;语义推荐、拼音推荐、字词推荐&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;依存句法分析
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP#21-%E4%BE%9D%E5%AD%98%E5%8F%A5%E6%B3%95%E5%88%86%E6%9E%90"&gt;基于神经网络的高性能依存句法分析器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/blob/master/src/test/java/com/hankcs/demo/DemoDependencyParser.java#L34"&gt;基于ArcEager转移系统的柱搜索依存句法分析器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB%E4%B8%8E%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90"&gt;文本分类&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB%E4%B8%8E%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90#%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90"&gt;情感分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/%E6%96%87%E6%9C%AC%E8%81%9A%E7%B1%BB"&gt;文本聚类&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;KMeans、Repeated Bisection、自动推断聚类数目k&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/word2vec"&gt;word2vec&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;词向量训练、加载、词语相似度计算、语义运算、查询、KMeans聚类&lt;/li&gt;
&lt;li&gt;文档语义相似度计算&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/tree/master/src/main/java/com/hankcs/hanlp/corpus"&gt;语料库工具&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;部分默认模型训练自小型语料库，鼓励用户自行训练。所有模块提供&lt;a href="https://github.com/hankcs/HanLP/wiki"&gt;训练接口&lt;/a&gt;，语料可参考&lt;a href="http://file.hankcs.com/corpus/pku98.zip" rel="nofollow"&gt;98年人民日报语料库&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在提供丰富功能的同时，HanLP内部模块坚持低耦合、模型坚持惰性加载、服务坚持静态提供、词典坚持明文发布，使用非常方便。默认模型训练自全世界最大规模的中文语料库，同时自带一些语料处理工具，帮助用户训练自己的模型。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-项目主页" class="anchor" aria-hidden="true" href="#项目主页"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目主页&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://nlp.hankcs.com/book.php" rel="nofollow"&gt;《自然语言处理入门》&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt;&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP/tree/v1.7.5/src/test/java/com/hankcs/book"&gt;随书代码&lt;/a&gt;、&lt;a href="http://hanlp.com/" rel="nofollow"&gt;在线演示&lt;/a&gt;、&lt;a href="https://github.com/hankcs/pyhanlp"&gt;Python调用&lt;/a&gt;、&lt;a href="https://github.com/hankcs/hanlp-lucene-plugin"&gt;Solr及Lucene插件&lt;/a&gt;、&lt;a href="https://bbs.hankcs.com/" rel="nofollow"&gt;论坛&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP/wiki/papers"&gt;论文引用&lt;/a&gt;、&lt;a href="https://github.com/hankcs/HanLP/wiki"&gt;更多信息&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-下载与配置" class="anchor" aria-hidden="true" href="#下载与配置"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;下载与配置&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-方式一maven" class="anchor" aria-hidden="true" href="#方式一maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方式一、Maven&lt;/h3&gt;
&lt;p&gt;为了方便用户，特提供内置了数据包的Portable版，只需在pom.xml加入：&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.hankcs&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;hanlp&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;portable-1.7.5&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;零配置，即可使用基本功能（除由字构词、依存句法分析外的全部功能）。如果用户有自定义的需求，可以参考方式二，使用hanlp.properties进行配置（Portable版同样支持hanlp.properties）。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-方式二下载jardatahanlpproperties" class="anchor" aria-hidden="true" href="#方式二下载jardatahanlpproperties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方式二、下载jar、data、hanlp.properties&lt;/h3&gt;
&lt;p&gt;HanLP将数据与程序分离，给予用户自定义的自由。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-1下载datazip" class="anchor" aria-hidden="true" href="#1下载datazip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1、下载：&lt;a href="http://nlp.hankcs.com/download.php?file=data" rel="nofollow"&gt;data.zip&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;下载后解压到任意目录，接下来通过配置文件告诉HanLP数据包的位置。&lt;/p&gt;
&lt;p&gt;HanLP中的数据分为&lt;em&gt;词典&lt;/em&gt;和&lt;em&gt;模型&lt;/em&gt;，其中&lt;em&gt;词典&lt;/em&gt;是词法分析必需的，&lt;em&gt;模型&lt;/em&gt;是句法分析必需的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;data
│
├─dictionary
└─model
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;用户可以自行增删替换，如果不需要句法分析等功能的话，随时可以删除model文件夹。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模型跟词典没有绝对的区别，隐马模型被做成人人都可以编辑的词典形式，不代表它不是模型。&lt;/li&gt;
&lt;li&gt;GitHub代码库中已经包含了data.zip中的词典，直接编译运行自动缓存即可；模型则需要额外下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-2下载jar和配置文件hanlp-releasezip" class="anchor" aria-hidden="true" href="#2下载jar和配置文件hanlp-releasezip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2、下载jar和配置文件：&lt;a href="http://nlp.hankcs.com/download.php?file=jar" rel="nofollow"&gt;hanlp-release.zip&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;配置文件的作用是告诉HanLP数据包的位置，只需修改第一行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root=D:/JavaProjects/HanLP/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;为data的&lt;strong&gt;父目录&lt;/strong&gt;即可，比如data目录是&lt;code&gt;/Users/hankcs/Documents/data&lt;/code&gt;，那么&lt;code&gt;root=/Users/hankcs/Documents/&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;最后将&lt;code&gt;hanlp.properties&lt;/code&gt;放入classpath即可，对于多数项目，都可以放到src或resources目录下，编译时IDE会自动将其复制到classpath中。除了配置文件外，还可以使用环境变量&lt;code&gt;HANLP_ROOT&lt;/code&gt;来设置&lt;code&gt;root&lt;/code&gt;。安卓项目请参考&lt;a href="https://github.com/hankcs/HanLPAndroidDemo"&gt;demo&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果放置不当，HanLP会提示当前环境下的合适路径，并且尝试从项目根目录读取数据集。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-调用方法" class="anchor" aria-hidden="true" href="#调用方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;调用方法&lt;/h2&gt;
&lt;p&gt;HanLP几乎所有的功能都可以通过工具类&lt;code&gt;HanLP&lt;/code&gt;快捷调用，当你想不起来调用方法时，只需键入&lt;code&gt;HanLP.&lt;/code&gt;，IDE应当会给出提示，并展示HanLP完善的文档。&lt;/p&gt;
&lt;p&gt;所有Demo都位于&lt;a href="https://github.com/hankcs/HanLP/tree/master/src/test/java/com/hankcs/demo"&gt;com.hankcs.demo&lt;/a&gt;下，比文档覆盖了更多细节，更新更及时，&lt;strong&gt;强烈建议运行一遍&lt;/strong&gt;。此处仅列举部分常用接口。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-1-第一个demo" class="anchor" aria-hidden="true" href="#1-第一个demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 第一个Demo&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;你好，欢迎使用HanLP汉语处理包！&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;内存要求
&lt;ul&gt;
&lt;li&gt;内存120MB以上（-Xms120m -Xmx120m -Xmn64m），标准数据包（35万核心词库+默认用户词典），分词测试正常。全部词典和模型都是惰性加载的，不使用的模型相当于不存在，可以自由删除。&lt;/li&gt;
&lt;li&gt;HanLP对词典的数据结构进行了长期的优化，可以应对绝大多数场景。哪怕HanLP的词典上百兆也无需担心，因为在内存中被精心压缩过。如果内存非常有限，请使用小词典。HanLP默认使用大词典，同时提供小词典，请参考配置文件章节。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;写给正在编译HanLP的开发者
&lt;ul&gt;
&lt;li&gt;如果你正在编译运行从Github检出的HanLP代码，并且没有下载data缓存，那么首次加载词典/模型会发生一个&lt;em&gt;自动缓存&lt;/em&gt;的过程。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;自动缓存&lt;/em&gt;的目的是为了加速词典载入速度，在下次载入时，缓存的词典文件会带来毫秒级的加载速度。由于词典体积很大，&lt;em&gt;自动缓存&lt;/em&gt;会耗费一些时间，请耐心等待。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;自动缓存&lt;/em&gt;缓存的不是明文词典，而是双数组Trie树、DAWG、AhoCorasickDoubleArrayTrie等数据结构。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-2-标准分词" class="anchor" aria-hidden="true" href="#2-标准分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 标准分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;StandardTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商品和服务&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;HanLP中有一系列“开箱即用”的静态分词器，以&lt;code&gt;Tokenizer&lt;/code&gt;结尾，在接下来的例子中会继续介绍。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HanLP.segment&lt;/code&gt;其实是对&lt;code&gt;StandardTokenizer.segment&lt;/code&gt;的包装。&lt;/li&gt;
&lt;li&gt;分词结果包含词性，每个词性的意思请查阅&lt;a href="http://www.hankcs.com/nlp/part-of-speech-tagging.html#h2-8" rel="nofollow"&gt;《HanLP词性标注集》&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/segment/the-word-graph-is-generated.html" rel="nofollow"&gt;《词图的生成》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-3-nlp分词" class="anchor" aria-hidden="true" href="#3-nlp分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. NLP分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;NLPTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我新造一个词叫幻想乡你能识别并标注正确词性吗？&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 注意观察下面两个“希望”的词性、两个“晚霞”的词性&lt;/span&gt;
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;NLPTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;analyze(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我的希望是希望张晚霞的背影被晚霞映红&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;translateLabels());
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;NLPTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;analyze(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;支援臺灣正體香港繁體：微软公司於1975年由比爾·蓋茲和保羅·艾倫創立。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;NLP分词&lt;code&gt;NLPTokenizer&lt;/code&gt;会执行词性标注和命名实体识别，由&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;结构化感知机序列标注框架&lt;/a&gt;支撑。&lt;/li&gt;
&lt;li&gt;默认模型训练自&lt;code&gt;9970&lt;/code&gt;万字的大型综合语料库，是已知范围内&lt;strong&gt;全世界最大&lt;/strong&gt;的中文分词语料库。语料库规模决定实际效果，面向生产环境的语料库应当在千万字量级。欢迎用户在自己的语料上&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;训练新模型&lt;/a&gt;以适应新领域、识别新的命名实体。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-4-索引分词" class="anchor" aria-hidden="true" href="#4-索引分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. 索引分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;IndexTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;主副食品&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Term&lt;/span&gt; term &lt;span class="pl-k"&gt;:&lt;/span&gt; termList)
{
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(term &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; [&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; term&lt;span class="pl-k"&gt;.&lt;/span&gt;offset &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; (term&lt;span class="pl-k"&gt;.&lt;/span&gt;offset &lt;span class="pl-k"&gt;+&lt;/span&gt; term&lt;span class="pl-k"&gt;.&lt;/span&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;length()) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;索引分词&lt;code&gt;IndexTokenizer&lt;/code&gt;是面向搜索引擎的分词器，能够对长词全切分，另外通过&lt;code&gt;term.offset&lt;/code&gt;可以获取单词在文本中的偏移量。&lt;/li&gt;
&lt;li&gt;任何分词器都可以通过基类&lt;code&gt;Segment&lt;/code&gt;的&lt;code&gt;enableIndexMode&lt;/code&gt;方法激活索引模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-5-n-最短路径分词" class="anchor" aria-hidden="true" href="#5-n-最短路径分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. N-最短路径分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; nShortSegment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;NShortSegment&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableCustomDictionary(&lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;enablePlaceRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;enableOrganizationRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; shortestSegment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;DijkstraSegment&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableCustomDictionary(&lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;enablePlaceRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;enableOrganizationRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;今天，刘志军案的关键人物,山西女商人丁书苗在市二中院出庭受审。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;刘喜杰石国祥会见吴亚琴先进事迹报告团成员&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        };
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;N-最短分词：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; nShortSegment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;最短路分词：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; shortestSegment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence));
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;N最短路分词器&lt;code&gt;NShortSegment&lt;/code&gt;比最短路分词器慢，但是效果稍微好一些，对命名实体识别能力更强。&lt;/li&gt;
&lt;li&gt;一般场景下最短路分词的精度已经足够，而且速度比N最短路分词器快几倍，请酌情选择。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/segment/n-shortest-path-to-the-java-implementation-and-application-segmentation.html" rel="nofollow"&gt;《N最短路径的Java实现与分词应用》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-6-crf分词" class="anchor" aria-hidden="true" href="#6-crf分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6. CRF分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;        &lt;span class="pl-smi"&gt;CRFLexicalAnalyzer&lt;/span&gt; analyzer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;CRFLexicalAnalyzer&lt;/span&gt;();
        &lt;span class="pl-k"&gt;String&lt;/span&gt;[] tests &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商品和服务&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;上海华安工业（集团）公司董事长谭旭光和秘书胡花蕊来到美国纽约现代艺术博物馆参观&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;微软公司於1975年由比爾·蓋茲和保羅·艾倫創立，18年啟動以智慧雲端、前端為導向的大改組。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 支持繁体中文&lt;/span&gt;
        };
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; tests)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(analyzer&lt;span class="pl-k"&gt;.&lt;/span&gt;analyze(sentence));
        }&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;CRF对新词有很好的识别能力，但是开销较大。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/CRF%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90"&gt;《CRF中文分词、词性标注与命名实体识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-7-极速词典分词" class="anchor" aria-hidden="true" href="#7-极速词典分词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7. 极速词典分词&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 演示极速分词，基于AhoCorasickDoubleArrayTrie实现的词典分词，适用于“高吞吐量”“精度一般”的场合&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoHighSpeedSegment&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;String&lt;/span&gt; text &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;江西鄱阳湖干枯，中国最大淡水湖变成大草原&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;SpeedTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(text));
        &lt;span class="pl-k"&gt;long&lt;/span&gt; start &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;currentTimeMillis();
        &lt;span class="pl-k"&gt;int&lt;/span&gt; pressure &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000000&lt;/span&gt;;
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; pressure; &lt;span class="pl-k"&gt;++&lt;/span&gt;i)
        {
            &lt;span class="pl-smi"&gt;SpeedTokenizer&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(text);
        }
        &lt;span class="pl-k"&gt;double&lt;/span&gt; costTime &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;currentTimeMillis() &lt;span class="pl-k"&gt;-&lt;/span&gt; start) &lt;span class="pl-k"&gt;/&lt;/span&gt; (&lt;span class="pl-k"&gt;double&lt;/span&gt;)&lt;span class="pl-c1"&gt;1000&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;分词速度：%.2f字每秒&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, text&lt;span class="pl-k"&gt;.&lt;/span&gt;length() &lt;span class="pl-k"&gt;*&lt;/span&gt; pressure &lt;span class="pl-k"&gt;/&lt;/span&gt; costTime);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;极速分词是词典最长分词，速度极其快，精度一般。&lt;/li&gt;
&lt;li&gt;在i7-6700K上跑出了4500万字每秒的速度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html" rel="nofollow"&gt;《Aho Corasick自动机结合DoubleArrayTrie极速多模式匹配》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-8-用户自定义词典" class="anchor" aria-hidden="true" href="#8-用户自定义词典"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8. 用户自定义词典&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 演示用户词典的动态增删&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoCustomDictionary&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 动态增加&lt;/span&gt;
        &lt;span class="pl-smi"&gt;CustomDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;攻城狮&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 强行插入&lt;/span&gt;
        &lt;span class="pl-smi"&gt;CustomDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;insert(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;白富美&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nz 1024&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 删除词语（注释掉试试）&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;        CustomDictionary.remove("攻城狮");&lt;/span&gt;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;CustomDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;单身狗&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nz 1024 n 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;CustomDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;单身狗&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));

        &lt;span class="pl-smi"&gt;String&lt;/span&gt; text &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;攻城狮逆袭单身狗，迎娶白富美，走上人生巅峰&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 怎么可能噗哈哈！&lt;/span&gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; AhoCorasickDoubleArrayTrie自动机扫描文本中出现的自定义词语&lt;/span&gt;
        &lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;[] charArray &lt;span class="pl-k"&gt;=&lt;/span&gt; text&lt;span class="pl-k"&gt;.&lt;/span&gt;toCharArray();
        &lt;span class="pl-smi"&gt;CustomDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;parseText(charArray, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;AhoCorasickDoubleArrayTrie&lt;/span&gt;.&lt;span class="pl-k"&gt;IHit&amp;lt;&lt;span class="pl-smi"&gt;CoreDictionary&lt;/span&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Attribute&lt;/span&gt;&amp;gt;()
        {
            &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
            &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; hit(&lt;span class="pl-k"&gt;int&lt;/span&gt; begin, &lt;span class="pl-k"&gt;int&lt;/span&gt; end, &lt;span class="pl-smi"&gt;CoreDictionary&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Attribute&lt;/span&gt; value)
            {
                &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[%d:%d]=%s %s&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, begin, end, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;(charArray, begin, end &lt;span class="pl-k"&gt;-&lt;/span&gt; begin), value);
            }
        });

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 自定义词典在所有分词器中都有效&lt;/span&gt;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;segment(text));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CustomDictionary&lt;/code&gt;是一份全局的用户自定义词典，可以随时增删，影响全部分词器。另外可以在任何分词器中关闭它。通过代码动态增删不会保存到词典文件。&lt;/li&gt;
&lt;li&gt;中文分词≠词典，词典无法解决中文分词，&lt;code&gt;Segment&lt;/code&gt;提供高低优先级应对不同场景，请参考&lt;a href="https://github.com/hankcs/HanLP/wiki/FAQ#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BF%AE%E6%94%B9%E4%BA%86%E8%AF%8D%E5%85%B8%E8%BF%98%E6%98%AF%E6%B2%A1%E6%9C%89%E6%95%88%E6%9E%9C"&gt;FAQ&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;追加词典
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CustomDictionary&lt;/code&gt;主词典文本路径是&lt;code&gt;data/dictionary/custom/CustomDictionary.txt&lt;/code&gt;，用户可以在此增加自己的词语（不推荐）；也可以单独新建一个文本文件，通过配置文件&lt;code&gt;CustomDictionaryPath=data/dictionary/custom/CustomDictionary.txt; 我的词典.txt;&lt;/code&gt;来追加词典（推荐）。&lt;/li&gt;
&lt;li&gt;始终建议将相同词性的词语放到同一个词典文件里，便于维护和分享。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;词典格式
&lt;ul&gt;
&lt;li&gt;每一行代表一个单词，格式遵从&lt;code&gt;[单词] [词性A] [A的频次] [词性B] [B的频次] ...&lt;/code&gt; 如果不填词性则表示采用词典的默认词性。&lt;/li&gt;
&lt;li&gt;词典的默认词性默认是名词n，可以通过配置文件修改：&lt;code&gt;全国地名大全.txt ns;&lt;/code&gt;如果词典路径后面空格紧接着词性，则该词典默认是该词性。&lt;/li&gt;
&lt;li&gt;在统计分词中，并不保证自定义词典中的词一定被切分出来。用户可在理解后果的情况下通过&lt;code&gt;Segment#enableCustomDictionaryForcing&lt;/code&gt;强制生效。&lt;/li&gt;
&lt;li&gt;关于用户词典的更多信息请参考&lt;strong&gt;词典说明&lt;/strong&gt;一章。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/program/java/tire-tree-participle.html" rel="nofollow"&gt;《Trie树分词》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html" rel="nofollow"&gt;《Aho Corasick自动机结合DoubleArrayTrie极速多模式匹配》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-9-中国人名识别" class="anchor" aria-hidden="true" href="#9-中国人名识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9. 中国人名识别&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;签约仪式前，秦光荣、李纪恒、仇和等一同会见了参加签约的企业家。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;王国强、高峰、汪洋、张朝阳光着头、韩寒、小四&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;张浩和胡健康复员回家了&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;王总和小丽结婚了&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;编剧邵钧林和稽道青说&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;这里有关天培的有关事迹&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;龚学平等领导,邓颖超生前&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        };
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; segment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;newSegment()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableNameRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; segment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;目前分词器基本上都默认开启了中国人名识别，比如&lt;code&gt;HanLP.segment()&lt;/code&gt;接口中使用的分词器等等，用户不必手动开启；上面的代码只是为了强调。&lt;/li&gt;
&lt;li&gt;有一定的误命中率，比如误命中&lt;code&gt;关键年&lt;/code&gt;，则可以通过在&lt;code&gt;data/dictionary/person/nr.txt&lt;/code&gt;加入一条&lt;code&gt;关键年 A 1&lt;/code&gt;来排除&lt;code&gt;关键年&lt;/code&gt;作为人名的可能性，也可以将&lt;code&gt;关键年&lt;/code&gt;作为新词登记到自定义词典中。&lt;/li&gt;
&lt;li&gt;如果你通过上述办法解决了问题，欢迎向我提交pull request，词典也是宝贵的财富。&lt;/li&gt;
&lt;li&gt;建议NLP用户使用感知机或CRF词法分析器，精度更高。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/chinese-name-recognition-in-actual-hmm-viterbi-role-labeling.html" rel="nofollow"&gt;《实战HMM-Viterbi角色标注中国人名识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-10-音译人名识别" class="anchor" aria-hidden="true" href="#10-音译人名识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10. 音译人名识别&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一桶冰水当头倒下，微软的比尔盖茨、Facebook的扎克伯格跟桑德博格、亚马逊的贝索斯、苹果的库克全都不惜湿身入镜，这些硅谷的科技人，飞蛾扑火似地牺牲演出，其实全为了慈善。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;世界上最长的姓名是简森·乔伊·亚历山大·比基·卡利斯勒·达夫·埃利奥特·福克斯·伊维鲁莫·马尔尼·梅尔斯·帕特森·汤普森·华莱士·普雷斯顿。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        };
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; segment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;newSegment()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableTranslatedNameRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; segment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;目前分词器基本上都默认开启了音译人名识别，用户不必手动开启；上面的代码只是为了强调。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/name-transliteration-cascaded-hidden-markov-model-and-japanese-personal-names-recognition.html" rel="nofollow"&gt;《层叠隐马模型下的音译人名和日本人名识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-11-日本人名识别" class="anchor" aria-hidden="true" href="#11-日本人名识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11. 日本人名识别&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;北川景子参演了林诣彬导演的《速度与激情3》&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;林志玲亮相网友:确定不是波多野结衣？&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
};
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; segment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;newSegment()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableJapaneseNameRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; segment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;目前标准分词器默认关闭了日本人名识别，用户需要手动开启；这是因为日本人名的出现频率较低，但是又消耗性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/name-transliteration-cascaded-hidden-markov-model-and-japanese-personal-names-recognition.html" rel="nofollow"&gt;《层叠隐马模型下的音译人名和日本人名识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-12-地名识别" class="anchor" aria-hidden="true" href="#12-地名识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12. 地名识别&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;武胜县新学乡政府大楼门前锣鼓喧天&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;蓝翔给宁夏固原市彭阳县红河镇黑牛沟村捐赠了挖掘机&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
};
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; segment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;newSegment()&lt;span class="pl-k"&gt;.&lt;/span&gt;enablePlaceRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; segment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;目前标准分词器都默认关闭了地名识别，用户需要手动开启；这是因为消耗性能，其实多数地名都收录在核心词典和用户自定义词典中。&lt;/li&gt;
&lt;li&gt;在生产环境中，能靠词典解决的问题就靠词典解决，这是最高效稳定的方法。&lt;/li&gt;
&lt;li&gt;建议对命名实体识别要求较高的用户使用&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;感知机词法分析器&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/ner/place-names-to-identify-actual-hmm-viterbi-role-labeling.html" rel="nofollow"&gt;《实战HMM-Viterbi角色标注地名识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-13-机构名识别" class="anchor" aria-hidden="true" href="#13-机构名识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13. 机构名识别&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;String&lt;/span&gt;[] testCase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我在上海林原科技有限公司兼职工作，&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我经常在台川喜宴餐厅吃饭，&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;偶尔去地中海影城看电影。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
};
&lt;span class="pl-smi"&gt;Segment&lt;/span&gt; segment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;newSegment()&lt;span class="pl-k"&gt;.&lt;/span&gt;enableOrganizationRecognize(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; sentence &lt;span class="pl-k"&gt;:&lt;/span&gt; testCase)
{
    &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Term&lt;/span&gt;&amp;gt;&lt;/span&gt; termList &lt;span class="pl-k"&gt;=&lt;/span&gt; segment&lt;span class="pl-k"&gt;.&lt;/span&gt;seg(sentence);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(termList);
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;目前分词器默认关闭了机构名识别，用户需要手动开启；这是因为消耗性能，其实常用机构名都收录在核心词典和用户自定义词典中。&lt;/li&gt;
&lt;li&gt;HanLP的目的不是演示动态识别，在生产环境中，能靠词典解决的问题就靠词典解决，这是最高效稳定的方法。&lt;/li&gt;
&lt;li&gt;建议对命名实体识别要求较高的用户使用&lt;a href="https://github.com/hankcs/HanLP/wiki/%E7%BB%93%E6%9E%84%E5%8C%96%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A0%87%E6%B3%A8%E6%A1%86%E6%9E%B6"&gt;感知机词法分析器&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/ner/place-name-recognition-model-of-the-stacked-hmm-viterbi-role-labeling.html" rel="nofollow"&gt;《层叠HMM-Viterbi角色标注模型下的机构名识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-14-关键词提取" class="anchor" aria-hidden="true" href="#14-关键词提取"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14. 关键词提取&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;String&lt;/span&gt; content &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;程序员(英文Programmer)是从事程序开发、维护的专业人员。一般将程序员分为程序设计人员和程序编码人员，但两者的界限并不非常清楚，特别是在中国。软件从业人员分为初级程序员、高级程序员、系统分析员和项目经理四大类。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt; keywordList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;extractKeyword(content, &lt;span class="pl-c1"&gt;5&lt;/span&gt;);
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(keywordList);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;内部采用&lt;code&gt;TextRankKeyword&lt;/code&gt;实现，用户可以直接调用&lt;code&gt;TextRankKeyword.getKeywordList(document, size)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/textrank-algorithm-to-extract-the-keywords-java-implementation.html" rel="nofollow"&gt;《TextRank算法提取关键词的Java实现》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-15-自动摘要" class="anchor" aria-hidden="true" href="#15-自动摘要"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;15. 自动摘要&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;String&lt;/span&gt; document &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法可大致分为基本算法、数据结构的算法、数论算法、计算几何的算法、图的算法、动态规划以及数值分析、加密算法、排序算法、检索算法、随机化算法、并行算法、厄米变形模型、随机森林算法。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法可以宽泛的分为三类，&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一，有限的确定性算法，这类算法在有限的一段时间内终止。他们可能要花很长时间来执行指定的任务，但仍将在一定的时间内终止。这类算法得出的结果常取决于输入值。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;二，有限的非确定算法，这类算法在有限的时间内终止。然而，对于一个（或一些）给定的数值，算法的结果并不是唯一的或确定的。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;三，无限的算法，是那些由于没有定义终止定义条件，或定义的条件无法由输入的数据满足而不终止运行的算法。通常，无限算法的产生是由于未能确定的定义终止条件。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt; sentenceList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;extractSummary(document, &lt;span class="pl-c1"&gt;3&lt;/span&gt;);
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(sentenceList);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;内部采用&lt;code&gt;TextRankSentence&lt;/code&gt;实现，用户可以直接调用&lt;code&gt;TextRankSentence.getTopSentenceList(document, size)&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/textrank-algorithm-java-implementation-of-automatic-abstract.html" rel="nofollow"&gt;《TextRank算法自动摘要的Java实现》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-16-短语提取" class="anchor" aria-hidden="true" href="#16-短语提取"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;16. 短语提取&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;String&lt;/span&gt; text &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法工程师&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法（Algorithm）是一系列解决问题的清晰指令，也就是说，能够对一定规范的输入，在有限时间内获得所要求的输出。如果一个算法有缺陷，或不适合于某个问题，执行这个算法将不会解决这个问题。不同的算法可能用不同的时间、空间或效率来完成同样的任务。一个算法的优劣可以用空间复杂度与时间复杂度来衡量。算法工程师就是利用算法处理事物的人。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1职位简介&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法工程师是一个非常高端的职位；&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;专业要求：计算机、电子、通信、数学等相关专业；&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;学历要求：本科及其以上的学历，大多数是硕士学历及其以上；&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;语言要求：英语要求是熟练，基本上能阅读国外专业书刊；&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;必须掌握计算机相关知识，熟练使用仿真工具MATLAB等，必须会一门编程语言。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2研究方向&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;视频算法工程师、图像处理算法工程师、音频算法工程师 通信基带算法工程师&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3目前国内外状况&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;目前国内从事算法研究的工程师不少，但是高级算法工程师却很少，是一个非常紧缺的专业工程师。算法工程师根据研究领域来分主要有音频/视频算法处理、图像技术方面的二维信息算法处理和通信物理层、雷达信号处理、生物医学信号处理等领域的一维信息算法处理。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;在计算机音视频和图形图像技术等二维信息算法处理方面目前比较先进的视频处理算法：机器视觉成为此类算法研究的核心；另外还有2D转3D算法(2D-to-3D conversion)，去隔行算法(de-interlacing)，运动估计运动补偿算法(Motion estimation/Motion Compensation)，去噪算法(Noise Reduction)，缩放算法(scaling)，锐化处理算法(Sharpness)，超分辨率算法(Super Resolution),手势识别(gesture recognition),人脸识别(face recognition)。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;在通信物理层等一维信息领域目前常用的算法：无线领域的RRM、RTT，传送领域的调制解调、信道均衡、信号检测、网络优化、信号分解等。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;另外数据挖掘、互联网搜索算法也成为当今的热门方向。&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;算法工程师逐渐往人工智能方向发展。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt; phraseList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;extractPhrase(text, &lt;span class="pl-c1"&gt;10&lt;/span&gt;);
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(phraseList);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;内部采用&lt;code&gt;MutualInformationEntropyPhraseExtractor&lt;/code&gt;实现，用户可以直接调用&lt;code&gt;MutualInformationEntropyPhraseExtractor.extractPhrase(text, size)&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/extraction-and-identification-of-mutual-information-about-the-phrase-based-on-information-entropy.html" rel="nofollow"&gt;《基于互信息和左右信息熵的短语提取识别》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-17-拼音转换" class="anchor" aria-hidden="true" href="#17-拼音转换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;17. 拼音转换&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 汉字转拼音&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoPinyin&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;String&lt;/span&gt; text &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;重载不是重任&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt;&amp;gt;&lt;/span&gt; pinyinList &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;convertToPinyinList(text);
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;原文,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;char&lt;/span&gt; c &lt;span class="pl-k"&gt;:&lt;/span&gt; text&lt;span class="pl-k"&gt;.&lt;/span&gt;toCharArray())
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%c,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, c);
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;拼音（数字音调）,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin);
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;拼音（符号音调）,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getPinyinWithToneMark());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;拼音（无音调）,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getPinyinWithoutTone());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;声调,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getTone());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;声母,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getShengmu());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;韵母,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getYunmu());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;print(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;输入法头,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Pinyin&lt;/span&gt; pinyin &lt;span class="pl-k"&gt;:&lt;/span&gt; pinyinList)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, pinyin&lt;span class="pl-k"&gt;.&lt;/span&gt;getHead());
        }
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println();
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;HanLP不仅支持基础的汉字转拼音，还支持声母、韵母、音调、音标和输入法首字母首声母功能。&lt;/li&gt;
&lt;li&gt;HanLP能够识别多音字，也能给繁体中文注拼音。&lt;/li&gt;
&lt;li&gt;最重要的是，HanLP采用的模式匹配升级到&lt;code&gt;AhoCorasickDoubleArrayTrie&lt;/code&gt;，性能大幅提升，能够提供毫秒级的响应速度！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/java-chinese-characters-to-pinyin-and-simplified-conversion-realization.html#h2-17" rel="nofollow"&gt;《汉字转拼音与简繁转换的Java实现》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-18-简繁转换" class="anchor" aria-hidden="true" href="#18-简繁转换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;18. 简繁转换&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 简繁转换&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoTraditionalChinese2SimplifiedChinese&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;convertToTraditionalChinese(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;用笔记本电脑写程序&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;convertToSimplifiedChinese(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;「以後等妳當上皇后，就能買士多啤梨慶祝了」&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;HanLP能够识别简繁分歧词，比如&lt;code&gt;打印机=印表機&lt;/code&gt;。许多简繁转换工具不能区分“以后”“皇后”中的两个“后”字，HanLP可以。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/java-chinese-characters-to-pinyin-and-simplified-conversion-realization.html#h2-17" rel="nofollow"&gt;《汉字转拼音与简繁转换的Java实现》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-19-文本推荐" class="anchor" aria-hidden="true" href="#19-文本推荐"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;19. 文本推荐&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 文本推荐(句子级别，从一系列句子中挑出与输入句子最相似的那一个)&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoSuggester&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Suggester&lt;/span&gt; suggester &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Suggester&lt;/span&gt;();
        &lt;span class="pl-k"&gt;String&lt;/span&gt;[] titleArray &lt;span class="pl-k"&gt;=&lt;/span&gt;
        (
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;威廉王子发表演说 呼吁保护野生动物&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;《时代》年度人物最终入围名单出炉 普京马云入选&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;“黑格比”横扫菲：菲吸取“海燕”经验及早疏散&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;日本保密法将正式生效 日媒指其损害国民知情权&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;英报告说空气污染带来“公共健康危机”&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        )&lt;span class="pl-k"&gt;.&lt;/span&gt;split(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; title &lt;span class="pl-k"&gt;:&lt;/span&gt; titleArray)
        {
            suggester&lt;span class="pl-k"&gt;.&lt;/span&gt;addSentence(title);
        }

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(suggester&lt;span class="pl-k"&gt;.&lt;/span&gt;suggest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;发言&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;));       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 语义&lt;/span&gt;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(suggester&lt;span class="pl-k"&gt;.&lt;/span&gt;suggest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;危机公共&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;));   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 字符&lt;/span&gt;
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(suggester&lt;span class="pl-k"&gt;.&lt;/span&gt;suggest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mayun&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;));      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 拼音&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;在搜索引擎的输入框中，用户输入一个词，搜索引擎会联想出最合适的搜索词，HanLP实现了类似的功能。&lt;/li&gt;
&lt;li&gt;可以动态调节每种识别器的权重&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-20-语义距离" class="anchor" aria-hidden="true" href="#20-语义距离"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;20. 语义距离&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 演示词向量的训练与应用&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoWord2Vec&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-smi"&gt;IOException&lt;/span&gt;
    {
        &lt;span class="pl-smi"&gt;WordVectorModel&lt;/span&gt; wordVectorModel &lt;span class="pl-k"&gt;=&lt;/span&gt; trainOrLoadModel();
        printNearest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;中国&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, wordVectorModel);
        printNearest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;美丽&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, wordVectorModel);
        printNearest(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;购买&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, wordVectorModel);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 文档向量&lt;/span&gt;
        &lt;span class="pl-smi"&gt;DocVectorModel&lt;/span&gt; docVectorModel &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;DocVectorModel&lt;/span&gt;(wordVectorModel);
        &lt;span class="pl-k"&gt;String&lt;/span&gt;[] documents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;[]{
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;山东苹果丰收&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;农民在江苏种水稻&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;奥运会女排夺冠&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;世界锦标赛胜出&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;中国足球失败&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        };

        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(docVectorModel&lt;span class="pl-k"&gt;.&lt;/span&gt;similarity(documents[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], documents[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]));
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(docVectorModel&lt;span class="pl-k"&gt;.&lt;/span&gt;similarity(documents[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], documents[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]));

        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; documents&lt;span class="pl-k"&gt;.&lt;/span&gt;length; i&lt;span class="pl-k"&gt;++&lt;/span&gt;)
        {
            docVectorModel&lt;span class="pl-k"&gt;.&lt;/span&gt;addDocument(i, documents[i]);
        }

        printNearestDocument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;体育&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, documents, docVectorModel);
        printNearestDocument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;农业&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, documents, docVectorModel);
        printNearestDocument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我要看比赛&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, documents, docVectorModel);
        printNearestDocument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;要不做饭吧&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, documents, docVectorModel);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hankcs/HanLP/wiki/word2vec"&gt;word2vec文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/word2vec.html" rel="nofollow"&gt;《word2vec原理推导与代码分析》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-21-依存句法分析" class="anchor" aria-hidden="true" href="#21-依存句法分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;21. 依存句法分析&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 依存句法分析（MaxEnt和神经网络句法模型需要-Xms1g -Xmx1g -Xmn512m）&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@author&lt;/span&gt; hankcs&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DemoDependencyParser&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;CoNLLSentence&lt;/span&gt; sentence &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;parseDependency(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;徐先生还具体帮助他确定了把画雄鹰、松鼠和麻雀作为主攻目标。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(sentence);
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 可以方便地遍历它&lt;/span&gt;
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;CoNLLWord&lt;/span&gt; word &lt;span class="pl-k"&gt;:&lt;/span&gt; sentence)
        {
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s --(%s)--&amp;gt; %s&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;DEPREL&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;HEAD&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;);
        }
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 也可以直接拿到数组，任意顺序或逆序遍历&lt;/span&gt;
        &lt;span class="pl-k"&gt;CoNLLWord&lt;/span&gt;[] wordArray &lt;span class="pl-k"&gt;=&lt;/span&gt; sentence&lt;span class="pl-k"&gt;.&lt;/span&gt;getWordArray();
        &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; wordArray&lt;span class="pl-k"&gt;.&lt;/span&gt;length &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i&lt;span class="pl-k"&gt;--&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;CoNLLWord&lt;/span&gt; word &lt;span class="pl-k"&gt;=&lt;/span&gt; wordArray[i];
            &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s --(%s)--&amp;gt; %s&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;DEPREL&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;span class="pl-k"&gt;.&lt;/span&gt;HEAD&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;);
        }
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 还可以直接遍历子树，从某棵子树的某个节点一路遍历到虚根&lt;/span&gt;
        &lt;span class="pl-smi"&gt;CoNLLWord&lt;/span&gt; head &lt;span class="pl-k"&gt;=&lt;/span&gt; wordArray[&lt;span class="pl-c1"&gt;12&lt;/span&gt;];
        &lt;span class="pl-k"&gt;while&lt;/span&gt; ((head &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;head&lt;span class="pl-k"&gt;.&lt;/span&gt;HEAD&lt;/span&gt;) &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (head &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;CoNLLWord&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;ROOT&lt;/span&gt;) &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-smi"&gt;head&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;);
            &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;printf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s --(%s)--&amp;gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;head&lt;span class="pl-k"&gt;.&lt;/span&gt;LEMMA&lt;/span&gt;, &lt;span class="pl-smi"&gt;head&lt;span class="pl-k"&gt;.&lt;/span&gt;DEPREL&lt;/span&gt;);
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;说明
&lt;ul&gt;
&lt;li&gt;内部采用&lt;code&gt;NeuralNetworkDependencyParser&lt;/code&gt;实现，用户可以直接调用&lt;code&gt;NeuralNetworkDependencyParser.compute(sentence)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;也可以调用基于ArcEager转移系统的柱搜索依存句法分析器&lt;code&gt;KBeamArcEagerDependencyParser&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法详解
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hankcs.com/nlp/parsing/neural-network-based-dependency-parser.html" rel="nofollow"&gt;《基于神经网络分类模型与转移系统的判决式依存句法分析器》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-词典说明" class="anchor" aria-hidden="true" href="#词典说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;词典说明&lt;/h2&gt;
&lt;p&gt;本章详细介绍HanLP中的词典格式，满足用户自定义的需要。HanLP中有许多词典，它们的格式都是相似的，形式都是文本文档，随时可以修改。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-基本格式" class="anchor" aria-hidden="true" href="#基本格式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基本格式&lt;/h3&gt;
&lt;p&gt;词典分为词频词性词典和词频词典。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;词频词性词典（如&lt;code&gt;CoreNatureDictionary.txt&lt;/code&gt;）
&lt;ul&gt;
&lt;li&gt;每一行代表一个单词，格式遵从&lt;code&gt;[单词] [词性A] [A的频次] [词性B] [B的频次] ...&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;支持省略词性和频次，直接一行一个单词。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.txt&lt;/code&gt;词典文件的分隔符为空格或制表符，所以不支持含有空格的词语。如果需要支持空格，请使用英文逗号&lt;code&gt;,&lt;/code&gt;分割的&lt;strong&gt;纯文本&lt;/strong&gt;&lt;code&gt;.csv&lt;/code&gt;文件。在使用Excel等富文本编辑器时，则请注意保存为&lt;strong&gt;纯文本&lt;/strong&gt;形式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;词频词典（如&lt;code&gt;CoreNatureDictionary.ngram.txt&lt;/code&gt;）
&lt;ul&gt;
&lt;li&gt;每一行代表一个单词或条目，格式遵从&lt;code&gt;[单词] [单词的频次]&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;每一行的分隔符为空格或制表符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;少数词典有自己的专用格式，比如同义词词典兼容《同义词词林扩展版》的文本格式，而转移矩阵词典则是一个csv表格。&lt;/p&gt;
&lt;p&gt;下文主要介绍通用词典，如不注明，词典特指通用词典。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-数据结构" class="anchor" aria-hidden="true" href="#数据结构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据结构&lt;/h3&gt;
&lt;p&gt;Trie树（字典树）是HanLP中使用最多的数据结构，为此，我实现了通用的Trie树，支持泛型、遍历、储存、载入。&lt;/p&gt;
&lt;p&gt;用户自定义词典采用AhoCorasickDoubleArrayTrie和二分Trie树储存，其他词典采用基于&lt;a href="http://www.hankcs.com/program/java/%E5%8F%8C%E6%95%B0%E7%BB%84trie%E6%A0%91doublearraytriejava%E5%AE%9E%E7%8E%B0.html" rel="nofollow"&gt;双数组Trie树(DoubleArrayTrie)&lt;/a&gt;实现的&lt;a href="http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html" rel="nofollow"&gt;AC自动机AhoCorasickDoubleArrayTrie&lt;/a&gt;。关于一些常用数据结构的性能评估，请参考&lt;a href="https://github.com/hankcs/HanLP/wiki/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84"&gt;wiki&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-储存形式" class="anchor" aria-hidden="true" href="#储存形式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;储存形式&lt;/h3&gt;
&lt;p&gt;词典有两个形态：文本文件(filename.txt)和缓存文件(filename.txt.bin或filename.txt.trie.dat和filename.txt.trie.value)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文本文件
&lt;ul&gt;
&lt;li&gt;采用明文储存，UTF-8编码，CRLF换行符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缓存文件
&lt;ul&gt;
&lt;li&gt;就是一些二进制文件，通常在文本文件的文件名后面加上.bin表示。有时候是.trie.dat和.trie.value。后者是历史遗留产物，分别代表trie树的数组和值。&lt;/li&gt;
&lt;li&gt;如果你修改了任何词典，只有删除缓存才能生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-修改方法" class="anchor" aria-hidden="true" href="#修改方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;修改方法&lt;/h3&gt;
&lt;p&gt;HanLP的核心词典训练自人民日报2014语料，语料不是完美的，总会存在一些错误。这些错误可能会导致分词出现奇怪的结果，这时请打开调试模式排查问题：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;HanLP&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Config&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;enableDebug();&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;核心词性词频词典
&lt;ul&gt;
&lt;li&gt;比如你在&lt;code&gt;data/dictionary/CoreNatureDictionary.txt&lt;/code&gt;中发现了一个不是词的词，或者词性标注得明显不对，那么你可以修改它，然后删除缓存文件使其生效。&lt;/li&gt;
&lt;li&gt;目前&lt;code&gt;CoreNatureDictionary.ngram.txt&lt;/code&gt;的缓存依赖于&lt;code&gt;CoreNatureDictionary.txt&lt;/code&gt;的缓存，修改了后者之后必须同步删除前者的缓存，否则可能出错&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;核心二元文法词典
&lt;ul&gt;
&lt;li&gt;二元文法词典&lt;code&gt;data/dictionary/CoreNatureDictionary.ngram.txt&lt;/code&gt;储存的是两个词的接续，如果你发现不可能存在这种接续时，删掉即可。&lt;/li&gt;
&lt;li&gt;你也可以添加你认为合理的接续，但是这两个词必须同时在核心词典中才会生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;命名实体识别词典
&lt;ul&gt;
&lt;li&gt;基于角色标注的命名实体识别比较依赖词典，所以词典的质量大幅影响识别质量。&lt;/li&gt;
&lt;li&gt;这些词典的格式与原理都是类似的，请阅读&lt;a href="http://www.hankcs.com/category/nlp/ner/" rel="nofollow"&gt;相应的文章&lt;/a&gt;或代码修改它。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若还有疑问，请参考&lt;a href="http://nlp.hankcs.com/book.php" rel="nofollow"&gt;《自然语言处理入门》&lt;/a&gt;相应章节。如果问题解决了，欢迎向我提交一个pull request，这是我在代码库中保留明文词典的原因，众人拾柴火焰高！&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-自然语言处理入门" class="anchor" aria-hidden="true" href="#自然语言处理入门"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="http://nlp.hankcs.com/book.php" rel="nofollow"&gt;《自然语言处理入门》&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c2888cda58d5bbe02f06733a77c2f71ae4a6d222/687474703a2f2f66696c652e68616e6b63732e636f6d2f696d672f6e6c702d626f6f6b2d73717572652e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/c2888cda58d5bbe02f06733a77c2f71ae4a6d222/687474703a2f2f66696c652e68616e6b63732e636f6d2f696d672f6e6c702d626f6f6b2d73717572652e6a7067" alt="img" data-canonical-src="http://file.hankcs.com/img/nlp-book-squre.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一本配套HanLP的NLP入门书，基础理论与生产代码并重，Python与Java双实现。从基本概念出发，逐步介绍中文分词、词性标注、命名实体识别、信息抽取、文本聚类、文本分类、句法分析这几个热门问题的算法原理与工程实现。书中通过对多种算法的讲解，比较了它们的优缺点和适用场景，同时详细演示生产级成熟代码，助你真正将自然语言处理应用在生产环境中。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nlp.hankcs.com/book.php" rel="nofollow"&gt;《自然语言处理入门》&lt;/a&gt;由南方科技大学数学系创系主任夏志宏、微软亚洲研究院副院长周明、字节跳动人工智能实验室总监李航、华为诺亚方舟实验室语音语义首席科学家刘群、小米人工智能实验室主任兼NLP首席科学家王斌、中国科学院自动化研究所研究员宗成庆、清华大学副教授刘知远、北京理工大学副教授张华平和52nlp作序推荐。感谢各位前辈老师，希望这个项目和这本书能成为大家工程和学习上的“蝴蝶效应”，帮助大家在NLP之路上蜕变成蝶。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-版权" class="anchor" aria-hidden="true" href="#版权"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;版权&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-apache-license-version-20" class="anchor" aria-hidden="true" href="#apache-license-version-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apache License Version 2.0&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如不特殊注明，所有模块都以此协议授权使用。&lt;/li&gt;
&lt;li&gt;任何使用了HanLP的全部或部分功能、词典、模型的项目、产品或文章等形式的成果必须显式注明HanLP及此项目主页。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-青岛大快搜索计算技术股份有限公司" class="anchor" aria-hidden="true" href="#青岛大快搜索计算技术股份有限公司"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;青岛大快搜索计算技术股份有限公司&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HanLP从v1.3版本起至v1.6正式由大快搜索主导开发，并拥有1.3-1.6版本的版权。这些版本继续完全开源，唯一官网为：&lt;a href="http://hanlp.com/" rel="nofollow"&gt;http://hanlp.com/&lt;/a&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-上海林原信息科技有限公司" class="anchor" aria-hidden="true" href="#上海林原信息科技有限公司"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;上海林原信息科技有限公司&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HanLP 早期得到了上海林原公司的大力支持，并拥有1.2及前序版本的版权，相关版本也曾在上海林源公司网站发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-其他版权方" class="anchor" aria-hidden="true" href="#其他版权方"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;其他版权方&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;实施上由个人维护，欢迎任何人与任何公司向本项目开源模块。&lt;/li&gt;
&lt;li&gt;充分尊重所有版权方的贡献，本项目不占有用户贡献模块的版权。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-鸣谢" class="anchor" aria-hidden="true" href="#鸣谢"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;鸣谢&lt;/h3&gt;
&lt;p&gt;感谢下列优秀开源项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hiroshi-manabe/darts-clone-java"&gt;darts-clone-java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/zhenyulu/archive/2007/04/18/718383.html" rel="nofollow"&gt;SharpICTCLAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isnowfy/snownlp"&gt;snownlp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NLPchina/ansj_seg"&gt;ansj_seg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NLPchina/nlp-lang"&gt;nlp-lang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢NLP界各位学者老师的著作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《基于角色标注的中国人名自动识别研究》张华平 刘群&lt;/li&gt;
&lt;li&gt;《基于层叠隐马尔可夫模型的中文命名实体识别》俞鸿魁 张华平 刘群 吕学强 施水才&lt;/li&gt;
&lt;li&gt;《基于角色标注的中文机构名识别》俞鸿魁 张华平 刘群&lt;/li&gt;
&lt;li&gt;《基于最大熵的依存句法分析》 辛霄 范士喜 王轩 王晓龙&lt;/li&gt;
&lt;li&gt;An Efficient Implementation of Trie Structures, JUN-ICHI AOE AND KATSUSHI MORIMOTO&lt;/li&gt;
&lt;li&gt;TextRank: Bringing Order into Texts, Rada Mihalcea and Paul Tarau&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢诸位用户的关注和使用，HanLP并不完善，未来还恳求各位NLP爱好者多多关照，提出宝贵意见。&lt;/p&gt;
&lt;p&gt;作者 &lt;a href="http://weibo.com/hankcs/" rel="nofollow"&gt;@hankcs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2016年9月16日&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hankcs</author><guid isPermaLink="false">https://github.com/hankcs/HanLP</guid><pubDate>Sun, 01 Dec 2019 00:04:00 GMT</pubDate></item><item><title>zhisheng17/flink-learning #5 in All Languages, This month</title><link>https://github.com/zhisheng17/flink-learning</link><description>&lt;p&gt;&lt;i&gt;flink learning blog. http://www.54tianzhisheng.cn  含 Flink 入门、概念、原理、实战、性能调优、源码解析等内容。涉及 Flink Connector、Metrics、Library、DataStream API、Table API &amp; SQL 等内容的学习案例，还有 Flink 落地应用的大型项目案例分享。&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-flink-学习" class="anchor" aria-hidden="true" href="#flink-学习"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flink 学习&lt;/h1&gt;
&lt;p&gt;麻烦路过的各位亲给这个项目点个 star，太不易了，写了这么多，算是对我坚持下来的一种鼓励吧！&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/913e927ccffe142601ce97ae49d645b3856fad46/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30352d32352d3132343032372e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/913e927ccffe142601ce97ae49d645b3856fad46/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30352d32352d3132343032372e6a7067" alt="" data-canonical-src="http://zhisheng-blog.oss-cn-hangzhou.aliyuncs.com/img/2019-05-25-124027.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-本项目结构" class="anchor" aria-hidden="true" href="#本项目结构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;本项目结构&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./pics/Flink-learning.png"&gt;&lt;img src="./pics/Flink-learning.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-build" class="anchor" aria-hidden="true" href="#how-to-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to build&lt;/h2&gt;
&lt;p&gt;Maybe your Maven conf file &lt;code&gt;settings.xml&lt;/code&gt; mirrors can add aliyun central mirror :&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;mirror&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;alimaven&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;mirrorOf&lt;/span&gt;&amp;gt;central&amp;lt;/&lt;span class="pl-ent"&gt;mirrorOf&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;aliyun maven&amp;lt;/&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://maven.aliyun.com/repository/central&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;mirror&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you can run the following command :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn clean package -Dmaven.test.skip=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you can see following result if build success.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6ffd7d0482e54c6f92eb890db7a2cd783dabae9e/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30392d32372d3132313932332e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/6ffd7d0482e54c6f92eb890db7a2cd783dabae9e/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30392d32372d3132313932332e6a7067" alt="" data-canonical-src="http://zhisheng-blog.oss-cn-hangzhou.aliyuncs.com/img/2019-09-27-121923.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-flink-系统专栏" class="anchor" aria-hidden="true" href="#flink-系统专栏"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flink 系统专栏&lt;/h2&gt;
&lt;p&gt;基于 Flink 1.9 讲解的专栏，涉及入门、概念、原理、实战、性能调优、系统案例的讲解。扫码下面专栏二维码可以订阅该专栏&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/acdc1f4b7c5c6ac8f54714817bb0297420eb3d2c/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d31312d30352d3034343733312e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/acdc1f4b7c5c6ac8f54714817bb0297420eb3d2c/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d31312d30352d3034343733312e6a7067" alt="" data-canonical-src="http://zhisheng-blog.oss-cn-hangzhou.aliyuncs.com/img/2019-11-05-044731.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首发地址：&lt;a href="http://www.54tianzhisheng.cn/2019/11/15/flink-in-action/" rel="nofollow"&gt;http://www.54tianzhisheng.cn/2019/11/15/flink-in-action/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;专栏地址：&lt;a href="https://gitbook.cn/gitchat/column/5dad4a20669f843a1a37cb4f" rel="nofollow"&gt;https://gitbook.cn/gitchat/column/5dad4a20669f843a1a37cb4f&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-change" class="anchor" aria-hidden="true" href="#change"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change&lt;/h2&gt;
&lt;p&gt;2019/09/06 将该项目的 Flink 版本升级到 1.9.0，有一些变动，Flink 1.8.0 版本的代码经群里讨论保存在分支 &lt;a href="https://github.com/zhisheng17/flink-learning/tree/feature/flink-1.8.0"&gt;feature/flink-1.8.0&lt;/a&gt; 以便部分同学需要。&lt;/p&gt;
&lt;p&gt;2019/06/08 四本 Flink 书籍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=""&gt;Introduction_to_Apache_Flink_book.pdf&lt;/a&gt;    这本书比较薄，处于介绍阶段，国内有这本的翻译书籍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=""&gt;Learning Apache Flink.pdf&lt;/a&gt;    这本书比较基础，初学的话可以多看看&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=""&gt;Stream Processing with Apache Flink.pdf&lt;/a&gt;    这本书是 Flink PMC 写的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=""&gt;Streaming System.pdf&lt;/a&gt;  这本书评价不是一般的高&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2019/06/09 新增流处理引擎相关的 Paper，在 paper 目录下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./paper/paper.md"&gt;流处理引擎相关的 Paper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-博客" class="anchor" aria-hidden="true" href="#博客"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;博客&lt;/h2&gt;
&lt;p&gt;1、&lt;a href="http://www.54tianzhisheng.cn/2018/10/13/flink-introduction/" rel="nofollow"&gt;Flink 从0到1学习 —— Apache Flink 介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;a href="http://www.54tianzhisheng.cn/2018/09/18/flink-install" rel="nofollow"&gt;Flink 从0到1学习 —— Mac 上搭建 Flink 1.6.0 环境并构建运行简单程序入门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、&lt;a href="http://www.54tianzhisheng.cn/2018/10/27/flink-config/" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 配置文件详解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4、&lt;a href="http://www.54tianzhisheng.cn/2018/10/28/flink-sources/" rel="nofollow"&gt;Flink 从0到1学习 —— Data Source 介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5、&lt;a href="http://www.54tianzhisheng.cn/2018/10/30/flink-create-source/" rel="nofollow"&gt;Flink 从0到1学习 —— 如何自定义 Data Source ？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;6、&lt;a href="http://www.54tianzhisheng.cn/2018/10/29/flink-sink/" rel="nofollow"&gt;Flink 从0到1学习 —— Data Sink 介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;7、&lt;a href="http://www.54tianzhisheng.cn/2018/10/31/flink-create-sink/" rel="nofollow"&gt;Flink 从0到1学习 —— 如何自定义 Data Sink ？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;8、&lt;a href="http://www.54tianzhisheng.cn/2018/11/04/Flink-Data-transformation/" rel="nofollow"&gt;Flink 从0到1学习 —— Flink Data transformation(转换)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9、&lt;a href="http://www.54tianzhisheng.cn/2018/12/08/Flink-Stream-Windows/" rel="nofollow"&gt;Flink 从0到1学习 —— 介绍 Flink 中的 Stream Windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10、&lt;a href="http://www.54tianzhisheng.cn/2018/12/11/Flink-time/" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 中的几种 Time 详解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;11、&lt;a href="http://www.54tianzhisheng.cn/2018/12/30/Flink-ElasticSearch-Sink/" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据写入到 ElasticSearch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;12、&lt;a href="http://www.54tianzhisheng.cn/2019/01/05/Flink-run/" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 项目如何运行？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;13、&lt;a href="http://www.54tianzhisheng.cn/2019/01/06/Flink-Kafka-sink/" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据写入到 Kafka&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;14、&lt;a href="http://www.54tianzhisheng.cn/2019/01/13/Flink-JobManager-High-availability/" rel="nofollow"&gt;Flink 从0到1学习 —— Flink JobManager 高可用性配置&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;15、&lt;a href="http://www.54tianzhisheng.cn/2019/01/14/Flink-parallelism-slot/" rel="nofollow"&gt;Flink 从0到1学习 —— Flink parallelism 和 Slot 介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;16、&lt;a href="http://www.54tianzhisheng.cn/2019/01/15/Flink-MySQL-sink/" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据批量写入到 MySQL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;17、&lt;a href="https://t.zsxq.com/uVbi2nq" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据写入到 RabbitMQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;18、&lt;a href="https://t.zsxq.com/zV7MnuJ" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据写入到 HBase&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;19、&lt;a href="https://t.zsxq.com/zV7MnuJ" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据写入到 HDFS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;20、&lt;a href="https://t.zsxq.com/zV7MnuJ" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据写入到 Redis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;21、&lt;a href="https://t.zsxq.com/uVbi2nq" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据写入到 Cassandra&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;22、&lt;a href="https://t.zsxq.com/zV7MnuJ" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据写入到 Flume&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;23、&lt;a href="https://t.zsxq.com/zV7MnuJ" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据写入到 InfluxDB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;24、&lt;a href="https://t.zsxq.com/zV7MnuJ" rel="nofollow"&gt;Flink 从0到1学习 —— Flink 读取 Kafka 数据写入到 RocketMQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;25、&lt;a href="https://t.zsxq.com/uniY7mm" rel="nofollow"&gt;Flink 从0到1学习 —— 你上传的 jar 包藏到哪里去了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;26、&lt;a href="https://t.zsxq.com/zV7MnuJ" rel="nofollow"&gt;Flink 从0到1学习 —— 你的 Flink job 日志跑到哪里去了&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-flink-源码项目结构" class="anchor" aria-hidden="true" href="#flink-源码项目结构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flink 源码项目结构&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./pics/Flink-code.png"&gt;&lt;img src="./pics/Flink-code.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-学习资料" class="anchor" aria-hidden="true" href="#学习资料"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;学习资料&lt;/h2&gt;
&lt;p&gt;另外我自己整理了些 Flink 的学习资料，目前已经全部放到微信公众号了。
你可以加我的微信：&lt;strong&gt;yuanblog_tzs&lt;/strong&gt;，然后回复关键字：&lt;strong&gt;Flink&lt;/strong&gt; 即可无条件获取到，转载请联系本人获取授权，违者必究。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/36198b31d796211113a59826d34943bff75fb790/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30392d31372d3134333435342e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/36198b31d796211113a59826d34943bff75fb790/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30392d31372d3134333435342e6a7067" alt="" data-canonical-src="http://zhisheng-blog.oss-cn-hangzhou.aliyuncs.com/img/2019-09-17-143454.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;更多私密资料请加入知识星球！&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e2e29d341d2ad2b84abe2e7ad80ce10d22236cf4/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30372d32332d3132343332302e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/e2e29d341d2ad2b84abe2e7ad80ce10d22236cf4/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30372d32332d3132343332302e6a7067" alt="" data-canonical-src="http://zhisheng-blog.oss-cn-hangzhou.aliyuncs.com/img/2019-07-23-124320.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有人要问知识星球里面更新什么内容？值得加入吗？&lt;/p&gt;
&lt;p&gt;目前知识星球内已更新的系列文章：&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-大数据重磅炸弹" class="anchor" aria-hidden="true" href="#大数据重磅炸弹"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;大数据重磅炸弹&lt;/h3&gt;
&lt;p&gt;1、&lt;a href="https://t.zsxq.com/fqfuVRR%E2%80%8B" rel="nofollow"&gt;《大数据重磅炸弹——实时计算引擎 Flink》开篇词&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、、&lt;a href="https://t.zsxq.com/emMBaQN%E2%80%8B" rel="nofollow"&gt;你公司到底需不需要引入实时计算引擎？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、&lt;a href="https://t.zsxq.com/eM3ZRf2" rel="nofollow"&gt;一文让你彻底了解大数据实时计算框架 Flink&lt;/a&gt; ​&lt;/p&gt;
&lt;p&gt;4、&lt;a href="https://t.zsxq.com/eAyRz7Y" rel="nofollow"&gt;别再傻傻的分不清大数据框架Flink、Blink、Spark Streaming、Structured Streaming和Storm之间的区别了&lt;/a&gt;​&lt;/p&gt;
&lt;p&gt;5、&lt;a href="https://t.zsxq.com/iaMJAe6%E2%80%8B" rel="nofollow"&gt;Flink 环境准备看这一篇就够了&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;6、&lt;a href="https://t.zsxq.com/iaMJAe6%E2%80%8B" rel="nofollow"&gt;一文讲解从 Flink 环境安装到源码编译运行&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;7、&lt;a href="https://t.zsxq.com/eaIIiAm" rel="nofollow"&gt;通过 WordCount 程序教你快速入门上手 Flink&lt;/a&gt;  ​&lt;/p&gt;
&lt;p&gt;8、&lt;a href="https://t.zsxq.com/Vnq72jY%E2%80%8B" rel="nofollow"&gt;Flink 如何处理 Socket 数据及分析实现过程&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;9、&lt;a href="https://t.zsxq.com/BiyvFUZ%E2%80%8B" rel="nofollow"&gt;Flink job 如何在 Standalone、YARN、Mesos、K8S 上部署运行？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10、&lt;a href="https://t.zsxq.com/fufUBiA" rel="nofollow"&gt;Flink 数据转换必须熟悉的算子（Operator）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;11、&lt;a href="https://t.zsxq.com/r7aYB2V" rel="nofollow"&gt;Flink 中 Processing Time、Event Time、Ingestion Time 对比及其使用场景分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;12、&lt;a href="https://t.zsxq.com/byZbyrb" rel="nofollow"&gt;如何使用 Flink Window 及 Window 基本概念与实现原理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;13、&lt;a href="https://t.zsxq.com/VzNBi2r" rel="nofollow"&gt;如何使用 DataStream API 来处理数据？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;14、&lt;a href="https://t.zsxq.com/Iub6IQf" rel="nofollow"&gt;Flink WaterMark 详解及结合 WaterMark 处理延迟数据&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-源码系列" class="anchor" aria-hidden="true" href="#源码系列"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;源码系列&lt;/h3&gt;
&lt;p&gt;1、&lt;a href="https://t.zsxq.com/UZfaYfE" rel="nofollow"&gt;Flink 源码解析 —— 源码编译运行&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;a href="https://t.zsxq.com/zZZjaYf" rel="nofollow"&gt;Flink 源码解析 —— 项目结构一览&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、&lt;a href="https://t.zsxq.com/zV7MnuJ" rel="nofollow"&gt;Flink 源码解析—— local 模式启动流程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4、&lt;a href="https://t.zsxq.com/QZVRZJA" rel="nofollow"&gt;Flink 源码解析 —— standalonesession 模式启动流程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5、&lt;a href="https://t.zsxq.com/u3fayvf" rel="nofollow"&gt;Flink 源码解析 —— Standalone Session Cluster 启动流程深度分析之 Job Manager 启动&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;6、&lt;a href="https://t.zsxq.com/MnQRByb" rel="nofollow"&gt;Flink 源码解析 —— Standalone Session Cluster 启动流程深度分析之 Task Manager 启动&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;7、&lt;a href="https://t.zsxq.com/YJ2Zrfi" rel="nofollow"&gt;Flink 源码解析 —— 分析 Batch WordCount 程序的执行过程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;8、&lt;a href="https://t.zsxq.com/qnMFEUJ" rel="nofollow"&gt;Flink 源码解析 —— 分析 Streaming WordCount 程序的执行过程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9、&lt;a href="https://t.zsxq.com/naaMf6y" rel="nofollow"&gt;Flink 源码解析 —— 如何获取 JobGraph？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10、&lt;a href="https://t.zsxq.com/qRFIm6I" rel="nofollow"&gt;Flink 源码解析 —— 如何获取 StreamGraph？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;11、&lt;a href="https://t.zsxq.com/2VRrbuf" rel="nofollow"&gt;Flink 源码解析 —— Flink JobManager 有什么作用？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;12、&lt;a href="https://t.zsxq.com/RZbu7yN" rel="nofollow"&gt;Flink 源码解析 —— Flink TaskManager 有什么作用？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;13、&lt;a href="https://t.zsxq.com/zV7MnuJ" rel="nofollow"&gt;Flink 源码解析 —— JobManager 处理 SubmitJob 的过程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;14、&lt;a href="https://t.zsxq.com/zV7MnuJ" rel="nofollow"&gt;Flink 源码解析 —— TaskManager 处理 SubmitJob 的过程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;15、&lt;a href="https://t.zsxq.com/ynQNbeM" rel="nofollow"&gt;Flink 源码解析 —— 深度解析 Flink Checkpoint 机制&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;16、&lt;a href="https://t.zsxq.com/JaQfeMf" rel="nofollow"&gt;Flink 源码解析 —— 深度解析 Flink 序列化机制&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;17、&lt;a href="https://t.zsxq.com/zjQvjeM" rel="nofollow"&gt;Flink 源码解析 —— 深度解析 Flink 是如何管理好内存的？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;18、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink Metrics 源码解析 —— Flink-metrics-core&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;19、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink Metrics 源码解析 —— Flink-metrics-datadog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;20、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink Metrics 源码解析 —— Flink-metrics-dropwizard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;21、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink Metrics 源码解析 —— Flink-metrics-graphite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;22、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink Metrics 源码解析 —— Flink-metrics-influxdb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;23、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink Metrics 源码解析 —— Flink-metrics-jmx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;24、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink Metrics 源码解析 —— Flink-metrics-slf4j&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;25、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink Metrics 源码解析 —— Flink-metrics-statsd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;26、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink Metrics 源码解析 —— Flink-metrics-prometheus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/521127b114c0924cb205063674a278b557250291/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30372d32362d3135303033372e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/521127b114c0924cb205063674a278b557250291/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30372d32362d3135303033372e6a7067" alt="" data-canonical-src="http://zhisheng-blog.oss-cn-hangzhou.aliyuncs.com/img/2019-07-26-150037.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;26、&lt;a href="https://t.zsxq.com/f6eAu3J" rel="nofollow"&gt;Flink Annotations 源码解析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/222aeae93d1d145bb8e2fd5477967458e4fc4dea/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30372d32362d3134353932332e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/222aeae93d1d145bb8e2fd5477967458e4fc4dea/687474703a2f2f7a68697368656e672d626c6f672e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f696d672f323031392d30372d32362d3134353932332e6a7067" alt="" data-canonical-src="http://zhisheng-blog.oss-cn-hangzhou.aliyuncs.com/img/2019-07-26-145923.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;除了《从1到100深入学习Flink》源码学习这个系列文章，《从0到1学习Flink》的案例文章也会优先在知识星球更新，让大家先通过一些 demo 学习 Flink，再去深入源码学习！&lt;/p&gt;
&lt;p&gt;如果学习 Flink 的过程中，遇到什么问题，可以在里面提问，我会优先解答，这里做个抱歉，自己平时工作也挺忙，微信的问题不能做全部做一些解答，
但肯定会优先回复给知识星球的付费用户的，庆幸的是现在星球里的活跃氛围还是可以的，有不少问题通过提问和解答的方式沉淀了下来。&lt;/p&gt;
&lt;p&gt;1、&lt;a href="https://t.zsxq.com/62rZV7q" rel="nofollow"&gt;为何我使用 ValueState 保存状态 Job 恢复是状态没恢复？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;a href="https://t.zsxq.com/yF2rjmY" rel="nofollow"&gt;flink中watermark究竟是如何生成的，生成的规则是什么，怎么用来处理乱序数据&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、&lt;a href="https://t.zsxq.com/uzFIeiq" rel="nofollow"&gt;消费kafka数据的时候，如果遇到了脏数据，或者是不符合规则的数据等等怎么处理呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4、&lt;a href="https://t.zsxq.com/Nz7QZBY" rel="nofollow"&gt;在Kafka 集群中怎么指定读取/写入数据到指定broker或从指定broker的offset开始消费？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5、&lt;a href="https://t.zsxq.com/7UVBeMj" rel="nofollow"&gt;Flink能通过oozie或者azkaban提交吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;6、&lt;a href="https://t.zsxq.com/mUzRbY7" rel="nofollow"&gt;jobmanager挂掉后，提交的job怎么不经过手动重新提交执行？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;7、&lt;a href="https://t.zsxq.com/Nju7EuV" rel="nofollow"&gt;使用flink-web-ui提交作业并执行 但是/opt/flink/log目录下没有日志文件 请问关于flink的日志（包括jobmanager、taskmanager、每个job自己的日志默认分别存在哪个目录 ）需要怎么配置？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;8、&lt;a href="https://t.zsxq.com/6muRz3j" rel="nofollow"&gt;通过flink 仪表盘提交的jar 是存储在哪个目录下？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9、&lt;a href="https://t.zsxq.com/uvFQvFu" rel="nofollow"&gt;从Kafka消费数据进行etl清洗，把结果写入hdfs映射成hive表，压缩格式、hive直接能够读取flink写出的文件、按照文件大小或者时间滚动生成文件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10、&lt;a href="https://t.zsxq.com/ubIY33f" rel="nofollow"&gt;flink jar包上传至集群上运行，挂掉后，挂掉期间kafka中未被消费的数据，在重新启动程序后，是自动从checkpoint获取挂掉之前的kafka offset位置，自动消费之前的数据进行处理，还是需要某些手动的操作呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;11、&lt;a href="https://t.zsxq.com/UfA2rBy" rel="nofollow"&gt;flink 启动时不自动创建 上传jar的路径，能指定一个创建好的目录吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;12、&lt;a href="https://t.zsxq.com/zBMnIA6" rel="nofollow"&gt;Flink sink to es 集群上报 slot 不够，单机跑是好的，为什么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;13、&lt;a href="https://t.zsxq.com/qrZBAQJ" rel="nofollow"&gt;Fllink to elasticsearch如何创建索引文档期时间戳？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;14、&lt;a href="https://t.zsxq.com/J2JiIMv" rel="nofollow"&gt;blink有没有api文档或者demo，是否建议blink用于生产环境。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;15、&lt;a href="https://t.zsxq.com/ZVVrjuv" rel="nofollow"&gt;flink的Python api怎样？bug多吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;16、&lt;a href="https://t.zsxq.com/zbybQNf" rel="nofollow"&gt;Flink VS Spark Streaming VS Storm VS Kafka Stream &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;17、&lt;a href="https://t.zsxq.com/Zf6meAm" rel="nofollow"&gt;你们做实时大屏的技术架构是什么样子的？flume→kafka→flink→redis，然后后端去redis里面捞数据，酱紫可行吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;18、&lt;a href="https://t.zsxq.com/YniI2JQ" rel="nofollow"&gt;做一个统计指标的时候，需要在Flink的计算过程中多次读写redis，感觉好怪，星主有没有好的方案？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;19、&lt;a href="https://t.zsxq.com/fYZZfYf" rel="nofollow"&gt;Flink 使用场景大分析，列举了很多的常用场景，可以好好参考一下&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;20、&lt;a href="https://t.zsxq.com/I6eEqR7" rel="nofollow"&gt;将kafka中数据sink到mysql时，metadata的数据为空，导入mysql数据不成功？？？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;21、&lt;a href="https://t.zsxq.com/62rZV7q" rel="nofollow"&gt;使用了ValueState来保存中间状态，在运行时中间状态保存正常，但是在手动停止后，再重新运行，发现中间状态值没有了，之前出现的键值是从0开始计数的，这是为什么？是需要实现CheckpointedFunction吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;22、&lt;a href="https://t.zsxq.com/mQ7YbQJ" rel="nofollow"&gt;flink on yarn jobmanager的HA需要怎么配置。还是说yarn给管理了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;23、&lt;a href="https://t.zsxq.com/q3VvB6U" rel="nofollow"&gt;有两个数据流就行connect，其中一个是实时数据流（kafka 读取)，另一个是配置流。由于配置流是从关系型数据库中读取，速度较慢，导致实时数据流流入数据的时候，配置信息还未发送，这样会导致有些实时数据读取不到配置信息。目前采取的措施是在connect方法后的flatmap的实现的在open 方法中，提前加载一次配置信息，感觉这种实现方式不友好，请问还有其他的实现方式吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;24、&lt;a href="https://t.zsxq.com/7UVBeMj" rel="nofollow"&gt;Flink能通过oozie或者azkaban提交吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;25、&lt;a href="https://t.zsxq.com/mUzRbY7" rel="nofollow"&gt;不采用yarm部署flink，还有其他的方案吗？ 主要想解决服务器重启后，flink服务怎么自动拉起？ jobmanager挂掉后，提交的job怎么不经过手动重新提交执行？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;26、&lt;a href="https://t.zsxq.com/bYnimQv" rel="nofollow"&gt;在一个 Job 里将同份数据昨晚清洗操作后，sink 到后端多个地方（看业务需求），如何保持一致性？（一个sink出错，另外的也保证不能插入）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;27、&lt;a href="https://t.zsxq.com/YvBAyrV" rel="nofollow"&gt;flink sql任务在某个特定阶段会发生tm和jm丢失心跳，是不是由于gc时间过长呢，&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;28、&lt;a href="https://t.zsxq.com/fayf2Vv" rel="nofollow"&gt;有这样一个需求，统计用户近两周进入产品详情页的来源（1首页大搜索，2产品频道搜索，3其他），为php后端提供数据支持，该信息在端上报事件中，php直接获取有点困难。 我现在的解决方案 通过flink滚动窗口（半小时），统计用户半小时内3个来源pv，然后按照日期序列化，直接写mysql。php从数据库中解析出来，再去统计近两周占比。 问题1，这个需求适合用flink去做吗？ 问题2，我的方案总感觉怪怪的，有没有好的方案？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;29、&lt;a href="https://t.zsxq.com/ZFiY3VZ" rel="nofollow"&gt;一个task slot  只能同时运行一个任务还是多个任务呢？如果task  slot运行的任务比较大，会出现OOM的情况吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;30、&lt;a href="https://t.zsxq.com/Yn2JqB6" rel="nofollow"&gt;你们怎么对线上flink做监控的，如果整个程序失败了怎么自动重启等等&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;31、&lt;a href="https://t.zsxq.com/YFMFeaA" rel="nofollow"&gt;flink cep规则动态解析有接触吗？有没有成型的框架？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;32、&lt;a href="https://t.zsxq.com/VZvRrjm" rel="nofollow"&gt;每一个Window都有一个watermark吗？window是怎么根据watermark进行触发或者销毁的？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;33、&lt;a href="https://t.zsxq.com/R3ZZJUF" rel="nofollow"&gt; CheckPoint与SavePoint的区别是什么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;34、&lt;a href="https://t.zsxq.com/Aa62Bim" rel="nofollow"&gt;flink可以在算子中共享状态吗？或者大佬你有什么方法可以共享状态的呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;35、&lt;a href="https://t.zsxq.com/ayFmmMF" rel="nofollow"&gt;运行几分钟就报了，看taskmager日志，报的是 failed elasticsearch bulk request null，可是我代码里面已经做过空值判断了呀 而且也过滤掉了，flink版本1.7.2 es版本6.3.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;36、&lt;a href="https://t.zsxq.com/Yzzzb2b" rel="nofollow"&gt;这种情况，我们调并行度 还是配置参数好&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;37、&lt;a href="https://t.zsxq.com/AqBUR3f" rel="nofollow"&gt;大家都用jdbc写，各种数据库增删查改拼sql有没有觉得很累，ps.set代码一大堆，还要计算每个参数的位置&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;38、&lt;a href="https://t.zsxq.com/AqBUR3f" rel="nofollow"&gt;关于datasource的配置，每个taskmanager对应一个datasource?还是每个slot? 实际运行下来，每个slot中datasorce线程池只要设置1就行了，多了也用不到?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;39、&lt;a href="https://t.zsxq.com/AqBUR3f" rel="nofollow"&gt;kafka现在每天出现数据丢失，现在小批量数据，一天200W左右, kafka版本为 1.0.0，集群总共7个节点，TOPIC有十六个分区，单条报文1.5k左右&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;40、&lt;a href="https://t.zsxq.com/AqBUR3f" rel="nofollow"&gt;根据key.hash的绝对值 对并发度求模，进行分组，假设10各并发度，实际只有8个分区有处理数据，有2个始终不处理，还有一个分区处理的数据是其他的三倍，如截图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;41、&lt;a href="https://t.zsxq.com/AqBUR3f" rel="nofollow"&gt;flink每7小时不知道在处理什么， CPU 负载 每7小时，有一次高峰，5分钟内平均负载超过0.8，如截图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;42、&lt;a href="https://t.zsxq.com/M3fIMbu" rel="nofollow"&gt;有没有Flink写的项目推荐？我想看到用Flink写的整体项目是怎么组织的，不单单是一个单例子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;43、&lt;a href="https://t.zsxq.com/yv7EQFA" rel="nofollow"&gt;Flink 源码的结构图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;44、&lt;a href="https://t.zsxq.com/vBAYNJq" rel="nofollow"&gt;我想根据不同业务表（case when）进行不同的redis sink（hash ，set），我要如何操作？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;45、&lt;a href="https://t.zsxq.com/b2zbUJa" rel="nofollow"&gt;这个需要清理什么数据呀，我把hdfs里面的已经清理了 启动还是报这个&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;46、&lt;a href="https://t.zsxq.com/QjQFmQr" rel="nofollow"&gt;  在流处理系统，在机器发生故障恢复之后，什么情况消息最多会被处理一次？什么情况消息最少会被处理一次呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;47、&lt;a href="https://t.zsxq.com/zbQNfuJ" rel="nofollow"&gt;我检查点都调到5分钟了，这是什么问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;48、&lt;a href="https://t.zsxq.com/ZrjEauN" rel="nofollow"&gt;reduce方法后 那个交易时间 怎么不是最新的，是第一次进入的那个时间，&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;49、&lt;a href="https://t.zsxq.com/VJyr3bM" rel="nofollow"&gt;Flink  on Yarn 模式，用yarn session脚本启动的时候，我在后台没有看到到Jobmanager，TaskManager，ApplicationMaster这几个进程，想请问一下这是什么原因呢？因为之前看官网的时候，说Jobmanager就是一个jvm进程，Taskmanage也是一个JVM进程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;50、&lt;a href="https://t.zsxq.com/VJyr3bM" rel="nofollow"&gt;Flink  on Yarn的时候得指定 多少个TaskManager和每个TaskManager slot去运行任务，这样做感觉不太合理，因为用户也不知道需要多少个TaskManager适合，Flink 有动态启动TaskManager的机制吗。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;51、&lt;a href="https://t.zsxq.com/UBmUJMv" rel="nofollow"&gt;参考这个例子，Flink 零基础实战教程：如何计算实时热门商品 | Jark's Blog， 窗口聚合的时候，用keywindow，用的是timeWindowAll，然后在aggregate的时候用aggregate(new CustomAggregateFunction(), new CustomWindowFunction())，打印结果后，发现窗口中一直使用的重复的数据，统计的结果也不变，去掉CustomWindowFunction()就正常了 ？ 非常奇怪&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;52、&lt;a href="https://t.zsxq.com/naQb6aI" rel="nofollow"&gt;用户进入产品预定页面（端埋点上报），并填写了一些信息（端埋点上报），但半小时内并没有产生任何订单，然后给该类用户发送一个push。 1. 这种需求适合用flink去做吗？2. 如果适合，说下大概的思路&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;53、&lt;a href="https://t.zsxq.com/AUf2VNz" rel="nofollow"&gt;业务场景是实时获取数据存redis，请问我要如何按天、按周、按月分别存入redis里？（比方说过了一天自动换一个位置存redis）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;54、&lt;a href="https://t.zsxq.com/UJ6Y7m2" rel="nofollow"&gt;有人 AggregatingState 的例子吗, 感觉官方的例子和 官网的不太一样?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;55、&lt;a href="https://t.zsxq.com/r3BaAY3" rel="nofollow"&gt;flink-jdbc这个jar有吗？怎么没找到啊？1.8.0的没找到，1.6.2的有&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;56、&lt;a href="https://t.zsxq.com/jiybIee" rel="nofollow"&gt;现有个关于savepoint的问题，操作流程为，取消任务时设置保存点，更新任务，从保存点启动任务；现在遇到个问题，假设我中间某个算子重写，原先通过state编写，有用定时器，现在更改后，采用窗口，反正就是实现方式完全不一样；从保存点启动就会一直报错，重启，原先的保存点不能还原，此时就会有很多数据重复等各种问题，如何才能保证数据不丢失，不重复等，恢复到停止的时候，现在想到的是记下kafka的偏移量，再做处理，貌似也不是很好弄，有什么解决办法吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;57、&lt;a href="https://t.zsxq.com/eMJmiQz" rel="nofollow"&gt;需要在flink计算app页面访问时长，消费Kafka计算后输出到Kafka。第一条log需要等待第二条log的时间戳计算访问时长。我想问的是，flink是分布式的，那么它能否保证执行的顺序性？后来的数据有没有可能先被执行？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;58、&lt;a href="https://t.zsxq.com/Y7e6aIu" rel="nofollow"&gt;我公司想做实时大屏，现有技术是将业务所需指标实时用spark拉到redis里存着，然后再用一条spark streaming流计算简单乘除运算，指标包含了各月份的比较。请问我该如何用flink简化上述流程？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;59、&lt;a href="https://t.zsxq.com/QbIayJ6" rel="nofollow"&gt;flink on yarn 方式，这样理解不知道对不对，yarn-session这个脚本其实就是准备yarn环境的，执行run任务的时候，根据yarn-session初始化的yarnDescription 把 flink 任务的jobGraph提交到yarn上去执行&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;60、&lt;a href="https://t.zsxq.com/VFMRbYN" rel="nofollow"&gt;同样的代码逻辑写在单独的main函数中就可以成功的消费kafka ，写在一个spring boot的程序中，接受外部请求，然后执行相同的逻辑就不能消费kafka。你遇到过吗？能给一些查问题的建议，或者在哪里打个断点，能看到为什么消费不到kafka的消息呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;61、&lt;a href="https://t.zsxq.com/QNvjI6Q" rel="nofollow"&gt;请问下flink可以实现一个流中同时存在订单表和订单商品表的数据 两者是一对多的关系  能实现得到 以订单表为主 一个订单多个商品 这种需求嘛&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;62、&lt;a href="https://t.zsxq.com/6ie66EE" rel="nofollow"&gt;在用中间状态的时候，如果中间一些信息保存在state中，有没有必要在redis中再保存一份，来做第三方的存储。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;63、&lt;a href="https://t.zsxq.com/bm6mYjI" rel="nofollow"&gt;能否出一期flink state的文章。什么场景下用什么样的state？如，最简单的，实时累加update到state。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;64、&lt;a href="https://t.zsxq.com/II6AEe2" rel="nofollow"&gt;flink的双流join博主有使用的经验吗？会有什么常见的问题吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;65、&lt;a href="https://t.zsxq.com/V7EmUZR" rel="nofollow"&gt;窗口触发的条件问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;66、&lt;a href="https://t.zsxq.com/JY3NJam" rel="nofollow"&gt;flink 定时任务怎么做？有相关的demo么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;67、&lt;a href="https://t.zsxq.com/7YZ3Fuz" rel="nofollow"&gt;流式处理过程中数据的一致性如何保证或者如何检测&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;68、&lt;a href="https://t.zsxq.com/nEEQvzR" rel="nofollow"&gt;重启flink单机集群，还报job not found 异常。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;69、&lt;a href="https://t.zsxq.com/qJyvzNj" rel="nofollow"&gt;kafka的数据是用 org.apache.kafka.common.serialization.ByteArraySerialize序列化的，flink这边消费的时候怎么通过FlinkKafkaConsumer创建DataStream？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;70、&lt;a href="https://t.zsxq.com/byvnaEi" rel="nofollow"&gt;现在公司有一个需求，一些用户的支付日志，通过sls收集，要把这些日志处理后，结果写入到MySQL，关键这些日志可能连着来好几条才是一个用户的，因为发起请求，响应等每个环节都有相应的日志，这几条日志综合处理才能得到最终的结果，请问博主有什么好的方法没有？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;71、&lt;a href="https://t.zsxq.com/qfie6qR" rel="nofollow"&gt;flink 支持hadoop 主备么？ hadoop主节点挂了 flink 会切换到hadoop 备用节点？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;72、&lt;a href="https://t.zsxq.com/ZVZzZv7" rel="nofollow"&gt;请教大家: 实际 flink 开发中用 scala 多还是 java多些？ 刚入手 flink 大数据 scala 需要深入学习么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;73、&lt;a href="https://t.zsxq.com/Qzbi6yn" rel="nofollow"&gt;我使用的是flink是1.7.2最近用了split的方式分流，但是底层的SplitStream上却标注为Deprecated，请问是官方不推荐使用分流的方式吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;74、&lt;a href="https://t.zsxq.com/Auf2NVR" rel="nofollow"&gt;KeyBy 的正确理解，和数据倾斜问题的解释&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;75、&lt;a href="https://t.zsxq.com/3vnIm62" rel="nofollow"&gt;用flink时，遇到个问题 checkpoint大概有2G左右， 有背压时，flink会重启有遇到过这个问题吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;76、&lt;a href="https://t.zsxq.com/URzVBIm" rel="nofollow"&gt;flink使用yarn-session方式部署，如何保证yarn-session的稳定性，如果yarn-session挂了，需要重新部署一个yarn-session，如何恢复之前yarn-session上的job呢，之前的checkpoint还能使用吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;77、&lt;a href="https://t.zsxq.com/MjyN7Uf" rel="nofollow"&gt;我想请教一下关于sink的问题。我现在的需求是从Kafka消费Json数据，这个Json数据字段可能会增加，然后将拿到的json数据以parquet的格式存入hdfs。现在我可以拿到json数据的schema，但是在保存parquet文件的时候不知道怎么处理。一是flink没有专门的format parquet，二是对于可变字段的Json怎么处理成parquet比较合适？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;78、&lt;a href="https://t.zsxq.com/6qBqVvZ" rel="nofollow"&gt;flink如何在较大的数据量中做去重计算。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;79、&lt;a href="https://t.zsxq.com/Eqjyju7" rel="nofollow"&gt;flink能在没有数据的时候也定时执行算子吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;80、&lt;a href="https://t.zsxq.com/i2zVfIi" rel="nofollow"&gt;使用rocksdb状态后端，自定义pojo怎么实现序列化和反序列化的，有相关demo么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;81、&lt;a href="https://t.zsxq.com/vRJujAi" rel="nofollow"&gt;check point 老是失败，是不是自定义的pojo问题？到本地可以，到hdfs就不行，网上也有很多类似的问题 都没有一个很好的解释和解决方案&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;82、&lt;a href="https://t.zsxq.com/MVFmuB6" rel="nofollow"&gt;cep规则如图，当start事件进入时，时间00:00:15，而后进入end事件，时间00:00:40。我发现规则无法命中。请问within 是从start事件开始计时？还是跟window一样根据系统时间划分的？如果是后者，请问怎么配置才能从start开始计时？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;83、&lt;a href="https://t.zsxq.com/EybM3vR" rel="nofollow"&gt;Flink聚合结果直接写Mysql的幂等性设计问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;84、&lt;a href="https://t.zsxq.com/62VzNRF" rel="nofollow"&gt;Flink job打开了checkpoint，用的rocksdb，通过观察hdfs上checkpoint目录，为啥算副本总量会暴增爆减&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;85、&lt;a href=""&gt;Flink 提交任务的 jar包可以指定路径为 HDFS 上的吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;86、&lt;a href="https://t.zsxq.com/VfimieI" rel="nofollow"&gt;在flink web Ui上提交的任务，设置的并行度为2，flink是stand alone部署的。两个任务都正常的运行了几天了，今天有个地方逻辑需要修改，于是将任务cancel掉(在命令行cancel也试了)，结果taskmanger挂掉了一个节点。后来用其他任务试了，也同样会导致节点挂掉&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;87、&lt;a href="https://t.zsxq.com/nee6qRv" rel="nofollow"&gt;一个配置动态更新的问题折腾好久（配置用个静态的map变量存着，有个线程定时去数据库捞数据然后存在这个map里面更新一把），本地 idea 调试没问题，集群部署就一直报 空指针异常。下游的算子使用这个静态变量map去get key在集群模式下会出现这个空指针异常，估计就是拿不到 map&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;88、&lt;a href="https://t.zsxq.com/3bEUZfQ" rel="nofollow"&gt;批量写入MySQL，完成HBase批量写入&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;89、&lt;a href="https://t.zsxq.com/Zb6AM3V" rel="nofollow"&gt;用flink清洗数据，其中要访问redis，根据redis的结果来决定是否把数据传递到下流，这有可能实现吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;90、&lt;a href="https://t.zsxq.com/RbeYZvb" rel="nofollow"&gt;监控页面流处理的时候这个发送和接收字节为0。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;91、&lt;a href="https://t.zsxq.com/MN7iuZf" rel="nofollow"&gt;sink到MySQL，如果直接用idea的话可以运行，并且成功，大大的代码上面用的FlinkKafkaConsumer010，而我的Flink版本为1.7，kafka版本为2.12，所以当我用FlinkKafkaConsumer010就有问题，于是改为
FlinkKafkaConsumer就可以直接在idea完成sink到MySQL，但是为何当我把该程序打成Jar包，去运行的时候，就是报FlinkKafkaConsumer找不到呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;92、&lt;a href="https://t.zsxq.com/e2VNN7Y" rel="nofollow"&gt;SocketTextStreamWordCount中输入中文统计不出来，请问这个怎么解决，我猜测应该是需要修改一下代码，应该是这个例子默认统计英文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;93、&lt;a href="https://t.zsxq.com/RVRn6AE" rel="nofollow"&gt; Flink 应用程序本地 ide 里面运行的时候并行度是怎么算的？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;94、&lt;a href="https://t.zsxq.com/rzbIQBi" rel="nofollow"&gt; 请问下flink中对于窗口的全量聚合有apply和process两种 他们有啥区别呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;95、&lt;a href="https://t.zsxq.com/UJIubub" rel="nofollow"&gt;不知道大大熟悉Hbase不，我想直接在Hbase中查询某一列数据，因为有重复数据，所以想使用distinct统计实际数据量，请问Hbase中有没有类似于sql的distinct关键字。如果没有，想实现这种可以不？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;96、&lt;a href="https://t.zsxq.com/VFaQn2j" rel="nofollow"&gt; 来分析一下现在Flink,Kafka方面的就业形势，以及准备就业该如何准备的这方面内容呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;97、&lt;a href="https://t.zsxq.com/Zn2FEQZ" rel="nofollow"&gt; 大佬知道flink的dataStream可以转换为dataSet吗？因为数据需要11分钟一个批次计算五六个指标，并且涉及好几步reduce，计算的指标之间有联系，用Stream卡住了。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;98、&lt;a href="https://t.zsxq.com/aIqjmQN" rel="nofollow"&gt;1.如何在同一窗口内实现多次的聚合，比如像spark中的这样2.多个实时流的jion可以用window来处理一批次的数据吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;99、&lt;a href="https://t.zsxq.com/ZNvb2FM" rel="nofollow"&gt;写的批处理的功能，现在本机跑是没问题的，就是在linux集群上出现了问题，就是不知道如果通过本地调用远程jar包然后传参数和拿到结果参数返回本机&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;100、&lt;a href="https://t.zsxq.com/femmiqf" rel="nofollow"&gt;我用standalone开启一个flink集群，上传flink官方用例Socket Window WordCount做测试，开启两个parallelism能正常运行，但是开启4个parallelism后出现错误&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;101、&lt;a href="https://t.zsxq.com/YZ3vbY3" rel="nofollow"&gt; 有使用AssignerWithPunctuatedWatermarks 的案例Demo吗？网上找了都是AssignerWithPeriodicWatermarks的，不知道具体怎么使用？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;102、&lt;a href="https://t.zsxq.com/uzFyVJe" rel="nofollow"&gt; 有一个datastream(从文件读取的)，然后我用flink sql进行计算，这个sql是一个加总的运算，然后通过retractStreamTableSink可以把文件做sql的结果输出到文件吗？这个输出到文件的接口是用什么呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;103、&lt;a href="https://t.zsxq.com/6QNNrZz" rel="nofollow"&gt; 为啥split这个流设置为过期的&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;104、&lt;a href="https://t.zsxq.com/Q7YNRBE" rel="nofollow"&gt; 需要使用flink table的水印机制控制时间的乱序问题，这种场景下我就使用水印+窗口了，我现在写的demo遇到了问题，就是在把触发计算的窗口table（WindowedTable）转换成table进行sql操作时发现窗口中的数据还是乱序的，是不是flink table的WindowedTable不支持水印窗口转table-sql的功能&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;105、&lt;a href="https://t.zsxq.com/Jmayrbi" rel="nofollow"&gt; Flink 对 SQL 的重视性&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;106、&lt;a href="https://t.zsxq.com/ZrZfa2Z" rel="nofollow"&gt; flink job打开了checkpoint，任务跑了几个小时后就出现下面的错，截图是打出来的日志，有个OOM，又遇到过的没？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;107、&lt;a href="https://t.zsxq.com/emaAeyj" rel="nofollow"&gt; 本地测试是有数据的，之前该任务放在集群也是有数据的，可能提交过多次，现在读不到数据了 group id 也换过了， 只能重启集群解决么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;108、&lt;a href="https://t.zsxq.com/ayBa6am" rel="nofollow"&gt;使用flink清洗数据存到es中，直接在flatmap中对处理出来的数据用es自己的ClientInterface类直接将数据存入es当中，不走sink，这样的处理逻辑是不是会有问题。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;108、&lt;a href="https://t.zsxq.com/QNvbE62" rel="nofollow"&gt; flink从kafka拿数据（即增量数据）与存量数据进行内存聚合的需求，现在有一个方案就是程序启动的时候先用flink table将存量数据加载到内存中创建table中，然后将stream的增量数据与table的数据进行关联聚合后输出结束，不知道这种方案可行么。目前个人认为有两个主要问题：1是增量数据stream转化成append table后不知道能与存量的table关联聚合不，2是聚合后输出的结果数据是否过于频繁造成网络传输压力过大&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;109、&lt;a href="https://t.zsxq.com/yzjAQ7a" rel="nofollow"&gt; 设置时间时间特性有什么区别呢,  分别在什么场景下使用呢?两种设置时间延迟有什么区别呢 , 分别在什么场景下使用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;110、&lt;a href="https://t.zsxq.com/qRrJEaa" rel="nofollow"&gt; flink从rabbitmq中读取数据，设置了rabbitmq的CorrelationDataId和checkpoint为EXACTLY_ONCE；如果flink完成一次checkpoint后，在这次checkpoint之前消费的数据都会从mq中删除。如果某次flink停机更新，那就会出现mq中的一些数据消费但是处于Unacked状态。在flink又重新开启后这批数据又会重新消费。那这样是不是就不能保证EXACTLY_ONCE了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;111、&lt;a href="https://t.zsxq.com/mAqn2RF" rel="nofollow"&gt;1. 在Flink checkpoint 中, 像 operator的状态信息 是在设置了checkpoint 之后自动的进行快照吗 ?2. 上面这个和我们手动存储的 Keyed State 进行快照(这个应该是增量快照)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;112、&lt;a href="https://t.zsxq.com/E2BeQ3f" rel="nofollow"&gt;现在有个实时商品数，交易额这种统计需求，打算用 flink从kafka读取binglog日志进行计算，但binglog涉及到insert和update这种操作时 怎么处理才能统计准确，避免那种重复计算的问题？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;113、&lt;a href="https://t.zsxq.com/vjIeyFI" rel="nofollow"&gt;我这边用flink做实时监控，功能很简单，就是每条消息做keyby然后三分钟窗口，然后做些去重操作，触发阈值则报警，现在问题是同一个时间窗口同一个人的告警会触发两次，集群是三台机器，standalone cluster，初步结果是三个算子里有两个收到了同样的数据&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;114、&lt;a href="https://t.zsxq.com/unq3FIa" rel="nofollow"&gt;在使用WaterMark的时候，默认是每200ms去设置一次watermark，那么每个taskmanager之间，由于得到的数据不同，所以往往产生的最大的watermark不同。 那么这个时候，是各个taskmanager广播这个watermark，得到全局的最大的watermark，还是说各个taskmanager都各自用自己的watermark。主要没看到广播watermark的源码。不知道是自己观察不仔细还是就是没有广播这个变量。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;115、&lt;a href="https://t.zsxq.com/AeUnAyN" rel="nofollow"&gt;现在遇到一个需求，需要在job内部定时去读取redis的信息，想请教flink能实现像普通程序那样的定时任务吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;116、&lt;a href="https://t.zsxq.com/z7uZbY3" rel="nofollow"&gt;有个触发事件开始聚合，等到数量足够，或者超时则sink推mq 环境 flink 1.6 用了mapState 记录触发事件 1 数据足够这个OK 2 超时state ttl 1.6支持，但是问题来了，如何在超时时候增加自定义处理？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;117、&lt;a href="https://t.zsxq.com/R7UjeUF" rel="nofollow"&gt;请问impala这种mpp架构的sql引擎，为什么稳定性比较差呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;118、&lt;a href="https://t.zsxq.com/q7myfAQ" rel="nofollow"&gt;watermark跟并行度相关不是，过于全局了，期望是keyby之后再针对每个keyed stream 打watermark，这个有什么好的实践呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;119、&lt;a href="https://t.zsxq.com/rB6yfeA" rel="nofollow"&gt;请问如果把一个文件的内容读取成datastream和dataset，有什么区别吗？？他们都是一条数据一条数据的被读取吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;120、&lt;a href="https://t.zsxq.com/j2j6EyJ" rel="nofollow"&gt;有没有kylin相关的资料，或者调优的经验？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;121、&lt;a href="https://t.zsxq.com/iMjmQVV" rel="nofollow"&gt;flink先从jdbc读取配置表到流中，另外从kafka中新增或者修改这个配置，这个场景怎么把两个流一份配置流？我用的connect,接着发不成广播变量，再和实体流合并，但在合并时报Exception in thread "main" java.lang.IllegalArgumentException&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;122、&lt;a href="https://t.zsxq.com/RFQNFIa" rel="nofollow"&gt;Flink  exactly-once，kafka版本为0.11.0 ，sink基于FlinkKafkaProducer011 每五分钟一次checkpoint，但是checkpoint开始后系统直接卡死，at-lease-once 一分钟能完成的checkpoint， 现在十分钟无法完成没进度还是0， 不知道哪里卡住了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;123、&lt;a href="https://t.zsxq.com/NJq3rj2" rel="nofollow"&gt;flink的状态是默认存在于内存的(也可以设置为rocksdb或hdfs)，而checkpoint里面是定时存放某个时刻的状态信息，可以设置hdfs或rocksdb是这样理解的吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;124、&lt;a href="https://t.zsxq.com/NJq3rj2" rel="nofollow"&gt;Flink异步IO中，下图这两种有什么区别？为啥要加 CompletableFuture.supplyAsync，不太明白？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;125、&lt;a href="https://t.zsxq.com/NJq3rj2" rel="nofollow"&gt;flink的状态是默认存在于内存的(也可以设置为rocksdb或hdfs)，而checkpoint里面是定时存放某个时刻的状态信息，可以设置hdfs或rocksdb是这样理解的吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;126、&lt;a href="https://t.zsxq.com/rniUrjm" rel="nofollow"&gt;有个计算场景，从kafka消费两个数据源，两个数据结构都有时间段概念，计算需要做的是匹配两个时间段，匹配到了，就生成一条新的记录。请问使用哪个工具更合适，flink table还是cep？请大神指点一下 我这边之前的做法，将两个数据流转为table.两个table over window后join成新的表。结果job跑一会就oom.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;127、&lt;a href="https://t.zsxq.com/vRZ7qJ2" rel="nofollow"&gt;一个互联网公司，或者一个业务系统，如果想做一个全面的监控要怎么做？有什么成熟的方案可以参考交流吗？有什么有什么度量指标吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;128、&lt;a href="https://t.zsxq.com/3vfyJau" rel="nofollow"&gt;怎么深入学习flink,或者其他大数据组件，能为未来秋招找一份大数据相关（计算方向）的工作增加自己的竞争力？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;129、&lt;a href="https://t.zsxq.com/VBIunun" rel="nofollow"&gt;oppo的实时数仓，其中明细层和汇总层都在kafka中，他们的关系库的实时数据也抽取到kafka的ods，那么在构建数仓的，需要join 三四个大业务表，业务表会变化，那么是大的业务表是从kafka的ods读取吗？实时数仓，多个大表join可以吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;130、&lt;a href="https://t.zsxq.com/vnaURzj" rel="nofollow"&gt;Tuple类型有什么方法转换成json字符串吗？现在的场景是，结果在存储到sink中时希望存的是json字符串，这样应用程序获取数据比较好转换一点。如果Tuple不好转换json字符串，那么应该以什么数据格式存储到sink中&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;140、&lt;a href="https://t.zsxq.com/J6eAmYb" rel="nofollow"&gt;端到端的数据保证，是否意味着中间处理程序中断，也不会造成该批次处理失败的消息丢失，处理程序重新启动之后，会再次处理上次未处理的消息&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;141、&lt;a href="https://t.zsxq.com/7qBMrBe" rel="nofollow"&gt;关于flink datastream window相关的。比如我现在使用滚动窗口，统计一周内去重用户指标，按照正常watermark触发计算，需要等到当前周的window到达window的endtime时，才会触发，这样指标一周后才能产出结果。我能不能实现一小时触发一次计算，每次统计截止到当前时间，window中所有到达元素的去重数量。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;142、&lt;a href="https://t.zsxq.com/uJqzBIe" rel="nofollow"&gt;FLIP-16 Loop Fault Tolerance 是讲现在的checkpoint机制无法在stream loop的时候容错吗？现在这个问题解决了没有呀？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;143、&lt;a href="https://t.zsxq.com/uZnmQzv" rel="nofollow"&gt;现在的需求是，统计各个key的今日累计值，一分钟输出一次。如，各个用户今日累计点击次数。这种需求用datastream还是table API方便点？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;144、&lt;a href="https://t.zsxq.com/BqnYRN7" rel="nofollow"&gt;本地idea可以跑的工程，放在standalone集群上，总报错，报错截图如下，大佬请问这是啥原因&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;145、&lt;a href="https://t.zsxq.com/7MJujMb" rel="nofollow"&gt;比如现在用k8s起了一个flink集群，这时候数据源kafka或者hdfs会在同一个集群上吗，还是会单独再起一个hdfs/kafka集群&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;146、&lt;a href="https://t.zsxq.com/6U7QFMj" rel="nofollow"&gt;flink kafka sink 的FlinkFixedPartitioner 分配策略，在并行度小于topic的partitions时，一个并行实例固定的写消息到固定的一个partition，那么就有一些partition没数据写进去？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;147、&lt;a href="https://t.zsxq.com/fmq3fYF" rel="nofollow"&gt;基于事件时间，每五分钟一个窗口，五秒钟滑动一次，同时watermark的时间同样是基于事件事件时间的，延迟设为1分钟，假如数据流从12：00开始，如果12：07-12：09期间没有产生任何一条数据，即在12：07-12：09这段间的数据流情况为···· （12：07:00，xxx）,(12:09:00,xxx)······，那么窗口[12:02:05-12:07:05]，[12:02:10-12:07:10]等几个窗口的计算是否意味着只有等到，12：09：00的数据到达之后才会触发&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;148、&lt;a href="https://t.zsxq.com/MRvv3ZV" rel="nofollow"&gt;使用flink1.7，当消费到某条消息(protobuf格式)，报Caused by: org.apache.kafka.common.KafkaException: Record batch for partition Notify-18 at offset 1803009 is invalid, cause: Record is corrupt 这个异常。 如何设置跳过已损坏的消息继续消费下一条来保证业务不终断？ 我看了官网kafka connectors那里，说在DeserializationSchema.deserialize(...)方法中返回null，flink就会跳过这条消息，然而依旧报这个异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;149、&lt;a href="https://t.zsxq.com/MRJeAuj" rel="nofollow"&gt;是否可以抽空总结一篇Flink 的 watermark 的原理案例？一直没搞明白基于事件时间处理时的数据乱序和数据迟到底咋回事&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;150、&lt;a href="https://t.zsxq.com/2rJyNrF" rel="nofollow"&gt;flink中rpc通信的原理，与几个类的讲解，有没有系统详细的文章样，如有求分享，谢谢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;151、&lt;a href="https://t.zsxq.com/bM3ZZRf" rel="nofollow"&gt;Flink中如何使用基于事件时间处理，但是又不使用Watermarks? 我在会话窗口中使用遇到一些问题，图一是基于处理时间的，测试结果session是基于keyby(用户)的，图二是基于事件时间的，不知道是我用法不对还是怎么的，测试结果发现并不是基于keyby(用户的)，而是全局的session。不知道怎么修改？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;152、&lt;a href="https://t.zsxq.com/BMVzzzB" rel="nofollow"&gt;flink实时计算平台，yarn模式日志收集怎么做，为什么会checkpoint失败，报警处理，后需要做什么吗？job监控怎么做&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;153、&lt;a href="https://t.zsxq.com/237EAay" rel="nofollow"&gt;有flink与jstorm的在不同应用场景下, 性能比较的数据吗? 从网络上能找大部分都是flink与storm的比较. 在jstorm官网上有一份比较的图表, 感觉参考意义不大, 应该是比较早的flink版本.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;154、&lt;a href="https://t.zsxq.com/J6eAmYb" rel="nofollow"&gt;为什么使用SessionWindows.withGap窗口的话，State存不了东西呀，每次加1 ，拿出来都是null, 我换成 TimeWindow就没问题。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;155、&lt;a href="https://t.zsxq.com/y3nYZrf" rel="nofollow"&gt;请问一下，flink datastream流处理怎么统计去重指标？  官方文档中只看到批处理有distinct概念。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;156、&lt;a href="https://t.zsxq.com/qRjqFY3" rel="nofollow"&gt;好全的一篇文章，对比分析 Flink，Spark Streaming，Storm 框架&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;157、&lt;a href="https://t.zsxq.com/Eau7qNB" rel="nofollow"&gt;关于 structured_streaming 的 paper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;158、&lt;a href="https://t.zsxq.com/rFYbEeq" rel="nofollow"&gt;zookeeper集群切换领导了，flink集群项目重启了就没有数据的输入和输出了，这个该从哪方面入手解决？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;159、&lt;a href="https://t.zsxq.com/nEAaYNF" rel="nofollow"&gt;我想请教下datastream怎么和静态数据join呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;160、&lt;a href="https://t.zsxq.com/IAAeiA6" rel="nofollow"&gt;时钟问题导致收到了明天的数据，这时候有什么比较好的处理方法？看到有人设置一个最大的跳跃阈值，如果当前数据时间 - 历史最大时间 超过阈值就不更新。如何合理的设计水印，有没有一些经验呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;161、&lt;a href="https://t.zsxq.com/EuJ2RRf" rel="nofollow"&gt;大佬们flink怎么定时查询数据库？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;162、&lt;a href="https://t.zsxq.com/vzZBmYB" rel="nofollow"&gt;现在我们公司有个想法，就是提供一个页面，在页面上选择source sink 填写上sql语句，然后后台生成一个flink的作业，然后提交到集群。功能有点类似于华为的数据中台，就是页面傻瓜式操作。后台能自动根据相应配置得到结果。请问拘你的了解，可以实现吗？如何实现？有什么好的思路。现在我无从下手&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;163、&lt;a href="https://t.zsxq.com/VRFIMfy" rel="nofollow"&gt;请教一下 flink on yarn 的 ha机制&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;164、&lt;a href="https://t.zsxq.com/FAiiEyr" rel="nofollow"&gt;在一般的流处理以及cep, 都可以对于eventtime设置watermark, 有时可能需要设置相对大一点的值, 这内存压力就比较大, 有没有办法不应用jvm中的内存, 而用堆外内存, 或者其他缓存, 最好有cache机制, 这样可以应对大流量的峰值.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;165、&lt;a href="https://t.zsxq.com/YnI2F66" rel="nofollow"&gt;请教一个flink sql的问题。我有两个聚合后的流表A和B，A和Bjoin得到C表。在设置state TTL 的时候是直接对C表设置还是，对A表和B表设置比较好？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;166、&lt;a href="https://t.zsxq.com/unyneEU" rel="nofollow"&gt;spark改写为flink，会不会很复杂，还有这两者在SQL方面的支持差别大吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;167、&lt;a href="https://t.zsxq.com/RfyZFUR" rel="nofollow"&gt;请问flink allowedLateness导致窗口被多次fire，最终数据重复消费，这种问题怎么处理，数据是写到es中&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;168、&lt;a href="https://t.zsxq.com/bIAEyFe" rel="nofollow"&gt;设置taskmanager.numberOfTaskSlots: 4的时候没有问题，但是cpu没有压上去，只用了30%左右，于是设置了taskmanager.numberOfTaskSlots: 8，但是就报错误找不到其中一个自定义的类，然后kafka数据就不消费了。为什么？cpu到多少合适？slot是不是和cpu数量一致是最佳配置？kafka分区数多少合适，是不是和slot,parallesim一致最佳？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;169、&lt;a href="https://t.zsxq.com/BUNfYnY" rel="nofollow"&gt;需求是根据每条日志切分出需要9个字段，有五个指标再根据9个字段的不同组合去做计算。  第一个方法是：我目前做法是切分的9个字段开5分钟大小1分钟计算一次的滑动窗口窗口，进行一次reduce去重，然后再map取出需要的字段，然后过滤再开5分钟大小1分钟计算一次的滑动窗口窗口进行计算保存结果，这个思路遇到的问题是上一个滑动窗口会每一分钟会计算5分钟数据，到第二个窗口划定的5分钟范围的数据会有好多重复，这个思路会造成数据重复。 第二个方法是：切分的9个字段开5分钟大小1分钟计算一次的滑动窗口窗口，再pross方法里完成所有的过滤，聚合计算，但是再高峰期每分钟400万条数据，这个思路担心在高峰期flink计算不过来&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;170、&lt;a href="https://t.zsxq.com/aAqBEY7" rel="nofollow"&gt;a,b,c三个表，a和c有eventtime，a和c直接join可以，a和b join后再和c join 就会报错，这是怎么回事呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;171、&lt;a href="https://t.zsxq.com/zZNNRzr" rel="nofollow"&gt;自定义的source是这样的（图一所示） 使用的时候是这样的（图二所示），为什么无论 sum.print().setParallelism(2)（图2所示）的并行度设置成几最后结果都是这样的&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;172、&lt;a href="https://t.zsxq.com/i6Mz7Yj" rel="nofollow"&gt;刚接触flink，如有问的不合适的地方，请见谅。 1、为什么说flink是有状态的计算？ 2、这个状态是什么？3、状态存在哪里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;173、&lt;a href="https://t.zsxq.com/vNjAIMN" rel="nofollow"&gt;这边用flink 1.8.1的版本，采用flink on yarn，hadoop版本2.6.0。代码是一个简单的滚动窗口统计函数，但启动的时候报错，如下图片。  （2）然后我把flink版本换成1.7.1，重新提交到2.6.0的yarn平台，就能正常运行了。 （3）我们测试集群hadoop版本是3.0，我用flink 1.8.1版本将这个程序再次打包，提交到3.0版本的yarn平台，也能正常运行。 貌似是flink 1.8.1版本与yarn 2.6.0版本不兼容造成的这个问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;174、&lt;a href="https://t.zsxq.com/2rVbm6Y" rel="nofollow"&gt;StateBackend我使用的是MemoryStateBackend， State是怎么释放内存的，例如我在函数中用ValueState存储了历史状态信息。但是历史状态数据我没有手动释放，那么程序会自动释放么？还是一直驻留在内存中&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;175、&lt;a href="https://t.zsxq.com/3bIEAyv" rel="nofollow"&gt;请问老师是否可以提供一些Apachebeam的学习资料 谢谢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;176、&lt;a href="https://t.zsxq.com/yFEyZVB" rel="nofollow"&gt;flink 的 DataSet或者DataStream支持索引查询以及删除吗，像spark rdd，如果不支持的话，该转换成什么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;177、&lt;a href="https://t.zsxq.com/VNrn6iI" rel="nofollow"&gt;关于flink的状态，能否把它当做数据库使用，类似于内存数据库，在处理过程中存业务数据。如果是数据库可以算是分布式数据库吗?是不是使用rocksdb这种存储方式才算是?支持的单库大小是不是只是跟本地机器的磁盘大小相关?如果使用硬盘存储会不会效率性能有影响&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;178、&lt;a href="https://t.zsxq.com/yfmiUvf" rel="nofollow"&gt;我这边做了个http sink，想要批量发送数据，不过现在只能用数量控制发送，但最后的几个记录没法触发发送动作，想问下有没有什么办法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;179、&lt;a href="https://t.zsxq.com/vNvrfmE" rel="nofollow"&gt;请问下如何做定时去重计数，就是根据时间分窗口，窗口内根据id去重计数得出结果，多谢。试了不少办法，没有简单直接办法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;180、&lt;a href="https://t.zsxq.com/rzZbQFA" rel="nofollow"&gt;我有个job使用了elastic search sink. 设置了批量5000一写入，但是看es监控显示每秒只能插入500条。是不是bulkprocessor的currentrequest为0有关&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;181、&lt;a href="https://t.zsxq.com/aIur7ai" rel="nofollow"&gt;有docker部署flink的资料吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;182、&lt;a href="https://t.zsxq.com/VjQjqF6" rel="nofollow"&gt;在说明KeyBy的StreamGraph执行过程时，keyBy的ID为啥是6？  根据前面说，ID是一个静态变量，每取一次就递增1，我觉得应该是3啊，是我理解错了吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;183、&lt;a href="https://t.zsxq.com/BEmAIQv" rel="nofollow"&gt;有没计划出Execution Graph的远码解析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;184、&lt;a href="https://t.zsxq.com/vVjiYJQ" rel="nofollow"&gt;可以分享下物理执行图怎样划分task，以及task如何执行，还有他们之间数据如何传递这块代码嘛？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;185、&lt;a href="https://t.zsxq.com/FyNJQbQ" rel="nofollow"&gt;Flink源码和这个学习项目的结构图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;186、&lt;a href="https://t.zsxq.com/qrjmmaU" rel="nofollow"&gt;请问flink1.8，如何做到动态加载外部udf-jar包呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;187、&lt;a href="https://t.zsxq.com/ZFQjQnm" rel="nofollow"&gt;同一个Task Manager中不同的Slot是怎么交互的，比如：source处理完要传递给map的时候，如果在不同的Slot中，他们的内存是相互隔离，是怎么交互的呢？  我猜是通过序列化和反序列化对象，并且通过网络来进行交互的&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;188、&lt;a href="https://t.zsxq.com/YBQFufi" rel="nofollow"&gt;你们有没有这种业务场景。flink从kafka里面取数据，每一条数据里面有mongdb表A的id,这时我会在map的时候采用flink的异步IO连接A表，然后查询出A表的字段1，再根据该字段1又需要异步IO去B表查询字段2，然后又根据字段2去C表查询字段3.....像这样的业务场景，如果多来几种逻辑，我应该用什么方案最好呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;189、&lt;a href="https://t.zsxq.com/vnufYFY" rel="nofollow"&gt;今天本地运行flink程序，消费socket中的数据，连续只能消费两条，第三条flink就消费不了了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;190、&lt;a href="https://t.zsxq.com/me6EmM3" rel="nofollow"&gt;源数据经过过滤后分成了两条流，然后再分别提取事件时间和水印，做时间窗口，我测试时一条流没有数据，另一条的数据看日志到了窗口操作那边就没走下去，貌似窗口一直没有等到触发&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;191、&lt;a href="https://t.zsxq.com/fubQrvj" rel="nofollow"&gt;有做flink cep的吗，有资料没？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;192、&lt;a href="https://t.zsxq.com/fEQVjAe" rel="nofollow"&gt;麻烦问一下 BucketingSink跨集群写，如果任务运行在hadoop A集群，从kafka读取数据处理后写到Hadoo B集群，即使把core-site.xml和hdfs-site.xml拷贝到代码resources下，路径使用hdfs://hadoopB/xxx，会提示ava.lang.RuntimeException: Error while creating FileSystem when initializing the state of the BucketingSink.，跨集群写这个问题  flink不支持吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;193、&lt;a href="https://t.zsxq.com/fIMVJ2J" rel="nofollow"&gt;想咨询下，如何对flink中的datastream和dataset进行数据采样&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;194、&lt;a href="https://t.zsxq.com/7MVjyzz" rel="nofollow"&gt;一个flink作业经常发生oom，可能是什么原因导致的。  处理流程只有15+字段的解析，redis数据读取等操作，TM配置10g。  业务会在夜间刷数据，qps能打到2500左右~&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;195、&lt;a href="https://t.zsxq.com/jA2NVnU" rel="nofollow"&gt;我看到flink 1.8的状态过期仅支持Processing Time，那么如果我使用的是Event time那么状态就不会过期吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;196、&lt;a href="https://t.zsxq.com/BQv33Rb" rel="nofollow"&gt;请问我想每隔一小时统计一个属性从当天零点到当前时间的平均值，这样的时间窗该如何定义？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;197、&lt;a href="https://t.zsxq.com/nEAiIea" rel="nofollow"&gt;flink任务里面反序列化一个类，报ClassNotFoundException，可是包里面是有这个类的，有遇到这种情况吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;198、&lt;a href="https://t.zsxq.com/RnayrVn" rel="nofollow"&gt;在构造StreamGraph，类似PartitionTransformmation 这种类型的 transform，为什么要添加成一个虚拟节点，而不是一个实际的物理节点呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;199、&lt;a href="https://t.zsxq.com/A2fYNFA" rel="nofollow"&gt;flink消费kafka的数据写入到hdfs中，我采用了BucketingSink 这个sink将operator出来的数据写入到hdfs文件上，并通过在hive中建外部表来查询这个。但现在有个问题，处于in-progress的文件，hive是无法识别出来该文件中的数据，可我想能在hive中实时查询进来的数据，且不想产生很多的小文件，这个该如何处理呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;200、&lt;a href="https://t.zsxq.com/7AurJU3" rel="nofollow"&gt;采用Flink单机集群模式一个jobmanager和两个taskmanager，机器是单机是24核，现在做个简单的功能从kafka的一个topic转满足条件的消息到另一个topic，topic的分区是30，我设置了程序默认并发为30，现在每秒消费2w多数据，不够快，请问可以怎么提高job的性能呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;201、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink Metric 源码分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;202、&lt;a href="https://t.zsxq.com/iAi6QRb" rel="nofollow"&gt;请问怎么理解官网的这段话？按官网的例子，难道只keyby之后才有keyed state，才能托管Flink存储状态么？source和map如果没有自定义operator state的话，状态是不会被保存的？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;203、&lt;a href="https://t.zsxq.com/3rbeuju" rel="nofollow"&gt;想用Flink做业务监控告警，并要能够支持动态添加CEP规则，问下可以直接使用Flink CEP还是siddhi CEP? 有没有相关的资料学习下？谢谢！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;204、&lt;a href="https://t.zsxq.com/eYJUbm6" rel="nofollow"&gt;请问一下，有没有关于水印，触发器的Java方面的demo啊&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;205、&lt;a href="https://t.zsxq.com/QvbAqVB" rel="nofollow"&gt;老师，最近我们线上偶尔出现这种情况，就是40个并行度，其他有一个并行度CheckPoint一直失败，其他39个并行度都是毫秒级别就可以CheckPoint成功，这个怎么定位问题呢？还有个问题 CheckPoint的时间分为三部分 Checkpoint Duration (Async）和 Checkpoint Duration (Sync），还有个 end to end 减去同步和异步的时间，这三部分 分别指代哪块？如果发现这三者中的任意一个步骤时间长，该怎么去优化&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;206、&lt;a href="https://t.zsxq.com/JaUZvbY" rel="nofollow"&gt;我这边有个场景很依赖消费出来的数据的顺序。在源头侧做了很多处理，将kafka修改成一个分区等等很多尝试，最后消费出来的还是乱序的。能不能在flink消费的时候做处理，来保证处理的数据的顺序。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;207、&lt;a href="https://t.zsxq.com/iQfaAeu" rel="nofollow"&gt;有一个类似于实时计算今天的pv，uv需求，采用source-&amp;gt;keyby-&amp;gt;window-&amp;gt;trigger-&amp;gt;process后，在process里采用ValueState计算uv  ,问题是 这个window内一天的所有数据是都会缓存到flink嘛？ 一天的数据量如果大点，这样实现就有问题了，  这个有其他的实现思路嘛？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;208、&lt;a href="https://t.zsxq.com/f6eAu3J" rel="nofollow"&gt;Flink 注解源码解析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;209、&lt;a href="https://t.zsxq.com/IuRJYne" rel="nofollow"&gt;如何监控 Flink 的 TaskManager 和 JobManager&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;210、&lt;a href="https://t.zsxq.com/v7yfEIq" rel="nofollow"&gt;问下，在真实流计算过程中，并行度的设置，是与 kafka topic的partition数一样的吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;211、&lt;a href="https://t.zsxq.com/Zf2F6mM" rel="nofollow"&gt;Flink的日志 如果自己做平台封装在自己的界面中 请问job Manger 和 taskManger 还有用户自己的程序日志 怎么获取呢 有api还是自己需要利用flume 采集到ELK？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;212、&lt;a href="https://t.zsxq.com/72VzBEy" rel="nofollow"&gt;我想问下一般用Flink统计pv uv是怎么做的？uv存到redis? 每个uv都存到redis，会不会撑爆？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;213、&lt;a href="https://t.zsxq.com/zBmm2fq" rel="nofollow"&gt;Flink的Checkpoint 机制，在有多个source的时候，barrier n 的流将被暂时搁置，从其他流接收的记录将不会被处理，但是会放进一个输入缓存input buffer。如果被缓存的record大小超出了input buffer会怎么样？不可能一直缓存下去吧，如果其中某一条就一直没数据的话，整个过程岂不是卡死了？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;214、&lt;a href="https://t.zsxq.com/ZnIAi2j" rel="nofollow"&gt;公司想实时展示订单数据，汇总金额，并需要和前端交互，实时生成数据需要告诉前端，展示成折线图，这种场景的技术选型是如何呢？包括数据的存储，临时汇总数据的存储，何种形式告诉前端&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;215、&lt;a href="https://t.zsxq.com/7EIeEyJ" rel="nofollow"&gt;请问下checkpoint中存储了哪些东西？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;216、&lt;a href="https://t.zsxq.com/euvFaYz" rel="nofollow"&gt;我这边有个需求是实时计算当前车辆与前车距离，用经纬度求距离。大概6000台车，10秒一条经纬度数据。gps流与自己join的地方在进行checkpoint的时候特别缓，每次要好几分钟。checkpoint 状态后端是rocksDB。有什么比较好的方案吗？自己实现一个类似last_value的函数取车辆最新的经纬再join，或者弄个10秒的滑动窗口输出车辆最新的经纬度再进行join，这样可行吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;217、&lt;a href="https://t.zsxq.com/YRnEUFe" rel="nofollow"&gt;flink在启动的时候能不能指定一个时间点从kafka里面恢复数据呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;218、&lt;a href="https://t.zsxq.com/7QJEEyr" rel="nofollow"&gt;我们线上有个问题，很多业务都去读某个hive表，但是当这个hive表正在写数据的时候，偶尔出现过 读到表里数据为空的情况，这个问题怎么解决呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;219、&lt;a href="https://t.zsxq.com/yVnaYR7" rel="nofollow"&gt;使用 InfluxDB 和 Grafana 搭建监控 Flink 的平台&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;220、&lt;a href="https://t.zsxq.com/uvFU7aY" rel="nofollow"&gt;flink消费kafka两个不同的topic,然后进行join操作，如果使用事件时间，两个topic都要设置watermaker吗，如果只设置了topic  A的watermaker,topic B的不设置会有什么影响吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;221、&lt;a href="https://t.zsxq.com/NNFYJMn" rel="nofollow"&gt;请教一个问题，我的Flink程序运行一段时间就会报这个错误，定位好多天都没有定位到。checkpoint 时间是5秒，20秒都不行。Caused by: java.io.IOException: Could not flush and close the file system output stream to hdfs://HDFSaaaa/flink/PointWideTable_OffTest_Test2/1eb66edcfccce6124c3b2d6ae402ec39/chk-355/1005127c-cee3-4099-8b61-aef819d72404 in order to obtain the stream state handle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;222、&lt;a href="https://t.zsxq.com/yvRNFEI" rel="nofollow"&gt;Flink的反压机制相比于Storm的反压机制有什么优势呢？问题2: Flink的某一个节点发生故障，是否会影响其他节点的正常工作？还是会通过Checkpoint容错机制吗把任务转移到其他节点去运行呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;223、&lt;a href="https://t.zsxq.com/ZJmiqZz" rel="nofollow"&gt;我在验证checkpoint的时候遇到给问题，不管是key state 还是operator state，默认和指定uid是可以的恢复state数据的，当指定uidHash时候无法恢复state数据，麻烦大家给解答一样。我操作state是实现了CheckpointedFunction接口，覆写snapshotState和initializeState，再这两个方法里操作的，然后让程序定时抛出异常，观察发现指定uidHash后snapshotState()方法里context.isRestored()为false，不太明白具体是什么原因&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;224、&lt;a href="https://t.zsxq.com/mYV37qF" rel="nofollow"&gt;kafka 中的每条数据需要和 es 中的所有数据(动态增加)关联，关联之后会做一些额外的操作，这个有什么比较可行的方案？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;225、&lt;a href="https://t.zsxq.com/buFeyZr" rel="nofollow"&gt;flink消费kafka数据，设置1分钟checkpoint一次，假如第一次checkpoint完成以后，还没等到下一次checkpoint，程序就挂了，kafka offset还是第一次checkpoint记录的offset,那么下次重新启动程序，岂不是多消费数据了？那flink的 exactly one消费语义是怎么样的？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;226、&lt;a href="https://t.zsxq.com/Znyja62" rel="nofollow"&gt;程序频繁发生Heartbeat of TaskManager with id container_e36_1564049750010_5829_01_000024 timed out. 心跳超时，一天大概10次左右。是内存没给够吗？还是网络波动引起的&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;227、&lt;a href="https://t.zsxq.com/AA6ma2Z" rel="nofollow"&gt;有没有性能优化方面的指导文章？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;228、&lt;a href="https://t.zsxq.com/a2N37a6" rel="nofollow"&gt;flink消费kafka是如何监控消费是否正常的，有啥好办法？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;229、&lt;a href="https://t.zsxq.com/m2FeeMf" rel="nofollow"&gt;我按照官方的wordcount案例写了一个例子，然后在main函数中起了一个线程，原本是准备定时去更新某些配置，准备测试一下是否可行，所以直接在线程函数中打印一条语句测试是否可行。现在测试的结果是不可行，貌似这个线程根本就没有执行，请问这是什么原因呢？   按照理解，JobClient中不是反射类执行main函数吗， 执行main函数的时候为什么没有执行这个线程的打印函数呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;230、&lt;a href="https://t.zsxq.com/EyFUb6m" rel="nofollow"&gt;请问我想保留最近多个完成的checkpoint数据，是通过设置 state.checkpoints.num-retained 吗？要怎么使用？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;231、&lt;a href="https://t.zsxq.com/rFeIAeA" rel="nofollow"&gt;有没有etl实时数仓相关案例么？比如二十张事实表流join&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;232、&lt;a href="https://t.zsxq.com/n2RFmyN" rel="nofollow"&gt;为什么我扔到flink 的stream job，立刻就finished&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;233、&lt;a href="https://t.zsxq.com/iqJiyvN" rel="nofollow"&gt;有没有在flink上机器学习算法的一些例子啊，除了官网提供的flink exampke里的和flink ml里已有的&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;234、&lt;a href="https://t.zsxq.com/uB6aUzZ" rel="nofollow"&gt;如果我想扩展sql的关键词，比如添加一些数据支持，有什么思路，现在想的感觉都要改calcite（刚碰flink感觉难度太大了）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;235、&lt;a href="https://t.zsxq.com/2BEeu3Z" rel="nofollow"&gt;我想实现统计每5秒中每个类型的次数，这个现在不输出，问题出在哪儿啊&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;236、&lt;a href="https://t.zsxq.com/VBA6IUR" rel="nofollow"&gt;我用flink往hbase里写数据，有那种直接批量写hfile的方式的demo没&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;237、&lt;a href="https://t.zsxq.com/IieMFMB" rel="nofollow"&gt;请问怎么监控Kafka消费是否延迟，是否出现消息积压？你有demo吗？这种是用Springboot自己写一个监控，还是咋整啊？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;238、&lt;a href="https://t.zsxq.com/j2fM3BM" rel="nofollow"&gt;请问有计算pv uv的例子吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;239、&lt;a href="https://t.zsxq.com/Rb2Z7uB" rel="nofollow"&gt;通过控制流动态修改window算子窗口类型和长度要怎么写&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;240、&lt;a href="https://t.zsxq.com/UVbaQfM" rel="nofollow"&gt;flink的远程调试能出一版么？网上资料坑的多&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;241、&lt;a href="https://t.zsxq.com/AYVjAuB" rel="nofollow"&gt;企业里，Flink开发，java用得多，还是scala用得多？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;242、&lt;a href="https://t.zsxq.com/j6QfMzf" rel="nofollow"&gt;flink的任务运行在yarn的环境上，在yarn的resourcemanager在进行主备切换时，所有的flink任务都失败了，而MR的任务可以正常运行。报错信息如下：AM is not registered for known application attempt: appattempt_1565306391442_89321_000001 or RM had restarted after AM registered . AM should re-register
请问这是什么原因，该如何处理呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;243、&lt;a href="https://t.zsxq.com/IUVZjUv" rel="nofollow"&gt;请教一个分布式问题，比如在Flink的多个TaskManager上统计指标count，TM1有两条数据，TM2有一条数据，程序是怎么计算出来是3呢？原理是怎么样的&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;244、&lt;a href="https://t.zsxq.com/7MFEQR3" rel="nofollow"&gt;现在公司部分sql查询oracle数据特别的慢，因为查询条件很多想问一下有什么方法，例如基于大数据组件可以加快查询速度的吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;245、&lt;a href="https://t.zsxq.com/Mfa6aQB" rel="nofollow"&gt;想咨询下有没有做过flink同步配置做自定义计算的系统？或者有没有什么好的建议？业务诉求是希望业务用户可以自助配置计算规则做流式计算&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;246、&lt;a href="https://t.zsxq.com/z3bunyN" rel="nofollow"&gt;我这边有个实时同步数据的任务，白天运行的时候一直是正常的，一到凌晨2点多之后就没有数据sink进mysql。晚上会有一些离线任务和一些dataX任务同步数据到mysql。但是任务一切都是正常的，ck也很快20ms，数据也是正常消费。看了yarn上的日志，没有任何error。自定义的sink里面也设置了日志打印，但是log里没有。这种如何快速定位问题。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;247、&lt;a href="https://t.zsxq.com/Y3fe6Mn" rel="nofollow"&gt;有没有flink处理异常数据的案例资料&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;248、&lt;a href="https://t.zsxq.com/I2Z7Ybm" rel="nofollow"&gt;flink中如何传递一个全局变量&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;249、&lt;a href="https://t.zsxq.com/iIUZrju" rel="nofollow"&gt;台4核16G的Flink taskmanager配一个单独的Yarn需要一台啥样的服务器？其他功能都不需要就一个调度的东西？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;250、&lt;a href="https://t.zsxq.com/m6I2BEE" rel="nofollow"&gt;side-output 的分享&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;251、&lt;a href="https://t.zsxq.com/amURFme" rel="nofollow"&gt;使用 InfluxDB + Grafana 监控flink能否配置告警。是不是prometheus更强大点？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;252、&lt;a href="https://t.zsxq.com/rZfyZvn" rel="nofollow"&gt;我们线上遇到一个问题，带状态的算子没有指定 uid，现在代码必须改，那个带状态的算子 不能正常恢复了，有解吗？通过某种方式能获取到系统之前自动生成的uid吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;253、&lt;a href="https://t.zsxq.com/uZz3Z7Q" rel="nofollow"&gt;tableEnv.registerDataStream("Orders", ds, "user, product, amount, proctime.proctime, rowtime.rowtime");请问像这样把流注册成表的时候，这两个rowtime分别是什么意思&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;254、&lt;a href="https://t.zsxq.com/yBiEyf2" rel="nofollow"&gt;我想问一下 flink on yarn session 模式下提交任务官网给的例子是 flink run -c xxx.MainClass job.jar 这里是怎么知道 yarn 上的哪个是 flink 的 appid 呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;255、&lt;a href="https://t.zsxq.com/yBeyfqv" rel="nofollow"&gt;Flink Netty Connector 这个有详细的使用例子？ 通过Netty建立的source能直接回复消息吗？还是只能被动接受消息？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;256、&lt;a href="https://t.zsxq.com/FIEia6M" rel="nofollow"&gt;请问flink sqlclient 提交的作业可以用于生产环境吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;257、&lt;a href="https://t.zsxq.com/ZBIaUvF" rel="nofollow"&gt;flink批处理写回mysql是否没法用tableEnv.sqlUpdate("insert into t2 select * from t1")？作为sink表的t2要如何注册？查跟jdbc相关的就两个TableSink，JDBCAppendTableSink用于BatchTableSink，JDBCUpertTablSink用于StreamTableSink。前者只接受insert into  values语法。所以我是先通过select from查询获取到DataSet再JDBCAppendTableSink.emitDataSet(ds)实现的，但这样达不到sql rule any目标&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;258、&lt;a href="https://t.zsxq.com/aq3BIU7" rel="nofollow"&gt;请问在stream模式下，flink的计算结果在不落库的情况下，可以通过什么restful api获取计算结果吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;259、&lt;a href="https://t.zsxq.com/NbYnAYF" rel="nofollow"&gt;现在我有场景，需要把一定的消息发送给kafka topic指定的partition，该怎么搞？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;260、&lt;a href="https://t.zsxq.com/YfmAMfm" rel="nofollow"&gt;请问我的job作业在idea上运行正常 提交到生产集群里提示Caused by: java.lang.NoSuchMethodError: org.apache.flink.api.java.ClosureCleaner.clean(Ljava/lang/Object;Z)V请问如何解决&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;261、&lt;a href="https://t.zsxq.com/72n6MVb" rel="nofollow"&gt;遇到一个很奇怪的问题，在使用streamingSQL时，发现timestamp在datastream的时候还是正常的，在注册成表print出来的时候就少了八小时，大佬知道是什么原因么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;262、&lt;a href="https://t.zsxq.com/RjQFmIQ" rel="nofollow"&gt;请问将flink的产生的一些记录日志异步到kafka中，需要如何配置，配置后必须要重启集群才会生效吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;263、&lt;a href="https://t.zsxq.com/Q7u3vzR" rel="nofollow"&gt;星主你好，问下flink1.9对维表join的支持怎么样了？有文档吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;264、&lt;a href="https://t.zsxq.com/aEEA66M" rel="nofollow"&gt;请问下 flink slq： SELECT city_name as city_name, count(1) as total, max(create_time) as create_time FROM * 。代码里面设置窗口为： retractStream.timeWindowAll(Time.minutes(5))一个global窗口，数据写入hdfs   结果数据重复 ，存在两条完全重复的数据如下 常州、2283、 1566230703）：请问这是为什么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;265、&lt;a href="https://t.zsxq.com/YNrfyrj" rel="nofollow"&gt;我用rocksdb存储checkpoint，线上运行一段时间发展checkpoint占用空间越来越大，我是直接存本地磁盘上的，怎么样能让它自动清理呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;266、&lt;a href="https://t.zsxq.com/aAaqFYn" rel="nofollow"&gt;flink应该在哪个用户下启动呢，是root的还是在其他的用户呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;267、&lt;a href="https://t.zsxq.com/2nUBIAI" rel="nofollow"&gt;link可以读取lzo的文件吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;268、&lt;a href="https://t.zsxq.com/beIY7mY" rel="nofollow"&gt;怎么快速从es里面便利数据？我们公司现在所有的数据都存在Es里面的;我发现每次从里面scan数据的时候特别慢;你那有没有什么好的办法？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;269、&lt;a href="https://t.zsxq.com/fYnYrR7" rel="nofollow"&gt;如果想让数据按照其中一个假如f0进行分区，然后每一个分区做处理的时候并行度都是1怎么设置呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;270、&lt;a href="https://t.zsxq.com/nQFYrBm" rel="nofollow"&gt;近在写算子的过程中,使用scala语言写flink比较快,而且在process算子中实现ontime方式时,可以使用scala中的listbuff来输出一个top3的记录;那么到了java中,只能用ArrayList将flink中的ListState使用get()方法取出之后放在ArrayList吗?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;271、&lt;a href="https://t.zsxq.com/eyRRv7q" rel="nofollow"&gt;请问老师能否出一些1.9版本维表join的例子 包括async和维表缓存？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;272、&lt;a href="https://t.zsxq.com/aMRzjMb" rel="nofollow"&gt;flink kaka source设置为从组内消费，有个问题是第一次启动任务，我发现kafka中的历史数据不会被消费，而是从当前的数据开始消费，而第二次启动的时候才会从组的offset开始消费，有什么办法可以让第一次启动任务的时候可以消费kafka中的历史数据吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;273、&lt;a href="https://t.zsxq.com/3ZjiEMv" rel="nofollow"&gt;1.使用flink定时处理离线数据，有时间戳字段，如何求出每分钟的最大值，类似于流处理窗口那样，2如果想自己实现批流统一，有什么好的合并方向吗？比如想让流处理使用批处理的一个算子。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;274、&lt;a href="https://t.zsxq.com/AIYnEQN" rel="nofollow"&gt;flink怎么实现流式数据批量对待？流的数据是自定义的source，读取的redis多个Hash表，需要控制批次的概念&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;275、&lt;a href="https://t.zsxq.com/yJuFEYb" rel="nofollow"&gt;有人说不推荐在一个task中开多个线程，这个你怎么看？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;276、&lt;a href="https://t.zsxq.com/3f6YBmu" rel="nofollow"&gt;想做一个运行在hbase+es架构上的sql查询方案，flink sql能做吗，或者有没有其他的解决方案或者思路？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;277、&lt;a href="https://t.zsxq.com/jIAqVnm" rel="nofollow"&gt;正在紧急做第一个用到Flink的项目，咨询一下，Flink 1.8.1写入ES7就是用自带的Sink吗？有没有例子分享一下，我搜到的都是写ES6的。这种要求我知道不适合提，主要是急，自己试几下没成功。T T&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;278、&lt;a href="https://t.zsxq.com/2fAiuzf" rel="nofollow"&gt;手动停止任务后，已经保存了最近一次保存点，任务重新启动后，如何使用上一次检查点？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;279、&lt;a href="https://t.zsxq.com/BIiImQN" rel="nofollow"&gt;批处理使用流环境（为了使用窗口），那如何确定批处理结束，就是我的任务可以知道批文件读取完事，并且处理完数据后关闭任务，如果不能，那批处理如何实现窗口功能&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;280、&lt;a href="https://t.zsxq.com/Mjyzj66" rel="nofollow"&gt;如果限制只能在window 内进行去重，数据量还比较大，有什么好的方法吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;281、&lt;a href="https://t.zsxq.com/yv7Ujme" rel="nofollow"&gt;端到端exactly once有没有出文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;282、&lt;a href="https://t.zsxq.com/IqNZFey" rel="nofollow"&gt;流怎么动态加？，流怎么动态删除？，参数怎么动态修改 （广播&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;283、&lt;a href="https://t.zsxq.com/r7AqvBq" rel="nofollow"&gt;自定义的source数据源实现了有批次的概念，然后Flink将这个一个批次流注册为多个表join操作，有办法知道这个sql什么时候计算完成了？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;284、&lt;a href="https://t.zsxq.com/rvJiyf6" rel="nofollow"&gt;编译 Flink 报错，群主遇到过没，什么原因&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;285、&lt;a href="https://t.zsxq.com/nufIaey" rel="nofollow"&gt;我现在是flink on yarn用zookeeper做HA现在在zk里查看检查点信息，为什么里面的文件是ip，而不是路径呢？我该如何拿到那个路径。
- 排除rest api 方式获取，因为任务关了restapi就没了
-排除history server，有点不好用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;286、&lt;a href="https://t.zsxq.com/Fy3RfE6" rel="nofollow"&gt;在使用streamfilesink消费kafka之后进行hdfs写入的时候，当直接关闭flink程序的时候，下次再启动程序消费写入hdfs的时候，文件又是从part-0-0开始，这样就跟原来写入的冲突了，该文件就一直处于ingress状态。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;287、&lt;a href="https://t.zsxq.com/myNF2zj" rel="nofollow"&gt;现在有一个实时数据分析的需求，数据量不大，但要求sink到mysql，因为是实时更新的，我现在能想到的处理方法就是每次插入一条数据的时候，先从mysql读数据，如果有这条，就执行update，没有的话就insert，但是这样的话每写一条数据就有两次交互了。想问一下老师有没有更好的办法，或者flink有没有内置的api可以执行这种不确定是更新还是插入的操作&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;288、&lt;a href="https://t.zsxq.com/ZFiMzrF" rel="nofollow"&gt;Flink设置了checkpoint，job manage会定期删除check point数据，但是task manage不删除，这个是什么原因&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;289、&lt;a href="https://t.zsxq.com/z3RzJUV" rel="nofollow"&gt;请教一下使用rocksdb作为statebackend ，在哪里可以监控rocksdb io 内存指标呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;290、&lt;a href="https://t.zsxq.com/AUjE2ZR" rel="nofollow"&gt;状态的使用场景，以及用法能出个文章不，这块不太了解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;291、&lt;a href="https://t.zsxq.com/aaynii6" rel="nofollow"&gt;请问一下  Flink 1.9  SQL API中distinct count 是如何实现高效的流式去重的？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;292、&lt;a href="https://t.zsxq.com/mmEyVJA" rel="nofollow"&gt;在算子内如何获取当前算子并行度以及当前是第几个task&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;293、&lt;a href="https://t.zsxq.com/fIqNF6y" rel="nofollow"&gt;有没有flink1.9结合hive的demo。kafka到hive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;294、&lt;a href="https://t.zsxq.com/ne6UZrB" rel="nofollow"&gt;能给讲讲apache calcite吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;295、&lt;a href="https://t.zsxq.com/VbUVFMr" rel="nofollow"&gt;请问一下像这种窗口操作，怎么保证程序异常重启后保持数据的状态呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;296、&lt;a href="https://t.zsxq.com/EMZFyZz" rel="nofollow"&gt;请问一下，我在使用kafkasource的时候，把接过来的Jsonstr转化成自定义的一个类型，用的是gson. fromJson（jsonstr,classOf[Entity]）报图片上的错误了，不知道怎么解决，在不转直接打印的情况下是没问题的&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;297、&lt;a href="https://t.zsxq.com/IEieI6a" rel="nofollow"&gt;DataStream读数据库的表，做多表join，能设置时间窗口么，一天去刷一次。流程序会一直拉数据，数据库扛不住了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;298、&lt;a href="https://t.zsxq.com/IemmiY7" rel="nofollow"&gt;请问一下flink支持多路径通配读取吗？例如路径：s3n://pekdc2-deeplink-01/Kinesis/firehose/2019/07/03/&lt;em&gt;/&lt;/em&gt;  ，通配读取找不到路径。是否需要特殊设置&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;299、&lt;a href="https://t.zsxq.com/QvZFUNN" rel="nofollow"&gt;flink yarn环境部署 但是把容器的url地址删除。就会跳转到的hadoop的首页。怎么屏蔽hadoop的yarn首页地址呢？要不暴露这个地址用户能看到所有任务很危险&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;300、&lt;a href="https://t.zsxq.com/2JiubeM" rel="nofollow"&gt;flink sql怎么写一个流，每秒输出当前时间呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;301、&lt;a href="https://t.zsxq.com/bQ33BmM" rel="nofollow"&gt;因为想通过sql弄一个数据流。哈哈 另外想问一个问题，我把全局设置为根据处理时间的时间窗口，那么我在processAllWindowFunction里面要怎么知道进来的每个元素的处理时间是多少呢？这个元素进入这个时间窗口的依据是什么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;302、&lt;a href="https://t.zsxq.com/rB6ybYF" rel="nofollow"&gt;如何实现一个设备上报的数据存储到同一个hdfs文件中？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;303、&lt;a href="https://t.zsxq.com/MVfeeiu" rel="nofollow"&gt;我自己写的kafka生产者测试，数据格式十分简单（key,i）key是一个固定的不变的字符串，i是自增的，flink consumer这边我开了checkpoint. 并且是exactly once，然后程序很简单，就是flink读取kafka的数据然后直接打印出来，我发现比如我看到打印到key，10的时候我直接关掉程序，然后重新启动程序，按理来说应当是从上次的offset继续消费，也就是key,11，但实际上我看到的可能是从key，9开始，然后依次递增，这是是不是说明是重复消费了，那exactly one需要怎么样去保障？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;304、&lt;a href="https://t.zsxq.com/meqzJme" rel="nofollow"&gt;假设有一个数据源在源源不断的产生数据，到Flink的反压来到source端的时候，由于Flink处理数据的速度跟不上数据源产生数据的速度，
问题1: 这个时候在Flink的source端会怎么处理呢？是将处理不完的数据丢弃还是进行缓存呢？
问题2: 如果是缓存，怎么进行缓存呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;305、&lt;a href="https://t.zsxq.com/2fEeMny" rel="nofollow"&gt;一个stream 在sink多个时，这多个sink是串行 还是并行的。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;306、&lt;a href="https://t.zsxq.com/NJY76uf" rel="nofollow"&gt;我想在流上做一个窗口，触发窗口的条件是固定的时间间隔或者数据量达到预切值，两个条件只要有一个满足就触发，除了重写trigger在，还有什么别的方法吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;307、&lt;a href="https://t.zsxq.com/A6UN7eE" rel="nofollow"&gt;使用rocksdb作为状态后端，对于使用sql方式对时间字段进行group by，以达到去窗口化，但是这样没办法对之前的数据清理，导致磁盘空间很大，对于这种非编码方式，有什么办法设置ttl，清理以前的数据吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;308、&lt;a href="https://t.zsxq.com/a2fUnEM" rel="nofollow"&gt;请问什么时间窗为什么会有TimeWindow{start=362160000, end=362220000}
和 TimeWindow{start=1568025300000, end=1568025360000}这两种形式，我都用的是一分钟的TumblingEventTimeWindows，为什么会出现不同的情况？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;309、&lt;a href="https://t.zsxq.com/Y3jqjuj" rel="nofollow"&gt;比如我统计一天的订单量。但是某个数据延迟一天才到达。比如2019.08.01这一天订单量应该是1000，但是有个100的单据迟到了，在2019.08.02才到达，那么导致2019.08.01这一天统计的是900.后面怎么纠正这个错误的结果呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;310、&lt;a href="https://t.zsxq.com/zJaMNne" rel="nofollow"&gt;flink streaming 模式下只使用堆内内存么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;311、&lt;a href="https://t.zsxq.com/EmMrvVb" rel="nofollow"&gt;如果考虑到集群的迁移，状态能迁移吗&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;312、&lt;a href="https://t.zsxq.com/6EUFeqr" rel="nofollow"&gt;我们现在有一个业务场景，数据上报的值是这样的格式（时间，累加值），我们需要这样的格式数据（时间，当前值）。当前值=累加值-前一个数据的累加值。flink如何做到呢，有考虑过state机制，但是服务宕机后，state就被清空了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;313、&lt;a href="https://t.zsxq.com/y7U7Mzf" rel="nofollow"&gt;Flink  On  k8s 与 Flink on  Yarn相比的优缺点是什么？那个更适合在生产环境中使用呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;314、&lt;a href="https://t.zsxq.com/zVNbaYn" rel="nofollow"&gt;有没有datahub链接flink的 连接器呀&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;315、&lt;a href="https://t.zsxq.com/FQRNJ2j" rel="nofollow"&gt;单点resourcemanager 挂了，对任务会产生什么影响呢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;316、&lt;a href="https://t.zsxq.com/rnemUN3" rel="nofollow"&gt;flink监控binlog,跟另一张维表做join后，sink到MySQL的最终表。对于最终表的增删改操作，需要定义不同的sink么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;317、&lt;a href="https://t.zsxq.com/JaaQFqB" rel="nofollow"&gt;请问窗口是在什么时候合并的呢？例如：数据进入windowoperator的processElement，如果不是sessionwindow，是否会进行窗口合并呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;318、&lt;a href="https://t.zsxq.com/AqNFM33" rel="nofollow"&gt;Flink中一条流能参与多路计算，并多处输出吗？他们之前会不会相互影响？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;319、&lt;a href="https://t.zsxq.com/nUzbiYj" rel="nofollow"&gt;keyBy算子定义是将一个流拆分成不相交的分区，每个分区包含具有相同的key的元素。我不明白的地方是: keyBy怎么设置分区数，是给这个算子设置并行度吗？ 分区数和slot数量是什么关系？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;320、&lt;a href="https://t.zsxq.com/66URfQb" rel="nofollow"&gt;动态cep-pattern，能否详细说下？滴滴方案未公布，您贴出来的几张图片是基于1.7的。或者有什么想法也可以讲解下，谢谢了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;321、&lt;a href="https://t.zsxq.com/maEQ3NR" rel="nofollow"&gt;问题1：使用常驻型session ./bin/yarn-session.sh -n 10 -s 3 -d启动，这个时候分配的资源是yarn 队列里面的, flink提交任务 flink run xx.jar,  其余机器是怎样获取到flink需要运行时的环境的，因为我只在集群的一台机器上有flink 安装包。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;322、&lt;a href="https://t.zsxq.com/YjEYjQz" rel="nofollow"&gt;flink task manager中slot间的内存隔离，cpu隔离是怎么实现的？flink 设计slot的概念有什么意义，为什么不像spark executor那样，内部没有做隔离？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;323、&lt;a href="https://t.zsxq.com/nuzvVzZ" rel="nofollow"&gt;spark和kafka集成，direct模式，spark的一个分区对应kafka的一个主题的一个分区。那flink和kafka集成的时候，怎么消费kafka的数据，假设kafka某个主题5个partition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;324、&lt;a href="https://t.zsxq.com/27u3ZZf" rel="nofollow"&gt;./bin/flink run -m yarn-cluster 执行的flink job ，作业自己打印的日志通过yarn application的log查看不了，只有集群自身的日志，程序中logger.info打印日志存放在哪，还是我打包的方式问题，打日志用的是slf4j。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;325、&lt;a href="https://t.zsxq.com/miuzFY3" rel="nofollow"&gt;在物联网平台中，需要对每个key下的数据做越限判断，由于每个key的越限值是不同的，越限值配置在实时数据库中。
若将越限值加载到state中，由于key的量很大（大概3亿左右），会导致state太大，可能造成内存溢出。若在处理数据时从实时数据库中读取越限值，由于网络IO开销，可能造成实时性下降。请问该如何处理？谢谢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;326、&lt;a href="https://t.zsxq.com/amURvZR" rel="nofollow"&gt;如果我一个flink程序有多个window操作，时间戳和watermark是不是每个window都需要分配，还有就是事件时间是不是一定要在数据源中就存在某个字段&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;327、&lt;a href="https://t.zsxq.com/eqFuBYz" rel="nofollow"&gt;有没有flink1.9刚支持的用ddl链接kafka并写入hbase的资料，我们公司想把离线的数仓逐渐转成实时的，写sql对于我们来说上手更快一些，就想找一些这方面的资料学习一下。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;328、&lt;a href="https://t.zsxq.com/yVvR3V3" rel="nofollow"&gt;flink1.9 进行了数据类型的转化时发生了不匹配的问题，  目前使用的Type被弃用，推荐使用是datatypes 类型，但是之前使用的Type类型的方法 对应的schema typeinformation 目前跟datatypes的返回值不对应，请问下  该怎么去调整适配？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;329、&lt;a href="https://t.zsxq.com/6AIQnEi" rel="nofollow"&gt;link中处理数据其中一条出了异常都会导致整个job挂掉?有没有方法(除了异常捕获)让这条数据记录错误日志就行 下面的数据接着处理呢? 粗略看过一些容错处理，是关于程度挂了重启后从检查点拉取数据，但是如果这条数据本身就问提(特别生产上，这样就导致job直接挂了，影响有点大)，那应该怎么过滤掉这条问题数据呢(异常捕获是最后的方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;330、&lt;a href="https://t.zsxq.com/RBmi2vB" rel="nofollow"&gt;我在一个做日报的统计中使用rabbitmq做数据源，为什么rabbitmq中的数据一直处于unacked状态，每分钟触发一次窗口计算，并驱逐计算过的元素，我在测试环境数据都能ack,但是一到生产环境就不行了，也没有报错，有可能是哪里出了问题啊&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;331、&lt;a href="https://t.zsxq.com/fuNfuBi" rel="nofollow"&gt;我们目前数据流向是这样的，kafka source ，etl，redis sink 。这样chk 是否可以保证端到端语义呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;332、&lt;a href="https://t.zsxq.com/mIeMzvf" rel="nofollow"&gt;1.在通过 yarn-session 提交 flink job 的时候。flink-core, flink-clients, flink-scala, flink-streaming-scala, scala-library, flink-connector-kafka-0.10 那些应该写 provided scope，那些应该写 compile scope，才是正确、避免依赖冲突的姿势？
2.flink-dist_2.11-1.8.0.jar 究竟包含了哪些依赖？（这个文件打包方式不同于 springboot，无法清楚看到有哪些 jar 依赖）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;333、&lt;a href="https://t.zsxq.com/AQzj6Qv" rel="nofollow"&gt;Flink 中使用 count window 会有这样的问题就是，最后有部分数据一直没有达到 count 的值，然后窗口就一直不触发，这里看到个思路，可以将 time window + count window 组合起来&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;334、&lt;a href="https://t.zsxq.com/VvR3Bai" rel="nofollow"&gt;flink流处理时，注册一个流数据为Table后，该流的历史数据也会一直在Table里面么？为什么每次来新数据，历史处理过得数据会重新被执行？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;335、&lt;a href="https://t.zsxq.com/jMfyNZv" rel="nofollow"&gt;available是变化数据，除了最新的数据被插入数据库，之前处理过数据又重新执行了几次&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;336、&lt;a href="https://t.zsxq.com/m6Yrv7Q" rel="nofollow"&gt;这里两天在研究flink的广播变量，发现一个问题，DataSet数据集中获取广播变量，获取的内存地址是一样的（一台机器维护一个广播数据集）。在DataStream中获取广播变量就成了一个task维护一个数据集。（可能是我使用方式有问题）  所以想请教下星主，DataStream中获取一个画面变量可以如DataSet中一台机器维护一个数据吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;337、&lt;a href="https://t.zsxq.com/nqzZrbq" rel="nofollow"&gt;Flink程序开启checkpoint 机制后，用yarn命令多次killed以后，ckeckpoint目录下有多个job id，再次开辟资源重新启动程序，程序如何找到上一次jobid目录下，而不是找到其他的jobid目录下？默认是最后一个还是需要制定特定的jobid？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;338、&lt;a href="https://t.zsxq.com/RNzfQ7e" rel="nofollow"&gt;发展昨天的数据重复插入问题，是把kafka里进来的数据流registerDataStream注册为Table做join时，打印表的长度发现，数据会一直往表里追加，怎样才能来一条处理一条，不往上追加呀&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;339、&lt;a href="https://t.zsxq.com/AqRvNNj" rel="nofollow"&gt;flink1.9 sql 有没有类似分区表那样的处理方式呢？我们现在有一个业务是1个source，但是要分别计算5分钟，10分钟，15分钟的数据。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;340、&lt;a href="https://t.zsxq.com/q3feIuv" rel="nofollow"&gt;我刚弄了个服务器，在启动基础的命令时候发现task没有启动起来，导致web页是三个0，我看了log也没有报错信息，请问您知道可能是什么问题吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;241、&lt;a href="https://t.zsxq.com/EIiyjeU" rel="nofollow"&gt;我自定义了个 Sink extends RichSinkFunction，有了 field： private transient Object lock;
这个 lock 我直接初始化  private transient Object lock = new Object(); 就不行，在 invoke 里 使用lock时空指针，如果lock在 自定义 Sink 的 构造器初始化也不行。但是在 open 方法里初始化就可以，为什么？能解释一下 执行原理吗？如果一个slot 运行着5个 sink实例，那么 这个sink对象会new 5个还是1个？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;342、&lt;a href="https://t.zsxq.com/aMNnIy3" rel="nofollow"&gt;请问Kafka的broker 个数怎么估算？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;343、&lt;a href="https://t.zsxq.com/BU7iqbi" rel="nofollow"&gt;flink on yarn如何远程调试&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;344、&lt;a href="https://t.zsxq.com/F6U7YbY" rel="nofollow"&gt;目前有个需求：就是源数据是dataA、dataB、DataC通过kafka三个topic获取，然后进行合并。
但是有有几个问题，目前不知道怎么解决：
dataA="id:10001,info:&lt;em&gt;&lt;strong&gt;,date:2019-08-01 12:23:33,entry1:1,entryInfo1:&lt;/strong&gt;&lt;/em&gt;"
dataB="id:10001,org:&lt;em&gt;&lt;strong&gt;,entry:1"  dataC="id:10001,location:&lt;/strong&gt;&lt;/em&gt;"&lt;br&gt;
(1) 如何将三个流合并？ (1) 数据中dataA是有时间的，但是dataB和dataC中都没有时间戳，那么如何解决eventTime及迟到乱序的问题？帮忙看下，谢谢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;345、&lt;a href="https://t.zsxq.com/JmIqfaE" rel="nofollow"&gt;我flink从kafka读json数据，在反序列化后中文部分变成了一串问号，请问如何做才能使中文正常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;346、&lt;a href="https://t.zsxq.com/3BMZfAM" rel="nofollow"&gt;我有好几个Flink程序（独立jar），在线业务数据分析时都会用到同样的一批MySQL中的配置数据(5千多条)，现在的实现方法是每一个程序都是独立把这些配置数据装到内存中，便于快速使用，但现在感觉有些浪费资源和结构不够美观，请问这类情况有什么其他的解决方案吗？谢谢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;347、&lt;a href="https://t.zsxq.com/RFMjYZn" rel="nofollow"&gt;Flink  checkpoint  选 RocksDBStateBackend 还是 FsStatebackEnd ，我们目前是任务执行一段时间之后 任务就会被卡死。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;348、&lt;a href="https://t.zsxq.com/uVv7uJU" rel="nofollow"&gt;flink on k8s的高可用、扩缩容这块目前还有哪些问题？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;349、&lt;a href="https://t.zsxq.com/zFq3fqb" rel="nofollow"&gt;有个问题问一下，是这样的现在Kafka4个分区每秒钟生产4000多到5000条日志数据，但是在消费者FLINK这边接收我只开了4个solt接收，这边只是接收后做切分存储，现在出现了延迟现象，我不清楚是我这边处切分慢了还是Flink接收kafka的数据慢了？Flink UI界面显示这两个背压高&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;等等等，还有很多，复制粘贴的我手累啊 &lt;g-emoji class="g-emoji" alias="joy" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png"&gt;😂&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;另外里面还会及时分享 Flink 的一些最新的资料（包括数据、视频、PPT、优秀博客，持续更新，保证全网最全，因为我知道 Flink 目前的资料还不多）&lt;/p&gt;
&lt;p&gt;&lt;a href="https://t.zsxq.com/AybAimM" rel="nofollow"&gt;关于自己对 Flink 学习的一些想法和建议&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://t.zsxq.com/iaEiyB2" rel="nofollow"&gt;Flink 全网最全资料获取，持续更新，点击可以获取&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再就是星球用户给我提的一点要求：不定期分享一些自己遇到的 Flink 项目的实战，生产项目遇到的问题，是如何解决的等经验之谈！&lt;/p&gt;
&lt;p&gt;1、&lt;a href="https://t.zsxq.com/Zz3ny3V" rel="nofollow"&gt;如何查看自己的 Job 执行计划并获取执行计划图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;a href="https://t.zsxq.com/AIAQrnq" rel="nofollow"&gt;当实时告警遇到 Kafka 千万数据量堆积该咋办？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、&lt;a href="https://t.zsxq.com/QnYjy7M" rel="nofollow"&gt;如何在流数据中比两个数据的大小？多种解决方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4、&lt;a href="https://t.zsxq.com/6Q3vN3b" rel="nofollow"&gt;kafka 系列文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5、&lt;a href="https://t.zsxq.com/iiYfMBe" rel="nofollow"&gt;Flink环境部署、应用配置及运行应用程序&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;6、&lt;a href="https://t.zsxq.com/yfYrvFA" rel="nofollow"&gt;监控平台该有架构是长这样子的&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;7、&lt;a href="https://t.zsxq.com/beu7Mvj" rel="nofollow"&gt;《大数据“重磅炸弹”——实时计算框架 Flink》专栏系列文章目录大纲&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;8、&lt;a href="https://t.zsxq.com/UvrRNJM" rel="nofollow"&gt;《大数据“重磅炸弹”——实时计算框架 Flink》Chat 付费文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9、&lt;a href="https://t.zsxq.com/zjQvjeM" rel="nofollow"&gt;Apache Flink 是如何管理好内存的？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10、&lt;a href="https://t.zsxq.com/eYNBaAa" rel="nofollow"&gt;Flink On K8s&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;11、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink-metrics-core&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;12、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink-metrics-datadog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;13、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink-metrics-dropwizard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;14、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink-metrics-graphite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;15、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink-metrics-influxdb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;16、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink-metrics-jmx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;17、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink-metrics-slf4j&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;18、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink-metrics-statsd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;19、&lt;a href="https://t.zsxq.com/Mnm2nI6" rel="nofollow"&gt;Flink-metrics-prometheus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;20、&lt;a href="https://t.zsxq.com/f6eAu3J" rel="nofollow"&gt;Flink 注解源码解析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;21、&lt;a href="https://t.zsxq.com/yVnaYR7" rel="nofollow"&gt;使用 InfluxDB 和 Grafana 搭建监控 Flink 的平台&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;22、&lt;a href="https://t.zsxq.com/UVfqfae" rel="nofollow"&gt;一文搞懂Flink内部的Exactly Once和At Least Once&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;23、&lt;a href="https://t.zsxq.com/eM3ZRf2" rel="nofollow"&gt;一文让你彻底了解大数据实时计算框架 Flink&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当然，除了更新 Flink 相关的东西外，我还会更新一些大数据相关的东西，因为我个人之前不是大数据开发，所以现在也要狂补些知识！总之，希望进来的童鞋们一起共同进步！&lt;/p&gt;
&lt;p&gt;1、&lt;a href="https://t.zsxq.com/7I6Iyrf" rel="nofollow"&gt;Java 核心知识点整理.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;a href="https://t.zsxq.com/myJYZRF" rel="nofollow"&gt;假如我是面试官，我会问你这些问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、&lt;a href="https://t.zsxq.com/iUZnamE" rel="nofollow"&gt;Kafka 系列文章和学习视频&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4、&lt;a href="https://t.zsxq.com/r7eIeyJ" rel="nofollow"&gt;重新定义 Flink 第二期 pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5、&lt;a href="https://t.zsxq.com/ZjiYrVr" rel="nofollow"&gt;GitChat Flink 文章答疑记录&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;6、&lt;a href="https://t.zsxq.com/QZVJyz7" rel="nofollow"&gt;Java 并发课程要掌握的知识点&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;7、&lt;a href="https://t.zsxq.com/VVN7YB2" rel="nofollow"&gt;Lightweight Asynchronous Snapshots for Distributed Dataflows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;8、&lt;a href="https://t.zsxq.com/VVN7YB2" rel="nofollow"&gt;Apache Flink™- Stream and Batch Processing in a Single Engine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9、&lt;a href="https://t.zsxq.com/NjAQFi2" rel="nofollow"&gt;Flink状态管理与容错机制&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10、&lt;a href="https://t.zsxq.com/MvfUvzN" rel="nofollow"&gt;Flink 流批一体的技术架构以及在阿里的实践&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;11、&lt;a href="https://t.zsxq.com/QVFqjea" rel="nofollow"&gt;Flink Checkpoint-��轻量级分布式快照&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;12、&lt;a href="https://t.zsxq.com/MvfUvzN" rel="nofollow"&gt;Flink 流批一体的技术架构以及在阿里的实践&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;13、&lt;a href="https://t.zsxq.com/N37mUzB" rel="nofollow"&gt;Stream Processing with Apache Flink pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;14、&lt;a href="https://t.zsxq.com/m6EAaQ3" rel="nofollow"&gt;Flink 结合机器学习算法的监控平台实践&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;15、&lt;a href="https://t.zsxq.com/emMBaQN" rel="nofollow"&gt;《大数据重磅炸弹-实时计算Flink》预备篇——大数据实时计算介绍及其常用使用场景 pdf 和视频&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;16、&lt;a href="https://t.zsxq.com/fqfuVRR" rel="nofollow"&gt;《大数据重磅炸弹-实时计算Flink》开篇词 pdf 和视频&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;17、&lt;a href="https://t.zsxq.com/rVBQFI6" rel="nofollow"&gt;四本 Flink 书&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;18、&lt;a href="https://t.zsxq.com/rVBQFI6" rel="nofollow"&gt;流处理系统 的相关 paper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;19、&lt;a href="https://t.zsxq.com/FyzvRne" rel="nofollow"&gt;Apache Flink 1.9 特性解读&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;20、&lt;a href="https://t.zsxq.com/FyzvRne" rel="nofollow"&gt;打造基于Flink Table API的机器学习生态&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;21、&lt;a href="https://t.zsxq.com/FyzvRne" rel="nofollow"&gt;基于Flink on Kubernetes的大数据平台&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;22、&lt;a href="https://t.zsxq.com/FyzvRne" rel="nofollow"&gt;基于Apache Flink的高性能机器学习算法库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;23、&lt;a href="https://t.zsxq.com/FyzvRne" rel="nofollow"&gt;Apache Flink在快手的应用与实践&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;24、&lt;a href="https://t.zsxq.com/FyzvRne" rel="nofollow"&gt;Apache Flink-1.9与Hive的兼容性&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;25、&lt;a href="https://t.zsxq.com/FyzvRne" rel="nofollow"&gt;打造基于Flink Table API的机器学习生态&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;26、&lt;a href="https://t.zsxq.com/rVBQFI6" rel="nofollow"&gt;流处理系统的相关 paper&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zhisheng17</author><guid isPermaLink="false">https://github.com/zhisheng17/flink-learning</guid><pubDate>Sun, 01 Dec 2019 00:05:00 GMT</pubDate></item><item><title>Snailclimb/JavaGuide #6 in All Languages, This month</title><link>https://github.com/Snailclimb/JavaGuide</link><description>&lt;p&gt;&lt;i&gt;【Java学习+面试指南】 一份涵盖大部分Java程序员所需要掌握的核心知识。&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;点击关注&lt;a href="#%E5%85%AC%E4%BC%97%E5%8F%B7"&gt;公众号&lt;/a&gt;及时获取笔主最新更新文章，并可免费领取本文档配套的《Java面试突击》以及Java工程师必备学习资源。&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="https://github.com/Snailclimb/JavaGuide"&gt;
	&lt;img src="https://camo.githubusercontent.com/f48eb7cf78222076ffd49ada2be036fb1fd330a6/68747470733a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f323031392d332f6c6f676f202d20e589afe69cac2e706e67" width="" data-canonical-src="https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-3/logo - 副本.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://snailclimb.gitee.io/javaguide" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/83ab109d44f7f221c2af6d533ca61cdbf490ae53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652fe99885e8afbb2d726561642d627269676874677265656e2e737667" alt="阅读" data-canonical-src="https://img.shields.io/badge/阅读-read-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="#联系我"&gt;&lt;img src="https://camo.githubusercontent.com/34c07976b5f830f4309e3ee24550e1deda518001/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742de5beaee4bfa1e7bea42d626c75652e737667" alt="微信群" data-canonical-src="https://img.shields.io/badge/chat-微信群-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="#公众号"&gt;&lt;img src="https://camo.githubusercontent.com/094ebad202e9833b91eda19ad61f7dff2c90224e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545352538352541432545342542432539372545352538462542372d4a61766147756964652d6c69676874677265792e737667" alt="公众号" data-canonical-src="https://img.shields.io/badge/%E5%85%AC%E4%BC%97%E5%8F%B7-JavaGuide-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="#公众号"&gt;&lt;img src="https://camo.githubusercontent.com/5c1d43305e392e35bc8c626d6c7c6b025e5b7c0e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5044462d4a617661e99da2e8af95e7aa81e587bb2d696d706f7274616e742e737667" alt="公众号" data-canonical-src="https://img.shields.io/badge/PDF-Java面试突击-important.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="#投稿"&gt;&lt;img src="https://camo.githubusercontent.com/96c7460022816d1685aa102a75ca2e65b47a1085/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f72742de68a95e7a8bf2d637269746963616c2e737667" alt="投稿" data-canonical-src="https://img.shields.io/badge/support-投稿-critical.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://xiaozhuanlan.com/javainterview?rel=javaguide" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/27631efffe7c05e03623c67bcc18c4e99aebeb00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176612de99da2e8af95e68c87e58d972d696d706f7274616e74" alt="投稿" data-canonical-src="https://img.shields.io/badge/Java-面试指南-important" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h3 align="center"&gt;&lt;a id="user-content-sponsor" class="anchor" aria-hidden="true" href="#sponsor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsor&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a href="https://url.163.com/hXm" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/c3a9340a5fdb54bf734e95b3bf38fe8576eff428/68747470733a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f323031392d372f576563686174494d47312e706e67" width="" data-canonical-src="https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-7/WechatIMG1.png" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;推荐使用  &lt;a href="https://snailclimb.gitee.io/javaguide" rel="nofollow"&gt;https://snailclimb.gitee.io/javaguide&lt;/a&gt; 在线阅读，在线阅读内容本仓库同步一致。这种方式阅读的优势在于：阅读体验会更好。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-目录" class="anchor" aria-hidden="true" href="#目录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#java"&gt;Java&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%9F%BA%E7%A1%80"&gt;基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AE%B9%E5%99%A8"&gt;容器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B9%B6%E5%8F%91"&gt;并发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jvm"&gt;JVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#io"&gt;I/O&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#java-8"&gt;Java 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BC%98%E9%9B%85-java-%E4%BB%A3%E7%A0%81%E5%BF%85%E5%A4%87%E5%AE%9E%E8%B7%B5java%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83"&gt;优雅 Java 代码必备实践(Java编程规范)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%BD%91%E7%BB%9C"&gt;网络&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F"&gt;操作系统&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#linux%E7%9B%B8%E5%85%B3"&gt;Linux相关&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95"&gt;数据结构与算法&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84"&gt;数据结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%AE%97%E6%B3%95"&gt;算法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E5%BA%93"&gt;数据库&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#mysql"&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redis"&gt;Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E5%BA%93%E6%89%A9%E5%B1%95"&gt;数据库扩展&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1"&gt;系统设计&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%B8%B8%E7%94%A8%E6%A1%86%E6%9E%B6"&gt;常用框架(Spring/SpringBoot、Zookeeper ... )&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E4%B8%AD%E9%97%B4%E4%BB%B6"&gt;数据通信/中间件(消息队列、RPC ... )&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81"&gt;权限认证&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%88%86%E5%B8%83%E5%BC%8F--%E5%BE%AE%E6%9C%8D%E5%8A%A1"&gt;分布式 &amp;amp; 微服务&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#api-%E7%BD%91%E5%85%B3"&gt;API 网关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83"&gt;配置中心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%94%AF%E4%B8%80-id-%E7%94%9F%E6%88%90"&gt;唯一 id 生成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0%E6%9C%8D%E5%8A%A1%E8%B7%AF%E7%94%B1%E6%8E%A7%E5%88%B6"&gt;服务治理：服务注册与发现、服务路由控制&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84"&gt;架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F"&gt;设计模式(工厂模式、单例模式 ... )&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%9D%A2%E8%AF%95%E6%8C%87%E5%8D%97"&gt;面试指南&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%A4%87%E6%88%98%E9%9D%A2%E8%AF%95"&gt;备战面试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93"&gt;常见面试题总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%9D%A2%E7%BB%8F"&gt;面经&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#java%E5%AD%A6%E4%B9%A0%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB"&gt;Java学习常见问题汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%85%B7"&gt;工具&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#git"&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%B5%84%E6%BA%90"&gt;资源&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%B9%A6%E5%8D%95"&gt;书单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Github%E6%A6%9C%E5%8D%95"&gt;Github榜单&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BE%85%E5%8A%9E"&gt;待办&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AF%B4%E6%98%8E"&gt;说明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-java" class="anchor" aria-hidden="true" href="#java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-基础" class="anchor" aria-hidden="true" href="#基础"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基础&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md"&gt;Java 基础知识回顾&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/java/Java%E7%96%91%E9%9A%BE%E7%82%B9.md"&gt;Java 基础知识疑难点/易错点&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/java/Java%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E9%A2%98.md"&gt;一些重要的Java程序设计题&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md"&gt;J2EE 基础知识回顾&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-容器" class="anchor" aria-hidden="true" href="#容器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;容器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.md"&gt;Java容器常见面试题/知识点总结&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/ArrayList.md"&gt;ArrayList 源码学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/LinkedList.md"&gt;LinkedList 源码学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/HashMap.md"&gt;HashMap(JDK1.8)源码学习&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-并发" class="anchor" aria-hidden="true" href="#并发"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;并发&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/java/Multithread/JavaConcurrencyBasicsCommonInterviewQuestionsSummary.md"&gt;Java 并发基础常见面试题总结&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/java/Multithread/JavaConcurrencyAdvancedCommonInterviewQuestions.md"&gt;Java 并发进阶常见面试题总结&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/Multithread/%E5%B9%B6%E5%8F%91%E5%AE%B9%E5%99%A8%E6%80%BB%E7%BB%93.md"&gt;并发容器总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="./docs/java/Multithread/java%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.md"&gt;Java线程池学习总结&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/essential-content-for-interview/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87%E4%B9%8B%E4%B9%90%E8%A7%82%E9%94%81%E4%B8%8E%E6%82%B2%E8%A7%82%E9%94%81.md"&gt;乐观锁与悲观锁&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/Multithread/Atomic.md"&gt;JUC 中的 Atomic 原子类总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/Multithread/AQS.md"&gt;AQS 原理以及 AQS 同步组件总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-jvm" class="anchor" aria-hidden="true" href="#jvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JVM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/java/jvm/Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F.md"&gt;一 Java内存区域&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/java/jvm/JVM%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.md"&gt;二 JVM垃圾回收&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/JDK%E7%9B%91%E6%8E%A7%E5%92%8C%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93.md"&gt;三 JDK 监控和故障处理工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E7%B1%BB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84.md"&gt;四 类文件结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/java/jvm/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.md"&gt;五 类加载过程&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8.md"&gt;六 类加载器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/java/jvm/%E6%9C%80%E9%87%8D%E8%A6%81%E7%9A%84JVM%E5%8F%82%E6%95%B0%E6%8C%87%E5%8D%97.md"&gt;【待完成】八 最重要的 JVM 参数指南（翻译完善了一半）&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/GC%E8%B0%83%E4%BC%98%E5%8F%82%E6%95%B0.md"&gt;九 JVM 配置常用参数和常用 GC 调优策略&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-io" class="anchor" aria-hidden="true" href="#io"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I/O&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java/BIO-NIO-AIO.md"&gt;BIO,NIO,AIO 总结 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/Java%20IO%E4%B8%8ENIO.md"&gt;Java IO 与 NIO系列文章&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-java-8" class="anchor" aria-hidden="true" href="#java-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java 8&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java/What's%20New%20in%20JDK8/Java8Tutorial.md"&gt;Java 8 新特性总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/What's%20New%20in%20JDK8/Java8%E6%95%99%E7%A8%8B%E6%8E%A8%E8%8D%90.md"&gt;Java 8 学习资源推荐&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/What's%20New%20in%20JDK8/Java8foreach%E6%8C%87%E5%8D%97.md"&gt;Java8 forEach 指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-优雅-java-代码必备实践java编程规范" class="anchor" aria-hidden="true" href="#优雅-java-代码必备实践java编程规范"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;优雅 Java 代码必备实践(Java编程规范)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java/Java%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.md"&gt;Java 编程规范以及优雅 Java 代码实践总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-网络" class="anchor" aria-hidden="true" href="#网络"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;网络&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/network/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.md"&gt;计算机网络常见面试题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/network/%E5%B9%B2%E8%B4%A7%EF%BC%9A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93.md"&gt;计算机网络基础知识总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/network/HTTPS%E4%B8%AD%E7%9A%84TLS.md"&gt;HTTPS中的TLS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-操作系统" class="anchor" aria-hidden="true" href="#操作系统"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;操作系统&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-linux相关" class="anchor" aria-hidden="true" href="#linux相关"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux相关&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/operating-system/%E5%90%8E%E7%AB%AF%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BF%85%E5%A4%87%E7%9A%84Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md"&gt;后端程序员必备的 Linux 基础知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/operating-system/Shell.md"&gt;Shell 编程入门&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-数据结构与算法" class="anchor" aria-hidden="true" href="#数据结构与算法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据结构与算法&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-数据结构" class="anchor" aria-hidden="true" href="#数据结构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/dataStructures-algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.md"&gt;数据结构知识学习与面试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-算法" class="anchor" aria-hidden="true" href="#算法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;算法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/dataStructures-algorithms/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90.md"&gt;算法学习资源推荐&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/dataStructures-algorithms/%E5%87%A0%E9%81%93%E5%B8%B8%E8%A7%81%E7%9A%84%E5%AD%90%E7%AC%A6%E4%B8%B2%E7%AE%97%E6%B3%95%E9%A2%98.md"&gt;几道常见的字符串算法题总结 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/dataStructures-algorithms/%E5%87%A0%E9%81%93%E5%B8%B8%E8%A7%81%E7%9A%84%E9%93%BE%E8%A1%A8%E7%AE%97%E6%B3%95%E9%A2%98.md"&gt;几道常见的链表算法题总结 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/dataStructures-algorithms/%E5%89%91%E6%8C%87offer%E9%83%A8%E5%88%86%E7%BC%96%E7%A8%8B%E9%A2%98.md"&gt;剑指offer部分编程题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/dataStructures-algorithms/%E5%85%AC%E5%8F%B8%E7%9C%9F%E9%A2%98.md"&gt;公司真题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/dataStructures-algorithms/Backtracking-NQueens.md"&gt;回溯算法经典案例之N皇后问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-数据库" class="anchor" aria-hidden="true" href="#数据库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据库&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-mysql" class="anchor" aria-hidden="true" href="#mysql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MySQL&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/database/MySQL.md"&gt;【推荐】MySQL/数据库 知识点总结&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/database/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E5%88%86%E7%9A%84%E4%B8%80%E4%BA%9B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.md"&gt;阿里巴巴开发手册数据库部分的一些最佳实践&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/database/%E4%B8%80%E5%8D%83%E8%A1%8CMySQL%E5%91%BD%E4%BB%A4.md"&gt;一千行MySQL学习笔记&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/MySQL%E9%AB%98%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%A7%84%E8%8C%83%E5%BB%BA%E8%AE%AE.md"&gt;MySQL高性能优化规范建议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/MySQL%20Index.md"&gt;数据库索引总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB(%E5%9B%BE%E6%96%87%E8%AF%A6%E8%A7%A3).md"&gt;事务隔离级别(图文详解)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E4%B8%80%E6%9D%A1sql%E8%AF%AD%E5%8F%A5%E5%9C%A8mysql%E4%B8%AD%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84.md"&gt;一条SQL语句在MySQL中如何执行的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-redis" class="anchor" aria-hidden="true" href="#redis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Redis&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/database/Redis/Redis.md"&gt;Redis 总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/Redis/Redlock%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.md"&gt;Redlock分布式锁&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/Redis/%E5%A6%82%E4%BD%95%E5%81%9A%E5%8F%AF%E9%9D%A0%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%EF%BC%8CRedlock%E7%9C%9F%E7%9A%84%E5%8F%AF%E8%A1%8C%E4%B9%88.md"&gt;如何做可靠的分布式锁，Redlock真的可行么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/Redis/redis%E9%9B%86%E7%BE%A4%E4%BB%A5%E5%8F%8A%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF.md"&gt;几种常见的 Redis 集群以及使用场景&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-数据库扩展" class="anchor" aria-hidden="true" href="#数据库扩展"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据库扩展&lt;/h3&gt;
&lt;p&gt;代办......&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-系统设计" class="anchor" aria-hidden="true" href="#系统设计"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;系统设计&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-常用框架" class="anchor" aria-hidden="true" href="#常用框架"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;常用框架&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-springspringboot" class="anchor" aria-hidden="true" href="#springspringboot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring/SpringBoot&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/system-design/framework/spring/Spring.md"&gt;Spring 学习与面试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/system-design/framework/spring/SpringInterviewQuestions.md"&gt;Spring 常见问题总结&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Snailclimb/springboot-guide"&gt;SpringBoot 指南/常见面试题总结&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/system-design/framework/spring/SpringBean.md"&gt;Spring中bean的作用域与生命周期&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/system-design/framework/spring/SpringMVC-Principle.md"&gt;SpringMVC 工作原理详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/system-design/framework/spring/Spring-Design-Patterns.md"&gt;Spring中都用到了那些设计模式?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-zookeeper" class="anchor" aria-hidden="true" href="#zookeeper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ZooKeeper&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/system-design/framework/ZooKeeper.md"&gt;ZooKeeper 相关概念总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/system-design/framework/ZooKeeper%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B%E5%92%8C%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4.md"&gt;ZooKeeper 数据模型和常见命令&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-数据通信中间件" class="anchor" aria-hidden="true" href="#数据通信中间件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据通信/中间件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/system-design/data-communication/summary.md"&gt;数据通信(RESTful、RPC、消息队列)相关知识点总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-rpc" class="anchor" aria-hidden="true" href="#rpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RPC&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/system-design/data-communication/dubbo.md"&gt;Dubbo 总结：关于 Dubbo 的重要知识点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/system-design/data-communication/why-use-rpc.md"&gt;服务之间的调用为啥不直接用 HTTP 而用 RPC？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-消息队列" class="anchor" aria-hidden="true" href="#消息队列"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;消息队列&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/system-design/data-communication/message-queue.md"&gt;消息队列总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/system-design/data-communication/rabbitmq.md"&gt;RabbitMQ 入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/system-design/data-communication/RocketMQ-Questions.md"&gt;RocketMQ的几个简单问题与答案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/system-design/data-communication/Kafka%E5%85%A5%E9%97%A8%E7%9C%8B%E8%BF%99%E4%B8%80%E7%AF%87%E5%B0%B1%E5%A4%9F%E4%BA%86.md"&gt;Kafka入门看这一篇就够了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/system-design/data-communication/Kafka%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%BC%80%E7%AF%87-%E9%9D%A2%E8%AF%95%E7%9C%8B%E8%BF%99%E7%AF%87%E5%B0%B1%E5%A4%9F%E4%BA%86.md"&gt;Kafka系统设计开篇-面试看这篇就够了&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-权限认证" class="anchor" aria-hidden="true" href="#权限认证"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;权限认证&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/system-design/authority-certification/basis-of-authority-certification.md"&gt;权限认证基础:区分Authentication,Authorization以及Cookie、Session、Token&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/system-design/authority-certification/JWT-advantages-and-disadvantages.md"&gt;JWT 优缺点分析以及常见问题解决方案&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Snailclimb/spring-security-jwt-guide"&gt;适合初学者入门 Spring Security With JWT 的 Demo&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-分布式--微服务" class="anchor" aria-hidden="true" href="#分布式--微服务"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;分布式 &amp;amp; 微服务&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/system-design/website-architecture/%E5%88%86%E5%B8%83%E5%BC%8F.md"&gt;分布式应该学什么&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-api-网关" class="anchor" aria-hidden="true" href="#api-网关"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API 网关&lt;/h4&gt;
&lt;p&gt;网关主要用于请求转发、安全认证、协议转换、容灾。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/system-design/micro-service/API%E7%BD%91%E5%85%B3.md"&gt;浅析如何设计一个亿级网关(API Gateway)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-配置中心" class="anchor" aria-hidden="true" href="#配置中心"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;配置中心&lt;/h4&gt;
&lt;p&gt;代办......&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-唯一-id-生成" class="anchor" aria-hidden="true" href="#唯一-id-生成"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;唯一 id 生成&lt;/h4&gt;
&lt;p&gt;&lt;a href="docs/system-design/micro-service/%E5%88%86%E5%B8%83%E5%BC%8Fid%E7%94%9F%E6%88%90%E6%96%B9%E6%A1%88%E6%80%BB%E7%BB%93.md"&gt;分布式id生成方案总结&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-服务治理服务注册与发现服务路由控制" class="anchor" aria-hidden="true" href="#服务治理服务注册与发现服务路由控制"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;服务治理：服务注册与发现、服务路由控制&lt;/h4&gt;
&lt;p&gt;代办......&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-架构" class="anchor" aria-hidden="true" href="#架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/system-design/website-architecture/8%20%E5%BC%A0%E5%9B%BE%E8%AF%BB%E6%87%82%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84.md"&gt;8 张图读懂大型网站技术架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/system-design/website-architecture/%E5%85%B3%E4%BA%8E%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E4%BD%A0%E4%B8%8D%E5%BE%97%E4%B8%8D%E6%87%82%E7%9A%8410%E4%B8%AA%E9%97%AE%E9%A2%98.md"&gt;【面试精选】关于大型网站系统架构你不得不懂的10个问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-设计模式" class="anchor" aria-hidden="true" href="#设计模式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;设计模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/system-design/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md"&gt;设计模式系列文章&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-面试指南" class="anchor" aria-hidden="true" href="#面试指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;面试指南&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-备战面试" class="anchor" aria-hidden="true" href="#备战面试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;备战面试&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/essential-content-for-interview/PreparingForInterview/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E7%AE%80%E5%8E%86%E4%B9%8B%E9%81%93.md"&gt;【备战面试1】程序员的简历就该这样写&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/essential-content-for-interview/PreparingForInterview/interviewPrepare.md"&gt;【备战面试2】初出茅庐的程序员该如何准备面试？&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/essential-content-for-interview/PreparingForInterview/JavaProgrammerNeedKnow.md"&gt;【备战面试3】7个大部分程序员在面试前很关心的问题&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/essential-content-for-interview/PreparingForInterview/JavaInterviewLibrary.md"&gt;【备战面试4】Github上开源的Java面试/学习相关的仓库推荐&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/essential-content-for-interview/PreparingForInterview/%E9%9D%A2%E8%AF%95%E5%AE%98-%E4%BD%A0%E6%9C%89%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98%E8%A6%81%E9%97%AE%E6%88%91.md"&gt;【备战面试5】如果面试官问你“你有什么问题问我吗？”时，你该如何回答&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="docs/essential-content-for-interview/PreparingForInterview/%E7%BE%8E%E5%9B%A2%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93.md"&gt;【备战面试6】美团面试常见问题总结（附详解答案）&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://xiaozhuanlan.com/topic/9056431872" rel="nofollow"&gt;【备战面试7】一些刁难的面试问题总结&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-常见面试题总结" class="anchor" aria-hidden="true" href="#常见面试题总结"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;常见面试题总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/essential-content-for-interview/MostCommonJavaInterviewQuestions/%E7%AC%AC%E4%B8%80%E5%91%A8%EF%BC%882018-8-7%EF%BC%89.md"&gt;第一周（2018-8-7）&lt;/a&gt; (为什么 Java 中只有值传递、==与equals、 hashCode与equals)&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/essential-content-for-interview/MostCommonJavaInterviewQuestions/%E7%AC%AC%E4%BA%8C%E5%91%A8(2018-8-13).md"&gt;第二周（2018-8-13）&lt;/a&gt;(String和StringBuffer、StringBuilder的区别是什么？String为什么是不可变的？、什么是反射机制？反射机制的应用场景有哪些？......)&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.md"&gt;第三周（2018-08-22）&lt;/a&gt; （Arraylist 与 LinkedList 异同、ArrayList 与 Vector 区别、HashMap的底层实现、HashMap 和 Hashtable 的区别、HashMap 的长度为什么是2的幂次方、HashSet 和 HashMap 区别、ConcurrentHashMap 和 Hashtable 的区别、ConcurrentHashMap线程安全的具体实现方式/底层具体实现、集合框架底层数据结构总结）&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/essential-content-for-interview/MostCommonJavaInterviewQuestions/%E7%AC%AC%E5%9B%9B%E5%91%A8(2018-8-30).md"&gt;第四周(2018-8-30).md&lt;/a&gt; （主要内容是几道面试常问的多线程基础题。）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-面经" class="anchor" aria-hidden="true" href="#面经"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;面经&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/essential-content-for-interview/BATJrealInterviewExperience/5%E9%9D%A2%E9%98%BF%E9%87%8C,%E7%BB%88%E8%8E%B7offer.md"&gt;5面阿里,终获offer(2018年秋招)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/essential-content-for-interview/BATJrealInterviewExperience/%E8%9A%82%E8%9A%81%E9%87%91%E6%9C%8D%E5%AE%9E%E4%B9%A0%E7%94%9F%E9%9D%A2%E7%BB%8F%E6%80%BB%E7%BB%93(%E5%B7%B2%E6%8B%BF%E5%8F%A3%E5%A4%B4offer).md"&gt;蚂蚁金服2019实习生面经总结(已拿口头offer)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/essential-content-for-interview/BATJrealInterviewExperience/2019alipay-pinduoduo-toutiao.md"&gt;2019年蚂蚁金服、头条、拼多多的面试总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-java学习常见问题汇总" class="anchor" aria-hidden="true" href="#java学习常见问题汇总"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java学习常见问题汇总&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/questions/java-learning-path-and-methods.md"&gt;Java学习路线和方法推荐&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/questions/java-training-4-month.md"&gt;Java培训四个月能学会吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/questions/java-learning-website-blog.md"&gt;新手学习Java，有哪些Java相关的博客，专栏，和技术学习网站推荐？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-工具" class="anchor" aria-hidden="true" href="#工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工具&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-git" class="anchor" aria-hidden="true" href="#git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/tools/Git.md"&gt;Git入门&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/tools/Docker.md"&gt;Docker 基本概念解读&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/tools/Docker-Image.md"&gt;一文搞懂 Docker 镜像的常用操作！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-其他" class="anchor" aria-hidden="true" href="#其他"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;其他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/tools/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C.md"&gt;阿里云服务器使用经验&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-资源" class="anchor" aria-hidden="true" href="#资源"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;资源&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-书单" class="anchor" aria-hidden="true" href="#书单"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;书单&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/data/java-recommended-books.md"&gt;Java程序员必备书单&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-实战项目推荐" class="anchor" aria-hidden="true" href="#实战项目推荐"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;实战项目推荐&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/data/spring-boot-practical-projects.md"&gt;Github 上热门的 Spring Boot 项目实战推荐&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-github" class="anchor" aria-hidden="true" href="#github"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/tools/github/github-star-ranking.md"&gt;Github 上 Star 数最多的 10 个项目，看完之后很意外!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/github-trending/JavaGithubTrending.md"&gt;Java 项目月榜单&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-待办" class="anchor" aria-hidden="true" href="#待办"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;待办&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Java 多线程类别知识重构&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Netty 总结(---正在进行中---)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; 数据结构总结重构(---正在进行中---)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-说明" class="anchor" aria-hidden="true" href="#说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;说明&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-javaguide介绍" class="anchor" aria-hidden="true" href="#javaguide介绍"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JavaGuide介绍&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;对于 Java 初学者来说：&lt;/strong&gt; 本文档倾向于给你提供一个比较详细的学习路径，让你对于Java整体的知识体系有一个初步认识。另外，本文的一些文章
也是你学习和复习 Java 知识不错的实践；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对于非 Java 初学者来说：&lt;/strong&gt; 本文档更适合回顾知识，准备面试，搞清面试应该把重心放在那些问题上。要搞清楚这个道理：提前知道那些面试常见，不是为了背下来应付面试，而是为了让你可以更有针对的学习重点。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Markdown 格式参考：&lt;a href="https://guides.github.com/features/mastering-markdown/"&gt;Github Markdown格式&lt;/a&gt;，表情素材来自：&lt;a href="https://www.webpagefx.com/tools/emoji-cheat-sheet/" rel="nofollow"&gt;EMOJI CHEAT SHEET&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;利用 docsify 生成文档部署在 Github pages: &lt;a href="https://docsify.js.org/#/" rel="nofollow"&gt;docsify 官网介绍&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-作者的其他开源项目推荐" class="anchor" aria-hidden="true" href="#作者的其他开源项目推荐"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;作者的其他开源项目推荐&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/Snailclimb/springboot-guide"&gt;springboot-guide&lt;/a&gt; : 适合新手入门以及有经验的开发人员查阅的 Spring Boot 教程（业余时间维护中，欢迎一起维护）。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Snailclimb/programmer-advancement"&gt;programmer-advancement&lt;/a&gt; : 我觉得技术人员应该有的一些好习惯！&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Snailclimb/spring-security-jwt-guide"&gt;spring-security-jwt-guide&lt;/a&gt; :从零入门 ！Spring Security With JWT（含权限验证）后端部分代码。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-关于转载" class="anchor" aria-hidden="true" href="#关于转载"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;关于转载&lt;/h3&gt;
&lt;p&gt;如果你需要转载本仓库的一些文章到自己的博客的话，记得注明原文地址就可以了。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-如何对该开源文档进行贡献" class="anchor" aria-hidden="true" href="#如何对该开源文档进行贡献"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;如何对该开源文档进行贡献&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;笔记内容大多是手敲，所以难免会有笔误，你可以帮我找错别字。&lt;/li&gt;
&lt;li&gt;很多知识点我可能没有涉及到，所以你可以对其他知识点进行补充。&lt;/li&gt;
&lt;li&gt;现有的知识点难免存在不完善或者错误，所以你可以对已有知识点进行修改/补充。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-为什么要做这个开源文档" class="anchor" aria-hidden="true" href="#为什么要做这个开源文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;为什么要做这个开源文档？&lt;/h3&gt;
&lt;p&gt;初始想法源于自己的个人那一段比较迷茫的学习经历。主要目的是为了通过这个开源平台来帮助一些在学习 Java 或者面试过程中遇到问题的小伙伴。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-投稿" class="anchor" aria-hidden="true" href="#投稿"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;投稿&lt;/h3&gt;
&lt;p&gt;由于我个人能力有限，很多知识点我可能没有涉及到，所以你可以对其他知识点进行补充。大家也可以对自己的文章进行自荐，对于不错的文章不仅可以成功在本仓库展示出来更可以获得作者送出的 50 元左右的任意书籍进行奖励(当然你也可以直接折现50元)。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-联系我" class="anchor" aria-hidden="true" href="#联系我"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;联系我&lt;/h3&gt;
&lt;p&gt;添加我的微信备注“Github”,回复关键字 &lt;strong&gt;“加群”&lt;/strong&gt; 即可入群。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3fab3f31708c10b1ddb29545bdbae0af2437121e/68747470733a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f323031392d372f776563686174332e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/3fab3f31708c10b1ddb29545bdbae0af2437121e/68747470733a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f323031392d372f776563686174332e6a706567" alt="个人微信" data-canonical-src="https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-7/wechat3.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributor" class="anchor" aria-hidden="true" href="#contributor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributor&lt;/h3&gt;
&lt;p&gt;下面是笔主收集的一些对本仓库提过有价值的pr或者issue的朋友，人数较多，如果你也对本仓库提过不错的pr或者issue的话，你可以加我的微信与我联系。下面的排名不分先后！&lt;/p&gt;
&lt;a href="https://github.com/fanofxiaofeng"&gt;
    &lt;img src="https://avatars0.githubusercontent.com/u/3983683?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/fanchenggang"&gt;  
    &lt;img src="https://avatars2.githubusercontent.com/u/8225921?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Rustin-Liu"&gt;  
    &lt;img src="https://avatars2.githubusercontent.com/u/29879298?s=400&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/ipofss"&gt;
    &lt;img src="https://avatars1.githubusercontent.com/u/5917359?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Gene1994"&gt;
    &lt;img src="https://avatars3.githubusercontent.com/u/24930369?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/spikesp"&gt;
    &lt;img src="https://avatars0.githubusercontent.com/u/12581996?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/illusorycloud"&gt;
    &lt;img src="https://avatars3.githubusercontent.com/u/31980412?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/LiWenGu"&gt;
    &lt;img src="https://avatars0.githubusercontent.com/u/15909210?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/kinglaw1204"&gt;
    &lt;img src="https://avatars1.githubusercontent.com/u/20039931?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/jun1st"&gt;
    &lt;img src="https://avatars2.githubusercontent.com/u/14312378?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;"
&lt;a href="https://github.com/fantasygg"&gt;  
    &lt;img src="https://avatars3.githubusercontent.com/u/13445354?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/debugjoker"&gt;  
    &lt;img src="https://avatars3.githubusercontent.com/u/26218005?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/zhyank"&gt;  
    &lt;img src="https://avatars0.githubusercontent.com/u/17696240?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Goose9527"&gt;  
    &lt;img src="https://avatars2.githubusercontent.com/u/43314997?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/yuechuanx"&gt;  
    &lt;img src="https://avatars3.githubusercontent.com/u/19339293?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/cnLGMing"&gt;  
    &lt;img src="https://avatars2.githubusercontent.com/u/15910705?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/fanchenggang"&gt;  
    &lt;img src="https://avatars0.githubusercontent.com/u/20358122?s=460&amp;amp;v=4" width="45px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-公众号" class="anchor" aria-hidden="true" href="#公众号"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;公众号&lt;/h3&gt;
&lt;p&gt;如果大家想要实时关注我更新的文章以及分享的干货的话，可以关注我的公众号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;《Java面试突击》:&lt;/strong&gt; 由本文档衍生的专为面试而生的《Java面试突击》V2.0 PDF 版本&lt;a href="#%E5%85%AC%E4%BC%97%E5%8F%B7"&gt;公众号&lt;/a&gt;后台回复 &lt;strong&gt;"Java面试突击"&lt;/strong&gt; 即可免费领取！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java工程师必备学习资源:&lt;/strong&gt; 一些Java工程师常用学习资源公众号后台回复关键字 &lt;strong&gt;“1”&lt;/strong&gt; 即可免费无套路获取。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1fa47088863e356667e21f66e0f38933ed492255/68747470733a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f323031392d362f313637353938636432653137623865632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/1fa47088863e356667e21f66e0f38933ed492255/68747470733a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f323031392d362f313637353938636432653137623865632e706e67" alt="我的公众号" data-canonical-src="https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-6/167598cd2e17b8ec.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Snailclimb</author><guid isPermaLink="false">https://github.com/Snailclimb/JavaGuide</guid><pubDate>Sun, 01 Dec 2019 00:06:00 GMT</pubDate></item><item><title>algorithm-visualizer/algorithm-visualizer #7 in All Languages, This month</title><link>https://github.com/algorithm-visualizer/algorithm-visualizer</link><description>&lt;p&gt;&lt;i&gt;:fireworks:Interactive Online Platform that Visualizes Algorithms from Code&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-algorithm-visualizer" class="anchor" aria-hidden="true" href="#algorithm-visualizer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Algorithm Visualizer&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Algorithm Visualizer is an interactive online platform that visualizes algorithms from code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/algorithm-visualizer/algorithm-visualizer/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/f88cba7c2c657c1120f84e9b26185d4464b8d14b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f616c676f726974686d2d76697375616c697a65722f616c676f726974686d2d76697375616c697a65722e7376673f7374796c653d666c61742d737175617265" alt="GitHub contributors" data-canonical-src="https://img.shields.io/github/contributors/algorithm-visualizer/algorithm-visualizer.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/algorithm-visualizer/algorithm-visualizer/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/b09432c4f695803aa7d0115a5a50d79ce6a5fad9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f616c676f726974686d2d76697375616c697a65722f616c676f726974686d2d76697375616c697a65722e7376673f7374796c653d666c61742d737175617265" alt="GitHub license" data-canonical-src="https://img.shields.io/github/license/algorithm-visualizer/algorithm-visualizer.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Learning an algorithm gets much easier with visualizing it. Don't get what we mean? Check it out:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://algorithm-visualizer.org/" rel="nofollow"&gt;&lt;strong&gt;algorithm-visualizer.org&lt;/strong&gt;&lt;img src="https://raw.githubusercontent.com/algorithm-visualizer/algorithm-visualizer/master/branding/screenshot.png" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We have multiple repositories under the hood that comprise the website. Take a look at the contributing guidelines in the repository you want to contribute to.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/algorithm-visualizer/algorithm-visualizer"&gt;&lt;strong&gt;&lt;code&gt;algorithm-visualizer&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; is a web app written in React. It contains UI components and interprets commands into visualizations. Check out &lt;a href="CONTRIBUTING.md"&gt;the contributing guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/algorithm-visualizer/server"&gt;&lt;strong&gt;&lt;code&gt;server&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; serves the web app and provides APIs that it needs on the fly. (e.g., GitHub sign in, compiling/running code, etc.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/algorithm-visualizer/algorithms"&gt;&lt;strong&gt;&lt;code&gt;algorithms&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; contains visualizations of algorithms shown on the side menu of the website.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/search?q=topic%3Avisualization-library+org%3Aalgorithm-visualizer&amp;amp;type=Repositories"&gt;&lt;strong&gt;&lt;code&gt;tracers.*&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; are visualization libraries written in each supported language. They extract visualizing commands from code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>algorithm-visualizer</author><guid isPermaLink="false">https://github.com/algorithm-visualizer/algorithm-visualizer</guid><pubDate>Sun, 01 Dec 2019 00:07:00 GMT</pubDate></item><item><title>zeit/swr #8 in All Languages, This month</title><link>https://github.com/zeit/swr</link><description>&lt;p&gt;&lt;i&gt;React Hooks library for remote data fetching&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://swr.now.sh" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf133058efa7bfb5d8c7cf44902df9aff3b4dbba/68747470733a2f2f6173736574732e7a6569742e636f2f696d6167652f75706c6f61642f76313537323238393631382f7377722f62616e6e65722e706e67" alt="SWR" data-canonical-src="https://assets.zeit.co/image/upload/v1572289618/swr/banner.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://github.com/zeit"&gt;
    &lt;img src="https://camo.githubusercontent.com/345295141b644e61b0cc42e4404b9332d3b0f6bc/68747470733a2f2f62616467656e2e6e65742f62616467652f69636f6e2f4d41444525323042592532305a4549543f69636f6e3d7a656974266c6162656c26636f6c6f723d626c61636b266c6162656c436f6c6f723d626c61636b" data-canonical-src="https://badgen.net/badge/icon/MADE%20BY%20ZEIT?icon=zeit&amp;amp;label&amp;amp;color=black&amp;amp;labelColor=black" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/swr" rel="nofollow"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/bd7c866b4f460cec2aad80921225f44df6b22568/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f737772" data-canonical-src="https://badgen.net/npm/v/swr" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://bundlephobia.com/result?p=swr" rel="nofollow"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/dd890bf1a1ab091e1c95719453e1e00a44d970ba/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f737772" data-canonical-src="https://badgen.net/bundlephobia/minzip/swr" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/zeit/swr/blob/master/LICENSE"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/f54a83f18611d67cbe27ebd36507509f37180602/68747470733a2f2f62616467656e2e6e65742f6e706d2f6c6963656e73652f737772" data-canonical-src="https://badgen.net/npm/license/swr" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://swr.now.sh" rel="nofollow"&gt;swr.now.sh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SWR is a React Hooks library for remote data fetching.&lt;/p&gt;
&lt;p&gt;The name “&lt;strong&gt;SWR&lt;/strong&gt;” is derived from &lt;code&gt;stale-while-revalidate&lt;/code&gt;, a cache invalidation strategy popularized by &lt;a href="https://tools.ietf.org/html/rfc5861" rel="nofollow"&gt;HTTP RFC 5861&lt;/a&gt;.&lt;br&gt;
&lt;strong&gt;SWR&lt;/strong&gt; first returns the data from cache (stale), then sends the fetch request (revalidate), and finally comes with the up-to-date data again.&lt;/p&gt;
&lt;p&gt;It features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transport and protocol agnostic data fetching&lt;/li&gt;
&lt;li&gt;Fast page navigation&lt;/li&gt;
&lt;li&gt;Revalidation on focus&lt;/li&gt;
&lt;li&gt;Interval polling&lt;/li&gt;
&lt;li&gt;Local mutation&lt;/li&gt;
&lt;li&gt;Pagination&lt;/li&gt;
&lt;li&gt;TypeScript ready&lt;/li&gt;
&lt;li&gt;SSR support&lt;/li&gt;
&lt;li&gt;Suspense mode&lt;/li&gt;
&lt;li&gt;React Native support&lt;/li&gt;
&lt;li&gt;Minimal API&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;...and a lot more.&lt;/p&gt;
&lt;p&gt;With SWR, components will get &lt;strong&gt;a stream of data updates constantly and automatically&lt;/strong&gt;. Thus, the UI will be always &lt;strong&gt;fast&lt;/strong&gt; and &lt;strong&gt;reactive&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;useSWR&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;swr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;Profile&lt;/span&gt; () {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;data&lt;/span&gt;, &lt;span class="pl-c1"&gt;error&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, fetcher)

  &lt;span class="pl-k"&gt;if&lt;/span&gt; (error) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;failed to load&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;data) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;loading&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;hello {&lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt;}&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example, the React Hook &lt;code&gt;useSWR&lt;/code&gt; accepts a &lt;code&gt;key&lt;/code&gt; and a &lt;code&gt;fetcher&lt;/code&gt; function.
&lt;code&gt;key&lt;/code&gt; is a unique identifier of the request, normally the URL of the API. And the &lt;code&gt;fetcher&lt;/code&gt; accepts
&lt;code&gt;key&lt;/code&gt; as its parameter and returns the data asynchronously.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;useSWR&lt;/code&gt; also returns 2 values: &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt;. When the request (fetcher) is not yet finished,
&lt;code&gt;data&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt;. And when we get a response, it sets &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; based on the result
of &lt;code&gt;fetcher&lt;/code&gt; and rerenders the component.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;fetcher&lt;/code&gt; can be any asynchronous function, so you can use your favourite data-fetching
library to handle that part.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://swr.now.sh" rel="nofollow"&gt;swr.now.sh&lt;/a&gt; for more demos of SWR.&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Inside your React project directory, run the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yarn add swr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or with npm:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install swr
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-api" class="anchor" aria-hidden="true" href="#api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;data&lt;/span&gt;, &lt;span class="pl-c1"&gt;error&lt;/span&gt;, &lt;span class="pl-c1"&gt;isValidating&lt;/span&gt;, &lt;span class="pl-c1"&gt;revalidate&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(key, fetcher, options)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-parameters" class="anchor" aria-hidden="true" href="#parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parameters&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;key&lt;/code&gt;: a unique key string for the request (or a function / array / null) &lt;a href="#conditional-fetching"&gt;(advanced usage)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetcher&lt;/code&gt;: (&lt;em&gt;optional&lt;/em&gt;) a Promise returning function to fetch your data &lt;a href="#data-fetching"&gt;(details)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;options&lt;/code&gt;: (&lt;em&gt;optional&lt;/em&gt;) an object of options for this SWR hook&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-return-values" class="anchor" aria-hidden="true" href="#return-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Return Values&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: data for the given key resolved by &lt;code&gt;fetcher&lt;/code&gt; (or undefined if not loaded)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error&lt;/code&gt;: error thrown by &lt;code&gt;fetcher&lt;/code&gt; (or undefined)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isValidating&lt;/code&gt;: if there's a request or revalidation loading&lt;/li&gt;
&lt;li&gt;&lt;code&gt;revalidate&lt;/code&gt;: function to trigger the validation manually&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-options" class="anchor" aria-hidden="true" href="#options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Options&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;suspense = false&lt;/code&gt;: enable React Suspense mode &lt;a href="#suspense-mode"&gt;(details)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetcher = undefined&lt;/code&gt;: the default fetcher function&lt;/li&gt;
&lt;li&gt;&lt;code&gt;initialData&lt;/code&gt;: initial data to be returned (note: This is per-hook)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;revalidateOnFocus = true&lt;/code&gt;: auto revalidate when window gets focused&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refreshInterval = 0&lt;/code&gt;: polling interval (disabled by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refreshWhenHidden = false&lt;/code&gt;: polling when the window is invisible (if &lt;code&gt;refreshInterval&lt;/code&gt; is enabled)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shouldRetryOnError = true&lt;/code&gt;: retry when fetcher has an error &lt;a href="#error-retries"&gt;(details)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dedupingInterval = 2000&lt;/code&gt;: dedupe requests with the same key in this time span&lt;/li&gt;
&lt;li&gt;&lt;code&gt;focusThrottleInterval = 5000&lt;/code&gt;: only revalidate once during a time span&lt;/li&gt;
&lt;li&gt;&lt;code&gt;loadingTimeout = 3000&lt;/code&gt;: timeout to trigger the onLoadingSlow event&lt;/li&gt;
&lt;li&gt;&lt;code&gt;errorRetryInterval = 5000&lt;/code&gt;: error retry interval &lt;a href="#error-retries"&gt;(details)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onLoadingSlow&lt;/code&gt;: callback function when a request takes too long to load (&lt;code&gt;loadingTimeout&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onSuccess&lt;/code&gt;: callback function when a request finishs successfully&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onError&lt;/code&gt;: callback function when a request returns an error&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onErrorRetry&lt;/code&gt;: handler for &lt;a href="#error-retries"&gt;error retry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When under a slow network (2G, &amp;lt;= 70Kbps), &lt;code&gt;errorRetryInterval&lt;/code&gt; will be 10s, and
&lt;code&gt;loadingTimeout&lt;/code&gt; will be 5s by default.&lt;/p&gt;
&lt;p&gt;You can also use &lt;a href="#global-configuration"&gt;global configuration&lt;/a&gt; to provide default options.&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#global-configuration"&gt;Global Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-fetching"&gt;Data Fetching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conditional-fetching"&gt;Conditional Fetching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependent-fetching"&gt;Dependent Fetching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multiple-arguments"&gt;Multiple Arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manually-revalidate"&gt;Manually Revalidate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#local-mutation"&gt;Local Mutation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssr-with-nextjs"&gt;SSR with Next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#suspense-mode"&gt;Suspense Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#error-retries"&gt;Error Retries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-global-configuration" class="anchor" aria-hidden="true" href="#global-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global Configuration&lt;/h3&gt;
&lt;p&gt;The context &lt;code&gt;SWRConfig&lt;/code&gt; can provide global configurations (&lt;code&gt;options&lt;/code&gt;) for all SWR hooks.&lt;/p&gt;
&lt;p&gt;In this example, all SWRs will use the same fetcher provided to load JSON data, and refresh every 3 seconds by default:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;useSWR&lt;/span&gt;, { &lt;span class="pl-smi"&gt;SWRConfig&lt;/span&gt; } &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;swr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;Dashboard&lt;/span&gt; () {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { data&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;events&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/events&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { data&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;projects&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/projects&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { data&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;user&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { refreshInterval&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; }) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; don't refresh&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;App&lt;/span&gt; () {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; (
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;SWRConfig 
      value&lt;span class="pl-k"&gt;=&lt;/span&gt;{{
        refreshInterval&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3000&lt;/span&gt;,
        &lt;span class="pl-en"&gt;fetcher&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;args).&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt;.&lt;span class="pl-en"&gt;json&lt;/span&gt;())
      }}
    &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dashboard &lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;SWRConfig&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  )
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-data-fetching" class="anchor" aria-hidden="true" href="#data-fetching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Fetching&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fetcher&lt;/code&gt; is a function &lt;strong&gt;accepts the &lt;code&gt;key&lt;/code&gt;&lt;/strong&gt; of SWR, and returns a value or a Promise.&lt;br&gt;
You can use any library to handle data fetching, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;fetch&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;unfetch&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fetcher&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt;(url).&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;r&lt;/span&gt;.&lt;span class="pl-en"&gt;json&lt;/span&gt;())

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;App&lt;/span&gt; () {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;data&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, fetcher)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or using GraphQL:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; { &lt;span class="pl-smi"&gt;request&lt;/span&gt; } &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;graphql-request&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;API&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://api.graph.cool/simple/v1/movies&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fetcher&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;query&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;request&lt;/span&gt;(&lt;span class="pl-c1"&gt;API&lt;/span&gt;, query)

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;App&lt;/span&gt; () {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;data&lt;/span&gt;, &lt;span class="pl-c1"&gt;error&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;{&lt;/span&gt;
&lt;span class="pl-s"&gt;      Movie(title: "Inception") {&lt;/span&gt;
&lt;span class="pl-s"&gt;        releaseDate&lt;/span&gt;
&lt;span class="pl-s"&gt;        actors {&lt;/span&gt;
&lt;span class="pl-s"&gt;          name&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;      }&lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
    fetcher
  )
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;If you want to pass variables to a GraphQL query, check out &lt;a href="#multiple-arguments"&gt;Multiple Arguments&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;fetcher&lt;/code&gt; can be skipped from the parameters if it's provided gloablly.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-conditional-fetching" class="anchor" aria-hidden="true" href="#conditional-fetching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional Fetching&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;null&lt;/code&gt; or pass a function as the &lt;code&gt;key&lt;/code&gt; to &lt;code&gt;useSWR&lt;/code&gt; to conditionally fetch data. If the functions throws an error or returns a falsy value, SWR will cancel the request.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; conditionally fetch&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;data&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(shouldFetch &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;, fetcher)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...or return a falsy value&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;data&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; shouldFetch &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;, fetcher)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... or throw an error when user.id is not defined&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;data&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/data?uid=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt;, fetcher)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-dependent-fetching" class="anchor" aria-hidden="true" href="#dependent-fetching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependent Fetching&lt;/h3&gt;
&lt;p&gt;SWR also allows you to fetch data that depends on other data. It ensures the maximum possible parallelism (avoiding waterfalls), as well as serial fetching when a piece of dynamic data is required for the next data fetch to happen.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;MyProjects&lt;/span&gt; () {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { data&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;user&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { data&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;projects&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/projects?uid=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When passing a function, SWR will use the&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; return value as `key`. If the function throws,&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SWR will know that some dependencies are not&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ready. In this case it is `user`.&lt;/span&gt;

  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;projects) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;loading...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;You have &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;projects&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; projects&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-arguments" class="anchor" aria-hidden="true" href="#multiple-arguments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple Arguments&lt;/h3&gt;
&lt;p&gt;In some scenarios, it's useful pass multiple arguments (can be any value or object) to the &lt;code&gt;fetcher&lt;/code&gt; function. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;url&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fetchWithToken&lt;/span&gt;(url, token))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is &lt;strong&gt;incorrect&lt;/strong&gt;. Because the identifier (also the index of the cache) of the data is &lt;code&gt;'/api/data'&lt;/code&gt;,
so even if &lt;code&gt;token&lt;/code&gt; changes, SWR will still have the same key and return the wrong data.&lt;/p&gt;
&lt;p&gt;Instead, you can use an &lt;strong&gt;array&lt;/strong&gt; as the &lt;code&gt;key&lt;/code&gt; parameter, which contains multiple arguments of &lt;code&gt;fetcher&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;useSWR&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, token], fetchWithToken)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This solves the problem. The key of the request is now the combination of both values. SWR &lt;strong&gt;shallowly&lt;/strong&gt; compares
the arguments on every render, and triggers revalidation if any of them has changed.&lt;br&gt;
Keep in mind that you should not recreate objects when rendering, as they will be treated as different objects on every render:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Don’t do this! Deps will be changed on every render.&lt;/span&gt;
&lt;span class="pl-en"&gt;useSWR&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { id }], query)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Make sure objects are stable&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;params&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useMemo&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ({ id }), [id])
&lt;span class="pl-en"&gt;useSWR&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, params], query)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dan Abramov explains dependencies very well in &lt;a href="https://overreacted.io/a-complete-guide-to-useeffect/#but-i-cant-put-this-function-inside-an-effect" rel="nofollow"&gt;this blog post&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manually-revalidate" class="anchor" aria-hidden="true" href="#manually-revalidate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually Revalidate&lt;/h3&gt;
&lt;p&gt;You can broadcast a revalidation message globally to all SWRs with the same key by calling
&lt;code&gt;trigger(key)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This example shows how to automatically refetch the login info (e.g.: inside &lt;code&gt;&amp;lt;Profile/&amp;gt;&lt;/code&gt;)
when the user clicks the “Logout” button.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;useSWR&lt;/span&gt;, { &lt;span class="pl-smi"&gt;trigger&lt;/span&gt; } &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;swr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;App&lt;/span&gt; () {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; (
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Profile &lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;button onClick&lt;span class="pl-k"&gt;=&lt;/span&gt;{() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; set the cookie as expired&lt;/span&gt;
        &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;cookie&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; tell all SWRs with this key to revalidate&lt;/span&gt;
        &lt;span class="pl-en"&gt;trigger&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
      }}&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        Logout
      &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;button&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  )
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-local-mutation" class="anchor" aria-hidden="true" href="#local-mutation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Mutation&lt;/h3&gt;
&lt;p&gt;In many cases, applying local mutations to data is a good way to make changes
feel faster — no need to wait for the remote source of data.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;mutate&lt;/code&gt;, you can update your local data programmatically, while
revalidating and finally replace it with the latest data.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;useSWR&lt;/span&gt;, { &lt;span class="pl-smi"&gt;mutate&lt;/span&gt; } &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;swr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;Profile&lt;/span&gt; () {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;data&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, fetcher)

  &lt;span class="pl-k"&gt;return&lt;/span&gt; (
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;h1&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;My name is {&lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt;}.&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;h1&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;button onClick&lt;span class="pl-k"&gt;=&lt;/span&gt;{&lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;newName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt;.&lt;span class="pl-c1"&gt;toUpperCase&lt;/span&gt;()
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; send a request to the API to update the data&lt;/span&gt;
        &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;requestUpdateUsername&lt;/span&gt;(newName)
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; update the local data immediately and revalidate (refetch)&lt;/span&gt;
        &lt;span class="pl-en"&gt;mutate&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-k"&gt;...&lt;/span&gt;data, name&lt;span class="pl-k"&gt;:&lt;/span&gt; newName })
      }}&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;Uppercase my name&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;button&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  )
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Clicking the button in the example above will send a POST request to modify the remote data, locally update the client data and
try to fetch the latest one (revalidate).&lt;/p&gt;
&lt;p&gt;But many POST APIs will just return the updated data directly, so we don’t need to revalidate again.&lt;br&gt;
Here’s an example showing the “local mutate - request - update” usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;mutate&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, newUser, &lt;span class="pl-c1"&gt;false&lt;/span&gt;)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use `false` to mutate without revalidation&lt;/span&gt;
&lt;span class="pl-en"&gt;mutate&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;updateUser&lt;/span&gt;(newUser)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; `updateUser` is a Promise of the request,&lt;/span&gt;
                                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; which returns the updated document&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ssr-with-nextjs" class="anchor" aria-hidden="true" href="#ssr-with-nextjs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSR with Next.js&lt;/h3&gt;
&lt;p&gt;With the &lt;code&gt;initialData&lt;/code&gt; option, you pass an initial value to the hook. It works perfectly with many SSR solutions
such as &lt;code&gt;getInitialProps&lt;/code&gt; in &lt;a href="https://github.com/zeit/next.js"&gt;Next.js&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;App&lt;/span&gt;.&lt;span class="pl-smi"&gt;getInitialProps&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;fetcher&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;return&lt;/span&gt; { data }
}

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;App&lt;/span&gt; (&lt;span class="pl-smi"&gt;props&lt;/span&gt;) {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;initialData&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;props&lt;/span&gt;.&lt;span class="pl-c1"&gt;data&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;data&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, fetcher, { initialData })

  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;{data}&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is still a server-side rendered site, but it’s also fully powered by SWR in the client side.
Which means the data can be dynamic and update itself over time and user interactions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-suspense-mode" class="anchor" aria-hidden="true" href="#suspense-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Suspense Mode&lt;/h3&gt;
&lt;p&gt;You can enable the &lt;code&gt;suspense&lt;/code&gt; option to use SWR with React Suspense:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; { &lt;span class="pl-smi"&gt;Suspense&lt;/span&gt; } &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;react&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;useSWR&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;swr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;Profile&lt;/span&gt; () {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;data&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, fetcher, { suspense&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; })
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;hello, {&lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt;}&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;App&lt;/span&gt; () {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; (
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Suspense fallback&lt;span class="pl-k"&gt;=&lt;/span&gt;{&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;loading&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;}&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Profile&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;Suspense&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  )
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Suspense mode, &lt;code&gt;data&lt;/code&gt; is always the fetch response (so you don't need to check if it's &lt;code&gt;undefined&lt;/code&gt;).
But if an error occurred, you need to use an &lt;a href="https://reactjs.org/docs/concurrent-mode-suspense.html#handling-errors" rel="nofollow"&gt;error boundary&lt;/a&gt; to catch it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note that Suspense is not supported in SSR mode.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-error-retries" class="anchor" aria-hidden="true" href="#error-retries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Retries&lt;/h3&gt;
&lt;p&gt;By default, SWR uses the &lt;a href="https://en.wikipedia.org/wiki/Exponential_backoff" rel="nofollow"&gt;exponential backoff algorithm&lt;/a&gt; to handle error retries.
You can read more from the source code.&lt;/p&gt;
&lt;p&gt;It's also possible to override the behavior:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;useSWR&lt;/span&gt;(key, fetcher, {
  &lt;span class="pl-en"&gt;onErrorRetry&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; (&lt;span class="pl-smi"&gt;error&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;, &lt;span class="pl-smi"&gt;option&lt;/span&gt;, &lt;span class="pl-smi"&gt;revalidate&lt;/span&gt;, { retryCount }) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (retryCount &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;error&lt;/span&gt;.&lt;span class="pl-c1"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;404&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; retry after 5 seconds&lt;/span&gt;
    &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;revalidate&lt;/span&gt;({ retryCount&lt;span class="pl-k"&gt;:&lt;/span&gt; retryCount &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }), &lt;span class="pl-c1"&gt;5000&lt;/span&gt;)
  }
})&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Shu Ding (&lt;a href="https://twitter.com/shuding_" rel="nofollow"&gt;@shuding_&lt;/a&gt;) – &lt;a href="https://zeit.co" rel="nofollow"&gt;ZEIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Guillermo Rauch (&lt;a href="https://twitter.com/rauchg" rel="nofollow"&gt;@rauchg&lt;/a&gt;) – &lt;a href="https://zeit.co" rel="nofollow"&gt;ZEIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Joe Haddad (&lt;a href="https://twitter.com/timer150" rel="nofollow"&gt;@timer150&lt;/a&gt;) - &lt;a href="https://zeit.co" rel="nofollow"&gt;ZEIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Paco Coursey (&lt;a href="https://twitter.com/pacocoursey" rel="nofollow"&gt;@pacocoursey&lt;/a&gt;) - &lt;a href="https://zeit.co" rel="nofollow"&gt;ZEIT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to Ryan Chen for providing the awesome &lt;code&gt;swr&lt;/code&gt; npm package name!&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The MIT License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zeit</author><guid isPermaLink="false">https://github.com/zeit/swr</guid><pubDate>Sun, 01 Dec 2019 00:08:00 GMT</pubDate></item><item><title>wangzheng0822/algo #9 in All Languages, This month</title><link>https://github.com/wangzheng0822/algo</link><description>&lt;p&gt;&lt;i&gt;数据结构和算法必知必会的50个代码实现&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-数据结构和算法必知必会的50个代码实现" class="anchor" aria-hidden="true" href="#数据结构和算法必知必会的50个代码实现"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据结构和算法必知必会的50个代码实现&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-微信搜索我的公众号小争哥或者微信扫描下面二维码-获取更多压箱底的干货分享" class="anchor" aria-hidden="true" href="#微信搜索我的公众号小争哥或者微信扫描下面二维码-获取更多压箱底的干货分享"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;微信搜索我的公众号“小争哥”，或者微信扫描下面二维码, 获取更多压箱底的干货分享&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-前google工程师5万人跟着学的数据结构和算法之美专栏作者" class="anchor" aria-hidden="true" href="#前google工程师5万人跟着学的数据结构和算法之美专栏作者"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;前Google工程师，5万+人跟着学的《数据结构和算法之美》专栏作者&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/wangzheng0822/markdownphotos/blob/master/pics/qrcode_for_gh_9b0e7afdff20_258.jpg"&gt;&lt;img src="https://github.com/wangzheng0822/markdownphotos/raw/master/pics/qrcode_for_gh_9b0e7afdff20_258.jpg" alt="t2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-数组" class="anchor" aria-hidden="true" href="#数组"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数组&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实现一个支持动态扩容的数组&lt;/li&gt;
&lt;li&gt;实现一个大小固定的有序数组，支持动态增删改操作&lt;/li&gt;
&lt;li&gt;实现两个有序数组合并为一个有序数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-链表" class="anchor" aria-hidden="true" href="#链表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;链表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实现单链表、循环链表、双向链表，支持增删操作&lt;/li&gt;
&lt;li&gt;实现单链表反转&lt;/li&gt;
&lt;li&gt;实现两个有序的链表合并为一个有序链表&lt;/li&gt;
&lt;li&gt;实现求链表的中间结点&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-栈" class="anchor" aria-hidden="true" href="#栈"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;栈&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;用数组实现一个顺序栈&lt;/li&gt;
&lt;li&gt;用链表实现一个链式栈&lt;/li&gt;
&lt;li&gt;编程模拟实现一个浏览器的前进、后退功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-队列" class="anchor" aria-hidden="true" href="#队列"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;队列&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;用数组实现一个顺序队列&lt;/li&gt;
&lt;li&gt;用链表实现一个链式队列&lt;/li&gt;
&lt;li&gt;实现一个循环队列&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-递归" class="anchor" aria-hidden="true" href="#递归"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;递归&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;编程实现斐波那契数列求值f(n)=f(n-1)+f(n-2)&lt;/li&gt;
&lt;li&gt;编程实现求阶乘n!&lt;/li&gt;
&lt;li&gt;编程实现一组数据集合的全排列&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-排序" class="anchor" aria-hidden="true" href="#排序"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;排序&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实现归并排序、快速排序、插入排序、冒泡排序、选择排序&lt;/li&gt;
&lt;li&gt;编程实现O(n)时间复杂度内找到一组数据的第K大元素&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-二分查找" class="anchor" aria-hidden="true" href="#二分查找"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二分查找&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实现一个有序数组的二分查找算法&lt;/li&gt;
&lt;li&gt;实现模糊二分查找算法（比如大于等于给定值的第一个元素）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-散列表" class="anchor" aria-hidden="true" href="#散列表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;散列表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实现一个基于链表法解决冲突问题的散列表&lt;/li&gt;
&lt;li&gt;实现一个LRU缓存淘汰算法&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-字符串" class="anchor" aria-hidden="true" href="#字符串"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;字符串&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实现一个字符集，只包含a～z这26个英文字母的Trie树&lt;/li&gt;
&lt;li&gt;实现朴素的字符串匹配算法&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-二叉树" class="anchor" aria-hidden="true" href="#二叉树"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二叉树&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实现一个二叉查找树，并且支持插入、删除、查找操作&lt;/li&gt;
&lt;li&gt;实现查找二叉查找树中某个节点的后继、前驱节点&lt;/li&gt;
&lt;li&gt;实现二叉树前、中、后序以及按层遍历&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-堆" class="anchor" aria-hidden="true" href="#堆"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;堆&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实现一个小顶堆、大顶堆、优先级队列&lt;/li&gt;
&lt;li&gt;实现堆排序&lt;/li&gt;
&lt;li&gt;利用优先级队列合并K个有序数组&lt;/li&gt;
&lt;li&gt;求一组动态数据集合的最大Top K&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-图" class="anchor" aria-hidden="true" href="#图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;图&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实现有向图、无向图、有权图、无权图的邻接矩阵和邻接表表示方法&lt;/li&gt;
&lt;li&gt;实现图的深度优先搜索、广度优先搜索&lt;/li&gt;
&lt;li&gt;实现Dijkstra算法、A*算法&lt;/li&gt;
&lt;li&gt;实现拓扑排序的Kahn算法、DFS算法&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-回溯" class="anchor" aria-hidden="true" href="#回溯"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;回溯&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;利用回溯算法求解八皇后问题&lt;/li&gt;
&lt;li&gt;利用回溯算法求解0-1背包问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-分治" class="anchor" aria-hidden="true" href="#分治"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;分治&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;利用分治算法求一组数据的逆序对个数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-动态规划" class="anchor" aria-hidden="true" href="#动态规划"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;动态规划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;0-1背包问题&lt;/li&gt;
&lt;li&gt;最小路径和&lt;/li&gt;
&lt;li&gt;编程实现莱文斯坦最短编辑距离&lt;/li&gt;
&lt;li&gt;编程实现查找两个字符串的最长公共子序列&lt;/li&gt;
&lt;li&gt;编程实现一个数据序列的最长递增子序列&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>wangzheng0822</author><guid isPermaLink="false">https://github.com/wangzheng0822/algo</guid><pubDate>Sun, 01 Dec 2019 00:09:00 GMT</pubDate></item><item><title>gzc426/Java-Interview #10 in All Languages, This month</title><link>https://github.com/gzc426/Java-Interview</link><description>&lt;p&gt;&lt;i&gt;Java 面试必会 直通BAT&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;ul&gt;
&lt;li&gt;本仓库会持续更新，欢迎Star给一个鼓励！&lt;/li&gt;
&lt;li&gt;本github最初的版本是一份word文档，目前只是把word刚刚搬上来了，但是有些图片、排版还没来得急整理，看起来可能还是有点困难&lt;/li&gt;
&lt;li&gt;所以可以先关注一下我的公众号，在我的公众号[程序员乔戈里]后台回复 &lt;strong&gt;888&lt;/strong&gt; 获取这个github仓库的PDF版本，左侧有导航栏，方便大家阅读。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;github必须md格式才能看得舒服些，花了很多时间找word转md的工具，找了几款不太好用，于是自己手动把word改成md格式，后来发现有些重复性工作可以写个程序处理，就写了个程序，把word中的标题、代码都变成md格式，虽然能处理不少，但是还是需要人工校对，还有图片需要上传，真的超级费事，要搞吐了。。。各位也别抱怨我的github格式不好了，毕竟也还没完全处理完，体谅一下~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/550b00775ba6801fb92758e25354cbda7ac9c167/687474703a2f2f7777312e73696e61696d672e636e2f6c617267652f3030377338484a556c79316730666b6763707938636a333037363037363074372e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/550b00775ba6801fb92758e25354cbda7ac9c167/687474703a2f2f7777312e73696e61696d672e636e2f6c617267652f3030377338484a556c79316730666b6763707938636a333037363037363074372e6a7067" alt="" data-canonical-src="http://ww1.sinaimg.cn/large/007s8HJUly1g0fkgcpy8cj30760760t7.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gzc426</author><guid isPermaLink="false">https://github.com/gzc426/Java-Interview</guid><pubDate>Sun, 01 Dec 2019 00:10:00 GMT</pubDate></item><item><title>TheAlgorithms/Java #11 in All Languages, This month</title><link>https://github.com/TheAlgorithms/Java</link><description>&lt;p&gt;&lt;i&gt;All Algorithms implemented in Java&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-the-algorithms---java" class="anchor" aria-hidden="true" href="#the-algorithms---java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Algorithms - Java&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.paypal.me/TheAlgorithms/100" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d5d24e33e2f4b6fe53987419a21b203c03789a8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NOTE: A &lt;a href="https://github.com/TheAlgorithms/Java/tree/Development"&gt;Development&lt;/a&gt; branch is made for this repo where we are trying to migrate the existing project to a Java project structure. You can switch to &lt;a href="https://github.com/TheAlgorithms/Java/tree/Development"&gt;Development&lt;/a&gt; branch for contributions. Please refer &lt;a href="https://github.com/TheAlgorithms/Java/issues/474"&gt;this issue&lt;/a&gt; for more info.&lt;/p&gt;
&lt;p&gt;You can play around (run and edit) the Algorithms or contribute to them using Gitpod.io a free online dev environment with a single click. No need to worry about the Dev enviroment.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/TheAlgorithms/Java" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1eb1ddfea6092593649f0117f7262ffa8fbd3017/68747470733a2f2f676974706f642e696f2f627574746f6e2f6f70656e2d696e2d676974706f642e737667" alt="Open in Gitpod" data-canonical-src="https://gitpod.io/button/open-in-gitpod.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-all-algorithms-implemented-in-java-for-education" class="anchor" aria-hidden="true" href="#all-algorithms-implemented-in-java-for-education"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All algorithms implemented in Java (for education)&lt;/h3&gt;
&lt;p&gt;These implementations are for learning purposes. They may be less efficient than the implementations in the Java standard library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution Guidelines&lt;/h2&gt;
&lt;p&gt;Read our &lt;a href="CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-channel" class="anchor" aria-hidden="true" href="#community-channel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Channel&lt;/h2&gt;
&lt;p&gt;We're on &lt;a href="https://gitter.im/TheAlgorithms" rel="nofollow"&gt;Gitter&lt;/a&gt;! Please join us.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-algorithms" class="anchor" aria-hidden="true" href="#algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Algorithms&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="DIRECTORY.md"&gt;directory&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>TheAlgorithms</author><guid isPermaLink="false">https://github.com/TheAlgorithms/Java</guid><pubDate>Sun, 01 Dec 2019 00:11:00 GMT</pubDate></item><item><title>zhangdaiscott/jeecg-boot #12 in All Languages, This month</title><link>https://github.com/zhangdaiscott/jeecg-boot</link><description>&lt;p&gt;&lt;i&gt;一款基于代码生成器的JAVA快速开发平台，开源界“小普元”超越传统商业企业级开发平台！采用前后端分离架构：SpringBoot 2.x，Ant Design&amp;Vue，Mybatis-plus，Shiro，JWT。强大的代码生成器让前后端代码一键生成，无需写任何代码! 引领新的开发模式(OnlineCoding模式-&gt; 代码生成器模式-&gt; 手工MERGE智能开发)，帮助Java项目解决70%的重复工作，让开发更多关注业务逻辑。既能快速提高开发效率，帮助公司节省成本，同时又不失灵活性。JeecgBoot还独创在线开发模式（No代码）：在线表单配置（表单设计器）、移动配置能力、在线工作流配置（流程设计器）、在线报表配置、在线图表配置、插件能力（可插拔）等等&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;2019年度最受欢迎中国开源软件评选
请给JeecgBoot 投票，谢谢支持。
&lt;a href="https://www.oschina.net/p/jeecg-boot" rel="nofollow"&gt;https://www.oschina.net/p/jeecg-boot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/82742c2f099871c0709631a2102bab814a1e40c3/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930352f32343136343532335f584468672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/82742c2f099871c0709631a2102bab814a1e40c3/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930352f32343136343532335f584468672e706e67" alt="JEECG" title="JeecgBoot快速开发平台" data-canonical-src="https://static.oschina.net/uploads/img/201905/24164523_XDhg.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-jeecg-boot-快速开发平台前后端分离版本" class="anchor" aria-hidden="true" href="#jeecg-boot-快速开发平台前后端分离版本"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jeecg-Boot 快速开发平台（前后端分离版本）&lt;/h1&gt;
&lt;p&gt;当前最新版本： 2.1.2（发布日期：20191122）&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/zhangdaiscott/jeecg-boot/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/264c1d54ac99e2b6f94e00139f14bb91819f398d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e737667" alt="AUR" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.jeecg.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dec326034b9e702e4b0423590598de17e2c125cb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417574686f722d4a454543472545352539422541322545392539382539462d6f72616e67652e737667" alt="" data-canonical-src="https://img.shields.io/badge/Author-JEECG%E5%9B%A2%E9%98%9F-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/zhangdaiscott/jeecg-boot"&gt;&lt;img src="https://camo.githubusercontent.com/2a8f07e306b0dcc63c055dd32f8ede4540d86342/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d322e312e322d627269676874677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/version-2.1.2-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/zhangdaiscott/jeecg-boot"&gt;&lt;img src="https://camo.githubusercontent.com/1a638b505dfff981884fced5f8016152b872fe5b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f7a68616e6764616973636f74742f6a656563672d626f6f742e7376673f7374796c653d736f6369616c266c6162656c3d5374617273" alt="GitHub stars" data-canonical-src="https://img.shields.io/github/stars/zhangdaiscott/jeecg-boot.svg?style=social&amp;amp;label=Stars" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/zhangdaiscott/jeecg-boot"&gt;&lt;img src="https://camo.githubusercontent.com/3b65faef724f2958caf0aaf5a5184bb318fcf73a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f7a68616e6764616973636f74742f6a656563672d626f6f742e7376673f7374796c653d736f6369616c266c6162656c3d466f726b" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/zhangdaiscott/jeecg-boot.svg?style=social&amp;amp;label=Fork" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-项目介绍" class="anchor" aria-hidden="true" href="#项目介绍"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目介绍：&lt;/h2&gt;
&lt;h3 align="center"&gt;&lt;a id="user-content-java-rad-framework-for-enterprise-web-applications" class="anchor" aria-hidden="true" href="#java-rad-framework-for-enterprise-web-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java RAD framework for enterprise web applications&lt;/h3&gt;
&lt;p&gt;JeecgBoot 是一款基于代码生成器的J2EE快速开发平台！采用前后端分离架构：SpringBoot2.x，Ant Design&amp;amp;Vue，Mybatis-plus，Shiro，JWT。强大的代码生成器让前后端代码一键生成，无需写任何代码! JeecgBoot引领新的开发模式(Online Coding模式-&amp;gt; 代码生成器模式-&amp;gt; 手工MERGE智能开发)， 帮助解决Java项目70%的重复工作，让开发更多关注业务逻辑。既能快速提高开发效率，帮助公司节省成本，同时又不失灵活性！JeecgBoot还独创在线开发模式（No代码概念）：在线表单配置（表单设计器）、移动配置能力、工作流配置（在线设计流程）、报表配置能力、在线图表配置、插件能力（可插拔）等等！&lt;/p&gt;
&lt;p&gt;JEECG宗旨是: 简单功能由Online Coding配置实现（在线配置表单、在线配置报表、在线图表设计、在线设计流程、在线设计表单），复杂功能由代码生成器生成进行手工Merge，既保证了智能又兼顾了灵活;
业务流程采用工作流来实现、扩展出任务接口，供开发编写业务逻辑，表单提供多种解决方案： 表单设计器、online配置表单、编码表单。同时实现了流程与表单的分离设计（松耦合）、并支持任务节点灵活配置，既保证了公司流程的保密性，又减少了开发人员的工作量。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-适用项目" class="anchor" aria-hidden="true" href="#适用项目"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;适用项目&lt;/h2&gt;
&lt;p&gt;Jeecg-Boot快速开发平台，可以应用在任何J2EE项目的开发中，尤其适合企业信息管理系统（MIS）、内部办公系统（OA）、企业资源计划系统（ERP）、客户关系管理系统（CRM）等，其半智能手工Merge的开发方式，可以显著提高开发效率70%以上，极大降低开发成本。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-技术文档" class="anchor" aria-hidden="true" href="#技术文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在线演示 ： &lt;a href="http://boot.jeecg.com" rel="nofollow"&gt;http://boot.jeecg.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术官网：  &lt;a href="http://www.jeecg.com" rel="nofollow"&gt;http://www.jeecg.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开发文档：  &lt;a href="http://doc.jeecg.com/1273753" rel="nofollow"&gt;http://doc.jeecg.com/1273753&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视频教程  ：&lt;a href="https://space.bilibili.com/454617261/channel/detail?cid=84186" rel="nofollow"&gt;JeecgBoot入门系列视频&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见问题：  &lt;a href="http://www.jeecg.org/forum.php?mod=viewthread&amp;amp;tid=7816&amp;amp;extra=page%3D1" rel="nofollow"&gt;入门常见问题大全&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新日志：  &lt;a href="http://www.jeecg.com/#/doc/changelog" rel="nofollow"&gt;版本日志&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-交流互动" class="anchor" aria-hidden="true" href="#交流互动"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;交流互动&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;QQ交流群 ：  ②769925425、①284271917（满）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;反馈问题：  &lt;a href="https://github.com/zhangdaiscott/jeecg-boot/issues/new"&gt;反馈问题，请按格式发Issues&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参与开源：  &lt;a href="http://www.jeecg.com/#/doc/canyu-os" rel="nofollow"&gt;欢迎加入JEECG开源团队，共同进步！！&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Online一分钟：  &lt;a href="https://my.oschina.net/jeecg/blog/3083313" rel="nofollow"&gt;1分钟快速学习&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-为什么选择jeecg-boot" class="anchor" aria-hidden="true" href="#为什么选择jeecg-boot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;为什么选择JEECG-BOOT?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.采用最新主流前后分离框架（Springboot+Mybatis+antd），容易上手; 代码生成器依赖性低,灵活的扩展能力，可灵活实现二次开发;&lt;/li&gt;
&lt;li&gt;2.开发效率很高,采用代码生成器，单表数据模型和一对多(父子表)数据模型，增删改查功能自动生成，菜单配置直接使用；&lt;/li&gt;
&lt;li&gt;3.代码生成器提供强大模板机制，支持自定义模板风格。目前提供四套风格模板（单表两套、一对多两套）&lt;/li&gt;
&lt;li&gt;4.封装完善的用户、角色、菜单、组织机构、数据字典、在线定时任务等基础功能，支持访问授权、按钮权限、数据权限等功能&lt;/li&gt;
&lt;li&gt;5.常用共通封装，各种工具类(定时任务,短信接口,邮件发送,Excel导入导出等),基本满足80%项目需求&lt;/li&gt;
&lt;li&gt;6.简易Excel导入导出，支持单表导出和一对多表模式导出，生成的代码自带导入导出功能&lt;/li&gt;
&lt;li&gt;7.集成简易报表工具，图像报表和数据导出非常方便，可极其方便的生成图形报表、pdf、excel、word等报表；&lt;/li&gt;
&lt;li&gt;8.采用前后分离技术，页面UI风格精美，针对常用组件做了封装：时间、行表格控件、截取显示控件、报表组件，编辑器等等&lt;/li&gt;
&lt;li&gt;9.查询过滤器：查询功能自动生成，后台动态拼SQL追加查询条件；支持多种匹配方式（全匹配/模糊查询/包含查询/不匹配查询）；&lt;/li&gt;
&lt;li&gt;10.数据权限（精细化数据权限控制，控制到行级，列表级，表单字段级，实现不同人看不同数据，不同人对同一个页面操作不同字段&lt;/li&gt;
&lt;li&gt;11.在线配置报表（无需编码，通过在线配置方式，实现曲线图，柱状图，数据等报表）&lt;/li&gt;
&lt;li&gt;12.页面校验自动生成(必须输入、数字校验、金额校验、时间空间等);&lt;/li&gt;
&lt;li&gt;13.集成工作流activiti，并实现了只需在页面配置流程转向，可极大的简化bpm工作流的开发；用bpm的流程设计器画出了流程走向，一个工作流基本就完成了，只需写很少量的java代码；&lt;/li&gt;
&lt;li&gt;14.在线流程设计，采用开源Activiti流程引擎，实现在线画流程,自定义表单,表单挂靠,业务流转&lt;/li&gt;
&lt;li&gt;15.多数据源：及其简易的使用方式，在线配置数据源配置，便捷的从其他数据抓取数据；&lt;/li&gt;
&lt;li&gt;16.提供单点登录CAS集成方案，项目中已经提供完善的对接代码&lt;/li&gt;
&lt;li&gt;17.表单设计器，支持用户自定义表单布局，支持单表，一对多表单、支持select、radio、checkbox、textarea、date、popup、列表、宏等控件&lt;/li&gt;
&lt;li&gt;18.专业接口对接机制，统一采用restful接口方式，集成swagger-ui在线接口文档，Jwt token安全验证，方便客户端对接&lt;/li&gt;
&lt;li&gt;19.接口安全机制，可细化控制接口授权，非常简便实现不同客户端只看自己数据等控制&lt;/li&gt;
&lt;li&gt;20.高级组合查询功能，在线配置支持主子表关联查询，可保存查询历史&lt;/li&gt;
&lt;li&gt;21.提供各种系统监控，实时跟踪系统运行情况（监控 Redis、Tomcat、jvm、服务器信息、请求追踪、SQL监控）&lt;/li&gt;
&lt;li&gt;22.消息中心（支持短信、邮件、微信推送等等）&lt;/li&gt;
&lt;li&gt;21.集成Websocket消息通知机制&lt;/li&gt;
&lt;li&gt;22.提供APP发布方案国际化：&lt;/li&gt;
&lt;li&gt;23.支持多语言，提供国际化方案；&lt;/li&gt;
&lt;li&gt;24.数据变更记录日志，可记录数据每次变更内容，通过版本对比功能查看历史变化&lt;/li&gt;
&lt;li&gt;25.平台UI强大，实现了移动自适应&lt;/li&gt;
&lt;li&gt;26.平台首页风格，提供多种组合模式，支持自定义风格&lt;/li&gt;
&lt;li&gt;27.提供简单易用的打印插件，支持谷歌、IE浏览器等各种浏览器&lt;/li&gt;
&lt;li&gt;28.示例代码丰富，提供很多学习案例参考&lt;/li&gt;
&lt;li&gt;29.采用maven分模块开发方式&lt;/li&gt;
&lt;li&gt;30.支持菜单动态路由&lt;/li&gt;
&lt;li&gt;31.权限控制采用 RBAC（Role-Based Access Control，基于角色的访问控制）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-技术架构" class="anchor" aria-hidden="true" href="#技术架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术架构：&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-开发环境" class="anchor" aria-hidden="true" href="#开发环境"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;开发环境&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语言：Java 8&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IDE(JAVA)： IDEA / Eclipse安装lombok插件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IDE(前端)： WebStorm 或者 IDEA&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依赖管理：Maven&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库：MySQL5.7+  &amp;amp;  Oracle 11g &amp;amp; Sqlserver2017&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缓存：Redis&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-后端" class="anchor" aria-hidden="true" href="#后端"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;后端&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基础框架：Spring Boot 2.1.3.RELEASE&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;持久层框架：Mybatis-plus_3.1.2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全框架：Apache Shiro 1.4.0，Jwt_3.7.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库连接池：阿里巴巴Druid 1.1.10&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缓存框架：redis&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;日志打印：logback&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他：fastjson，poi，Swagger-ui，quartz, lombok（简化代码）等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-前端" class="anchor" aria-hidden="true" href="#前端"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;前端&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cn.vuejs.org/" rel="nofollow"&gt;Vue 2.6.10&lt;/a&gt;,&lt;a href="https://vuex.vuejs.org/zh/" rel="nofollow"&gt;Vuex&lt;/a&gt;,&lt;a href="https://router.vuejs.org/zh/" rel="nofollow"&gt;Vue Router&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/axios/axios"&gt;Axios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vuecomponent.github.io/ant-design-vue/docs/vue/introduce-cn/" rel="nofollow"&gt;ant-design-vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.webpackjs.com/" rel="nofollow"&gt;webpack&lt;/a&gt;,&lt;a href="https://yarnpkg.com/zh-Hans/" rel="nofollow"&gt;yarn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xyxiao001/vue-cropper"&gt;vue-cropper&lt;/a&gt; - 头像裁剪组件&lt;/li&gt;
&lt;li&gt;&lt;a href="https://antv.alipay.com/zh-cn/index.html" rel="nofollow"&gt;@antv/g2&lt;/a&gt; - Alipay AntV 数据可视化图表&lt;/li&gt;
&lt;li&gt;&lt;a href="https://viserjs.github.io/docs.html#/viser/guide/installation" rel="nofollow"&gt;Viser-vue&lt;/a&gt;  - antv/g2 封装实现&lt;/li&gt;
&lt;li&gt;eslint，&lt;a href="https://cli.vuejs.org/zh/guide" rel="nofollow"&gt;@vue/cli 3.2.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;vue-print-nb - 打印&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-功能模块" class="anchor" aria-hidden="true" href="#功能模块"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;功能模块&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;├─系统管理
│  ├─用户管理
│  ├─角色管理
│  ├─菜单管理
│  ├─权限设置（支持按钮权限、数据权限）
│  ├─表单权限（控制字段禁用、隐藏）
│  ├─部门管理
│  └─字典管理
│  └─树分类字典
│  └─系统公告
│  └─我的组织机构
├─消息中心
│  ├─消息管理
│  ├─模板管理
├─智能化功能
│  ├─代码生成器功能（一键生成前后端代码，生成后无需修改直接用，绝对是后端开发福音）
│  ├─代码生成器模板（提供4套模板，分别支持单表和一对多模型，不同风格选择）
│  ├─代码生成器模板（生成代码，自带excel导入导出）
│  ├─查询过滤器（查询逻辑无需编码，系统根据页面配置自动生成）
│  ├─高级查询器（弹窗自动组合查询条件）
│  ├─Excel导入导出工具集成（支持单表，一对多 导入导出）
│  ├─平台移动自适应支持
├─系统监控
│  ├─性能扫描监控
│  │  ├─监控 Redis
│  │  ├─Tomcat
│  │  ├─jvm
│  │  ├─服务器信息
│  │  ├─请求追踪
│  │  ├─磁盘监控
│  ├─定时任务
│  ├─系统日志
│  ├─消息中心（支持短信、邮件、微信推送等等）
│  ├─数据日志（记录数据快照，可对比快照，查看数据变更情况）
│  ├─系统通知
│  ├─SQL监控
│  ├─swagger-ui(在线接口文档)
│─报表示例
│  ├─曲线图
│  └─饼状图
│  └─柱状图
│  └─折线图
│  └─面积图
│  └─雷达图
│  └─仪表图
│  └─进度条
│  └─排名列表
│  └─等等
│─常用示例
│  ├─单表模型例子
│  └─一对多模型例子
│  └─打印例子
│  └─一对多TAB例子
│  └─内嵌table例子
│  └─常用选择组件
│  └─异步树table
│  └─接口模拟测试
│  └─一对多JEditable
│  └─图片拖拽排序
│  └─图片翻页
│  └─图片预览
│  └─PDF预览
│  └─分屏功能
│─封装通用组件	
│  ├─行编辑表格JEditableTable
│  └─省略显示组件
│  └─时间控件
│  └─高级查询
│  └─用户选择组件
│  └─报表组件封装
│  └─字典组件
│  └─下拉多选组件
│  └─选人组件
│  └─选部门组件
│  └─通过部门选人组件
│  └─封装曲线、柱状图、饼状图、折线图等等报表的组件（经过封装，使用简单）
│  └─在线code编辑器
│  └─上传文件组件
│  └─验证码组件
│  └─树列表组件
│  └─表单禁用组件
│  └─等等
│─更多页面模板
│  ├─各种高级表单
│  ├─各种列表效果
│  └─结果页面
│  └─异常页面
│  └─个人页面
├─高级功能
│  ├─提供单点登录CAS集成方案
│  ├─提供APP发布方案
│  ├─集成Websocket消息通知机制
├─Online在线开发(暂未开源)
│  ├─Online在线表单 - 功能已开放
│  ├─在线代码生成器 - 功能已开放
│  ├─Online在线图表
│  ├─Online图表模板配置
│  ├─Online在线报表
│  ├─高级表单设计器
│─流程模块功能 (暂不开源)
│  ├─流程设计器
│  ├─在线表单设计
│  └─我的任务
│  └─历史流程
│  └─历史流程
│  └─流程实例管理
│  └─流程监听管理
│  └─流程表达式
│  └─我发起的流程
│  └─我的抄送
│  └─流程委派、抄送、跳转
│  └─。。。
└─其他模块
   └─更多功能开发中。。
   
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-后台开发环境和依赖" class="anchor" aria-hidden="true" href="#后台开发环境和依赖"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;后台开发环境和依赖&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;java&lt;/li&gt;
&lt;li&gt;maven&lt;/li&gt;
&lt;li&gt;jdk8&lt;/li&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;li&gt;redis&lt;/li&gt;
&lt;li&gt;数据库脚步：jeecg-boot\docs\jeecg-boot-mysql.sql&lt;/li&gt;
&lt;li&gt;默认登录账号： admin/123456&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-前端开发环境和依赖" class="anchor" aria-hidden="true" href="#前端开发环境和依赖"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;前端开发环境和依赖&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;node&lt;/li&gt;
&lt;li&gt;yarn&lt;/li&gt;
&lt;li&gt;webpack&lt;/li&gt;
&lt;li&gt;eslint&lt;/li&gt;
&lt;li&gt;@vue/cli 3.2.1&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vueComponent/ant-design-vue"&gt;ant-design-vue&lt;/a&gt; - Ant Design Of Vue 实现&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xyxiao001/vue-cropper"&gt;vue-cropper&lt;/a&gt; - 头像裁剪组件&lt;/li&gt;
&lt;li&gt;&lt;a href="https://antv.alipay.com/zh-cn/index.html" rel="nofollow"&gt;@antv/g2&lt;/a&gt; - Alipay AntV 数据可视化图表&lt;/li&gt;
&lt;li&gt;&lt;a href="https://viserjs.github.io/docs.html#/viser/guide/installation" rel="nofollow"&gt;Viser-vue&lt;/a&gt;  - antv/g2 封装实现&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitee.com/dangzhenghui/jeecg-boot" rel="nofollow"&gt;jeecg-boot-angular 版本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-项目下载和运行" class="anchor" aria-hidden="true" href="#项目下载和运行"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目下载和运行&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;拉取项目代码&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/zhangdaiscott/jeecg-boot.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt;  jeecg-boot/ant-design-jeecg-vue&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;安装node.js&lt;/li&gt;
&lt;li&gt;切换到ant-design-jeecg-vue文件夹下&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# 安装yarn
npm install -g yarn

# 下载依赖
yarn install

# 启动
yarn run serve

# 编译项目
yarn run build

# Lints and fixes files
yarn run lint
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-系统效果" class="anchor" aria-hidden="true" href="#系统效果"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;系统效果&lt;/h2&gt;
&lt;h5&gt;&lt;a id="user-content-pc端" class="anchor" aria-hidden="true" href="#pc端"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PC端&lt;/h5&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b38cfbaecc6357bb979c72c0562c2f208b0c6343/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343135353430325f416d6c562e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b38cfbaecc6357bb979c72c0562c2f208b0c6343/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343135353430325f416d6c562e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14155402_AmlV.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/fe275bd0aca393037fda7c80ddc492032a485aec/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f62613830373932313139373539366261353666343935643462323265653332383063612e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/fe275bd0aca393037fda7c80ddc492032a485aec/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f62613830373932313139373539366261353666343935643462323265653332383063612e6a7067" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://oscimg.oschina.net/oscnet/ba807921197596ba56f495d4b22ee3280ca.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/460216bff2ea279b536a6e9c59f304cee12ac147/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303635375f634877622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/460216bff2ea279b536a6e9c59f304cee12ac147/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303635375f634877622e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160657_cHwb.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/baf6c8156998817807a3611e7c08360e80b895c6/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303831335f4b6d58532e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/baf6c8156998817807a3611e7c08360e80b895c6/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303831335f4b6d58532e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160813_KmXS.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/edeb12d37d1fb4c6308fde9da64fff82695655cb/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303933355f4e6962732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/edeb12d37d1fb4c6308fde9da64fff82695655cb/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303933355f4e6962732e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160935_Nibs.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b24673ff8f21795e26464238987d68364feab5c6/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136313030345f627851342e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b24673ff8f21795e26464238987d68364feab5c6/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136313030345f627851342e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14161004_bxQ4.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-在线接口文档" class="anchor" aria-hidden="true" href="#在线接口文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;在线接口文档&lt;/h5&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5e1ae69be7623c987ecfbe30f97e2a17fca53568/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930382f32373039353235385f4d3258712e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/5e1ae69be7623c987ecfbe30f97e2a17fca53568/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930382f32373039353235385f4d3258712e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201908/27095258_M2Xq.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cb34dc851708073acb8a36faafe29ce71f45d63d/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303935375f684e33582e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/cb34dc851708073acb8a36faafe29ce71f45d63d/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303935375f684e33582e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160957_hN3X.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-报表" class="anchor" aria-hidden="true" href="#报表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;报表&lt;/h5&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/34485ab06110f3a21a2ae376ae1037881c699c79/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303832385f706b46722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/34485ab06110f3a21a2ae376ae1037881c699c79/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303832385f706b46722e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160828_pkFr.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/84bc421d38390407136f45b776466975b6b8e361/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303833345f4c6f32332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/84bc421d38390407136f45b776466975b6b8e361/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303833345f4c6f32332e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160834_Lo23.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/93e9e212ee3a8f6637cc5e048fbbd04e86f6486e/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303834325f514b37422e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/93e9e212ee3a8f6637cc5e048fbbd04e86f6486e/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303834325f514b37422e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160842_QK7B.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/921bd360c70e7d83202e070afa8415aa176a3447/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303834395f47426d352e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/921bd360c70e7d83202e070afa8415aa176a3447/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303834395f47426d352e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160849_GBm5.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/80635084a64fab25329383d3aca7925590d61a3a/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303835385f3652414d2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/80635084a64fab25329383d3aca7925590d61a3a/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303835385f3652414d2e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160858_6RAM.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-流程" class="anchor" aria-hidden="true" href="#流程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;流程&lt;/h5&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0476594d0f16a0b52b170b3d8c3142c161ef202e/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303632335f3866776b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0476594d0f16a0b52b170b3d8c3142c161ef202e/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303632335f3866776b2e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160623_8fwk.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b5e5773d5eef451e90362718f97819b27af0ad64/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303931375f3946747a2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b5e5773d5eef451e90362718f97819b27af0ad64/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303931375f3946747a2e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160917_9Ftz.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e87865acd39c0098e658b12086952118418c433e/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303633335f753539472e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e87865acd39c0098e658b12086952118418c433e/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930342f31343136303633335f753539472e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201904/14160633_u59G.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cba284d557c8c28f971220cdfc72815852dce7e2/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930372f30353136353134325f797951372e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/cba284d557c8c28f971220cdfc72815852dce7e2/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930372f30353136353134325f797951372e706e67" alt="输入图片说明" title="在这里输入图片标题" data-canonical-src="https://static.oschina.net/uploads/img/201907/05165142_yyQ7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-手机端" class="anchor" aria-hidden="true" href="#手机端"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;手机端&lt;/h5&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/11796e091be34d5def67ffe6cd8f3c6b26278674/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f64613534336335643064353762616162306365636161343637306338623638633532312e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/11796e091be34d5def67ffe6cd8f3c6b26278674/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f64613534336335643064353762616162306365636161343637306338623638633532312e6a7067" alt="" data-canonical-src="https://oscimg.oschina.net/oscnet/da543c5d0d57baab0cecaa4670c8b68c521.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d940e0837b731b1fd1a191ac962aeb6d9f9ab88c/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f66646134626438326361623964363832646531633166626632303630626631346661362e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/d940e0837b731b1fd1a191ac962aeb6d9f9ab88c/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f66646134626438326361623964363832646531633166626632303630626631346661362e6a7067" alt="" data-canonical-src="https://oscimg.oschina.net/oscnet/fda4bd82cab9d682de1c1fbf2060bf14fa6.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-pad端" class="anchor" aria-hidden="true" href="#pad端"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PAD端&lt;/h5&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eee564a123aff644d562e359b2ded917238b3df1/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f65393066656639373061386333333739306162303366666436633463376365633232352e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/eee564a123aff644d562e359b2ded917238b3df1/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f65393066656639373061386333333739306162303366666436633463376365633232352e6a7067" alt="" data-canonical-src="https://oscimg.oschina.net/oscnet/e90fef970a8c33790ab03ffd6c4c7cec225.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2d1848246cd7af324a0a87b921063acb43cf794a/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f64373832313838303361396538353661306161383262343565666334393834396130632e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/2d1848246cd7af324a0a87b921063acb43cf794a/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f64373832313838303361396538353661306161383262343565666334393834396130632e6a7067" alt="" data-canonical-src="https://oscimg.oschina.net/oscnet/d78218803a9e856a0aa82b45efc49849a0c.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f04e63a6f8a719c5ef7c66223f0f7898623f89d3/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f30343034303534643961313236343765663666383263663963666238306135616330322e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/f04e63a6f8a719c5ef7c66223f0f7898623f89d3/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f30343034303534643961313236343765663666383263663963666238306135616330322e6a7067" alt="" data-canonical-src="https://oscimg.oschina.net/oscnet/0404054d9a12647ef6f82cf9cfb80a5ac02.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8ae982c66c05b411e3c6b6a705c61f5fde5ce7c2/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f35396332336232333066353233383465353838656531363330396234346661323064652e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/8ae982c66c05b411e3c6b6a705c61f5fde5ce7c2/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f35396332336232333066353233383465353838656531363330396234346661323064652e6a7067" alt="" data-canonical-src="https://oscimg.oschina.net/oscnet/59c23b230f52384e588ee16309b44fa20de.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-其他说明" class="anchor" aria-hidden="true" href="#其他说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;其他说明&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目使用的 &lt;a href="https://cli.vuejs.org/guide/" rel="nofollow"&gt;vue-cli3&lt;/a&gt;, 请更新您的 cli&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关闭 Eslint (不推荐) 移除 &lt;code&gt;package.json&lt;/code&gt; 中 &lt;code&gt;eslintConfig&lt;/code&gt; 整个节点代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 Ant Design 配色，在文件 &lt;code&gt;vue.config.js&lt;/code&gt; 中，其他 less 变量覆盖参考 &lt;a href="https://ant.design/docs/react/customize-theme-cn" rel="nofollow"&gt;ant design&lt;/a&gt; 官方说明&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre lang="ecmascript"&gt;&lt;code&gt;  css: {
    loaderOptions: {
      less: {
        modifyVars: {
          /* less 变量覆盖，用于自定义 ant design 主题 */

          'primary-color': '#F5222D',
          'link-color': '#F5222D',
          'border-radius-base': '4px',
        },
        javascriptEnabled: true,
      }
    }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-附属文档" class="anchor" aria-hidden="true" href="#附属文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;附属文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://vuecomponent.github.io/ant-design-vue/docs/vue/introduce-cn" rel="nofollow"&gt;Ant Design Vue&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://viserjs.github.io/demo.html#/viser/bar/basic-bar" rel="nofollow"&gt;报表 viser-vue&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://cn.vuejs.org/v2/guide" rel="nofollow"&gt;Vue&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zhangdaiscott/jeecg-boot/tree/master/ant-design-jeecg-vue/src/router/README.md"&gt;路由/菜单说明&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zhangdaiscott/jeecg-boot/tree/master/ant-design-jeecg-vue/src/defaultSettings.js"&gt;ANTD 默认配置项&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他待补充...&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-备注" class="anchor" aria-hidden="true" href="#备注"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;备注&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;@vue/cli 升级后，eslint 规则更新了。由于影响到全部 .vue 文件，需要逐个验证。既暂时关闭部分原本不验证的规则，后期维护时，在逐步修正这些 rules&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-捐赠" class="anchor" aria-hidden="true" href="#捐赠"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;捐赠&lt;/h2&gt;
&lt;p&gt;如果觉得还不错，请作者喝杯咖啡吧 ☺&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e8256d9499fa27a28b375a85d77f4ae6eb0ec94d/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930332f30383135353630385f304546582e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e8256d9499fa27a28b375a85d77f4ae6eb0ec94d/68747470733a2f2f7374617469632e6f736368696e612e6e65742f75706c6f6164732f696d672f3230313930332f30383135353630385f304546582e706e67" alt="" data-canonical-src="https://static.oschina.net/uploads/img/201903/08155608_0EFX.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zhangdaiscott</author><guid isPermaLink="false">https://github.com/zhangdaiscott/jeecg-boot</guid><pubDate>Sun, 01 Dec 2019 00:12:00 GMT</pubDate></item><item><title>nodejs/node #13 in All Languages, This month</title><link>https://github.com/nodejs/node</link><description>&lt;p&gt;&lt;i&gt;Node.js JavaScript runtime :sparkles::turtle::rocket::sparkles:&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a href="https://nodejs.org/" rel="nofollow"&gt;
    &lt;img alt="Node.js" src="https://camo.githubusercontent.com/9c24355bb3afbff914503b663ade7beb341079fa/68747470733a2f2f6e6f64656a732e6f72672f7374617469632f696d616765732f6c6f676f2d6c696768742e737667" width="400" data-canonical-src="https://nodejs.org/static/images/logo-light.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. For
more information on using Node.js, see the &lt;a href="https://nodejs.org/" rel="nofollow"&gt;Node.js Website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Node.js project uses an &lt;a href="./GOVERNANCE.md"&gt;open governance model&lt;/a&gt;. The
&lt;a href="http://openjs.foundation/" rel="nofollow"&gt;OpenJS Foundation&lt;/a&gt; provides support for the project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This project is bound by a &lt;a href="https://github.com/nodejs/admin/blob/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#support"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#release-types"&gt;Release Types&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#download"&gt;Download&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#current-and-lts-releases"&gt;Current and LTS Releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nightly-releases"&gt;Nightly Releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-documentation"&gt;API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#verifying-binaries"&gt;Verifying Binaries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-nodejs"&gt;Building Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#security"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing-to-nodejs"&gt;Contributing to Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#current-project-team-members"&gt;Current Project Team Members&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tsc-technical-steering-committee"&gt;TSC (Technical Steering Committee)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collaborators"&gt;Collaborators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#release-keys"&gt;Release Keys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;Looking for help? Check out the
&lt;a href=".github/SUPPORT.md"&gt;instructions for getting support&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-release-types" class="anchor" aria-hidden="true" href="#release-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Types&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Current&lt;/strong&gt;: Under active development. Code for the Current release is in the
branch for its major version number (for example,
&lt;a href="https://github.com/nodejs/node/tree/v10.x"&gt;v10.x&lt;/a&gt;). Node.js releases a new
major version every 6 months, allowing for breaking changes. This happens in
April and October every year. Releases appearing each October have a support
life of 8 months. Releases appearing each April convert to LTS (see below)
each October.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LTS&lt;/strong&gt;: Releases that receive Long-term Support, with a focus on stability
and security. Every even-numbered major version will become an LTS release.
LTS releases receive 18 months of &lt;em&gt;Active LTS&lt;/em&gt; support and a further 12 months
of &lt;em&gt;Maintenance&lt;/em&gt;. LTS release lines have alphabetically-ordered codenames,
beginning with v4 Argon. There are no breaking changes or feature additions,
except in some special circumstances.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nightly&lt;/strong&gt;: Code from the Current branch built every 24-hours when there are
changes. Use with caution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Current and LTS releases follow &lt;a href="https://semver.org" rel="nofollow"&gt;Semantic Versioning&lt;/a&gt;. A
member of the Release Team &lt;a href="#release-keys"&gt;signs&lt;/a&gt; each Current and LTS release.
For more information, see the
&lt;a href="https://github.com/nodejs/Release#readme"&gt;Release README&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h3&gt;
&lt;p&gt;Binaries, installers, and source tarballs are available at
&lt;a href="https://nodejs.org/en/download/" rel="nofollow"&gt;https://nodejs.org/en/download/&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-current-and-lts-releases" class="anchor" aria-hidden="true" href="#current-and-lts-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current and LTS Releases&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://nodejs.org/download/release/" rel="nofollow"&gt;https://nodejs.org/download/release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://nodejs.org/download/release/latest/" rel="nofollow"&gt;latest&lt;/a&gt; directory is an
alias for the latest Current release. The latest-&lt;em&gt;codename&lt;/em&gt; directory is an
alias for the latest release from an LTS line. For example, the
&lt;a href="https://nodejs.org/download/release/latest-carbon/" rel="nofollow"&gt;latest-carbon&lt;/a&gt; directory
contains the latest Carbon (Node.js 8) release.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-nightly-releases" class="anchor" aria-hidden="true" href="#nightly-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nightly Releases&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://nodejs.org/download/nightly/" rel="nofollow"&gt;https://nodejs.org/download/nightly/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Each directory name and filename contains a date (in UTC time) and the commit
SHA at the HEAD of the release.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-api-documentation" class="anchor" aria-hidden="true" href="#api-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Documentation&lt;/h4&gt;
&lt;p&gt;Documentation for the latest Current release is at &lt;a href="https://nodejs.org/api/" rel="nofollow"&gt;https://nodejs.org/api/&lt;/a&gt;.
Version-specific documentation is available in each release directory in the
&lt;em&gt;docs&lt;/em&gt; subdirectory. Version-specific documentation is also at
&lt;a href="https://nodejs.org/download/docs/" rel="nofollow"&gt;https://nodejs.org/download/docs/&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-verifying-binaries" class="anchor" aria-hidden="true" href="#verifying-binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verifying Binaries&lt;/h3&gt;
&lt;p&gt;Download directories contain a &lt;code&gt;SHASUMS256.txt&lt;/code&gt; file with SHA checksums for the
files.&lt;/p&gt;
&lt;p&gt;To download &lt;code&gt;SHASUMS256.txt&lt;/code&gt; using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To check that a downloaded file matches the checksum, run
it through &lt;code&gt;sha256sum&lt;/code&gt; with a command such as:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;grep node-vx.y.z.tar.gz SHASUMS256.txt &lt;span class="pl-k"&gt;|&lt;/span&gt; sha256sum -c -&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Current and LTS, the GPG detached signature of &lt;code&gt;SHASUMS256.txt&lt;/code&gt; is in
&lt;code&gt;SHASUMS256.txt.sig&lt;/code&gt;. You can use it with &lt;code&gt;gpg&lt;/code&gt; to verify the integrity of
&lt;code&gt;SHASUM256.txt&lt;/code&gt;. You will first need to import
&lt;a href="#release-keys"&gt;the GPG keys of individuals authorized to create releases&lt;/a&gt;. To
import the keys:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the bottom of this README for a full script to import active release keys.&lt;/p&gt;
&lt;p&gt;Next, download the &lt;code&gt;SHASUMS256.txt.sig&lt;/code&gt; for the release:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then use &lt;code&gt;gpg --verify SHASUMS256.txt.sig SHASUMS256.txt&lt;/code&gt; to verify
the file's signature.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-nodejs" class="anchor" aria-hidden="true" href="#building-nodejs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Node.js&lt;/h2&gt;
&lt;p&gt;See &lt;a href="BUILDING.md"&gt;BUILDING.md&lt;/a&gt; for instructions on how to build Node.js from
source and a list of supported platforms.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;p&gt;For information on reporting security vulnerabilities in Node.js, see
&lt;a href="./SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-nodejs" class="anchor" aria-hidden="true" href="#contributing-to-nodejs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Node.js&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="CONTRIBUTING.md"&gt;Contributing to the project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nodejs/TSC/blob/master/WORKING_GROUPS.md"&gt;Working Groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nodejs/TSC/blob/master/Strategic-Initiatives.md"&gt;Strategic Initiatives&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-current-project-team-members" class="anchor" aria-hidden="true" href="#current-project-team-members"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current Project Team Members&lt;/h2&gt;
&lt;p&gt;For information about the governance of the Node.js project, see
&lt;a href="./GOVERNANCE.md"&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tsc-technical-steering-committee" class="anchor" aria-hidden="true" href="#tsc-technical-steering-committee"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TSC (Technical Steering Committee)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/addaleax"&gt;addaleax&lt;/a&gt; -
&lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna@addaleax.net"&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apapirovski"&gt;apapirovski&lt;/a&gt; -
&lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apapirovski@mac.com"&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BethGriggs"&gt;BethGriggs&lt;/a&gt; -
&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:Bethany.Griggs@uk.ibm.com"&gt;Bethany.Griggs@uk.ibm.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChALkeR"&gt;ChALkeR&lt;/a&gt; -
&lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chalkerx@gmail.com"&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cjihrig"&gt;cjihrig&lt;/a&gt; -
&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danbev"&gt;danbev&lt;/a&gt; -
&lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel.bevenius@gmail.com"&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fhinkel"&gt;fhinkel&lt;/a&gt; -
&lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href="mailto:franziska.hinkelmann@gmail.com"&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Fishrock123"&gt;Fishrock123&lt;/a&gt; -
&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock123@rocketmail.com"&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gabrielschulhof"&gt;gabrielschulhof&lt;/a&gt; -
&lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gabriel.schulhof@intel.com"&gt;gabriel.schulhof@intel.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; -
&lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jasnell"&gt;jasnell&lt;/a&gt; -
&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@gmail.com"&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joyeecheung"&gt;joyeecheung&lt;/a&gt; -
&lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joyeec9h3@gmail.com"&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; -
&lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; -
&lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:michael_dawson@ca.ibm.com"&gt;michael_dawson@ca.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MylesBorins"&gt;MylesBorins&lt;/a&gt; -
&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sam-github"&gt;sam-github&lt;/a&gt; -
&lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vieuxtech@gmail.com"&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/targos"&gt;targos&lt;/a&gt; -
&lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thefourtheye"&gt;thefourtheye&lt;/a&gt; -
&lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thechargingvolcano@gmail.com"&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tniessen"&gt;tniessen&lt;/a&gt; -
&lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tniessen@tnie.de"&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Trott"&gt;Trott&lt;/a&gt; -
&lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rtrott@gmail.com"&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tsc-emeriti" class="anchor" aria-hidden="true" href="#tsc-emeriti"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TSC Emeriti&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bnoordhuis"&gt;bnoordhuis&lt;/a&gt; -
&lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:info@bnoordhuis.nl"&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrisdickinson"&gt;chrisdickinson&lt;/a&gt; -
&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evanlucas"&gt;evanlucas&lt;/a&gt; -
&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gibfahn"&gt;gibfahn&lt;/a&gt; -
&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/indutny"&gt;indutny&lt;/a&gt; -
&lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fedor.indutny@gmail.com"&gt;fedor.indutny@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isaacs"&gt;isaacs&lt;/a&gt; -
&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joshgav"&gt;joshgav&lt;/a&gt; -
&lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href="mailto:josh.gavant@outlook.com"&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mscdex"&gt;mscdex&lt;/a&gt; -
&lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mscdex@mscdex.net"&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nebrius"&gt;nebrius&lt;/a&gt; -
&lt;strong&gt;Bryan Hughes&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@nebri.us"&gt;bryan@nebri.us&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ofrobots"&gt;ofrobots&lt;/a&gt; -
&lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ofrobots@google.com"&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orangemocha"&gt;orangemocha&lt;/a&gt; -
&lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href="mailto:orangemocha@nodejs.org"&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piscisaureus"&gt;piscisaureus&lt;/a&gt; -
&lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bertbelder@gmail.com"&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rvagg"&gt;rvagg&lt;/a&gt; -
&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:r@va.gg"&gt;r@va.gg&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shigeki"&gt;shigeki&lt;/a&gt; -
&lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ohtsu@ohtsu.org"&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimothyGu"&gt;TimothyGu&lt;/a&gt; -
&lt;strong&gt;Tiancheng "Timothy" Gu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:timothygu99@gmail.com"&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trevnorris"&gt;trevnorris&lt;/a&gt; -
&lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trev.norris@gmail.com"&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-collaborators" class="anchor" aria-hidden="true" href="#collaborators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collaborators&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/addaleax"&gt;addaleax&lt;/a&gt; -
&lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna@addaleax.net"&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ak239"&gt;ak239&lt;/a&gt; -
&lt;strong&gt;Aleksei Koziatinskii&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ak239spb@gmail.com"&gt;ak239spb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AndreasMadsen"&gt;AndreasMadsen&lt;/a&gt; -
&lt;strong&gt;Andreas Madsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:amwebdk@gmail.com"&gt;amwebdk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antsmartian"&gt;antsmartian&lt;/a&gt; -
&lt;strong&gt;Anto Aravinth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anto.aravinth.cse@gmail.com"&gt;anto.aravinth.cse@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apapirovski"&gt;apapirovski&lt;/a&gt; -
&lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apapirovski@mac.com"&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aqrln"&gt;aqrln&lt;/a&gt; -
&lt;strong&gt;Alexey Orlenko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:eaglexrlnk@gmail.com"&gt;eaglexrlnk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bcoe"&gt;bcoe&lt;/a&gt; -
&lt;strong&gt;Ben Coe&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bencoe@gmail.com"&gt;bencoe@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bengl"&gt;bengl&lt;/a&gt; -
&lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benjamingr"&gt;benjamingr&lt;/a&gt; -
&lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benjamingr@gmail.com"&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BethGriggs"&gt;BethGriggs&lt;/a&gt; -
&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:Bethany.Griggs@uk.ibm.com"&gt;Bethany.Griggs@uk.ibm.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bmeck"&gt;bmeck&lt;/a&gt; -
&lt;strong&gt;Bradley Farias&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bradley.meck@gmail.com"&gt;bradley.meck@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bmeurer"&gt;bmeurer&lt;/a&gt; -
&lt;strong&gt;Benedikt Meurer&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benedikt.meurer@gmail.com"&gt;benedikt.meurer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bnoordhuis"&gt;bnoordhuis&lt;/a&gt; -
&lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:info@bnoordhuis.nl"&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boneskull"&gt;boneskull&lt;/a&gt; -
&lt;strong&gt;Christopher Hiller&lt;/strong&gt; &amp;lt;&lt;a href="mailto:boneskull@boneskull.com"&gt;boneskull@boneskull.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BridgeAR"&gt;BridgeAR&lt;/a&gt; -
&lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bzoz"&gt;bzoz&lt;/a&gt; -
&lt;strong&gt;Bartosz Sosnowski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bartosz@janeasystems.com"&gt;bartosz@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/calvinmetcalf"&gt;calvinmetcalf&lt;/a&gt; -
&lt;strong&gt;Calvin Metcalf&lt;/strong&gt; &amp;lt;&lt;a href="mailto:calvin.metcalf@gmail.com"&gt;calvin.metcalf@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cclauss"&gt;cclauss&lt;/a&gt; -
&lt;strong&gt;Christian Clauss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cclauss@me.com"&gt;cclauss@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChALkeR"&gt;ChALkeR&lt;/a&gt; -
&lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chalkerx@gmail.com"&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cjihrig"&gt;cjihrig&lt;/a&gt; -
&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/claudiorodriguez"&gt;claudiorodriguez&lt;/a&gt; -
&lt;strong&gt;Claudio Rodriguez&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjrodr@yahoo.com"&gt;cjrodr@yahoo.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/codebytere"&gt;codebytere&lt;/a&gt; -
&lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:codebytere@gmail.com"&gt;codebytere@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danbev"&gt;danbev&lt;/a&gt; -
&lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel.bevenius@gmail.com"&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davisjam"&gt;davisjam&lt;/a&gt; -
&lt;strong&gt;Jamie Davis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:davisjam@vt.edu"&gt;davisjam@vt.edu&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devnexen"&gt;devnexen&lt;/a&gt; -
&lt;strong&gt;David Carlier&lt;/strong&gt; &amp;lt;&lt;a href="mailto:devnexen@gmail.com"&gt;devnexen@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devsnek"&gt;devsnek&lt;/a&gt; -
&lt;strong&gt;Gus Caplan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@gus.host"&gt;me@gus.host&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/digitalinfinity"&gt;digitalinfinity&lt;/a&gt; -
&lt;strong&gt;Hitesh Kanwathirtha&lt;/strong&gt; &amp;lt;&lt;a href="mailto:digitalinfinity@gmail.com"&gt;digitalinfinity@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edsadr"&gt;edsadr&lt;/a&gt; -
&lt;strong&gt;Adrian Estrada&lt;/strong&gt; &amp;lt;&lt;a href="mailto:edsadr@gmail.com"&gt;edsadr@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eljefedelrodeodeljefe"&gt;eljefedelrodeodeljefe&lt;/a&gt; -
&lt;strong&gt;Robert Jefe Lindstaedt&lt;/strong&gt; &amp;lt;&lt;a href="mailto:robert.lindstaedt@gmail.com"&gt;robert.lindstaedt@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneo"&gt;eugeneo&lt;/a&gt; -
&lt;strong&gt;Eugene Ostroukhov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:eostroukhov@google.com"&gt;eostroukhov@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evanlucas"&gt;evanlucas&lt;/a&gt; -
&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fhinkel"&gt;fhinkel&lt;/a&gt; -
&lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href="mailto:franziska.hinkelmann@gmail.com"&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Fishrock123"&gt;Fishrock123&lt;/a&gt; -
&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock123@rocketmail.com"&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gabrielschulhof"&gt;gabrielschulhof&lt;/a&gt; -
&lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gabriel.schulhof@intel.com"&gt;gabriel.schulhof@intel.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gdams"&gt;gdams&lt;/a&gt; -
&lt;strong&gt;George Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:george.adams@uk.ibm.com"&gt;george.adams@uk.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek"&gt;geek&lt;/a&gt; -
&lt;strong&gt;Wyatt Preul&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wpreul@gmail.com"&gt;wpreul@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gengjiawen"&gt;gengjiawen&lt;/a&gt; -
&lt;strong&gt;Jiawen Geng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:technicalcute@gmail.com"&gt;technicalcute@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gibfahn"&gt;gibfahn&lt;/a&gt; -
&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; -
&lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/guybedford"&gt;guybedford&lt;/a&gt; -
&lt;strong&gt;Guy Bedford&lt;/strong&gt; &amp;lt;&lt;a href="mailto:guybedford@gmail.com"&gt;guybedford@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hashseed"&gt;hashseed&lt;/a&gt; -
&lt;strong&gt;Yang Guo&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yangguo@chromium.org"&gt;yangguo@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hiroppy"&gt;hiroppy&lt;/a&gt; -
&lt;strong&gt;Yuta Hiroto&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hello@hiroppy.me"&gt;hello@hiroppy.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iarna"&gt;iarna&lt;/a&gt; -
&lt;strong&gt;Rebecca Turner&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@re-becca.org"&gt;me@re-becca.org&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/indutny"&gt;indutny&lt;/a&gt; -
&lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fedor.indutny@gmail.com"&gt;fedor.indutny@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/italoacasas"&gt;italoacasas&lt;/a&gt; -
&lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@italoacasas.com"&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JacksonTian"&gt;JacksonTian&lt;/a&gt; -
&lt;strong&gt;Jackson Tian&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shyvo1987@gmail.com"&gt;shyvo1987@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jasnell"&gt;jasnell&lt;/a&gt; -
&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@gmail.com"&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jbergstroem"&gt;jbergstroem&lt;/a&gt; -
&lt;strong&gt;Johan Bergström&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bugs@bergstroem.nu"&gt;bugs@bergstroem.nu&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jdalton"&gt;jdalton&lt;/a&gt; -
&lt;strong&gt;John-David Dalton&lt;/strong&gt; &amp;lt;&lt;a href="mailto:john.david.dalton@gmail.com"&gt;john.david.dalton@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jkrems"&gt;jkrems&lt;/a&gt; -
&lt;strong&gt;Jan Krems&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jan.krems@gmail.com"&gt;jan.krems@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joaocgreis"&gt;joaocgreis&lt;/a&gt; -
&lt;strong&gt;João Reis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:reis@janeasystems.com"&gt;reis@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joyeecheung"&gt;joyeecheung&lt;/a&gt; -
&lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joyeec9h3@gmail.com"&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/julianduque"&gt;julianduque&lt;/a&gt; -
&lt;strong&gt;Julian Duque&lt;/strong&gt; &amp;lt;&lt;a href="mailto:julianduquej@gmail.com"&gt;julianduquej@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JungMinu"&gt;JungMinu&lt;/a&gt; -
&lt;strong&gt;Minwoo Jung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:nodecorelab@gmail.com"&gt;nodecorelab@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kfarnung"&gt;kfarnung&lt;/a&gt; -
&lt;strong&gt;Kyle Farnung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kfarnung@microsoft.com"&gt;kfarnung@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lance"&gt;lance&lt;/a&gt; -
&lt;strong&gt;Lance Ball&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lball@redhat.com"&gt;lball@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/legendecas"&gt;legendecas&lt;/a&gt; -
&lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:legendecas@gmail.com"&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Leko"&gt;Leko&lt;/a&gt; -
&lt;strong&gt;Shingo Inoue&lt;/strong&gt; &amp;lt;&lt;a href="mailto:leko.noor@gmail.com"&gt;leko.noor@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lpinca"&gt;lpinca&lt;/a&gt; -
&lt;strong&gt;Luigi Pinca&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luigipinca@gmail.com"&gt;luigipinca@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lundibundi"&gt;lundibundi&lt;/a&gt; -
&lt;strong&gt;Denys Otrishko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shishugi@gmail.com"&gt;shishugi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maclover7"&gt;maclover7&lt;/a&gt; -
&lt;strong&gt;Jon Moss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@jonathanmoss.me"&gt;me@jonathanmoss.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mafintosh"&gt;mafintosh&lt;/a&gt;
&lt;strong&gt;Mathias Buus&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mathiasbuus@gmail.com"&gt;mathiasbuus@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; -
&lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; -
&lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:michael_dawson@ca.ibm.com"&gt;michael_dawson@ca.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/misterdjules"&gt;misterdjules&lt;/a&gt; -
&lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jgilli@nodejs.org"&gt;jgilli@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmarchini"&gt;mmarchini&lt;/a&gt; -
&lt;strong&gt;Matheus Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mat@mmarchini.me"&gt;mat@mmarchini.me&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MoonBall"&gt;MoonBall&lt;/a&gt; -
&lt;strong&gt;Chen Gang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gangc.cxy@foxmail.com"&gt;gangc.cxy@foxmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mscdex"&gt;mscdex&lt;/a&gt; -
&lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mscdex@mscdex.net"&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MylesBorins"&gt;MylesBorins&lt;/a&gt; -
&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/not-an-aardvark"&gt;not-an-aardvark&lt;/a&gt; -
&lt;strong&gt;Teddy Katz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:teddy.katz@gmail.com"&gt;teddy.katz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ofrobots"&gt;ofrobots&lt;/a&gt; -
&lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ofrobots@google.com"&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oyyd"&gt;oyyd&lt;/a&gt; -
&lt;strong&gt;Ouyang Yadong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oyydoibh@gmail.com"&gt;oyydoibh@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/princejwesley"&gt;princejwesley&lt;/a&gt; -
&lt;strong&gt;Prince John Wesley&lt;/strong&gt; &amp;lt;&lt;a href="mailto:princejohnwesley@gmail.com"&gt;princejohnwesley@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/psmarshall"&gt;psmarshall&lt;/a&gt; -
&lt;strong&gt;Peter Marshall&lt;/strong&gt; &amp;lt;&lt;a href="mailto:petermarshall@chromium.org"&gt;petermarshall@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Qard"&gt;Qard&lt;/a&gt; -
&lt;strong&gt;Stephen Belanger&lt;/strong&gt; &amp;lt;&lt;a href="mailto:admin@stephenbelanger.com"&gt;admin@stephenbelanger.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/refack"&gt;refack&lt;/a&gt; -
&lt;strong&gt;Refael Ackermann (רפאל פלחי)&lt;/strong&gt; &amp;lt;&lt;a href="mailto:refack@gmail.com"&gt;refack@gmail.com&lt;/a&gt;&amp;gt; (he/him/הוא/אתה)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/richardlau"&gt;richardlau&lt;/a&gt; -
&lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:riclau@uk.ibm.com"&gt;riclau@uk.ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ronkorving"&gt;ronkorving&lt;/a&gt; -
&lt;strong&gt;Ron Korving&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ron@ronkorving.nl"&gt;ron@ronkorving.nl&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rubys"&gt;rubys&lt;/a&gt; -
&lt;strong&gt;Sam Ruby&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rubys@intertwingly.net"&gt;rubys@intertwingly.net&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rvagg"&gt;rvagg&lt;/a&gt; -
&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rod@vagg.org"&gt;rod@vagg.org&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryzokuken"&gt;ryzokuken&lt;/a&gt; -
&lt;strong&gt;Ujjwal Sharma&lt;/strong&gt; &amp;lt;&lt;a href="mailto:usharma1998@gmail.com"&gt;usharma1998@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saghul"&gt;saghul&lt;/a&gt; -
&lt;strong&gt;Saúl Ibarra Corretgé&lt;/strong&gt; &amp;lt;&lt;a href="mailto:saghul@gmail.com"&gt;saghul@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sam-github"&gt;sam-github&lt;/a&gt; -
&lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vieuxtech@gmail.com"&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/santigimeno"&gt;santigimeno&lt;/a&gt; -
&lt;strong&gt;Santiago Gimeno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:santiago.gimeno@gmail.com"&gt;santiago.gimeno@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sebdeckers"&gt;sebdeckers&lt;/a&gt; -
&lt;strong&gt;Sebastiaan Deckers&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sebdeckers83@gmail.com"&gt;sebdeckers83@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seishun"&gt;seishun&lt;/a&gt; -
&lt;strong&gt;Nikolai Vavilov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vvnicholas@gmail.com"&gt;vvnicholas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shigeki"&gt;shigeki&lt;/a&gt; -
&lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ohtsu@ohtsu.org"&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shisama"&gt;shisama&lt;/a&gt; -
&lt;strong&gt;Masashi Hirano&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shisama07@gmail.com"&gt;shisama07@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/silverwind"&gt;silverwind&lt;/a&gt; -
&lt;strong&gt;Roman Reiss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@silverwind.io"&gt;me@silverwind.io&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/srl295"&gt;srl295&lt;/a&gt; -
&lt;strong&gt;Steven R Loomis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:srloomis@us.ibm.com"&gt;srloomis@us.ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/starkwang"&gt;starkwang&lt;/a&gt; -
&lt;strong&gt;Weijia Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:starkwang@126.com"&gt;starkwang@126.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/targos"&gt;targos&lt;/a&gt; -
&lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thefourtheye"&gt;thefourtheye&lt;/a&gt; -
&lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thechargingvolcano@gmail.com"&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thekemkid"&gt;thekemkid&lt;/a&gt; -
&lt;strong&gt;Glen Keane&lt;/strong&gt; &amp;lt;&lt;a href="mailto:glenkeane.94@gmail.com"&gt;glenkeane.94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimothyGu"&gt;TimothyGu&lt;/a&gt; -
&lt;strong&gt;Tiancheng "Timothy" Gu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:timothygu99@gmail.com"&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tniessen"&gt;tniessen&lt;/a&gt; -
&lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tniessen@tnie.de"&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trevnorris"&gt;trevnorris&lt;/a&gt; -
&lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trev.norris@gmail.com"&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trivikr"&gt;trivikr&lt;/a&gt; -
&lt;strong&gt;Trivikram Kamat&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trivikr.dev@gmail.com"&gt;trivikr.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Trott"&gt;Trott&lt;/a&gt; -
&lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rtrott@gmail.com"&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vdeturckheim"&gt;vdeturckheim&lt;/a&gt; -
&lt;strong&gt;Vladimir de Turckheim&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vlad2t@hotmail.com"&gt;vlad2t@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vkurchatkin"&gt;vkurchatkin&lt;/a&gt; -
&lt;strong&gt;Vladimir Kurchatkin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vladimir.kurchatkin@gmail.com"&gt;vladimir.kurchatkin@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/watilde"&gt;watilde&lt;/a&gt; -
&lt;strong&gt;Daijiro Wachi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daijiro.wachi@gmail.com"&gt;daijiro.wachi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/watson"&gt;watson&lt;/a&gt; -
&lt;strong&gt;Thomas Watson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:w@tson.dk"&gt;w@tson.dk&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/XadillaX"&gt;XadillaX&lt;/a&gt; -
&lt;strong&gt;Khaidi Chu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@2333.moe"&gt;i@2333.moe&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yhwang"&gt;yhwang&lt;/a&gt; -
&lt;strong&gt;Yihong Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yh.wang@ibm.com"&gt;yh.wang@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yorkie"&gt;yorkie&lt;/a&gt; -
&lt;strong&gt;Yorkie Liu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yorkiefixer@gmail.com"&gt;yorkiefixer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yosuke-furukawa"&gt;yosuke-furukawa&lt;/a&gt; -
&lt;strong&gt;Yosuke Furukawa&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yosuke.furukawa@gmail.com"&gt;yosuke.furukawa@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZYSzys"&gt;ZYSzys&lt;/a&gt; -
&lt;strong&gt;Yongsheng Zhang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:zyszys98@gmail.com"&gt;zyszys98@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-collaborator-emeriti" class="anchor" aria-hidden="true" href="#collaborator-emeriti"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collaborator Emeriti&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/andrasq"&gt;andrasq&lt;/a&gt; -
&lt;strong&gt;Andras&lt;/strong&gt; &amp;lt;&lt;a href="mailto:andras@kinvey.com"&gt;andras@kinvey.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnnaMag"&gt;AnnaMag&lt;/a&gt; -
&lt;strong&gt;Anna M. Kedzierska&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna.m.kedzierska@gmail.com"&gt;anna.m.kedzierska@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brendanashworth"&gt;brendanashworth&lt;/a&gt; -
&lt;strong&gt;Brendan Ashworth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:brendan.ashworth@me.com"&gt;brendan.ashworth@me.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/estliberitas"&gt;estliberitas&lt;/a&gt; -
&lt;strong&gt;Alexander Makarenko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:estliberitas@gmail.com"&gt;estliberitas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrisdickinson"&gt;chrisdickinson&lt;/a&gt; -
&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DavidCai1993"&gt;DavidCai1993&lt;/a&gt; -
&lt;strong&gt;David Cai&lt;/strong&gt; &amp;lt;&lt;a href="mailto:davidcai1993@yahoo.com"&gt;davidcai1993@yahoo.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/firedfox"&gt;firedfox&lt;/a&gt; -
&lt;strong&gt;Daniel Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wangyang0123@gmail.com"&gt;wangyang0123@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imran-iq"&gt;imran-iq&lt;/a&gt; -
&lt;strong&gt;Imran Iqbal&lt;/strong&gt; &amp;lt;&lt;a href="mailto:imran@imraniqbal.org"&gt;imran@imraniqbal.org&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imyller"&gt;imyller&lt;/a&gt; -
&lt;strong&gt;Ilkka Myller&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ilkka.myller@nodefield.com"&gt;ilkka.myller@nodefield.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isaacs"&gt;isaacs&lt;/a&gt; -
&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jasongin"&gt;jasongin&lt;/a&gt; -
&lt;strong&gt;Jason Ginchereau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasongin@microsoft.com"&gt;jasongin@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jhamhader"&gt;jhamhader&lt;/a&gt; -
&lt;strong&gt;Yuval Brik&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yuval@brik.org.il"&gt;yuval@brik.org.il&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joshgav"&gt;joshgav&lt;/a&gt; -
&lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href="mailto:josh.gavant@outlook.com"&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kunalspathak"&gt;kunalspathak&lt;/a&gt; -
&lt;strong&gt;Kunal Pathak&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kunal.pathak@microsoft.com"&gt;kunal.pathak@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lucamaraschi"&gt;lucamaraschi&lt;/a&gt; -
&lt;strong&gt;Luca Maraschi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luca.maraschi@gmail.com"&gt;luca.maraschi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lxe"&gt;lxe&lt;/a&gt; -
&lt;strong&gt;Aleksey Smolenchuk&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lxe@lxe.co"&gt;lxe@lxe.co&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewloring"&gt;matthewloring&lt;/a&gt; -
&lt;strong&gt;Matthew Loring&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mattloring@google.com"&gt;mattloring@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/micnic"&gt;micnic&lt;/a&gt; -
&lt;strong&gt;Nicu Micleușanu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:micnic90@gmail.com"&gt;micnic90@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mikeal"&gt;mikeal&lt;/a&gt; -
&lt;strong&gt;Mikeal Rogers&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mikeal.rogers@gmail.com"&gt;mikeal.rogers@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monsanto"&gt;monsanto&lt;/a&gt; -
&lt;strong&gt;Christopher Monsanto&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chris@monsan.to"&gt;chris@monsan.to&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olegas"&gt;Olegas&lt;/a&gt; -
&lt;strong&gt;Oleg Elifantiev&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oleg@elifantiev.ru"&gt;oleg@elifantiev.ru&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orangemocha"&gt;orangemocha&lt;/a&gt; -
&lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href="mailto:orangemocha@nodejs.org"&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/othiym23"&gt;othiym23&lt;/a&gt; -
&lt;strong&gt;Forrest L Norvell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ogd@aoaioxxysz.net"&gt;ogd@aoaioxxysz.net&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/petkaantonov"&gt;petkaantonov&lt;/a&gt; -
&lt;strong&gt;Petka Antonov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:petka_antonov@hotmail.com"&gt;petka_antonov@hotmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phillipj"&gt;phillipj&lt;/a&gt; -
&lt;strong&gt;Phillip Johnsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:johphi@gmail.com"&gt;johphi@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piscisaureus"&gt;piscisaureus&lt;/a&gt; -
&lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bertbelder@gmail.com"&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmq20"&gt;pmq20&lt;/a&gt; -
&lt;strong&gt;Minqi Pan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pmq2001@gmail.com"&gt;pmq2001@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rlidwka"&gt;rlidwka&lt;/a&gt; -
&lt;strong&gt;Alex Kocharin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:alex@kocharin.ru"&gt;alex@kocharin.ru&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rmg"&gt;rmg&lt;/a&gt; -
&lt;strong&gt;Ryan Graham&lt;/strong&gt; &amp;lt;&lt;a href="mailto:r.m.graham@gmail.com"&gt;r.m.graham@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robertkowalski"&gt;robertkowalski&lt;/a&gt; -
&lt;strong&gt;Robert Kowalski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rok@kowalski.gd"&gt;rok@kowalski.gd&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/romankl"&gt;romankl&lt;/a&gt; -
&lt;strong&gt;Roman Klauke&lt;/strong&gt; &amp;lt;&lt;a href="mailto:romaaan.git@gmail.com"&gt;romaaan.git@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RReverser"&gt;RReverser&lt;/a&gt; -
&lt;strong&gt;Ingvar Stepanyan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@rreverser.com"&gt;me@rreverser.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stefanmb"&gt;stefanmb&lt;/a&gt; -
&lt;strong&gt;Stefan Budeanu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:stefan@budeanu.com"&gt;stefan@budeanu.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tellnes"&gt;tellnes&lt;/a&gt; -
&lt;strong&gt;Christian Tellnes&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christian@tellnes.no"&gt;christian@tellnes.no&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thlorenz"&gt;thlorenz&lt;/a&gt; -
&lt;strong&gt;Thorsten Lorenz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thlorenz@gmx.de"&gt;thlorenz@gmx.de&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tunniclm"&gt;tunniclm&lt;/a&gt; -
&lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt; &amp;lt;&lt;a href="mailto:m.j.tunnicliffe@gmail.com"&gt;m.j.tunnicliffe@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vsemozhetbyt"&gt;vsemozhetbyt&lt;/a&gt; -
&lt;strong&gt;Vse Mozhet Byt&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vsemozhetbyt@gmail.com"&gt;vsemozhetbyt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whitlockjc"&gt;whitlockjc&lt;/a&gt; -
&lt;strong&gt;Jeremy Whitlock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jwhitlock@apache.org"&gt;jwhitlock@apache.org&lt;/a&gt;&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Collaborators follow the &lt;a href="./COLLABORATOR_GUIDE.md"&gt;COLLABORATOR_GUIDE.md&lt;/a&gt; in
maintaining the Node.js project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-release-keys" class="anchor" aria-hidden="true" href="#release-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Keys&lt;/h3&gt;
&lt;p&gt;GPG keys used to sign Node.js releases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethany.griggs@uk.ibm.com"&gt;bethany.griggs@uk.ibm.com&lt;/a&gt;&amp;gt;
&lt;code&gt;4ED778F539E3634C779C87C6D7062848A1AB005C&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt;
&lt;code&gt;94AE36675C464D64BAFA68DD7434390BDBE9B9C5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt;
&lt;code&gt;B9AE9905FFD7803F25714661B63B535A4C206CA9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt;
&lt;code&gt;77984A986EBC2AA786BC0F66B01FBB92821C587A&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@keybase.io"&gt;jasnell@keybase.io&lt;/a&gt;&amp;gt;
&lt;code&gt;71DCFD284A79C3B38668286BC97EC7A07EDE3FC1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock@keybase.io"&gt;fishrock@keybase.io&lt;/a&gt;&amp;gt;
&lt;code&gt;FD3A5288F042B6850C66B31F09FE44734EB7990E&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt;
&lt;code&gt;8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt;
&lt;code&gt;C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rod@vagg.org"&gt;rod@vagg.org&lt;/a&gt;&amp;gt;
&lt;code&gt;DD8F2338BAE7501E3DD5AC78C273792F7D83545D&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt;
&lt;code&gt;A48C2BEE680E841632CD4E44F07496B3EB3C1762&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt;
&lt;code&gt;B9E2F5981AA6E0CD28160D9FF13993A75599653C&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To import the full set of trusted release keys:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C
gpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C
gpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5
gpg --keyserver pool.sks-keyservers.net --recv-keys B9AE9905FFD7803F25714661B63B535A4C206CA9
gpg --keyserver pool.sks-keyservers.net --recv-keys 77984A986EBC2AA786BC0F66B01FBB92821C587A
gpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
gpg --keyserver pool.sks-keyservers.net --recv-keys FD3A5288F042B6850C66B31F09FE44734EB7990E
gpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600
gpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
gpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the section above on &lt;a href="#verifying-binaries"&gt;Verifying Binaries&lt;/a&gt; for how to
use these keys to verify a downloaded file.&lt;/p&gt;
&lt;p&gt;Other keys used to sign some previous releases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;
&lt;code&gt;9554F04D7259F04124DE6B476D5A82AC7E37093B&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;
&lt;code&gt;93C7E9E91B49E432C2F75674B0A78B0A6C481CF6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@italoacasas.com"&gt;me@italoacasas.com&lt;/a&gt;&amp;gt;
&lt;code&gt;56730D5401028683275BD23C23EFEFE93C4CFFFE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jgilli@fastmail.fm"&gt;jgilli@fastmail.fm&lt;/a&gt;&amp;gt;
&lt;code&gt;114F43EE0176B71C7BC219DD50A3051F888C628D&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Timothy J Fontaine&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tjfontaine@gmail.com"&gt;tjfontaine@gmail.com&lt;/a&gt;&amp;gt;
&lt;code&gt;7937DFD2AB06298B2293C3187D33FF9D0246406D&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nodejs</author><guid isPermaLink="false">https://github.com/nodejs/node</guid><pubDate>Sun, 01 Dec 2019 00:13:00 GMT</pubDate></item><item><title>ethereum/go-ethereum #14 in All Languages, This month</title><link>https://github.com/ethereum/go-ethereum</link><description>&lt;p&gt;&lt;i&gt;Official Go implementation of the Ethereum protocol&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-go-ethereum" class="anchor" aria-hidden="true" href="#go-ethereum"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Go Ethereum&lt;/h2&gt;
&lt;p&gt;Official Golang implementation of the Ethereum protocol.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://godoc.org/github.com/ethereum/go-ethereum" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/915b7be44ada53c290eb157634330494ebe3e30a/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f676f6c616e672f6764646f3f7374617475732e737667" alt="API Reference" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/ethereum/go-ethereum" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b11691cdf9f735c891eabdcc37bca114a8afcf3/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f657468657265756d2f676f2d657468657265756d" alt="Go Report Card" data-canonical-src="https://goreportcard.com/badge/github.com/ethereum/go-ethereum" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/ethereum/go-ethereum" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca3a7b089219eecc4f9d3df9d0fc2c41023f998d/68747470733a2f2f7472617669732d63692e6f72672f657468657265756d2f676f2d657468657265756d2e7376673f6272616e63683d6d6173746572" alt="Travis" data-canonical-src="https://travis-ci.org/ethereum/go-ethereum.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/nthXNEv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f37d9f6110065809fc119e23ad454a3e2e40d444/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646973636f72642d6a6f696e253230636861742d626c75652e737667" alt="Discord" data-canonical-src="https://img.shields.io/badge/discord-join%20chat-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Automated builds are available for stable releases and the unstable master branch. Binary
archives are published at &lt;a href="https://geth.ethereum.org/downloads/" rel="nofollow"&gt;https://geth.ethereum.org/downloads/&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-source" class="anchor" aria-hidden="true" href="#building-the-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the source&lt;/h2&gt;
&lt;p&gt;For prerequisites and detailed build instructions please read the &lt;a href="https://github.com/ethereum/go-ethereum/wiki/Building-Ethereum"&gt;Installation Instructions&lt;/a&gt; on the wiki.&lt;/p&gt;
&lt;p&gt;Building &lt;code&gt;geth&lt;/code&gt; requires both a Go (version 1.10 or later) and a C compiler. You can install
them using your favourite package manager. Once the dependencies are installed, run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make geth&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or, to build the full suite of utilities:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make all&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-executables" class="anchor" aria-hidden="true" href="#executables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Executables&lt;/h2&gt;
&lt;p&gt;The go-ethereum project comes with several wrappers/executables found in the &lt;code&gt;cmd&lt;/code&gt;
directory.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;&lt;code&gt;geth&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Our main Ethereum CLI client. It is the entry point into the Ethereum network (main-, test- or private net), capable of running as a full node (default), archive node (retaining all historical state) or a light node (retrieving data live). It can be used by other processes as a gateway into the Ethereum network via JSON RPC endpoints exposed on top of HTTP, WebSocket and/or IPC transports. &lt;code&gt;geth --help&lt;/code&gt; and the &lt;a href="https://github.com/ethereum/go-ethereum/wiki/Command-Line-Options"&gt;CLI Wiki page&lt;/a&gt; for command line options.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;abigen&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Source code generator to convert Ethereum contract definitions into easy to use, compile-time type-safe Go packages. It operates on plain &lt;a href="https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI"&gt;Ethereum contract ABIs&lt;/a&gt; with expanded functionality if the contract bytecode is also available. However, it also accepts Solidity source files, making development much more streamlined. Please see our &lt;a href="https://github.com/ethereum/go-ethereum/wiki/Native-DApps:-Go-bindings-to-Ethereum-contracts"&gt;Native DApps&lt;/a&gt; wiki page for details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;bootnode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Stripped down version of our Ethereum client implementation that only takes part in the network node discovery protocol, but does not run any of the higher level application protocols. It can be used as a lightweight bootstrap node to aid in finding peers in private networks.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;evm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Developer utility version of the EVM (Ethereum Virtual Machine) that is capable of running bytecode snippets within a configurable environment and execution mode. Its purpose is to allow isolated, fine-grained debugging of EVM opcodes (e.g. &lt;code&gt;evm --code 60ff60ff --debug&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;gethrpctest&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Developer utility tool to support our &lt;a href="https://github.com/ethereum/rpc-tests"&gt;ethereum/rpc-test&lt;/a&gt; test suite which validates baseline conformity to the &lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC"&gt;Ethereum JSON RPC&lt;/a&gt; specs. Please see the &lt;a href="https://github.com/ethereum/rpc-tests/blob/master/README.md"&gt;test suite's readme&lt;/a&gt; for details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;rlpdump&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Developer utility tool to convert binary RLP (&lt;a href="https://github.com/ethereum/wiki/wiki/RLP"&gt;Recursive Length Prefix&lt;/a&gt;) dumps (data encoding used by the Ethereum protocol both network as well as consensus wise) to user-friendlier hierarchical representation (e.g. &lt;code&gt;rlpdump --hex CE0183FFFFFFC4C304050583616263&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;puppeth&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;a CLI wizard that aids in creating a new Ethereum network.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-running-geth" class="anchor" aria-hidden="true" href="#running-geth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running &lt;code&gt;geth&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Going through all the possible command line flags is out of scope here (please consult our
&lt;a href="https://github.com/ethereum/go-ethereum/wiki/Command-Line-Options"&gt;CLI Wiki page&lt;/a&gt;),
but we've enumerated a few common parameter combos to get you up to speed quickly
on how you can run your own &lt;code&gt;geth&lt;/code&gt; instance.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-full-node-on-the-main-ethereum-network" class="anchor" aria-hidden="true" href="#full-node-on-the-main-ethereum-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full node on the main Ethereum network&lt;/h3&gt;
&lt;p&gt;By far the most common scenario is people wanting to simply interact with the Ethereum
network: create accounts; transfer funds; deploy and interact with contracts. For this
particular use-case the user doesn't care about years-old historical data, so we can
fast-sync quickly to the current state of the network. To do so:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ geth console&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start &lt;code&gt;geth&lt;/code&gt; in fast sync mode (default, can be changed with the &lt;code&gt;--syncmode&lt;/code&gt; flag),
causing it to download more data in exchange for avoiding processing the entire history
of the Ethereum network, which is very CPU intensive.&lt;/li&gt;
&lt;li&gt;Start up &lt;code&gt;geth&lt;/code&gt;'s built-in interactive &lt;a href="https://github.com/ethereum/go-ethereum/wiki/JavaScript-Console"&gt;JavaScript console&lt;/a&gt;,
(via the trailing &lt;code&gt;console&lt;/code&gt; subcommand) through which you can invoke all official &lt;a href="https://github.com/ethereum/wiki/wiki/JavaScript-API"&gt;&lt;code&gt;web3&lt;/code&gt; methods&lt;/a&gt;
as well as &lt;code&gt;geth&lt;/code&gt;'s own &lt;a href="https://github.com/ethereum/go-ethereum/wiki/Management-APIs"&gt;management APIs&lt;/a&gt;.
This tool is optional and if you leave it out you can always attach to an already running
&lt;code&gt;geth&lt;/code&gt; instance with &lt;code&gt;geth attach&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-a-full-node-on-the-ethereum-test-network" class="anchor" aria-hidden="true" href="#a-full-node-on-the-ethereum-test-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Full node on the Ethereum test network&lt;/h3&gt;
&lt;p&gt;Transitioning towards developers, if you'd like to play around with creating Ethereum
contracts, you almost certainly would like to do that without any real money involved until
you get the hang of the entire system. In other words, instead of attaching to the main
network, you want to join the &lt;strong&gt;test&lt;/strong&gt; network with your node, which is fully equivalent to
the main network, but with play-Ether only.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ geth --testnet console&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;console&lt;/code&gt; subcommand has the exact same meaning as above and they are equally
useful on the testnet too. Please see above for their explanations if you've skipped here.&lt;/p&gt;
&lt;p&gt;Specifying the &lt;code&gt;--testnet&lt;/code&gt; flag, however, will reconfigure your &lt;code&gt;geth&lt;/code&gt; instance a bit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Instead of using the default data directory (&lt;code&gt;~/.ethereum&lt;/code&gt; on Linux for example), &lt;code&gt;geth&lt;/code&gt;
will nest itself one level deeper into a &lt;code&gt;testnet&lt;/code&gt; subfolder (&lt;code&gt;~/.ethereum/testnet&lt;/code&gt; on
Linux). Note, on OSX and Linux this also means that attaching to a running testnet node
requires the use of a custom endpoint since &lt;code&gt;geth attach&lt;/code&gt; will try to attach to a
production node endpoint by default. E.g.
&lt;code&gt;geth attach &amp;lt;datadir&amp;gt;/testnet/geth.ipc&lt;/code&gt;. Windows users are not affected by
this.&lt;/li&gt;
&lt;li&gt;Instead of connecting the main Ethereum network, the client will connect to the test
network, which uses different P2P bootnodes, different network IDs and genesis states.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Note: Although there are some internal protective measures to prevent transactions from
crossing over between the main network and test network, you should make sure to always
use separate accounts for play-money and real-money. Unless you manually move
accounts, &lt;code&gt;geth&lt;/code&gt; will by default correctly separate the two networks and will not make any
accounts available between them.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-full-node-on-the-rinkeby-test-network" class="anchor" aria-hidden="true" href="#full-node-on-the-rinkeby-test-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full node on the Rinkeby test network&lt;/h3&gt;
&lt;p&gt;The above test network is a cross-client one based on the ethash proof-of-work consensus
algorithm. As such, it has certain extra overhead and is more susceptible to reorganization
attacks due to the network's low difficulty/security. Go Ethereum also supports connecting
to a proof-of-authority based test network called &lt;a href="https://www.rinkeby.io" rel="nofollow"&gt;&lt;em&gt;Rinkeby&lt;/em&gt;&lt;/a&gt;
(operated by members of the community). This network is lighter, more secure, but is only
supported by go-ethereum.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ geth --rinkeby console&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h3&gt;
&lt;p&gt;As an alternative to passing the numerous flags to the &lt;code&gt;geth&lt;/code&gt; binary, you can also pass a
configuration file via:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ geth --config /path/to/your_config.toml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To get an idea how the file should look like you can use the &lt;code&gt;dumpconfig&lt;/code&gt; subcommand to
export your existing configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ geth --your-favourite-flags dumpconfig&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note: This works only with &lt;code&gt;geth&lt;/code&gt; v1.6.0 and above.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-docker-quick-start" class="anchor" aria-hidden="true" href="#docker-quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker quick start&lt;/h4&gt;
&lt;p&gt;One of the quickest ways to get Ethereum up and running on your machine is by using
Docker:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -d --name ethereum-node -v /Users/alice/ethereum:/root \
           -p 8545:8545 -p 30303:30303 \
           ethereum/client-go&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will start &lt;code&gt;geth&lt;/code&gt; in fast-sync mode with a DB memory allowance of 1GB just as the
above command does.  It will also create a persistent volume in your home directory for
saving your blockchain as well as map the default ports. There is also an &lt;code&gt;alpine&lt;/code&gt; tag
available for a slim version of the image.&lt;/p&gt;
&lt;p&gt;Do not forget &lt;code&gt;--rpcaddr 0.0.0.0&lt;/code&gt;, if you want to access RPC from other containers
and/or hosts. By default, &lt;code&gt;geth&lt;/code&gt; binds to the local interface and RPC endpoints is not
accessible from the outside.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-programmatically-interfacing-geth-nodes" class="anchor" aria-hidden="true" href="#programmatically-interfacing-geth-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Programmatically interfacing &lt;code&gt;geth&lt;/code&gt; nodes&lt;/h3&gt;
&lt;p&gt;As a developer, sooner rather than later you'll want to start interacting with &lt;code&gt;geth&lt;/code&gt; and the
Ethereum network via your own programs and not manually through the console. To aid
this, &lt;code&gt;geth&lt;/code&gt; has built-in support for a JSON-RPC based APIs (&lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC"&gt;standard APIs&lt;/a&gt;
and &lt;a href="https://github.com/ethereum/go-ethereum/wiki/Management-APIs"&gt;&lt;code&gt;geth&lt;/code&gt; specific APIs&lt;/a&gt;).
These can be exposed via HTTP, WebSockets and IPC (UNIX sockets on UNIX based
platforms, and named pipes on Windows).&lt;/p&gt;
&lt;p&gt;The IPC interface is enabled by default and exposes all the APIs supported by &lt;code&gt;geth&lt;/code&gt;,
whereas the HTTP and WS interfaces need to manually be enabled and only expose a
subset of APIs due to security reasons. These can be turned on/off and configured as
you'd expect.&lt;/p&gt;
&lt;p&gt;HTTP based JSON-RPC API options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--rpc&lt;/code&gt; Enable the HTTP-RPC server&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--rpcaddr&lt;/code&gt; HTTP-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--rpcport&lt;/code&gt; HTTP-RPC server listening port (default: &lt;code&gt;8545&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--rpcapi&lt;/code&gt; API's offered over the HTTP-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--rpccorsdomain&lt;/code&gt; Comma separated list of domains from which to accept cross origin requests (browser enforced)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--ws&lt;/code&gt; Enable the WS-RPC server&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--wsaddr&lt;/code&gt; WS-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--wsport&lt;/code&gt; WS-RPC server listening port (default: &lt;code&gt;8546&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--wsapi&lt;/code&gt; API's offered over the WS-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--wsorigins&lt;/code&gt; Origins from which to accept websockets requests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--ipcdisable&lt;/code&gt; Disable the IPC-RPC server&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--ipcapi&lt;/code&gt; API's offered over the IPC-RPC interface (default: &lt;code&gt;admin,debug,eth,miner,net,personal,shh,txpool,web3&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--ipcpath&lt;/code&gt; Filename for IPC socket/pipe within the datadir (explicit paths escape it)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You'll need to use your own programming environments' capabilities (libraries, tools, etc) to
connect via HTTP, WS or IPC to a &lt;code&gt;geth&lt;/code&gt; node configured with the above flags and you'll
need to speak &lt;a href="https://www.jsonrpc.org/specification" rel="nofollow"&gt;JSON-RPC&lt;/a&gt; on all transports. You
can reuse the same connection for multiple requests!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: Please understand the security implications of opening up an HTTP/WS based
transport before doing so! Hackers on the internet are actively trying to subvert
Ethereum nodes with exposed APIs! Further, all browser tabs can access locally
running web servers, so malicious web pages could try to subvert locally available
APIs!&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-operating-a-private-network" class="anchor" aria-hidden="true" href="#operating-a-private-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operating a private network&lt;/h3&gt;
&lt;p&gt;Maintaining your own private network is more involved as a lot of configurations taken for
granted in the official networks need to be manually set up.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-defining-the-private-genesis-state" class="anchor" aria-hidden="true" href="#defining-the-private-genesis-state"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining the private genesis state&lt;/h4&gt;
&lt;p&gt;First, you'll need to create the genesis state of your networks, which all nodes need to be
aware of and agree upon. This consists of a small JSON file (e.g. call it &lt;code&gt;genesis.json&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;config&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chainId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-ii"&gt;&amp;lt;arbitrary&lt;/span&gt; &lt;span class="pl-ii"&gt;positive&lt;/span&gt; &lt;span class="pl-ii"&gt;integer&amp;gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;homesteadBlock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;eip150Block&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;eip155Block&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;eip158Block&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;byzantiumBlock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;constantinopleBlock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;petersburgBlock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;
  },
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alloc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {},
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;coinbase&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x0000000000000000000000000000000000000000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;difficulty&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x20000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;extraData&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gasLimit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x2fefd8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nonce&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x0000000000000042&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mixhash&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x0000000000000000000000000000000000000000000000000000000000000000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;parentHash&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x0000000000000000000000000000000000000000000000000000000000000000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;timestamp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above fields should be fine for most purposes, although we'd recommend changing
the &lt;code&gt;nonce&lt;/code&gt; to some random value so you prevent unknown remote nodes from being able
to connect to you. If you'd like to pre-fund some accounts for easier testing, create
the accounts and populate the &lt;code&gt;alloc&lt;/code&gt; field with their addresses.&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alloc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x0000000000000000000000000000000000000001&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;balance&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;111111111&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  },
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x0000000000000000000000000000000000000002&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;balance&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;222222222&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the genesis state defined in the above JSON file, you'll need to initialize &lt;strong&gt;every&lt;/strong&gt;
&lt;code&gt;geth&lt;/code&gt; node with it prior to starting it up to ensure all blockchain parameters are correctly
set:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ geth init path/to/genesis.json&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-creating-the-rendezvous-point" class="anchor" aria-hidden="true" href="#creating-the-rendezvous-point"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating the rendezvous point&lt;/h4&gt;
&lt;p&gt;With all nodes that you want to run initialized to the desired genesis state, you'll need to
start a bootstrap node that others can use to find each other in your network and/or over
the internet. The clean way is to configure and run a dedicated bootnode:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ bootnode --genkey=boot.key
$ bootnode --nodekey=boot.key&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the bootnode online, it will display an &lt;a href="https://github.com/ethereum/wiki/wiki/enode-url-format"&gt;&lt;code&gt;enode&lt;/code&gt; URL&lt;/a&gt;
that other nodes can use to connect to it and exchange peer information. Make sure to
replace the displayed IP address information (most probably &lt;code&gt;[::]&lt;/code&gt;) with your externally
accessible IP to get the actual &lt;code&gt;enode&lt;/code&gt; URL.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: You could also use a full-fledged &lt;code&gt;geth&lt;/code&gt; node as a bootnode, but it's the less
recommended way.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-starting-up-your-member-nodes" class="anchor" aria-hidden="true" href="#starting-up-your-member-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting up your member nodes&lt;/h4&gt;
&lt;p&gt;With the bootnode operational and externally reachable (you can try
&lt;code&gt;telnet &amp;lt;ip&amp;gt; &amp;lt;port&amp;gt;&lt;/code&gt; to ensure it's indeed reachable), start every subsequent &lt;code&gt;geth&lt;/code&gt;
node pointed to the bootnode for peer discovery via the &lt;code&gt;--bootnodes&lt;/code&gt; flag. It will
probably also be desirable to keep the data directory of your private network separated, so
do also specify a custom &lt;code&gt;--datadir&lt;/code&gt; flag.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ geth --datadir=path/to/custom/data/folder --bootnodes=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;bootnode-enode-url-from-above&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note: Since your network will be completely cut off from the main and test networks, you'll
also need to configure a miner to process transactions and create new blocks for you.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-running-a-private-miner" class="anchor" aria-hidden="true" href="#running-a-private-miner"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running a private miner&lt;/h4&gt;
&lt;p&gt;Mining on the public Ethereum network is a complex task as it's only feasible using GPUs,
requiring an OpenCL or CUDA enabled &lt;code&gt;ethminer&lt;/code&gt; instance. For information on such a
setup, please consult the &lt;a href="https://www.reddit.com/r/EtherMining/" rel="nofollow"&gt;EtherMining subreddit&lt;/a&gt;
and the &lt;a href="https://github.com/Genoil/cpp-ethereum"&gt;Genoil miner&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;In a private network setting, however a single CPU miner instance is more than enough for
practical purposes as it can produce a stable stream of blocks at the correct intervals
without needing heavy resources (consider running on a single thread, no need for multiple
ones either). To start a &lt;code&gt;geth&lt;/code&gt; instance for mining, run it with all your usual flags, extended
by:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ geth &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;usual-flags&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; --mine --miner.threads=1 --etherbase=0x0000000000000000000000000000000000000000&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which will start mining blocks and transactions on a single CPU thread, crediting all
proceedings to the account specified by &lt;code&gt;--etherbase&lt;/code&gt;. You can further tune the mining
by changing the default gas limit blocks converge to (&lt;code&gt;--targetgaslimit&lt;/code&gt;) and the price
transactions are accepted at (&lt;code&gt;--gasprice&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h2&gt;
&lt;p&gt;Thank you for considering to help out with the source code! We welcome contributions
from anyone on the internet, and are grateful for even the smallest of fixes!&lt;/p&gt;
&lt;p&gt;If you'd like to contribute to go-ethereum, please fork, fix, commit and send a pull request
for the maintainers to review and merge into the main code base. If you wish to submit
more complex changes though, please check up with the core devs first on &lt;a href="https://gitter.im/ethereum/go-ethereum" rel="nofollow"&gt;our gitter channel&lt;/a&gt;
to ensure those changes are in line with the general philosophy of the project and/or get
some early feedback which can make both your efforts much lighter as well as our review
and merge procedures quick and simple.&lt;/p&gt;
&lt;p&gt;Please make sure your contributions adhere to our coding guidelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Code must adhere to the official Go &lt;a href="https://golang.org/doc/effective_go.html#formatting" rel="nofollow"&gt;formatting&lt;/a&gt;
guidelines (i.e. uses &lt;a href="https://golang.org/cmd/gofmt/" rel="nofollow"&gt;gofmt&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Code must be documented adhering to the official Go &lt;a href="https://golang.org/doc/effective_go.html#commentary" rel="nofollow"&gt;commentary&lt;/a&gt;
guidelines.&lt;/li&gt;
&lt;li&gt;Pull requests need to be based on and opened against the &lt;code&gt;master&lt;/code&gt; branch.&lt;/li&gt;
&lt;li&gt;Commit messages should be prefixed with the package(s) they modify.
&lt;ul&gt;
&lt;li&gt;E.g. "eth, rpc: make trace configs optional"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/ethereum/go-ethereum/wiki/Developers'-Guide"&gt;Developers' Guide&lt;/a&gt;
for more details on configuring your environment, managing project dependencies, and
testing procedures.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The go-ethereum library (i.e. all code outside of the &lt;code&gt;cmd&lt;/code&gt; directory) is licensed under the
&lt;a href="https://www.gnu.org/licenses/lgpl-3.0.en.html" rel="nofollow"&gt;GNU Lesser General Public License v3.0&lt;/a&gt;,
also included in our repository in the &lt;code&gt;COPYING.LESSER&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;The go-ethereum binaries (i.e. all code inside of the &lt;code&gt;cmd&lt;/code&gt; directory) is licensed under the
&lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;GNU General Public License v3.0&lt;/a&gt;, also
included in our repository in the &lt;code&gt;COPYING&lt;/code&gt; file.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ethereum</author><guid isPermaLink="false">https://github.com/ethereum/go-ethereum</guid><pubDate>Sun, 01 Dec 2019 00:14:00 GMT</pubDate></item><item><title>fengdu78/lihang-code #15 in All Languages, This month</title><link>https://github.com/fengdu78/lihang-code</link><description>&lt;p&gt;&lt;i&gt;《统计学习方法》的代码实现&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;代码目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第1章 统计学习方法概论&lt;/p&gt;
&lt;p&gt;第2章 感知机&lt;/p&gt;
&lt;p&gt;第3章 k近邻法&lt;/p&gt;
&lt;p&gt;第4章 朴素贝叶斯&lt;/p&gt;
&lt;p&gt;第5章 决策树&lt;/p&gt;
&lt;p&gt;第6章 逻辑斯谛回归&lt;/p&gt;
&lt;p&gt;第7章 支持向量机&lt;/p&gt;
&lt;p&gt;第8章 提升方法&lt;/p&gt;
&lt;p&gt;第9章 EM算法及其推广&lt;/p&gt;
&lt;p&gt;第10章 隐马尔可夫模型&lt;/p&gt;
&lt;p&gt;第11章 条件随机场&lt;/p&gt;
&lt;p&gt;第12章 监督学习方法总结&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;参考：
&lt;a href="https://github.com/wzyonggege/statistical-learning-method"&gt;https://github.com/wzyonggege/statistical-learning-method&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/WenDesi/lihang_book_algorithm"&gt;https://github.com/WenDesi/lihang_book_algorithm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/tudaodiaozhale" rel="nofollow"&gt;https://blog.csdn.net/tudaodiaozhale&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;代码整理和修改：机器学习初学者&lt;/p&gt;
&lt;p&gt;微信公众号：机器学习初学者 &lt;a target="_blank" rel="noopener noreferrer" href="images/gongzhong.jpg"&gt;&lt;img src="images/gongzhong.jpg" alt="gongzhong" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;知识星球：黄博的机器学习圈子&lt;a target="_blank" rel="noopener noreferrer" href="images/zhishixingqiu1.jpg"&gt;&lt;img src="images/zhishixingqiu1.jpg" alt="xingqiu" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.zhihu.com/people/fengdu78" rel="nofollow"&gt;知乎&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fengdu78</author><guid isPermaLink="false">https://github.com/fengdu78/lihang-code</guid><pubDate>Sun, 01 Dec 2019 00:15:00 GMT</pubDate></item><item><title>swisskyrepo/PayloadsAllTheThings #16 in All Languages, This month</title><link>https://github.com/swisskyrepo/PayloadsAllTheThings</link><description>&lt;p&gt;&lt;i&gt;A list of useful payloads and bypass for Web Application Security and Pentest/CTF&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-payloads-all-the-things" class="anchor" aria-hidden="true" href="#payloads-all-the-things"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payloads All The Things&lt;/h1&gt;
&lt;p&gt;A list of useful payloads and bypasses for Web Application Security.
Feel free to improve with your payloads and techniques !
I &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; pull requests :)&lt;/p&gt;
&lt;p&gt;You can also contribute with a &lt;g-emoji class="g-emoji" alias="beers" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png"&gt;🍻&lt;/g-emoji&gt; IRL&lt;/p&gt;
&lt;p&gt;Every section contains the following files, you can use the &lt;code&gt;_template_vuln&lt;/code&gt; folder to create a new chapter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;README.md - vulnerability description and how to exploit it&lt;/li&gt;
&lt;li&gt;Intruder - a set of files to give to Burp Intruder&lt;/li&gt;
&lt;li&gt;Images - pictures for the README.md&lt;/li&gt;
&lt;li&gt;Files - some files referenced in the README.md&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You might also like the &lt;code&gt;Methodology and Resources&lt;/code&gt; folder :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/"&gt;Methodology and Resources&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md"&gt;Active Directory Attack.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Persistence.md"&gt;Linux - Persistence.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Privilege%20Escalation.md"&gt;Linux - Privilege Escalation.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Metasploit%20-%20Cheatsheet.md"&gt;Metasploit - Cheatsheet.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Methodology%20and%20enumeration.md"&gt;Methodology and enumeration.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Network%20Pivoting%20Techniques.md"&gt;Network Pivoting Techniques.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Network%20Discovery.md"&gt;Network Discovery.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md"&gt;Reverse Shell Cheatsheet.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Subdomains%20Enumeration.md"&gt;Subdomains Enumeration.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Download%20and%20Execute.md"&gt;Windows - Download and Execute.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Mimikatz.md"&gt;Windows - Mimikatz.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Persistence.md"&gt;Windows - Persistence.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Post%20Exploitation%20Koadic.md"&gt;Windows - Post Exploitation Koadic.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md"&gt;Windows - Privilege Escalation.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Using%20credentials.md"&gt;Windows - Using credentials.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/CVE%20Exploits"&gt;CVE Exploits&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apache Struts 2 CVE-2013-2251 CVE-2017-5638 CVE-2018-11776_.py&lt;/li&gt;
&lt;li&gt;Apache Struts 2 CVE-2017-9805.py&lt;/li&gt;
&lt;li&gt;Apache Struts 2 CVE-2018-11776.py&lt;/li&gt;
&lt;li&gt;Docker API RCE.py&lt;/li&gt;
&lt;li&gt;Drupalgeddon2 CVE-2018-7600.rb&lt;/li&gt;
&lt;li&gt;Heartbleed CVE-2014-0160.py&lt;/li&gt;
&lt;li&gt;JBoss CVE-2015-7501.py&lt;/li&gt;
&lt;li&gt;Jenkins CVE-2015-8103.py&lt;/li&gt;
&lt;li&gt;Jenkins CVE-2016-0792.py&lt;/li&gt;
&lt;li&gt;Rails CVE-2019-5420.rb&lt;/li&gt;
&lt;li&gt;Shellshock CVE-2014-6271.py&lt;/li&gt;
&lt;li&gt;Tomcat CVE-2017-12617.py&lt;/li&gt;
&lt;li&gt;WebLogic CVE-2016-3510.py&lt;/li&gt;
&lt;li&gt;WebLogic CVE-2017-10271.py&lt;/li&gt;
&lt;li&gt;WebLogic CVE-2018-2894.py&lt;/li&gt;
&lt;li&gt;WebSphere CVE-2015-7450.py&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You want more ? Check the &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/BOOKS.md"&gt;Books&lt;/a&gt; and &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/YOUTUBE.md"&gt;Youtube videos&lt;/a&gt; selections.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>swisskyrepo</author><guid isPermaLink="false">https://github.com/swisskyrepo/PayloadsAllTheThings</guid><pubDate>Sun, 01 Dec 2019 00:16:00 GMT</pubDate></item><item><title>angular/angular #17 in All Languages, This month</title><link>https://github.com/angular/angular</link><description>&lt;p&gt;&lt;i&gt;One framework. Mobile &amp; desktop.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://circleci.com/gh/angular/workflows/angular/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/164c4652324b3e28fc39a573fe786720d39f3b88/68747470733a2f2f636972636c6563692e636f6d2f67682f616e67756c61722f616e67756c61722f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/angular/angular/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.browserstack.com/automate/public-build/LzF3RzBVVGt6VWE2S0hHaC9uYllOZz09LS1BVjNTclBKV0x4eVRlcjA4QVY1M0N3PT0=--eb4ce8c8dc2c1c5b2b5352d473ee12a73ac20e06" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/100557e3a75a9c370c034674ace722915085b018/68747470733a2f2f7777772e62726f77736572737461636b2e636f6d2f6175746f6d6174652f62616467652e7376673f62616467655f6b65793d4c7a4633527a425656477436565745325330684861433975596c6c4f5a7a30394c533142566a4e54636c424b563078346556526c636a4134515659314d304e335054303d2d2d65623463653863386463326331633562326235333532643437336565313261373361633230653036" alt="BrowserStack Status" data-canonical-src="https://www.browserstack.com/automate/badge.svg?badge_key=LzF3RzBVVGt6VWE2S0hHaC9uYllOZz09LS1BVjNTclBKV0x4eVRlcjA4QVY1M0N3PT0=--eb4ce8c8dc2c1c5b2b5352d473ee12a73ac20e06" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/angular/angular?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/angular/angular" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/@angular/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cb4eb3c991f38eddc8092d7d9c8c5b5d8888a33/68747470733a2f2f62616467652e667572792e696f2f6a732f253430616e67756c6172253246636f72652e737667" alt="npm version" data-canonical-src="https://badge.fury.io/js/%40angular%2Fcore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-angular" class="anchor" aria-hidden="true" href="#angular"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Angular&lt;/h1&gt;
&lt;p&gt;Angular is a development platform for building mobile and desktop web applications using TypeScript/JavaScript and other languages.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://angular.io/start" rel="nofollow"&gt;Get started in 5 minutes&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/angular/angular/blob/master/CHANGELOG.md"&gt;Learn about the latest improvements&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-want-to-help" class="anchor" aria-hidden="true" href="#want-to-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to help?&lt;/h2&gt;
&lt;p&gt;Want to file a bug, contribute some code, or improve documentation? Excellent! Read up on our
guidelines for &lt;a href="https://github.com/angular/angular/blob/master/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; and then check out one of our issues in the &lt;a href="https://github.com/angular/angular/labels/hotlist%3A%20community-help"&gt;hotlist: community-help&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>angular</author><guid isPermaLink="false">https://github.com/angular/angular</guid><pubDate>Sun, 01 Dec 2019 00:17:00 GMT</pubDate></item><item><title>opencv/opencv #18 in All Languages, This month</title><link>https://github.com/opencv/opencv</link><description>&lt;p&gt;&lt;i&gt;Open Source Computer Vision Library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-opencv-open-source-computer-vision-library" class="anchor" aria-hidden="true" href="#opencv-open-source-computer-vision-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenCV: Open Source Computer Vision Library&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Homepage: &lt;a href="https://opencv.org" rel="nofollow"&gt;https://opencv.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Docs: &lt;a href="https://docs.opencv.org/master/" rel="nofollow"&gt;https://docs.opencv.org/master/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A forum: &lt;a href="http://answers.opencv.org" rel="nofollow"&gt;http://answers.opencv.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Issue tracking: &lt;a href="https://github.com/opencv/opencv/issues"&gt;https://github.com/opencv/opencv/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;Please read the &lt;a href="https://github.com/opencv/opencv/wiki/How_to_contribute"&gt;contribution guidelines&lt;/a&gt; before starting work on a pull request.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-summary-of-the-guidelines" class="anchor" aria-hidden="true" href="#summary-of-the-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary of the guidelines:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;One pull request per issue;&lt;/li&gt;
&lt;li&gt;Choose the right base branch;&lt;/li&gt;
&lt;li&gt;Include tests and documentation;&lt;/li&gt;
&lt;li&gt;Clean up "oops" commits before submitting;&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href="https://github.com/opencv/opencv/wiki/Coding_Style_Guide"&gt;coding style guide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>opencv</author><guid isPermaLink="false">https://github.com/opencv/opencv</guid><pubDate>Sun, 01 Dec 2019 00:18:00 GMT</pubDate></item><item><title>pingcap/tidb #19 in All Languages, This month</title><link>https://github.com/pingcap/tidb</link><description>&lt;p&gt;&lt;i&gt;TiDB is an open source distributed HTAP database compatible with the MySQL protocol &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/logo_with_text.png"&gt;&lt;img src="docs/logo_with_text.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pingcap/tidb/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/d8e370ccbebe1c7c70b7e33d033b3476dab84bee/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f70696e676361702f746964622e737667" alt="LICENSE" data-canonical-src="https://img.shields.io/github/license/pingcap/tidb.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://golang.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0f4b285c5516603a1c2a085dbfc67a6505155edb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c616e67756167652d476f2d626c75652e737667" alt="Language" data-canonical-src="https://img.shields.io/badge/Language-Go-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/pingcap/tidb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be40dac111142487f2a685cc380bcb3fdc78f8bc/68747470733a2f2f7472617669732d63692e6f72672f70696e676361702f746964622e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/pingcap/tidb.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/pingcap/tidb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/09a5b3830e11131c520a9a23b85417cbaff4dbd3/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f70696e676361702f74696462" alt="Go Report Card" data-canonical-src="https://goreportcard.com/badge/github.com/pingcap/tidb" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pingcap/tidb/releases"&gt;&lt;img src="https://camo.githubusercontent.com/242ab48f3fea102e3bd90f2e68541ff34a1d8f32/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f70696e676361702f746964622e7376673f6c6162656c3d72656c65617365" alt="GitHub release" data-canonical-src="https://img.shields.io/github/tag/pingcap/tidb.svg?label=release" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pingcap/tidb/releases"&gt;&lt;img src="https://camo.githubusercontent.com/5f944816046aae6e03ccfd2a28e52d32148d902d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f70696e676361702f746964622e737667" alt="GitHub release date" data-canonical-src="https://img.shields.io/github/release-date/pingcap/tidb.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/pingcap/tidb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5df07f8563af0698fb9bfc90e65a61eb9499ad5/68747470733a2f2f636972636c6563692e636f6d2f67682f70696e676361702f746964622e7376673f7374796c653d736869656c64" alt="CircleCI Status" data-canonical-src="https://circleci.com/gh/pingcap/tidb.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/pingcap/tidb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5abee79ff1e665c1a8f6c775bc18bc446906a5e2/68747470733a2f2f636f6465636f762e696f2f67682f70696e676361702f746964622f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage Status" data-canonical-src="https://codecov.io/gh/pingcap/tidb/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://godoc.org/github.com/pingcap/tidb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd3cd5d5f44237541b35fcfdcba2fd4466a60c12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476f646f632d7265666572656e63652d626c75652e737667" alt="GoDoc" data-canonical-src="https://img.shields.io/badge/Godoc-reference-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pingcap.com/tidbslack/" rel="nofollow"&gt;&lt;strong&gt;Slack Channel&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt;: &lt;a href="https://twitter.com/PingCAP" rel="nofollow"&gt;@PingCAP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/TiDB/" rel="nofollow"&gt;&lt;strong&gt;Reddit&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mailing list&lt;/strong&gt;: &lt;a href="https://groups.google.com/forum/#!forum/tidb-user" rel="nofollow"&gt;Google Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pingcap.com/blog/" rel="nofollow"&gt;&lt;strong&gt;Blog&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bit.ly/contact_us_via_github" rel="nofollow"&gt;&lt;strong&gt;For support, please contact PingCAP&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-tidb" class="anchor" aria-hidden="true" href="#what-is-tidb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is TiDB?&lt;/h2&gt;
&lt;p&gt;TiDB ("Ti" stands for Titanium) is an open-source NewSQL database that supports Hybrid Transactional and Analytical Processing (HTAP) workloads. It is MySQL compatible and features horizontal scalability, strong consistency, and high availability.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Horizontal Scalability&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TiDB expands both SQL processing and storage by simply adding new nodes. This makes infrastructure capacity planning both easier and more cost-effective than traditional relational databases which only scale vertically.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MySQL Compatible Syntax&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TiDB acts like it is a MySQL 5.7 server to your applications. You can continue to use all of the existing MySQL client libraries, and in many cases, you will not need to change a single line of code in your application. Because TiDB is built from scratch, not a MySQL fork, please check out the list of &lt;a href="https://pingcap.com/docs/v3.0/reference/mysql-compatibility/" rel="nofollow"&gt;known compatibility differences&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Distributed Transactions with Strong Consistency&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TiDB internally shards table into small range-based chunks that we refer to as "regions". Each region defaults to approximately 100MiB in size, and TiDB uses a Two-phase commit internally to ensure that regions are maintained in a transactionally consistent way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cloud Native&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TiDB is designed to work in the cloud -- public, private, or hybrid -- making deployment, provisioning, operations, and maintenance simple.&lt;/p&gt;
&lt;p&gt;The storage layer of TiDB, called TiKV, &lt;a href="https://www.cncf.io/blog/2018/08/28/cncf-to-host-tikv-in-the-sandbox/" rel="nofollow"&gt;became&lt;/a&gt; a &lt;a href="https://www.cncf.io/" rel="nofollow"&gt;Cloud Native Computing Foundation&lt;/a&gt; member project in 2018. The architecture of the TiDB platform also allows SQL processing and storage to be scaled independently of each other in a very cloud-friendly manner.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Minimize ETL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TiDB is designed to support both transaction processing (OLTP) and analytical processing (OLAP) workloads. This means that while you may have traditionally transacted on MySQL and then Extracted, Transformed and Loaded (ETL) data into a column store for analytical processing, this step is no longer required.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;High Availability&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TiDB uses the Raft consensus algorithm to ensure that data is highly available and safely replicated throughout storage in Raft groups. In the event of failure, a Raft group will automatically elect a new leader for the failed member, and self-heal the TiDB cluster without any required manual intervention. Failure and self-healing operations are also transparent to applications.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more details and latest updates, see &lt;a href="https://www.pingcap.com/blog/" rel="nofollow"&gt;official TiDB blog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-adopters" class="anchor" aria-hidden="true" href="#adopters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adopters&lt;/h2&gt;
&lt;p&gt;View the current list of in-production TiDB adopters &lt;a href="https://pingcap.com/docs/adopters/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://pingcap.com/docs/ROADMAP" rel="nofollow"&gt;Roadmap&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://pingcap.com/docs/QUICKSTART" rel="nofollow"&gt;Quick Start Guide&lt;/a&gt;, which includes deployment methods using Ansible, Docker, and Kubernetes.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/tidb" rel="nofollow"&gt;&lt;strong&gt;Stack Overflow&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://asktug.com" rel="nofollow"&gt;&lt;strong&gt;User Group (Chinese)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pingcap.com/docs" rel="nofollow"&gt;English&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pingcap.com/docs-cn" rel="nofollow"&gt;简体中文&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./docs/architecture.png"&gt;&lt;img src="./docs/architecture.png" alt="architecture" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are welcomed and greatly appreciated. See
&lt;a href="https://github.com/pingcap/community/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;
for details on submitting patches and the contribution workflow.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;TiDB is under the Apache 2.0 license. See the &lt;a href="./LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Thanks &lt;a href="https://github.com/cznic"&gt;cznic&lt;/a&gt; for providing some great open source tools.&lt;/li&gt;
&lt;li&gt;Thanks &lt;a href="https://github.com/syndtr/goleveldb"&gt;GolevelDB&lt;/a&gt;, &lt;a href="https://github.com/boltdb/bolt"&gt;BoltDB&lt;/a&gt;, and &lt;a href="https://github.com/facebook/rocksdb"&gt;RocksDB&lt;/a&gt; for their powerful storage engines.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pingcap</author><guid isPermaLink="false">https://github.com/pingcap/tidb</guid><pubDate>Sun, 01 Dec 2019 00:19:00 GMT</pubDate></item><item><title>alibaba/Sentinel #20 in All Languages, This month</title><link>https://github.com/alibaba/Sentinel</link><description>&lt;p&gt;&lt;i&gt;A lightweight powerful flow control component enabling reliability and monitoring for microservices. (轻量级的流量控制、熔断降级 Java 库)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/9434884/43697219-3cb4ef3a-9975-11e8-9a9c-73f4f537442d.png"&gt;&lt;img src="https://user-images.githubusercontent.com/9434884/43697219-3cb4ef3a-9975-11e8-9a9c-73f4f537442d.png" alt="Sentinel Logo" width="50%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sentinel-the-sentinel-of-your-microservices" class="anchor" aria-hidden="true" href="#sentinel-the-sentinel-of-your-microservices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sentinel: The Sentinel of Your Microservices&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/alibaba/Sentinel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5804bf314d01f4065570a24c6453616d9180b51/68747470733a2f2f7472617669732d63692e6f72672f616c69626162612f53656e74696e656c2e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/alibaba/Sentinel.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/alibaba/Sentinel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/116435ba2f3a6e475348fe658371b164f1cbc30c/68747470733a2f2f636f6465636f762e696f2f67682f616c69626162612f53656e74696e656c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/alibaba/Sentinel/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://search.maven.org/search?q=g:com.alibaba.csp%20AND%20a:sentinel-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ab542faaf47688ebbeb04cdcc650c56f2776a9e/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e616c69626162612e6373702f73656e74696e656c2d636f72652e7376673f6c6162656c3d4d6176656e25323043656e7472616c" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-central/v/com.alibaba.csp/sentinel-core.svg?label=Maven%20Central" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8cb994f6c4a156c623fe057fccd7fb7d7d2e8c9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322d3445423142412e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/alibaba/Sentinel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b4e76c78afbd99ec4e25fb6504d81863de562dc/68747470733a2f2f6261646765732e6769747465722e696d2f616c69626162612f53656e74696e656c2e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/alibaba/Sentinel.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;As distributed systems become increasingly popular, the reliability between services is becoming more important than ever before.
Sentinel takes "flow" as breakthrough point, and works on multiple fields including &lt;strong&gt;flow control&lt;/strong&gt;, &lt;strong&gt;circuit breaking&lt;/strong&gt; and &lt;strong&gt;system adaptive protection&lt;/strong&gt;, to guarantee reliability of microservices.&lt;/p&gt;
&lt;p&gt;Sentinel has the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rich applicable scenarios&lt;/strong&gt;: Sentinel has been wildly used in Alibaba, and has covered almost all the core-scenarios in Double-11 (11.11) Shopping Festivals in the past 10 years, such as “Second Kill” which needs to limit burst flow traffic to meet the system capacity, message peak clipping and valley fills, circuit breaking for unreliable downstream services, cluster flow control, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Real-time monitoring&lt;/strong&gt;: Sentinel also provides real-time monitoring ability. You can see the runtime information of a single machine in real-time, and the aggregated runtime info of a cluster with less than 500 nodes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Widespread open-source ecosystem&lt;/strong&gt;: Sentinel provides out-of-box integrations with commonly-used frameworks and libraries such as Spring Cloud, Dubbo and gRPC. You can easily use Sentinel by simply add the adapter dependency to your services.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Various SPI extensions&lt;/strong&gt;: Sentinel provides easy-to-use SPI extension interfaces that allow you to quickly customize your logic, for example, custom rule management, adapting data sources, and so on.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Features overview:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./doc/image/sentinel-features-overview-en.png"&gt;&lt;img src="./doc/image/sentinel-features-overview-en.png" alt="features-of-sentinel" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/alibaba/Sentinel/wiki/%E4%BB%8B%E7%BB%8D"&gt;中文文档&lt;/a&gt; for document in Chinese.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/alibaba/Sentinel/wiki"&gt;Wiki&lt;/a&gt; for full documentation, examples, blog posts, operational details and other information.&lt;/p&gt;
&lt;p&gt;Sentinel provides integration module for various open-source frameworks and libraries
(e.g. Spring Cloud, Apache Dubbo, gRPC, Spring WebFlux, Reactor). You can refer to &lt;a href="https://github.com/alibaba/Sentinel/wiki/Adapters-to-Popular-Framework"&gt;the document&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;If you are using Sentinel, please &lt;a href="https://github.com/alibaba/Sentinel/issues/18"&gt;&lt;strong&gt;leave a comment here&lt;/strong&gt;&lt;/a&gt; to tell us your scenario to make Sentinel better.
It's also encouraged to add the link of your blog post, tutorial, demo or customized components to &lt;a href="./doc/awesome-sentinel.md"&gt;&lt;strong&gt;Awesome Sentinel&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ecosystem-landscape" class="anchor" aria-hidden="true" href="#ecosystem-landscape"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ecosystem Landscape&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./doc/image/sentinel-opensource-eco-landscape-en.png"&gt;&lt;img src="./doc/image/sentinel-opensource-eco-landscape-en.png" alt="ecosystem-landscape" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;Below is a simple demo that guides new users to use Sentinel in just 3 steps. It also shows how to monitor this demo using the dashboard.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-1-add-dependency" class="anchor" aria-hidden="true" href="#1-add-dependency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Add Dependency&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Sentinel requires Java 7 or later.&lt;/p&gt;
&lt;p&gt;If your application is build in Maven, just add the following dependency in &lt;code&gt;pom.xml&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; replace here with the latest version &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.alibaba.csp&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;sentinel-core&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;1.7.0&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If not, you can download JAR in &lt;a href="https://mvnrepository.com/artifact/com.alibaba.csp/sentinel-core" rel="nofollow"&gt;Maven Center Repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2-define-resource" class="anchor" aria-hidden="true" href="#2-define-resource"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Define Resource&lt;/h3&gt;
&lt;p&gt;Wrap your code snippet via Sentinel API: &lt;code&gt;SphU.entry(resourceName)&lt;/code&gt;.
In below example, it is &lt;code&gt;System.out.println("hello world");&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; (&lt;span class="pl-smi"&gt;Entry&lt;/span&gt; entry &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;SphU&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;entry(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;HelloWorld&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Your business logic here.&lt;/span&gt;
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-smi"&gt;BlockException&lt;/span&gt; e) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle rejected request.&lt;/span&gt;
    e&lt;span class="pl-k"&gt;.&lt;/span&gt;printStackTrace();
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; try-with-resources auto exit&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So far the code modification is done. We also provide &lt;a href="https://github.com/alibaba/Sentinel/blob/master/sentinel-extension/sentinel-annotation-aspectj/README.md"&gt;annotation support module&lt;/a&gt; to define resource easier.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3-define-rules" class="anchor" aria-hidden="true" href="#3-define-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Define Rules&lt;/h3&gt;
&lt;p&gt;If we want to limit the access times of the resource, we can &lt;strong&gt;set rules to the resource&lt;/strong&gt;.
The following code defines a rule that limits access to the resource to 20 times per second at the maximum.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;FlowRule&lt;/span&gt;&amp;gt;&lt;/span&gt; rules &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;ArrayList&amp;lt;&amp;gt;&lt;/span&gt;();
&lt;span class="pl-smi"&gt;FlowRule&lt;/span&gt; rule &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;FlowRule&lt;/span&gt;();
rule&lt;span class="pl-k"&gt;.&lt;/span&gt;setResource(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;HelloWorld&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; set limit qps to 20&lt;/span&gt;
rule&lt;span class="pl-k"&gt;.&lt;/span&gt;setCount(&lt;span class="pl-c1"&gt;20&lt;/span&gt;);
rule&lt;span class="pl-k"&gt;.&lt;/span&gt;setGrade(&lt;span class="pl-smi"&gt;RuleConstant&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;FLOW_GRADE_QPS&lt;/span&gt;);
rules&lt;span class="pl-k"&gt;.&lt;/span&gt;add(rule);
&lt;span class="pl-smi"&gt;FlowRuleManager&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;loadRules(rules);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information, please refer to &lt;a href="https://github.com/alibaba/Sentinel/wiki/How-to-Use"&gt;How To Use&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-4-check-the-result" class="anchor" aria-hidden="true" href="#4-check-the-result"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. Check the Result&lt;/h3&gt;
&lt;p&gt;After running the demo for a while, you can see the following records in &lt;code&gt;~/logs/csp/${appName}-metrics.log.{date}&lt;/code&gt; (When using the default &lt;code&gt;DateFileLogHandler&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;|--timestamp-|------date time----|-resource-|p |block|s |e|rt  |occupied
1529998904000|2018-06-26 15:41:44|HelloWorld|20|0    |20|0|0   |0
1529998905000|2018-06-26 15:41:45|HelloWorld|20|5579 |20|0|728 |0
1529998906000|2018-06-26 15:41:46|HelloWorld|20|15698|20|0|0   |0
1529998907000|2018-06-26 15:41:47|HelloWorld|20|19262|20|0|0   |0
1529998908000|2018-06-26 15:41:48|HelloWorld|20|19502|20|0|0   |0
1529998909000|2018-06-26 15:41:49|HelloWorld|20|18386|20|0|0   |0

p stands for incoming request, block for blocked by rules, success for success handled by Sentinel, e for exception count, rt for average response time (ms), occupied stands for occupiedPassQps since 1.5.0 which enable us booking more than 1 shot when entering.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This shows that the demo can print "hello world" 20 times per second.&lt;/p&gt;
&lt;p&gt;More examples and information can be found in the &lt;a href="https://github.com/alibaba/Sentinel/wiki/How-to-Use"&gt;How To Use&lt;/a&gt; section.&lt;/p&gt;
&lt;p&gt;The working principles of Sentinel can be found in &lt;a href="https://github.com/alibaba/Sentinel/wiki/How-it-works"&gt;How it works&lt;/a&gt; section.&lt;/p&gt;
&lt;p&gt;Samples can be found in the &lt;a href="https://github.com/alibaba/Sentinel/tree/master/sentinel-demo"&gt;sentinel-demo&lt;/a&gt; module.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5-start-dashboard" class="anchor" aria-hidden="true" href="#5-start-dashboard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. Start Dashboard&lt;/h3&gt;
&lt;p&gt;Sentinel also provides a simple dashboard application, on which you can monitor the clients and configure the rules in real time.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/9434884/55449295-84866d80-55fd-11e9-94e5-d3441f4a2b63.png"&gt;&lt;img src="https://user-images.githubusercontent.com/9434884/55449295-84866d80-55fd-11e9-94e5-d3441f4a2b63.png" alt="dashboard" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For details please refer to &lt;a href="https://github.com/alibaba/Sentinel/wiki/Dashboard"&gt;Dashboard&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-trouble-shooting-and-logs" class="anchor" aria-hidden="true" href="#trouble-shooting-and-logs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Trouble Shooting and Logs&lt;/h2&gt;
&lt;p&gt;Sentinel will generate logs for troubleshooting and real-time monitoring.
All the information can be found in &lt;a href="https://github.com/alibaba/Sentinel/wiki/Logs"&gt;logs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bugs-and-feedback" class="anchor" aria-hidden="true" href="#bugs-and-feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs and Feedback&lt;/h2&gt;
&lt;p&gt;For bug report, questions and discussions please submit &lt;a href="https://github.com/alibaba/sentinel/issues"&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Contact us: &lt;a href="mailto:sentinel@linux.alibaba.com"&gt;sentinel@linux.alibaba.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are always welcomed! Please see &lt;a href="./CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for detailed guidelines.&lt;/p&gt;
&lt;p&gt;You can start with the issues labeled with &lt;a href="https://github.com/alibaba/Sentinel/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;&lt;code&gt;good first issue&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Thanks &lt;a href="https://github.com/google/guava"&gt;Guava&lt;/a&gt;, which provides some inspiration on rate limiting.&lt;/p&gt;
&lt;p&gt;And thanks for all &lt;a href="https://github.com/alibaba/Sentinel/graphs/contributors"&gt;contributors&lt;/a&gt; of Sentinel!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-who-is-using" class="anchor" aria-hidden="true" href="#who-is-using"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Who is using&lt;/h2&gt;
&lt;p&gt;These are only part of the companies using Sentinel, for reference only. If you are using Sentinel, please &lt;a href="https://github.com/alibaba/Sentinel/issues/18"&gt;add your company here&lt;/a&gt; to tell us your scenario to make Sentinel better :)&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cbd5ef61bfba5b64bebe462d416aa7049648f9fd/68747470733a2f2f646f63732e616c696261626167726f75702e636f6d2f617373657473322f696d616765732f656e2f676c6f62616c2f6c6f676f5f6865616465722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/cbd5ef61bfba5b64bebe462d416aa7049648f9fd/68747470733a2f2f646f63732e616c696261626167726f75702e636f6d2f617373657473322f696d616765732f656e2f676c6f62616c2f6c6f676f5f6865616465722e706e67" alt="Alibaba Group" data-canonical-src="https://docs.alibabagroup.com/assets2/images/en/global/logo_header.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b54e5d1976de8e631a8c51363c6b6cd584ca899a/687474703a2f2f7777772e636e74616970696e672e636f6d2f74706c7265736f757263652f636d732f7777772f74616970696e672f696d672f686f6d655f6e65772f74705f6c6f676f5f696d672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b54e5d1976de8e631a8c51363c6b6cd584ca899a/687474703a2f2f7777772e636e74616970696e672e636f6d2f74706c7265736f757263652f636d732f7777772f74616970696e672f696d672f686f6d655f6e65772f74705f6c6f676f5f696d672e706e67" alt="Taiping Renshou" data-canonical-src="http://www.cntaiping.com/tplresource/cms/www/taiping/img/home_new/tp_logo_img.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/9434884/48463502-2f48eb80-e817-11e8-984f-2f9b1b789e2d.png"&gt;&lt;img src="https://user-images.githubusercontent.com/9434884/48463502-2f48eb80-e817-11e8-984f-2f9b1b789e2d.png" alt="Shunfeng Technology" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/9434884/48463559-6cad7900-e817-11e8-87e4-42952b074837.png"&gt;&lt;img src="https://user-images.githubusercontent.com/9434884/48463559-6cad7900-e817-11e8-87e4-42952b074837.png" alt="Mandao" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6b7c3077403bf9cd34b3b00afae8ed01e8fa14fd/68747470733a2f2f686f6d652e6d69737366726573682e636e2f737461746963732f696d672f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6b7c3077403bf9cd34b3b00afae8ed01e8fa14fd/68747470733a2f2f686f6d652e6d69737366726573682e636e2f737461746963732f696d672f6c6f676f2e706e67" alt="每日优鲜" data-canonical-src="https://home.missfresh.cn/statics/img/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/9434884/49358468-bc43de00-f70d-11e8-97fe-0bf05865f29f.png"&gt;&lt;img src="https://user-images.githubusercontent.com/9434884/49358468-bc43de00-f70d-11e8-97fe-0bf05865f29f.png" alt="二维火" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0bd1351306f9679e2971378b89359a43e44c0d79/687474703a2f2f7374617469632e77696e7875616e63646e2e636f6d2f6373732f76322f696d616765732f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0bd1351306f9679e2971378b89359a43e44c0d79/687474703a2f2f7374617469632e77696e7875616e63646e2e636f6d2f6373732f76322f696d616765732f6c6f676f2e706e67" alt="文轩在线" data-canonical-src="http://static.winxuancdn.com/css/v2/images/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/850e8115936fd0997363405eaf9e0f5a99bd5eae/68747470733a2f2f7777772e6b65727579756e2e636f6d2f7374617469632f6b72796e65772f696d616765732f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/850e8115936fd0997363405eaf9e0f5a99bd5eae/68747470733a2f2f7777772e6b65727579756e2e636f6d2f7374617469632f6b72796e65772f696d616765732f6c6f676f2e706e67" alt="客如云" data-canonical-src="https://www.keruyun.com/static/krynew/images/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c969c11b51373a34c899cf95835f6692f1d2ad7c/68747470733a2f2f73746c69622e716262362e636f6d2f77636c742f696d672f686f6d655f68642f76657273696f6e312f7469746c655f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c969c11b51373a34c899cf95835f6692f1d2ad7c/68747470733a2f2f73746c69622e716262362e636f6d2f77636c742f696d672f686f6d655f68642f76657273696f6e312f7469746c655f6c6f676f2e706e67" alt="亲宝宝" data-canonical-src="https://stlib.qbb6.com/wclt/img/home_hd/version1/title_logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/43d4c47036d327905319b7bdc171e2bd1ea6d768/68747470733a2f2f7777772e726179636c6f75642e636f6d2f696d616765732f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/43d4c47036d327905319b7bdc171e2bd1ea6d768/68747470733a2f2f7777772e726179636c6f75642e636f6d2f696d616765732f6c6f676f2e706e67" alt="杭州光云科技" data-canonical-src="https://www.raycloud.com/images/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0af7dbfec633452764fb9f3a46fe2e316908d427/68747470733a2f2f7265732e6a696e6875693336352e636f6d2f722f696d616765732f6c6f676f322e706e673f763d312e353237"&gt;&lt;img src="https://camo.githubusercontent.com/0af7dbfec633452764fb9f3a46fe2e316908d427/68747470733a2f2f7265732e6a696e6875693336352e636f6d2f722f696d616765732f6c6f676f322e706e673f763d312e353237" alt="金汇金融" data-canonical-src="https://res.jinhui365.com/r/images/logo2.png?v=1.527" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7afe1a8462f77eb04b4df15a952d1562cb7678c8/687474703a2f2f63646e2e35327368616e676f752e636f6d2f7368616e6469616e62616e672f6f6666696369616c2d736f757263652f332e312e312f6275696c642f696d616765732f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7afe1a8462f77eb04b4df15a952d1562cb7678c8/687474703a2f2f63646e2e35327368616e676f752e636f6d2f7368616e6469616e62616e672f6f6666696369616c2d736f757263652f332e312e312f6275696c642f696d616765732f6c6f676f2e706e67" alt="闪电购" data-canonical-src="http://cdn.52shangou.com/shandianbang/official-source/3.1.1/build/images/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/fa8b3755da3f186a3f675f46e8833960232230c7/687474703a2f2f63646e2e70696e64756f64756f2e636f6d2f6173736574732f696d672f7064645f6c6f676f5f76332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/fa8b3755da3f186a3f675f46e8833960232230c7/687474703a2f2f63646e2e70696e64756f64756f2e636f6d2f6173736574732f696d672f7064645f6c6f676f5f76332e706e67" alt="拼多多" data-canonical-src="http://cdn.pinduoduo.com/assets/img/pdd_logo_v3.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>alibaba</author><guid isPermaLink="false">https://github.com/alibaba/Sentinel</guid><pubDate>Sun, 01 Dec 2019 00:20:00 GMT</pubDate></item><item><title>30-seconds/30-seconds-of-code #21 in All Languages, This month</title><link>https://github.com/30-seconds/30-seconds-of-code</link><description>&lt;p&gt;&lt;i&gt;A curated collection of useful JavaScript snippets that you can understand in 30 seconds or less.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://30secondsofcode.org/" rel="nofollow"&gt;&lt;img src="/logo.png" alt="Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-30-seconds-of-code" class="anchor" aria-hidden="true" href="#30-seconds-of-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;30 seconds of code&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/8c97d97321b0fd20cbccb3c5c3525b8391b63512/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4343302d2d312e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-CC0--1.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/30-seconds-of-code" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/751b3371e42ad3922d283297d806d1245e4dbc65/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f33302d7365636f6e64732d6f662d636f64652e737667" alt="npm Downloads" data-canonical-src="https://img.shields.io/npm/dt/30-seconds-of-code.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/30-seconds-of-code" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6731730fb52995cb0ed3acb8dd983055f5fb0fcc/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f33302d7365636f6e64732d6f662d636f64652e737667" alt="npm Version" data-canonical-src="https://img.shields.io/npm/v/30-seconds-of-code.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://snyk.io/test/github/30-seconds/30-seconds-of-code?targetFile=package.json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4072b2a1006ac1ced63e6f9801ecc6c4b2bb19a2/68747470733a2f2f736e796b2e696f2f746573742f6769746875622f33302d7365636f6e64732f33302d7365636f6e64732d6f662d636f64652f62616467652e7376673f74617267657446696c653d7061636b6167652e6a736f6e" alt="Known Vulnerabilities" data-canonical-src="https://snyk.io/test/github/30-seconds/30-seconds-of-code/badge.svg?targetFile=package.json" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.com/30-seconds/30-seconds-of-code" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc8d59cd0434621d225969f2f875b078bed1e2aa/68747470733a2f2f7472617669732d63692e636f6d2f33302d7365636f6e64732f33302d7365636f6e64732d6f662d636f64652e7376673f6272616e63683d6d6173746572" alt="Travis Build" data-canonical-src="https://travis-ci.com/30-seconds/30-seconds-of-code.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;br&gt;
&lt;a href="https://awesome.re" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1997c7e760b163a61aba3a2c98f21be8c524be29/68747470733a2f2f617765736f6d652e72652f62616467652e737667" alt="Awesome" data-canonical-src="https://awesome.re/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/30-seconds-of-code" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/930c0c7a430dd65b4e33fb14de4280de48b9d166/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70726f6475637468756e742d766f74652d6f72616e67652e737667" alt="ProductHunt" data-canonical-src="https://img.shields.io/badge/producthunt-vote-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Flet/semistandard"&gt;&lt;img src="https://camo.githubusercontent.com/1263446434adb7f7d98945dbb77bdeaf17849a93/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d73656d697374616e646172642d627269676874677265656e2e737667" alt="js-semistandard-style" data-canonical-src="https://img.shields.io/badge/code%20style-semistandard-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4e0f63e9613ee474a7dfdc23c240b9795712c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667" alt="PRs Welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Curated collection of useful JavaScript snippets that you can understand in 30 seconds or less.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;F&lt;/kbd&gt; or &lt;kbd&gt;command&lt;/kbd&gt; + &lt;kbd&gt;F&lt;/kbd&gt; to search for a snippet.&lt;/li&gt;
&lt;li&gt;Contributions welcome, please read the &lt;a href="CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Snippets are written in ES6, use the &lt;a href="https://babeljs.io/" rel="nofollow"&gt;Babel transpiler&lt;/a&gt; to ensure backwards-compatibility.&lt;/li&gt;
&lt;li&gt;You can import these snippets into VSCode, by following the instructions found &lt;a href="https://github.com/30-seconds/30-seconds-of-code/tree/master/vscode_snippets"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You can search, view and copy these snippets from a terminal, using the CLI application from &lt;a href="https://github.com/sQVe/30s"&gt;this repo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you want to follow 30-seconds-of-code on social media, you can find us on &lt;a href="https://www.facebook.com/30secondsofcode" rel="nofollow"&gt;Facebook&lt;/a&gt;, &lt;a href="https://www.instagram.com/30secondsofcode" rel="nofollow"&gt;Instagram&lt;/a&gt; and &lt;a href="https://twitter.com/30secondsofcode" rel="nofollow"&gt;Twitter&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://30-seconds.github.io/30-seconds-of-css/" rel="nofollow"&gt;30 Seconds of CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://30secondsofinterviews.org/" rel="nofollow"&gt;30 Seconds of Interviews&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/30-seconds/30-seconds-of-react"&gt;30 Seconds of React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/30-seconds/30-seconds-of-python-code"&gt;30 Seconds of Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/30-seconds/30-seconds-of-php-code"&gt;30 Seconds of PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/30-seconds-of-knowledge/mmgplondnjekobonklacmemikcnhklla" rel="nofollow"&gt;30 Seconds of Knowledge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanMwiruki/30-seconds-of-kotlin"&gt;30 Seconds of Kotlin&lt;/a&gt; &lt;em&gt;(unofficial)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-package" class="anchor" aria-hidden="true" href="#package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package&lt;/h4&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;NOTICE:&lt;/strong&gt; A few of our snippets are not yet optimized for production (see disclaimers for individual snippet issues).&lt;/p&gt;
&lt;p&gt;You can find a package with all the snippets on &lt;a href="https://www.npmjs.com/package/30-seconds-of-code" rel="nofollow"&gt;npm&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; With npm&lt;/span&gt;
npm install 30-seconds-of-code

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; With yarn&lt;/span&gt;
yarn add 30-seconds-of-code&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://unpkg.com/30-seconds-of-code/" rel="nofollow"&gt;CDN link&lt;/a&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Details&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-e"&gt;src&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://unpkg.com/30-seconds-of-code@1/dist/_30s.es5.min.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;&lt;span class="pl-s1"&gt;&lt;/span&gt;
&lt;span class="pl-s1"&gt;  &lt;span class="pl-smi"&gt;_30s&lt;/span&gt;.&lt;span class="pl-en"&gt;average&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;);&lt;/span&gt;
&lt;span class="pl-s1"&gt;&lt;/span&gt;&amp;lt;/&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Node&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CommonJS&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;_30s&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;30-seconds-of-code&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;_30s&lt;/span&gt;.&lt;span class="pl-en"&gt;average&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ES Modules&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;_30s&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;30-seconds-of-code&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-smi"&gt;_30s&lt;/span&gt;.&lt;span class="pl-en"&gt;average&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content--adapter" class="anchor" aria-hidden="true" href="#-adapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="electric_plug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50c.png"&gt;🔌&lt;/g-emoji&gt; Adapter&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ary"&gt;&lt;code&gt;ary&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collectinto"&gt;&lt;code&gt;collectInto&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flip"&gt;&lt;code&gt;flip&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#over"&gt;&lt;code&gt;over&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#overargs"&gt;&lt;code&gt;overArgs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pipeasyncfunctions"&gt;&lt;code&gt;pipeAsyncFunctions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pipefunctions"&gt;&lt;code&gt;pipeFunctions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#promisify"&gt;&lt;code&gt;promisify&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rearg"&gt;&lt;code&gt;rearg&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spreadover"&gt;&lt;code&gt;spreadOver&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unary"&gt;&lt;code&gt;unary&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content--array" class="anchor" aria-hidden="true" href="#-array"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt; Array&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#all"&gt;&lt;code&gt;all&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#allequal"&gt;&lt;code&gt;allEqual&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#any"&gt;&lt;code&gt;any&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#arraytocsv"&gt;&lt;code&gt;arrayToCSV&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bifurcate"&gt;&lt;code&gt;bifurcate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bifurcateby"&gt;&lt;code&gt;bifurcateBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chunk"&gt;&lt;code&gt;chunk&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compact"&gt;&lt;code&gt;compact&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#countby"&gt;&lt;code&gt;countBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#countoccurrences"&gt;&lt;code&gt;countOccurrences&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deepflatten"&gt;&lt;code&gt;deepFlatten&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#difference"&gt;&lt;code&gt;difference&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#differenceby"&gt;&lt;code&gt;differenceBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#differencewith"&gt;&lt;code&gt;differenceWith&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#drop"&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dropright"&gt;&lt;code&gt;dropRight&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#droprightwhile"&gt;&lt;code&gt;dropRightWhile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dropwhile"&gt;&lt;code&gt;dropWhile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#everynth"&gt;&lt;code&gt;everyNth&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filterfalsy"&gt;&lt;code&gt;filterFalsy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filternonunique"&gt;&lt;code&gt;filterNonUnique&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filternonuniqueby"&gt;&lt;code&gt;filterNonUniqueBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#findlast"&gt;&lt;code&gt;findLast&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#findlastindex"&gt;&lt;code&gt;findLastIndex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flatten"&gt;&lt;code&gt;flatten&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#foreachright"&gt;&lt;code&gt;forEachRight&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#groupby"&gt;&lt;code&gt;groupBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#head"&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#includesall"&gt;&lt;code&gt;includesAll&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#includesany"&gt;&lt;code&gt;includesAny&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#indexofall"&gt;&lt;code&gt;indexOfAll&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initial"&gt;&lt;code&gt;initial&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initialize2darray"&gt;&lt;code&gt;initialize2DArray&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initializearraywithrange"&gt;&lt;code&gt;initializeArrayWithRange&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initializearraywithrangeright"&gt;&lt;code&gt;initializeArrayWithRangeRight&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initializearraywithvalues"&gt;&lt;code&gt;initializeArrayWithValues&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initializendarray"&gt;&lt;code&gt;initializeNDArray&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#intersection"&gt;&lt;code&gt;intersection&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#intersectionby"&gt;&lt;code&gt;intersectionBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#intersectionwith"&gt;&lt;code&gt;intersectionWith&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issorted"&gt;&lt;code&gt;isSorted&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#join"&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jsontocsv-"&gt;&lt;code&gt;JSONtoCSV&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#last"&gt;&lt;code&gt;last&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#longestitem"&gt;&lt;code&gt;longestItem&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mapobject-"&gt;&lt;code&gt;mapObject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#maxn"&gt;&lt;code&gt;maxN&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#minn"&gt;&lt;code&gt;minN&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#none"&gt;&lt;code&gt;none&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nthelement"&gt;&lt;code&gt;nthElement&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#offset"&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#partition"&gt;&lt;code&gt;partition&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#permutations-"&gt;&lt;code&gt;permutations&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pull"&gt;&lt;code&gt;pull&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pullatindex-"&gt;&lt;code&gt;pullAtIndex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pullatvalue-"&gt;&lt;code&gt;pullAtValue&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pullby-"&gt;&lt;code&gt;pullBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reducedfilter"&gt;&lt;code&gt;reducedFilter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reducesuccessive"&gt;&lt;code&gt;reduceSuccessive&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reducewhich"&gt;&lt;code&gt;reduceWhich&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reject"&gt;&lt;code&gt;reject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sample"&gt;&lt;code&gt;sample&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#samplesize"&gt;&lt;code&gt;sampleSize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shank"&gt;&lt;code&gt;shank&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shuffle"&gt;&lt;code&gt;shuffle&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#similarity"&gt;&lt;code&gt;similarity&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sortedindex"&gt;&lt;code&gt;sortedIndex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sortedindexby"&gt;&lt;code&gt;sortedIndexBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sortedlastindex"&gt;&lt;code&gt;sortedLastIndex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sortedlastindexby"&gt;&lt;code&gt;sortedLastIndexBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stablesort-"&gt;&lt;code&gt;stableSort&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#symmetricdifference"&gt;&lt;code&gt;symmetricDifference&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#symmetricdifferenceby"&gt;&lt;code&gt;symmetricDifferenceBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#symmetricdifferencewith"&gt;&lt;code&gt;symmetricDifferenceWith&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tail"&gt;&lt;code&gt;tail&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#take"&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#takeright"&gt;&lt;code&gt;takeRight&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#takerightwhile"&gt;&lt;code&gt;takeRightWhile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#takewhile"&gt;&lt;code&gt;takeWhile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tohash"&gt;&lt;code&gt;toHash&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#union"&gt;&lt;code&gt;union&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unionby"&gt;&lt;code&gt;unionBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unionwith"&gt;&lt;code&gt;unionWith&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uniqueelements"&gt;&lt;code&gt;uniqueElements&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uniqueelementsby"&gt;&lt;code&gt;uniqueElementsBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uniqueelementsbyright"&gt;&lt;code&gt;uniqueElementsByRight&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uniquesymmetricdifference"&gt;&lt;code&gt;uniqueSymmetricDifference&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unzip"&gt;&lt;code&gt;unzip&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unzipwith-"&gt;&lt;code&gt;unzipWith&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#without"&gt;&lt;code&gt;without&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xprod"&gt;&lt;code&gt;xProd&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zip"&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zipobject"&gt;&lt;code&gt;zipObject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zipwith-"&gt;&lt;code&gt;zipWith&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content--browser" class="anchor" aria-hidden="true" href="#-browser"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt; Browser&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#arraytohtmllist"&gt;&lt;code&gt;arrayToHtmlList&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bottomvisible"&gt;&lt;code&gt;bottomVisible&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copytoclipboard-"&gt;&lt;code&gt;copyToClipboard&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#counter-"&gt;&lt;code&gt;counter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#createelement"&gt;&lt;code&gt;createElement&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#createeventhub-"&gt;&lt;code&gt;createEventHub&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#currenturl"&gt;&lt;code&gt;currentURL&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#detectdevicetype"&gt;&lt;code&gt;detectDeviceType&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elementcontains"&gt;&lt;code&gt;elementContains&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elementisvisibleinviewport-"&gt;&lt;code&gt;elementIsVisibleInViewport&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#formtoobject"&gt;&lt;code&gt;formToObject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getimages"&gt;&lt;code&gt;getImages&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getscrollposition"&gt;&lt;code&gt;getScrollPosition&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getstyle"&gt;&lt;code&gt;getStyle&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hasclass"&gt;&lt;code&gt;hasClass&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hashbrowser-"&gt;&lt;code&gt;hashBrowser&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hide"&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#httpsredirect"&gt;&lt;code&gt;httpsRedirect&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#insertafter"&gt;&lt;code&gt;insertAfter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#insertbefore"&gt;&lt;code&gt;insertBefore&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isbrowsertabfocused"&gt;&lt;code&gt;isBrowserTabFocused&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nodelisttoarray"&gt;&lt;code&gt;nodeListToArray&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#observemutations-"&gt;&lt;code&gt;observeMutations&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#off"&gt;&lt;code&gt;off&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#on"&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#onuserinputchange-"&gt;&lt;code&gt;onUserInputChange&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prefix"&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#recordanimationframes"&gt;&lt;code&gt;recordAnimationFrames&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redirect"&gt;&lt;code&gt;redirect&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#runasync-"&gt;&lt;code&gt;runAsync&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scrolltotop"&gt;&lt;code&gt;scrollToTop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#serializeform"&gt;&lt;code&gt;serializeForm&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setstyle"&gt;&lt;code&gt;setStyle&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#show"&gt;&lt;code&gt;show&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#smoothscroll"&gt;&lt;code&gt;smoothScroll&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#toggleclass"&gt;&lt;code&gt;toggleClass&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#triggerevent"&gt;&lt;code&gt;triggerEvent&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uuidgeneratorbrowser"&gt;&lt;code&gt;UUIDGeneratorBrowser&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content-️-date" class="anchor" aria-hidden="true" href="#️-date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="stopwatch" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/23f1.png"&gt;⏱️&lt;/g-emoji&gt; Date&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#dayofyear"&gt;&lt;code&gt;dayOfYear&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#formatduration"&gt;&lt;code&gt;formatDuration&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getcolontimefromdate"&gt;&lt;code&gt;getColonTimeFromDate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getdaysdiffbetweendates"&gt;&lt;code&gt;getDaysDiffBetweenDates&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getmeridiemsuffixofinteger"&gt;&lt;code&gt;getMeridiemSuffixOfInteger&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isafterdate"&gt;&lt;code&gt;isAfterDate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isbeforedate"&gt;&lt;code&gt;isBeforeDate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issamedate"&gt;&lt;code&gt;isSameDate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isweekday"&gt;&lt;code&gt;isWeekday&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isweekend"&gt;&lt;code&gt;isWeekend&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#maxdate"&gt;&lt;code&gt;maxDate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mindate"&gt;&lt;code&gt;minDate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tomorrow"&gt;&lt;code&gt;tomorrow&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#yesterday"&gt;&lt;code&gt;yesterday&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content-️-function" class="anchor" aria-hidden="true" href="#️-function"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="control_knobs" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f39b.png"&gt;🎛️&lt;/g-emoji&gt; Function&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#attempt"&gt;&lt;code&gt;attempt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bind"&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bindkey"&gt;&lt;code&gt;bindKey&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chainasync"&gt;&lt;code&gt;chainAsync&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#checkprop"&gt;&lt;code&gt;checkProp&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compose"&gt;&lt;code&gt;compose&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#composeright"&gt;&lt;code&gt;composeRight&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#converge"&gt;&lt;code&gt;converge&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#curry"&gt;&lt;code&gt;curry&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debounce"&gt;&lt;code&gt;debounce&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#defer"&gt;&lt;code&gt;defer&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#delay"&gt;&lt;code&gt;delay&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#functionname"&gt;&lt;code&gt;functionName&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hz"&gt;&lt;code&gt;hz&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#memoize-"&gt;&lt;code&gt;memoize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#negate"&gt;&lt;code&gt;negate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#once"&gt;&lt;code&gt;once&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#partial"&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#partialright"&gt;&lt;code&gt;partialRight&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#runpromisesinseries"&gt;&lt;code&gt;runPromisesInSeries&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sleep"&gt;&lt;code&gt;sleep&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#throttle-"&gt;&lt;code&gt;throttle&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#times"&gt;&lt;code&gt;times&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uncurry"&gt;&lt;code&gt;uncurry&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unfold"&gt;&lt;code&gt;unfold&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#when"&gt;&lt;code&gt;when&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content--math" class="anchor" aria-hidden="true" href="#-math"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="heavy_division_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2797.png"&gt;➗&lt;/g-emoji&gt; Math&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#approximatelyequal"&gt;&lt;code&gt;approximatelyEqual&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#average"&gt;&lt;code&gt;average&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#averageby"&gt;&lt;code&gt;averageBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#binomialcoefficient"&gt;&lt;code&gt;binomialCoefficient&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clampnumber"&gt;&lt;code&gt;clampNumber&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#degreestorads"&gt;&lt;code&gt;degreesToRads&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#digitize"&gt;&lt;code&gt;digitize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#distance"&gt;&lt;code&gt;distance&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elo-"&gt;&lt;code&gt;elo&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#factorial"&gt;&lt;code&gt;factorial&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fibonacci"&gt;&lt;code&gt;fibonacci&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gcd"&gt;&lt;code&gt;gcd&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#geometricprogression"&gt;&lt;code&gt;geometricProgression&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hammingdistance"&gt;&lt;code&gt;hammingDistance&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#inrange"&gt;&lt;code&gt;inRange&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isdivisible"&gt;&lt;code&gt;isDivisible&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iseven"&gt;&lt;code&gt;isEven&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isnegativezero"&gt;&lt;code&gt;isNegativeZero&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isodd"&gt;&lt;code&gt;isOdd&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isprime"&gt;&lt;code&gt;isPrime&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lcm"&gt;&lt;code&gt;lcm&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#luhncheck-"&gt;&lt;code&gt;luhnCheck&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mapnumrange"&gt;&lt;code&gt;mapNumRange&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#maxby"&gt;&lt;code&gt;maxBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#median"&gt;&lt;code&gt;median&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#midpoint"&gt;&lt;code&gt;midpoint&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#minby"&gt;&lt;code&gt;minBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#percentile"&gt;&lt;code&gt;percentile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#powerset"&gt;&lt;code&gt;powerset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#primes"&gt;&lt;code&gt;primes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#radstodegrees"&gt;&lt;code&gt;radsToDegrees&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#randomintarrayinrange"&gt;&lt;code&gt;randomIntArrayInRange&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#randomintegerinrange"&gt;&lt;code&gt;randomIntegerInRange&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#randomnumberinrange"&gt;&lt;code&gt;randomNumberInRange&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#round"&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sdbm"&gt;&lt;code&gt;sdbm&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#standarddeviation"&gt;&lt;code&gt;standardDeviation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sum"&gt;&lt;code&gt;sum&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sumby"&gt;&lt;code&gt;sumBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sumpower"&gt;&lt;code&gt;sumPower&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tosafeinteger"&gt;&lt;code&gt;toSafeInteger&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vectordistance"&gt;&lt;code&gt;vectorDistance&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content--node" class="anchor" aria-hidden="true" href="#-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png"&gt;📦&lt;/g-emoji&gt; Node&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#atob"&gt;&lt;code&gt;atob&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#btoa"&gt;&lt;code&gt;btoa&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#colorize"&gt;&lt;code&gt;colorize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#createdirifnotexists"&gt;&lt;code&gt;createDirIfNotExists&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hasflags"&gt;&lt;code&gt;hasFlags&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hashnode"&gt;&lt;code&gt;hashNode&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isduplexstream"&gt;&lt;code&gt;isDuplexStream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isreadablestream"&gt;&lt;code&gt;isReadableStream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isstream"&gt;&lt;code&gt;isStream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#istravisci"&gt;&lt;code&gt;isTravisCI&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iswritablestream"&gt;&lt;code&gt;isWritableStream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jsontofile"&gt;&lt;code&gt;JSONToFile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#readfilelines"&gt;&lt;code&gt;readFileLines&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#untildify"&gt;&lt;code&gt;untildify&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uuidgeneratornode"&gt;&lt;code&gt;UUIDGeneratorNode&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content-️-object" class="anchor" aria-hidden="true" href="#️-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="card_file_box" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5c3.png"&gt;🗃️&lt;/g-emoji&gt; Object&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#bindall"&gt;&lt;code&gt;bindAll&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deepclone"&gt;&lt;code&gt;deepClone&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deepfreeze"&gt;&lt;code&gt;deepFreeze&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deepget"&gt;&lt;code&gt;deepGet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deepmapkeys-"&gt;&lt;code&gt;deepMapKeys&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#defaults"&gt;&lt;code&gt;defaults&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dig"&gt;&lt;code&gt;dig&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#equals-"&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#findkey"&gt;&lt;code&gt;findKey&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#findlastkey"&gt;&lt;code&gt;findLastKey&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flattenobject"&gt;&lt;code&gt;flattenObject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#forown"&gt;&lt;code&gt;forOwn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#forownright"&gt;&lt;code&gt;forOwnRight&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#functions"&gt;&lt;code&gt;functions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#get"&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#haskey"&gt;&lt;code&gt;hasKey&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#invertkeyvalues"&gt;&lt;code&gt;invertKeyValues&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lowercasekeys"&gt;&lt;code&gt;lowercaseKeys&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mapkeys"&gt;&lt;code&gt;mapKeys&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mapvalues"&gt;&lt;code&gt;mapValues&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#matches"&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#matcheswith"&gt;&lt;code&gt;matchesWith&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#merge"&gt;&lt;code&gt;merge&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nest"&gt;&lt;code&gt;nest&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#objectfrompairs"&gt;&lt;code&gt;objectFromPairs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#objecttopairs"&gt;&lt;code&gt;objectToPairs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#omit"&gt;&lt;code&gt;omit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#omitby"&gt;&lt;code&gt;omitBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orderby"&gt;&lt;code&gt;orderBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pick"&gt;&lt;code&gt;pick&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pickby"&gt;&lt;code&gt;pickBy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#renamekeys"&gt;&lt;code&gt;renameKeys&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shallowclone"&gt;&lt;code&gt;shallowClone&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#size"&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transform"&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#truthcheckcollection"&gt;&lt;code&gt;truthCheckCollection&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unflattenobject-"&gt;&lt;code&gt;unflattenObject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content--string" class="anchor" aria-hidden="true" href="#-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="scroll" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png"&gt;📜&lt;/g-emoji&gt; String&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#bytesize"&gt;&lt;code&gt;byteSize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#capitalize"&gt;&lt;code&gt;capitalize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#capitalizeeveryword"&gt;&lt;code&gt;capitalizeEveryWord&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compactwhitespace"&gt;&lt;code&gt;compactWhitespace&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#csvtoarray"&gt;&lt;code&gt;CSVToArray&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#csvtojson-"&gt;&lt;code&gt;CSVToJSON&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#decapitalize"&gt;&lt;code&gt;decapitalize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#escapehtml"&gt;&lt;code&gt;escapeHTML&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#escaperegexp"&gt;&lt;code&gt;escapeRegExp&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fromcamelcase"&gt;&lt;code&gt;fromCamelCase&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#indentstring"&gt;&lt;code&gt;indentString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isabsoluteurl"&gt;&lt;code&gt;isAbsoluteURL&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isanagram"&gt;&lt;code&gt;isAnagram&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#islowercase"&gt;&lt;code&gt;isLowerCase&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isuppercase"&gt;&lt;code&gt;isUpperCase&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mapstring"&gt;&lt;code&gt;mapString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mask"&gt;&lt;code&gt;mask&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pad"&gt;&lt;code&gt;pad&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#palindrome"&gt;&lt;code&gt;palindrome&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pluralize"&gt;&lt;code&gt;pluralize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#removenonascii"&gt;&lt;code&gt;removeNonASCII&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reversestring"&gt;&lt;code&gt;reverseString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sortcharactersinstring"&gt;&lt;code&gt;sortCharactersInString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splitlines"&gt;&lt;code&gt;splitLines&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stringpermutations-"&gt;&lt;code&gt;stringPermutations&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#striphtmltags"&gt;&lt;code&gt;stripHTMLTags&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tocamelcase"&gt;&lt;code&gt;toCamelCase&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tokebabcase"&gt;&lt;code&gt;toKebabCase&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tosnakecase"&gt;&lt;code&gt;toSnakeCase&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#totitlecase"&gt;&lt;code&gt;toTitleCase&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#truncatestring"&gt;&lt;code&gt;truncateString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unescapehtml"&gt;&lt;code&gt;unescapeHTML&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#urljoin-"&gt;&lt;code&gt;URLJoin&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#words"&gt;&lt;code&gt;words&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content--type" class="anchor" aria-hidden="true" href="#-type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="page_with_curl" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c3.png"&gt;📃&lt;/g-emoji&gt; Type&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#gettype"&gt;&lt;code&gt;getType&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#is"&gt;&lt;code&gt;is&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isarraylike"&gt;&lt;code&gt;isArrayLike&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isboolean"&gt;&lt;code&gt;isBoolean&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isempty"&gt;&lt;code&gt;isEmpty&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isfunction"&gt;&lt;code&gt;isFunction&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isnil"&gt;&lt;code&gt;isNil&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isnull"&gt;&lt;code&gt;isNull&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isnumber"&gt;&lt;code&gt;isNumber&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isobject"&gt;&lt;code&gt;isObject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isobjectlike"&gt;&lt;code&gt;isObjectLike&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isplainobject"&gt;&lt;code&gt;isPlainObject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isprimitive"&gt;&lt;code&gt;isPrimitive&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ispromiselike"&gt;&lt;code&gt;isPromiseLike&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isstring"&gt;&lt;code&gt;isString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issymbol"&gt;&lt;code&gt;isSymbol&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isundefined"&gt;&lt;code&gt;isUndefined&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isvalidjson"&gt;&lt;code&gt;isValidJSON&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content--utility" class="anchor" aria-hidden="true" href="#-utility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="wrench" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png"&gt;🔧&lt;/g-emoji&gt; Utility&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;View contents&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#castarray"&gt;&lt;code&gt;castArray&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cloneregexp"&gt;&lt;code&gt;cloneRegExp&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coalesce"&gt;&lt;code&gt;coalesce&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coalescefactory"&gt;&lt;code&gt;coalesceFactory&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extendhex"&gt;&lt;code&gt;extendHex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#geturlparameters"&gt;&lt;code&gt;getURLParameters&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hextorgb-"&gt;&lt;code&gt;hexToRGB&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#httpget"&gt;&lt;code&gt;httpGet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#httppost"&gt;&lt;code&gt;httpPost&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#isbrowser"&gt;&lt;code&gt;isBrowser&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mostperformant"&gt;&lt;code&gt;mostPerformant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ntharg"&gt;&lt;code&gt;nthArg&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#objecttoquerystring"&gt;&lt;code&gt;objectToQueryString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#parsecookie"&gt;&lt;code&gt;parseCookie&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prettybytes-"&gt;&lt;code&gt;prettyBytes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#randomhexcolorcode"&gt;&lt;code&gt;randomHexColorCode&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rgbtohex"&gt;&lt;code&gt;RGBToHex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#serializecookie"&gt;&lt;code&gt;serializeCookie&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#timetaken"&gt;&lt;code&gt;timeTaken&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tocurrency"&gt;&lt;code&gt;toCurrency&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todecimalmark"&gt;&lt;code&gt;toDecimalMark&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#toordinalsuffix"&gt;&lt;code&gt;toOrdinalSuffix&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#validatenumber"&gt;&lt;code&gt;validateNumber&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#yesno"&gt;&lt;code&gt;yesNo&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content--adapter-1" class="anchor" aria-hidden="true" href="#-adapter-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="electric_plug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50c.png"&gt;🔌&lt;/g-emoji&gt; Adapter&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-ary" class="anchor" aria-hidden="true" href="#ary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ary&lt;/h3&gt;
&lt;p&gt;Creates a function that accepts up to &lt;code&gt;n&lt;/code&gt; arguments, ignoring any additional arguments.&lt;/p&gt;
&lt;p&gt;Call the provided function, &lt;code&gt;fn&lt;/code&gt;, with up to &lt;code&gt;n&lt;/code&gt; arguments, using &lt;code&gt;Array.prototype.slice(0, n)&lt;/code&gt; and the spread operator (&lt;code&gt;...&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;ary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, n));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;firstTwoMax&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ary&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;max&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
[[&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;], [&lt;span class="pl-c1"&gt;10&lt;/span&gt;]].&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;firstTwoMax&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;x)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [6, 6, 10]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-call" class="anchor" aria-hidden="true" href="#call"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;call&lt;/h3&gt;
&lt;p&gt;Given a key and a set of arguments, call them when given a context. Primarily useful in composition.&lt;/p&gt;
&lt;p&gt;Use a closure to call a stored key with stored arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;key&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;context&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; context[key](&lt;span class="pl-k"&gt;...&lt;/span&gt;args);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Promise&lt;/span&gt;.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])
  .&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-en"&gt;call&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;map&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; x))
  .&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ 2, 4, 6 ]&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;call&lt;/span&gt;.&lt;span class="pl-en"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;map&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-c1"&gt;Promise&lt;/span&gt;.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])
  .&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; x))
  .&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ 2, 4, 6 ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-collectinto" class="anchor" aria-hidden="true" href="#collectinto"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;collectInto&lt;/h3&gt;
&lt;p&gt;Changes a function that accepts an array into a variadic function.&lt;/p&gt;
&lt;p&gt;Given a function, return a closure that collects all inputs into an array-accepting function.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;collectInto&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(args);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;Pall&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;collectInto&lt;/span&gt;(&lt;span class="pl-c1"&gt;Promise&lt;/span&gt;.&lt;span class="pl-c1"&gt;all&lt;/span&gt;.&lt;span class="pl-en"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;Promise&lt;/span&gt;));
&lt;span class="pl-k"&gt;let&lt;/span&gt; p1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Promise&lt;/span&gt;.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
&lt;span class="pl-k"&gt;let&lt;/span&gt; p2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Promise&lt;/span&gt;.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
&lt;span class="pl-k"&gt;let&lt;/span&gt; p3 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Promise&lt;/span&gt;(&lt;span class="pl-smi"&gt;resolve&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(resolve, &lt;span class="pl-c1"&gt;2000&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;));
&lt;span class="pl-en"&gt;Pall&lt;/span&gt;(p1, p2, p3).&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3] (after about 2 seconds)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-flip" class="anchor" aria-hidden="true" href="#flip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;flip&lt;/h3&gt;
&lt;p&gt;Flip takes a function as an argument, then makes the first argument the last.&lt;/p&gt;
&lt;p&gt;Return a closure that takes variadic inputs, and splices the last argument to make it the first argument before applying the rest.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;flip&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;first&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;rest&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;rest, first);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; a &lt;span class="pl-k"&gt;=&lt;/span&gt; { name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;John Smith&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; };
&lt;span class="pl-k"&gt;let&lt;/span&gt; b &lt;span class="pl-k"&gt;=&lt;/span&gt; {};
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mergeFrom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;flip&lt;/span&gt;(&lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-smi"&gt;assign&lt;/span&gt;);
&lt;span class="pl-k"&gt;let&lt;/span&gt; mergePerson &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;mergeFrom&lt;/span&gt;.&lt;span class="pl-en"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;, a);
&lt;span class="pl-en"&gt;mergePerson&lt;/span&gt;(b); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; == b&lt;/span&gt;
b &lt;span class="pl-k"&gt;=&lt;/span&gt; {};
&lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;assign&lt;/span&gt;(b, a); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; == b&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-over" class="anchor" aria-hidden="true" href="#over"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;over&lt;/h3&gt;
&lt;p&gt;Creates a function that invokes each provided function with the arguments it receives and returns the results.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; and &lt;code&gt;Function.prototype.apply()&lt;/code&gt; to apply each function to the given arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;over&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;fns&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;fns&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;, args));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;minMax&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;over&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;min&lt;/span&gt;, &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;max&lt;/span&gt;);
&lt;span class="pl-en"&gt;minMax&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,5]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-overargs" class="anchor" aria-hidden="true" href="#overargs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;overArgs&lt;/h3&gt;
&lt;p&gt;Creates a function that invokes the provided function with its arguments transformed.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to apply &lt;code&gt;transforms&lt;/code&gt; to &lt;code&gt;args&lt;/code&gt; in combination with the spread operator (&lt;code&gt;...&lt;/code&gt;) to pass the transformed arguments to &lt;code&gt;fn&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;overArgs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;transforms&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; transforms[i](val)));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;square&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;*&lt;/span&gt; n;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;double&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;overArgs&lt;/span&gt;((&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [x, y], [square, double]);
&lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [81, 6]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pipeasyncfunctions" class="anchor" aria-hidden="true" href="#pipeasyncfunctions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pipeAsyncFunctions&lt;/h3&gt;
&lt;p&gt;Performs left-to-right function composition for asynchronous functions.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; with the spread operator (&lt;code&gt;...&lt;/code&gt;) to perform left-to-right function composition using &lt;code&gt;Promise.then()&lt;/code&gt;.
The functions can return a combination of: simple values, &lt;code&gt;Promise&lt;/code&gt;'s, or they can be defined as &lt;code&gt;async&lt;/code&gt; ones returning through &lt;code&gt;await&lt;/code&gt;.
All functions must be unary.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pipeAsyncFunctions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;fns&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arg&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;fns&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;p&lt;/span&gt;, &lt;span class="pl-smi"&gt;f&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-c1"&gt;then&lt;/span&gt;(f), &lt;span class="pl-c1"&gt;Promise&lt;/span&gt;.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(arg));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sum&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;pipeAsyncFunctions&lt;/span&gt;(
  &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
  &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Promise&lt;/span&gt;(&lt;span class="pl-smi"&gt;resolve&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;resolve&lt;/span&gt;(x &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;), &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)),
  &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
  &lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;await&lt;/span&gt; x) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;
);
(&lt;span class="pl-k"&gt;async&lt;/span&gt;() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;sum&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 15 (after one second)&lt;/span&gt;
})();&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pipefunctions" class="anchor" aria-hidden="true" href="#pipefunctions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pipeFunctions&lt;/h3&gt;
&lt;p&gt;Performs left-to-right function composition.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; with the spread operator (&lt;code&gt;...&lt;/code&gt;) to perform left-to-right function composition.
The first (leftmost) function can accept one or more arguments; the remaining functions must be unary.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pipeFunctions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;fns&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;fns&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;f&lt;/span&gt;, &lt;span class="pl-smi"&gt;g&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;(&lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;args)));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;add5&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;multiply&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;*&lt;/span&gt; y;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;multiplyAndAdd5&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;pipeFunctions&lt;/span&gt;(multiply, add5);
&lt;span class="pl-en"&gt;multiplyAndAdd5&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-promisify" class="anchor" aria-hidden="true" href="#promisify"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;promisify&lt;/h3&gt;
&lt;p&gt;Converts an asynchronous function to return a promise.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In Node 8+, you can use &lt;a href="https://nodejs.org/api/util.html#util_util_promisify_original" rel="nofollow"&gt;&lt;code&gt;util.promisify&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Use currying to return a function returning a &lt;code&gt;Promise&lt;/code&gt; that calls the original function.
Use the &lt;code&gt;...rest&lt;/code&gt; operator to pass in all the parameters.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;promisify&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;func&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Promise&lt;/span&gt;((&lt;span class="pl-smi"&gt;resolve&lt;/span&gt;, &lt;span class="pl-smi"&gt;reject&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-en"&gt;func&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;args, (&lt;span class="pl-smi"&gt;err&lt;/span&gt;, &lt;span class="pl-smi"&gt;result&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (err &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;reject&lt;/span&gt;(err) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;resolve&lt;/span&gt;(result)))
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;delay&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;promisify&lt;/span&gt;((&lt;span class="pl-smi"&gt;d&lt;/span&gt;, &lt;span class="pl-smi"&gt;cb&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(cb, d));
&lt;span class="pl-en"&gt;delay&lt;/span&gt;(&lt;span class="pl-c1"&gt;2000&lt;/span&gt;).&lt;span class="pl-c1"&gt;then&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hi!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; // Promise resolves after 2s&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rearg" class="anchor" aria-hidden="true" href="#rearg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rearg&lt;/h3&gt;
&lt;p&gt;Creates a function that invokes the provided function with its arguments arranged according to the specified indexes.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to reorder arguments based on &lt;code&gt;indexes&lt;/code&gt; in combination with the spread operator (&lt;code&gt;...&lt;/code&gt;) to pass the transformed arguments to &lt;code&gt;fn&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;rearg&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;indexes&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;indexes&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; args[i]));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; rearged &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;rearg&lt;/span&gt;(
  &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;c&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [a, b, c];
  },
  [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;]
);
&lt;span class="pl-en"&gt;rearged&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['a', 'b', 'c']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-spreadover" class="anchor" aria-hidden="true" href="#spreadover"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;spreadOver&lt;/h3&gt;
&lt;p&gt;Takes a variadic function and returns a closure that accepts an array of arguments to map to the inputs of the function.&lt;/p&gt;
&lt;p&gt;Use closures and the spread operator (&lt;code&gt;...&lt;/code&gt;) to map the array of arguments to the inputs of the function.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;spreadOver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;argsArr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;argsArr);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;arrayMax&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;spreadOver&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;max&lt;/span&gt;);
&lt;span class="pl-en"&gt;arrayMax&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unary" class="anchor" aria-hidden="true" href="#unary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unary&lt;/h3&gt;
&lt;p&gt;Creates a function that accepts up to one argument, ignoring any additional arguments.&lt;/p&gt;
&lt;p&gt;Call the provided function, &lt;code&gt;fn&lt;/code&gt;, with just the first argument given.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;unary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(val);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;].&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-en"&gt;unary&lt;/span&gt;(parseInt)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [6, 8, 10]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content--array-1" class="anchor" aria-hidden="true" href="#-array-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt; Array&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-all" class="anchor" aria-hidden="true" href="#all"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;all&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the provided predicate function returns &lt;code&gt;true&lt;/code&gt; for all elements in a collection, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.every()&lt;/code&gt; to test if all elements in the collection return &lt;code&gt;true&lt;/code&gt; based on &lt;code&gt;fn&lt;/code&gt;.
Omit the second argument, &lt;code&gt;fn&lt;/code&gt;, to use &lt;code&gt;Boolean&lt;/code&gt; as a default.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;all&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;every&lt;/span&gt;(fn);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;all&lt;/span&gt;([&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;all&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-allequal" class="anchor" aria-hidden="true" href="#allequal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;allEqual&lt;/h3&gt;
&lt;p&gt;Check if all elements in an array are equal.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.every()&lt;/code&gt; to check if all the elements of the array are the same as the first one.
Elements in the array are compared using the strict comparison operator, which does not account for &lt;code&gt;NaN&lt;/code&gt; self-inequality.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;allEqual&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;every&lt;/span&gt;(&lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; arr[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;allEqual&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;allEqual&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-any" class="anchor" aria-hidden="true" href="#any"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;any&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the provided predicate function returns &lt;code&gt;true&lt;/code&gt; for at least one element in a collection, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.some()&lt;/code&gt; to test if any elements in the collection return &lt;code&gt;true&lt;/code&gt; based on &lt;code&gt;fn&lt;/code&gt;.
Omit the second argument, &lt;code&gt;fn&lt;/code&gt;, to use &lt;code&gt;Boolean&lt;/code&gt; as a default.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;any&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;some&lt;/span&gt;(fn);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;any&lt;/span&gt;([&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;], &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;any&lt;/span&gt;([&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-arraytocsv" class="anchor" aria-hidden="true" href="#arraytocsv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;arrayToCSV&lt;/h3&gt;
&lt;p&gt;Converts a 2D array to a comma-separated values (CSV) string.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; and &lt;code&gt;Array.prototype.join(delimiter)&lt;/code&gt; to combine individual 1D arrays (rows) into strings.
Use &lt;code&gt;Array.prototype.join('\n')&lt;/code&gt; to combine all rows into a CSV string, separating each row with a newline.
Omit the second argument, &lt;code&gt;delimiter&lt;/code&gt;, to use a default delimiter of &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;arrayToCSV&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;delimiter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  arr
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-c1"&gt;isNaN&lt;/span&gt;(x) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;"&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;"&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;""&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; x)).&lt;span class="pl-c1"&gt;join&lt;/span&gt;(delimiter))
    .&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;arrayToCSV&lt;/span&gt;([[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '"a","b"\n"c","d"'&lt;/span&gt;
&lt;span class="pl-en"&gt;arrayToCSV&lt;/span&gt;([[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '"a";"b"\n"c";"d"'&lt;/span&gt;
&lt;span class="pl-en"&gt;arrayToCSV&lt;/span&gt;([[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;"b" great&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.1415&lt;/span&gt;]]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '"a","""b"" great"\n"c",3.1415'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bifurcate" class="anchor" aria-hidden="true" href="#bifurcate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bifurcate&lt;/h3&gt;
&lt;p&gt;Splits values into two groups. If an element in &lt;code&gt;filter&lt;/code&gt; is truthy, the corresponding element in the collection belongs to the first group; otherwise, it belongs to the second group.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; and &lt;code&gt;Array.prototype.push()&lt;/code&gt; to add elements to groups, based on &lt;code&gt;filter&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;bifurcate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;filter&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (acc[filter[i] &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;].&lt;span class="pl-c1"&gt;push&lt;/span&gt;(val), acc), [[], []]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;bifurcate&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;beep&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;boop&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ ['beep', 'boop', 'bar'], ['foo'] ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bifurcateby" class="anchor" aria-hidden="true" href="#bifurcateby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bifurcateBy&lt;/h3&gt;
&lt;p&gt;Splits values into two groups according to a predicate function, which specifies which group an element in the input collection belongs to. If the predicate function returns a truthy value, the collection element belongs to the first group; otherwise, it belongs to the second group.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; and &lt;code&gt;Array.prototype.push()&lt;/code&gt; to add elements to groups, based on the value returned by &lt;code&gt;fn&lt;/code&gt; for each element.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;bifurcateBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (acc[&lt;span class="pl-en"&gt;fn&lt;/span&gt;(val, i) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;].&lt;span class="pl-c1"&gt;push&lt;/span&gt;(val), acc), [[], []]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;bifurcateBy&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;beep&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;boop&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ ['beep', 'boop', 'bar'], ['foo'] ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-chunk" class="anchor" aria-hidden="true" href="#chunk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;chunk&lt;/h3&gt;
&lt;p&gt;Chunks an array into smaller arrays of a specified size.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.from()&lt;/code&gt; to create a new array, that fits the number of chunks that will be produced.
Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to map each element of the new array to a chunk the length of &lt;code&gt;size&lt;/code&gt;.
If the original array can't be split evenly, the final chunk will contain the remaining elements.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;chunk&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;size&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;ceil&lt;/span&gt;(&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; size) }, (&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(i &lt;span class="pl-k"&gt;*&lt;/span&gt; size, i &lt;span class="pl-k"&gt;*&lt;/span&gt; size &lt;span class="pl-k"&gt;+&lt;/span&gt; size)
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;chunk&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [[1,2],[3,4],[5]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compact" class="anchor" aria-hidden="true" href="#compact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;compact&lt;/h3&gt;
&lt;p&gt;Removes falsy values from an array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to filter out falsy values (&lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;""&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;compact&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;compact&lt;/span&gt;([&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt;, &lt;span class="pl-c1"&gt;NaN&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;34&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ 1, 2, 3, 'a', 's', 34 ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-countby" class="anchor" aria-hidden="true" href="#countby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;countBy&lt;/h3&gt;
&lt;p&gt;Groups the elements of an array based on the given function and returns the count of elements in each group.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to map the values of an array to a function or property name.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create an object, where the keys are produced from the mapped results.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;countBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt; fn &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; fn &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val[fn]).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    acc[val] &lt;span class="pl-k"&gt;=&lt;/span&gt; (acc[val] &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
  }, {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;countBy&lt;/span&gt;([&lt;span class="pl-c1"&gt;6.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;4.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;6.3&lt;/span&gt;], &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;floor&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {4: 1, 6: 2}&lt;/span&gt;
&lt;span class="pl-en"&gt;countBy&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;one&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;two&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;three&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;length&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {3: 2, 5: 1}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-countoccurrences" class="anchor" aria-hidden="true" href="#countoccurrences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;countOccurrences&lt;/h3&gt;
&lt;p&gt;Counts the occurrences of a value in an array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to increment a counter each time you encounter the specific value inside the array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;countOccurrences&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (v &lt;span class="pl-k"&gt;===&lt;/span&gt; val &lt;span class="pl-k"&gt;?&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; a), &lt;span class="pl-c1"&gt;0&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;countOccurrences&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deepflatten" class="anchor" aria-hidden="true" href="#deepflatten"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;deepFlatten&lt;/h3&gt;
&lt;p&gt;Deep flattens an array.&lt;/p&gt;
&lt;p&gt;Use recursion.
Use &lt;code&gt;Array.prototype.concat()&lt;/code&gt; with an empty array (&lt;code&gt;[]&lt;/code&gt;) and the spread operator (&lt;code&gt;...&lt;/code&gt;) to flatten an array.
Recursively flatten each element that is an array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;deepFlatten&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [].&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;isArray&lt;/span&gt;(v) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;deepFlatten&lt;/span&gt;(v) &lt;span class="pl-k"&gt;:&lt;/span&gt; v)));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;deepFlatten&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, [&lt;span class="pl-c1"&gt;2&lt;/span&gt;], [[&lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;4&lt;/span&gt;], &lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2,3,4,5]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-difference" class="anchor" aria-hidden="true" href="#difference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;difference&lt;/h3&gt;
&lt;p&gt;Returns the difference between two arrays.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Set&lt;/code&gt; from &lt;code&gt;b&lt;/code&gt;, then use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; on &lt;code&gt;a&lt;/code&gt; to only keep values not contained in &lt;code&gt;b&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;difference&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(b);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;s&lt;/span&gt;.&lt;span class="pl-c1"&gt;has&lt;/span&gt;(x));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;difference&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-differenceby" class="anchor" aria-hidden="true" href="#differenceby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;differenceBy&lt;/h3&gt;
&lt;p&gt;Returns the difference between two arrays, after applying the provided function to each array element of both.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Set&lt;/code&gt; by applying &lt;code&gt;fn&lt;/code&gt; to each element in &lt;code&gt;b&lt;/code&gt;, then use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to apply &lt;code&gt;fn&lt;/code&gt; to each element in &lt;code&gt;a&lt;/code&gt;, then &lt;code&gt;Array.prototype.filter()&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;differenceBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(&lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(fn));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(fn).&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;s&lt;/span&gt;.&lt;span class="pl-c1"&gt;has&lt;/span&gt;(el));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;differenceBy&lt;/span&gt;([&lt;span class="pl-c1"&gt;2.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;], [&lt;span class="pl-c1"&gt;2.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.4&lt;/span&gt;], &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;floor&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1]&lt;/span&gt;
&lt;span class="pl-en"&gt;differenceBy&lt;/span&gt;([{ x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }], [{ x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }], &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-c1"&gt;x&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-differencewith" class="anchor" aria-hidden="true" href="#differencewith"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;differenceWith&lt;/h3&gt;
&lt;p&gt;Filters out all values from an array for which the comparator function does not return &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; to find the appropriate values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;differenceWith&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;comp&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(&lt;span class="pl-smi"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;comp&lt;/span&gt;(a, b)) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;differenceWith&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1.9&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;], (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(a) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(b)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 1.2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-drop" class="anchor" aria-hidden="true" href="#drop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;drop&lt;/h3&gt;
&lt;p&gt;Returns a new array with &lt;code&gt;n&lt;/code&gt; elements removed from the left.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to remove the specified number of elements from the left.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;drop&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(n);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;drop&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2,3]&lt;/span&gt;
&lt;span class="pl-en"&gt;drop&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3]&lt;/span&gt;
&lt;span class="pl-en"&gt;drop&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;42&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; []&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dropright" class="anchor" aria-hidden="true" href="#dropright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dropRight&lt;/h3&gt;
&lt;p&gt;Returns a new array with &lt;code&gt;n&lt;/code&gt; elements removed from the right.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to remove the specified number of elements from the right.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;dropRight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;n);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dropRight&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2]&lt;/span&gt;
&lt;span class="pl-en"&gt;dropRight&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1]&lt;/span&gt;
&lt;span class="pl-en"&gt;dropRight&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;42&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; []&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-droprightwhile" class="anchor" aria-hidden="true" href="#droprightwhile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dropRightWhile&lt;/h3&gt;
&lt;p&gt;Removes elements from the end of an array until the passed function returns &lt;code&gt;true&lt;/code&gt;. Returns the remaining elements in the array.&lt;/p&gt;
&lt;p&gt;Loop through the array, using &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to drop the last element of the array until the returned value from the function is &lt;code&gt;true&lt;/code&gt;.
Returns the remaining elements.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;dropRightWhile&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;func&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; rightIndex &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;;
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (rightIndex&lt;span class="pl-k"&gt;--&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;func&lt;/span&gt;(arr[rightIndex]));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, rightIndex &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dropRightWhile&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dropwhile" class="anchor" aria-hidden="true" href="#dropwhile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dropWhile&lt;/h3&gt;
&lt;p&gt;Removes elements in an array until the passed function returns &lt;code&gt;true&lt;/code&gt;. Returns the remaining elements in the array.&lt;/p&gt;
&lt;p&gt;Loop through the array, using &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to drop the first element of the array until the returned value from the function is &lt;code&gt;true&lt;/code&gt;.
Returns the remaining elements.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;dropWhile&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;func&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;func&lt;/span&gt;(arr[&lt;span class="pl-c1"&gt;0&lt;/span&gt;])) arr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; arr;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dropWhile&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3,4]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-everynth" class="anchor" aria-hidden="true" href="#everynth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;everyNth&lt;/h3&gt;
&lt;p&gt;Returns every nth element in an array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to create a new array that contains every nth element of a given array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;everyNth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;nth&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;((&lt;span class="pl-smi"&gt;e&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; i &lt;span class="pl-k"&gt;%&lt;/span&gt; nth &lt;span class="pl-k"&gt;===&lt;/span&gt; nth &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;everyNth&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ 2, 4, 6 ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-filterfalsy" class="anchor" aria-hidden="true" href="#filterfalsy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;filterFalsy&lt;/h3&gt;
&lt;p&gt;Filters out the falsy values in an array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to get an array containing only truthy values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;filterFalsy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;filterFalsy&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, {}, &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sample&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [true, {}, 'sample', 1]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-filternonunique" class="anchor" aria-hidden="true" href="#filternonunique"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;filterNonUnique&lt;/h3&gt;
&lt;p&gt;Filters out the non-unique values in an array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; for an array containing only the unique values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;filterNonUnique&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;indexOf&lt;/span&gt;(i) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;lastIndexOf&lt;/span&gt;(i));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;filterNonUnique&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 3, 5]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-filternonuniqueby" class="anchor" aria-hidden="true" href="#filternonuniqueby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;filterNonUniqueBy&lt;/h3&gt;
&lt;p&gt;Filters out the non-unique values in an array, based on a provided comparator function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.every()&lt;/code&gt; for an array containing only the unique values, based on the comparator function, &lt;code&gt;fn&lt;/code&gt;.
The comparator function takes four arguments: the values of the two elements being compared and their indexes.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;filterNonUniqueBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;((&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;every&lt;/span&gt;((&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;j&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (i &lt;span class="pl-k"&gt;===&lt;/span&gt; j) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(v, x, i, j)));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;filterNonUniqueBy&lt;/span&gt;(
  [
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
  ],
  (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt;
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ { id: 2, value: 'c' } ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-findlast" class="anchor" aria-hidden="true" href="#findlast"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;findLast&lt;/h3&gt;
&lt;p&gt;Returns the last element for which the provided function returns a truthy value.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to remove elements for which &lt;code&gt;fn&lt;/code&gt; returns falsy values, &lt;code&gt;Array.prototype.pop()&lt;/code&gt; to get the last one.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;findLast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(fn).&lt;span class="pl-c1"&gt;pop&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;findLast&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-findlastindex" class="anchor" aria-hidden="true" href="#findlastindex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;findLastIndex&lt;/h3&gt;
&lt;p&gt;Returns the index of the last element for which the provided function returns a truthy value.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to map each element to an array with its index and value.
Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to remove elements for which &lt;code&gt;fn&lt;/code&gt; returns falsy values, &lt;code&gt;Array.prototype.pop()&lt;/code&gt; to get the last one.
&lt;code&gt;-1&lt;/code&gt; is the default value when not found.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;findLastIndex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  (arr
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [i, val])
    .&lt;span class="pl-en"&gt;filter&lt;/span&gt;(([&lt;span class="pl-smi"&gt;i&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(val, i, arr))
    .&lt;span class="pl-c1"&gt;pop&lt;/span&gt;() &lt;span class="pl-k"&gt;||&lt;/span&gt; [&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;])[&lt;span class="pl-c1"&gt;0&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;findLastIndex&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2 (index of the value 3)&lt;/span&gt;
&lt;span class="pl-en"&gt;findLastIndex&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; -1 (default value when not found)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-flatten" class="anchor" aria-hidden="true" href="#flatten"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;flatten&lt;/h3&gt;
&lt;p&gt;Flattens an array up to the specified depth.&lt;/p&gt;
&lt;p&gt;Use recursion, decrementing &lt;code&gt;depth&lt;/code&gt; by 1 for each level of depth.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; and &lt;code&gt;Array.prototype.concat()&lt;/code&gt; to merge elements or arrays.
Base case, for &lt;code&gt;depth&lt;/code&gt; equal to &lt;code&gt;1&lt;/code&gt; stops recursion.
Omit the second argument, &lt;code&gt;depth&lt;/code&gt; to flatten only to a depth of &lt;code&gt;1&lt;/code&gt; (single flatten).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;flatten&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;depth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(depth &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;isArray&lt;/span&gt;(v) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;flatten&lt;/span&gt;(v, depth &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt; v), []);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;flatten&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, [&lt;span class="pl-c1"&gt;2&lt;/span&gt;], &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3, 4]&lt;/span&gt;
&lt;span class="pl-en"&gt;flatten&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, [&lt;span class="pl-c1"&gt;3&lt;/span&gt;, [&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;], &lt;span class="pl-c1"&gt;6&lt;/span&gt;], &lt;span class="pl-c1"&gt;7&lt;/span&gt;], &lt;span class="pl-c1"&gt;8&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3, [4, 5], 6, 7, 8]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-foreachright" class="anchor" aria-hidden="true" href="#foreachright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;forEachRight&lt;/h3&gt;
&lt;p&gt;Executes a provided function once for each array element, starting from the array's last element.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice(0)&lt;/code&gt; to clone the given array, &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; to reverse it and &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; to iterate over the reversed array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;forEachRight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;callback&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  arr
    .&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;reverse&lt;/span&gt;()
    .&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(callback);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;forEachRight&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(val)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '4', '3', '2', '1'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-groupby" class="anchor" aria-hidden="true" href="#groupby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;groupBy&lt;/h3&gt;
&lt;p&gt;Groups the elements of an array based on the given function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to map the values of an array to a function or property name.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create an object, where the keys are produced from the mapped results.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;groupBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt; fn &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; fn &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val[fn]).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    acc[val] &lt;span class="pl-k"&gt;=&lt;/span&gt; (acc[val] &lt;span class="pl-k"&gt;||&lt;/span&gt; []).&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(arr[i]);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
  }, {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;groupBy&lt;/span&gt;([&lt;span class="pl-c1"&gt;6.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;4.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;6.3&lt;/span&gt;], &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;floor&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {4: [4.2], 6: [6.1, 6.3]}&lt;/span&gt;
&lt;span class="pl-en"&gt;groupBy&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;one&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;two&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;three&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;length&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {3: ['one', 'two'], 5: ['three']}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-head" class="anchor" aria-hidden="true" href="#head"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;head&lt;/h3&gt;
&lt;p&gt;Returns the head of a list.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;arr[0]&lt;/code&gt; to return the first element of the passed array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;head&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; arr[&lt;span class="pl-c1"&gt;0&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;head&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-includesall" class="anchor" aria-hidden="true" href="#includesall"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;includesAll&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if all the elements ιν &lt;code&gt;values&lt;/code&gt; are included in &lt;code&gt;arr&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.every()&lt;/code&gt; and &lt;code&gt;Array.prototype.includes()&lt;/code&gt; to check if all elements of &lt;code&gt;values&lt;/code&gt; are included in &lt;code&gt;arr&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;includesAll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;values&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;values&lt;/span&gt;.&lt;span class="pl-en"&gt;every&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(v));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;includesAll&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;includesAll&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-includesany" class="anchor" aria-hidden="true" href="#includesany"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;includesAny&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if at least one element of values is included in arr , &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.some()&lt;/code&gt; and &lt;code&gt;Array.prototype.includes()&lt;/code&gt; to check if at least one element of &lt;code&gt;values&lt;/code&gt; is included in &lt;code&gt;arr&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;includesAny&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;values&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;values&lt;/span&gt;.&lt;span class="pl-en"&gt;some&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(v));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;includesAny&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;includesAny&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], [&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-indexofall" class="anchor" aria-hidden="true" href="#indexofall"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;indexOfAll&lt;/h3&gt;
&lt;p&gt;Returns all indices of &lt;code&gt;val&lt;/code&gt; in an array.
If &lt;code&gt;val&lt;/code&gt; never occurs, returns &lt;code&gt;[]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to loop over elements and store indices for matching elements.
Return the array of indices.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;indexOfAll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (el &lt;span class="pl-k"&gt;===&lt;/span&gt; val &lt;span class="pl-k"&gt;?&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;acc, i] &lt;span class="pl-k"&gt;:&lt;/span&gt; acc), []);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;indexOfAll&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [0,3]&lt;/span&gt;
&lt;span class="pl-en"&gt;indexOfAll&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;4&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; []&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-initial" class="anchor" aria-hidden="true" href="#initial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;initial&lt;/h3&gt;
&lt;p&gt;Returns all the elements of an array except the last one.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;arr.slice(0,-1)&lt;/code&gt; to return all but the last element of the array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;initial&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;initial&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-initialize2darray" class="anchor" aria-hidden="true" href="#initialize2darray"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;initialize2DArray&lt;/h3&gt;
&lt;p&gt;Initializes a 2D array of given width and height and value.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to generate h rows where each is a new array of size w initialize with value. If the value is not provided, default to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;initialize2DArray&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;w&lt;/span&gt;, &lt;span class="pl-smi"&gt;h&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; h }).&lt;span class="pl-en"&gt;map&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; w }).&lt;span class="pl-en"&gt;fill&lt;/span&gt;(val));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;initialize2DArray&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [[0,0], [0,0]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-initializearraywithrange" class="anchor" aria-hidden="true" href="#initializearraywithrange"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;initializeArrayWithRange&lt;/h3&gt;
&lt;p&gt;Initializes an array containing the numbers in the specified range where &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are inclusive with their common difference &lt;code&gt;step&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.from()&lt;/code&gt; to create an array of the desired length, &lt;code&gt;(end - start + 1)/step&lt;/code&gt;, and a map function to fill it with the desired values in the given range.
You can omit &lt;code&gt;start&lt;/code&gt; to use a default value of &lt;code&gt;0&lt;/code&gt;.
You can omit &lt;code&gt;step&lt;/code&gt; to use a default value of &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;initializeArrayWithRange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;end&lt;/span&gt;, &lt;span class="pl-smi"&gt;start&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-smi"&gt;step&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;ceil&lt;/span&gt;((end &lt;span class="pl-k"&gt;-&lt;/span&gt; start &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; step) }, (&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; i &lt;span class="pl-k"&gt;*&lt;/span&gt; step &lt;span class="pl-k"&gt;+&lt;/span&gt; start);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;initializeArrayWithRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [0,1,2,3,4,5]&lt;/span&gt;
&lt;span class="pl-en"&gt;initializeArrayWithRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3,4,5,6,7]&lt;/span&gt;
&lt;span class="pl-en"&gt;initializeArrayWithRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [0,2,4,6,8]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-initializearraywithrangeright" class="anchor" aria-hidden="true" href="#initializearraywithrangeright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;initializeArrayWithRangeRight&lt;/h3&gt;
&lt;p&gt;Initializes an array containing the numbers in the specified range (in reverse) where &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are inclusive with their common difference &lt;code&gt;step&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.from(Math.ceil((end+1-start)/step))&lt;/code&gt; to create an array of the desired length(the amounts of elements is equal to &lt;code&gt;(end-start)/step&lt;/code&gt; or &lt;code&gt;(end+1-start)/step&lt;/code&gt; for inclusive end), &lt;code&gt;Array.prototype.map()&lt;/code&gt; to fill with the desired values in a range.
You can omit &lt;code&gt;start&lt;/code&gt; to use a default value of &lt;code&gt;0&lt;/code&gt;.
You can omit &lt;code&gt;step&lt;/code&gt; to use a default value of &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;initializeArrayWithRangeRight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;end&lt;/span&gt;, &lt;span class="pl-smi"&gt;start&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-smi"&gt;step&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;ceil&lt;/span&gt;((end &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; start) &lt;span class="pl-k"&gt;/&lt;/span&gt; step) }).&lt;span class="pl-en"&gt;map&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;, &lt;span class="pl-smi"&gt;arr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; i &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;*&lt;/span&gt; step &lt;span class="pl-k"&gt;+&lt;/span&gt; start
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;initializeArrayWithRangeRight&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [5,4,3,2,1,0]&lt;/span&gt;
&lt;span class="pl-en"&gt;initializeArrayWithRangeRight&lt;/span&gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [7,6,5,4,3]&lt;/span&gt;
&lt;span class="pl-en"&gt;initializeArrayWithRangeRight&lt;/span&gt;(&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [8,6,4,2,0]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-initializearraywithvalues" class="anchor" aria-hidden="true" href="#initializearraywithvalues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;initializeArrayWithValues&lt;/h3&gt;
&lt;p&gt;Initializes and fills an array with the specified values.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array(n)&lt;/code&gt; to create an array of the desired length, &lt;code&gt;fill(v)&lt;/code&gt; to fill it with the desired values.
You can omit &lt;code&gt;val&lt;/code&gt; to use a default value of &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;initializeArrayWithValues&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(n).&lt;span class="pl-en"&gt;fill&lt;/span&gt;(val);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;initializeArrayWithValues&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2, 2, 2, 2, 2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-initializendarray" class="anchor" aria-hidden="true" href="#initializendarray"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;initializeNDArray&lt;/h3&gt;
&lt;p&gt;Create a n-dimensional array with given value.&lt;/p&gt;
&lt;p&gt;Use recursion.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to generate rows where each is a new array initialized using &lt;code&gt;initializeNDArray&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;initializeNDArray&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    &lt;span class="pl-k"&gt;?&lt;/span&gt; val
    &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; args[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] }).&lt;span class="pl-en"&gt;map&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;initializeNDArray&lt;/span&gt;(val, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;initializeNDArray&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,1,1]&lt;/span&gt;
&lt;span class="pl-en"&gt;initializeNDArray&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [[[5,5],[5,5]],[[5,5],[5,5]]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-intersection" class="anchor" aria-hidden="true" href="#intersection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;intersection&lt;/h3&gt;
&lt;p&gt;Returns a list of elements that exist in both arrays.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Set&lt;/code&gt; from &lt;code&gt;b&lt;/code&gt;, then use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; on &lt;code&gt;a&lt;/code&gt; to only keep values contained in &lt;code&gt;b&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;intersection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(b);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt;.&lt;span class="pl-c1"&gt;has&lt;/span&gt;(x));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;intersection&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2, 3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-intersectionby" class="anchor" aria-hidden="true" href="#intersectionby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;intersectionBy&lt;/h3&gt;
&lt;p&gt;Returns a list of elements that exist in both arrays, after applying the provided function to each array element of both.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Set&lt;/code&gt; by applying &lt;code&gt;fn&lt;/code&gt; to all elements in &lt;code&gt;b&lt;/code&gt;, then use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; on &lt;code&gt;a&lt;/code&gt; to only keep elements, which produce values contained in &lt;code&gt;b&lt;/code&gt; when &lt;code&gt;fn&lt;/code&gt; is applied to them.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;intersectionBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(&lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(fn));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt;.&lt;span class="pl-c1"&gt;has&lt;/span&gt;(&lt;span class="pl-en"&gt;fn&lt;/span&gt;(x)));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;intersectionBy&lt;/span&gt;([&lt;span class="pl-c1"&gt;2.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;], [&lt;span class="pl-c1"&gt;2.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.4&lt;/span&gt;], &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;floor&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2.1]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-intersectionwith" class="anchor" aria-hidden="true" href="#intersectionwith"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;intersectionWith&lt;/h3&gt;
&lt;p&gt;Returns a list of elements that exist in both arrays, using a provided comparator function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; in combination with the provided comparator to determine intersecting values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;intersectionWith&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;comp&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(&lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;comp&lt;/span&gt;(x, y)) &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;intersectionWith&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1.9&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.9&lt;/span&gt;], (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(a) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(b)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1.5, 3, 0]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issorted" class="anchor" aria-hidden="true" href="#issorted"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isSorted&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;1&lt;/code&gt; if the array is sorted in ascending order, &lt;code&gt;-1&lt;/code&gt; if it is sorted in descending order or &lt;code&gt;0&lt;/code&gt; if it is not sorted.&lt;/p&gt;
&lt;p&gt;Calculate the ordering &lt;code&gt;direction&lt;/code&gt; for the first two elements.
Use &lt;code&gt;Object.entries()&lt;/code&gt; to loop over array objects and compare them in pairs.
Return &lt;code&gt;0&lt;/code&gt; if the &lt;code&gt;direction&lt;/code&gt; changes or the &lt;code&gt;direction&lt;/code&gt; if the last element is reached.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isSorted&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;(arr[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;-&lt;/span&gt; arr[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]);
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;let&lt;/span&gt; [i, val] &lt;span class="pl-k"&gt;of&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;entries&lt;/span&gt;()) {
    direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;direction &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;(arr[i &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;-&lt;/span&gt; arr[i]) &lt;span class="pl-k"&gt;:&lt;/span&gt; direction;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (i &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;direction &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; direction;
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; ((val &lt;span class="pl-k"&gt;-&lt;/span&gt; arr[i &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;]) &lt;span class="pl-k"&gt;*&lt;/span&gt; direction &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  }
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isSorted&lt;/span&gt;([&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;
&lt;span class="pl-en"&gt;isSorted&lt;/span&gt;([&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; -1&lt;/span&gt;
&lt;span class="pl-en"&gt;isSorted&lt;/span&gt;([&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-join" class="anchor" aria-hidden="true" href="#join"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;join&lt;/h3&gt;
&lt;p&gt;Joins all elements of an array into a string and returns this string.
Uses a separator and an end separator.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to combine elements into a string.
Omit the second argument, &lt;code&gt;separator&lt;/code&gt;, to use a default separator of &lt;code&gt;','&lt;/code&gt;.
Omit the third argument, &lt;code&gt;end&lt;/code&gt;, to use the same value as &lt;code&gt;separator&lt;/code&gt; by default.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;join&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;separator&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;end&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;separator&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      i &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
        &lt;span class="pl-k"&gt;?&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val &lt;span class="pl-k"&gt;+&lt;/span&gt; end
        &lt;span class="pl-k"&gt;:&lt;/span&gt; i &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-k"&gt;?&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val
        &lt;span class="pl-k"&gt;:&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val &lt;span class="pl-k"&gt;+&lt;/span&gt; separator,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;join&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pen&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pineapple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pen&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "pen,pineapple,apple&amp;amp;pen"&lt;/span&gt;
&lt;span class="pl-en"&gt;join&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pen&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pineapple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pen&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "pen,pineapple,apple,pen"&lt;/span&gt;
&lt;span class="pl-en"&gt;join&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pen&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pineapple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pen&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "pen,pineapple,apple,pen"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-jsontocsv-" class="anchor" aria-hidden="true" href="#jsontocsv-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSONtoCSV &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Converts an array of objects to a comma-separated values (CSV) string that contains only the &lt;code&gt;columns&lt;/code&gt; specified.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.join(delimiter)&lt;/code&gt; to combine all the names in &lt;code&gt;columns&lt;/code&gt; to create the first row.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; and &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create a row for each object, substituting non-existent values with empty strings and only mapping values in &lt;code&gt;columns&lt;/code&gt;.
Use &lt;code&gt;Array.prototype.join('\n')&lt;/code&gt; to combine all rows into a string.
Omit the third argument, &lt;code&gt;delimiter&lt;/code&gt;, to use a default delimiter of &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONtoCSV&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;columns&lt;/span&gt;, &lt;span class="pl-smi"&gt;delimiter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  [
    &lt;span class="pl-smi"&gt;columns&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(delimiter),
    &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-smi"&gt;columns&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
        (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;acc&lt;span class="pl-pse"&gt;}${&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; delimiter&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;"&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;obj[key] &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; obj[key]&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      )
    )
  ].&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;JSONtoCSV&lt;/span&gt;([{ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; }, { a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }, { b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt; }], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'a,b\n"1","2"\n"3","4"\n"6",""\n"","7"'&lt;/span&gt;
&lt;span class="pl-en"&gt;JSONtoCSV&lt;/span&gt;([{ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; }, { a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }, { b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt; }], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'a;b\n"1";"2"\n"3";"4"\n"6";""\n"";"7"'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-last" class="anchor" aria-hidden="true" href="#last"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;last&lt;/h3&gt;
&lt;p&gt;Returns the last element in an array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;arr.length - 1&lt;/code&gt; to compute the index of the last element of the given array and returning it.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;last&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; arr[&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;last&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-longestitem" class="anchor" aria-hidden="true" href="#longestitem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;longestItem&lt;/h3&gt;
&lt;p&gt;Takes any number of iterable objects or objects with a &lt;code&gt;length&lt;/code&gt; property and returns the longest one.
If multiple objects have the same length, the first one will be returned.
Returns &lt;code&gt;undefined&lt;/code&gt; if no arguments are provided.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt;, comparing the &lt;code&gt;length&lt;/code&gt; of objects to find the longest one.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;longestItem&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;vals&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;vals&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; x &lt;span class="pl-k"&gt;:&lt;/span&gt; a));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;longestItem&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;this&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;is&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;testcase&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'testcase'&lt;/span&gt;
&lt;span class="pl-en"&gt;longestItem&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ab&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;abc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'abc'&lt;/span&gt;
&lt;span class="pl-en"&gt;longestItem&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ab&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;abc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;abcd&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'abcd'&lt;/span&gt;
&lt;span class="pl-en"&gt;longestItem&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3, 4, 5]&lt;/span&gt;
&lt;span class="pl-en"&gt;longestItem&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foobar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'foobar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mapobject-" class="anchor" aria-hidden="true" href="#mapobject-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mapObject &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Maps the values of an array to an object using a function, where the key-value pairs consist of the stringified value as the key and the mapped value.&lt;/p&gt;
&lt;p&gt;Use an anonymous inner function scope to declare an undefined memory space, using closures to store a return value. Use a new &lt;code&gt;Array&lt;/code&gt; to store the array with a map of the function over its data set and a comma operator to return a second step, without needing to move from one context to another (due to closures and order of operations).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mapObject&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  (&lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (
    (a &lt;span class="pl-k"&gt;=&lt;/span&gt; [arr, &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(fn)]), a[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;ind&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((acc[val] &lt;span class="pl-k"&gt;=&lt;/span&gt; a[&lt;span class="pl-c1"&gt;1&lt;/span&gt;][ind]), acc), {})
  ))();&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;squareIt&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;mapObject&lt;/span&gt;(arr, &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a &lt;span class="pl-k"&gt;*&lt;/span&gt; a);
&lt;span class="pl-en"&gt;squareIt&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { 1: 1, 2: 4, 3: 9 }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-maxn" class="anchor" aria-hidden="true" href="#maxn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;maxN&lt;/h3&gt;
&lt;p&gt;Returns the &lt;code&gt;n&lt;/code&gt; maximum elements from the provided array.
If &lt;code&gt;n&lt;/code&gt; is greater than or equal to the provided array's length, then return the original array (sorted in descending order).&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.sort()&lt;/code&gt; combined with the spread operator (&lt;code&gt;...&lt;/code&gt;) to create a shallow clone of the array and sort it in descending order.
Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to get the specified number of elements.
Omit the second argument, &lt;code&gt;n&lt;/code&gt;, to get a one-element array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;maxN&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;arr].&lt;span class="pl-c1"&gt;sort&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; b &lt;span class="pl-k"&gt;-&lt;/span&gt; a).&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, n);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;maxN&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3]&lt;/span&gt;
&lt;span class="pl-en"&gt;maxN&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3,2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-minn" class="anchor" aria-hidden="true" href="#minn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;minN&lt;/h3&gt;
&lt;p&gt;Returns the &lt;code&gt;n&lt;/code&gt; minimum elements from the provided array.
If &lt;code&gt;n&lt;/code&gt; is greater than or equal to the provided array's length, then return the original array (sorted in ascending order).&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.sort()&lt;/code&gt; combined with the spread operator (&lt;code&gt;...&lt;/code&gt;) to create a shallow clone of the array and sort it in ascending order.
Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to get the specified number of elements.
Omit the second argument, &lt;code&gt;n&lt;/code&gt;, to get a one-element array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;minN&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;arr].&lt;span class="pl-c1"&gt;sort&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a &lt;span class="pl-k"&gt;-&lt;/span&gt; b).&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, n);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;minN&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1]&lt;/span&gt;
&lt;span class="pl-en"&gt;minN&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-none" class="anchor" aria-hidden="true" href="#none"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;none&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the provided predicate function returns &lt;code&gt;false&lt;/code&gt; for all elements in a collection, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.some()&lt;/code&gt; to test if any elements in the collection return &lt;code&gt;true&lt;/code&gt; based on &lt;code&gt;fn&lt;/code&gt;.
Omit the second argument, &lt;code&gt;fn&lt;/code&gt;, to use &lt;code&gt;Boolean&lt;/code&gt; as a default.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;none&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;some&lt;/span&gt;(fn);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;none&lt;/span&gt;([&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;], &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;none&lt;/span&gt;([&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-nthelement" class="anchor" aria-hidden="true" href="#nthelement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nthElement&lt;/h3&gt;
&lt;p&gt;Returns the nth element of an array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to get an array containing the nth element at the first place.
If the index is out of bounds, return &lt;code&gt;undefined&lt;/code&gt;.
Omit the second argument, &lt;code&gt;n&lt;/code&gt;, to get the first element of the array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;nthElement&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (n &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(n) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(n, n &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))[&lt;span class="pl-c1"&gt;0&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;nthElement&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'b'&lt;/span&gt;
&lt;span class="pl-en"&gt;nthElement&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'a'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-offset" class="anchor" aria-hidden="true" href="#offset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;offset&lt;/h3&gt;
&lt;p&gt;Moves the specified amount of elements to the end of the array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; twice to get the elements after the specified index and the elements before that.
Use the spread operator(&lt;code&gt;...&lt;/code&gt;) to combine the two into one array.
If &lt;code&gt;offset&lt;/code&gt; is negative, the elements will be moved from end to start.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;offset&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;offset&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(offset), &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, offset)];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;offset&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3, 4, 5, 1, 2]&lt;/span&gt;
&lt;span class="pl-en"&gt;offset&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;], &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [4, 5, 1, 2, 3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-partition" class="anchor" aria-hidden="true" href="#partition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;partition&lt;/h3&gt;
&lt;p&gt;Groups the elements into two arrays, depending on the provided function's truthiness for each element.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create an array of two arrays.
Use &lt;code&gt;Array.prototype.push()&lt;/code&gt; to add elements for which &lt;code&gt;fn&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; to the first array and elements for which &lt;code&gt;fn&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; to the second one.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;partition&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;, &lt;span class="pl-smi"&gt;arr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      acc[&lt;span class="pl-en"&gt;fn&lt;/span&gt;(val, i, arr) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;].&lt;span class="pl-c1"&gt;push&lt;/span&gt;(val);
      &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
    },
    [[], []]
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;users&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [{ user&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;barney&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;36&lt;/span&gt;, active&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; }, { user&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fred&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;40&lt;/span&gt;, active&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }];
&lt;span class="pl-en"&gt;partition&lt;/span&gt;(users, &lt;span class="pl-smi"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;o&lt;/span&gt;.&lt;span class="pl-smi"&gt;active&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [[{ 'user': 'fred',    'age': 40, 'active': true }],[{ 'user': 'barney',  'age': 36, 'active': false }]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-permutations-" class="anchor" aria-hidden="true" href="#permutations-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;permutations &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Generates all permutations of an array's elements (contains duplicates).&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;WARNING&lt;/strong&gt;: This function's execution time increases exponentially with each array element. Anything more than 8 to 10 entries will cause your browser to hang as it tries to solve all the different combinations.&lt;/p&gt;
&lt;p&gt;Use recursion.
For each element in the given array, create all the partial permutations for the rest of its elements.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to combine the element with each partial permutation, then &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to combine all permutations in one array.
Base cases are for array &lt;code&gt;length&lt;/code&gt; equal to &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;permutations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; [arr, [arr[&lt;span class="pl-c1"&gt;1&lt;/span&gt;], arr[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]]] &lt;span class="pl-k"&gt;:&lt;/span&gt; arr;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;item&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(
        &lt;span class="pl-en"&gt;permutations&lt;/span&gt;([&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, i), &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(i &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)]).&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [item, &lt;span class="pl-k"&gt;...&lt;/span&gt;val])
      ),
    []
  );
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;permutations&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;33&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ [ 1, 33, 5 ], [ 1, 5, 33 ], [ 33, 1, 5 ], [ 33, 5, 1 ], [ 5, 1, 33 ], [ 5, 33, 1 ] ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pull" class="anchor" aria-hidden="true" href="#pull"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pull&lt;/h3&gt;
&lt;p&gt;Mutates the original array to filter out the values specified.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.includes()&lt;/code&gt; to pull out the values that are not needed.
Use &lt;code&gt;Array.prototype.length = 0&lt;/code&gt; to mutate the passed in an array by resetting it's length to zero and &lt;code&gt;Array.prototype.push()&lt;/code&gt; to re-populate it with only the pulled values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pull&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; argState &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;isArray&lt;/span&gt;(args[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;?&lt;/span&gt; args[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;:&lt;/span&gt; args;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; pulled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;((&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;argState&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(v));
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-smi"&gt;pulled&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; myArray &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-en"&gt;pull&lt;/span&gt;(myArray, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; myArray = [ 'b', 'b' ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pullatindex-" class="anchor" aria-hidden="true" href="#pullatindex-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pullAtIndex &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Mutates the original array to filter out the values at the specified indexes.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.includes()&lt;/code&gt; to pull out the values that are not needed.
Use &lt;code&gt;Array.prototype.length = 0&lt;/code&gt; to mutate the passed in an array by resetting it's length to zero and &lt;code&gt;Array.prototype.push()&lt;/code&gt; to re-populate it with only the pulled values.
Use &lt;code&gt;Array.prototype.push()&lt;/code&gt; to keep track of pulled values&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pullAtIndex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;pullArr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; removed &lt;span class="pl-k"&gt;=&lt;/span&gt; [];
  &lt;span class="pl-k"&gt;let&lt;/span&gt; pulled &lt;span class="pl-k"&gt;=&lt;/span&gt; arr
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;pullArr&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(i) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;removed&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v) &lt;span class="pl-k"&gt;:&lt;/span&gt; v))
    .&lt;span class="pl-en"&gt;filter&lt;/span&gt;((&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;pullArr&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(i));
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-smi"&gt;pulled&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; removed;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; myArray &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-k"&gt;let&lt;/span&gt; pulled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;pullAtIndex&lt;/span&gt;(myArray, [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; myArray = [ 'a', 'c' ] , pulled = [ 'b', 'd' ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pullatvalue-" class="anchor" aria-hidden="true" href="#pullatvalue-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pullAtValue &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Mutates the original array to filter out the values specified. Returns the removed elements.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.includes()&lt;/code&gt; to pull out the values that are not needed.
Use &lt;code&gt;Array.prototype.length = 0&lt;/code&gt; to mutate the passed in an array by resetting it's length to zero and &lt;code&gt;Array.prototype.push()&lt;/code&gt; to re-populate it with only the pulled values.
Use &lt;code&gt;Array.prototype.push()&lt;/code&gt; to keep track of pulled values&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pullAtValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;pullArr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; removed &lt;span class="pl-k"&gt;=&lt;/span&gt; [],
    pushToRemove &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;((&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;pullArr&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(v) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;removed&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v) &lt;span class="pl-k"&gt;:&lt;/span&gt; v)),
    mutateTo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;((&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;pullArr&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(v));
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-smi"&gt;mutateTo&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; removed;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; myArray &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-k"&gt;let&lt;/span&gt; pulled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;pullAtValue&lt;/span&gt;(myArray, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; myArray = [ 'a', 'c' ] , pulled = [ 'b', 'd' ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pullby-" class="anchor" aria-hidden="true" href="#pullby-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pullBy &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Mutates the original array to filter out the values specified, based on a given iterator function.&lt;/p&gt;
&lt;p&gt;Check if the last argument provided in a function.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to apply the iterator function &lt;code&gt;fn&lt;/code&gt; to all array elements.
Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.includes()&lt;/code&gt; to pull out the values that are not needed.
Use &lt;code&gt;Array.prototype.length = 0&lt;/code&gt; to mutate the passed in an array by resetting it's length to zero and &lt;code&gt;Array.prototype.push()&lt;/code&gt; to re-populate it with only the pulled values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pullBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; fn &lt;span class="pl-k"&gt;=&lt;/span&gt; length &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; args[length &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;;
  fn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; fn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; (&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;pop&lt;/span&gt;(), fn) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; argState &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;isArray&lt;/span&gt;(args[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;?&lt;/span&gt; args[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;:&lt;/span&gt; args).&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(val));
  &lt;span class="pl-k"&gt;let&lt;/span&gt; pulled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;((&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;argState&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(&lt;span class="pl-en"&gt;fn&lt;/span&gt;(v)));
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-smi"&gt;pulled&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; myArray &lt;span class="pl-k"&gt;=&lt;/span&gt; [{ x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }, { x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; }, { x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }];
&lt;span class="pl-en"&gt;pullBy&lt;/span&gt;(myArray, [{ x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }, { x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; }], &lt;span class="pl-smi"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;o&lt;/span&gt;.&lt;span class="pl-c1"&gt;x&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; myArray = [{ x: 2 }]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reducedfilter" class="anchor" aria-hidden="true" href="#reducedfilter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;reducedFilter&lt;/h3&gt;
&lt;p&gt;Filter an array of objects based on a condition while also filtering out unspecified keys.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to filter the array based on the predicate &lt;code&gt;fn&lt;/code&gt; so that it returns the objects for which the condition returned a truthy value.
On the filtered array, use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to return the new object using &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to filter out the keys which were not supplied as the &lt;code&gt;keys&lt;/code&gt; argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;reducedFilter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-smi"&gt;keys&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(fn).&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;keys&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      acc[key] &lt;span class="pl-k"&gt;=&lt;/span&gt; el[key];
      &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
    }, {})
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  {
    id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
    name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;john&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;
  },
  {
    id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
    name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mike&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;
  }
];

&lt;span class="pl-en"&gt;reducedFilter&lt;/span&gt;(data, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-smi"&gt;item&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;item&lt;/span&gt;.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{ id: 2, name: 'mike'}]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reducesuccessive" class="anchor" aria-hidden="true" href="#reducesuccessive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;reduceSuccessive&lt;/h3&gt;
&lt;p&gt;Applies a function against an accumulator and each element in the array (from left to right), returning an array of successively reduced values.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to apply the given function to the given array, storing each new result.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;reduceSuccessive&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;acc&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;res&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;, &lt;span class="pl-smi"&gt;arr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;res&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(&lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-smi"&gt;res&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], val, i, arr)), res), [acc]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;reduceSuccessive&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;], (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val, &lt;span class="pl-c1"&gt;0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [0, 1, 3, 6, 10, 15, 21]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reducewhich" class="anchor" aria-hidden="true" href="#reducewhich"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;reduceWhich&lt;/h3&gt;
&lt;p&gt;Returns the minimum/maximum value of an array, after applying the provided function to set comparing rule.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; in combination with the &lt;code&gt;comparator&lt;/code&gt; function to get the appropriate element in the array.
You can omit the second parameter, &lt;code&gt;comparator&lt;/code&gt;, to use the default one that returns the minimum element in the array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;reduceWhich&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (arr, &lt;span class="pl-en"&gt;comparator&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a &lt;span class="pl-k"&gt;-&lt;/span&gt; b) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;comparator&lt;/span&gt;(a, b) &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; b &lt;span class="pl-k"&gt;:&lt;/span&gt; a));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;reduceWhich&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;
&lt;span class="pl-en"&gt;reduceWhich&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;], (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; b &lt;span class="pl-k"&gt;-&lt;/span&gt; a); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
&lt;span class="pl-en"&gt;reduceWhich&lt;/span&gt;(
  [{ name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Tom&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; }, { name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Jack&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt; }, { name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Lucy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;9&lt;/span&gt; }],
  (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-smi"&gt;age&lt;/span&gt;
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {name: "Lucy", age: 9}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reject" class="anchor" aria-hidden="true" href="#reject"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;reject&lt;/h3&gt;
&lt;p&gt;Filters an array's values based on a predicate function, returning only values for which the predicate function returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; in combination with the predicate function, &lt;code&gt;pred&lt;/code&gt;, to return only the values for which &lt;code&gt;pred()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;reject&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;pred&lt;/span&gt;, &lt;span class="pl-smi"&gt;array&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;array&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;((&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;pred&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;args));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;reject&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 3, 5]&lt;/span&gt;
&lt;span class="pl-en"&gt;reject&lt;/span&gt;(&lt;span class="pl-smi"&gt;word&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;word&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Apple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Pear&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Kiwi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Banana&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['Pear', 'Kiwi']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-remove" class="anchor" aria-hidden="true" href="#remove"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;remove&lt;/h3&gt;
&lt;p&gt;Removes elements from an array for which the given function returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to find array elements that return truthy values and &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to remove elements using &lt;code&gt;Array.prototype.splice()&lt;/code&gt;.
The &lt;code&gt;func&lt;/code&gt; is invoked with three arguments (&lt;code&gt;value, index, array&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;remove&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;func&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;isArray&lt;/span&gt;(arr)
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(func).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;splice&lt;/span&gt;(&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;indexOf&lt;/span&gt;(val), &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(val);
      }, [])
    &lt;span class="pl-k"&gt;:&lt;/span&gt; [];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;remove&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2, 4]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sample" class="anchor" aria-hidden="true" href="#sample"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sample&lt;/h3&gt;
&lt;p&gt;Returns a random element from an array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.random()&lt;/code&gt; to generate a random number, multiply it by &lt;code&gt;length&lt;/code&gt; and round it off to the nearest whole number using &lt;code&gt;Math.floor()&lt;/code&gt;.
This method also works with strings.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sample&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; arr[&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;random&lt;/span&gt;() &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;)];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sample&lt;/span&gt;([&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;11&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-samplesize" class="anchor" aria-hidden="true" href="#samplesize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sampleSize&lt;/h3&gt;
&lt;p&gt;Gets &lt;code&gt;n&lt;/code&gt; random elements at unique keys from &lt;code&gt;array&lt;/code&gt; up to the size of &lt;code&gt;array&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Shuffle the array using the &lt;a href="https://github.com/30-seconds/30-seconds-of-code#shuffle"&gt;Fisher-Yates algorithm&lt;/a&gt;.
Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to get the first &lt;code&gt;n&lt;/code&gt; elements.
Omit the second argument, &lt;code&gt;n&lt;/code&gt; to get only one element at random from the array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sampleSize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ([&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;arr&lt;/span&gt;], &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; m &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;;
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (m) {
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;random&lt;/span&gt;() &lt;span class="pl-k"&gt;*&lt;/span&gt; m&lt;span class="pl-k"&gt;--&lt;/span&gt;);
    [arr[m], arr[i]] &lt;span class="pl-k"&gt;=&lt;/span&gt; [arr[i], arr[m]];
  }
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, n);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sampleSize&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3,1]&lt;/span&gt;
&lt;span class="pl-en"&gt;sampleSize&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;4&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2,3,1]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-shank" class="anchor" aria-hidden="true" href="#shank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;shank&lt;/h3&gt;
&lt;p&gt;Has the same functionality as &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice" rel="nofollow"&gt;&lt;code&gt;Array.prototype.splice()&lt;/code&gt;&lt;/a&gt;, but returning a new array instead of mutating the original array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; and &lt;code&gt;Array.prototype.concat()&lt;/code&gt; to get a new array with the new contents after removing existing elements and/or adding new elements.
Omit the second argument, &lt;code&gt;index&lt;/code&gt;, to start at &lt;code&gt;0&lt;/code&gt;.
Omit the third argument, &lt;code&gt;delCount&lt;/code&gt;, to remove &lt;code&gt;0&lt;/code&gt; elements.
Omit the fourth argument, &lt;code&gt;elements&lt;/code&gt;, in order to not add any new elements.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;shank&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;index&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-smi"&gt;delCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;elements&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  arr
    .&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, index)
    .&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(elements)
    .&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(index &lt;span class="pl-k"&gt;+&lt;/span&gt; delCount));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;names&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;alpha&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bravo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;charlie&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;namesAndDelta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;shank&lt;/span&gt;(names, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;delta&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ 'alpha', 'delta', 'bravo', 'charlie' ]&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;namesNoBravo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;shank&lt;/span&gt;(names, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ 'alpha', 'charlie' ]&lt;/span&gt;
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(names); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['alpha', 'bravo', 'charlie']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-shuffle" class="anchor" aria-hidden="true" href="#shuffle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;shuffle&lt;/h3&gt;
&lt;p&gt;Randomizes the order of the values of an array, returning a new array.&lt;/p&gt;
&lt;p&gt;Uses the &lt;a href="https://github.com/30-seconds/30-seconds-of-code#shuffle"&gt;Fisher-Yates algorithm&lt;/a&gt; to reorder the elements of the array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;shuffle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ([&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;arr&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; m &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;;
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (m) {
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;random&lt;/span&gt;() &lt;span class="pl-k"&gt;*&lt;/span&gt; m&lt;span class="pl-k"&gt;--&lt;/span&gt;);
    [arr[m], arr[i]] &lt;span class="pl-k"&gt;=&lt;/span&gt; [arr[i], arr[m]];
  }
  &lt;span class="pl-k"&gt;return&lt;/span&gt; arr;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;];
&lt;span class="pl-en"&gt;shuffle&lt;/span&gt;(foo); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2, 3, 1], foo = [1, 2, 3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-similarity" class="anchor" aria-hidden="true" href="#similarity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;similarity&lt;/h3&gt;
&lt;p&gt;Returns an array of elements that appear in both arrays.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to remove values that are not part of &lt;code&gt;values&lt;/code&gt;, determined using &lt;code&gt;Array.prototype.includes()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;similarity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;values&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;values&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(v));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;similarity&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sortedindex" class="anchor" aria-hidden="true" href="#sortedindex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sortedIndex&lt;/h3&gt;
&lt;p&gt;Returns the lowest index at which value should be inserted into array in order to maintain its sort order.&lt;/p&gt;
&lt;p&gt;Check if the array is sorted in descending order (loosely).
Use &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; to find the appropriate index where the element should be inserted.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sortedIndex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isDescending&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; arr[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; arr[&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;];
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;index&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(&lt;span class="pl-smi"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (isDescending &lt;span class="pl-k"&gt;?&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; el &lt;span class="pl-k"&gt;:&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; el));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; index &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; index;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sortedIndex&lt;/span&gt;([&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;], &lt;span class="pl-c1"&gt;4&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;
&lt;span class="pl-en"&gt;sortedIndex&lt;/span&gt;([&lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;], &lt;span class="pl-c1"&gt;40&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sortedindexby" class="anchor" aria-hidden="true" href="#sortedindexby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sortedIndexBy&lt;/h3&gt;
&lt;p&gt;Returns the lowest index at which value should be inserted into array in order to maintain its sort order, based on a provided iterator function.&lt;/p&gt;
&lt;p&gt;Check if the array is sorted in descending order (loosely).
Use &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; to find the appropriate index where the element should be inserted, based on the iterator function &lt;code&gt;fn&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sortedIndexBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isDescending&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(arr[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(arr[&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;]);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(n);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;index&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(&lt;span class="pl-smi"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (isDescending &lt;span class="pl-k"&gt;?&lt;/span&gt; val &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(el) &lt;span class="pl-k"&gt;:&lt;/span&gt; val &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(el)));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; index &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; index;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sortedIndexBy&lt;/span&gt;([{ x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, { x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; }], { x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, &lt;span class="pl-smi"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;o&lt;/span&gt;.&lt;span class="pl-c1"&gt;x&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sortedlastindex" class="anchor" aria-hidden="true" href="#sortedlastindex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sortedLastIndex&lt;/h3&gt;
&lt;p&gt;Returns the highest index at which value should be inserted into array in order to maintain its sort order.&lt;/p&gt;
&lt;p&gt;Check if the array is sorted in descending order (loosely).
Use &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; and &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; to find the appropriate last index where the element should be inserted.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sortedLastIndex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isDescending&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; arr[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; arr[&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;];
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;index&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;reverse&lt;/span&gt;().&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(&lt;span class="pl-smi"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (isDescending &lt;span class="pl-k"&gt;?&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; el &lt;span class="pl-k"&gt;:&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; el));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; index &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; index;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sortedLastIndex&lt;/span&gt;([&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;40&lt;/span&gt;], &lt;span class="pl-c1"&gt;30&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sortedlastindexby" class="anchor" aria-hidden="true" href="#sortedlastindexby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sortedLastIndexBy&lt;/h3&gt;
&lt;p&gt;Returns the highest index at which value should be inserted into array in order to maintain its sort order, based on a provided iterator function.&lt;/p&gt;
&lt;p&gt;Check if the array is sorted in descending order (loosely).
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to apply the iterator function to all elements of the array.
Use &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; and &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; to find the appropriate last index where the element should be inserted, based on the provided iterator function.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sortedLastIndexBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isDescending&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(arr[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(arr[&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;]);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(n);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;index&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; arr
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(fn)
    .&lt;span class="pl-c1"&gt;reverse&lt;/span&gt;()
    .&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(&lt;span class="pl-smi"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (isDescending &lt;span class="pl-k"&gt;?&lt;/span&gt; val &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; el &lt;span class="pl-k"&gt;:&lt;/span&gt; val &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; el));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; index &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; index;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sortedLastIndexBy&lt;/span&gt;([{ x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, { x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; }], { x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, &lt;span class="pl-smi"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;o&lt;/span&gt;.&lt;span class="pl-c1"&gt;x&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stablesort-" class="anchor" aria-hidden="true" href="#stablesort-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;stableSort &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Performs stable sorting of an array, preserving the initial indexes of items when their values are the same.
Does not mutate the original array, but returns a new array instead.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to pair each element of the input array with its corresponding index.
Use &lt;code&gt;Array.prototype.sort()&lt;/code&gt; and a &lt;code&gt;compare&lt;/code&gt; function to sort the list, preserving their initial order if the items compared are equal.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to convert back to the initial array items.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;stableSort&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;compare&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  arr
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;item&lt;/span&gt;, &lt;span class="pl-smi"&gt;index&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ({ item, index }))
    .&lt;span class="pl-c1"&gt;sort&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;compare&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-smi"&gt;item&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-smi"&gt;item&lt;/span&gt;) &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-c1"&gt;index&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-c1"&gt;index&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(({ item }) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; item);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;];
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;stable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;stableSort&lt;/span&gt;(arr, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-symmetricdifference" class="anchor" aria-hidden="true" href="#symmetricdifference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;symmetricDifference&lt;/h3&gt;
&lt;p&gt;Returns the symmetric difference between two arrays, without filtering out duplicate values.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Set&lt;/code&gt; from each array, then use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; on each of them to only keep values not contained in the other.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;symmetricDifference&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sA&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(a),
    sB &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(b);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;sB&lt;/span&gt;.&lt;span class="pl-c1"&gt;has&lt;/span&gt;(x)), &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;sA&lt;/span&gt;.&lt;span class="pl-c1"&gt;has&lt;/span&gt;(x))];
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;symmetricDifference&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3, 4]&lt;/span&gt;
&lt;span class="pl-en"&gt;symmetricDifference&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2, 2, 3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-symmetricdifferenceby" class="anchor" aria-hidden="true" href="#symmetricdifferenceby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;symmetricDifferenceBy&lt;/h3&gt;
&lt;p&gt;Returns the symmetric difference between two arrays, after applying the provided function to each array element of both.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Set&lt;/code&gt; by applying &lt;code&gt;fn&lt;/code&gt; to each array's elements, then use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; on each of them to only keep values not contained in the other.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;symmetricDifferenceBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sA&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(v))),
    sB &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(&lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(v)));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;sB&lt;/span&gt;.&lt;span class="pl-c1"&gt;has&lt;/span&gt;(&lt;span class="pl-en"&gt;fn&lt;/span&gt;(x))), &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;sA&lt;/span&gt;.&lt;span class="pl-c1"&gt;has&lt;/span&gt;(&lt;span class="pl-en"&gt;fn&lt;/span&gt;(x)))];
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;symmetricDifferenceBy&lt;/span&gt;([&lt;span class="pl-c1"&gt;2.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;], [&lt;span class="pl-c1"&gt;2.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.4&lt;/span&gt;], &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;floor&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ 1.2, 3.4 ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-symmetricdifferencewith" class="anchor" aria-hidden="true" href="#symmetricdifferencewith"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;symmetricDifferenceWith&lt;/h3&gt;
&lt;p&gt;Returns the symmetric difference between two arrays, using a provided function as a comparator.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; to find the appropriate values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;symmetricDifferenceWith&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;comp&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [
  &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(&lt;span class="pl-smi"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;comp&lt;/span&gt;(a, b)) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;),
  &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(&lt;span class="pl-smi"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;comp&lt;/span&gt;(a, b)) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;symmetricDifferenceWith&lt;/span&gt;(
  [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;],
  [&lt;span class="pl-c1"&gt;1.9&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.9&lt;/span&gt;],
  (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(a) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(b)
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 1.2, 3.9]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tail" class="anchor" aria-hidden="true" href="#tail"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tail&lt;/h3&gt;
&lt;p&gt;Returns all elements in an array except for the first one.&lt;/p&gt;
&lt;p&gt;Return &lt;code&gt;Array.prototype.slice(1)&lt;/code&gt; if the array's &lt;code&gt;length&lt;/code&gt; is more than &lt;code&gt;1&lt;/code&gt;, otherwise, return the whole array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;tail&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt; arr);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;tail&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2,3]&lt;/span&gt;
&lt;span class="pl-en"&gt;tail&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-take" class="anchor" aria-hidden="true" href="#take"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;take&lt;/h3&gt;
&lt;p&gt;Returns an array with n elements removed from the beginning.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to create a slice of the array with &lt;code&gt;n&lt;/code&gt; elements taken from the beginning.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;take&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, n);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;take&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3]&lt;/span&gt;
&lt;span class="pl-en"&gt;take&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; []&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-takeright" class="anchor" aria-hidden="true" href="#takeright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;takeRight&lt;/h3&gt;
&lt;p&gt;Returns an array with n elements removed from the end.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to create a slice of the array with &lt;code&gt;n&lt;/code&gt; elements taken from the end.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;takeRight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; n, &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;takeRight&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ 2, 3 ]&lt;/span&gt;
&lt;span class="pl-en"&gt;takeRight&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-takerightwhile" class="anchor" aria-hidden="true" href="#takerightwhile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;takeRightWhile&lt;/h3&gt;
&lt;p&gt;Removes elements from the end of an array until the passed function returns &lt;code&gt;true&lt;/code&gt;. Returns the removed elements.&lt;/p&gt;
&lt;p&gt;Loop through the array, using a &lt;code&gt;Array.prototype.reduceRight()&lt;/code&gt; and accumulating elements while the function returns falsy value.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;takeRightWhile&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;func&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduceRight&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;el&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;func&lt;/span&gt;(el) &lt;span class="pl-k"&gt;?&lt;/span&gt; acc &lt;span class="pl-k"&gt;:&lt;/span&gt; [el, &lt;span class="pl-k"&gt;...&lt;/span&gt;acc]), []);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;takeRightWhile&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3, 4]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-takewhile" class="anchor" aria-hidden="true" href="#takewhile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;takeWhile&lt;/h3&gt;
&lt;p&gt;Removes elements in an array until the passed function returns &lt;code&gt;true&lt;/code&gt;. Returns the removed elements.&lt;/p&gt;
&lt;p&gt;Loop through the array, using a &lt;code&gt;for...of&lt;/code&gt; loop over &lt;code&gt;Array.prototype.entries()&lt;/code&gt; until the returned value from the function is &lt;code&gt;true&lt;/code&gt;.
Return the removed elements, using &lt;code&gt;Array.prototype.slice()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;takeWhile&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;func&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;const&lt;/span&gt; [&lt;span class="pl-c1"&gt;i&lt;/span&gt;, &lt;span class="pl-c1"&gt;val&lt;/span&gt;] &lt;span class="pl-k"&gt;of&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;entries&lt;/span&gt;()) &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;func&lt;/span&gt;(val)) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, i);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; arr;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;takeWhile&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tohash" class="anchor" aria-hidden="true" href="#tohash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;toHash&lt;/h3&gt;
&lt;p&gt;Reduces a given Array-like into a value hash (keyed data store).&lt;/p&gt;
&lt;p&gt;Given an Iterable or Array-like structure, call &lt;code&gt;Array.prototype.reduce.call()&lt;/code&gt; on the provided object to step over it and return an Object, keyed by the reference value.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;toHash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;object&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-c1"&gt;prototype&lt;/span&gt;.&lt;span class="pl-smi"&gt;reduce&lt;/span&gt;.&lt;span class="pl-c1"&gt;call&lt;/span&gt;(
    object,
    (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-smi"&gt;index&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((acc[&lt;span class="pl-k"&gt;!&lt;/span&gt;key &lt;span class="pl-k"&gt;?&lt;/span&gt; index &lt;span class="pl-k"&gt;:&lt;/span&gt; data[key]] &lt;span class="pl-k"&gt;=&lt;/span&gt; data), acc),
    {}
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;toHash&lt;/span&gt;([&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { 0: 4, 1: 3, 2: 2, 3: 1 }&lt;/span&gt;
&lt;span class="pl-en"&gt;toHash&lt;/span&gt;([{ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;label&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { label: { a: 'label' } }&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A more in depth example:&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; users &lt;span class="pl-k"&gt;=&lt;/span&gt; [{ id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, first&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Jon&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, first&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Joe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, first&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Moe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }];
&lt;span class="pl-k"&gt;let&lt;/span&gt; managers &lt;span class="pl-k"&gt;=&lt;/span&gt; [{ manager&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, employees&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;] }];
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; We use function here because we want a bindable reference, but a closure referencing the hash would work, too.&lt;/span&gt;
&lt;span class="pl-smi"&gt;managers&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(
  &lt;span class="pl-smi"&gt;manager&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    (&lt;span class="pl-smi"&gt;manager&lt;/span&gt;.&lt;span class="pl-smi"&gt;employees&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;.&lt;span class="pl-smi"&gt;employees&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;id&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;this&lt;/span&gt;[id];
    }, &lt;span class="pl-en"&gt;toHash&lt;/span&gt;(users, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)))
);
managers; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ { manager:1, employees: [ { id: 2, first: "Joe" }, { id: 3, first: "Moe" } ] } ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-union" class="anchor" aria-hidden="true" href="#union"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;union&lt;/h3&gt;
&lt;p&gt;Returns every element that exists in any of the two arrays once.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Set&lt;/code&gt; with all values of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; and convert to an array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;union&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;([&lt;span class="pl-k"&gt;...&lt;/span&gt;a, &lt;span class="pl-k"&gt;...&lt;/span&gt;b]));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;union&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2,3,4]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unionby" class="anchor" aria-hidden="true" href="#unionby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unionBy&lt;/h3&gt;
&lt;p&gt;Returns every element that exists in any of the two arrays once, after applying the provided function to each array element of both.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Set&lt;/code&gt; by applying all &lt;code&gt;fn&lt;/code&gt; to all values of &lt;code&gt;a&lt;/code&gt;.
Create a &lt;code&gt;Set&lt;/code&gt; from &lt;code&gt;a&lt;/code&gt; and all elements in &lt;code&gt;b&lt;/code&gt; whose value, after applying &lt;code&gt;fn&lt;/code&gt; does not match a value in the previously created set.
Return the last set converted to an array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;unionBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(fn));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;([&lt;span class="pl-k"&gt;...&lt;/span&gt;a, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;s&lt;/span&gt;.&lt;span class="pl-c1"&gt;has&lt;/span&gt;(&lt;span class="pl-en"&gt;fn&lt;/span&gt;(x)))]));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;unionBy&lt;/span&gt;([&lt;span class="pl-c1"&gt;2.1&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.3&lt;/span&gt;], &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;floor&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2.1, 1.2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unionwith" class="anchor" aria-hidden="true" href="#unionwith"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unionWith&lt;/h3&gt;
&lt;p&gt;Returns every element that exists in any of the two arrays once, using a provided comparator function.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Set&lt;/code&gt; with all values of &lt;code&gt;a&lt;/code&gt; and values in &lt;code&gt;b&lt;/code&gt; for which the comparator finds no matches in &lt;code&gt;a&lt;/code&gt;, using &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;unionWith&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;comp&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;([&lt;span class="pl-k"&gt;...&lt;/span&gt;a, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(&lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;comp&lt;/span&gt;(x, y)) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)]));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;unionWith&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1.9&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.9&lt;/span&gt;], (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(a) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(b)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 1.2, 1.5, 3, 0, 3.9]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uniqueelements" class="anchor" aria-hidden="true" href="#uniqueelements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;uniqueElements&lt;/h3&gt;
&lt;p&gt;Returns all unique values of an array.&lt;/p&gt;
&lt;p&gt;Use ES6 &lt;code&gt;Set&lt;/code&gt; and the &lt;code&gt;...rest&lt;/code&gt; operator to discard all duplicated values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;uniqueElements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(arr)];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;uniqueElements&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3, 4, 5]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uniqueelementsby" class="anchor" aria-hidden="true" href="#uniqueelementsby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;uniqueElementsBy&lt;/h3&gt;
&lt;p&gt;Returns all unique values of an array, based on a provided comparator function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; and &lt;code&gt;Array.prototype.some()&lt;/code&gt; for an array containing only the first unique occurrence of each value, based on the comparator function, &lt;code&gt;fn&lt;/code&gt;.
The comparator function takes two arguments: the values of the two elements being compared.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;uniqueElementsBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-en"&gt;some&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(v, x))) &lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
  }, []);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;uniqueElementsBy&lt;/span&gt;(
  [
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
  ],
  (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt;
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ { id: 0, value: 'a' }, { id: 1, value: 'b' }, { id: 2, value: 'c' } ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uniqueelementsbyright" class="anchor" aria-hidden="true" href="#uniqueelementsbyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;uniqueElementsByRight&lt;/h3&gt;
&lt;p&gt;Returns all unique values of an array, based on a provided comparator function, starting from the right.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduceRight()&lt;/code&gt; and &lt;code&gt;Array.prototype.some()&lt;/code&gt; for an array containing only the last unique occurrence of each value, based on the comparator function, &lt;code&gt;fn&lt;/code&gt;.
The comparator function takes two arguments: the values of the two elements being compared.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;uniqueElementsByRight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduceRight&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-en"&gt;some&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(v, x))) &lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
  }, []);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;uniqueElementsByRight&lt;/span&gt;(
  [
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
    { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, value&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
  ],
  (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt;
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ { id: 0, value: 'e' }, { id: 1, value: 'd' }, { id: 2, value: 'c' } ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uniquesymmetricdifference" class="anchor" aria-hidden="true" href="#uniquesymmetricdifference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;uniqueSymmetricDifference&lt;/h3&gt;
&lt;p&gt;Returns the unique symmetric difference between two arrays, not containing duplicate values from either array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.includes()&lt;/code&gt; on each array to remove values contained in the other, then create a &lt;code&gt;Set&lt;/code&gt; from the results, removing duplicate values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;uniqueSymmetricDifference&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [
  &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;([&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(v)), &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(v))])
];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;uniqueSymmetricDifference&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3, 4]&lt;/span&gt;
&lt;span class="pl-en"&gt;uniqueSymmetricDifference&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2, 3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unzip" class="anchor" aria-hidden="true" href="#unzip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unzip&lt;/h3&gt;
&lt;p&gt;Creates an array of arrays, ungrouping the elements in an array produced by &lt;a href="#zip"&gt;zip&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.max.apply()&lt;/code&gt; to get the longest subarray in the array, &lt;code&gt;Array.prototype.map()&lt;/code&gt; to make each element an array.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; and &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; to map grouped values to individual arrays.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;unzip&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;((&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc[i].&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v)), acc),
    &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({
      length&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;))
    }).&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [])
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;unzip&lt;/span&gt;([[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;]]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [['a', 'b'], [1, 2], [true, false]]&lt;/span&gt;
&lt;span class="pl-en"&gt;unzip&lt;/span&gt;([[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [['a', 'b'], [1, 2], [true]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unzipwith-" class="anchor" aria-hidden="true" href="#unzipwith-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unzipWith &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Creates an array of elements, ungrouping the elements in an array produced by &lt;a href="#zip"&gt;zip&lt;/a&gt; and applying the provided function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.max.apply()&lt;/code&gt; to get the longest subarray in the array, &lt;code&gt;Array.prototype.map()&lt;/code&gt; to make each element an array.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; and &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; to map grouped values to individual arrays.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; and the spread operator (&lt;code&gt;...&lt;/code&gt;) to apply &lt;code&gt;fn&lt;/code&gt; to each individual group of elements.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;unzipWith&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  arr
    .&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
      (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;((&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc[i].&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v)), acc),
      &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({
        length&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;))
      }).&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [])
    )
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;val));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;unzipWith&lt;/span&gt;([[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;], [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;200&lt;/span&gt;]], (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; v, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3, 30, 300]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-without" class="anchor" aria-hidden="true" href="#without"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;without&lt;/h3&gt;
&lt;p&gt;Filters out the elements of an array, that have one of the specified values.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to create an array excluding(using &lt;code&gt;!Array.includes()&lt;/code&gt;) all given values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;without&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(v));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;without&lt;/span&gt;([&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-xprod" class="anchor" aria-hidden="true" href="#xprod"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;xProd&lt;/h3&gt;
&lt;p&gt;Creates a new array out of the two supplied by creating each possible pair from the arrays.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt;, &lt;code&gt;Array.prototype.map()&lt;/code&gt; and &lt;code&gt;Array.prototype.concat()&lt;/code&gt; to produce every possible pair from the elements of the two arrays and save them in an array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;xProd&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(&lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [x, y])), []);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;xProd&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-zip" class="anchor" aria-hidden="true" href="#zip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;zip&lt;/h3&gt;
&lt;p&gt;Creates an array of elements, grouped based on the position in the original arrays.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.max.apply()&lt;/code&gt; to get the longest array in the arguments.
Creates an array with that length as return value and use &lt;code&gt;Array.from()&lt;/code&gt; with a map-function to create an array of grouped elements.
If lengths of the argument-arrays vary, &lt;code&gt;undefined&lt;/code&gt; is used where no value could be found.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;zip&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;arrays&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;maxLength&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arrays&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; maxLength }).&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;_&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;arrays&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; }, (&lt;span class="pl-smi"&gt;_&lt;/span&gt;, &lt;span class="pl-smi"&gt;k&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; arrays[k][i]);
  });
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;zip&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;], [&lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [['a', 1, true], ['b', 2, false]]&lt;/span&gt;
&lt;span class="pl-en"&gt;zip&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;], [&lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [['a', 1, true], [undefined, 2, false]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-zipobject" class="anchor" aria-hidden="true" href="#zipobject"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;zipObject&lt;/h3&gt;
&lt;p&gt;Given an array of valid property identifiers and an array of values, return an object associating the properties to the values.&lt;/p&gt;
&lt;p&gt;Since an object can have undefined values but not undefined property pointers, the array of properties is used to decide the structure of the resulting object using &lt;code&gt;Array.prototype.reduce()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;zipObject&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;props&lt;/span&gt;, &lt;span class="pl-smi"&gt;values&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;props&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;prop&lt;/span&gt;, &lt;span class="pl-smi"&gt;index&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((obj[prop] &lt;span class="pl-k"&gt;=&lt;/span&gt; values[index]), obj), {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;zipObject&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {a: 1, b: 2, c: undefined}&lt;/span&gt;
&lt;span class="pl-en"&gt;zipObject&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {a: 1, b: 2}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-zipwith-" class="anchor" aria-hidden="true" href="#zipwith-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;zipWith &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Creates an array of elements, grouped based on the position in the original arrays and using function as the last value to specify how grouped values should be combined.&lt;/p&gt;
&lt;p&gt;Check if the last argument provided is a function.
Use &lt;code&gt;Math.max()&lt;/code&gt; to get the longest array in the arguments.
Creates an array with that length as return value and use &lt;code&gt;Array.from()&lt;/code&gt; with a map-function to create an array of grouped elements.
If lengths of the argument-arrays vary, &lt;code&gt;undefined&lt;/code&gt; is used where no value could be found.
The function is invoked with the elements of each group &lt;code&gt;(...group)&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;zipWith&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;array&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; array[&lt;span class="pl-smi"&gt;array&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;array&lt;/span&gt;.&lt;span class="pl-c1"&gt;pop&lt;/span&gt;() &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;array&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;)) }, (&lt;span class="pl-smi"&gt;_&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    fn &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;array&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a[i])) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;array&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a[i])
  );
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;zipWith&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;], [&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;], [&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;200&lt;/span&gt;], (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;c&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b &lt;span class="pl-k"&gt;+&lt;/span&gt; c); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [111,222]&lt;/span&gt;
&lt;span class="pl-en"&gt;zipWith&lt;/span&gt;(
  [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;],
  [&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;],
  [&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;200&lt;/span&gt;],
  (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;c&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (a &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; a &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (b &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; b &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (c &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; c &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [111, 222, '3bc']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content--browser-1" class="anchor" aria-hidden="true" href="#-browser-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt; Browser&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-arraytohtmllist" class="anchor" aria-hidden="true" href="#arraytohtmllist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;arrayToHtmlList&lt;/h3&gt;
&lt;p&gt;Converts the given array elements into &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; tags and appends them to the list of the given id.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt;, &lt;code&gt;document.querySelector()&lt;/code&gt;, and an anonymous inner closure to create a list of html tags.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;arrayToHtmlList&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;listID&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  (&lt;span class="pl-smi"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (
    (el &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; listID)),
    (&lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-smi"&gt;innerHTML&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;item&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&amp;lt;li&amp;gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;item&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&amp;lt;/li&amp;gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
  ))();&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;arrayToHtmlList&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;item 1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;item 2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;myListID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bottomvisible" class="anchor" aria-hidden="true" href="#bottomvisible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bottomVisible&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the bottom of the page is visible, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;scrollY&lt;/code&gt;, &lt;code&gt;scrollHeight&lt;/code&gt; and &lt;code&gt;clientHeight&lt;/code&gt; to determine if the bottom of the page is visible.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;bottomVisible&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;documentElement&lt;/span&gt;.&lt;span class="pl-smi"&gt;clientHeight&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-smi"&gt;scrollY&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;documentElement&lt;/span&gt;.&lt;span class="pl-smi"&gt;scrollHeight&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;documentElement&lt;/span&gt;.&lt;span class="pl-smi"&gt;clientHeight&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;bottomVisible&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-copytoclipboard-" class="anchor" aria-hidden="true" href="#copytoclipboard-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;copyToClipboard &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Copy a string to the clipboard.
Only works as a result of user action (i.e. inside a &lt;code&gt;click&lt;/code&gt; event listener).&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;NOTICE:&lt;/strong&gt; The same functionality can be easily implemented by using the new asynchronous Clipboard API, which is still experimental but should be used in the future instead of this snippet. Find out more about it &lt;a href="https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Create a new &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element, fill it with the supplied data and add it to the HTML document.
Use &lt;code&gt;Selection.getRangeAt()&lt;/code&gt;to store the selected range (if any).
Use &lt;code&gt;document.execCommand('copy')&lt;/code&gt; to copy to the clipboard.
Remove the &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element from the HTML document.
Finally, use &lt;code&gt;Selection().addRange()&lt;/code&gt; to recover the original selected range (if any).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;copyToClipboard&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;createElement&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;textarea&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; str;
  &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;setAttribute&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;readonly&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;position&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;absolute&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;style&lt;/span&gt;.&lt;span class="pl-c1"&gt;left&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-9999px&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;.&lt;span class="pl-c1"&gt;appendChild&lt;/span&gt;(el);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;selected&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
    &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;getSelection&lt;/span&gt;().&lt;span class="pl-smi"&gt;rangeCount&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;getSelection&lt;/span&gt;().&lt;span class="pl-en"&gt;getRangeAt&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
  &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;select&lt;/span&gt;();
  &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;execCommand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;copy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;.&lt;span class="pl-c1"&gt;removeChild&lt;/span&gt;(el);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (selected) {
    &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;getSelection&lt;/span&gt;().&lt;span class="pl-en"&gt;removeAllRanges&lt;/span&gt;();
    &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;getSelection&lt;/span&gt;().&lt;span class="pl-en"&gt;addRange&lt;/span&gt;(selected);
  }
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;copyToClipboard&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Lorem ipsum&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Lorem ipsum' copied to clipboard.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-counter-" class="anchor" aria-hidden="true" href="#counter-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;counter &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Creates a counter with the specified range, step and duration for the specified selector.&lt;/p&gt;
&lt;p&gt;Check if &lt;code&gt;step&lt;/code&gt; has the proper sign and change it accordingly.
Use &lt;code&gt;setInterval()&lt;/code&gt; in combination with &lt;code&gt;Math.abs()&lt;/code&gt; and &lt;code&gt;Math.floor()&lt;/code&gt; to calculate the time between each new text draw.
Use &lt;code&gt;document.querySelector().innerHTML&lt;/code&gt; to update the value of the selected element.
Omit the fourth parameter, &lt;code&gt;step&lt;/code&gt;, to use a default step of &lt;code&gt;1&lt;/code&gt;.
Omit the fifth parameter, &lt;code&gt;duration&lt;/code&gt;, to use a default duration of &lt;code&gt;2000&lt;/code&gt;ms.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;counter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;selector&lt;/span&gt;, &lt;span class="pl-smi"&gt;start&lt;/span&gt;, &lt;span class="pl-smi"&gt;end&lt;/span&gt;, &lt;span class="pl-smi"&gt;step&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-smi"&gt;duration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2000&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; current &lt;span class="pl-k"&gt;=&lt;/span&gt; start,
    _step &lt;span class="pl-k"&gt;=&lt;/span&gt; (end &lt;span class="pl-k"&gt;-&lt;/span&gt; start) &lt;span class="pl-k"&gt;*&lt;/span&gt; step &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;step &lt;span class="pl-k"&gt;:&lt;/span&gt; step,
    timer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;setInterval&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      current &lt;span class="pl-k"&gt;+=&lt;/span&gt; _step;
      &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(selector).&lt;span class="pl-smi"&gt;innerHTML&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; current;
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (current &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; end) &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(selector).&lt;span class="pl-smi"&gt;innerHTML&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; end;
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (current &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; end) &lt;span class="pl-c1"&gt;clearInterval&lt;/span&gt;(timer);
    }, &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;abs&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(duration &lt;span class="pl-k"&gt;/&lt;/span&gt; (end &lt;span class="pl-k"&gt;-&lt;/span&gt; start))));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; timer;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;counter&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#my-id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;2000&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Creates a 2-second timer for the element with id="my-id"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-createelement" class="anchor" aria-hidden="true" href="#createelement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;createElement&lt;/h3&gt;
&lt;p&gt;Creates an element from a string (without appending it to the document).
If the given string contains multiple elements, only the first one will be returned.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;document.createElement()&lt;/code&gt; to create a new element.
Set its &lt;code&gt;innerHTML&lt;/code&gt; to the string supplied as the argument.
Use &lt;code&gt;ParentNode.firstElementChild&lt;/code&gt; to return the element version of the string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;createElement&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;createElement&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;div&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-smi"&gt;innerHTML&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; str;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-smi"&gt;firstElementChild&lt;/span&gt;;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;createElement&lt;/span&gt;(
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&amp;lt;div class="container"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;p&amp;gt;Hello!&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/div&amp;gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
);
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;className&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'container'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-createeventhub-" class="anchor" aria-hidden="true" href="#createeventhub-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;createEventHub &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Creates a pub/sub (&lt;a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern" rel="nofollow"&gt;publish–subscribe&lt;/a&gt;) event hub with &lt;code&gt;emit&lt;/code&gt;, &lt;code&gt;on&lt;/code&gt;, and &lt;code&gt;off&lt;/code&gt; methods.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.create(null)&lt;/code&gt; to create an empty &lt;code&gt;hub&lt;/code&gt; object that does not inherit properties from &lt;code&gt;Object.prototype&lt;/code&gt;.
For &lt;code&gt;emit&lt;/code&gt;, resolve the array of handlers based on the &lt;code&gt;event&lt;/code&gt; argument and then run each one with &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; by passing in the data as an argument.
For &lt;code&gt;on&lt;/code&gt;, create an array for the event if it does not yet exist, then use &lt;code&gt;Array.prototype.push()&lt;/code&gt; to add the handler
to the array.
For &lt;code&gt;off&lt;/code&gt;, use &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; to find the index of the handler in the event array and remove it using &lt;code&gt;Array.prototype.splice()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;createEventHub&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ({
  hub&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;),
  &lt;span class="pl-en"&gt;emit&lt;/span&gt;(&lt;span class="pl-c1"&gt;event&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt;) {
    (&lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;hub&lt;/span&gt;[&lt;span class="pl-c1"&gt;event&lt;/span&gt;] &lt;span class="pl-k"&gt;||&lt;/span&gt; []).&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;handler&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;handler&lt;/span&gt;(data));
  },
  &lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-c1"&gt;event&lt;/span&gt;, &lt;span class="pl-smi"&gt;handler&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;hub&lt;/span&gt;[&lt;span class="pl-c1"&gt;event&lt;/span&gt;]) &lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;hub&lt;/span&gt;[&lt;span class="pl-c1"&gt;event&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [];
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;hub&lt;/span&gt;[&lt;span class="pl-c1"&gt;event&lt;/span&gt;].&lt;span class="pl-c1"&gt;push&lt;/span&gt;(handler);
  },
  &lt;span class="pl-en"&gt;off&lt;/span&gt;(&lt;span class="pl-c1"&gt;event&lt;/span&gt;, &lt;span class="pl-smi"&gt;handler&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;hub&lt;/span&gt;[&lt;span class="pl-c1"&gt;event&lt;/span&gt;] &lt;span class="pl-k"&gt;||&lt;/span&gt; []).&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(&lt;span class="pl-smi"&gt;h&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; h &lt;span class="pl-k"&gt;===&lt;/span&gt; handler);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (i &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;hub&lt;/span&gt;[&lt;span class="pl-c1"&gt;event&lt;/span&gt;].&lt;span class="pl-c1"&gt;splice&lt;/span&gt;(i, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;hub&lt;/span&gt;[&lt;span class="pl-c1"&gt;event&lt;/span&gt;].&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;delete&lt;/span&gt; &lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;hub&lt;/span&gt;[&lt;span class="pl-c1"&gt;event&lt;/span&gt;];
  }
});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;handler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(data);
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;hub&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;createEventHub&lt;/span&gt;();
&lt;span class="pl-k"&gt;let&lt;/span&gt; increment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Subscribe: listen for different types of events&lt;/span&gt;
&lt;span class="pl-smi"&gt;hub&lt;/span&gt;.&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;message&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, handler);
&lt;span class="pl-smi"&gt;hub&lt;/span&gt;.&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;message&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Message event fired&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;));
&lt;span class="pl-smi"&gt;hub&lt;/span&gt;.&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;increment&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; increment&lt;span class="pl-k"&gt;++&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Publish: emit events to invoke all handlers subscribed to them, passing the data to them as an argument&lt;/span&gt;
&lt;span class="pl-smi"&gt;hub&lt;/span&gt;.&lt;span class="pl-en"&gt;emit&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;message&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logs 'hello world' and 'Message event fired'&lt;/span&gt;
&lt;span class="pl-smi"&gt;hub&lt;/span&gt;.&lt;span class="pl-en"&gt;emit&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;message&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { hello&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logs the object and 'Message event fired'&lt;/span&gt;
&lt;span class="pl-smi"&gt;hub&lt;/span&gt;.&lt;span class="pl-en"&gt;emit&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;increment&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; `increment` variable is now 1&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Unsubscribe: stop a specific handler from listening to the 'message' event&lt;/span&gt;
&lt;span class="pl-smi"&gt;hub&lt;/span&gt;.&lt;span class="pl-en"&gt;off&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;message&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, handler);&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-currenturl" class="anchor" aria-hidden="true" href="#currenturl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;currentURL&lt;/h3&gt;
&lt;p&gt;Returns the current URL.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;window.location.href&lt;/code&gt; to get current URL.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;currentURL&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;href&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;currentURL&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'https://google.com'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-detectdevicetype" class="anchor" aria-hidden="true" href="#detectdevicetype"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;detectDeviceType&lt;/h3&gt;
&lt;p&gt;Detects whether the website is being opened in a mobile device or a desktop/laptop.&lt;/p&gt;
&lt;p&gt;Use a regular expression to test the &lt;code&gt;navigator.userAgent&lt;/code&gt; property to figure out if the device is a mobile device or a desktop/laptop.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;detectDeviceType&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="pl-sr"&gt;  &lt;span class="pl-pds"&gt;/&lt;/span&gt;Android&lt;span class="pl-k"&gt;|&lt;/span&gt;webOS&lt;span class="pl-k"&gt;|&lt;/span&gt;iPhone&lt;span class="pl-k"&gt;|&lt;/span&gt;iPad&lt;span class="pl-k"&gt;|&lt;/span&gt;iPod&lt;span class="pl-k"&gt;|&lt;/span&gt;BlackBerry&lt;span class="pl-k"&gt;|&lt;/span&gt;IEMobile&lt;span class="pl-k"&gt;|&lt;/span&gt;Opera Mini&lt;span class="pl-pds"&gt;/&lt;/span&gt;i&lt;/span&gt;.&lt;span class="pl-c1"&gt;test&lt;/span&gt;(&lt;span class="pl-c1"&gt;navigator&lt;/span&gt;.&lt;span class="pl-c1"&gt;userAgent&lt;/span&gt;)
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Mobile&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Desktop&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;detectDeviceType&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Mobile" or "Desktop"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-elementcontains" class="anchor" aria-hidden="true" href="#elementcontains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;elementContains&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;parent&lt;/code&gt; element contains the &lt;code&gt;child&lt;/code&gt; element, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Check that &lt;code&gt;parent&lt;/code&gt; is not the same element as &lt;code&gt;child&lt;/code&gt;, use &lt;code&gt;parent.contains(child)&lt;/code&gt; to check if the &lt;code&gt;parent&lt;/code&gt; element contains the &lt;code&gt;child&lt;/code&gt; element.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;elementContains&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;parent&lt;/span&gt;, &lt;span class="pl-smi"&gt;child&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; parent &lt;span class="pl-k"&gt;!==&lt;/span&gt; child &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;parent&lt;/span&gt;.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(child);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;elementContains&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;head&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;title&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;elementContains&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;body&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;body&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-elementisvisibleinviewport-" class="anchor" aria-hidden="true" href="#elementisvisibleinviewport-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;elementIsVisibleInViewport &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the element specified is visible in the viewport, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Element.getBoundingClientRect()&lt;/code&gt; and the &lt;code&gt;window.inner(Width|Height)&lt;/code&gt; values
to determine if a given element is visible in the viewport.
Omit the second argument to determine if the element is entirely visible, or specify &lt;code&gt;true&lt;/code&gt; to determine if
it is partially visible.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;elementIsVisibleInViewport&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;partiallyVisible&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;top&lt;/span&gt;, &lt;span class="pl-c1"&gt;left&lt;/span&gt;, &lt;span class="pl-c1"&gt;bottom&lt;/span&gt;, &lt;span class="pl-c1"&gt;right&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;getBoundingClientRect&lt;/span&gt;();
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;innerHeight&lt;/span&gt;, &lt;span class="pl-c1"&gt;innerWidth&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;window&lt;/span&gt;;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; partiallyVisible
    &lt;span class="pl-k"&gt;?&lt;/span&gt; ((top &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; top &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; innerHeight) &lt;span class="pl-k"&gt;||&lt;/span&gt; (bottom &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; bottom &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; innerHeight)) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        ((left &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; left &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; innerWidth) &lt;span class="pl-k"&gt;||&lt;/span&gt; (right &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; right &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; innerWidth))
    &lt;span class="pl-k"&gt;:&lt;/span&gt; top &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; left &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; bottom &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; innerHeight &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; right &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; innerWidth;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; e.g. 100x100 viewport and a 10x10px element at position {top: -1, left: 0, bottom: 9, right: 10}&lt;/span&gt;
&lt;span class="pl-en"&gt;elementIsVisibleInViewport&lt;/span&gt;(el); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false - (not fully visible)&lt;/span&gt;
&lt;span class="pl-en"&gt;elementIsVisibleInViewport&lt;/span&gt;(el, &lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true - (partially visible)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-formtoobject" class="anchor" aria-hidden="true" href="#formtoobject"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;formToObject&lt;/h3&gt;
&lt;p&gt;Encode a set of form elements as an &lt;code&gt;object&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;FormData&lt;/code&gt; constructor to convert the HTML &lt;code&gt;form&lt;/code&gt; to &lt;code&gt;FormData&lt;/code&gt;, &lt;code&gt;Array.from()&lt;/code&gt; to convert to an array.
Collect the object from the array, using &lt;code&gt;Array.prototype.reduce()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;formToObject&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;form&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;FormData&lt;/span&gt;(form)).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, [&lt;span class="pl-smi"&gt;key&lt;/span&gt;, &lt;span class="pl-smi"&gt;value&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ({
      &lt;span class="pl-k"&gt;...&lt;/span&gt;acc,
      [key]&lt;span class="pl-k"&gt;:&lt;/span&gt; value
    }),
    {}
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;formToObject&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#form&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { email: 'test@email.com', name: 'Test Name' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getimages" class="anchor" aria-hidden="true" href="#getimages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;getImages&lt;/h3&gt;
&lt;p&gt;Fetches all images from within an element and puts them into an array&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Element.prototype.getElementsByTagName()&lt;/code&gt; to fetch all &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; elements inside the provided element, &lt;code&gt;Array.prototype.map()&lt;/code&gt; to map every &lt;code&gt;src&lt;/code&gt; attribute of their respective &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element, then create a &lt;code&gt;Set&lt;/code&gt; to eliminate duplicates and return the array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;getImages&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;includeDuplicates&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;images&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;getElementsByTagName&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;img&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)].&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;img&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;img&lt;/span&gt;.&lt;span class="pl-c1"&gt;getAttribute&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;src&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; includeDuplicates &lt;span class="pl-k"&gt;?&lt;/span&gt; images &lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(images)];
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;getImages&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['image1.jpg', 'image2.png', 'image1.png', '...']&lt;/span&gt;
&lt;span class="pl-en"&gt;getImages&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['image1.jpg', 'image2.png', '...']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getscrollposition" class="anchor" aria-hidden="true" href="#getscrollposition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;getScrollPosition&lt;/h3&gt;
&lt;p&gt;Returns the scroll position of the current page.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;pageXOffset&lt;/code&gt; and &lt;code&gt;pageYOffset&lt;/code&gt; if they are defined, otherwise &lt;code&gt;scrollLeft&lt;/code&gt; and &lt;code&gt;scrollTop&lt;/code&gt;.
You can omit &lt;code&gt;el&lt;/code&gt; to use a default value of &lt;code&gt;window&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;getScrollPosition&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;window&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ({
  x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;pageXOffset&lt;/span&gt; &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;pageXOffset&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-smi"&gt;scrollLeft&lt;/span&gt;,
  y&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;pageYOffset&lt;/span&gt; &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;pageYOffset&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-smi"&gt;scrollTop&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;getScrollPosition&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {x: 0, y: 200}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getstyle" class="anchor" aria-hidden="true" href="#getstyle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;getStyle&lt;/h3&gt;
&lt;p&gt;Returns the value of a CSS rule for the specified element.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Window.getComputedStyle()&lt;/code&gt; to get the value of the CSS rule for the specified element.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;getStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;ruleName&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;getComputedStyle&lt;/span&gt;(el)[ruleName];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;getStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;p&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;font-size&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '16px'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hasclass" class="anchor" aria-hidden="true" href="#hasclass"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hasClass&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the element has the specified class, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;element.classList.contains()&lt;/code&gt; to check if the element has the specified class.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;hasClass&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;className&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-smi"&gt;classList&lt;/span&gt;.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(className);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;hasClass&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;p.special&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;special&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hashbrowser-" class="anchor" aria-hidden="true" href="#hashbrowser-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hashBrowser &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Creates a hash for a value using the &lt;a href="https://en.wikipedia.org/wiki/SHA-2" rel="nofollow"&gt;SHA-256&lt;/a&gt; algorithm. Returns a promise.&lt;/p&gt;
&lt;p&gt;Use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto" rel="nofollow"&gt;SubtleCrypto&lt;/a&gt; API to create a hash for the given value.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;hashBrowser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;crypto&lt;/span&gt;.&lt;span class="pl-smi"&gt;subtle&lt;/span&gt;.&lt;span class="pl-en"&gt;digest&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SHA-256&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;TextEncoder&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;encode&lt;/span&gt;(val)).&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-smi"&gt;h&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; hexes &lt;span class="pl-k"&gt;=&lt;/span&gt; [],
      view &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;DataView&lt;/span&gt;(h);
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;byteLength&lt;/span&gt;; i &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;)
      &lt;span class="pl-smi"&gt;hexes&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;00000000&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;view&lt;/span&gt;.&lt;span class="pl-en"&gt;getUint32&lt;/span&gt;(i).&lt;span class="pl-c1"&gt;toString&lt;/span&gt;(&lt;span class="pl-c1"&gt;16&lt;/span&gt;)).&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;));
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;hexes&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  });&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;hashBrowser&lt;/span&gt;(&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], foo&lt;span class="pl-k"&gt;:&lt;/span&gt; { c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; } })).&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '04aa106279f5977f59f9067fa9712afc4aedc6f5862a8defc34552d8c7206393'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hide" class="anchor" aria-hidden="true" href="#hide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hide&lt;/h3&gt;
&lt;p&gt;Hides all the elements specified.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;NodeList.prototype.forEach()&lt;/code&gt; to apply &lt;code&gt;display: none&lt;/code&gt; to each element specified.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;hide&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;el&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;el].&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;e&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-c1"&gt;style&lt;/span&gt;.&lt;span class="pl-c1"&gt;display&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;none&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;hide&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelectorAll&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;img&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Hides all &amp;lt;img&amp;gt; elements on the page&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-httpsredirect" class="anchor" aria-hidden="true" href="#httpsredirect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;httpsRedirect&lt;/h3&gt;
&lt;p&gt;Redirects the page to HTTPS if its currently in HTTP. Also, pressing the back button doesn't take it back to the HTTP page as its replaced in the history.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;location.protocol&lt;/code&gt; to get the protocol currently being used. If it's not HTTPS, use &lt;code&gt;location.replace()&lt;/code&gt; to replace the existing page with the HTTPS version of the page. Use &lt;code&gt;location.href&lt;/code&gt; to get the full address, split it with &lt;code&gt;String.prototype.split()&lt;/code&gt; and remove the protocol part of the URL.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;httpsRedirect&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;protocol&lt;/span&gt; &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;href&lt;/span&gt;.&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;//&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;httpsRedirect&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If you are on http://mydomain.com, you are redirected to https://mydomain.com&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-insertafter" class="anchor" aria-hidden="true" href="#insertafter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;insertAfter&lt;/h3&gt;
&lt;p&gt;Inserts an HTML string after the end of the specified element.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;el.insertAdjacentHTML()&lt;/code&gt; with a position of &lt;code&gt;'afterend'&lt;/code&gt; to parse &lt;code&gt;htmlString&lt;/code&gt; and insert it after the end of &lt;code&gt;el&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;insertAfter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;htmlString&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;insertAdjacentHTML&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;afterend&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, htmlString);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;insertAfter&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;getElementById&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;myId&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;p&amp;gt;after&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;div id="myId"&amp;gt;...&amp;lt;/div&amp;gt; &amp;lt;p&amp;gt;after&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-insertbefore" class="anchor" aria-hidden="true" href="#insertbefore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;insertBefore&lt;/h3&gt;
&lt;p&gt;Inserts an HTML string before the start of the specified element.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;el.insertAdjacentHTML()&lt;/code&gt; with a position of &lt;code&gt;'beforebegin'&lt;/code&gt; to parse &lt;code&gt;htmlString&lt;/code&gt; and insert it before the start of &lt;code&gt;el&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;insertBefore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;htmlString&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;insertAdjacentHTML&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;beforebegin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, htmlString);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;insertBefore&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;getElementById&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;myId&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;p&amp;gt;before&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;p&amp;gt;before&amp;lt;/p&amp;gt; &amp;lt;div id="myId"&amp;gt;...&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isbrowsertabfocused" class="anchor" aria-hidden="true" href="#isbrowsertabfocused"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isBrowserTabFocused&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the browser tab of the page is focused, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;Document.hidden&lt;/code&gt; property, introduced by the Page Visibility API to check if the browser tab of the page is visible or hidden.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isBrowserTabFocused&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-smi"&gt;hidden&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isBrowserTabFocused&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-nodelisttoarray" class="anchor" aria-hidden="true" href="#nodelisttoarray"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nodeListToArray&lt;/h3&gt;
&lt;p&gt;Converts a &lt;code&gt;NodeList&lt;/code&gt; to an array.&lt;/p&gt;
&lt;p&gt;Use spread operator inside new array to convert a &lt;code&gt;NodeList&lt;/code&gt; to an array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;nodeListToArray&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;nodeList&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;nodeList];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;nodeListToArray&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;childNodes&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ &amp;lt;!DOCTYPE html&amp;gt;, html ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-observemutations-" class="anchor" aria-hidden="true" href="#observemutations-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;observeMutations &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Returns a new MutationObserver and runs the provided callback for each mutation on the specified element.&lt;/p&gt;
&lt;p&gt;Use a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver" rel="nofollow"&gt;&lt;code&gt;MutationObserver&lt;/code&gt;&lt;/a&gt; to observe mutations on the given element.
Use &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; to run the callback for each mutation that is observed.
Omit the third argument, &lt;code&gt;options&lt;/code&gt;, to use the default &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver#MutationObserverInit" rel="nofollow"&gt;options&lt;/a&gt; (all &lt;code&gt;true&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;observeMutations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;element&lt;/span&gt;, &lt;span class="pl-smi"&gt;callback&lt;/span&gt;, &lt;span class="pl-smi"&gt;options&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;observer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MutationObserver&lt;/span&gt;(&lt;span class="pl-smi"&gt;mutations&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;mutations&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;m&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;callback&lt;/span&gt;(m)));
  &lt;span class="pl-smi"&gt;observer&lt;/span&gt;.&lt;span class="pl-c1"&gt;observe&lt;/span&gt;(
    element,
    &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;assign&lt;/span&gt;(
      {
        childList&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
        attributes&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
        attributeOldValue&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
        characterData&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
        characterDataOldValue&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
        subtree&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      options
    )
  );
  &lt;span class="pl-k"&gt;return&lt;/span&gt; observer;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;obs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;observeMutations&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;, &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Logs all mutations that happen on the page&lt;/span&gt;
&lt;span class="pl-smi"&gt;obs&lt;/span&gt;.&lt;span class="pl-c1"&gt;disconnect&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Disconnects the observer and stops logging mutations on the page&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-off" class="anchor" aria-hidden="true" href="#off"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;off&lt;/h3&gt;
&lt;p&gt;Removes an event listener from an element.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;EventTarget.removeEventListener()&lt;/code&gt; to remove an event listener from an element.
Omit the fourth argument &lt;code&gt;opts&lt;/code&gt; to use &lt;code&gt;false&lt;/code&gt; or specify it based on the options used when the event listener was added.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;off&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;evt&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;opts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;removeEventListener&lt;/span&gt;(evt, fn, opts);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;.&lt;span class="pl-c1"&gt;addEventListener&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, fn);
&lt;span class="pl-en"&gt;off&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, fn); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; no longer logs '!' upon clicking on the page&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-on" class="anchor" aria-hidden="true" href="#on"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;on&lt;/h3&gt;
&lt;p&gt;Adds an event listener to an element with the ability to use event delegation.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;EventTarget.addEventListener()&lt;/code&gt; to add an event listener to an element. If there is a &lt;code&gt;target&lt;/code&gt; property supplied to the options object, ensure the event target matches the target specified and then invoke the callback by supplying the correct &lt;code&gt;this&lt;/code&gt; context.
Returns a reference to the custom delegator function, in order to be possible to use with &lt;a href="#off"&gt;&lt;code&gt;off&lt;/code&gt;&lt;/a&gt;.
Omit &lt;code&gt;opts&lt;/code&gt; to default to non-delegation behavior and event bubbling.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;on&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;evt&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;opts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {}) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;delegatorFn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;e&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt;.&lt;span class="pl-c1"&gt;matches&lt;/span&gt;(&lt;span class="pl-smi"&gt;opts&lt;/span&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;call&lt;/span&gt;(&lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt;, e);
  &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;addEventListener&lt;/span&gt;(evt, &lt;span class="pl-smi"&gt;opts&lt;/span&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; delegatorFn &lt;span class="pl-k"&gt;:&lt;/span&gt; fn, &lt;span class="pl-smi"&gt;opts&lt;/span&gt;.&lt;span class="pl-c1"&gt;options&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;opts&lt;/span&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; delegatorFn;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, fn); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logs '!' upon clicking the body&lt;/span&gt;
&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, fn, { target&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;p&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logs '!' upon clicking a `p` element child of the body&lt;/span&gt;
&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, fn, { options&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use capturing instead of bubbling&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-onuserinputchange-" class="anchor" aria-hidden="true" href="#onuserinputchange-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;onUserInputChange &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Run the callback whenever the user input type changes (&lt;code&gt;mouse&lt;/code&gt; or &lt;code&gt;touch&lt;/code&gt;). Useful for enabling/disabling code depending on the input device. This process is dynamic and works with hybrid devices (e.g. touchscreen laptops).&lt;/p&gt;
&lt;p&gt;Use two event listeners. Assume &lt;code&gt;mouse&lt;/code&gt; input initially and bind a &lt;code&gt;touchstart&lt;/code&gt; event listener to the document.
On &lt;code&gt;touchstart&lt;/code&gt;, add a &lt;code&gt;mousemove&lt;/code&gt; event listener to listen for two consecutive &lt;code&gt;mousemove&lt;/code&gt; events firing within 20ms, using &lt;code&gt;performance.now()&lt;/code&gt;.
Run the callback with the input type as an argument in either of these situations.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;onUserInputChange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;callback&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; type &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mouse&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    lastTime &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mousemoveHandler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;now&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;performance&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;();
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (now &lt;span class="pl-k"&gt;-&lt;/span&gt; lastTime &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;)
      (type &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mouse&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-en"&gt;callback&lt;/span&gt;(type), &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;removeEventListener&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mousemove&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, mousemoveHandler);
    lastTime &lt;span class="pl-k"&gt;=&lt;/span&gt; now;
  };
  &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;addEventListener&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;touchstart&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (type &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;touch&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt;;
    (type &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;touch&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-en"&gt;callback&lt;/span&gt;(type), &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;addEventListener&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mousemove&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, mousemoveHandler);
  });
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;onUserInputChange&lt;/span&gt;(&lt;span class="pl-smi"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;The user is now using&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, type, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;as an input method.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
});&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prefix" class="anchor" aria-hidden="true" href="#prefix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;prefix&lt;/h3&gt;
&lt;p&gt;Returns the prefixed version (if necessary) of a CSS property that the browser supports.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; on an array of vendor prefix strings to test if &lt;code&gt;document.body&lt;/code&gt; has one of them defined in its &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; object, otherwise return &lt;code&gt;null&lt;/code&gt;.
Use &lt;code&gt;String.prototype.charAt()&lt;/code&gt; and &lt;code&gt;String.prototype.toUpperCase()&lt;/code&gt; to capitalize the property, which will be appended to the vendor prefix string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;prefix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;prop&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;capitalizedProp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;prop&lt;/span&gt;.&lt;span class="pl-c1"&gt;charAt&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;).&lt;span class="pl-c1"&gt;toUpperCase&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;prop&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;prefixes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;webkit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;moz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ms&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;o&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;];
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;prefixes&lt;/span&gt;.&lt;span class="pl-en"&gt;findIndex&lt;/span&gt;(
    &lt;span class="pl-smi"&gt;prefix&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;.&lt;span class="pl-c1"&gt;style&lt;/span&gt;[prefix &lt;span class="pl-k"&gt;?&lt;/span&gt; prefix &lt;span class="pl-k"&gt;+&lt;/span&gt; capitalizedProp &lt;span class="pl-k"&gt;:&lt;/span&gt; prop] &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;undefined&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  );
  &lt;span class="pl-k"&gt;return&lt;/span&gt; i &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; (i &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; prop &lt;span class="pl-k"&gt;:&lt;/span&gt; prefixes[i] &lt;span class="pl-k"&gt;+&lt;/span&gt; capitalizedProp) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;prefix&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;appearance&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'appearance' on a supported browser, otherwise 'webkitAppearance', 'mozAppearance', 'msAppearance' or 'oAppearance'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-recordanimationframes" class="anchor" aria-hidden="true" href="#recordanimationframes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;recordAnimationFrames&lt;/h3&gt;
&lt;p&gt;Invokes the provided callback on each animation frame.&lt;/p&gt;
&lt;p&gt;Use recursion.
Provided that &lt;code&gt;running&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, continue invoking &lt;code&gt;window.requestAnimationFrame()&lt;/code&gt; which invokes the provided callback.
Return an object with two methods &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; to allow manual control of the recording.
Omit the second argument, &lt;code&gt;autoStart&lt;/code&gt;, to implicitly call &lt;code&gt;start&lt;/code&gt; when the function is invoked.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;recordAnimationFrames&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;callback&lt;/span&gt;, &lt;span class="pl-smi"&gt;autoStart&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; running &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
    raf;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;stop&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    running &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
    &lt;span class="pl-en"&gt;cancelAnimationFrame&lt;/span&gt;(raf);
  };
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;start&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    running &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
    &lt;span class="pl-en"&gt;run&lt;/span&gt;();
  };
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;run&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    raf &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;requestAnimationFrame&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="pl-en"&gt;callback&lt;/span&gt;();
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (running) &lt;span class="pl-en"&gt;run&lt;/span&gt;();
    });
  };
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (autoStart) &lt;span class="pl-en"&gt;start&lt;/span&gt;();
  &lt;span class="pl-k"&gt;return&lt;/span&gt; { start, stop };
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;cb&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Animation frame fired&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;recorder&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;recordAnimationFrames&lt;/span&gt;(cb); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logs 'Animation frame fired' on each animation frame&lt;/span&gt;
&lt;span class="pl-smi"&gt;recorder&lt;/span&gt;.&lt;span class="pl-c1"&gt;stop&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; stops logging&lt;/span&gt;
&lt;span class="pl-smi"&gt;recorder&lt;/span&gt;.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; starts again&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;recorder2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;recordAnimationFrames&lt;/span&gt;(cb, &lt;span class="pl-c1"&gt;false&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; `start` needs to be explicitly called to begin recording frames&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-redirect" class="anchor" aria-hidden="true" href="#redirect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;redirect&lt;/h3&gt;
&lt;p&gt;Redirects to a specified URL.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;window.location.href&lt;/code&gt; or &lt;code&gt;window.location.replace()&lt;/code&gt; to redirect to &lt;code&gt;url&lt;/code&gt;.
Pass a second argument to simulate a link click (&lt;code&gt;true&lt;/code&gt; - default) or an HTTP redirect (&lt;code&gt;false&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;redirect&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;url&lt;/span&gt;, &lt;span class="pl-smi"&gt;asLink&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  asLink &lt;span class="pl-k"&gt;?&lt;/span&gt; (&lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;href&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; url) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(url);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://google.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-runasync-" class="anchor" aria-hidden="true" href="#runasync-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;runAsync &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Runs a function in a separate thread by using a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers" rel="nofollow"&gt;Web Worker&lt;/a&gt;, allowing long running functions to not block the UI.&lt;/p&gt;
&lt;p&gt;Create a new &lt;code&gt;Worker&lt;/code&gt; using a &lt;code&gt;Blob&lt;/code&gt; object URL, the contents of which should be the stringified version of the supplied function.
Immediately post the return value of calling the function back.
Return a promise, listening for &lt;code&gt;onmessage&lt;/code&gt; and &lt;code&gt;onerror&lt;/code&gt; events and resolving the data posted back from the worker, or throwing an error.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;runAsync&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;worker&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Worker&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;URL&lt;/span&gt;.&lt;span class="pl-en"&gt;createObjectURL&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Blob&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;postMessage((&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;fn&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;)());&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;]), {
      type&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/javascript; charset=utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    })
  );
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Promise&lt;/span&gt;((&lt;span class="pl-smi"&gt;res&lt;/span&gt;, &lt;span class="pl-smi"&gt;rej&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-smi"&gt;worker&lt;/span&gt;.&lt;span class="pl-en"&gt;onmessage&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ({ data }) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="pl-en"&gt;res&lt;/span&gt;(data), &lt;span class="pl-smi"&gt;worker&lt;/span&gt;.&lt;span class="pl-c1"&gt;terminate&lt;/span&gt;();
    };
    &lt;span class="pl-smi"&gt;worker&lt;/span&gt;.&lt;span class="pl-en"&gt;onerror&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="pl-en"&gt;rej&lt;/span&gt;(err), &lt;span class="pl-smi"&gt;worker&lt;/span&gt;.&lt;span class="pl-c1"&gt;terminate&lt;/span&gt;();
    };
  });
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;longRunningFunction&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; result &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;; i&lt;span class="pl-k"&gt;++&lt;/span&gt;)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;let&lt;/span&gt; j &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; j &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;700&lt;/span&gt;; j&lt;span class="pl-k"&gt;++&lt;/span&gt;) &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;let&lt;/span&gt; k &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; k &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;; k&lt;span class="pl-k"&gt;++&lt;/span&gt;) result &lt;span class="pl-k"&gt;=&lt;/span&gt; result &lt;span class="pl-k"&gt;+&lt;/span&gt; i &lt;span class="pl-k"&gt;+&lt;/span&gt; j &lt;span class="pl-k"&gt;+&lt;/span&gt; k;

  &lt;span class="pl-k"&gt;return&lt;/span&gt; result;
};
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;  NOTE: Since the function is running in a different context, closures are not supported.&lt;/span&gt;
&lt;span class="pl-c"&gt;  The function supplied to `runAsync` gets stringified, so everything becomes literal.&lt;/span&gt;
&lt;span class="pl-c"&gt;  All variables and functions must be defined inside.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-en"&gt;runAsync&lt;/span&gt;(longRunningFunction).&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 209685000000&lt;/span&gt;
&lt;span class="pl-en"&gt;runAsync&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-k"&gt;**&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;).&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1000&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; outsideVariable &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;;
&lt;span class="pl-en"&gt;runAsync&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; outsideVariable).&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'undefined'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-scrolltotop" class="anchor" aria-hidden="true" href="#scrolltotop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;scrollToTop&lt;/h3&gt;
&lt;p&gt;Smooth-scrolls to the top of the page.&lt;/p&gt;
&lt;p&gt;Get distance from top using &lt;code&gt;document.documentElement.scrollTop&lt;/code&gt; or &lt;code&gt;document.body.scrollTop&lt;/code&gt;.
Scroll by a fraction of the distance from the top. Use &lt;code&gt;window.requestAnimationFrame()&lt;/code&gt; to animate the scrolling.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;scrollToTop&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;documentElement&lt;/span&gt;.&lt;span class="pl-smi"&gt;scrollTop&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;.&lt;span class="pl-smi"&gt;scrollTop&lt;/span&gt;;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (c &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-en"&gt;requestAnimationFrame&lt;/span&gt;(scrollToTop);
    &lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;scrollTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, c &lt;span class="pl-k"&gt;-&lt;/span&gt; c &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;);
  }
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;scrollToTop&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-serializeform" class="anchor" aria-hidden="true" href="#serializeform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;serializeForm&lt;/h3&gt;
&lt;p&gt;Encode a set of form elements as a query string.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;FormData&lt;/code&gt; constructor to convert the HTML &lt;code&gt;form&lt;/code&gt; to &lt;code&gt;FormData&lt;/code&gt;, &lt;code&gt;Array.from()&lt;/code&gt; to convert to an array, passing a map function as the second argument.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; and &lt;code&gt;window.encodeURIComponent()&lt;/code&gt; to encode each field's value.
Use &lt;code&gt;Array.prototype.join()&lt;/code&gt; with appropriate argumens to produce an appropriate query string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;serializeForm&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;form&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;FormData&lt;/span&gt;(form), &lt;span class="pl-smi"&gt;field&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;field&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(encodeURIComponent).&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;serializeForm&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#form&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; email=test%40email.com&amp;amp;name=Test%20Name&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-setstyle" class="anchor" aria-hidden="true" href="#setstyle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;setStyle&lt;/h3&gt;
&lt;p&gt;Sets the value of a CSS rule for the specified element.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;element.style&lt;/code&gt; to set the value of the CSS rule for the specified element to &lt;code&gt;val&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;setStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;ruleName&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;style&lt;/span&gt;[ruleName] &lt;span class="pl-k"&gt;=&lt;/span&gt; val);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;setStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;p&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;font-size&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;20px&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The first &amp;lt;p&amp;gt; element on the page will have a font-size of 20px&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-show" class="anchor" aria-hidden="true" href="#show"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;show&lt;/h3&gt;
&lt;p&gt;Shows all the elements specified.&lt;/p&gt;
&lt;p&gt;Use the spread operator (&lt;code&gt;...&lt;/code&gt;) and &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; to clear the &lt;code&gt;display&lt;/code&gt; property for each element specified.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;show&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;el&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;el].&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;e&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-c1"&gt;style&lt;/span&gt;.&lt;span class="pl-c1"&gt;display&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;show&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelectorAll&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;img&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Shows all &amp;lt;img&amp;gt; elements on the page&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-smoothscroll" class="anchor" aria-hidden="true" href="#smoothscroll"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;smoothScroll&lt;/h3&gt;
&lt;p&gt;Smoothly scrolls the element on which it's called into the visible area of the browser window.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;.scrollIntoView&lt;/code&gt; method to scroll the element.
Pass &lt;code&gt;{ behavior: 'smooth' }&lt;/code&gt; to &lt;code&gt;.scrollIntoView&lt;/code&gt; so it scrolls smoothly.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;smoothScroll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;element&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(element).&lt;span class="pl-c1"&gt;scrollIntoView&lt;/span&gt;({
    behavior&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;smooth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  });&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;smoothScroll&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#fooBar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; scrolls smoothly to the element with the id fooBar&lt;/span&gt;
&lt;span class="pl-en"&gt;smoothScroll&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.fooBar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; scrolls smoothly to the first element with a class of fooBar&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-toggleclass" class="anchor" aria-hidden="true" href="#toggleclass"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;toggleClass&lt;/h3&gt;
&lt;p&gt;Toggle a class for an element.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;element.classList.toggle()&lt;/code&gt; to toggle the specified class for the element.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;toggleClass&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;className&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-smi"&gt;classList&lt;/span&gt;.&lt;span class="pl-c1"&gt;toggle&lt;/span&gt;(className);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;toggleClass&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;p.special&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;special&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The paragraph will not have the 'special' class anymore&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-triggerevent" class="anchor" aria-hidden="true" href="#triggerevent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;triggerEvent&lt;/h3&gt;
&lt;p&gt;Triggers a specific event on a given element, optionally passing custom data.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;new CustomEvent()&lt;/code&gt; to create an event from the specified &lt;code&gt;eventType&lt;/code&gt; and details.
Use &lt;code&gt;el.dispatchEvent()&lt;/code&gt; to trigger the newly created event on the given element.
Omit the third argument, &lt;code&gt;detail&lt;/code&gt;, if you do not want to pass custom data to the triggered event.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;triggerEvent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;el&lt;/span&gt;, &lt;span class="pl-smi"&gt;eventType&lt;/span&gt;, &lt;span class="pl-smi"&gt;detail&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;dispatchEvent&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CustomEvent&lt;/span&gt;(eventType, { detail }));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;triggerEvent&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;getElementById&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;myId&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;triggerEvent&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;getElementById&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;myId&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { username&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bob&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; });&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uuidgeneratorbrowser" class="anchor" aria-hidden="true" href="#uuidgeneratorbrowser"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UUIDGeneratorBrowser&lt;/h3&gt;
&lt;p&gt;Generates a UUID in a browser.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;crypto&lt;/code&gt; API to generate a UUID, compliant with &lt;a href="https://www.ietf.org/rfc/rfc4122.txt" rel="nofollow"&gt;RFC4122&lt;/a&gt; version 4.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;UUIDGeneratorBrowser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  ([&lt;span class="pl-c1"&gt;1e7&lt;/span&gt;] &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1e3&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;4e3&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8e3&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1e11&lt;/span&gt;).&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[018]&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    (c &lt;span class="pl-k"&gt;^&lt;/span&gt; (&lt;span class="pl-smi"&gt;crypto&lt;/span&gt;.&lt;span class="pl-en"&gt;getRandomValues&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Uint8Array&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;))[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; (&lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; (c &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;)))).&lt;span class="pl-c1"&gt;toString&lt;/span&gt;(&lt;span class="pl-c1"&gt;16&lt;/span&gt;)
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;UUIDGeneratorBrowser&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '7982fcfe-5721-4632-bede-6000885be57d'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-️-date-1" class="anchor" aria-hidden="true" href="#️-date-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="stopwatch" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/23f1.png"&gt;⏱️&lt;/g-emoji&gt; Date&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-dayofyear" class="anchor" aria-hidden="true" href="#dayofyear"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dayOfYear&lt;/h3&gt;
&lt;p&gt;Gets the day of the year from a &lt;code&gt;Date&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;new Date()&lt;/code&gt; and &lt;code&gt;Date.prototype.getFullYear()&lt;/code&gt; to get the first day of the year as a &lt;code&gt;Date&lt;/code&gt; object, subtract it from the provided &lt;code&gt;date&lt;/code&gt; and divide with the milliseconds in each day to get the result.
Use &lt;code&gt;Math.floor()&lt;/code&gt; to appropriately round the resulting day count to an integer.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;dayOfYear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;((date &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-c1"&gt;getFullYear&lt;/span&gt;(), &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dayOfYear&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 272&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-formatduration" class="anchor" aria-hidden="true" href="#formatduration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;formatDuration&lt;/h3&gt;
&lt;p&gt;Returns the human readable format of the given number of milliseconds.&lt;/p&gt;
&lt;p&gt;Divide &lt;code&gt;ms&lt;/code&gt; with the appropriate values to obtain the appropriate values for &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt; and &lt;code&gt;millisecond&lt;/code&gt;.
Use &lt;code&gt;Object.entries()&lt;/code&gt; with &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to keep only non-zero values.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to create the string for each value, pluralizing appropriately.
Use &lt;code&gt;String.prototype.join(', ')&lt;/code&gt; to combine the values into a string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;formatDuration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ms&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (ms &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) ms &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;ms;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;time&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    day&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(ms &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;86400000&lt;/span&gt;),
    hour&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(ms &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;3600000&lt;/span&gt;) &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;,
    minute&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(ms &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;60000&lt;/span&gt;) &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;,
    second&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(ms &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;) &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;,
    millisecond&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(ms) &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
  };
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;entries&lt;/span&gt;(time)
    .&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(([&lt;span class="pl-smi"&gt;key&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;val&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;key&lt;span class="pl-pse"&gt;}${&lt;/span&gt;val &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;formatDuration&lt;/span&gt;(&lt;span class="pl-c1"&gt;1001&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '1 second, 1 millisecond'&lt;/span&gt;
&lt;span class="pl-en"&gt;formatDuration&lt;/span&gt;(&lt;span class="pl-c1"&gt;34325055574&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '397 days, 6 hours, 44 minutes, 15 seconds, 574 milliseconds'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getcolontimefromdate" class="anchor" aria-hidden="true" href="#getcolontimefromdate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;getColonTimeFromDate&lt;/h3&gt;
&lt;p&gt;Returns a string of the form &lt;code&gt;HH:MM:SS&lt;/code&gt; from a &lt;code&gt;Date&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Date.prototype.toTimeString()&lt;/code&gt; and &lt;code&gt;String.prototype.slice()&lt;/code&gt; to get the &lt;code&gt;HH:MM:SS&lt;/code&gt; part of a given &lt;code&gt;Date&lt;/code&gt; object.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;getColonTimeFromDate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;toTimeString&lt;/span&gt;().&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;getColonTimeFromDate&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "08:38:00"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getdaysdiffbetweendates" class="anchor" aria-hidden="true" href="#getdaysdiffbetweendates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;getDaysDiffBetweenDates&lt;/h3&gt;
&lt;p&gt;Returns the difference (in days) between two dates.&lt;/p&gt;
&lt;p&gt;Calculate the difference (in days) between two &lt;code&gt;Date&lt;/code&gt; objects.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;getDaysDiffBetweenDates&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;dateInitial&lt;/span&gt;, &lt;span class="pl-smi"&gt;dateFinal&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  (dateFinal &lt;span class="pl-k"&gt;-&lt;/span&gt; dateInitial) &lt;span class="pl-k"&gt;/&lt;/span&gt; (&lt;span class="pl-c1"&gt;1000&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;3600&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;getDaysDiffBetweenDates&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2017-12-13&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2017-12-22&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getmeridiemsuffixofinteger" class="anchor" aria-hidden="true" href="#getmeridiemsuffixofinteger"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;getMeridiemSuffixOfInteger&lt;/h3&gt;
&lt;p&gt;Converts an integer to a suffixed string, adding &lt;code&gt;am&lt;/code&gt; or &lt;code&gt;pm&lt;/code&gt; based on its value.&lt;/p&gt;
&lt;p&gt;Use the modulo operator (&lt;code&gt;%&lt;/code&gt;) and conditional checks to transform an integer to a stringified 12-hour format with meridiem suffix.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;getMeridiemSuffixOfInteger&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;num&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  num &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; num &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;am&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;:&lt;/span&gt; num &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt;
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pm&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;:&lt;/span&gt; num &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt;
    &lt;span class="pl-k"&gt;?&lt;/span&gt; (num &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;am&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;:&lt;/span&gt; (num &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pm&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;getMeridiemSuffixOfInteger&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "12am"&lt;/span&gt;
&lt;span class="pl-en"&gt;getMeridiemSuffixOfInteger&lt;/span&gt;(&lt;span class="pl-c1"&gt;11&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "11am"&lt;/span&gt;
&lt;span class="pl-en"&gt;getMeridiemSuffixOfInteger&lt;/span&gt;(&lt;span class="pl-c1"&gt;13&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "1pm"&lt;/span&gt;
&lt;span class="pl-en"&gt;getMeridiemSuffixOfInteger&lt;/span&gt;(&lt;span class="pl-c1"&gt;25&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "1pm"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isafterdate" class="anchor" aria-hidden="true" href="#isafterdate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isAfterDate&lt;/h3&gt;
&lt;p&gt;Check if a date is after another date.&lt;/p&gt;
&lt;p&gt;Use the greater than operator (&lt;code&gt;&amp;gt;&lt;/code&gt;) to check if the first date comes after the second one.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isAfterDate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;dateA&lt;/span&gt;, &lt;span class="pl-smi"&gt;dateB&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; dateA &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; dateB;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isAfterDate&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2010&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;21&lt;/span&gt;), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2010&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isbeforedate" class="anchor" aria-hidden="true" href="#isbeforedate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isBeforeDate&lt;/h3&gt;
&lt;p&gt;Check if a date is before another date.&lt;/p&gt;
&lt;p&gt;Use the less than operator (&lt;code&gt;&amp;lt;&lt;/code&gt;) to check if the first date comes before the second one.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isBeforeDate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;dateA&lt;/span&gt;, &lt;span class="pl-smi"&gt;dateB&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; dateA &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; dateB;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isBeforeDate&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2010&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2010&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;21&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issamedate" class="anchor" aria-hidden="true" href="#issamedate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isSameDate&lt;/h3&gt;
&lt;p&gt;Check if a date is the same as another date.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Date.prototype.toISOString()&lt;/code&gt; and strict equality checking (&lt;code&gt;===&lt;/code&gt;) to check if the first date is the same as the second one.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isSameDate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;dateA&lt;/span&gt;, &lt;span class="pl-smi"&gt;dateB&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;dateA&lt;/span&gt;.&lt;span class="pl-en"&gt;toISOString&lt;/span&gt;() &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-smi"&gt;dateB&lt;/span&gt;.&lt;span class="pl-en"&gt;toISOString&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isSameDate&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2010&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2010&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isweekday" class="anchor" aria-hidden="true" href="#isweekday"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isWeekday&lt;/h3&gt;
&lt;p&gt;Results in a boolean representation of a specific date.&lt;/p&gt;
&lt;p&gt;Pass the specific date object firstly.
Use &lt;code&gt;Date.getDay()&lt;/code&gt; to check weekday by using a modulo operator and then returning a boolean.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isWeekday&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (t &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;()) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-c1"&gt;getDay&lt;/span&gt;() &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isWeekday&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true (if current date is 2019-07-19)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isweekend" class="anchor" aria-hidden="true" href="#isweekend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isWeekend&lt;/h3&gt;
&lt;p&gt;Results in a boolean representation of a specific date.&lt;/p&gt;
&lt;p&gt;Pass the specific date object firstly.
Use &lt;code&gt;Date.getDay()&lt;/code&gt; to check weekend based on the day being returned as 0 - 6 using a modulo operation then return a boolean.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isWeekend&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (t &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;()) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-c1"&gt;getDay&lt;/span&gt;() &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isWeekend&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2018-10-19 (if current date is 2018-10-18)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-maxdate" class="anchor" aria-hidden="true" href="#maxdate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;maxDate&lt;/h3&gt;
&lt;p&gt;Returns the maximum of the given dates.&lt;/p&gt;
&lt;p&gt;Use the ES6 spread syntax with &lt;code&gt;Math.max&lt;/code&gt; to find the maximum date value, &lt;code&gt;new Date()&lt;/code&gt; to convert it to a &lt;code&gt;Date&lt;/code&gt; object.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;maxDate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dates&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;dates));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;array&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2017&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;13&lt;/span&gt;),
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2018&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;),
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2016&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;),
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2016&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;)
];
&lt;span class="pl-en"&gt;maxDate&lt;/span&gt;(array); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2018-03-11T22:00:00.000Z&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mindate" class="anchor" aria-hidden="true" href="#mindate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;minDate&lt;/h3&gt;
&lt;p&gt;Returns the minimum of the given dates.&lt;/p&gt;
&lt;p&gt;Use the ES6 spread syntax to find the minimum date value, &lt;code&gt;new Date()&lt;/code&gt; to convert it to a &lt;code&gt;Date&lt;/code&gt; object.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;minDate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dates&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;min&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;dates));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;array&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2017&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;13&lt;/span&gt;),
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2018&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;),
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2016&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;),
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2016&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;)
];
&lt;span class="pl-en"&gt;minDate&lt;/span&gt;(array); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2016-01-08T22:00:00.000Z&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tomorrow" class="anchor" aria-hidden="true" href="#tomorrow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tomorrow&lt;/h3&gt;
&lt;p&gt;Results in a string representation of tomorrow's date.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;new Date()&lt;/code&gt; to get the current date, increment by one using &lt;code&gt;Date.getDate()&lt;/code&gt; and set the value to the result using &lt;code&gt;Date.setDate()&lt;/code&gt;.
Use &lt;code&gt;Date.prototype.toISOString()&lt;/code&gt; to return a string in &lt;code&gt;yyyy-mm-dd&lt;/code&gt; format.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;tomorrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; t &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;();
  &lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-c1"&gt;setDate&lt;/span&gt;(&lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-c1"&gt;getDate&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-en"&gt;toISOString&lt;/span&gt;().&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;T&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;];
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;tomorrow&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2018-10-19 (if current date is 2018-10-18)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-yesterday" class="anchor" aria-hidden="true" href="#yesterday"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;yesterday&lt;/h3&gt;
&lt;p&gt;Results in a string representation of yesterday's date.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;new Date()&lt;/code&gt; to get the current date, decrement by one using &lt;code&gt;Date.getDate()&lt;/code&gt; and set the value to the result using &lt;code&gt;Date.setDate()&lt;/code&gt;.
Use &lt;code&gt;Date.prototype.toISOString()&lt;/code&gt; to return a string in &lt;code&gt;yyyy-mm-dd&lt;/code&gt; format.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;yesterday&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; t &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;();
  &lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-c1"&gt;setDate&lt;/span&gt;(&lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-c1"&gt;getDate&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-en"&gt;toISOString&lt;/span&gt;().&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;T&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;];
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;yesterday&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2018-10-17 (if current date is 2018-10-18)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-️-function-1" class="anchor" aria-hidden="true" href="#️-function-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="control_knobs" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f39b.png"&gt;🎛️&lt;/g-emoji&gt; Function&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-attempt" class="anchor" aria-hidden="true" href="#attempt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;attempt&lt;/h3&gt;
&lt;p&gt;Attempts to invoke a function with the provided arguments, returning either the result or the caught error object.&lt;/p&gt;
&lt;p&gt;Use a &lt;code&gt;try... catch&lt;/code&gt; block to return either the result of the function or an appropriate error.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;attempt&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;try&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;args);
  } &lt;span class="pl-k"&gt;catch&lt;/span&gt; (e) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; e &lt;span class="pl-k"&gt;instanceof&lt;/span&gt; &lt;span class="pl-c1"&gt;Error&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; e &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Error&lt;/span&gt;(e);
  }
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; elements &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;attempt&lt;/span&gt;(&lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;selector&lt;/span&gt;) {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelectorAll&lt;/span&gt;(selector);
}, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;gt;_&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;if&lt;/span&gt; (elements &lt;span class="pl-k"&gt;instanceof&lt;/span&gt; &lt;span class="pl-c1"&gt;Error&lt;/span&gt;) elements &lt;span class="pl-k"&gt;=&lt;/span&gt; []; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; elements = []&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bind" class="anchor" aria-hidden="true" href="#bind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bind&lt;/h3&gt;
&lt;p&gt;Creates a function that invokes &lt;code&gt;fn&lt;/code&gt; with a given context, optionally adding any additional supplied parameters to the beginning of the arguments.&lt;/p&gt;
&lt;p&gt;Return a &lt;code&gt;function&lt;/code&gt; that uses &lt;code&gt;Function.prototype.apply()&lt;/code&gt; to apply the given &lt;code&gt;context&lt;/code&gt; to &lt;code&gt;fn&lt;/code&gt;.
Use &lt;code&gt;Array.prototype.concat()&lt;/code&gt; to prepend any additional supplied parameters to the arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;bind&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;context&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;boundArgs&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(context, [&lt;span class="pl-k"&gt;...&lt;/span&gt;boundArgs, &lt;span class="pl-k"&gt;...&lt;/span&gt;args]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;greet&lt;/span&gt;(&lt;span class="pl-smi"&gt;greeting&lt;/span&gt;, &lt;span class="pl-smi"&gt;punctuation&lt;/span&gt;) {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; greeting &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;user&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; punctuation;
}
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;freddy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { user&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fred&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; };
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;freddyBound&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;bind&lt;/span&gt;(greet, freddy);
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-en"&gt;freddyBound&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'hi fred!'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bindkey" class="anchor" aria-hidden="true" href="#bindkey"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bindKey&lt;/h3&gt;
&lt;p&gt;Creates a function that invokes the method at a given key of an object, optionally adding any additional supplied parameters to the beginning of the arguments.&lt;/p&gt;
&lt;p&gt;Return a &lt;code&gt;function&lt;/code&gt; that uses &lt;code&gt;Function.prototype.apply()&lt;/code&gt; to bind &lt;code&gt;context[fn]&lt;/code&gt; to &lt;code&gt;context&lt;/code&gt;.
Use the spread operator (&lt;code&gt;...&lt;/code&gt;) to prepend any additional supplied parameters to the arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;bindKey&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;context&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;boundArgs&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  context[fn].&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(context, [&lt;span class="pl-k"&gt;...&lt;/span&gt;boundArgs, &lt;span class="pl-k"&gt;...&lt;/span&gt;args]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;freddy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  user&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fred&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-en"&gt;greet&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;greeting&lt;/span&gt;, &lt;span class="pl-smi"&gt;punctuation&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; greeting &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;user&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; punctuation;
  }
};
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;freddyBound&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;bindKey&lt;/span&gt;(freddy, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;greet&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-en"&gt;freddyBound&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'hi fred!'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-chainasync" class="anchor" aria-hidden="true" href="#chainasync"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;chainAsync&lt;/h3&gt;
&lt;p&gt;Chains asynchronous functions.&lt;/p&gt;
&lt;p&gt;Loop through an array of functions containing asynchronous events, calling &lt;code&gt;next&lt;/code&gt; when each asynchronous event has completed.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;chainAsync&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fns&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; curr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;last&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; fns[&lt;span class="pl-smi"&gt;fns&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;];
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;next&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; fns[curr&lt;span class="pl-k"&gt;++&lt;/span&gt;];
    fn &lt;span class="pl-k"&gt;===&lt;/span&gt; last &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;() &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(next);
  };
  &lt;span class="pl-en"&gt;next&lt;/span&gt;();
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;chainAsync&lt;/span&gt;([
  &lt;span class="pl-smi"&gt;next&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0 seconds&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(next, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;);
  },
  &lt;span class="pl-smi"&gt;next&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1 second&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(next, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;);
  },
  () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2 second&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  }
]);&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-checkprop" class="anchor" aria-hidden="true" href="#checkprop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;checkProp&lt;/h3&gt;
&lt;p&gt;Given a &lt;code&gt;predicate&lt;/code&gt; function and a &lt;code&gt;prop&lt;/code&gt; string, this curried function will then take an &lt;code&gt;object&lt;/code&gt; to inspect by calling the property and passing it to the predicate.&lt;/p&gt;
&lt;p&gt;Summon &lt;code&gt;prop&lt;/code&gt; on &lt;code&gt;obj&lt;/code&gt;, pass it to a provided &lt;code&gt;predicate&lt;/code&gt; function and return a masked boolean.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;checkProp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;predicate&lt;/span&gt;, &lt;span class="pl-smi"&gt;prop&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!!&lt;/span&gt;&lt;span class="pl-en"&gt;predicate&lt;/span&gt;(obj[prop]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;lengthIs4&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;checkProp&lt;/span&gt;(&lt;span class="pl-smi"&gt;l&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; l &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;length&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;lengthIs4&lt;/span&gt;([]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;lengthIs4&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;lengthIs4&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;])); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false (Set uses Size, not length)&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;session&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { user&lt;span class="pl-k"&gt;:&lt;/span&gt; {} };
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;validUserSession&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;checkProps&lt;/span&gt;(&lt;span class="pl-smi"&gt;u&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;u&lt;/span&gt;.&lt;span class="pl-smi"&gt;active&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;u&lt;/span&gt;.&lt;span class="pl-c1"&gt;disabled&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-en"&gt;validUserSession&lt;/span&gt;(session); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;

&lt;span class="pl-smi"&gt;session&lt;/span&gt;.&lt;span class="pl-smi"&gt;user&lt;/span&gt;.&lt;span class="pl-smi"&gt;active&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
&lt;span class="pl-en"&gt;validUserSession&lt;/span&gt;(session); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;noLength&lt;/span&gt;(&lt;span class="pl-c1"&gt;l&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; l &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;length&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;noLength&lt;/span&gt;([]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;noLength&lt;/span&gt;({}); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;noLength&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compose" class="anchor" aria-hidden="true" href="#compose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;compose&lt;/h3&gt;
&lt;p&gt;Performs right-to-left function composition.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to perform right-to-left function composition.
The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;compose&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;fns&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;fns&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;f&lt;/span&gt;, &lt;span class="pl-smi"&gt;g&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-en"&gt;g&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;args)));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;add5&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;multiply&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;*&lt;/span&gt; y;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;multiplyAndAdd5&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;compose&lt;/span&gt;(
  add5,
  multiply
);
&lt;span class="pl-en"&gt;multiplyAndAdd5&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-composeright" class="anchor" aria-hidden="true" href="#composeright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;composeRight&lt;/h3&gt;
&lt;p&gt;Performs left-to-right function composition.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to perform left-to-right function composition.
The first (leftmost) function can accept one or more arguments; the remaining functions must be unary.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;composeRight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;fns&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;fns&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;f&lt;/span&gt;, &lt;span class="pl-smi"&gt;g&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;(&lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;args)));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;add&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;+&lt;/span&gt; y;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;square&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;*&lt;/span&gt; x;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;addAndSquare&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;composeRight&lt;/span&gt;(add, square);
&lt;span class="pl-en"&gt;addAndSquare&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-converge" class="anchor" aria-hidden="true" href="#converge"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;converge&lt;/h3&gt;
&lt;p&gt;Accepts a converging function and a list of branching functions and returns a function that applies each branching function to the arguments and the results of the branching functions are passed as arguments to the converging function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; and &lt;code&gt;Function.prototype.apply()&lt;/code&gt; to apply each function to the given arguments.
Use the spread operator (&lt;code&gt;...&lt;/code&gt;) to call &lt;code&gt;coverger&lt;/code&gt; with the results of all other functions.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;converge&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;converger&lt;/span&gt;, &lt;span class="pl-smi"&gt;fns&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;converger&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;fns&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;, args)));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;average&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;converge&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a &lt;span class="pl-k"&gt;/&lt;/span&gt; b, [
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; v, &lt;span class="pl-c1"&gt;0&lt;/span&gt;),
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;
]);
&lt;span class="pl-en"&gt;average&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-curry" class="anchor" aria-hidden="true" href="#curry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;curry&lt;/h3&gt;
&lt;p&gt;Curries a function.&lt;/p&gt;
&lt;p&gt;Use recursion.
If the number of provided arguments (&lt;code&gt;args&lt;/code&gt;) is sufficient, call the passed function &lt;code&gt;fn&lt;/code&gt;.
Otherwise, return a curried function &lt;code&gt;fn&lt;/code&gt; that expects the rest of the arguments.
If you want to curry a function that accepts a variable number of arguments (a variadic function, e.g. &lt;code&gt;Math.min()&lt;/code&gt;), you can optionally pass the number of arguments to the second parameter &lt;code&gt;arity&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;curry&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;arity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  arity &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;args) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;curry&lt;/span&gt;.&lt;span class="pl-en"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;, fn, arity, &lt;span class="pl-k"&gt;...&lt;/span&gt;args);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;curry&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;pow&lt;/span&gt;)(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)(&lt;span class="pl-c1"&gt;10&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1024&lt;/span&gt;
&lt;span class="pl-en"&gt;curry&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;min&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)(&lt;span class="pl-c1"&gt;50&lt;/span&gt;)(&lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debounce" class="anchor" aria-hidden="true" href="#debounce"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;debounce&lt;/h3&gt;
&lt;p&gt;Creates a debounced function that delays invoking the provided function until at least &lt;code&gt;ms&lt;/code&gt; milliseconds have elapsed since the last time it was invoked.&lt;/p&gt;
&lt;p&gt;Each time the debounced function is invoked, clear the current pending timeout with &lt;code&gt;clearTimeout()&lt;/code&gt; and use &lt;code&gt;setTimeout()&lt;/code&gt; to create a new timeout that delays invoking the function until at least &lt;code&gt;ms&lt;/code&gt; milliseconds has elapsed. Use &lt;code&gt;Function.prototype.apply()&lt;/code&gt; to apply the &lt;code&gt;this&lt;/code&gt; context to the function and provide the necessary arguments.
Omit the second argument, &lt;code&gt;ms&lt;/code&gt;, to set the timeout at a default of 0 ms.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;debounce&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;ms&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; timeoutId;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;clearTimeout&lt;/span&gt;(timeoutId);
    timeoutId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;, args), ms);
  };
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;addEventListener&lt;/span&gt;(
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;resize&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-en"&gt;debounce&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;innerWidth&lt;/span&gt;);
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;innerHeight&lt;/span&gt;);
  }, &lt;span class="pl-c1"&gt;250&lt;/span&gt;)
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Will log the window dimensions at most every 250ms&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-defer" class="anchor" aria-hidden="true" href="#defer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;defer&lt;/h3&gt;
&lt;p&gt;Defers invoking a function until the current call stack has cleared.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;setTimeout()&lt;/code&gt; with a timeout of 1ms to add a new event to the browser event queue and allow the rendering engine to complete its work. Use the spread (&lt;code&gt;...&lt;/code&gt;) operator to supply the function with an arbitrary number of arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;defer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(fn, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;args);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Example A:&lt;/span&gt;
&lt;span class="pl-en"&gt;defer&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logs 'b' then 'a'&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Example B:&lt;/span&gt;
&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelector&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#someElement&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;innerHTML&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-en"&gt;longRunningFunction&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Browser will not update the HTML until this has finished&lt;/span&gt;
&lt;span class="pl-en"&gt;defer&lt;/span&gt;(longRunningFunction); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Browser will update the HTML then run the function&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-delay" class="anchor" aria-hidden="true" href="#delay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;delay&lt;/h3&gt;
&lt;p&gt;Invokes the provided function after &lt;code&gt;wait&lt;/code&gt; milliseconds.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;setTimeout()&lt;/code&gt; to delay execution of &lt;code&gt;fn&lt;/code&gt;.
Use the spread (&lt;code&gt;...&lt;/code&gt;) operator to supply the function with an arbitrary number of arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;delay&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;wait&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(fn, wait, &lt;span class="pl-k"&gt;...&lt;/span&gt;args);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;delay&lt;/span&gt;(
  &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;text&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(text);
  },
  &lt;span class="pl-c1"&gt;1000&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;later&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Logs 'later' after one second.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-functionname" class="anchor" aria-hidden="true" href="#functionname"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;functionName&lt;/h3&gt;
&lt;p&gt;Logs the name of a function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;console.debug()&lt;/code&gt; and the &lt;code&gt;name&lt;/code&gt; property of the passed method to log the method's name to the &lt;code&gt;debug&lt;/code&gt; channel of the console.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;functionName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;debug&lt;/span&gt;(&lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt;), fn);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;functionName&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;max&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; max (logged in debug channel of console)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hz" class="anchor" aria-hidden="true" href="#hz"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hz&lt;/h3&gt;
&lt;p&gt;Returns the number of times a function executed per second.
&lt;code&gt;hz&lt;/code&gt; is the unit for &lt;code&gt;hertz&lt;/code&gt;, the unit of frequency defined as one cycle per second.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;performance.now()&lt;/code&gt; to get the difference in milliseconds before and after the iteration loop to calculate the time elapsed executing the function &lt;code&gt;iterations&lt;/code&gt; times.
Return the number of cycles per second by converting milliseconds to seconds and dividing it by the time elapsed.
Omit the second argument, &lt;code&gt;iterations&lt;/code&gt;, to use the default of 100 iterations.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;hz&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;iterations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;before&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;performance&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;();
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; iterations; i&lt;span class="pl-k"&gt;++&lt;/span&gt;) &lt;span class="pl-en"&gt;fn&lt;/span&gt;();
  &lt;span class="pl-k"&gt;return&lt;/span&gt; (&lt;span class="pl-c1"&gt;1000&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; iterations) &lt;span class="pl-k"&gt;/&lt;/span&gt; (&lt;span class="pl-c1"&gt;performance&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; before);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 10,000 element array&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;numbers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-c1"&gt;10000&lt;/span&gt;)
  .&lt;span class="pl-en"&gt;fill&lt;/span&gt;()
  .&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;_&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; i);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Test functions with the same goal: sum up the elements in the array&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sumReduce&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;numbers&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; n, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sumForLoop&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; sum &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;numbers&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;; i&lt;span class="pl-k"&gt;++&lt;/span&gt;) sum &lt;span class="pl-k"&gt;+=&lt;/span&gt; numbers[i];
  &lt;span class="pl-k"&gt;return&lt;/span&gt; sum;
};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; `sumForLoop` is nearly 10 times faster&lt;/span&gt;
&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(&lt;span class="pl-en"&gt;hz&lt;/span&gt;(sumReduce)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 572&lt;/span&gt;
&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(&lt;span class="pl-en"&gt;hz&lt;/span&gt;(sumForLoop)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4784&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-memoize-" class="anchor" aria-hidden="true" href="#memoize-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;memoize &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Returns the memoized (cached) function.&lt;/p&gt;
&lt;p&gt;Create an empty cache by instantiating a new &lt;code&gt;Map&lt;/code&gt; object.
Return a function which takes a single argument to be supplied to the memoized function by first checking if the function's output for that specific input value is already cached, or store and return it if not. The &lt;code&gt;function&lt;/code&gt; keyword must be used in order to allow the memoized function to have its &lt;code&gt;this&lt;/code&gt; context changed if necessary.
Allow access to the &lt;code&gt;cache&lt;/code&gt; by setting it as a property on the returned function.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;memoize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;cache&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;();
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;cached&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;val&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;cache&lt;/span&gt;.&lt;span class="pl-c1"&gt;has&lt;/span&gt;(val) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;cache&lt;/span&gt;.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(val) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;cache&lt;/span&gt;.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(val, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;call&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;, val)) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;cache&lt;/span&gt;.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(val);
  };
  &lt;span class="pl-smi"&gt;cached&lt;/span&gt;.&lt;span class="pl-smi"&gt;cache&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; cache;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; cached;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; See the `anagrams` snippet.&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;anagramsCached&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;memoize&lt;/span&gt;(anagrams);
&lt;span class="pl-en"&gt;anagramsCached&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; takes a long time&lt;/span&gt;
&lt;span class="pl-en"&gt;anagramsCached&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns virtually instantly since it's now cached&lt;/span&gt;
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;anagramsCached&lt;/span&gt;.&lt;span class="pl-smi"&gt;cache&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The cached anagrams map&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-negate" class="anchor" aria-hidden="true" href="#negate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;negate&lt;/h3&gt;
&lt;p&gt;Negates a predicate function.&lt;/p&gt;
&lt;p&gt;Take a predicate function and apply the not operator (&lt;code&gt;!&lt;/code&gt;) to it with its arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;negate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;func&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;func&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;args);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;].&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-en"&gt;negate&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ 1, 3, 5 ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-once" class="anchor" aria-hidden="true" href="#once"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;once&lt;/h3&gt;
&lt;p&gt;Ensures a function is called only once.&lt;/p&gt;
&lt;p&gt;Utilizing a closure, use a flag, &lt;code&gt;called&lt;/code&gt;, and set it to &lt;code&gt;true&lt;/code&gt; once the function is called for the first time, preventing it from being called again. In order to allow the function to have its &lt;code&gt;this&lt;/code&gt; context changed (such as in an event listener), the &lt;code&gt;function&lt;/code&gt; keyword must be used, and the supplied function must have the context applied.
Allow the function to be supplied with an arbitrary number of arguments using the rest/spread (&lt;code&gt;...&lt;/code&gt;) operator.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;once&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; called &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (called) &lt;span class="pl-k"&gt;return&lt;/span&gt;;
    called &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;, args);
  };
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;startApp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-c1"&gt;event&lt;/span&gt;) {
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;, &lt;span class="pl-c1"&gt;event&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; document.body, MouseEvent&lt;/span&gt;
};
&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;body&lt;/span&gt;.&lt;span class="pl-c1"&gt;addEventListener&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;once&lt;/span&gt;(startApp)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only runs `startApp` once upon click&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-partial" class="anchor" aria-hidden="true" href="#partial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;partial&lt;/h3&gt;
&lt;p&gt;Creates a function that invokes &lt;code&gt;fn&lt;/code&gt; with &lt;code&gt;partials&lt;/code&gt; prepended to the arguments it receives.&lt;/p&gt;
&lt;p&gt;Use the spread operator (&lt;code&gt;...&lt;/code&gt;) to prepend &lt;code&gt;partials&lt;/code&gt; to the list of arguments of &lt;code&gt;fn&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;partial&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;partials&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;partials, &lt;span class="pl-k"&gt;...&lt;/span&gt;args);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;greet&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;greeting&lt;/span&gt;, &lt;span class="pl-smi"&gt;name&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; greeting &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; name &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;greetHello&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;partial&lt;/span&gt;(greet, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;greetHello&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;John&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Hello John!'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-partialright" class="anchor" aria-hidden="true" href="#partialright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;partialRight&lt;/h3&gt;
&lt;p&gt;Creates a function that invokes &lt;code&gt;fn&lt;/code&gt; with &lt;code&gt;partials&lt;/code&gt; appended to the arguments it receives.&lt;/p&gt;
&lt;p&gt;Use the spread operator (&lt;code&gt;...&lt;/code&gt;) to append &lt;code&gt;partials&lt;/code&gt; to the list of arguments of &lt;code&gt;fn&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;partialRight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;partials&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;args, &lt;span class="pl-k"&gt;...&lt;/span&gt;partials);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;greet&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;greeting&lt;/span&gt;, &lt;span class="pl-smi"&gt;name&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; greeting &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; name &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;greetJohn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;partialRight&lt;/span&gt;(greet, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;John&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;greetJohn&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Hello John!'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-runpromisesinseries" class="anchor" aria-hidden="true" href="#runpromisesinseries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;runPromisesInSeries&lt;/h3&gt;
&lt;p&gt;Runs an array of promises in series.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create a promise chain, where each promise returns the next promise when resolved.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;runPromisesInSeries&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ps&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;ps&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;p&lt;/span&gt;, &lt;span class="pl-smi"&gt;next&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-c1"&gt;then&lt;/span&gt;(next), &lt;span class="pl-c1"&gt;Promise&lt;/span&gt;.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;());&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;delay&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;d&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Promise&lt;/span&gt;(&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(r, d));
&lt;span class="pl-en"&gt;runPromisesInSeries&lt;/span&gt;([() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;delay&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;), () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;delay&lt;/span&gt;(&lt;span class="pl-c1"&gt;2000&lt;/span&gt;)]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Executes each promise sequentially, taking a total of 3 seconds to complete&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sleep" class="anchor" aria-hidden="true" href="#sleep"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sleep&lt;/h3&gt;
&lt;p&gt;Delays the execution of an asynchronous function.&lt;/p&gt;
&lt;p&gt;Delay executing part of an &lt;code&gt;async&lt;/code&gt; function, by putting it to sleep, returning a &lt;code&gt;Promise&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sleep&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ms&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Promise&lt;/span&gt;(&lt;span class="pl-smi"&gt;resolve&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(resolve, ms));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;sleepyWork&lt;/span&gt;() {
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I'm going to sleep for 1 second.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;);
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;I woke up after 1 second.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-throttle-" class="anchor" aria-hidden="true" href="#throttle-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;throttle &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Creates a throttled function that only invokes the provided function at most once per every &lt;code&gt;wait&lt;/code&gt; milliseconds&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;clearTimeout()&lt;/code&gt; to throttle the given method, &lt;code&gt;fn&lt;/code&gt;.
Use &lt;code&gt;Function.prototype.apply()&lt;/code&gt; to apply the &lt;code&gt;this&lt;/code&gt; context to the function and provide the necessary &lt;code&gt;arguments&lt;/code&gt;.
Use &lt;code&gt;Date.now()&lt;/code&gt; to keep track of the last time the throttled function was invoked.
Omit the second argument, &lt;code&gt;wait&lt;/code&gt;, to set the timeout at a default of 0 ms.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;throttle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;wait&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; inThrottle, lastFn, lastTime;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;context&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;this&lt;/span&gt;,
      args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;inThrottle) {
      &lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(context, args);
      lastTime &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Date&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;();
      inThrottle &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
      &lt;span class="pl-c1"&gt;clearTimeout&lt;/span&gt;(lastFn);
      lastFn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(&lt;span class="pl-k"&gt;function&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;Date&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; lastTime &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; wait) {
          &lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(context, args);
          lastTime &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Date&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;();
        }
      }, &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;(wait &lt;span class="pl-k"&gt;-&lt;/span&gt; (&lt;span class="pl-c1"&gt;Date&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; lastTime), &lt;span class="pl-c1"&gt;0&lt;/span&gt;));
    }
  };
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;addEventListener&lt;/span&gt;(
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;resize&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-en"&gt;throttle&lt;/span&gt;(&lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;evt&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;innerWidth&lt;/span&gt;);
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;innerHeight&lt;/span&gt;);
  }, &lt;span class="pl-c1"&gt;250&lt;/span&gt;)
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Will log the window dimensions at most every 250ms&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-times" class="anchor" aria-hidden="true" href="#times"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;times&lt;/h3&gt;
&lt;p&gt;Iterates over a callback &lt;code&gt;n&lt;/code&gt; times&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Function.call()&lt;/code&gt; to call &lt;code&gt;fn&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; times or until it returns &lt;code&gt;false&lt;/code&gt;.
Omit the last argument, &lt;code&gt;context&lt;/code&gt;, to use an &lt;code&gt;undefined&lt;/code&gt; object (or the global object in non-strict mode).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;times&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;context&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;call&lt;/span&gt;(context, i) &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;++&lt;/span&gt;i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; n) {}
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; output &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-en"&gt;times&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (output &lt;span class="pl-k"&gt;+=&lt;/span&gt; i));
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(output); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 01234&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uncurry" class="anchor" aria-hidden="true" href="#uncurry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;uncurry&lt;/h3&gt;
&lt;p&gt;Uncurries a function up to depth &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Return a variadic function.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; on the provided arguments to call each subsequent curry level of the function.
If the &lt;code&gt;length&lt;/code&gt; of the provided arguments is less than &lt;code&gt;n&lt;/code&gt; throw an error.
Otherwise, call &lt;code&gt;fn&lt;/code&gt; with the proper amount of arguments, using &lt;code&gt;Array.prototype.slice(0, n)&lt;/code&gt;.
Omit the second argument, &lt;code&gt;n&lt;/code&gt;, to uncurry up to depth &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;uncurry&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;next&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;acc&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;x&lt;/span&gt;(y), acc);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (n &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;) &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;RangeError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Arguments too few!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;next&lt;/span&gt;(fn)(&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, n));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;add&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;+&lt;/span&gt; y &lt;span class="pl-k"&gt;+&lt;/span&gt; z;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;uncurriedAdd&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;uncurry&lt;/span&gt;(add, &lt;span class="pl-c1"&gt;3&lt;/span&gt;);
&lt;span class="pl-en"&gt;uncurriedAdd&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unfold" class="anchor" aria-hidden="true" href="#unfold"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unfold&lt;/h3&gt;
&lt;p&gt;Builds an array, using an iterator function and an initial seed value.&lt;/p&gt;
&lt;p&gt;Use a &lt;code&gt;while&lt;/code&gt; loop and &lt;code&gt;Array.prototype.push()&lt;/code&gt; to call the function repeatedly until it returns &lt;code&gt;false&lt;/code&gt;.
The iterator function accepts one argument (&lt;code&gt;seed&lt;/code&gt;) and must always return an array with two elements ([&lt;code&gt;value&lt;/code&gt;, &lt;code&gt;nextSeed&lt;/code&gt;]) or &lt;code&gt;false&lt;/code&gt; to terminate.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;unfold&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;seed&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; result &lt;span class="pl-k"&gt;=&lt;/span&gt; [],
    val &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;null&lt;/span&gt;, seed];
  &lt;span class="pl-k"&gt;while&lt;/span&gt; ((val &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(val[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]))) &lt;span class="pl-smi"&gt;result&lt;/span&gt;.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(val[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; result;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (n &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-k"&gt;-&lt;/span&gt;n, n &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;]);
&lt;span class="pl-en"&gt;unfold&lt;/span&gt;(f, &lt;span class="pl-c1"&gt;10&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [-10, -20, -30, -40, -50]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-when" class="anchor" aria-hidden="true" href="#when"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;when&lt;/h3&gt;
&lt;p&gt;Tests a value, &lt;code&gt;x&lt;/code&gt;, against a predicate function. If &lt;code&gt;true&lt;/code&gt;, return &lt;code&gt;fn(x)&lt;/code&gt;. Else, return &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Return a function expecting a single value, &lt;code&gt;x&lt;/code&gt;, that returns the appropriate value based on &lt;code&gt;pred&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;when&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;pred&lt;/span&gt;, &lt;span class="pl-smi"&gt;whenTrue&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;pred&lt;/span&gt;(x) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;whenTrue&lt;/span&gt;(x) &lt;span class="pl-k"&gt;:&lt;/span&gt; x);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;doubleEvenNumbers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;when&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
&lt;span class="pl-en"&gt;doubleEvenNumbers&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;
&lt;span class="pl-en"&gt;doubleEvenNumbers&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content--math-1" class="anchor" aria-hidden="true" href="#-math-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="heavy_division_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2797.png"&gt;➗&lt;/g-emoji&gt; Math&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-approximatelyequal" class="anchor" aria-hidden="true" href="#approximatelyequal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;approximatelyEqual&lt;/h3&gt;
&lt;p&gt;Checks if two numbers are approximately equal to each other.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.abs()&lt;/code&gt; to compare the absolute difference of the two values to &lt;code&gt;epsilon&lt;/code&gt;.
Omit the third parameter, &lt;code&gt;epsilon&lt;/code&gt;, to use a default value of &lt;code&gt;0.001&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;approximatelyEqual&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;v1&lt;/span&gt;, &lt;span class="pl-smi"&gt;v2&lt;/span&gt;, &lt;span class="pl-smi"&gt;epsilon&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.001&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;abs&lt;/span&gt;(v1 &lt;span class="pl-k"&gt;-&lt;/span&gt; v2) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; epsilon;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;approximatelyEqual&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;PI&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.5708&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-average" class="anchor" aria-hidden="true" href="#average"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;average&lt;/h3&gt;
&lt;p&gt;Returns the average of two or more numbers.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to add each value to an accumulator, initialized with a value of &lt;code&gt;0&lt;/code&gt;, divide by the &lt;code&gt;length&lt;/code&gt; of the array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;average&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;nums&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;nums&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val, &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-smi"&gt;nums&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;average&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2&lt;/span&gt;
&lt;span class="pl-en"&gt;average&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-averageby" class="anchor" aria-hidden="true" href="#averageby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;averageBy&lt;/h3&gt;
&lt;p&gt;Returns the average of an array, after mapping each element to a value using the provided function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to map each element to the value returned by &lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to add each value to an accumulator, initialized with a value of &lt;code&gt;0&lt;/code&gt;, divide by the &lt;code&gt;length&lt;/code&gt; of the array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;averageBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt; fn &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; fn &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val[fn]).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val, &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;averageBy&lt;/span&gt;([{ n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }], &lt;span class="pl-smi"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;o&lt;/span&gt;.&lt;span class="pl-smi"&gt;n&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5&lt;/span&gt;
&lt;span class="pl-en"&gt;averageBy&lt;/span&gt;([{ n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;n&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-binomialcoefficient" class="anchor" aria-hidden="true" href="#binomialcoefficient"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;binomialCoefficient&lt;/h3&gt;
&lt;p&gt;Evaluates the binomial coefficient of two integers &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;k&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Number.isNaN()&lt;/code&gt; to check if any of the two values is &lt;code&gt;NaN&lt;/code&gt;.
Check if &lt;code&gt;k&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;, greater than or equal to &lt;code&gt;n&lt;/code&gt;, equal to &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;n - 1&lt;/code&gt; and return the appropriate result.
Check if &lt;code&gt;n - k&lt;/code&gt; is less than &lt;code&gt;k&lt;/code&gt; and switch their values accordingly.
Loop from &lt;code&gt;2&lt;/code&gt; through &lt;code&gt;k&lt;/code&gt; and calculate the binomial coefficient.
Use &lt;code&gt;Math.round()&lt;/code&gt; to account for rounding errors in the calculation.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;binomialCoefficient&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt;, &lt;span class="pl-smi"&gt;k&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;Number&lt;/span&gt;.&lt;span class="pl-en"&gt;isNaN&lt;/span&gt;(n) &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;Number&lt;/span&gt;.&lt;span class="pl-en"&gt;isNaN&lt;/span&gt;(k)) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;NaN&lt;/span&gt;;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (k &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; k &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; n) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (k &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; k &lt;span class="pl-k"&gt;===&lt;/span&gt; n) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (k &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; k &lt;span class="pl-k"&gt;===&lt;/span&gt; n &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; n;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (n &lt;span class="pl-k"&gt;-&lt;/span&gt; k &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; k) k &lt;span class="pl-k"&gt;=&lt;/span&gt; n &lt;span class="pl-k"&gt;-&lt;/span&gt; k;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; n;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;let&lt;/span&gt; j &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;; j &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; k; j&lt;span class="pl-k"&gt;++&lt;/span&gt;) res &lt;span class="pl-k"&gt;*=&lt;/span&gt; (n &lt;span class="pl-k"&gt;-&lt;/span&gt; j &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; j;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(res);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;binomialCoefficient&lt;/span&gt;(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 28&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-clampnumber" class="anchor" aria-hidden="true" href="#clampnumber"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;clampNumber&lt;/h3&gt;
&lt;p&gt;Clamps &lt;code&gt;num&lt;/code&gt; within the inclusive range specified by the boundary values &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;num&lt;/code&gt; falls within the range, return &lt;code&gt;num&lt;/code&gt;.
Otherwise, return the nearest number in the range.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;clampNumber&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;num&lt;/span&gt;, &lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;min&lt;/span&gt;(num, &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;(a, b)), &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;min&lt;/span&gt;(a, b));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;clampNumber&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
&lt;span class="pl-en"&gt;clampNumber&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; -1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-degreestorads" class="anchor" aria-hidden="true" href="#degreestorads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;degreesToRads&lt;/h3&gt;
&lt;p&gt;Converts an angle from degrees to radians.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.PI&lt;/code&gt; and the degree to radian formula to convert the angle from degrees to radians.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;degreesToRads&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;deg&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (deg &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;PI&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;180.0&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;degreesToRads&lt;/span&gt;(&lt;span class="pl-c1"&gt;90.0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ~1.5708&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-digitize" class="anchor" aria-hidden="true" href="#digitize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;digitize&lt;/h3&gt;
&lt;p&gt;Converts a number to an array of digits.&lt;/p&gt;
&lt;p&gt;Convert the number to a string, using the spread operator (&lt;code&gt;...&lt;/code&gt;) to build an array.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; and &lt;code&gt;parseInt()&lt;/code&gt; to transform each value to an integer.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;digitize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;n&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;].&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;parseInt&lt;/span&gt;(i));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;digitize&lt;/span&gt;(&lt;span class="pl-c1"&gt;123&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-distance" class="anchor" aria-hidden="true" href="#distance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;distance&lt;/h3&gt;
&lt;p&gt;Returns the distance between two points.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.hypot()&lt;/code&gt; to calculate the Euclidean distance between two points.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;distance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;x0&lt;/span&gt;, &lt;span class="pl-smi"&gt;y0&lt;/span&gt;, &lt;span class="pl-smi"&gt;x1&lt;/span&gt;, &lt;span class="pl-smi"&gt;y1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;hypot&lt;/span&gt;(x1 &lt;span class="pl-k"&gt;-&lt;/span&gt; x0, y1 &lt;span class="pl-k"&gt;-&lt;/span&gt; y0);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;distance&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2.23606797749979&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-elo-" class="anchor" aria-hidden="true" href="#elo-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;elo &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Computes the new ratings between two or more opponents using the &lt;a href="https://en.wikipedia.org/wiki/Elo_rating_system" rel="nofollow"&gt;Elo rating system&lt;/a&gt;. It takes an array
of pre-ratings and returns an array containing post-ratings.
The array should be ordered from best performer to worst performer (winner -&amp;gt; loser).&lt;/p&gt;
&lt;p&gt;Use the exponent &lt;code&gt;**&lt;/code&gt; operator and math operators to compute the expected score (chance of winning).
of each opponent and compute the new rating for each.
Loop through the ratings, using each permutation to compute the post-Elo rating for each player in a pairwise fashion.
Omit the second argument to use the default &lt;code&gt;kFactor&lt;/code&gt; of 32.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;elo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ([&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;ratings&lt;/span&gt;], &lt;span class="pl-smi"&gt;kFactor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-smi"&gt;selfRating&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; [&lt;span class="pl-c1"&gt;a&lt;/span&gt;, &lt;span class="pl-c1"&gt;b&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; ratings;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;expectedScore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;self&lt;/span&gt;, &lt;span class="pl-smi"&gt;opponent&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; (&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-k"&gt;**&lt;/span&gt; ((opponent &lt;span class="pl-k"&gt;-&lt;/span&gt; self) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;400&lt;/span&gt;));
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;newRating&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;rating&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    (selfRating &lt;span class="pl-k"&gt;||&lt;/span&gt; rating) &lt;span class="pl-k"&gt;+&lt;/span&gt; kFactor &lt;span class="pl-k"&gt;*&lt;/span&gt; (i &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;expectedScore&lt;/span&gt;(i &lt;span class="pl-k"&gt;?&lt;/span&gt; a &lt;span class="pl-k"&gt;:&lt;/span&gt; b, i &lt;span class="pl-k"&gt;?&lt;/span&gt; b &lt;span class="pl-k"&gt;:&lt;/span&gt; a));
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;ratings&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; [&lt;span class="pl-en"&gt;newRating&lt;/span&gt;(a, &lt;span class="pl-c1"&gt;1&lt;/span&gt;), &lt;span class="pl-en"&gt;newRating&lt;/span&gt;(b, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)];

  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, len &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ratings&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; len; i&lt;span class="pl-k"&gt;++&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; j &lt;span class="pl-k"&gt;=&lt;/span&gt; i;
    &lt;span class="pl-k"&gt;while&lt;/span&gt; (j &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; len &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
      j&lt;span class="pl-k"&gt;++&lt;/span&gt;;
      [ratings[i], ratings[j]] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;elo&lt;/span&gt;([ratings[i], ratings[j]], kFactor);
    }
  }
  &lt;span class="pl-k"&gt;return&lt;/span&gt; ratings;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Standard 1v1s&lt;/span&gt;
&lt;span class="pl-en"&gt;elo&lt;/span&gt;([&lt;span class="pl-c1"&gt;1200&lt;/span&gt;, &lt;span class="pl-c1"&gt;1200&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1216, 1184]&lt;/span&gt;
&lt;span class="pl-en"&gt;elo&lt;/span&gt;([&lt;span class="pl-c1"&gt;1200&lt;/span&gt;, &lt;span class="pl-c1"&gt;1200&lt;/span&gt;], &lt;span class="pl-c1"&gt;64&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1232, 1168]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4 player FFA, all same rank&lt;/span&gt;
&lt;span class="pl-en"&gt;elo&lt;/span&gt;([&lt;span class="pl-c1"&gt;1200&lt;/span&gt;, &lt;span class="pl-c1"&gt;1200&lt;/span&gt;, &lt;span class="pl-c1"&gt;1200&lt;/span&gt;, &lt;span class="pl-c1"&gt;1200&lt;/span&gt;]).&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-smi"&gt;round&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1246, 1215, 1185, 1154]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;For teams, each rating can adjusted based on own team's average rating vs.&lt;/span&gt;
&lt;span class="pl-c"&gt;average rating of opposing team, with the score being added to their&lt;/span&gt;
&lt;span class="pl-c"&gt;own individual rating by supplying it as the third argument.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-factorial" class="anchor" aria-hidden="true" href="#factorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;factorial&lt;/h3&gt;
&lt;p&gt;Calculates the factorial of a number.&lt;/p&gt;
&lt;p&gt;Use recursion.
If &lt;code&gt;n&lt;/code&gt; is less than or equal to &lt;code&gt;1&lt;/code&gt;, return &lt;code&gt;1&lt;/code&gt;.
Otherwise, return the product of &lt;code&gt;n&lt;/code&gt; and the factorial of &lt;code&gt;n - 1&lt;/code&gt;.
Throws an exception if &lt;code&gt;n&lt;/code&gt; is a negative number.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;factorial&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  n &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    &lt;span class="pl-k"&gt;?&lt;/span&gt; (() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;TypeError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Negative numbers are not allowed!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
      })()
    &lt;span class="pl-k"&gt;:&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    &lt;span class="pl-k"&gt;:&lt;/span&gt; n &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-en"&gt;factorial&lt;/span&gt;(n &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;factorial&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 720&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fibonacci" class="anchor" aria-hidden="true" href="#fibonacci"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fibonacci&lt;/h3&gt;
&lt;p&gt;Generates an array, containing the Fibonacci sequence, up until the nth term.&lt;/p&gt;
&lt;p&gt;Create an empty array of the specific length, initializing the first two values (&lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;).
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to add values into the array, using the sum of the last two values, except for the first two.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fibonacci&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; n }).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(i &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; acc[i &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;+&lt;/span&gt; acc[i &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;] &lt;span class="pl-k"&gt;:&lt;/span&gt; i),
    []
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;fibonacci&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [0, 1, 1, 2, 3, 5]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gcd" class="anchor" aria-hidden="true" href="#gcd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gcd&lt;/h3&gt;
&lt;p&gt;Calculates the greatest common divisor between two or more numbers/arrays.&lt;/p&gt;
&lt;p&gt;The inner &lt;code&gt;_gcd&lt;/code&gt; function uses recursion.
Base case is when &lt;code&gt;y&lt;/code&gt; equals &lt;code&gt;0&lt;/code&gt;. In this case, return &lt;code&gt;x&lt;/code&gt;.
Otherwise, return the GCD of &lt;code&gt;y&lt;/code&gt; and the remainder of the division &lt;code&gt;x/y&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;gcd&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;arr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;_gcd&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;y &lt;span class="pl-k"&gt;?&lt;/span&gt; x &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;gcd&lt;/span&gt;(y, x &lt;span class="pl-k"&gt;%&lt;/span&gt; y));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;arr].&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;_gcd&lt;/span&gt;(a, b));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;gcd&lt;/span&gt;(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;36&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;
&lt;span class="pl-en"&gt;gcd&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;[&lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;32&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-geometricprogression" class="anchor" aria-hidden="true" href="#geometricprogression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;geometricProgression&lt;/h3&gt;
&lt;p&gt;Initializes an array containing the numbers in the specified range where &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are inclusive and the ratio between two terms is &lt;code&gt;step&lt;/code&gt;.
Returns an error if &lt;code&gt;step&lt;/code&gt; equals &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.from()&lt;/code&gt;, &lt;code&gt;Math.log()&lt;/code&gt; and &lt;code&gt;Math.floor()&lt;/code&gt; to create an array of the desired length, &lt;code&gt;Array.prototype.map()&lt;/code&gt; to fill with the desired values in a range.
Omit the second argument, &lt;code&gt;start&lt;/code&gt;, to use a default value of &lt;code&gt;1&lt;/code&gt;.
Omit the third argument, &lt;code&gt;step&lt;/code&gt;, to use a default value of &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;geometricProgression&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;end&lt;/span&gt;, &lt;span class="pl-smi"&gt;start&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-smi"&gt;step&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(end &lt;span class="pl-k"&gt;/&lt;/span&gt; start) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(step)) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }).&lt;span class="pl-en"&gt;map&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; start &lt;span class="pl-k"&gt;*&lt;/span&gt; step &lt;span class="pl-k"&gt;**&lt;/span&gt; i
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;geometricProgression&lt;/span&gt;(&lt;span class="pl-c1"&gt;256&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 4, 8, 16, 32, 64, 128, 256]&lt;/span&gt;
&lt;span class="pl-en"&gt;geometricProgression&lt;/span&gt;(&lt;span class="pl-c1"&gt;256&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3, 6, 12, 24, 48, 96, 192]&lt;/span&gt;
&lt;span class="pl-en"&gt;geometricProgression&lt;/span&gt;(&lt;span class="pl-c1"&gt;256&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 4, 16, 64, 256]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hammingdistance" class="anchor" aria-hidden="true" href="#hammingdistance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hammingDistance&lt;/h3&gt;
&lt;p&gt;Calculates the Hamming distance between two values.&lt;/p&gt;
&lt;p&gt;Use XOR operator (&lt;code&gt;^&lt;/code&gt;) to find the bit difference between the two numbers, convert to a binary string using &lt;code&gt;toString(2)&lt;/code&gt;.
Count and return the number of &lt;code&gt;1&lt;/code&gt;s in the string, using &lt;code&gt;match(/1/g)&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;hammingDistance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;num1&lt;/span&gt;, &lt;span class="pl-smi"&gt;num2&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((num1 &lt;span class="pl-k"&gt;^&lt;/span&gt; num2).&lt;span class="pl-c1"&gt;toString&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;).&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;1&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;) &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;length&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;hammingDistance&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-inrange" class="anchor" aria-hidden="true" href="#inrange"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;inRange&lt;/h3&gt;
&lt;p&gt;Checks if the given number falls within the given range.&lt;/p&gt;
&lt;p&gt;Use arithmetic comparison to check if the given number is in the specified range.
If the second parameter, &lt;code&gt;end&lt;/code&gt;, is not specified, the range is considered to be from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;start&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;inRange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt;, &lt;span class="pl-smi"&gt;start&lt;/span&gt;, &lt;span class="pl-smi"&gt;end&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (end &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; start &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; end) [end, start] &lt;span class="pl-k"&gt;=&lt;/span&gt; [start, end];
  &lt;span class="pl-k"&gt;return&lt;/span&gt; end &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; start &lt;span class="pl-k"&gt;:&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; start &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; end;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;inRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;inRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;inRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;inRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isdivisible" class="anchor" aria-hidden="true" href="#isdivisible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isDivisible&lt;/h3&gt;
&lt;p&gt;Checks if the first numeric argument is divisible by the second one.&lt;/p&gt;
&lt;p&gt;Use the modulo operator (&lt;code&gt;%&lt;/code&gt;) to check if the remainder is equal to &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isDivisible&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;dividend&lt;/span&gt;, &lt;span class="pl-smi"&gt;divisor&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; dividend &lt;span class="pl-k"&gt;%&lt;/span&gt; divisor &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isDivisible&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-iseven" class="anchor" aria-hidden="true" href="#iseven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isEven&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the given number is even, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Checks whether a number is odd or even using the modulo (&lt;code&gt;%&lt;/code&gt;) operator.
Returns &lt;code&gt;true&lt;/code&gt; if the number is even, &lt;code&gt;false&lt;/code&gt; if the number is odd.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isEven&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;num&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; num &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isEven&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isnegativezero" class="anchor" aria-hidden="true" href="#isnegativezero"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isNegativeZero&lt;/h3&gt;
&lt;p&gt;Checks if the given value is equal to negative zero (&lt;code&gt;-0&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Checks whether a passed value is equal to &lt;code&gt;0&lt;/code&gt; and if &lt;code&gt;1&lt;/code&gt; divided by the value equals &lt;code&gt;-Infinity&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isNegativeZero&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;Infinity&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isNegativeZero&lt;/span&gt;(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isNegativeZero&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isodd" class="anchor" aria-hidden="true" href="#isodd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isOdd&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the given number is odd, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Checks whether a number is odd or even using the modulo (&lt;code&gt;%&lt;/code&gt;) operator.
Returns &lt;code&gt;true&lt;/code&gt; if the number is odd, &lt;code&gt;false&lt;/code&gt; if the number is even.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isOdd&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;num&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; num &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isOdd&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isprime" class="anchor" aria-hidden="true" href="#isprime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isPrime&lt;/h3&gt;
&lt;p&gt;Checks if the provided integer is a prime number.&lt;/p&gt;
&lt;p&gt;Check numbers from &lt;code&gt;2&lt;/code&gt; to the square root of the given number.
Return &lt;code&gt;false&lt;/code&gt; if any of them divides the given number, else return &lt;code&gt;true&lt;/code&gt;, unless the number is less than &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isPrime&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;num&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;boundary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;sqrt&lt;/span&gt;(num));
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; boundary; i&lt;span class="pl-k"&gt;++&lt;/span&gt;) &lt;span class="pl-k"&gt;if&lt;/span&gt; (num &lt;span class="pl-k"&gt;%&lt;/span&gt; i &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; num &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isPrime&lt;/span&gt;(&lt;span class="pl-c1"&gt;11&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-lcm" class="anchor" aria-hidden="true" href="#lcm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lcm&lt;/h3&gt;
&lt;p&gt;Returns the least common multiple of two or more numbers.&lt;/p&gt;
&lt;p&gt;Use the greatest common divisor (GCD) formula and the fact that &lt;code&gt;lcm(x,y) = x * y / gcd(x,y)&lt;/code&gt; to determine the least common multiple.
The GCD formula uses recursion.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;lcm&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;arr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;gcd&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;y &lt;span class="pl-k"&gt;?&lt;/span&gt; x &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;gcd&lt;/span&gt;(y, x &lt;span class="pl-k"&gt;%&lt;/span&gt; y));
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;_lcm&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (x &lt;span class="pl-k"&gt;*&lt;/span&gt; y) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-en"&gt;gcd&lt;/span&gt;(x, y);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;arr].&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;_lcm&lt;/span&gt;(a, b));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;lcm&lt;/span&gt;(&lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 84&lt;/span&gt;
&lt;span class="pl-en"&gt;lcm&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 60&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-luhncheck-" class="anchor" aria-hidden="true" href="#luhncheck-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;luhnCheck &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Implementation of the &lt;a href="https://en.wikipedia.org/wiki/Luhn_algorithm" rel="nofollow"&gt;Luhn Algorithm&lt;/a&gt; used to validate a variety of identification numbers, such as credit card numbers, IMEI numbers, National Provider Identifier numbers etc.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.split('')&lt;/code&gt;, &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; and &lt;code&gt;Array.prototype.map()&lt;/code&gt; in combination with &lt;code&gt;parseInt()&lt;/code&gt; to obtain an array of digits.
Use &lt;code&gt;Array.prototype.splice(0,1)&lt;/code&gt; to obtain the last digit.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to implement the Luhn Algorithm.
Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;sum&lt;/code&gt; is divisible by &lt;code&gt;10&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;luhnCheck&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;num&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; arr &lt;span class="pl-k"&gt;=&lt;/span&gt; (num &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;reverse&lt;/span&gt;()
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;parseInt&lt;/span&gt;(x));
  &lt;span class="pl-k"&gt;let&lt;/span&gt; lastDigit &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;splice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;];
  &lt;span class="pl-k"&gt;let&lt;/span&gt; sum &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (i &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val &lt;span class="pl-k"&gt;:&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; ((val &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;9&lt;/span&gt;) &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;9&lt;/span&gt;), &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
  sum &lt;span class="pl-k"&gt;+=&lt;/span&gt; lastDigit;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; sum &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;luhnCheck&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;4485275742308327&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;luhnCheck&lt;/span&gt;(&lt;span class="pl-c1"&gt;6011329933655299&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  false&lt;/span&gt;
&lt;span class="pl-en"&gt;luhnCheck&lt;/span&gt;(&lt;span class="pl-c1"&gt;123456789&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mapnumrange" class="anchor" aria-hidden="true" href="#mapnumrange"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mapNumRange&lt;/h3&gt;
&lt;p&gt;Maps a number from one range to another range.&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;num&lt;/code&gt; mapped between &lt;code&gt;outMin&lt;/code&gt;-&lt;code&gt;outMax&lt;/code&gt; from &lt;code&gt;inMin&lt;/code&gt;-&lt;code&gt;inMax&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mapNumRange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;num&lt;/span&gt;, &lt;span class="pl-smi"&gt;inMin&lt;/span&gt;, &lt;span class="pl-smi"&gt;inMax&lt;/span&gt;, &lt;span class="pl-smi"&gt;outMin&lt;/span&gt;, &lt;span class="pl-smi"&gt;outMax&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  ((num &lt;span class="pl-k"&gt;-&lt;/span&gt; inMin) &lt;span class="pl-k"&gt;*&lt;/span&gt; (outMax &lt;span class="pl-k"&gt;-&lt;/span&gt; outMin)) &lt;span class="pl-k"&gt;/&lt;/span&gt; (inMax &lt;span class="pl-k"&gt;-&lt;/span&gt; inMin) &lt;span class="pl-k"&gt;+&lt;/span&gt; outMin;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;mapNumRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 50&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-maxby" class="anchor" aria-hidden="true" href="#maxby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;maxBy&lt;/h3&gt;
&lt;p&gt;Returns the maximum value of an array, after mapping each element to a value using the provided function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to map each element to the value returned by &lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;Math.max()&lt;/code&gt; to get the maximum value.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;maxBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt; fn &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; fn &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val[fn]));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;maxBy&lt;/span&gt;([{ n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }], &lt;span class="pl-smi"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;o&lt;/span&gt;.&lt;span class="pl-smi"&gt;n&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 8&lt;/span&gt;
&lt;span class="pl-en"&gt;maxBy&lt;/span&gt;([{ n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;n&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-median" class="anchor" aria-hidden="true" href="#median"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;median&lt;/h3&gt;
&lt;p&gt;Returns the median of an array of numbers.&lt;/p&gt;
&lt;p&gt;Find the middle of the array, use &lt;code&gt;Array.prototype.sort()&lt;/code&gt; to sort the values.
Return the number at the midpoint if &lt;code&gt;length&lt;/code&gt; is odd, otherwise the average of the two middle numbers.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;median&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mid&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;),
    nums &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;arr].&lt;span class="pl-c1"&gt;sort&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a &lt;span class="pl-k"&gt;-&lt;/span&gt; b);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; nums[mid] &lt;span class="pl-k"&gt;:&lt;/span&gt; (nums[mid &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;+&lt;/span&gt; nums[mid]) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;median&lt;/span&gt;([&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-midpoint" class="anchor" aria-hidden="true" href="#midpoint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;midpoint&lt;/h3&gt;
&lt;p&gt;Calculates the midpoint between two pairs of (x,y) points.&lt;/p&gt;
&lt;p&gt;Destructure the array to get &lt;code&gt;x1&lt;/code&gt;, &lt;code&gt;y1&lt;/code&gt;, &lt;code&gt;x2&lt;/code&gt; and &lt;code&gt;y2&lt;/code&gt;, calculate the midpoint for each dimension by dividing the sum of the two endpoints by &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;midpoint&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ([&lt;span class="pl-smi"&gt;x1&lt;/span&gt;, &lt;span class="pl-smi"&gt;y1&lt;/span&gt;], [&lt;span class="pl-smi"&gt;x2&lt;/span&gt;, &lt;span class="pl-smi"&gt;y2&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [(x1 &lt;span class="pl-k"&gt;+&lt;/span&gt; x2) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, (y1 &lt;span class="pl-k"&gt;+&lt;/span&gt; y2) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;midpoint&lt;/span&gt;([&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;], [&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [3, 3]&lt;/span&gt;
&lt;span class="pl-en"&gt;midpoint&lt;/span&gt;([&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], [&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [5, 5]&lt;/span&gt;
&lt;span class="pl-en"&gt;midpoint&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1.5, 3.5]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-minby" class="anchor" aria-hidden="true" href="#minby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;minBy&lt;/h3&gt;
&lt;p&gt;Returns the minimum value of an array, after mapping each element to a value using the provided function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to map each element to the value returned by &lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;Math.min()&lt;/code&gt; to get the minimum value.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;minBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;min&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt; fn &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; fn &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val[fn]));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;minBy&lt;/span&gt;([{ n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }], &lt;span class="pl-smi"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;o&lt;/span&gt;.&lt;span class="pl-smi"&gt;n&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2&lt;/span&gt;
&lt;span class="pl-en"&gt;minBy&lt;/span&gt;([{ n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;n&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-percentile" class="anchor" aria-hidden="true" href="#percentile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;percentile&lt;/h3&gt;
&lt;p&gt;Uses the percentile formula to calculate how many numbers in the given array are less or equal to the given value.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to calculate how many numbers are below the value and how many are the same value and apply the percentile formula.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;percentile&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;100&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; (v &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; val &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (v &lt;span class="pl-k"&gt;===&lt;/span&gt; val &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;), &lt;span class="pl-c1"&gt;0&lt;/span&gt;)) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;percentile&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;], &lt;span class="pl-c1"&gt;6&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 55&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-powerset" class="anchor" aria-hidden="true" href="#powerset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;powerset&lt;/h3&gt;
&lt;p&gt;Returns the powerset of a given array of numbers.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; combined with &lt;code&gt;Array.prototype.map()&lt;/code&gt; to iterate over elements and combine into an array containing all combinations.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;powerset&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [v].&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(r))), [[]]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;powerset&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [[], [1], [2], [2, 1]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-primes" class="anchor" aria-hidden="true" href="#primes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;primes&lt;/h3&gt;
&lt;p&gt;Generates primes up to a given number, using the Sieve of Eratosthenes.&lt;/p&gt;
&lt;p&gt;Generate an array from &lt;code&gt;2&lt;/code&gt; to the given number. Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to filter out the values divisible by any number from &lt;code&gt;2&lt;/code&gt; to the square root of the provided number.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;primes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;num&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; arr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; num &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }).&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; i &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;),
    sqroot &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;sqrt&lt;/span&gt;(num)),
    numsTillSqroot &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; sqroot &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }).&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; i &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;numsTillSqroot&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (arr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; y &lt;span class="pl-k"&gt;%&lt;/span&gt; x &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; y &lt;span class="pl-k"&gt;===&lt;/span&gt; x)));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; arr;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;primes&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [2,3,5,7]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-radstodegrees" class="anchor" aria-hidden="true" href="#radstodegrees"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;radsToDegrees&lt;/h3&gt;
&lt;p&gt;Converts an angle from radians to degrees.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.PI&lt;/code&gt; and the radian to degree formula to convert the angle from radians to degrees.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;radsToDegrees&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;rad&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (rad &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;180.0&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;PI&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;radsToDegrees&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;PI&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 90&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-randomintarrayinrange" class="anchor" aria-hidden="true" href="#randomintarrayinrange"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;randomIntArrayInRange&lt;/h3&gt;
&lt;p&gt;Returns an array of n random integers in the specified range.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.from()&lt;/code&gt; to create an empty array of the specific length, &lt;code&gt;Math.random()&lt;/code&gt; to generate a random number and map it to the desired range, using &lt;code&gt;Math.floor()&lt;/code&gt; to make it an integer.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;randomIntArrayInRange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;min&lt;/span&gt;, &lt;span class="pl-smi"&gt;max&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;({ length&lt;span class="pl-k"&gt;:&lt;/span&gt; n }, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;random&lt;/span&gt;() &lt;span class="pl-k"&gt;*&lt;/span&gt; (max &lt;span class="pl-k"&gt;-&lt;/span&gt; min &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; min);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;randomIntArrayInRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;35&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ 34, 14, 27, 17, 30, 27, 20, 26, 21, 14 ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-randomintegerinrange" class="anchor" aria-hidden="true" href="#randomintegerinrange"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;randomIntegerInRange&lt;/h3&gt;
&lt;p&gt;Returns a random integer in the specified range.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.random()&lt;/code&gt; to generate a random number and map it to the desired range, using &lt;code&gt;Math.floor()&lt;/code&gt; to make it an integer.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;randomIntegerInRange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;min&lt;/span&gt;, &lt;span class="pl-smi"&gt;max&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;random&lt;/span&gt;() &lt;span class="pl-k"&gt;*&lt;/span&gt; (max &lt;span class="pl-k"&gt;-&lt;/span&gt; min &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; min;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;randomIntegerInRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-randomnumberinrange" class="anchor" aria-hidden="true" href="#randomnumberinrange"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;randomNumberInRange&lt;/h3&gt;
&lt;p&gt;Returns a random number in the specified range.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.random()&lt;/code&gt; to generate a random value, map it to the desired range using multiplication.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;randomNumberInRange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;min&lt;/span&gt;, &lt;span class="pl-smi"&gt;max&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;random&lt;/span&gt;() &lt;span class="pl-k"&gt;*&lt;/span&gt; (max &lt;span class="pl-k"&gt;-&lt;/span&gt; min) &lt;span class="pl-k"&gt;+&lt;/span&gt; min;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;randomNumberInRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 6.0211363285087005&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-round" class="anchor" aria-hidden="true" href="#round"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;round&lt;/h3&gt;
&lt;p&gt;Rounds a number to a specified amount of digits.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.round()&lt;/code&gt; and template literals to round the number to the specified number of digits.
Omit the second argument, &lt;code&gt;decimals&lt;/code&gt; to round to an integer.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;round&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt;, &lt;span class="pl-smi"&gt;decimals&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Number&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;n&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;e&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;decimals&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;e-&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;decimals&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;round&lt;/span&gt;(&lt;span class="pl-c1"&gt;1.005&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1.01&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sdbm" class="anchor" aria-hidden="true" href="#sdbm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sdbm&lt;/h3&gt;
&lt;p&gt;Hashes the input string into a whole number.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.split('')&lt;/code&gt; and &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create a hash of the input string, utilizing bit shifting.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sdbm&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; arr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;hashCode&lt;/span&gt;, &lt;span class="pl-smi"&gt;currentVal&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      (hashCode &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;currentVal&lt;/span&gt;.&lt;span class="pl-c1"&gt;charCodeAt&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (hashCode &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (hashCode &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt; hashCode),
    &lt;span class="pl-c1"&gt;0&lt;/span&gt;
  );
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sdbm&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; -3521204949&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-standarddeviation" class="anchor" aria-hidden="true" href="#standarddeviation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;standardDeviation&lt;/h3&gt;
&lt;p&gt;Returns the standard deviation of an array of numbers.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to calculate the mean, variance and the sum of the variance of the values, the variance of the values, then
determine the standard deviation.
You can omit the second argument to get the sample standard deviation or set it to &lt;code&gt;true&lt;/code&gt; to get the population standard deviation.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;standardDeviation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;usePopulation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mean&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val, &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;sqrt&lt;/span&gt;(
    &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-c1"&gt;concat&lt;/span&gt;((val &lt;span class="pl-k"&gt;-&lt;/span&gt; mean) &lt;span class="pl-k"&gt;**&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;), []).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val, &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt;
      (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; (usePopulation &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
  );
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;standardDeviation&lt;/span&gt;([&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;38&lt;/span&gt;, &lt;span class="pl-c1"&gt;23&lt;/span&gt;, &lt;span class="pl-c1"&gt;38&lt;/span&gt;, &lt;span class="pl-c1"&gt;23&lt;/span&gt;, &lt;span class="pl-c1"&gt;21&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 13.284434142114991 (sample)&lt;/span&gt;
&lt;span class="pl-en"&gt;standardDeviation&lt;/span&gt;([&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;38&lt;/span&gt;, &lt;span class="pl-c1"&gt;23&lt;/span&gt;, &lt;span class="pl-c1"&gt;38&lt;/span&gt;, &lt;span class="pl-c1"&gt;23&lt;/span&gt;, &lt;span class="pl-c1"&gt;21&lt;/span&gt;], &lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 12.29899614287479 (population)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sum" class="anchor" aria-hidden="true" href="#sum"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sum&lt;/h3&gt;
&lt;p&gt;Returns the sum of two or more numbers/arrays.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to add each value to an accumulator, initialized with a value of &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sum&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;arr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;arr].&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sum&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 10&lt;/span&gt;
&lt;span class="pl-en"&gt;sum&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sumby" class="anchor" aria-hidden="true" href="#sumby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sumBy&lt;/h3&gt;
&lt;p&gt;Returns the sum of an array, after mapping each element to a value using the provided function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to map each element to the value returned by &lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to add each value to an accumulator, initialized with a value of &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sumBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt; fn &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; fn &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val[fn]).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; val, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sumBy&lt;/span&gt;([{ n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }], &lt;span class="pl-smi"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;o&lt;/span&gt;.&lt;span class="pl-smi"&gt;n&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 20&lt;/span&gt;
&lt;span class="pl-en"&gt;sumBy&lt;/span&gt;([{ n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt; }, { n&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;n&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 20&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sumpower" class="anchor" aria-hidden="true" href="#sumpower"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sumPower&lt;/h3&gt;
&lt;p&gt;Returns the sum of the powers of all the numbers from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; (both inclusive).&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.fill()&lt;/code&gt; to create an array of all the numbers in the target range, &lt;code&gt;Array.prototype.map()&lt;/code&gt; and the exponent operator (&lt;code&gt;**&lt;/code&gt;) to raise them to &lt;code&gt;power&lt;/code&gt; and &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to add them together.
Omit the second argument, &lt;code&gt;power&lt;/code&gt;, to use a default power of &lt;code&gt;2&lt;/code&gt;.
Omit the third argument, &lt;code&gt;start&lt;/code&gt;, to use a default starting value of &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sumPower&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;end&lt;/span&gt;, &lt;span class="pl-smi"&gt;power&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-smi"&gt;start&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(end &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; start)
    .&lt;span class="pl-en"&gt;fill&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (i &lt;span class="pl-k"&gt;+&lt;/span&gt; start) &lt;span class="pl-k"&gt;**&lt;/span&gt; power)
    .&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sumPower&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 385&lt;/span&gt;
&lt;span class="pl-en"&gt;sumPower&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3025&lt;/span&gt;
&lt;span class="pl-en"&gt;sumPower&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2925&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tosafeinteger" class="anchor" aria-hidden="true" href="#tosafeinteger"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;toSafeInteger&lt;/h3&gt;
&lt;p&gt;Converts a value to a safe integer.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.max()&lt;/code&gt; and &lt;code&gt;Math.min()&lt;/code&gt; to find the closest safe value.
Use &lt;code&gt;Math.round()&lt;/code&gt; to convert to an integer.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;toSafeInteger&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;num&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;round&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;min&lt;/span&gt;(num, &lt;span class="pl-c1"&gt;Number&lt;/span&gt;.&lt;span class="pl-c1"&gt;MAX_SAFE_INTEGER&lt;/span&gt;), &lt;span class="pl-c1"&gt;Number&lt;/span&gt;.&lt;span class="pl-c1"&gt;MIN_SAFE_INTEGER&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;toSafeInteger&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;3.2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
&lt;span class="pl-en"&gt;toSafeInteger&lt;/span&gt;(&lt;span class="pl-c1"&gt;Infinity&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 9007199254740991&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-vectordistance" class="anchor" aria-hidden="true" href="#vectordistance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vectorDistance&lt;/h3&gt;
&lt;p&gt;Returns the distance between two vectors.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt;, &lt;code&gt;Math.pow()&lt;/code&gt; and &lt;code&gt;Math.sqrt()&lt;/code&gt; to calculate the Euclidean distance between two vectors.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;vectorDistance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;coords&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; pointLength &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;trunc&lt;/span&gt;(&lt;span class="pl-smi"&gt;coords&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
  &lt;span class="pl-k"&gt;let&lt;/span&gt; sum &lt;span class="pl-k"&gt;=&lt;/span&gt; coords
    .&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, pointLength)
    .&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; acc &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;pow&lt;/span&gt;(val &lt;span class="pl-k"&gt;-&lt;/span&gt; coords[pointLength &lt;span class="pl-k"&gt;+&lt;/span&gt; i], &lt;span class="pl-c1"&gt;2&lt;/span&gt;), &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;sqrt&lt;/span&gt;(sum);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;vectorDistance&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 11.180339887498949&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content--node-1" class="anchor" aria-hidden="true" href="#-node-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png"&gt;📦&lt;/g-emoji&gt; Node&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-atob" class="anchor" aria-hidden="true" href="#atob"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;atob&lt;/h3&gt;
&lt;p&gt;Decodes a string of data which has been encoded using base-64 encoding.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Buffer&lt;/code&gt; for the given string with base-64 encoding and use &lt;code&gt;Buffer.toString('binary')&lt;/code&gt; to return the decoded string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;atob&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;Buffer&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;(str, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;base64&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;toString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;binary&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;atob&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Zm9vYmFy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'foobar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-btoa" class="anchor" aria-hidden="true" href="#btoa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;btoa&lt;/h3&gt;
&lt;p&gt;Creates a base-64 encoded ASCII string from a String object in which each character in the string is treated as a byte of binary data.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;Buffer&lt;/code&gt; for the given string with binary encoding and use &lt;code&gt;Buffer.toString('base64')&lt;/code&gt; to return the encoded string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;btoa&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;Buffer&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;(str, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;binary&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;toString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;base64&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;btoa&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foobar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Zm9vYmFy'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-colorize" class="anchor" aria-hidden="true" href="#colorize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;colorize&lt;/h3&gt;
&lt;p&gt;Add special characters to text to print in color in the console (combined with &lt;code&gt;console.log()&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Use template literals and special characters to add the appropriate color code to the string output.
For background colors, add a special character that resets the background color at the end of the string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;colorize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ({
  black&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[30m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  red&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[31m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  green&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[32m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  yellow&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[33m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  blue&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[34m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  magenta&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[35m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  cyan&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[36m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  white&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[37m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  bgBlack&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[40m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[0m&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  bgRed&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[41m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[0m&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  bgGreen&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[42m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[0m&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  bgYellow&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[43m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[0m&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  bgBlue&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[44m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[0m&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  bgMagenta&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[45m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[0m&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  bgCyan&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[46m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[0m&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
  bgWhite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[47m&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\x1b&lt;/span&gt;[0m&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-en"&gt;colorize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;red&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'foo' (red letters)&lt;/span&gt;
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-en"&gt;colorize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;bgBlue&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'foo bar' (blue background)&lt;/span&gt;
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-en"&gt;colorize&lt;/span&gt;(&lt;span class="pl-en"&gt;colorize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;yellow&lt;/span&gt;, &lt;span class="pl-en"&gt;colorize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;green&lt;/span&gt;).&lt;span class="pl-smi"&gt;bgWhite&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'foo bar' (first word in yellow letters, second word in green letters, white background for both)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-createdirifnotexists" class="anchor" aria-hidden="true" href="#createdirifnotexists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;createDirIfNotExists&lt;/h3&gt;
&lt;p&gt;Creates a directory, if it does not exist.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;fs.existsSync()&lt;/code&gt; to check if the directory exists, &lt;code&gt;fs.mkdirSync()&lt;/code&gt; to create it.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fs&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;createDirIfNotExists&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dir&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;fs&lt;/span&gt;.&lt;span class="pl-en"&gt;existsSync&lt;/span&gt;(dir) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;fs&lt;/span&gt;.&lt;span class="pl-en"&gt;mkdirSync&lt;/span&gt;(dir) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;createDirIfNotExists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; creates the directory 'test', if it doesn't exist&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hasflags" class="anchor" aria-hidden="true" href="#hasflags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hasFlags&lt;/h3&gt;
&lt;p&gt;Check if the current process's arguments contain the specified flags.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.every()&lt;/code&gt; and &lt;code&gt;Array.prototype.includes()&lt;/code&gt; to check if &lt;code&gt;process.argv&lt;/code&gt; contains all the specified flags.
Use a regular expression to test if the specified flags are prefixed with &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt; and prefix them accordingly.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;hasFlags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;flags&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;flags&lt;/span&gt;.&lt;span class="pl-en"&gt;every&lt;/span&gt;(&lt;span class="pl-smi"&gt;flag&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;process&lt;/span&gt;.&lt;span class="pl-smi"&gt;argv&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;^&lt;/span&gt;-&lt;span class="pl-k"&gt;{1,2}&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;test&lt;/span&gt;(flag) &lt;span class="pl-k"&gt;?&lt;/span&gt; flag &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; flag));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; node myScript.js -s --test --cool=true&lt;/span&gt;
&lt;span class="pl-en"&gt;hasFlags&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-s&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;hasFlags&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--test&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cool=true&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-s&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;hasFlags&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;special&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hashnode" class="anchor" aria-hidden="true" href="#hashnode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hashNode&lt;/h3&gt;
&lt;p&gt;Creates a hash for a value using the &lt;a href="https://en.wikipedia.org/wiki/SHA-2" rel="nofollow"&gt;SHA-256&lt;/a&gt; algorithm. Returns a promise.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;crypto&lt;/code&gt; API to create a hash for the given value, &lt;code&gt;setTimeout&lt;/code&gt; to prevent blocking on a long operation, and a &lt;code&gt;Promise&lt;/code&gt; to give it a familiar interface.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;crypto&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;crypto&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;hashNode&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Promise&lt;/span&gt;(&lt;span class="pl-smi"&gt;resolve&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;setTimeout&lt;/span&gt;(
      () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-en"&gt;resolve&lt;/span&gt;(
          crypto
            .&lt;span class="pl-en"&gt;createHash&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sha256&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-en"&gt;update&lt;/span&gt;(val)
            .&lt;span class="pl-en"&gt;digest&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hex&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        ),
      &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    )
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;hashNode&lt;/span&gt;(&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], foo&lt;span class="pl-k"&gt;:&lt;/span&gt; { c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; } })).&lt;span class="pl-c1"&gt;then&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '04aa106279f5977f59f9067fa9712afc4aedc6f5862a8defc34552d8c7206393'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isduplexstream" class="anchor" aria-hidden="true" href="#isduplexstream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isDuplexStream&lt;/h3&gt;
&lt;p&gt;Checks if the given argument is a duplex (readable and writable) stream.&lt;/p&gt;
&lt;p&gt;Check if the value is different from &lt;code&gt;null&lt;/code&gt;, use &lt;code&gt;typeof&lt;/code&gt; to check if a value is of type &lt;code&gt;object&lt;/code&gt; and the &lt;code&gt;pipe&lt;/code&gt; property is of type &lt;code&gt;function&lt;/code&gt;.
Additionally check if the &lt;code&gt;typeof&lt;/code&gt; the &lt;code&gt;_read&lt;/code&gt;, &lt;code&gt;_write&lt;/code&gt; and &lt;code&gt;_readableState&lt;/code&gt;, &lt;code&gt;_writableState&lt;/code&gt; properties are &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt; respectively.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isDuplexStream&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  val &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;pipe&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;_read&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;_readableState&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;_write&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;_writableState&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;Stream&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stream&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;isDuplexStream&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Stream.Duplex&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isreadablestream" class="anchor" aria-hidden="true" href="#isreadablestream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isReadableStream&lt;/h3&gt;
&lt;p&gt;Checks if the given argument is a readable stream.&lt;/p&gt;
&lt;p&gt;Check if the value is different from &lt;code&gt;null&lt;/code&gt;, use &lt;code&gt;typeof&lt;/code&gt; to check if the value is of type &lt;code&gt;object&lt;/code&gt; and the &lt;code&gt;pipe&lt;/code&gt; property is of type &lt;code&gt;function&lt;/code&gt;.
Additionally check if the &lt;code&gt;typeof&lt;/code&gt; the &lt;code&gt;_read&lt;/code&gt; and &lt;code&gt;_readableState&lt;/code&gt; properties are &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt; respectively.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isReadableStream&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  val &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;pipe&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;_read&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;_readableState&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fs&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;isReadableStream&lt;/span&gt;(&lt;span class="pl-smi"&gt;fs&lt;/span&gt;.&lt;span class="pl-en"&gt;createReadStream&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test.txt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isstream" class="anchor" aria-hidden="true" href="#isstream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isStream&lt;/h3&gt;
&lt;p&gt;Checks if the given argument is a stream.&lt;/p&gt;
&lt;p&gt;Check if the value is different from &lt;code&gt;null&lt;/code&gt;, use &lt;code&gt;typeof&lt;/code&gt; to check if the value is of type &lt;code&gt;object&lt;/code&gt; and the &lt;code&gt;pipe&lt;/code&gt; property is of type &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isStream&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;pipe&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fs&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;isStream&lt;/span&gt;(&lt;span class="pl-smi"&gt;fs&lt;/span&gt;.&lt;span class="pl-en"&gt;createReadStream&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test.txt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-istravisci" class="anchor" aria-hidden="true" href="#istravisci"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isTravisCI&lt;/h3&gt;
&lt;p&gt;Checks if the current environment is &lt;a href="https://travis-ci.org/" rel="nofollow"&gt;Travis CI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Checks if the current environment has the &lt;code&gt;TRAVIS&lt;/code&gt; and &lt;code&gt;CI&lt;/code&gt; environment variables (&lt;a href="https://docs.travis-ci.com/user/environment-variables/#Default-Environment-Variables" rel="nofollow"&gt;reference&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isTravisCI&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;TRAVIS&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;process&lt;/span&gt;.&lt;span class="pl-smi"&gt;env&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;CI&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;process&lt;/span&gt;.&lt;span class="pl-smi"&gt;env&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isTravisCI&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true (if code is running on Travis CI)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-iswritablestream" class="anchor" aria-hidden="true" href="#iswritablestream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isWritableStream&lt;/h3&gt;
&lt;p&gt;Checks if the given argument is a writable stream.&lt;/p&gt;
&lt;p&gt;Check if the value is different from &lt;code&gt;null&lt;/code&gt;, use &lt;code&gt;typeof&lt;/code&gt; to check if the value is of type &lt;code&gt;object&lt;/code&gt; and the &lt;code&gt;pipe&lt;/code&gt; property is of type &lt;code&gt;function&lt;/code&gt;.
Additionally check if the &lt;code&gt;typeof&lt;/code&gt; the &lt;code&gt;_write&lt;/code&gt; and &lt;code&gt;_writableState&lt;/code&gt; properties are &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt; respectively.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isWritableStream&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  val &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;pipe&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;_write&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-smi"&gt;_writableState&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fs&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;isWritableStream&lt;/span&gt;(&lt;span class="pl-smi"&gt;fs&lt;/span&gt;.&lt;span class="pl-en"&gt;createWriteStream&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test.txt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-jsontofile" class="anchor" aria-hidden="true" href="#jsontofile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSONToFile&lt;/h3&gt;
&lt;p&gt;Writes a JSON object to a file.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;fs.writeFile()&lt;/code&gt;, template literals and &lt;code&gt;JSON.stringify()&lt;/code&gt; to write a &lt;code&gt;json&lt;/code&gt; object to a &lt;code&gt;.json&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fs&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONToFile&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;filename&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;fs&lt;/span&gt;.&lt;span class="pl-en"&gt;writeFile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;filename&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;.json&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;(obj, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;JSONToFile&lt;/span&gt;({ test&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;is passed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;testJsonFile&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; writes the object to 'testJsonFile.json'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-readfilelines" class="anchor" aria-hidden="true" href="#readfilelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;readFileLines&lt;/h3&gt;
&lt;p&gt;Returns an array of lines from the specified file.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;readFileSync&lt;/code&gt; function in &lt;code&gt;fs&lt;/code&gt; node package to create a &lt;code&gt;Buffer&lt;/code&gt; from a file.
convert buffer to string using &lt;code&gt;toString(encoding)&lt;/code&gt; function.
creating an array from contents of file by &lt;code&gt;split&lt;/code&gt;ing file content line by line (each &lt;code&gt;\n&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fs&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;readFileLines&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;filename&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  fs
    .&lt;span class="pl-en"&gt;readFileSync&lt;/span&gt;(filename)
    .&lt;span class="pl-c1"&gt;toString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;UTF8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;contents of test.txt :&lt;/span&gt;
&lt;span class="pl-c"&gt;  line1&lt;/span&gt;
&lt;span class="pl-c"&gt;  line2&lt;/span&gt;
&lt;span class="pl-c"&gt;  line3&lt;/span&gt;
&lt;span class="pl-c"&gt;  ___________________________&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; arr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;readFileLines&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test.txt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(arr); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['line1', 'line2', 'line3']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-untildify" class="anchor" aria-hidden="true" href="#untildify"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;untildify&lt;/h3&gt;
&lt;p&gt;Converts a tilde path to an absolute path.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.replace()&lt;/code&gt; with a regular expression and &lt;code&gt;OS.homedir()&lt;/code&gt; to replace the &lt;code&gt;~&lt;/code&gt; in the start of the path with the home directory.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;untildify&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;^&lt;/span&gt;~(&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-cce"&gt;\/&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;)&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;os&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;homedir&lt;/span&gt;()&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;$1&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;untildify&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/node&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '/Users/aUser/node'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uuidgeneratornode" class="anchor" aria-hidden="true" href="#uuidgeneratornode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UUIDGeneratorNode&lt;/h3&gt;
&lt;p&gt;Generates a UUID in Node.JS.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;crypto&lt;/code&gt; API to generate a UUID, compliant with &lt;a href="https://www.ietf.org/rfc/rfc4122.txt" rel="nofollow"&gt;RFC4122&lt;/a&gt; version 4.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;crypto&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;crypto&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;UUIDGeneratorNode&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  ([&lt;span class="pl-c1"&gt;1e7&lt;/span&gt;] &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1e3&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;4e3&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8e3&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1e11&lt;/span&gt;).&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[018]&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    (c &lt;span class="pl-k"&gt;^&lt;/span&gt; (&lt;span class="pl-smi"&gt;crypto&lt;/span&gt;.&lt;span class="pl-en"&gt;randomBytes&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; (&lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; (c &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;)))).&lt;span class="pl-c1"&gt;toString&lt;/span&gt;(&lt;span class="pl-c1"&gt;16&lt;/span&gt;)
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;UUIDGeneratorNode&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '79c7c136-60ee-40a2-beb2-856f1feabefc'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-️-object-1" class="anchor" aria-hidden="true" href="#️-object-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="card_file_box" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5c3.png"&gt;🗃️&lt;/g-emoji&gt; Object&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-bindall" class="anchor" aria-hidden="true" href="#bindall"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bindAll&lt;/h3&gt;
&lt;p&gt;Binds methods of an object to the object itself, overwriting the existing method.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; to return a &lt;code&gt;function&lt;/code&gt; that uses &lt;code&gt;Function.prototype.apply()&lt;/code&gt; to apply the given context (&lt;code&gt;obj&lt;/code&gt;) to &lt;code&gt;fn&lt;/code&gt; for each function specified.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;bindAll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;fns&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;fns&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(
    &lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (
      (f &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[fn]),
      (obj[fn] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(obj);
      })
    )
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; view &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  label&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;docs&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-en"&gt;click&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;() {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clicked &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-c1"&gt;label&lt;/span&gt;);
  }
};
&lt;span class="pl-en"&gt;bindAll&lt;/span&gt;(view, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;jQuery&lt;/span&gt;(element).&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;click&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Logs 'clicked docs' when clicked.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deepclone" class="anchor" aria-hidden="true" href="#deepclone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;deepClone&lt;/h3&gt;
&lt;p&gt;Creates a deep clone of an object.&lt;/p&gt;
&lt;p&gt;Use recursion.
Check if the passed object is &lt;code&gt;null&lt;/code&gt; and, if so, return &lt;code&gt;null&lt;/code&gt;.
Use &lt;code&gt;Object.assign()&lt;/code&gt; and an empty object (&lt;code&gt;{}&lt;/code&gt;) to create a shallow clone of the original.
Use &lt;code&gt;Object.keys()&lt;/code&gt; and &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; to determine which key-value pairs need to be deep cloned.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;deepClone&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (obj &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; clone &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;assign&lt;/span&gt;({}, obj);
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(clone).&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(
    &lt;span class="pl-smi"&gt;key&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (clone[key] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; obj[key] &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;deepClone&lt;/span&gt;(obj[key]) &lt;span class="pl-k"&gt;:&lt;/span&gt; obj[key])
  );
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;isArray&lt;/span&gt;(obj) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;
    &lt;span class="pl-k"&gt;?&lt;/span&gt; (&lt;span class="pl-smi"&gt;clone&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;(clone)
    &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;isArray&lt;/span&gt;(obj)
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;from&lt;/span&gt;(obj)
    &lt;span class="pl-k"&gt;:&lt;/span&gt; clone;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { foo&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, obj&lt;span class="pl-k"&gt;:&lt;/span&gt; { a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; } };
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;deepClone&lt;/span&gt;(a); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a !== b, a.obj !== b.obj&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deepfreeze" class="anchor" aria-hidden="true" href="#deepfreeze"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;deepFreeze&lt;/h3&gt;
&lt;p&gt;Deep freezes an object.&lt;/p&gt;
&lt;p&gt;Calls &lt;code&gt;Object.freeze(obj)&lt;/code&gt; recursively on all unfrozen properties of passed object that are &lt;code&gt;instanceof&lt;/code&gt; object.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;deepFreeze&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;prop&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;!&lt;/span&gt;(obj[prop] &lt;span class="pl-k"&gt;instanceof&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;) &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;isFrozen&lt;/span&gt;(obj[prop]) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;deepFreeze&lt;/span&gt;(obj[prop])
  ) &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;freeze&lt;/span&gt;(obj);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;use strict&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;deepFreeze&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]]);

o[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; not allowed&lt;/span&gt;
o[&lt;span class="pl-c1"&gt;1&lt;/span&gt;][&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; not allowed as well&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deepget" class="anchor" aria-hidden="true" href="#deepget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;deepGet&lt;/h3&gt;
&lt;p&gt;Returns the target value in a nested JSON object, based on the &lt;code&gt;keys&lt;/code&gt; array.&lt;/p&gt;
&lt;p&gt;Compare the keys you want in the nested JSON object as an &lt;code&gt;Array&lt;/code&gt;.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to get value from nested JSON object one by one.
If the key exists in object, return target value, otherwise, return &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;deepGet&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;keys&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;keys&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;xs&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (xs &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; xs[x] &lt;span class="pl-k"&gt;?&lt;/span&gt; xs[x] &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;), obj);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; index &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  foo&lt;span class="pl-k"&gt;:&lt;/span&gt; {
    foz&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;],
    bar&lt;span class="pl-k"&gt;:&lt;/span&gt; {
      baz&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
    }
  }
};
&lt;span class="pl-en"&gt;deepGet&lt;/span&gt;(data, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, index]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; get 3&lt;/span&gt;
&lt;span class="pl-en"&gt;deepGet&lt;/span&gt;(data, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;baz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; null&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deepmapkeys-" class="anchor" aria-hidden="true" href="#deepmapkeys-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;deepMapKeys &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Deep maps an object's keys.&lt;/p&gt;
&lt;p&gt;Creates an object with the same values as the provided object and keys generated by running the provided function for each key.
Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; to iterate over the object's keys.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create a new object with the same values and mapped keys using &lt;code&gt;fn&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;deepMapKeys&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;f&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;isArray&lt;/span&gt;(obj)
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;deepMapKeys&lt;/span&gt;(val, f))
    &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; obj &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;current&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[current];
        acc[&lt;span class="pl-en"&gt;f&lt;/span&gt;(current)] &lt;span class="pl-k"&gt;=&lt;/span&gt;
          val &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;deepMapKeys&lt;/span&gt;(val, f) &lt;span class="pl-k"&gt;:&lt;/span&gt; (acc[&lt;span class="pl-en"&gt;f&lt;/span&gt;(current)] &lt;span class="pl-k"&gt;=&lt;/span&gt; val);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
      }, {})
    &lt;span class="pl-k"&gt;:&lt;/span&gt; obj;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  foo&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  nested&lt;span class="pl-k"&gt;:&lt;/span&gt; {
    child&lt;span class="pl-k"&gt;:&lt;/span&gt; {
      withArray&lt;span class="pl-k"&gt;:&lt;/span&gt; [
        {
          grandChild&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
        }
      ]
    }
  }
};
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;upperKeysObj&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;deepMapKeys&lt;/span&gt;(obj, &lt;span class="pl-smi"&gt;key&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;key&lt;/span&gt;.&lt;span class="pl-c1"&gt;toUpperCase&lt;/span&gt;());
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;{&lt;/span&gt;
&lt;span class="pl-c"&gt;  "FOO":"1",&lt;/span&gt;
&lt;span class="pl-c"&gt;  "NESTED":{&lt;/span&gt;
&lt;span class="pl-c"&gt;    "CHILD":{&lt;/span&gt;
&lt;span class="pl-c"&gt;      "WITHARRAY":[&lt;/span&gt;
&lt;span class="pl-c"&gt;        {&lt;/span&gt;
&lt;span class="pl-c"&gt;          "GRANDCHILD":[ 'hello' ]&lt;/span&gt;
&lt;span class="pl-c"&gt;        }&lt;/span&gt;
&lt;span class="pl-c"&gt;      ]&lt;/span&gt;
&lt;span class="pl-c"&gt;    }&lt;/span&gt;
&lt;span class="pl-c"&gt;  }&lt;/span&gt;
&lt;span class="pl-c"&gt;}&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-defaults" class="anchor" aria-hidden="true" href="#defaults"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;defaults&lt;/h3&gt;
&lt;p&gt;Assigns default values for all properties in an object that are &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.assign()&lt;/code&gt; to create a new empty object and copy the original one to maintain key order, use &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; and the spread operator &lt;code&gt;...&lt;/code&gt; to combine the default values from left to right, finally use &lt;code&gt;obj&lt;/code&gt; again to overwrite properties that originally had a value.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;defaults&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;defs&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;assign&lt;/span&gt;({}, obj, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;defs&lt;/span&gt;.&lt;span class="pl-c1"&gt;reverse&lt;/span&gt;(), obj);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;defaults&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }, { b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }, { a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { a: 1, b: 2 }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dig" class="anchor" aria-hidden="true" href="#dig"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dig&lt;/h3&gt;
&lt;p&gt;Returns the target value in a nested JSON object, based on the given key.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;in&lt;/code&gt; operator to check if &lt;code&gt;target&lt;/code&gt; exists in &lt;code&gt;obj&lt;/code&gt;.
If found, return the value of &lt;code&gt;obj[target]&lt;/code&gt;, otherwise use &lt;code&gt;Object.values(obj)&lt;/code&gt; and &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to recursively call &lt;code&gt;dig&lt;/code&gt; on each nested object until the first matching key/value pair is found.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;dig&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;target&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  target &lt;span class="pl-k"&gt;in&lt;/span&gt; obj
    &lt;span class="pl-k"&gt;?&lt;/span&gt; obj[target]
    &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;values&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (acc &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;dig&lt;/span&gt;(val, target);
      }, &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  level1&lt;span class="pl-k"&gt;:&lt;/span&gt; {
    level2&lt;span class="pl-k"&gt;:&lt;/span&gt; {
      level3&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    }
  }
};
&lt;span class="pl-en"&gt;dig&lt;/span&gt;(data, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;level3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'some data'&lt;/span&gt;
&lt;span class="pl-en"&gt;dig&lt;/span&gt;(data, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;level4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; undefined&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-equals-" class="anchor" aria-hidden="true" href="#equals-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;equals &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Performs a deep comparison between two values to determine if they are equivalent.&lt;/p&gt;
&lt;p&gt;Check if the two values are identical, if they are both &lt;code&gt;Date&lt;/code&gt; objects with the same time, using &lt;code&gt;Date.getTime()&lt;/code&gt; or if they are both non-object values with an equivalent value (strict comparison).
Check if only one value is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; or if their prototypes differ.
If none of the above conditions are met, use &lt;code&gt;Object.keys()&lt;/code&gt; to check if both values have the same number of keys, then use &lt;code&gt;Array.prototype.every()&lt;/code&gt; to check if every key in the first value exists in the second one and if they are equivalent by calling this method recursively.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;equals&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (a &lt;span class="pl-k"&gt;===&lt;/span&gt; b) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (a &lt;span class="pl-k"&gt;instanceof&lt;/span&gt; &lt;span class="pl-c1"&gt;Date&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; b &lt;span class="pl-k"&gt;instanceof&lt;/span&gt; &lt;span class="pl-c1"&gt;Date&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-c1"&gt;getTime&lt;/span&gt;() &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-c1"&gt;getTime&lt;/span&gt;();
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;a &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;b &lt;span class="pl-k"&gt;||&lt;/span&gt; (&lt;span class="pl-k"&gt;typeof&lt;/span&gt; a &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; b &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-k"&gt;return&lt;/span&gt; a &lt;span class="pl-k"&gt;===&lt;/span&gt; b;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-c1"&gt;prototype&lt;/span&gt; &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-c1"&gt;prototype&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; keys &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(a);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;keys&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(b).&lt;span class="pl-c1"&gt;length&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;keys&lt;/span&gt;.&lt;span class="pl-en"&gt;every&lt;/span&gt;(&lt;span class="pl-smi"&gt;k&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;equals&lt;/span&gt;(a[k], b[k]));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;equals&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, { e&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; }], b&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;4&lt;/span&gt;], c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, { a&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, { e&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; }], b&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;4&lt;/span&gt;], c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-findkey" class="anchor" aria-hidden="true" href="#findkey"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;findKey&lt;/h3&gt;
&lt;p&gt;Returns the first key that satisfies the provided testing function. Otherwise &lt;code&gt;undefined&lt;/code&gt; is returned.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; to get all the properties of the object, &lt;code&gt;Array.prototype.find()&lt;/code&gt; to test the provided function for each key-value pair. The callback receives three arguments - the value, the key and the object.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;findKey&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-c1"&gt;find&lt;/span&gt;(&lt;span class="pl-smi"&gt;key&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(obj[key], key, obj));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;findKey&lt;/span&gt;(
  {
    barney&lt;span class="pl-k"&gt;:&lt;/span&gt; { age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;36&lt;/span&gt;, active&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; },
    fred&lt;span class="pl-k"&gt;:&lt;/span&gt; { age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;40&lt;/span&gt;, active&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; },
    pebbles&lt;span class="pl-k"&gt;:&lt;/span&gt; { age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, active&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }
  },
  &lt;span class="pl-smi"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; o[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;active&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'barney'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-findlastkey" class="anchor" aria-hidden="true" href="#findlastkey"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;findLastKey&lt;/h3&gt;
&lt;p&gt;Returns the last key that satisfies the provided testing function.
Otherwise &lt;code&gt;undefined&lt;/code&gt; is returned.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; to get all the properties of the object, &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; to reverse their order and &lt;code&gt;Array.prototype.find()&lt;/code&gt; to test the provided function for each key-value pair.
The callback receives three arguments - the value, the key and the object.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;findLastKey&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj)
    .&lt;span class="pl-c1"&gt;reverse&lt;/span&gt;()
    .&lt;span class="pl-c1"&gt;find&lt;/span&gt;(&lt;span class="pl-smi"&gt;key&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(obj[key], key, obj));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;findLastKey&lt;/span&gt;(
  {
    barney&lt;span class="pl-k"&gt;:&lt;/span&gt; { age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;36&lt;/span&gt;, active&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; },
    fred&lt;span class="pl-k"&gt;:&lt;/span&gt; { age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;40&lt;/span&gt;, active&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; },
    pebbles&lt;span class="pl-k"&gt;:&lt;/span&gt; { age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, active&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }
  },
  &lt;span class="pl-smi"&gt;o&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; o[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;active&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'pebbles'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-flattenobject" class="anchor" aria-hidden="true" href="#flattenobject"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;flattenObject&lt;/h3&gt;
&lt;p&gt;Flatten an object with the paths for keys.&lt;/p&gt;
&lt;p&gt;Use recursion.
Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; combined with &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to convert every leaf node to a flattened path node.
If the value of a key is an object, the function calls itself with the appropriate &lt;code&gt;prefix&lt;/code&gt; to create the path using &lt;code&gt;Object.assign()&lt;/code&gt;.
Otherwise, it adds the appropriate prefixed key-value pair to the accumulator object.
You should always omit the second argument, &lt;code&gt;prefix&lt;/code&gt;, unless you want every key to have a prefix.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;flattenObject&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;prefix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;k&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pre&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;prefix&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; prefix &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;typeof&lt;/span&gt; obj[k] &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;assign&lt;/span&gt;(acc, &lt;span class="pl-en"&gt;flattenObject&lt;/span&gt;(obj[k], pre &lt;span class="pl-k"&gt;+&lt;/span&gt; k));
    &lt;span class="pl-k"&gt;else&lt;/span&gt; acc[pre &lt;span class="pl-k"&gt;+&lt;/span&gt; k] &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[k];
    &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
  }, {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;flattenObject&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; { b&lt;span class="pl-k"&gt;:&lt;/span&gt; { c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; } }, d&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { 'a.b.c': 1, d: 1 }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-forown" class="anchor" aria-hidden="true" href="#forown"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;forOwn&lt;/h3&gt;
&lt;p&gt;Iterates over all own properties of an object, running a callback for each one.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; to get all the properties of the object, &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; to run the provided function for each key-value pair. The callback receives three arguments - the value, the key and the object.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;forOwn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;key&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(obj[key], key, obj));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;forOwn&lt;/span&gt;({ foo&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }, &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(v)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'bar', 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-forownright" class="anchor" aria-hidden="true" href="#forownright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;forOwnRight&lt;/h3&gt;
&lt;p&gt;Iterates over all own properties of an object in reverse, running a callback for each one.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; to get all the properties of the object, &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; to reverse their order and &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; to run the provided function for each key-value pair. The callback receives three arguments - the value, the key and the object.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;forOwnRight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj)
    .&lt;span class="pl-c1"&gt;reverse&lt;/span&gt;()
    .&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;key&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(obj[key], key, obj));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;forOwnRight&lt;/span&gt;({ foo&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }, &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(v)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1, 'bar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;functions&lt;/h3&gt;
&lt;p&gt;Returns an array of function property names from own (and optionally inherited) enumerable properties of an object.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; to iterate over the object's own properties.
If &lt;code&gt;inherited&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, use &lt;code&gt;Object.get.PrototypeOf(obj)&lt;/code&gt; to also get the object's inherited properties.
Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to keep only those properties that are functions.
Omit the second argument, &lt;code&gt;inherited&lt;/code&gt;, to not include inherited properties by default.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;functions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;inherited&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  (inherited
    &lt;span class="pl-k"&gt;?&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj), &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(&lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;getPrototypeOf&lt;/span&gt;(obj))]
    &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj)
  ).&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;key&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; obj[key] &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;Foo&lt;/span&gt;() {
  &lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-en"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
  &lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-en"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;;
}
&lt;span class="pl-smi"&gt;Foo&lt;/span&gt;.&lt;span class="pl-c1"&gt;prototype&lt;/span&gt;.&lt;span class="pl-en"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;;
&lt;span class="pl-en"&gt;functions&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Foo&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['a', 'b']&lt;/span&gt;
&lt;span class="pl-en"&gt;functions&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Foo&lt;/span&gt;(), &lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['a', 'b', 'c']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-get" class="anchor" aria-hidden="true" href="#get"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;get&lt;/h3&gt;
&lt;p&gt;Retrieve a set of properties indicated by the given selectors from an object.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; for each selector, &lt;code&gt;String.prototype.replace()&lt;/code&gt; to replace square brackets with dots, &lt;code&gt;String.prototype.split('.')&lt;/code&gt; to split each selector, &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to remove empty values and &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to get the value indicated by it.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;get&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;from&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;selectors&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  [&lt;span class="pl-k"&gt;...&lt;/span&gt;selectors].&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    s
      .&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-cce"&gt;\[&lt;/span&gt;(&lt;span class="pl-c1"&gt;[&lt;span class="pl-k"&gt;^&lt;/span&gt;&lt;span class="pl-cce"&gt;\[\]&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;)&lt;span class="pl-cce"&gt;\]&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.$1.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
      .&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
      .&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;t&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; t &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
      .&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;prev&lt;/span&gt;, &lt;span class="pl-smi"&gt;cur&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; prev &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; prev[cur], from)
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { selector&lt;span class="pl-k"&gt;:&lt;/span&gt; { to&lt;span class="pl-k"&gt;:&lt;/span&gt; { val&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;val to select&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; } }, target&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, { a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }] };
&lt;span class="pl-en"&gt;get&lt;/span&gt;(obj, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;selector.to.val&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;target[0]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;target[2].a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['val to select', 1, 'test']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-haskey" class="anchor" aria-hidden="true" href="#haskey"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hasKey&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the target value exists in a JSON object, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Check if &lt;code&gt;keys&lt;/code&gt; is non-empty and use &lt;code&gt;Array.prototype.every()&lt;/code&gt; to sequentially check its keys to internal depth of the object, &lt;code&gt;obj&lt;/code&gt;.
Use &lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt; to check if &lt;code&gt;obj&lt;/code&gt; does not have the current key or is not an object, stop propagation and return &lt;code&gt;false&lt;/code&gt;.
Otherwise assign the key's value to &lt;code&gt;obj&lt;/code&gt; to use on the next iteration.
Return &lt;code&gt;false&lt;/code&gt; beforehand if given key list is empty.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;hasKey&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;keys&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; (
    &lt;span class="pl-smi"&gt;keys&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;keys&lt;/span&gt;.&lt;span class="pl-en"&gt;every&lt;/span&gt;(&lt;span class="pl-smi"&gt;key&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;typeof&lt;/span&gt; obj &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-en"&gt;hasOwnProperty&lt;/span&gt;(key)) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
      obj &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[key];
      &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
    })
  );
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
  b&lt;span class="pl-k"&gt;:&lt;/span&gt; { c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; },
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b.d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
};
&lt;span class="pl-en"&gt;hasKey&lt;/span&gt;(obj, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;hasKey&lt;/span&gt;(obj, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;hasKey&lt;/span&gt;(obj, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;hasKey&lt;/span&gt;(obj, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b.d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;hasKey&lt;/span&gt;(obj, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;hasKey&lt;/span&gt;(obj, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;hasKey&lt;/span&gt;(obj, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;f&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-invertkeyvalues" class="anchor" aria-hidden="true" href="#invertkeyvalues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;invertKeyValues&lt;/h3&gt;
&lt;p&gt;Inverts the key-value pairs of an object, without mutating it. The corresponding inverted value of each inverted key is an array of keys responsible for generating the inverted value. If a function is supplied, it is applied to each inverted key.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys()&lt;/code&gt; and &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to invert the key-value pairs of an object and apply the function provided (if any).
Omit the second argument, &lt;code&gt;fn&lt;/code&gt;, to get the inverted keys without applying a function to them.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;invertKeyValues&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; fn &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(obj[key]) &lt;span class="pl-k"&gt;:&lt;/span&gt; obj[key];
    acc[val] &lt;span class="pl-k"&gt;=&lt;/span&gt; acc[val] &lt;span class="pl-k"&gt;||&lt;/span&gt; [];
    acc[val].&lt;span class="pl-c1"&gt;push&lt;/span&gt;(key);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
  }, {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;invertKeyValues&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { 1: [ 'a', 'c' ], 2: [ 'b' ] }&lt;/span&gt;
&lt;span class="pl-en"&gt;invertKeyValues&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }, &lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;group&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; value); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { group1: [ 'a', 'c' ], group2: [ 'b' ] }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-lowercasekeys" class="anchor" aria-hidden="true" href="#lowercasekeys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lowercaseKeys&lt;/h3&gt;
&lt;p&gt;Creates a new object from the specified object, where all the keys are in lowercase.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys()&lt;/code&gt; and &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create a new object from the specified object.
Convert each key in the original object to lowercase, using &lt;code&gt;String.toLowerCase()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;lowercaseKeys&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    acc[&lt;span class="pl-smi"&gt;key&lt;/span&gt;.&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;()] &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[key];
    &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
  }, {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;myObj&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { Name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Adam&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, sUrnAME&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Smith&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; };
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;myObjLower&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;lowercaseKeys&lt;/span&gt;(myObj); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {name: 'Adam', surname: 'Smith'};&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mapkeys" class="anchor" aria-hidden="true" href="#mapkeys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mapKeys&lt;/h3&gt;
&lt;p&gt;Creates an object with keys generated by running the provided function for each key and the same values as the provided object.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; to iterate over the object's keys.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create a new object with the same values and mapped keys using &lt;code&gt;fn&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mapKeys&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;k&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    acc[&lt;span class="pl-en"&gt;fn&lt;/span&gt;(obj[k], k, obj)] &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[k];
    &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
  }, {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;mapKeys&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, (&lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; key &lt;span class="pl-k"&gt;+&lt;/span&gt; val); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { a1: 1, b2: 2 }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mapvalues" class="anchor" aria-hidden="true" href="#mapvalues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mapValues&lt;/h3&gt;
&lt;p&gt;Creates an object with the same keys as the provided object and values generated by running the provided function for each value.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; to iterate over the object's keys.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create a new object with the same keys and mapped values using &lt;code&gt;fn&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mapValues&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;k&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    acc[k] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(obj[k], k, obj);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
  }, {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;users&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  fred&lt;span class="pl-k"&gt;:&lt;/span&gt; { user&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fred&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;40&lt;/span&gt; },
  pebbles&lt;span class="pl-k"&gt;:&lt;/span&gt; { user&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pebbles&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }
};
&lt;span class="pl-en"&gt;mapValues&lt;/span&gt;(users, &lt;span class="pl-smi"&gt;u&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;u&lt;/span&gt;.&lt;span class="pl-smi"&gt;age&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { fred: 40, pebbles: 1 }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-matches" class="anchor" aria-hidden="true" href="#matches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;matches&lt;/h3&gt;
&lt;p&gt;Compares two objects to determine if the first one contains equivalent property values to the second one.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(source)&lt;/code&gt; to get all the keys of the second object, then &lt;code&gt;Array.prototype.every()&lt;/code&gt;, &lt;code&gt;Object.hasOwnProperty()&lt;/code&gt; and strict comparison to determine if all keys exist in the first object and have the same values.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;matches&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;source&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(source).&lt;span class="pl-en"&gt;every&lt;/span&gt;(&lt;span class="pl-smi"&gt;key&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-en"&gt;hasOwnProperty&lt;/span&gt;(key) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; obj[key] &lt;span class="pl-k"&gt;===&lt;/span&gt; source[key]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;matches&lt;/span&gt;({ age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt;, hair&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;long&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, beard&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }, { hair&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;long&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, beard&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;matches&lt;/span&gt;({ hair&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;long&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, beard&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }, { age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt;, hair&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;long&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, beard&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-matcheswith" class="anchor" aria-hidden="true" href="#matcheswith"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;matchesWith&lt;/h3&gt;
&lt;p&gt;Compares two objects to determine if the first one contains equivalent property values to the second one, based on a provided function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(source)&lt;/code&gt; to get all the keys of the second object, then &lt;code&gt;Array.prototype.every()&lt;/code&gt;, &lt;code&gt;Object.hasOwnProperty()&lt;/code&gt; and the provided function to determine if all keys exist in the first object and have equivalent values.
If no function is provided, the values will be compared using the equality operator.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;matchesWith&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;source&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(source).&lt;span class="pl-en"&gt;every&lt;/span&gt;(&lt;span class="pl-smi"&gt;key&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-en"&gt;hasOwnProperty&lt;/span&gt;(key) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; fn
      &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(obj[key], source[key], key, obj, source)
      &lt;span class="pl-k"&gt;:&lt;/span&gt; obj[key] &lt;span class="pl-k"&gt;==&lt;/span&gt; source[key]
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isGreeting&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="pl-sr"&gt; &lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;^&lt;/span&gt;h(?:i&lt;span class="pl-k"&gt;|&lt;/span&gt;ello)&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;test&lt;/span&gt;(val);
&lt;span class="pl-en"&gt;matchesWith&lt;/span&gt;(
  { greeting&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
  { greeting&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; },
  (&lt;span class="pl-smi"&gt;oV&lt;/span&gt;, &lt;span class="pl-smi"&gt;sV&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;isGreeting&lt;/span&gt;(oV) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;isGreeting&lt;/span&gt;(sV)
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-merge" class="anchor" aria-hidden="true" href="#merge"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;merge&lt;/h3&gt;
&lt;p&gt;Creates a new object from the combination of two or more objects.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; combined with &lt;code&gt;Object.keys(obj)&lt;/code&gt; to iterate over all objects and keys.
Use &lt;code&gt;hasOwnProperty()&lt;/code&gt; and &lt;code&gt;Array.prototype.concat()&lt;/code&gt; to append values for keys existing in multiple objects.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;merge&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;objs&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  [&lt;span class="pl-k"&gt;...&lt;/span&gt;objs].&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;obj&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;k&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        acc[k] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-en"&gt;hasOwnProperty&lt;/span&gt;(k) &lt;span class="pl-k"&gt;?&lt;/span&gt; [].&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(acc[k]).&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(obj[k]) &lt;span class="pl-k"&gt;:&lt;/span&gt; obj[k];
        &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
      }, {}),
    {}
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;object&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  a&lt;span class="pl-k"&gt;:&lt;/span&gt; [{ x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }, { y&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }],
  b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
};
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;other&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  a&lt;span class="pl-k"&gt;:&lt;/span&gt; { z&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; },
  b&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;],
  c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
};
&lt;span class="pl-en"&gt;merge&lt;/span&gt;(object, other); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { a: [ { x: 2 }, { y: 4 }, { z: 3 } ], b: [ 1, 2, 3 ], c: 'foo' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-nest" class="anchor" aria-hidden="true" href="#nest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nest&lt;/h3&gt;
&lt;p&gt;Given a flat array of objects linked to one another, it will nest them recursively.
Useful for nesting comments, such as the ones on reddit.com.&lt;/p&gt;
&lt;p&gt;Use recursion.
Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to filter the items where the &lt;code&gt;id&lt;/code&gt; matches the &lt;code&gt;link&lt;/code&gt;, then &lt;code&gt;Array.prototype.map()&lt;/code&gt; to map each one to a new object that has a &lt;code&gt;children&lt;/code&gt; property which recursively nests the items based on which ones are children of the current item.
Omit the second argument, &lt;code&gt;id&lt;/code&gt;, to default to &lt;code&gt;null&lt;/code&gt; which indicates the object is not linked to another one (i.e. it is a top level object).
Omit the third argument, &lt;code&gt;link&lt;/code&gt;, to use &lt;code&gt;'parent_id'&lt;/code&gt; as the default property which links the object to another one by its &lt;code&gt;id&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;nest&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;items&lt;/span&gt;, &lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-smi"&gt;link&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;parent_id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  items
    .&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;item&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; item[link] &lt;span class="pl-k"&gt;===&lt;/span&gt; id)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;item&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ({ &lt;span class="pl-k"&gt;...&lt;/span&gt;item, children&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;nest&lt;/span&gt;(items, &lt;span class="pl-smi"&gt;item&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt;) }));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; One top level comment&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;comments&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, parent_id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; },
  { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, parent_id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; },
  { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, parent_id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; },
  { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, parent_id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; },
  { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, parent_id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; }
];
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;nestedComments&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;nest&lt;/span&gt;(comments); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{ id: 1, parent_id: null, children: [...] }]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-objectfrompairs" class="anchor" aria-hidden="true" href="#objectfrompairs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;objectFromPairs&lt;/h3&gt;
&lt;p&gt;Creates an object from the given key-value pairs.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create and combine key-value pairs.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;objectFromPairs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, [&lt;span class="pl-smi"&gt;key&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((a[key] &lt;span class="pl-k"&gt;=&lt;/span&gt; val), a), {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;objectFromPairs&lt;/span&gt;([[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {a: 1, b: 2}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-objecttopairs" class="anchor" aria-hidden="true" href="#objecttopairs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;objectToPairs&lt;/h3&gt;
&lt;p&gt;Creates an array of key-value pair arrays from an object.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys()&lt;/code&gt; and &lt;code&gt;Array.prototype.map()&lt;/code&gt; to iterate over the object's keys and produce an array with key-value pairs.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;objectToPairs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;k&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [k, obj[k]]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;objectToPairs&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ ['a', 1], ['b', 2] ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-omit" class="anchor" aria-hidden="true" href="#omit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;omit&lt;/h3&gt;
&lt;p&gt;Omits the key-value pairs corresponding to the given keys from an object.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt;, &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.includes()&lt;/code&gt; to remove the provided keys.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to convert the filtered keys back to an object with the corresponding key-value pairs.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;omit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;arr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj)
    .&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;k&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(k))
    .&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((acc[key] &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[key]), acc), {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;omit&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; }, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { 'a': 1, 'c': 3 }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-omitby" class="anchor" aria-hidden="true" href="#omitby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;omitBy&lt;/h3&gt;
&lt;p&gt;Creates an object composed of the properties the given function returns falsy for. The function is invoked with two arguments: (value, key).&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; and &lt;code&gt;Array.prototype.filter()&lt;/code&gt;to remove the keys for which &lt;code&gt;fn&lt;/code&gt; returns a truthy value.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to convert the filtered keys back to an object with the corresponding key-value pairs.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;omitBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj)
    .&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;k&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;fn&lt;/span&gt;(obj[k], k))
    .&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((acc[key] &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[key]), acc), {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;omitBy&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; }, &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; x &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;number&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { b: '2' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-orderby" class="anchor" aria-hidden="true" href="#orderby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;orderBy&lt;/h3&gt;
&lt;p&gt;Returns a sorted array of objects ordered by properties and orders.&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;Array.prototype.sort()&lt;/code&gt;, &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; on the &lt;code&gt;props&lt;/code&gt; array with a default value of &lt;code&gt;0&lt;/code&gt;, use array destructuring to swap the properties position depending on the order passed.
If no &lt;code&gt;orders&lt;/code&gt; array is passed it sort by &lt;code&gt;'asc'&lt;/code&gt; by default.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;orderBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;props&lt;/span&gt;, &lt;span class="pl-smi"&gt;orders&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  [&lt;span class="pl-k"&gt;...&lt;/span&gt;arr].&lt;span class="pl-c1"&gt;sort&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;props&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;prop&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (acc &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
        &lt;span class="pl-k"&gt;const&lt;/span&gt; [&lt;span class="pl-c1"&gt;p1&lt;/span&gt;, &lt;span class="pl-c1"&gt;p2&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; orders &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; orders[i] &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;desc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; [b[prop], a[prop]] &lt;span class="pl-k"&gt;:&lt;/span&gt; [a[prop], b[prop]];
        acc &lt;span class="pl-k"&gt;=&lt;/span&gt; p1 &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; p2 &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; p1 &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; p2 &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
      }
      &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
    }, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;users&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [{ name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fred&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;48&lt;/span&gt; }, { name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;barney&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;36&lt;/span&gt; }, { name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fred&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, age&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;40&lt;/span&gt; }];
&lt;span class="pl-en"&gt;orderBy&lt;/span&gt;(users, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;age&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;asc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;desc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{name: 'barney', age: 36}, {name: 'fred', age: 48}, {name: 'fred', age: 40}]&lt;/span&gt;
&lt;span class="pl-en"&gt;orderBy&lt;/span&gt;(users, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;age&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{name: 'barney', age: 36}, {name: 'fred', age: 40}, {name: 'fred', age: 48}]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pick" class="anchor" aria-hidden="true" href="#pick"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pick&lt;/h3&gt;
&lt;p&gt;Picks the key-value pairs corresponding to the given keys from an object.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to convert the filtered/picked keys back to an object with the corresponding key-value pairs if the key exists in the object.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pick&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;arr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;arr&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;curr&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (curr &lt;span class="pl-k"&gt;in&lt;/span&gt; obj &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; (acc[curr] &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[curr]), acc), {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;pick&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; }, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { 'a': 1, 'c': 3 }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pickby" class="anchor" aria-hidden="true" href="#pickby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pickBy&lt;/h3&gt;
&lt;p&gt;Creates an object composed of the properties the given function returns truthy for. The function is invoked with two arguments: (value, key).&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; and &lt;code&gt;Array.prototype.filter()&lt;/code&gt;to remove the keys for which &lt;code&gt;fn&lt;/code&gt; returns a falsy value.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to convert the filtered keys back to an object with the corresponding key-value pairs.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pickBy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj)
    .&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;k&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(obj[k], k))
    .&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((acc[key] &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[key]), acc), {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;pickBy&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; }, &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; x &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;number&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { 'a': 1, 'c': 3 }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-renamekeys" class="anchor" aria-hidden="true" href="#renamekeys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;renameKeys&lt;/h3&gt;
&lt;p&gt;Replaces the names of multiple object keys with the values provided.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys()&lt;/code&gt; in combination with &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; and the spread operator (&lt;code&gt;...&lt;/code&gt;) to get the object's keys and rename them according to &lt;code&gt;keysMap&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;renameKeys&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;keysMap&lt;/span&gt;, &lt;span class="pl-smi"&gt;obj&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ({
      &lt;span class="pl-k"&gt;...&lt;/span&gt;acc,
      &lt;span class="pl-k"&gt;...&lt;/span&gt;{ [keysMap[key] &lt;span class="pl-k"&gt;||&lt;/span&gt; key]&lt;span class="pl-k"&gt;:&lt;/span&gt; obj[key] }
    }),
    {}
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Bobo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, job&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Front-End Master&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, shoeSize&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt; };
&lt;span class="pl-en"&gt;renameKeys&lt;/span&gt;({ name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;firstName&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, job&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;passion&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, obj); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { firstName: 'Bobo', passion: 'Front-End Master', shoeSize: 100 }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-shallowclone" class="anchor" aria-hidden="true" href="#shallowclone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;shallowClone&lt;/h3&gt;
&lt;p&gt;Creates a shallow clone of an object.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.assign()&lt;/code&gt; and an empty object (&lt;code&gt;{}&lt;/code&gt;) to create a shallow clone of the original.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;shallowClone&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;assign&lt;/span&gt;({}, obj);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, y&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; };
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;shallowClone&lt;/span&gt;(a); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a !== b&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-size" class="anchor" aria-hidden="true" href="#size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;size&lt;/h3&gt;
&lt;p&gt;Get size of arrays, objects or strings.&lt;/p&gt;
&lt;p&gt;Get type of &lt;code&gt;val&lt;/code&gt; (&lt;code&gt;array&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;).
Use &lt;code&gt;length&lt;/code&gt; property for arrays.
Use &lt;code&gt;length&lt;/code&gt; or &lt;code&gt;size&lt;/code&gt; value if available or number of keys for objects.
Use &lt;code&gt;size&lt;/code&gt; of a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob" rel="nofollow"&gt;&lt;code&gt;Blob&lt;/code&gt; object&lt;/a&gt; created from &lt;code&gt;val&lt;/code&gt; for strings.
Split strings into array of characters with &lt;code&gt;split('')&lt;/code&gt; and return its length.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;isArray&lt;/span&gt;(val)
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;
    &lt;span class="pl-k"&gt;:&lt;/span&gt; val &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-c1"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(val).&lt;span class="pl-c1"&gt;length&lt;/span&gt;
    &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;string&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Blob&lt;/span&gt;([val]).&lt;span class="pl-c1"&gt;size&lt;/span&gt;
    &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;size&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5&lt;/span&gt;
&lt;span class="pl-en"&gt;size&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;size&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;
&lt;span class="pl-en"&gt;size&lt;/span&gt;({ one&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, two&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, three&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-transform" class="anchor" aria-hidden="true" href="#transform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;transform&lt;/h3&gt;
&lt;p&gt;Applies a function against an accumulator and each key in the object (from left to right).&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; to iterate over each key in the object, &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to call the apply the specified function against the given accumulator.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;transform&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;, &lt;span class="pl-smi"&gt;acc&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;k&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(a, obj[k], k, obj), acc);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;transform&lt;/span&gt;(
  { a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, c&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; },
  (&lt;span class="pl-smi"&gt;r&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;k&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    (r[v] &lt;span class="pl-k"&gt;||&lt;/span&gt; (r[v] &lt;span class="pl-k"&gt;=&lt;/span&gt; [])).&lt;span class="pl-c1"&gt;push&lt;/span&gt;(k);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; r;
  },
  {}
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { '1': ['a', 'c'], '2': ['b'] }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-truthcheckcollection" class="anchor" aria-hidden="true" href="#truthcheckcollection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;truthCheckCollection&lt;/h3&gt;
&lt;p&gt;Checks if the predicate (second argument) is truthy on all elements of a collection (first argument).&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.every()&lt;/code&gt; to check if each passed object has the specified property and if it returns a truthy value.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;truthCheckCollection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;collection&lt;/span&gt;, &lt;span class="pl-smi"&gt;pre&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;collection&lt;/span&gt;.&lt;span class="pl-en"&gt;every&lt;/span&gt;(&lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; obj[pre]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;truthCheckCollection&lt;/span&gt;([{ user&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Tinky-Winky&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, sex&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;male&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, { user&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Dipsy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, sex&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;male&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sex&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unflattenobject-" class="anchor" aria-hidden="true" href="#unflattenobject-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unflattenObject &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Unflatten an object with the paths for keys.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Object.keys(obj)&lt;/code&gt; combined with &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to convert flattened path node to a leaf node.
If the value of a key contains a dot delimiter (&lt;code&gt;.&lt;/code&gt;), use &lt;code&gt;Array.prototype.split('.')&lt;/code&gt;, string transformations and &lt;code&gt;JSON.parse()&lt;/code&gt; to create an object, then &lt;code&gt;Object.assign()&lt;/code&gt; to create the leaf node.
Otherwise, add the appropriate key-value pair to the accumulator object.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;unflattenObject&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(obj).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;k&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;k&lt;/span&gt;.&lt;span class="pl-c1"&gt;indexOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;keys&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;k&lt;/span&gt;.&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
      &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-en"&gt;assign&lt;/span&gt;(
        acc,
        &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(
          &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
            &lt;span class="pl-smi"&gt;keys&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (i &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-smi"&gt;keys&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;"&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;v&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;":{&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;"&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;v&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;":&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
            obj[k] &lt;span class="pl-k"&gt;+&lt;/span&gt;
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-en"&gt;repeat&lt;/span&gt;(&lt;span class="pl-smi"&gt;keys&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;)
        )
      );
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; acc[k] &lt;span class="pl-k"&gt;=&lt;/span&gt; obj[k];
    &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
  }, {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;unflattenObject&lt;/span&gt;({ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a.b.c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, d&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { a: { b: { c: 1 } }, d: 1 }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content--string-1" class="anchor" aria-hidden="true" href="#-string-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="scroll" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png"&gt;📜&lt;/g-emoji&gt; String&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-bytesize" class="anchor" aria-hidden="true" href="#bytesize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;byteSize&lt;/h3&gt;
&lt;p&gt;Returns the length of a string in bytes.&lt;/p&gt;
&lt;p&gt;Convert a given string to a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob" rel="nofollow"&gt;&lt;code&gt;Blob&lt;/code&gt; Object&lt;/a&gt; and find its &lt;code&gt;size&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;byteSize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Blob&lt;/span&gt;([str]).&lt;span class="pl-c1"&gt;size&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;byteSize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;😀&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;
&lt;span class="pl-en"&gt;byteSize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello World&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-capitalize" class="anchor" aria-hidden="true" href="#capitalize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;capitalize&lt;/h3&gt;
&lt;p&gt;Capitalizes the first letter of a string.&lt;/p&gt;
&lt;p&gt;Use array destructuring and &lt;code&gt;String.prototype.toUpperCase()&lt;/code&gt; to capitalize first letter, &lt;code&gt;...rest&lt;/code&gt; to get array of characters after first letter and then &lt;code&gt;Array.prototype.join('')&lt;/code&gt; to make it a string again.
Omit the &lt;code&gt;lowerRest&lt;/code&gt; parameter to keep the rest of the string intact, or set it to &lt;code&gt;true&lt;/code&gt; to convert to lowercase.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;capitalize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ([&lt;span class="pl-smi"&gt;first&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;rest&lt;/span&gt;], &lt;span class="pl-smi"&gt;lowerRest&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;first&lt;/span&gt;.&lt;span class="pl-c1"&gt;toUpperCase&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; (lowerRest &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;rest&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;() &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;rest&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;capitalize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fooBar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'FooBar'&lt;/span&gt;
&lt;span class="pl-en"&gt;capitalize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fooBar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Foobar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-capitalizeeveryword" class="anchor" aria-hidden="true" href="#capitalizeeveryword"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;capitalizeEveryWord&lt;/h3&gt;
&lt;p&gt;Capitalizes the first letter of every word in a string.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.replace()&lt;/code&gt; to match the first character of each word and &lt;code&gt;String.prototype.toUpperCase()&lt;/code&gt; to capitalize it.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;capitalizeEveryWord&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;\b&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-smi"&gt;char&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;char&lt;/span&gt;.&lt;span class="pl-c1"&gt;toUpperCase&lt;/span&gt;());&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;capitalizeEveryWord&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello world!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Hello World!'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compactwhitespace" class="anchor" aria-hidden="true" href="#compactwhitespace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;compactWhitespace&lt;/h3&gt;
&lt;p&gt;Returns a string with whitespaces compacted.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.replace()&lt;/code&gt; with a regular expression to replace all occurrences of 2 or more whitespace characters with a single space.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;compactWhitespace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;\s&lt;/span&gt;&lt;span class="pl-k"&gt;{2,}&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;compactWhitespace&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Lorem    Ipsum&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Lorem Ipsum'&lt;/span&gt;
&lt;span class="pl-en"&gt;compactWhitespace&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Lorem &lt;span class="pl-cce"&gt;\n&lt;/span&gt; Ipsum&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Lorem Ipsum'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-csvtoarray" class="anchor" aria-hidden="true" href="#csvtoarray"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSVToArray&lt;/h3&gt;
&lt;p&gt;Converts a comma-separated values (CSV) string to a 2D array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; and &lt;code&gt;Array.prototype.indexOf('\n')&lt;/code&gt; to remove the first row (title row) if &lt;code&gt;omitFirstRow&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.
Use &lt;code&gt;String.prototype.split('\n')&lt;/code&gt; to create a string for each row, then &lt;code&gt;String.prototype.split(delimiter)&lt;/code&gt; to separate the values in each row.
Omit the second argument, &lt;code&gt;delimiter&lt;/code&gt;, to use a default delimiter of &lt;code&gt;,&lt;/code&gt;.
Omit the third argument, &lt;code&gt;omitFirstRow&lt;/code&gt;, to include the first row (title row) of the CSV string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;CSVToArray&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-smi"&gt;delimiter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;omitFirstRow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  data
    .&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(omitFirstRow &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-c1"&gt;indexOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-c1"&gt;split&lt;/span&gt;(delimiter));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;CSVToArray&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a,b&lt;span class="pl-cce"&gt;\n&lt;/span&gt;c,d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [['a','b'],['c','d']];&lt;/span&gt;
&lt;span class="pl-en"&gt;CSVToArray&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a;b&lt;span class="pl-cce"&gt;\n&lt;/span&gt;c;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [['a','b'],['c','d']];&lt;/span&gt;
&lt;span class="pl-en"&gt;CSVToArray&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;col1,col2&lt;span class="pl-cce"&gt;\n&lt;/span&gt;a,b&lt;span class="pl-cce"&gt;\n&lt;/span&gt;c,d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [['a','b'],['c','d']];&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-csvtojson-" class="anchor" aria-hidden="true" href="#csvtojson-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSVToJSON &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Converts a comma-separated values (CSV) string to a 2D array of objects.
The first row of the string is used as the title row.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; and &lt;code&gt;Array.prototype.indexOf('\n')&lt;/code&gt; and &lt;code&gt;String.prototype.split(delimiter)&lt;/code&gt; to separate the first row (title row) into values.
Use &lt;code&gt;String.prototype.split('\n')&lt;/code&gt; to create a string for each row, then &lt;code&gt;Array.prototype.map()&lt;/code&gt; and &lt;code&gt;String.prototype.split(delimiter)&lt;/code&gt; to separate the values in each row.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to create an object for each row's values, with the keys parsed from the title row.
Omit the second argument, &lt;code&gt;delimiter&lt;/code&gt;, to use a default delimiter of &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;CSVToJSON&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-smi"&gt;delimiter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;titles&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-c1"&gt;indexOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;split&lt;/span&gt;(delimiter);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; data
    .&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-c1"&gt;indexOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;values&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-c1"&gt;split&lt;/span&gt;(delimiter);
      &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;titles&lt;/span&gt;.&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;title&lt;/span&gt;, &lt;span class="pl-smi"&gt;index&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((obj[title] &lt;span class="pl-k"&gt;=&lt;/span&gt; values[index]), obj), {});
    });
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;CSVToJSON&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;col1,col2&lt;span class="pl-cce"&gt;\n&lt;/span&gt;a,b&lt;span class="pl-cce"&gt;\n&lt;/span&gt;c,d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{'col1': 'a', 'col2': 'b'}, {'col1': 'c', 'col2': 'd'}];&lt;/span&gt;
&lt;span class="pl-en"&gt;CSVToJSON&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;col1;col2&lt;span class="pl-cce"&gt;\n&lt;/span&gt;a;b&lt;span class="pl-cce"&gt;\n&lt;/span&gt;c;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{'col1': 'a', 'col2': 'b'}, {'col1': 'c', 'col2': 'd'}];&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-decapitalize" class="anchor" aria-hidden="true" href="#decapitalize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;decapitalize&lt;/h3&gt;
&lt;p&gt;Decapitalizes the first letter of a string.&lt;/p&gt;
&lt;p&gt;Use array destructuring and &lt;code&gt;String.toLowerCase()&lt;/code&gt; to decapitalize first letter, &lt;code&gt;...rest&lt;/code&gt; to get array of characters after first letter and then &lt;code&gt;Array.prototype.join('')&lt;/code&gt; to make it a string again.
Omit the &lt;code&gt;upperRest&lt;/code&gt; parameter to keep the rest of the string intact, or set it to &lt;code&gt;true&lt;/code&gt; to convert to uppercase.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;decapitalize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ([&lt;span class="pl-smi"&gt;first&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;rest&lt;/span&gt;], &lt;span class="pl-smi"&gt;upperRest&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;first&lt;/span&gt;.&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; (upperRest &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;rest&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;toUpperCase&lt;/span&gt;() &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;rest&lt;/span&gt;.&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;decapitalize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;FooBar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'fooBar'&lt;/span&gt;
&lt;span class="pl-en"&gt;decapitalize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;FooBar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'fOOBAR'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-escapehtml" class="anchor" aria-hidden="true" href="#escapehtml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;escapeHTML&lt;/h3&gt;
&lt;p&gt;Escapes a string for use in HTML.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.replace()&lt;/code&gt; with a regexp that matches the characters that need to be escaped, using a callback function to replace each character instance with its associated escaped character using a dictionary (object).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;escapeHTML&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(
&lt;span class="pl-sr"&gt;    &lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&amp;amp;&amp;lt;&amp;gt;'"]&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;tag&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      ({
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;amp;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;lt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;#39;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;"&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;quot;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      }[tag] &lt;span class="pl-k"&gt;||&lt;/span&gt; tag)
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;escapeHTML&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;a href="#"&amp;gt;Me &amp;amp; you&amp;lt;/a&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '&amp;amp;lt;a href=&amp;amp;quot;#&amp;amp;quot;&amp;amp;gt;Me &amp;amp;amp; you&amp;amp;lt;/a&amp;amp;gt;'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-escaperegexp" class="anchor" aria-hidden="true" href="#escaperegexp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;escapeRegExp&lt;/h3&gt;
&lt;p&gt;Escapes a string to use in a regular expression.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.replace()&lt;/code&gt; to escape special characters.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;escapeRegExp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;.&lt;/span&gt;*+?^${}()|[&lt;span class="pl-cce"&gt;\]\\&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;$&amp;amp;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;escapeRegExp&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(test)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; \\(test\\)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fromcamelcase" class="anchor" aria-hidden="true" href="#fromcamelcase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fromCamelCase&lt;/h3&gt;
&lt;p&gt;Converts a string from camelcase.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.replace()&lt;/code&gt; to remove underscores, hyphens, and spaces and convert words to camelcase.
Omit the second argument to use a default &lt;code&gt;separator&lt;/code&gt; of &lt;code&gt;_&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fromCamelCase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;str&lt;/span&gt;, &lt;span class="pl-smi"&gt;separator&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;_&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  str
    .&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;(&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;]&lt;/span&gt;)(&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;)&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;$1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; separator &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;$2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;(&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;)(&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;][&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;)&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;$1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; separator &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;$2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;fromCamelCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;someDatabaseFieldName&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'some database field name'&lt;/span&gt;
&lt;span class="pl-en"&gt;fromCamelCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;someLabelThatNeedsToBeCamelized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'some-label-that-needs-to-be-camelized'&lt;/span&gt;
&lt;span class="pl-en"&gt;fromCamelCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;someJavascriptProperty&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;_&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'some_javascript_property'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-indentstring" class="anchor" aria-hidden="true" href="#indentstring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;indentString&lt;/h3&gt;
&lt;p&gt;Indents each line in the provided string.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.replace&lt;/code&gt; and a regular expression to add the character specified by &lt;code&gt;indent&lt;/code&gt; &lt;code&gt;count&lt;/code&gt; times at the start of each line.
Omit the third parameter, &lt;code&gt;indent&lt;/code&gt;, to use a default indentation character of &lt;code&gt;' '&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;indentString&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;str&lt;/span&gt;, &lt;span class="pl-smi"&gt;count&lt;/span&gt;, &lt;span class="pl-smi"&gt;indent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;^&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;gm&lt;/span&gt;, &lt;span class="pl-smi"&gt;indent&lt;/span&gt;.&lt;span class="pl-en"&gt;repeat&lt;/span&gt;(count));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;indentString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Lorem&lt;span class="pl-cce"&gt;\n&lt;/span&gt;Ipsum&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '  Lorem\n  Ipsum'&lt;/span&gt;
&lt;span class="pl-en"&gt;indentString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Lorem&lt;span class="pl-cce"&gt;\n&lt;/span&gt;Ipsum&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;_&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '__Lorem\n__Ipsum'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isabsoluteurl" class="anchor" aria-hidden="true" href="#isabsoluteurl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isAbsoluteURL&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the given string is an absolute URL, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use a regular expression to test if the string is an absolute URL.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isAbsoluteURL&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="pl-sr"&gt; &lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;^&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;][&lt;span class="pl-c1"&gt;a-z0-9&lt;/span&gt;+&lt;span class="pl-c1"&gt;.&lt;/span&gt;-]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;:&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;test&lt;/span&gt;(str);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isAbsoluteURL&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://google.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isAbsoluteURL&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ftp://www.myserver.net&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isAbsoluteURL&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo/bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isanagram" class="anchor" aria-hidden="true" href="#isanagram"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isAnagram&lt;/h3&gt;
&lt;p&gt;Checks if a string is an anagram of another string (case-insensitive, ignores spaces, punctuation and special characters).&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.toLowerCase()&lt;/code&gt;, &lt;code&gt;String.prototype.replace()&lt;/code&gt; with an appropriate regular expression to remove unnecessary characters, &lt;code&gt;String.prototype.split('')&lt;/code&gt;, &lt;code&gt;Array.prototype.sort()&lt;/code&gt; and &lt;code&gt;Array.prototype.join('')&lt;/code&gt; on both strings to normalize them, then check if their normalized forms are equal.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isAnagram&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;str1&lt;/span&gt;, &lt;span class="pl-smi"&gt;str2&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;normalize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    str
      .&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;()
      .&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-k"&gt;^&lt;/span&gt;&lt;span class="pl-c1"&gt;a-z0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;gi&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
      .&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
      .&lt;span class="pl-c1"&gt;sort&lt;/span&gt;()
      .&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;normalize&lt;/span&gt;(str1) &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-en"&gt;normalize&lt;/span&gt;(str2);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isAnagram&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;iceman&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cinema&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-islowercase" class="anchor" aria-hidden="true" href="#islowercase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isLowerCase&lt;/h3&gt;
&lt;p&gt;Checks if a string is lower case.&lt;/p&gt;
&lt;p&gt;Convert the given string to lower case, using &lt;code&gt;String.toLowerCase()&lt;/code&gt; and compare it to the original.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isLowerCase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; str &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isLowerCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;abc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isLowerCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a3@$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isLowerCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Ab4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isuppercase" class="anchor" aria-hidden="true" href="#isuppercase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isUpperCase&lt;/h3&gt;
&lt;p&gt;Checks if a string is upper case.&lt;/p&gt;
&lt;p&gt;Convert the given string to upper case, using &lt;code&gt;String.prototype.toUpperCase()&lt;/code&gt; and compare it to the original.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isUpperCase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; str &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;toUpperCase&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isUpperCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ABC&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isUpperCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A3@$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isUpperCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;aB4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mapstring" class="anchor" aria-hidden="true" href="#mapstring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mapString&lt;/h3&gt;
&lt;p&gt;Creates a new string with the results of calling a provided function on every character in the calling string.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.split('')&lt;/code&gt; and &lt;code&gt;Array.prototype.map()&lt;/code&gt; to call the provided function, &lt;code&gt;fn&lt;/code&gt;, for each character in &lt;code&gt;str&lt;/code&gt;.
Use &lt;code&gt;Array.prototype.join('')&lt;/code&gt; to recombine the array of characters into a string.
The callback function, &lt;code&gt;fn&lt;/code&gt;, takes three arguments (the current character, the index of the current character and the string &lt;code&gt;mapString&lt;/code&gt; was called upon).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mapString&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;str&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  str
    .&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;c&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(c, i, str))
    .&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;mapString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lorem ipsum&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-c1"&gt;toUpperCase&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'LOREM IPSUM'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mask" class="anchor" aria-hidden="true" href="#mask"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mask&lt;/h3&gt;
&lt;p&gt;Replaces all but the last &lt;code&gt;num&lt;/code&gt; of characters with the specified mask character.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.slice()&lt;/code&gt; to grab the portion of the characters that will remain unmasked and use &lt;code&gt;String.padStart()&lt;/code&gt; to fill the beginning of the string with the mask character up to the original length.
Omit the second argument, &lt;code&gt;num&lt;/code&gt;, to keep a default of &lt;code&gt;4&lt;/code&gt; characters unmasked. If &lt;code&gt;num&lt;/code&gt; is negative, the unmasked characters will be at the start of the string.
Omit the third argument, &lt;code&gt;mask&lt;/code&gt;, to use a default character of &lt;code&gt;'*'&lt;/code&gt; for the mask.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mask&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;cc&lt;/span&gt;, &lt;span class="pl-smi"&gt;num&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-smi"&gt;mask&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;cc&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-k"&gt;-&lt;/span&gt;num).&lt;span class="pl-en"&gt;padStart&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;cc&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt;, mask);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;mask&lt;/span&gt;(&lt;span class="pl-c1"&gt;1234567890&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '******7890'&lt;/span&gt;
&lt;span class="pl-en"&gt;mask&lt;/span&gt;(&lt;span class="pl-c1"&gt;1234567890&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '*******890'&lt;/span&gt;
&lt;span class="pl-en"&gt;mask&lt;/span&gt;(&lt;span class="pl-c1"&gt;1234567890&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '$$$$567890'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pad" class="anchor" aria-hidden="true" href="#pad"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pad&lt;/h3&gt;
&lt;p&gt;Pads a string on both sides with the specified character, if it's shorter than the specified length.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.padStart()&lt;/code&gt; and &lt;code&gt;String.padEnd()&lt;/code&gt; to pad both sides of the given string.
Omit the third argument, &lt;code&gt;char&lt;/code&gt;, to use the whitespace character as the default padding character.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pad&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;str&lt;/span&gt;, &lt;span class="pl-smi"&gt;length&lt;/span&gt;, &lt;span class="pl-smi"&gt;char&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-en"&gt;padStart&lt;/span&gt;((&lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; length) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, char).&lt;span class="pl-en"&gt;padEnd&lt;/span&gt;(length, char);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;pad&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cat&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '  cat   '&lt;/span&gt;
&lt;span class="pl-en"&gt;pad&lt;/span&gt;(&lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;), &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '004200'&lt;/span&gt;
&lt;span class="pl-en"&gt;pad&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foobar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'foobar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-palindrome" class="anchor" aria-hidden="true" href="#palindrome"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;palindrome&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the given string is a palindrome, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Convert the string to &lt;code&gt;String.prototype.toLowerCase()&lt;/code&gt; and use &lt;code&gt;String.prototype.replace()&lt;/code&gt; to remove non-alphanumeric characters from it.
Then, use the spread operator (&lt;code&gt;...&lt;/code&gt;) to split the string into individual characters, &lt;code&gt;Array.prototype.reverse()&lt;/code&gt;, &lt;code&gt;String.prototype.join('')&lt;/code&gt; and compare it to the original, unreversed string, after converting it to &lt;code&gt;String.prototype.toLowerCase()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;palindrome&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;().&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;\W&lt;/span&gt;_]&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; s &lt;span class="pl-k"&gt;===&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;s].&lt;span class="pl-c1"&gt;reverse&lt;/span&gt;().&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;palindrome&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;taco cat&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pluralize" class="anchor" aria-hidden="true" href="#pluralize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pluralize&lt;/h3&gt;
&lt;p&gt;Returns the singular or plural form of the word based on the input number. If the first argument is an &lt;code&gt;object&lt;/code&gt;, it will use a closure by returning a function that can auto-pluralize words that don't simply end in &lt;code&gt;s&lt;/code&gt; if the supplied dictionary contains the word.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;num&lt;/code&gt; is either &lt;code&gt;-1&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;, return the singular form of the word. If &lt;code&gt;num&lt;/code&gt; is any other number, return the plural form. Omit the third argument to use the default of the singular word + &lt;code&gt;s&lt;/code&gt;, or supply a custom pluralized word when necessary. If the first argument is an &lt;code&gt;object&lt;/code&gt;, utilize a closure by returning a function which can use the supplied dictionary to resolve the correct plural form of the word.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;pluralize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;/span&gt;, &lt;span class="pl-smi"&gt;plural&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;word&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;_pluralize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;num&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;/span&gt;, &lt;span class="pl-smi"&gt;plural&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;word&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;].&lt;span class="pl-en"&gt;includes&lt;/span&gt;(&lt;span class="pl-c1"&gt;Number&lt;/span&gt;(num)) &lt;span class="pl-k"&gt;?&lt;/span&gt; word &lt;span class="pl-k"&gt;:&lt;/span&gt; plural;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; (&lt;span class="pl-smi"&gt;num&lt;/span&gt;, &lt;span class="pl-smi"&gt;word&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;_pluralize&lt;/span&gt;(num, word, val[word]);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;_pluralize&lt;/span&gt;(val, word, plural);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;pluralize&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'apples'&lt;/span&gt;
&lt;span class="pl-en"&gt;pluralize&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'apple'&lt;/span&gt;
&lt;span class="pl-en"&gt;pluralize&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'apples'&lt;/span&gt;
&lt;span class="pl-en"&gt;pluralize&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;person&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;people&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'people'&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;PLURALS&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  person&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;people&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  radius&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;radii&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
};
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;autoPluralize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;pluralize&lt;/span&gt;(&lt;span class="pl-c1"&gt;PLURALS&lt;/span&gt;);
&lt;span class="pl-en"&gt;autoPluralize&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;person&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'people'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-removenonascii" class="anchor" aria-hidden="true" href="#removenonascii"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;removeNonASCII&lt;/h3&gt;
&lt;p&gt;Removes non-printable ASCII characters.&lt;/p&gt;
&lt;p&gt;Use a regular expression to remove non-printable ASCII characters.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;removeNonASCII&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-k"&gt;^&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-c1"&gt;\x20&lt;/span&gt;-&lt;span class="pl-c1"&gt;\x7E&lt;/span&gt;&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;removeNonASCII&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;äÄçÇéÉêlorem-ipsumöÖÐþúÚ&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'lorem-ipsum'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reversestring" class="anchor" aria-hidden="true" href="#reversestring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;reverseString&lt;/h3&gt;
&lt;p&gt;Reverses a string.&lt;/p&gt;
&lt;p&gt;Use the spread operator (&lt;code&gt;...&lt;/code&gt;) and &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; to reverse the order of the characters in the string.
Combine characters to get a string using &lt;code&gt;String.prototype.join('')&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;reverseString&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;str].&lt;span class="pl-c1"&gt;reverse&lt;/span&gt;().&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;reverseString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foobar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'raboof'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sortcharactersinstring" class="anchor" aria-hidden="true" href="#sortcharactersinstring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sortCharactersInString&lt;/h3&gt;
&lt;p&gt;Alphabetically sorts the characters in a string.&lt;/p&gt;
&lt;p&gt;Use the spread operator (&lt;code&gt;...&lt;/code&gt;), &lt;code&gt;Array.prototype.sort()&lt;/code&gt; and  &lt;code&gt;String.localeCompare()&lt;/code&gt; to sort the characters in &lt;code&gt;str&lt;/code&gt;, recombine using &lt;code&gt;String.prototype.join('')&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;sortCharactersInString&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;str].&lt;span class="pl-c1"&gt;sort&lt;/span&gt;((&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;.&lt;span class="pl-en"&gt;localeCompare&lt;/span&gt;(b)).&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sortCharactersInString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cabbage&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'aabbceg'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-splitlines" class="anchor" aria-hidden="true" href="#splitlines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;splitLines&lt;/h3&gt;
&lt;p&gt;Splits a multiline string into an array of lines.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.split()&lt;/code&gt; and a regular expression to match line breaks and create an array.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;splitLines&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;\r&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;span class="pl-c1"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;splitLines&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;This&lt;span class="pl-cce"&gt;\n&lt;/span&gt;is a&lt;span class="pl-cce"&gt;\n&lt;/span&gt;multiline&lt;span class="pl-cce"&gt;\n&lt;/span&gt;string.&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['This', 'is a', 'multiline', 'string.' , '']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stringpermutations-" class="anchor" aria-hidden="true" href="#stringpermutations-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;stringPermutations &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Generates all permutations of a string (contains duplicates).&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;WARNING&lt;/strong&gt;: This function's execution time increases exponentially with each character. Anything more than 8 to 10 characters will cause your browser to hang as it tries to solve all the different combinations.&lt;/p&gt;
&lt;p&gt;Use recursion.
For each letter in the given string, create all the partial permutations for the rest of its letters.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to combine the letter with each partial permutation, then &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to combine all permutations in one array.
Base cases are for string &lt;code&gt;length&lt;/code&gt; equal to &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;stringPermutations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; [str, str[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;+&lt;/span&gt; str[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]] &lt;span class="pl-k"&gt;:&lt;/span&gt; [str];
  &lt;span class="pl-k"&gt;return&lt;/span&gt; str
    .&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
      (&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;letter&lt;/span&gt;, &lt;span class="pl-smi"&gt;i&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;acc&lt;/span&gt;.&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(&lt;span class="pl-en"&gt;stringPermutations&lt;/span&gt;(&lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, i) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(i &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)).&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; letter &lt;span class="pl-k"&gt;+&lt;/span&gt; val)),
      []
    );
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;stringPermutations&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;abc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['abc','acb','bac','bca','cab','cba']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-striphtmltags" class="anchor" aria-hidden="true" href="#striphtmltags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;stripHTMLTags&lt;/h3&gt;
&lt;p&gt;Removes HTML/XML tags from string.&lt;/p&gt;
&lt;p&gt;Use a regular expression to remove HTML/XML tags from a string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;stripHTMLTags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-k"&gt;^&lt;/span&gt;&amp;gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;stripHTMLTags&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;lorem&amp;lt;/em&amp;gt; &amp;lt;strong&amp;gt;ipsum&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'lorem ipsum'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tocamelcase" class="anchor" aria-hidden="true" href="#tocamelcase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;toCamelCase&lt;/h3&gt;
&lt;p&gt;Converts a string to camelcase.&lt;/p&gt;
&lt;p&gt;Break the string into words and combine them capitalizing the first letter of each word, using a regexp.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;toCamelCase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; s &lt;span class="pl-k"&gt;=&lt;/span&gt;
    str &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    str
      .&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;{2,}&lt;/span&gt;(?=&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;][&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-k"&gt;\b&lt;/span&gt;)&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;)
      .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;toUpperCase&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;())
      .&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;toCamelCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some_database_field_name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'someDatabaseFieldName'&lt;/span&gt;
&lt;span class="pl-en"&gt;toCamelCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Some label that needs to be camelized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'someLabelThatNeedsToBeCamelized'&lt;/span&gt;
&lt;span class="pl-en"&gt;toCamelCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some-javascript-property&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'someJavascriptProperty'&lt;/span&gt;
&lt;span class="pl-en"&gt;toCamelCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some-mixed_string with spaces_underscores-and-hyphens&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'someMixedStringWithSpacesUnderscoresAndHyphens'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tokebabcase" class="anchor" aria-hidden="true" href="#tokebabcase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;toKebabCase&lt;/h3&gt;
&lt;p&gt;Converts a string to kebab case.&lt;/p&gt;
&lt;p&gt;Break the string into words and combine them adding &lt;code&gt;-&lt;/code&gt; as a separator, using a regexp.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;toKebabCase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  str &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  str
    .&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;{2,}&lt;/span&gt;(?=&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;][&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-k"&gt;\b&lt;/span&gt;)&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;())
    .&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;toKebabCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;camelCase&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'camel-case'&lt;/span&gt;
&lt;span class="pl-en"&gt;toKebabCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some text&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'some-text'&lt;/span&gt;
&lt;span class="pl-en"&gt;toKebabCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some-mixed_string With spaces_underscores-and-hyphens&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'some-mixed-string-with-spaces-underscores-and-hyphens'&lt;/span&gt;
&lt;span class="pl-en"&gt;toKebabCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;AllThe-small Things&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "all-the-small-things"&lt;/span&gt;
&lt;span class="pl-en"&gt;toKebabCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;IAmListeningToFMWhileLoadingDifferentURLOnMyBrowserAndAlsoEditingSomeXMLAndHTML&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "i-am-listening-to-fm-while-loading-different-url-on-my-browser-and-also-editing-xml-and-html"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tosnakecase" class="anchor" aria-hidden="true" href="#tosnakecase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;toSnakeCase&lt;/h3&gt;
&lt;p&gt;Converts a string to snake case.&lt;/p&gt;
&lt;p&gt;Break the string into words and combine them adding &lt;code&gt;_&lt;/code&gt; as a separator, using a regexp.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;toSnakeCase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  str &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  str
    .&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;{2,}&lt;/span&gt;(?=&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;][&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-k"&gt;\b&lt;/span&gt;)&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;())
    .&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;_&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;toSnakeCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;camelCase&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'camel_case'&lt;/span&gt;
&lt;span class="pl-en"&gt;toSnakeCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some text&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'some_text'&lt;/span&gt;
&lt;span class="pl-en"&gt;toSnakeCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some-mixed_string With spaces_underscores-and-hyphens&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'some_mixed_string_with_spaces_underscores_and_hyphens'&lt;/span&gt;
&lt;span class="pl-en"&gt;toSnakeCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;AllThe-small Things&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "all_the_smal_things"&lt;/span&gt;
&lt;span class="pl-en"&gt;toSnakeCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;IAmListeningToFMWhileLoadingDifferentURLOnMyBrowserAndAlsoEditingSomeXMLAndHTML&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "i_am_listening_to_fm_while_loading_different_url_on_my_browser_and_also_editing_some_xml_and_html"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-totitlecase" class="anchor" aria-hidden="true" href="#totitlecase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;toTitleCase&lt;/h3&gt;
&lt;p&gt;Converts a string to title case.&lt;/p&gt;
&lt;p&gt;Break the string into words, using a regexp, and combine them capitalizing the first letter of each word and adding a whitespace between them.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;toTitleCase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  str
    .&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;{2,}&lt;/span&gt;(?=&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;][&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-k"&gt;\b&lt;/span&gt;)&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;a-z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;A-Z&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-c1"&gt;0-9&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;charAt&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;).&lt;span class="pl-c1"&gt;toUpperCase&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;))
    .&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;toTitleCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some_database_field_name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Some Database Field Name'&lt;/span&gt;
&lt;span class="pl-en"&gt;toTitleCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Some label that needs to be title-cased&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Some Label That Needs To Be Title Cased'&lt;/span&gt;
&lt;span class="pl-en"&gt;toTitleCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some-package-name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Some Package Name'&lt;/span&gt;
&lt;span class="pl-en"&gt;toTitleCase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some-mixed_string with spaces_underscores-and-hyphens&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Some Mixed String With Spaces Underscores And Hyphens'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-truncatestring" class="anchor" aria-hidden="true" href="#truncatestring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;truncateString&lt;/h3&gt;
&lt;p&gt;Truncates a string up to a specified length.&lt;/p&gt;
&lt;p&gt;Determine if the string's &lt;code&gt;length&lt;/code&gt; is greater than &lt;code&gt;num&lt;/code&gt;.
Return the string truncated to the desired length, with &lt;code&gt;'...'&lt;/code&gt; appended to the end or the original string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;truncateString&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;str&lt;/span&gt;, &lt;span class="pl-smi"&gt;num&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; num &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, num &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; num &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; num) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; str;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;truncateString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;boomerang&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'boom...'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unescapehtml" class="anchor" aria-hidden="true" href="#unescapehtml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unescapeHTML&lt;/h3&gt;
&lt;p&gt;Unescapes escaped HTML characters.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.replace()&lt;/code&gt; with a regex that matches the characters that need to be unescaped, using a callback function to replace each escaped character instance with its associated unescaped character using a dictionary (object).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;unescapeHTML&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(
&lt;span class="pl-sr"&gt;    &lt;span class="pl-pds"&gt;/&lt;/span&gt;&amp;amp;amp;&lt;span class="pl-k"&gt;|&lt;/span&gt;&amp;amp;lt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&amp;amp;gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&amp;amp;#39;&lt;span class="pl-k"&gt;|&lt;/span&gt;&amp;amp;quot;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;tag&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      ({
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;amp;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;lt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;#39;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;quot;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;"&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      }[tag] &lt;span class="pl-k"&gt;||&lt;/span&gt; tag)
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;unescapeHTML&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;lt;a href=&amp;amp;quot;#&amp;amp;quot;&amp;amp;gt;Me &amp;amp;amp; you&amp;amp;lt;/a&amp;amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '&amp;lt;a href="#"&amp;gt;Me &amp;amp; you&amp;lt;/a&amp;gt;'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-urljoin-" class="anchor" aria-hidden="true" href="#urljoin-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;URLJoin &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Joins all given URL segments together, then normalizes the resulting URL.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.join('/')&lt;/code&gt; to combine URL segments, then a series of &lt;code&gt;String.prototype.replace()&lt;/code&gt; calls with various regexps to normalize the resulting URL (remove double slashes, add proper slashes for protocol, remove slashes before parameters, combine parameters with &lt;code&gt;'&amp;amp;'&lt;/code&gt; and normalize first parameter delimiter).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;URLJoin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  args
    .&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-cce"&gt;\/&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;^&lt;/span&gt;(&lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;):&lt;span class="pl-cce"&gt;\/&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;$1://&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;^&lt;/span&gt;file:&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;file:/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-cce"&gt;\/&lt;/span&gt;(&lt;span class="pl-cce"&gt;\?&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&amp;amp;&lt;span class="pl-k"&gt;|&lt;/span&gt;#&lt;span class="pl-c1"&gt;[&lt;span class="pl-k"&gt;^&lt;/span&gt;!]&lt;/span&gt;)&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;$1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-cce"&gt;\?&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;?&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;URLJoin&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://www.google.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/b/cd&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;?foo=123&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;?bar=foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'http://www.google.com/a/b/cd?foo=123&amp;amp;bar=foo'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-words" class="anchor" aria-hidden="true" href="#words"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;words&lt;/h3&gt;
&lt;p&gt;Converts a given string into an array of words.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.split()&lt;/code&gt; with a supplied pattern (defaults to non-alpha as a regexp) to convert to an array of strings. Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; to remove any empty strings.
Omit the second argument to use the default regexp.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;words&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;str&lt;/span&gt;, &lt;span class="pl-smi"&gt;pattern&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-sr"&gt; &lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;[&lt;span class="pl-k"&gt;^&lt;/span&gt;&lt;span class="pl-c1"&gt;a-zA-Z&lt;/span&gt;-]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt;.&lt;span class="pl-c1"&gt;split&lt;/span&gt;(pattern).&lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;words&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;I love javaScript!!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["I", "love", "javaScript"]&lt;/span&gt;
&lt;span class="pl-en"&gt;words&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python, javaScript &amp;amp; coffee&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["python", "javaScript", "coffee"]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content--type-1" class="anchor" aria-hidden="true" href="#-type-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="page_with_curl" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c3.png"&gt;📃&lt;/g-emoji&gt; Type&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-gettype" class="anchor" aria-hidden="true" href="#gettype"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;getType&lt;/h3&gt;
&lt;p&gt;Returns the native type of a value.&lt;/p&gt;
&lt;p&gt;Returns lowercased constructor name of value, &lt;code&gt;"undefined"&lt;/code&gt; or &lt;code&gt;"null"&lt;/code&gt; if value is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;getType&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  v &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;undefined&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; v &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;null&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-c1"&gt;constructor&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt;.&lt;span class="pl-c1"&gt;toLowerCase&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;getType&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'set'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-is" class="anchor" aria-hidden="true" href="#is"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;is&lt;/h3&gt;
&lt;p&gt;Checks if the provided value is of the specified type.&lt;/p&gt;
&lt;p&gt;Ensure the value is not &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; using &lt;code&gt;Array.prototype.includes()&lt;/code&gt;, and compare the &lt;code&gt;constructor&lt;/code&gt; property on the value with &lt;code&gt;type&lt;/code&gt; to check if the provided value is of the specified &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;is&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;type&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;[, &lt;span class="pl-c1"&gt;null&lt;/span&gt;].&lt;span class="pl-en"&gt;includes&lt;/span&gt;(val) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-c1"&gt;constructor&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; type;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;Array&lt;/span&gt;, [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;ArrayBuffer&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ArrayBuffer&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;Map&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;RegExp&lt;/span&gt;,&lt;span class="pl-sr"&gt; &lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;Set&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;WeakMap&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WeakMap&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;WeakSet&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WeakSet&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;String&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;Number&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;Number&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Number&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;is&lt;/span&gt;(&lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Boolean&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isarraylike" class="anchor" aria-hidden="true" href="#isarraylike"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isArrayLike&lt;/h3&gt;
&lt;p&gt;Checks if the provided argument is array-like (i.e. is iterable).&lt;/p&gt;
&lt;p&gt;Check if the provided argument is not &lt;code&gt;null&lt;/code&gt; and that its &lt;code&gt;Symbol.iterator&lt;/code&gt; property is a function.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isArrayLike&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; obj &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; obj[&lt;span class="pl-c1"&gt;Symbol&lt;/span&gt;.&lt;span class="pl-smi"&gt;iterator&lt;/span&gt;] &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isArrayLike&lt;/span&gt;(&lt;span class="pl-c1"&gt;document&lt;/span&gt;.&lt;span class="pl-c1"&gt;querySelectorAll&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.className&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isArrayLike&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;abc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isArrayLike&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isboolean" class="anchor" aria-hidden="true" href="#isboolean"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isBoolean&lt;/h3&gt;
&lt;p&gt;Checks if the given argument is a native boolean element.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;typeof&lt;/code&gt; to check if a value is classified as a boolean primitive.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isBoolean&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;boolean&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isBoolean&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;isBoolean&lt;/span&gt;(&lt;span class="pl-c1"&gt;false&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isempty" class="anchor" aria-hidden="true" href="#isempty"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isEmpty&lt;/h3&gt;
&lt;p&gt;Returns true if the a value is an empty object, collection, has no enumerable properties or is any type that is not considered a collection.&lt;/p&gt;
&lt;p&gt;Check if the provided value is &lt;code&gt;null&lt;/code&gt; or if its &lt;code&gt;length&lt;/code&gt; is equal to &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isEmpty&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;(&lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;keys&lt;/span&gt;(val) &lt;span class="pl-k"&gt;||&lt;/span&gt; val).&lt;span class="pl-c1"&gt;length&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isEmpty&lt;/span&gt;([]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isEmpty&lt;/span&gt;({}); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isEmpty&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isEmpty&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;isEmpty&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;isEmpty&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;isEmpty&lt;/span&gt;(&lt;span class="pl-c1"&gt;123&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true - type is not considered a collection&lt;/span&gt;
&lt;span class="pl-en"&gt;isEmpty&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true - type is not considered a collection&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isfunction" class="anchor" aria-hidden="true" href="#isfunction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isFunction&lt;/h3&gt;
&lt;p&gt;Checks if the given argument is a function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;typeof&lt;/code&gt; to check if a value is classified as a function primitive.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isFunction&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;isFunction&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isnil" class="anchor" aria-hidden="true" href="#isnil"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isNil&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the specified value is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use the strict equality operator to check if the value and of &lt;code&gt;val&lt;/code&gt; are equal to &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isNil&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isNil&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isNil&lt;/span&gt;(&lt;span class="pl-c1"&gt;undefined&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isnull" class="anchor" aria-hidden="true" href="#isnull"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isNull&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the specified value is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use the strict equality operator to check if the value and of &lt;code&gt;val&lt;/code&gt; are equal to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isNull&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isNull&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isnumber" class="anchor" aria-hidden="true" href="#isnumber"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isNumber&lt;/h3&gt;
&lt;p&gt;Checks if the given argument is a number.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;typeof&lt;/code&gt; to check if a value is classified as a number primitive.
To safeguard against &lt;code&gt;NaN&lt;/code&gt;, check if &lt;code&gt;val === val&lt;/code&gt; (as &lt;code&gt;NaN&lt;/code&gt; has a &lt;code&gt;typeof&lt;/code&gt; equal to &lt;code&gt;number&lt;/code&gt; and is the only value not equal to itself).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isNumber&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;number&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; val;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isNumber&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isNumber&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;isNumber&lt;/span&gt;(&lt;span class="pl-c1"&gt;NaN&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isobject" class="anchor" aria-hidden="true" href="#isobject"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isObject&lt;/h3&gt;
&lt;p&gt;Returns a boolean determining if the passed value is an object or not.&lt;/p&gt;
&lt;p&gt;Uses the  &lt;code&gt;Object&lt;/code&gt; constructor to create an object wrapper for the given value.
If the value is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, create and return an empty object. Οtherwise, return an object of a type that corresponds to the given value.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isObject&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; obj &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;(obj);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isObject&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isObject&lt;/span&gt;([]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isObject&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isObject&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isObject&lt;/span&gt;({}); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isObject&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isobjectlike" class="anchor" aria-hidden="true" href="#isobjectlike"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isObjectLike&lt;/h3&gt;
&lt;p&gt;Checks if a value is object-like.&lt;/p&gt;
&lt;p&gt;Check if the provided value is not &lt;code&gt;null&lt;/code&gt; and its &lt;code&gt;typeof&lt;/code&gt; is equal to &lt;code&gt;'object'&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isObjectLike&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isObjectLike&lt;/span&gt;({}); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isObjectLike&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isObjectLike&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;isObjectLike&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isplainobject" class="anchor" aria-hidden="true" href="#isplainobject"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isPlainObject&lt;/h3&gt;
&lt;p&gt;Checks if the provided value is an object created by the Object constructor.&lt;/p&gt;
&lt;p&gt;Check if the provided value is truthy, use &lt;code&gt;typeof&lt;/code&gt; to check if it is an object and &lt;code&gt;Object.constructor&lt;/code&gt; to make sure the constructor is equal to &lt;code&gt;Object&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isPlainObject&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!!&lt;/span&gt;val &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-c1"&gt;constructor&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isPlainObject&lt;/span&gt;({ a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isPlainObject&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isprimitive" class="anchor" aria-hidden="true" href="#isprimitive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isPrimitive&lt;/h3&gt;
&lt;p&gt;Returns a boolean determining if the passed value is primitive or not.&lt;/p&gt;
&lt;p&gt;Create an object from &lt;code&gt;val&lt;/code&gt; and compare it with &lt;code&gt;val&lt;/code&gt; to determine if the passed value is primitive (i.e. not equal to the created object).&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isPrimitive&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;(val) &lt;span class="pl-k"&gt;!==&lt;/span&gt; val;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isPrimitive&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isPrimitive&lt;/span&gt;(&lt;span class="pl-c1"&gt;50&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isPrimitive&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isPrimitive&lt;/span&gt;(&lt;span class="pl-c1"&gt;false&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isPrimitive&lt;/span&gt;(&lt;span class="pl-c1"&gt;Symbol&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isPrimitive&lt;/span&gt;([]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ispromiselike" class="anchor" aria-hidden="true" href="#ispromiselike"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isPromiseLike&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if an object looks like a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" rel="nofollow"&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Check if the object is not &lt;code&gt;null&lt;/code&gt;, its &lt;code&gt;typeof&lt;/code&gt; matches either &lt;code&gt;object&lt;/code&gt; or &lt;code&gt;function&lt;/code&gt; and if it has a &lt;code&gt;.then&lt;/code&gt; property, which is also a &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isPromiseLike&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  obj &lt;span class="pl-k"&gt;!==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  (&lt;span class="pl-k"&gt;typeof&lt;/span&gt; obj &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;object&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; obj &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-smi"&gt;then&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isPromiseLike&lt;/span&gt;({
  &lt;span class="pl-en"&gt;then&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  }
}); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isPromiseLike&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;isPromiseLike&lt;/span&gt;({}); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isstring" class="anchor" aria-hidden="true" href="#isstring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isString&lt;/h3&gt;
&lt;p&gt;Checks if the given argument is a string. Only works for string primitives.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;typeof&lt;/code&gt; to check if a value is classified as a string primitive.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isString&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;string&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issymbol" class="anchor" aria-hidden="true" href="#issymbol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isSymbol&lt;/h3&gt;
&lt;p&gt;Checks if the given argument is a symbol.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;typeof&lt;/code&gt; to check if a value is classified as a symbol primitive.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isSymbol&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;symbol&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isSymbol&lt;/span&gt;(&lt;span class="pl-c1"&gt;Symbol&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isundefined" class="anchor" aria-hidden="true" href="#isundefined"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isUndefined&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the specified value is &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use the strict equality operator to check if the value and of &lt;code&gt;val&lt;/code&gt; are equal to &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isUndefined&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isUndefined&lt;/span&gt;(&lt;span class="pl-c1"&gt;undefined&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isvalidjson" class="anchor" aria-hidden="true" href="#isvalidjson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isValidJSON&lt;/h3&gt;
&lt;p&gt;Checks if the provided string is a valid JSON.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;JSON.parse()&lt;/code&gt; and a &lt;code&gt;try... catch&lt;/code&gt; block to check if the provided string is a valid JSON.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isValidJSON&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;try&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(str);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
  } &lt;span class="pl-k"&gt;catch&lt;/span&gt; (e) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
  }
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isValidJSON&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"name":"Adam","age":20}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;isValidJSON&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"name":"Adam",age:"20"}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;isValidJSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content--utility-1" class="anchor" aria-hidden="true" href="#-utility-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="wrench" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png"&gt;🔧&lt;/g-emoji&gt; Utility&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-castarray" class="anchor" aria-hidden="true" href="#castarray"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;castArray&lt;/h3&gt;
&lt;p&gt;Casts the provided value as an array if it's not one.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.isArray()&lt;/code&gt; to determine if &lt;code&gt;val&lt;/code&gt; is an array and return it as-is or encapsulated in an array accordingly.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;castArray&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-c1"&gt;Array&lt;/span&gt;.&lt;span class="pl-en"&gt;isArray&lt;/span&gt;(val) &lt;span class="pl-k"&gt;?&lt;/span&gt; val &lt;span class="pl-k"&gt;:&lt;/span&gt; [val]);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;castArray&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['foo']&lt;/span&gt;
&lt;span class="pl-en"&gt;castArray&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cloneregexp" class="anchor" aria-hidden="true" href="#cloneregexp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cloneRegExp&lt;/h3&gt;
&lt;p&gt;Clones a regular expression.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;new RegExp()&lt;/code&gt;, &lt;code&gt;RegExp.source&lt;/code&gt; and &lt;code&gt;RegExp.flags&lt;/code&gt; to clone the given regular expression.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;cloneRegExp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;regExp&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;RegExp&lt;/span&gt;(&lt;span class="pl-smi"&gt;regExp&lt;/span&gt;.&lt;span class="pl-c1"&gt;source&lt;/span&gt;, &lt;span class="pl-smi"&gt;regExp&lt;/span&gt;.&lt;span class="pl-smi"&gt;flags&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;regExp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-sr"&gt; &lt;span class="pl-pds"&gt;/&lt;/span&gt;lorem ipsum&lt;span class="pl-pds"&gt;/&lt;/span&gt;gi&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;regExp2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;cloneRegExp&lt;/span&gt;(regExp); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; /lorem ipsum/gi&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-coalesce" class="anchor" aria-hidden="true" href="#coalesce"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coalesce&lt;/h3&gt;
&lt;p&gt;Returns the first non-null/undefined argument.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.find()&lt;/code&gt; to return the first non &lt;code&gt;null&lt;/code&gt;/&lt;code&gt;undefined&lt;/code&gt; argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;coalesce&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(&lt;span class="pl-smi"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;[&lt;span class="pl-c1"&gt;undefined&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;].&lt;span class="pl-en"&gt;includes&lt;/span&gt;(_));&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;coalesce&lt;/span&gt;(&lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;NaN&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Waldo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ""&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-coalescefactory" class="anchor" aria-hidden="true" href="#coalescefactory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coalesceFactory&lt;/h3&gt;
&lt;p&gt;Returns a customized coalesce function that returns the first argument that returns &lt;code&gt;true&lt;/code&gt; from the provided argument validation function.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.find()&lt;/code&gt; to return the first argument that returns &lt;code&gt;true&lt;/code&gt; from the provided argument validation function.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;coalesceFactory&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;valid&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(valid);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;customCoalesce&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;coalesceFactory&lt;/span&gt;(&lt;span class="pl-smi"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;[&lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;NaN&lt;/span&gt;].&lt;span class="pl-en"&gt;includes&lt;/span&gt;(_));
&lt;span class="pl-en"&gt;customCoalesce&lt;/span&gt;(&lt;span class="pl-c1"&gt;undefined&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;NaN&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Waldo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Waldo"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-extendhex" class="anchor" aria-hidden="true" href="#extendhex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;extendHex&lt;/h3&gt;
&lt;p&gt;Extends a 3-digit color code to a 6-digit color code.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt;, &lt;code&gt;String.prototype.split()&lt;/code&gt; and &lt;code&gt;Array.prototype.join()&lt;/code&gt; to join the mapped array for converting a 3-digit RGB notated hexadecimal color-code to the 6-digit form.
&lt;code&gt;Array.prototype.slice()&lt;/code&gt; is used to remove &lt;code&gt;#&lt;/code&gt; from string start since it's added once.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;extendHex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;shortHex&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
  shortHex
    .&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-smi"&gt;shortHex&lt;/span&gt;.&lt;span class="pl-en"&gt;startsWith&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;+&lt;/span&gt; x)
    .&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;extendHex&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#03f&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '#0033ff'&lt;/span&gt;
&lt;span class="pl-en"&gt;extendHex&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;05a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '#0055aa'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-geturlparameters" class="anchor" aria-hidden="true" href="#geturlparameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;getURLParameters&lt;/h3&gt;
&lt;p&gt;Returns an object containing the parameters of the current URL.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.match()&lt;/code&gt; with an appropriate regular expression to get all key-value pairs, &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; to map and combine them into a single object.
Pass &lt;code&gt;location.search&lt;/code&gt; as the argument to apply to the current &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;getURLParameters&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  (&lt;span class="pl-smi"&gt;url&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;(&lt;span class="pl-c1"&gt;[&lt;span class="pl-k"&gt;^&lt;/span&gt;?=&amp;amp;]&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;)(=(&lt;span class="pl-c1"&gt;[&lt;span class="pl-k"&gt;^&lt;/span&gt;&amp;amp;]&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;))&lt;span class="pl-pds"&gt;/&lt;/span&gt;g&lt;/span&gt;) &lt;span class="pl-k"&gt;||&lt;/span&gt; []).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;(
    (&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((a[&lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-c1"&gt;indexOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-c1"&gt;indexOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)), a),
    {}
  );&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;getURLParameters&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://url.com/page?name=Adam&amp;amp;surname=Smith&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {name: 'Adam', surname: 'Smith'}&lt;/span&gt;
&lt;span class="pl-en"&gt;getURLParameters&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;google.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hextorgb-" class="anchor" aria-hidden="true" href="#hextorgb-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hexToRGB &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Converts a color code to a &lt;code&gt;rgb()&lt;/code&gt; or &lt;code&gt;rgba()&lt;/code&gt; string if alpha value is provided.&lt;/p&gt;
&lt;p&gt;Use bitwise right-shift operator and mask bits with &lt;code&gt;&amp;amp;&lt;/code&gt; (and) operator to convert a hexadecimal color code (with or without prefixed with &lt;code&gt;#&lt;/code&gt;) to a string with the RGB values. If it's 3-digit color code, first convert to 6-digit version. If an alpha value is provided alongside 6-digit hex, give &lt;code&gt;rgba()&lt;/code&gt; string in return.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;hexToRGB&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;hex&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; alpha &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
    h &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;hex&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-smi"&gt;hex&lt;/span&gt;.&lt;span class="pl-en"&gt;startsWith&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;h&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;) h &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;h].&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; x &lt;span class="pl-k"&gt;+&lt;/span&gt; x).&lt;span class="pl-c1"&gt;join&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;h&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;) alpha &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
  h &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;parseInt&lt;/span&gt;(h, &lt;span class="pl-c1"&gt;16&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; (
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rgb&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
    (alpha &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
    (h &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; (alpha &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
    ((h &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; (alpha &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0x00ff0000&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0x00ff00&lt;/span&gt;)) &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; (alpha &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;
    ((h &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; (alpha &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0x0000ff00&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0x0000ff&lt;/span&gt;)) &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; (alpha &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    (alpha &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;, &lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;h &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;0x000000ff&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  );
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;hexToRGB&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#27ae60ff&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'rgba(39, 174, 96, 255)'&lt;/span&gt;
&lt;span class="pl-en"&gt;hexToRGB&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;27ae60&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'rgb(39, 174, 96)'&lt;/span&gt;
&lt;span class="pl-en"&gt;hexToRGB&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#fff&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'rgb(255, 255, 255)'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-httpget" class="anchor" aria-hidden="true" href="#httpget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;httpGet&lt;/h3&gt;
&lt;p&gt;Makes a &lt;code&gt;GET&lt;/code&gt; request to the passed URL.&lt;/p&gt;
&lt;p&gt;Use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest" rel="nofollow"&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; web api to make a &lt;code&gt;get&lt;/code&gt; request to the given &lt;code&gt;url&lt;/code&gt;.
Handle the &lt;code&gt;onload&lt;/code&gt; event, by calling the given &lt;code&gt;callback&lt;/code&gt; the &lt;code&gt;responseText&lt;/code&gt;.
Handle the &lt;code&gt;onerror&lt;/code&gt; event, by running the provided &lt;code&gt;err&lt;/code&gt; function.
Omit the third argument, &lt;code&gt;err&lt;/code&gt;, to log errors to the console's &lt;code&gt;error&lt;/code&gt; stream by default.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;httpGet&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;url&lt;/span&gt;, &lt;span class="pl-smi"&gt;callback&lt;/span&gt;, &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;error&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;request&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;XMLHttpRequest&lt;/span&gt;();
  &lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-c1"&gt;open&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GET&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, url, &lt;span class="pl-c1"&gt;true&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-en"&gt;onload&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;callback&lt;/span&gt;(&lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-c1"&gt;responseText&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-en"&gt;onerror&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;err&lt;/span&gt;(request);
  &lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-c1"&gt;send&lt;/span&gt;();
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;httpGet&lt;/span&gt;(
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://jsonplaceholder.typicode.com/posts/1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;Logs: {&lt;/span&gt;
&lt;span class="pl-c"&gt;  "userId": 1,&lt;/span&gt;
&lt;span class="pl-c"&gt;  "id": 1,&lt;/span&gt;
&lt;span class="pl-c"&gt;  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",&lt;/span&gt;
&lt;span class="pl-c"&gt;  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"&lt;/span&gt;
&lt;span class="pl-c"&gt;}&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-httppost" class="anchor" aria-hidden="true" href="#httppost"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;httpPost&lt;/h3&gt;
&lt;p&gt;Makes a &lt;code&gt;POST&lt;/code&gt; request to the passed URL.&lt;/p&gt;
&lt;p&gt;Use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest" rel="nofollow"&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; web api to make a &lt;code&gt;post&lt;/code&gt; request to the given &lt;code&gt;url&lt;/code&gt;.
Set the value of an &lt;code&gt;HTTP&lt;/code&gt; request header with &lt;code&gt;setRequestHeader&lt;/code&gt; method.
Handle the &lt;code&gt;onload&lt;/code&gt; event, by calling the given &lt;code&gt;callback&lt;/code&gt; the &lt;code&gt;responseText&lt;/code&gt;.
Handle the &lt;code&gt;onerror&lt;/code&gt; event, by running the provided &lt;code&gt;err&lt;/code&gt; function.
Omit the third argument, &lt;code&gt;data&lt;/code&gt;, to send no data to the provided &lt;code&gt;url&lt;/code&gt;.
Omit the fourth argument, &lt;code&gt;err&lt;/code&gt;, to log errors to the console's &lt;code&gt;error&lt;/code&gt; stream by default.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;httpPost&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;url&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-smi"&gt;callback&lt;/span&gt;, &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;error&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;request&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;XMLHttpRequest&lt;/span&gt;();
  &lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-c1"&gt;open&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;POST&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, url, &lt;span class="pl-c1"&gt;true&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-c1"&gt;setRequestHeader&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Content-type&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/json; charset=utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-en"&gt;onload&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;callback&lt;/span&gt;(&lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-c1"&gt;responseText&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-en"&gt;onerror&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;err&lt;/span&gt;(request);
  &lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-c1"&gt;send&lt;/span&gt;(data);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;newPost&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  userId&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
  id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1337&lt;/span&gt;,
  title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  body&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar bar bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
};
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;(newPost);
&lt;span class="pl-en"&gt;httpPost&lt;/span&gt;(
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://jsonplaceholder.typicode.com/posts&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  data,
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;Logs: {&lt;/span&gt;
&lt;span class="pl-c"&gt;  "userId": 1,&lt;/span&gt;
&lt;span class="pl-c"&gt;  "id": 1337,&lt;/span&gt;
&lt;span class="pl-c"&gt;  "title": "Foo",&lt;/span&gt;
&lt;span class="pl-c"&gt;  "body": "bar bar bar"&lt;/span&gt;
&lt;span class="pl-c"&gt;}&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-en"&gt;httpPost&lt;/span&gt;(
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://jsonplaceholder.typicode.com/posts&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; does not send a body&lt;/span&gt;
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;
); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;Logs: {&lt;/span&gt;
&lt;span class="pl-c"&gt;  "id": 101&lt;/span&gt;
&lt;span class="pl-c"&gt;}&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-isbrowser" class="anchor" aria-hidden="true" href="#isbrowser"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isBrowser&lt;/h3&gt;
&lt;p&gt;Determines if the current runtime environment is a browser so that front-end modules can run on the server (Node) without throwing errors.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.includes()&lt;/code&gt; on the &lt;code&gt;typeof&lt;/code&gt; values of both &lt;code&gt;window&lt;/code&gt; and &lt;code&gt;document&lt;/code&gt; (globals usually only available in a browser environment unless they were explicitly defined), which will return &lt;code&gt;true&lt;/code&gt; if one of them is &lt;code&gt;undefined&lt;/code&gt;.
&lt;code&gt;typeof&lt;/code&gt; allows globals to be checked for existence without throwing a &lt;code&gt;ReferenceError&lt;/code&gt;.
If both of them are not &lt;code&gt;undefined&lt;/code&gt;, then the current environment is assumed to be a browser.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;isBrowser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;[&lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-c1"&gt;window&lt;/span&gt;, &lt;span class="pl-k"&gt;typeof&lt;/span&gt; &lt;span class="pl-c1"&gt;document&lt;/span&gt;].&lt;span class="pl-en"&gt;includes&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;undefined&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;isBrowser&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true (browser)&lt;/span&gt;
&lt;span class="pl-en"&gt;isBrowser&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false (Node)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mostperformant" class="anchor" aria-hidden="true" href="#mostperformant"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mostPerformant&lt;/h3&gt;
&lt;p&gt;Returns the index of the function in an array of functions which executed the fastest.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; to generate an array where each value is the total time taken to execute the function after &lt;code&gt;iterations&lt;/code&gt; times. Use the difference in &lt;code&gt;performance.now()&lt;/code&gt; values before and after to get the total time in milliseconds to a high degree of accuracy.
Use &lt;code&gt;Math.min()&lt;/code&gt; to find the minimum execution time, and return the index of that shortest time which corresponds to the index of the most performant function.
Omit the second argument, &lt;code&gt;iterations&lt;/code&gt;, to use a default of 10,000 iterations. The more iterations, the more reliable the result but the longer it will take.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;mostPerformant&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;fns&lt;/span&gt;, &lt;span class="pl-smi"&gt;iterations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10000&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;times&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fns&lt;/span&gt;.&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;before&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;performance&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;();
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; iterations; i&lt;span class="pl-k"&gt;++&lt;/span&gt;) &lt;span class="pl-en"&gt;fn&lt;/span&gt;();
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;performance&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; before;
  });
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;times&lt;/span&gt;.&lt;span class="pl-c1"&gt;indexOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;min&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;times));
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;mostPerformant&lt;/span&gt;([
  () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Loops through the entire array before returning `false`&lt;/span&gt;
    [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;].&lt;span class="pl-en"&gt;every&lt;/span&gt;(&lt;span class="pl-smi"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; el &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;number&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  },
  () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only needs to reach index `1` before returning false&lt;/span&gt;
    [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;].&lt;span class="pl-en"&gt;every&lt;/span&gt;(&lt;span class="pl-smi"&gt;el&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; el &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;number&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  }
]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ntharg" class="anchor" aria-hidden="true" href="#ntharg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nthArg&lt;/h3&gt;
&lt;p&gt;Creates a function that gets the argument at index &lt;code&gt;n&lt;/code&gt;. If &lt;code&gt;n&lt;/code&gt; is negative, the nth argument from the end is returned.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.slice()&lt;/code&gt; to get the desired argument at index &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;nthArg&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-v"&gt;args&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;args&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(n)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;third&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;nthArg&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
&lt;span class="pl-en"&gt;third&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
&lt;span class="pl-en"&gt;third&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; undefined&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;last&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;nthArg&lt;/span&gt;(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
&lt;span class="pl-en"&gt;last&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-objecttoquerystring" class="anchor" aria-hidden="true" href="#objecttoquerystring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;objectToQueryString&lt;/h3&gt;
&lt;p&gt;Returns a query string generated from the key-value pairs of the given object.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; on &lt;code&gt;Object.entries(queryParameters)&lt;/code&gt; to create the query string.
Determine the &lt;code&gt;symbol&lt;/code&gt; to be either &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;&amp;amp;&lt;/code&gt; based on the &lt;code&gt;index&lt;/code&gt; and concatenate &lt;code&gt;val&lt;/code&gt; to &lt;code&gt;queryString&lt;/code&gt; only if it's a string.
Return the &lt;code&gt;queryString&lt;/code&gt; or an empty string when the &lt;code&gt;queryParameters&lt;/code&gt; are falsy.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;objectToQueryString&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;queryParameters&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; queryParameters
    &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;Object&lt;/span&gt;.&lt;span class="pl-c1"&gt;entries&lt;/span&gt;(queryParameters).&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;queryString&lt;/span&gt;, [&lt;span class="pl-smi"&gt;key&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;], &lt;span class="pl-smi"&gt;index&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;symbol&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; index &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;?&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;amp;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
      queryString &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt; val &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;string&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;symbol&lt;span class="pl-pse"&gt;}${&lt;/span&gt;key&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;=&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;val&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
      &lt;span class="pl-k"&gt;return&lt;/span&gt; queryString;
    }, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;objectToQueryString&lt;/span&gt;({ page&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, size&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2kg&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, key&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt; }); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; '?page=1&amp;amp;size=2kg'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-parsecookie" class="anchor" aria-hidden="true" href="#parsecookie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;parseCookie&lt;/h3&gt;
&lt;p&gt;Parse an HTTP Cookie header string and return an object of all cookie name-value pairs.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;String.prototype.split(';')&lt;/code&gt; to separate key-value pairs from each other.
Use &lt;code&gt;Array.prototype.map()&lt;/code&gt; and &lt;code&gt;String.prototype.split('=')&lt;/code&gt; to separate keys from values in each pair.
Use &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; and &lt;code&gt;decodeURIComponent()&lt;/code&gt; to create an object with all key-value pairs.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;parseCookie&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  str
    .&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-c1"&gt;split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
    .&lt;span class="pl-en"&gt;reduce&lt;/span&gt;((&lt;span class="pl-smi"&gt;acc&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      acc[&lt;span class="pl-c1"&gt;decodeURIComponent&lt;/span&gt;(v[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].&lt;span class="pl-en"&gt;trim&lt;/span&gt;())] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;decodeURIComponent&lt;/span&gt;(v[&lt;span class="pl-c1"&gt;1&lt;/span&gt;].&lt;span class="pl-en"&gt;trim&lt;/span&gt;());
      &lt;span class="pl-k"&gt;return&lt;/span&gt; acc;
    }, {});&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;parseCookie&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo=bar; equation=E%3Dmc%5E2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; { foo: 'bar', equation: 'E=mc^2' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prettybytes-" class="anchor" aria-hidden="true" href="#prettybytes-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;prettyBytes &lt;a target="_blank" rel="noopener noreferrer" href="/advanced.svg"&gt;&lt;img src="/advanced.svg" alt="advanced" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Converts a number in bytes to a human-readable string.&lt;/p&gt;
&lt;p&gt;Use an array dictionary of units to be accessed based on the exponent.
Use &lt;code&gt;Number.toPrecision()&lt;/code&gt; to truncate the number to a certain number of digits.
Return the prettified string by building it up, taking into account the supplied options and whether it is negative or not.
Omit the second argument, &lt;code&gt;precision&lt;/code&gt;, to use a default precision of &lt;code&gt;3&lt;/code&gt; digits.
Omit the third argument, &lt;code&gt;addSpace&lt;/code&gt;, to add space between the number and unit by default.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;prettyBytes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;num&lt;/span&gt;, &lt;span class="pl-smi"&gt;precision&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-smi"&gt;addSpace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;UNITS&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;B&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;KB&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;MB&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GB&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;TB&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;PB&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;EB&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ZB&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YB&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;];
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;abs&lt;/span&gt;(num) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; num &lt;span class="pl-k"&gt;+&lt;/span&gt; (addSpace &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;UNITS&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;];
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;exponent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;min&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;floor&lt;/span&gt;(&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;log10&lt;/span&gt;(num &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;num &lt;span class="pl-k"&gt;:&lt;/span&gt; num) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;UNITS&lt;/span&gt;.&lt;span class="pl-c1"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Number&lt;/span&gt;(((num &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;num &lt;span class="pl-k"&gt;:&lt;/span&gt; num) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt; &lt;span class="pl-k"&gt;**&lt;/span&gt; exponent).&lt;span class="pl-en"&gt;toPrecision&lt;/span&gt;(precision));
  &lt;span class="pl-k"&gt;return&lt;/span&gt; (num &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; n &lt;span class="pl-k"&gt;+&lt;/span&gt; (addSpace &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;UNITS&lt;/span&gt;[exponent];
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;prettyBytes&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "1 KB"&lt;/span&gt;
&lt;span class="pl-en"&gt;prettyBytes&lt;/span&gt;(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;27145424323.5821&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "-27.145 GB"&lt;/span&gt;
&lt;span class="pl-en"&gt;prettyBytes&lt;/span&gt;(&lt;span class="pl-c1"&gt;123456789&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "123MB"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-randomhexcolorcode" class="anchor" aria-hidden="true" href="#randomhexcolorcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;randomHexColorCode&lt;/h3&gt;
&lt;p&gt;Generates a random hexadecimal color code.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Math.random&lt;/code&gt; to generate a random 24-bit(6x4bits) hexadecimal number. Use bit shifting and then convert it to an hexadecimal String using &lt;code&gt;toString(16)&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;randomHexColorCode&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; n &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;random&lt;/span&gt;() &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;0xfffff&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1000000&lt;/span&gt;).&lt;span class="pl-c1"&gt;toString&lt;/span&gt;(&lt;span class="pl-c1"&gt;16&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt;.&lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;);
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;randomHexColorCode&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "#e34155"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rgbtohex" class="anchor" aria-hidden="true" href="#rgbtohex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RGBToHex&lt;/h3&gt;
&lt;p&gt;Converts the values of RGB components to a color code.&lt;/p&gt;
&lt;p&gt;Convert given RGB parameters to hexadecimal string using bitwise left-shift operator (&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;) and &lt;code&gt;toString(16)&lt;/code&gt;, then &lt;code&gt;String.padStart(6,'0')&lt;/code&gt; to get a 6-digit hexadecimal value.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;RGBToHex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;r&lt;/span&gt;, &lt;span class="pl-smi"&gt;g&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ((r &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (g &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; b).&lt;span class="pl-c1"&gt;toString&lt;/span&gt;(&lt;span class="pl-c1"&gt;16&lt;/span&gt;).&lt;span class="pl-en"&gt;padStart&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;RGBToHex&lt;/span&gt;(&lt;span class="pl-c1"&gt;255&lt;/span&gt;, &lt;span class="pl-c1"&gt;165&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'ffa501'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-serializecookie" class="anchor" aria-hidden="true" href="#serializecookie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;serializeCookie&lt;/h3&gt;
&lt;p&gt;Serialize a cookie name-value pair into a Set-Cookie header string.&lt;/p&gt;
&lt;p&gt;Use template literals and &lt;code&gt;encodeURIComponent()&lt;/code&gt; to create the appropriate string.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;serializeCookie&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-smi"&gt;val&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-c1"&gt;encodeURIComponent&lt;/span&gt;(name)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;=&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-c1"&gt;encodeURIComponent&lt;/span&gt;(val)&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;serializeCookie&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'foo=bar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-timetaken" class="anchor" aria-hidden="true" href="#timetaken"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;timeTaken&lt;/h3&gt;
&lt;p&gt;Measures the time taken by a function to execute.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;console.time()&lt;/code&gt; and &lt;code&gt;console.timeEnd()&lt;/code&gt; to measure the difference between the start and end times to determine how long the callback took to execute.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;timeTaken&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;callback&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;time&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;timeTaken&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;callback&lt;/span&gt;();
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;timeEnd&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;timeTaken&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; r;
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;timeTaken&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Math&lt;/span&gt;.&lt;span class="pl-c1"&gt;pow&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1024, (logged): timeTaken: 0.02099609375ms&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tocurrency" class="anchor" aria-hidden="true" href="#tocurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;toCurrency&lt;/h3&gt;
&lt;p&gt;Take a number and return specified currency formatting.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Intl.NumberFormat&lt;/code&gt; to enable country / currency sensitive formatting.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;toCurrency&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt;, &lt;span class="pl-smi"&gt;curr&lt;/span&gt;, &lt;span class="pl-smi"&gt;LanguageFormat&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Intl&lt;/span&gt;.&lt;span class="pl-en"&gt;NumberFormat&lt;/span&gt;(LanguageFormat, { style&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;currency&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, currency&lt;span class="pl-k"&gt;:&lt;/span&gt; curr }).&lt;span class="pl-en"&gt;format&lt;/span&gt;(n);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;toCurrency&lt;/span&gt;(&lt;span class="pl-c1"&gt;123456.789&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;EUR&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; €123,456.79  | currency: Euro | currencyLangFormat: Local&lt;/span&gt;
&lt;span class="pl-en"&gt;toCurrency&lt;/span&gt;(&lt;span class="pl-c1"&gt;123456.789&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;USD&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;en-us&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; $123,456.79  | currency: US Dollar | currencyLangFormat: English (United States)&lt;/span&gt;
&lt;span class="pl-en"&gt;toCurrency&lt;/span&gt;(&lt;span class="pl-c1"&gt;123456.789&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;USD&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fa&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ۱۲۳٬۴۵۶٫۷۹ ؜$ | currency: US Dollar | currencyLangFormat: Farsi&lt;/span&gt;
&lt;span class="pl-en"&gt;toCurrency&lt;/span&gt;(&lt;span class="pl-c1"&gt;322342436423.2435&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;JPY&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ¥322,342,436,423 | currency: Japanese Yen | currencyLangFormat: Local&lt;/span&gt;
&lt;span class="pl-en"&gt;toCurrency&lt;/span&gt;(&lt;span class="pl-c1"&gt;322342436423.2435&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;JPY&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 322 342 436 423 ¥ | currency: Japanese Yen | currencyLangFormat: Finnish&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-todecimalmark" class="anchor" aria-hidden="true" href="#todecimalmark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;toDecimalMark&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;toLocaleString()&lt;/code&gt; to convert a float-point arithmetic to the &lt;a href="https://en.wikipedia.org/wiki/Decimal_mark" rel="nofollow"&gt;Decimal mark&lt;/a&gt; form. It makes a comma separated string from a number.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;toDecimalMark&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;num&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;num&lt;/span&gt;.&lt;span class="pl-c1"&gt;toLocaleString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;en-US&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;toDecimalMark&lt;/span&gt;(&lt;span class="pl-c1"&gt;12305030388.9087&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "12,305,030,388.909"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-toordinalsuffix" class="anchor" aria-hidden="true" href="#toordinalsuffix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;toOrdinalSuffix&lt;/h3&gt;
&lt;p&gt;Adds an ordinal suffix to a number.&lt;/p&gt;
&lt;p&gt;Use the modulo operator (&lt;code&gt;%&lt;/code&gt;) to find values of single and tens digits.
Find which ordinal pattern digits match.
If digit is found in teens pattern, use teens ordinal.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;toOrdinalSuffix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;num&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;parseInt&lt;/span&gt;(num),
    digits &lt;span class="pl-k"&gt;=&lt;/span&gt; [int &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, int &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;],
    ordinals &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;st&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nd&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rd&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;th&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
    oPattern &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;],
    tPattern &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;13&lt;/span&gt;, &lt;span class="pl-c1"&gt;14&lt;/span&gt;, &lt;span class="pl-c1"&gt;15&lt;/span&gt;, &lt;span class="pl-c1"&gt;16&lt;/span&gt;, &lt;span class="pl-c1"&gt;17&lt;/span&gt;, &lt;span class="pl-c1"&gt;18&lt;/span&gt;, &lt;span class="pl-c1"&gt;19&lt;/span&gt;];
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;oPattern&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(digits[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;tPattern&lt;/span&gt;.&lt;span class="pl-en"&gt;includes&lt;/span&gt;(digits[&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
    &lt;span class="pl-k"&gt;?&lt;/span&gt; int &lt;span class="pl-k"&gt;+&lt;/span&gt; ordinals[digits[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;]
    &lt;span class="pl-k"&gt;:&lt;/span&gt; int &lt;span class="pl-k"&gt;+&lt;/span&gt; ordinals[&lt;span class="pl-c1"&gt;3&lt;/span&gt;];
};&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;toOrdinalSuffix&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;123&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "123rd"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-validatenumber" class="anchor" aria-hidden="true" href="#validatenumber"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;validateNumber&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the given value is a number, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;!isNaN()&lt;/code&gt; in combination with &lt;code&gt;parseFloat()&lt;/code&gt; to check if the argument is a number.
Use &lt;code&gt;isFinite()&lt;/code&gt; to check if the number is finite.
Use &lt;code&gt;Number()&lt;/code&gt; to check if the coercion holds.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;validateNumber&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-c1"&gt;isNaN&lt;/span&gt;(&lt;span class="pl-c1"&gt;parseFloat&lt;/span&gt;(n)) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;isFinite&lt;/span&gt;(n) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;Number&lt;/span&gt;(n) &lt;span class="pl-k"&gt;==&lt;/span&gt; n;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;validateNumber&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-yesno" class="anchor" aria-hidden="true" href="#yesno"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;yesNo&lt;/h3&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the string is &lt;code&gt;y&lt;/code&gt;/&lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; if the string is &lt;code&gt;n&lt;/code&gt;/&lt;code&gt;no&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;RegExp.test()&lt;/code&gt; to check if the string evaluates to &lt;code&gt;y/yes&lt;/code&gt; or &lt;code&gt;n/no&lt;/code&gt;.
Omit the second argument, &lt;code&gt;def&lt;/code&gt; to set the default answer as &lt;code&gt;no&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;yesNo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;def&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="pl-sr"&gt;  &lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;^&lt;/span&gt;(y&lt;span class="pl-k"&gt;|&lt;/span&gt;yes)&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;i&lt;/span&gt;.&lt;span class="pl-c1"&gt;test&lt;/span&gt;(val) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-sr"&gt; &lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;^&lt;/span&gt;(n&lt;span class="pl-k"&gt;|&lt;/span&gt;no)&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;i&lt;/span&gt;.&lt;span class="pl-c1"&gt;test&lt;/span&gt;(val) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; def;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
&lt;summary&gt;Examples&lt;/summary&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;yesNo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Y&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;yesNo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;yes&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;yesNo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;No&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;yesNo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;a href="#contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-collaborators" class="anchor" aria-hidden="true" href="#collaborators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collaborators&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://github.com/Chalarangelo"&gt;&lt;img src="https://github.com/Chalarangelo.png" width="100px;" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://github.com/Chalarangelo"&gt;&lt;sub&gt;Angelos Chalaris&lt;/sub&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/flxwu"&gt;&lt;img src="https://github.com/flxwu.png" width="100px;" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://github.com/Pl4gue"&gt;&lt;sub&gt;Felix Wu&lt;/sub&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/fejes713"&gt;&lt;img src="https://github.com/fejes713.png" width="100px;" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://github.com/fejes713"&gt;&lt;sub&gt;Stefan Feješ&lt;/sub&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/kingdavidmartins"&gt;&lt;img src="https://github.com/kingdavidmartins.png" width="100px;" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://github.com/iamsoorena"&gt;&lt;sub&gt;King David Martins&lt;/sub&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/iamsoorena"&gt;&lt;img src="https://github.com/iamsoorena.png" width="100px;" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://github.com/iamsoorena"&gt;&lt;sub&gt;Soorena Soleimani&lt;/sub&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/elderhsouza"&gt;&lt;img src="https://github.com/elderhsouza.png" width="100px;" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://github.com/elderhsouza"&gt;&lt;sub&gt;Elder Henrique Souza&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/skatcat31"&gt;&lt;img src="https://github.com/skatcat31.png" width="100px;" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://github.com/skatcat31"&gt;&lt;sub&gt;Robert Mennell&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/atomiks"&gt;&lt;img src="https://github.com/atomiks.png" width="100px;" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://github.com/atomiks"&gt;&lt;sub&gt;atomiks&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Logos made by &lt;a href="https://github.com/Chalarangelo"&gt;Angelos Chalaris&lt;/a&gt; are licensed under the &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT&lt;/a&gt; license.&lt;/em&gt;
&lt;em&gt;This README is built using &lt;a href="https://github.com/30-seconds/markdown-builder"&gt;markdown-builder&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>30-seconds</author><guid isPermaLink="false">https://github.com/30-seconds/30-seconds-of-code</guid><pubDate>Sun, 01 Dec 2019 00:21:00 GMT</pubDate></item><item><title>gin-gonic/gin #22 in All Languages, This month</title><link>https://github.com/gin-gonic/gin</link><description>&lt;p&gt;&lt;i&gt;Gin is a HTTP web framework written in Go (Golang). It features a Martini-like API with much better performance -- up to 40 times faster. If you need smashing performance, get yourself some Gin.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-gin-web-framework" class="anchor" aria-hidden="true" href="#gin-web-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gin Web Framework&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/gin-gonic/logo/master/color.png"&gt;&lt;img align="right" width="159px" src="https://raw.githubusercontent.com/gin-gonic/logo/master/color.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/gin-gonic/gin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1e302ca5edd246dbec5dce477b94313881654733/68747470733a2f2f7472617669732d63692e6f72672f67696e2d676f6e69632f67696e2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/gin-gonic/gin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/gin-gonic/gin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4cffe2606f8cf24ea4a1f9f7491ba02a1dd057c6/68747470733a2f2f636f6465636f762e696f2f67682f67696e2d676f6e69632f67696e2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/gin-gonic/gin/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/gin-gonic/gin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ad116181da0c08023ebb577817f4abc9fa1b391/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f67696e2d676f6e69632f67696e" alt="Go Report Card" data-canonical-src="https://goreportcard.com/badge/github.com/gin-gonic/gin" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://godoc.org/github.com/gin-gonic/gin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c3edc352f01db1a95ccff1d08618556fb6ba8f3/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f67696e2d676f6e69632f67696e3f7374617475732e737667" alt="GoDoc" data-canonical-src="https://godoc.org/github.com/gin-gonic/gin?status.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/gin-gonic/gin?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/gin-gonic/gin" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://sourcegraph.com/github.com/gin-gonic/gin?badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a19b0e2caff819736338c5b7709943eac5df300/68747470733a2f2f736f7572636567726170682e636f6d2f6769746875622e636f6d2f67696e2d676f6e69632f67696e2f2d2f62616467652e737667" alt="Sourcegraph" data-canonical-src="https://sourcegraph.com/github.com/gin-gonic/gin/-/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codetriage.com/gin-gonic/gin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4493347a01c52f7a0319127c610187438219305f/68747470733a2f2f7777772e636f64657472696167652e636f6d2f67696e2d676f6e69632f67696e2f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/gin-gonic/gin/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/gin-gonic/gin/releases"&gt;&lt;img src="https://camo.githubusercontent.com/9dcdba8103af84591a6df2626476bb973daa858d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f67696e2d676f6e69632f67696e2e7376673f7374796c653d666c61742d737175617265" alt="Release" data-canonical-src="https://img.shields.io/github/release/gin-gonic/gin.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gin is a web framework written in Go (Golang). It features a martini-like API with performance that is up to 40 times faster thanks to &lt;a href="https://github.com/julienschmidt/httprouter"&gt;httprouter&lt;/a&gt;. If you need performance and good productivity, you will love Gin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisite"&gt;Prerequisite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quick-start"&gt;Quick start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#benchmarks"&gt;Benchmarks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gin-v1-stable"&gt;Gin v1.stable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-with-jsoniter"&gt;Build with jsoniter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-examples"&gt;API Examples&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#using-get-post-put-patch-delete-and-options"&gt;Using GET,POST,PUT,PATCH,DELETE and OPTIONS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#parameters-in-path"&gt;Parameters in path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#querystring-parameters"&gt;Querystring parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multiparturlencoded-form"&gt;Multipart/Urlencoded Form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#another-example-query--post-form"&gt;Another example: query + post form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#map-as-querystring-or-postform-parameters"&gt;Map as querystring or postform parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#upload-files"&gt;Upload files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#grouping-routes"&gt;Grouping routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#blank-gin-without-middleware-by-default"&gt;Blank Gin without middleware by default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-middleware"&gt;Using middleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-write-log-file"&gt;How to write log file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-log-format"&gt;Custom Log Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#model-binding-and-validation"&gt;Model binding and validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-validators"&gt;Custom Validators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#only-bind-query-string"&gt;Only Bind Query String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bind-query-string-or-post-data"&gt;Bind Query String or Post Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bind-uri"&gt;Bind Uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bind-header"&gt;Bind Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bind-html-checkboxes"&gt;Bind HTML checkboxes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multiparturlencoded-binding"&gt;Multipart/Urlencoded binding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xml-json-yaml-and-protobuf-rendering"&gt;XML, JSON, YAML and ProtoBuf rendering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jsonp"&gt;JSONP rendering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#serving-static-files"&gt;Serving static files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#serving-data-from-reader"&gt;Serving data from reader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#html-rendering"&gt;HTML rendering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multitemplate"&gt;Multitemplate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redirects"&gt;Redirects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-middleware"&gt;Custom Middleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-basicauth-middleware"&gt;Using BasicAuth() middleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#goroutines-inside-a-middleware"&gt;Goroutines inside a middleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-http-configuration"&gt;Custom HTTP configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support-lets-encrypt"&gt;Support Let's Encrypt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#run-multiple-service-using-gin"&gt;Run multiple service using Gin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#graceful-restart-or-stop"&gt;Graceful restart or stop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-a-single-binary-with-templates"&gt;Build a single binary with templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bind-form-data-request-with-custom-struct"&gt;Bind form-data request with custom struct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#try-to-bind-body-into-different-structs"&gt;Try to bind body into different structs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http2-server-push"&gt;http2 server push&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#define-format-for-the-log-of-routes"&gt;Define format for the log of routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set-and-get-a-cookie"&gt;Set and get a cookie&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#users"&gt;Users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install Gin package, you need to install Go and set your Go workspace first.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The first need &lt;a href="https://golang.org/" rel="nofollow"&gt;Go&lt;/a&gt; installed (&lt;strong&gt;version 1.11+ is required&lt;/strong&gt;), then you can use the below Go command to install Gin.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ go get -u github.com/gin-gonic/gin&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Import it in your code:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;(Optional) Import &lt;code&gt;net/http&lt;/code&gt;. This is required for example if using constants such as &lt;code&gt;http.StatusOK&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;net/http&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; assume the following codes in example.go file&lt;/span&gt;
$ cat example.go&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ping&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pong&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		})
	})
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; listen and serve on 0.0.0.0:8080 (for windows "localhost:8080")&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;# run example.go and visit 0.0.0.0:8080/ping (for windows "localhost:8080/ping") on browser
$ go run example.go
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmarks&lt;/h2&gt;
&lt;p&gt;Gin uses a custom version of &lt;a href="https://github.com/julienschmidt/httprouter"&gt;HttpRouter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/BENCHMARKS.md"&gt;See all benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Benchmark name&lt;/th&gt;
&lt;th align="right"&gt;(1)&lt;/th&gt;
&lt;th align="right"&gt;(2)&lt;/th&gt;
&lt;th align="right"&gt;(3)&lt;/th&gt;
&lt;th align="right"&gt;(4)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;BenchmarkGin_GithubAll&lt;/strong&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;strong&gt;30000&lt;/strong&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;strong&gt;48375&lt;/strong&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkAce_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;10000&lt;/td&gt;
&lt;td align="right"&gt;134059&lt;/td&gt;
&lt;td align="right"&gt;13792&lt;/td&gt;
&lt;td align="right"&gt;167&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkBear_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;5000&lt;/td&gt;
&lt;td align="right"&gt;534445&lt;/td&gt;
&lt;td align="right"&gt;86448&lt;/td&gt;
&lt;td align="right"&gt;943&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkBeego_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;3000&lt;/td&gt;
&lt;td align="right"&gt;592444&lt;/td&gt;
&lt;td align="right"&gt;74705&lt;/td&gt;
&lt;td align="right"&gt;812&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkBone_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;200&lt;/td&gt;
&lt;td align="right"&gt;6957308&lt;/td&gt;
&lt;td align="right"&gt;698784&lt;/td&gt;
&lt;td align="right"&gt;8453&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkDenco_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;10000&lt;/td&gt;
&lt;td align="right"&gt;158819&lt;/td&gt;
&lt;td align="right"&gt;20224&lt;/td&gt;
&lt;td align="right"&gt;167&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkEcho_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;10000&lt;/td&gt;
&lt;td align="right"&gt;154700&lt;/td&gt;
&lt;td align="right"&gt;6496&lt;/td&gt;
&lt;td align="right"&gt;203&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkGocraftWeb_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;3000&lt;/td&gt;
&lt;td align="right"&gt;570806&lt;/td&gt;
&lt;td align="right"&gt;131656&lt;/td&gt;
&lt;td align="right"&gt;1686&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkGoji_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;2000&lt;/td&gt;
&lt;td align="right"&gt;818034&lt;/td&gt;
&lt;td align="right"&gt;56112&lt;/td&gt;
&lt;td align="right"&gt;334&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkGojiv2_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;2000&lt;/td&gt;
&lt;td align="right"&gt;1213973&lt;/td&gt;
&lt;td align="right"&gt;274768&lt;/td&gt;
&lt;td align="right"&gt;3712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkGoJsonRest_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;2000&lt;/td&gt;
&lt;td align="right"&gt;785796&lt;/td&gt;
&lt;td align="right"&gt;134371&lt;/td&gt;
&lt;td align="right"&gt;2737&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkGoRestful_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;300&lt;/td&gt;
&lt;td align="right"&gt;5238188&lt;/td&gt;
&lt;td align="right"&gt;689672&lt;/td&gt;
&lt;td align="right"&gt;4519&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkGorillaMux_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;100&lt;/td&gt;
&lt;td align="right"&gt;10257726&lt;/td&gt;
&lt;td align="right"&gt;211840&lt;/td&gt;
&lt;td align="right"&gt;2272&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkHttpRouter_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;20000&lt;/td&gt;
&lt;td align="right"&gt;105414&lt;/td&gt;
&lt;td align="right"&gt;13792&lt;/td&gt;
&lt;td align="right"&gt;167&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkHttpTreeMux_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;10000&lt;/td&gt;
&lt;td align="right"&gt;319934&lt;/td&gt;
&lt;td align="right"&gt;65856&lt;/td&gt;
&lt;td align="right"&gt;671&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkKocha_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;10000&lt;/td&gt;
&lt;td align="right"&gt;209442&lt;/td&gt;
&lt;td align="right"&gt;23304&lt;/td&gt;
&lt;td align="right"&gt;843&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkLARS_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;20000&lt;/td&gt;
&lt;td align="right"&gt;62565&lt;/td&gt;
&lt;td align="right"&gt;0&lt;/td&gt;
&lt;td align="right"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkMacaron_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;2000&lt;/td&gt;
&lt;td align="right"&gt;1161270&lt;/td&gt;
&lt;td align="right"&gt;204194&lt;/td&gt;
&lt;td align="right"&gt;2000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkMartini_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;200&lt;/td&gt;
&lt;td align="right"&gt;9991713&lt;/td&gt;
&lt;td align="right"&gt;226549&lt;/td&gt;
&lt;td align="right"&gt;2325&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkPat_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;200&lt;/td&gt;
&lt;td align="right"&gt;5590793&lt;/td&gt;
&lt;td align="right"&gt;1499568&lt;/td&gt;
&lt;td align="right"&gt;27435&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkPossum_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;10000&lt;/td&gt;
&lt;td align="right"&gt;319768&lt;/td&gt;
&lt;td align="right"&gt;84448&lt;/td&gt;
&lt;td align="right"&gt;609&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkR2router_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;10000&lt;/td&gt;
&lt;td align="right"&gt;305134&lt;/td&gt;
&lt;td align="right"&gt;77328&lt;/td&gt;
&lt;td align="right"&gt;979&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkRivet_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;10000&lt;/td&gt;
&lt;td align="right"&gt;132134&lt;/td&gt;
&lt;td align="right"&gt;16272&lt;/td&gt;
&lt;td align="right"&gt;167&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkTango_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;3000&lt;/td&gt;
&lt;td align="right"&gt;552754&lt;/td&gt;
&lt;td align="right"&gt;63826&lt;/td&gt;
&lt;td align="right"&gt;1618&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkTigerTonic_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;1000&lt;/td&gt;
&lt;td align="right"&gt;1439483&lt;/td&gt;
&lt;td align="right"&gt;239104&lt;/td&gt;
&lt;td align="right"&gt;5374&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkTraffic_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;100&lt;/td&gt;
&lt;td align="right"&gt;11383067&lt;/td&gt;
&lt;td align="right"&gt;2659329&lt;/td&gt;
&lt;td align="right"&gt;21848&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BenchmarkVulcan_GithubAll&lt;/td&gt;
&lt;td align="right"&gt;5000&lt;/td&gt;
&lt;td align="right"&gt;394253&lt;/td&gt;
&lt;td align="right"&gt;19894&lt;/td&gt;
&lt;td align="right"&gt;609&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;(1): Total Repetitions achieved in constant time, higher means more confident result&lt;/li&gt;
&lt;li&gt;(2): Single Repetition Duration (ns/op), lower is better&lt;/li&gt;
&lt;li&gt;(3): Heap Memory (B/op), lower is better&lt;/li&gt;
&lt;li&gt;(4): Average Allocations per Repetition (allocs/op), lower is better&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-gin-v1-stable" class="anchor" aria-hidden="true" href="#gin-v1-stable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gin v1. stable&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Zero allocation router.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Still the fastest http router and framework. From routing to writing.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Complete suite of unit tests&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Battle tested&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; API frozen, new releases will not break your code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-build-with-jsoniter" class="anchor" aria-hidden="true" href="#build-with-jsoniter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build with &lt;a href="https://github.com/json-iterator/go"&gt;jsoniter&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Gin uses &lt;code&gt;encoding/json&lt;/code&gt; as default json package but you can change to &lt;a href="https://github.com/json-iterator/go"&gt;jsoniter&lt;/a&gt; by build from other tags.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ go build -tags=jsoniter &lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-api-examples" class="anchor" aria-hidden="true" href="#api-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Examples&lt;/h2&gt;
&lt;p&gt;You can find a number of ready-to-run examples at &lt;a href="https://github.com/gin-gonic/examples"&gt;Gin examples repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-get-post-put-patch-delete-and-options" class="anchor" aria-hidden="true" href="#using-get-post-put-patch-delete-and-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using GET, POST, PUT, PATCH, DELETE and OPTIONS&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Creates a gin router with default middleware:&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logger and recovery (crash-free) middleware&lt;/span&gt;
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someGet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, getting)
	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/somePost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, posting)
	router.&lt;span class="pl-c1"&gt;PUT&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/somePut&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, putting)
	router.&lt;span class="pl-c1"&gt;DELETE&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someDelete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, deleting)
	router.&lt;span class="pl-c1"&gt;PATCH&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/somePatch&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, patching)
	router.&lt;span class="pl-c1"&gt;HEAD&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someHead&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, head)
	router.&lt;span class="pl-c1"&gt;OPTIONS&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someOptions&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, options)

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; By default it serves on :8080 unless a&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; PORT environment variable was defined.&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;()
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; router.Run(":3000") for a hard coded port&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-parameters-in-path" class="anchor" aria-hidden="true" href="#parameters-in-path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parameters in path&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This handler will match /user/john but will not match /user/ or /user&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/user/:name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;Param&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, name)
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; However, this one will match /user/john/ and also /user/john/send&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If no other routers match /user/john, it will redirect to /user/john/&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/user/:name/*action&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;Param&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		&lt;span class="pl-smi"&gt;action&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;Param&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;action&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		&lt;span class="pl-smi"&gt;message&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; name + &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; is &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; + action
		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, message)
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; For each matched request Context will hold the route definition&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/user/:name/*action&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;FullPath&lt;/span&gt;() == &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/user/:name/*action&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
	})

	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-querystring-parameters" class="anchor" aria-hidden="true" href="#querystring-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Querystring parameters&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Query string parameters are parsed using the existing underlying request object.&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The request responds to a url matching:  /welcome?firstname=Jane&amp;amp;lastname=Doe&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/welcome&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;firstname&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;DefaultQuery&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;firstname&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Guest&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		&lt;span class="pl-smi"&gt;lastname&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;Query&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lastname&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; shortcut for c.Request.URL.Query().Get("lastname")&lt;/span&gt;

		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-c1"&gt;%s&lt;/span&gt; &lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, firstname, lastname)
	})
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-multiparturlencoded-form" class="anchor" aria-hidden="true" href="#multiparturlencoded-form"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multipart/Urlencoded Form&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/form_post&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;message&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;PostForm&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		&lt;span class="pl-smi"&gt;nick&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;DefaultPostForm&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nick&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;posted&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: message,
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nick&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:    nick,
		})
	})
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-another-example-query--post-form" class="anchor" aria-hidden="true" href="#another-example-query--post-form"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Another example: query + post form&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;POST /post?id=1234&amp;amp;page=1 HTTP/1.1
Content-Type: application/x-www-form-urlencoded

name=manu&amp;amp;message=this_is_great
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/post&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {

		&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;Query&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		&lt;span class="pl-smi"&gt;page&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;DefaultQuery&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;page&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;PostForm&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		&lt;span class="pl-smi"&gt;message&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;PostForm&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

		fmt.&lt;span class="pl-c1"&gt;Printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id: &lt;span class="pl-c1"&gt;%s&lt;/span&gt;; page: &lt;span class="pl-c1"&gt;%s&lt;/span&gt;; name: &lt;span class="pl-c1"&gt;%s&lt;/span&gt;; message: &lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, id, page, name, message)
	})
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;id: 1234; page: 1; name: manu; message: this_is_great
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-map-as-querystring-or-postform-parameters" class="anchor" aria-hidden="true" href="#map-as-querystring-or-postform-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Map as querystring or postform parameters&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;POST /post?ids[a]=1234&amp;amp;ids[b]=hello HTTP/1.1
Content-Type: application/x-www-form-urlencoded

names[first]=thinkerou&amp;amp;names[second]=tianou
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/post&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {

		&lt;span class="pl-smi"&gt;ids&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;QueryMap&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ids&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		&lt;span class="pl-smi"&gt;names&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;PostFormMap&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;names&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

		fmt.&lt;span class="pl-c1"&gt;Printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ids: &lt;span class="pl-c1"&gt;%v&lt;/span&gt;; names: &lt;span class="pl-c1"&gt;%v&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ids, names)
	})
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;ids: map[b:hello a:1234], names: map[second:tianou first:thinkerou]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-upload-files" class="anchor" aria-hidden="true" href="#upload-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upload files&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-single-file" class="anchor" aria-hidden="true" href="#single-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Single file&lt;/h4&gt;
&lt;p&gt;References issue &lt;a href="https://github.com/gin-gonic/gin/issues/774"&gt;#774&lt;/a&gt; and detail &lt;a href="https://github.com/gin-gonic/examples/tree/master/upload-file/single"&gt;example code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;file.Filename&lt;/code&gt; &lt;strong&gt;SHOULD NOT&lt;/strong&gt; be trusted. See &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition#Directives" rel="nofollow"&gt;&lt;code&gt;Content-Disposition&lt;/code&gt; on MDN&lt;/a&gt; and &lt;a href="https://github.com/gin-gonic/gin/issues/1693"&gt;#1693&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The filename is always optional and must not be used blindly by the application: path information should be stripped, and conversion to the server file system rules should be done.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set a lower memory limit for multipart forms (default is 32 MiB)&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; router.MaxMultipartMemory = 8 &amp;lt;&amp;lt; 20  // 8 MiB&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/upload&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; single file&lt;/span&gt;
		&lt;span class="pl-smi"&gt;file&lt;/span&gt;, &lt;span class="pl-smi"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;FormFile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(file.&lt;span class="pl-smi"&gt;Filename&lt;/span&gt;)

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Upload the file to specific dst.&lt;/span&gt;
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; c.SaveUploadedFile(file, dst)&lt;/span&gt;

		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, fmt.&lt;span class="pl-c1"&gt;Sprintf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&lt;span class="pl-c1"&gt;%s&lt;/span&gt;' uploaded!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, file.&lt;span class="pl-smi"&gt;Filename&lt;/span&gt;))
	})
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;How to &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -X POST http://localhost:8080/upload \
  -F &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file=@/Users/appleboy/test.zip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
  -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: multipart/form-data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-multiple-files" class="anchor" aria-hidden="true" href="#multiple-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple files&lt;/h4&gt;
&lt;p&gt;See the detail &lt;a href="https://github.com/gin-gonic/examples/tree/master/upload-file/multiple"&gt;example code&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set a lower memory limit for multipart forms (default is 32 MiB)&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; router.MaxMultipartMemory = 8 &amp;lt;&amp;lt; 20  // 8 MiB&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/upload&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Multipart form&lt;/span&gt;
		&lt;span class="pl-smi"&gt;form&lt;/span&gt;, &lt;span class="pl-smi"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;MultipartForm&lt;/span&gt;()
		&lt;span class="pl-smi"&gt;files&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; form.&lt;span class="pl-smi"&gt;File&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;upload[]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]

		&lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;_&lt;/span&gt;, &lt;span class="pl-smi"&gt;file&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &lt;span class="pl-k"&gt;range&lt;/span&gt; files {
			log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(file.&lt;span class="pl-smi"&gt;Filename&lt;/span&gt;)

			&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Upload the file to specific dst.&lt;/span&gt;
			&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; c.SaveUploadedFile(file, dst)&lt;/span&gt;
		}
		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, fmt.&lt;span class="pl-c1"&gt;Sprintf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt; files uploaded!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;len&lt;/span&gt;(files)))
	})
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;How to &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -X POST http://localhost:8080/upload \
  -F &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;upload[]=@/Users/appleboy/test1.zip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
  -F &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;upload[]=@/Users/appleboy/test2.zip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
  -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: multipart/form-data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-grouping-routes" class="anchor" aria-hidden="true" href="#grouping-routes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Grouping routes&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Simple group: v1&lt;/span&gt;
	&lt;span class="pl-smi"&gt;v1&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; router.&lt;span class="pl-c1"&gt;Group&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	{
		v1.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/login&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, loginEndpoint)
		v1.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/submit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, submitEndpoint)
		v1.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/read&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, readEndpoint)
	}

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Simple group: v2&lt;/span&gt;
	&lt;span class="pl-smi"&gt;v2&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; router.&lt;span class="pl-c1"&gt;Group&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	{
		v2.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/login&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, loginEndpoint)
		v2.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/submit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, submitEndpoint)
		v2.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/read&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, readEndpoint)
	}

	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-blank-gin-without-middleware-by-default" class="anchor" aria-hidden="true" href="#blank-gin-without-middleware-by-default"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blank Gin without middleware by default&lt;/h3&gt;
&lt;p&gt;Use&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;New&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;instead of&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default With the Logger and Recovery middleware already attached&lt;/span&gt;
&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-middleware" class="anchor" aria-hidden="true" href="#using-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using middleware&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Creates a router without any middleware by default&lt;/span&gt;
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;New&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Global middleware&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Logger middleware will write the logs to gin.DefaultWriter even if you set with GIN_MODE=release.&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; By default gin.DefaultWriter = os.Stdout&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Use&lt;/span&gt;(gin.&lt;span class="pl-c1"&gt;Logger&lt;/span&gt;())

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Recovery middleware recovers from any panics and writes a 500 if there was one.&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Use&lt;/span&gt;(gin.&lt;span class="pl-c1"&gt;Recovery&lt;/span&gt;())

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Per route middleware, you can add as many as you desire.&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/benchmark&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;MyBenchLogger&lt;/span&gt;(), benchEndpoint)

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Authorization group&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; authorized := r.Group("/", AuthRequired())&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; exactly the same as:&lt;/span&gt;
	&lt;span class="pl-smi"&gt;authorized&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; r.&lt;span class="pl-c1"&gt;Group&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; per group middleware! in this case we use the custom created&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; AuthRequired() middleware just in the "authorized" group.&lt;/span&gt;
	authorized.&lt;span class="pl-c1"&gt;Use&lt;/span&gt;(&lt;span class="pl-c1"&gt;AuthRequired&lt;/span&gt;())
	{
		authorized.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/login&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, loginEndpoint)
		authorized.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/submit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, submitEndpoint)
		authorized.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/read&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, readEndpoint)

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nested group&lt;/span&gt;
		&lt;span class="pl-smi"&gt;testing&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; authorized.&lt;span class="pl-c1"&gt;Group&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		testing.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/analytics&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, analyticsEndpoint)
	}

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and serve on 0.0.0.0:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-write-log-file" class="anchor" aria-hidden="true" href="#how-to-write-log-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to write log file&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Disable Console Color, you don't need console color when writing the logs to file.&lt;/span&gt;
    gin.&lt;span class="pl-c1"&gt;DisableConsoleColor&lt;/span&gt;()

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Logging to a file.&lt;/span&gt;
    &lt;span class="pl-smi"&gt;f&lt;/span&gt;, &lt;span class="pl-smi"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; os.&lt;span class="pl-c1"&gt;Create&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gin.log&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    gin.&lt;span class="pl-smi"&gt;DefaultWriter&lt;/span&gt; = io.&lt;span class="pl-c1"&gt;MultiWriter&lt;/span&gt;(f)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use the following code if you need to write the logs to file and console at the same time.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; gin.DefaultWriter = io.MultiWriter(f, os.Stdout)&lt;/span&gt;

    &lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
    router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ping&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
        c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pong&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })

    router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-log-format" class="anchor" aria-hidden="true" href="#custom-log-format"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Log Format&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;New&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LoggerWithFormatter middleware will write the logs to gin.DefaultWriter&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; By default gin.DefaultWriter = os.Stdout&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;Use&lt;/span&gt;(gin.&lt;span class="pl-c1"&gt;LoggerWithFormatter&lt;/span&gt;(&lt;span class="pl-k"&gt;func&lt;/span&gt;(param gin.&lt;span class="pl-smi"&gt;LogFormatterParams&lt;/span&gt;) &lt;span class="pl-k"&gt;string&lt;/span&gt; {

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; your custom format&lt;/span&gt;
		&lt;span class="pl-k"&gt;return&lt;/span&gt; fmt.&lt;span class="pl-c1"&gt;Sprintf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt; - [&lt;span class="pl-c1"&gt;%s&lt;/span&gt;] &lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt; &lt;span class="pl-c1"&gt;%s&lt;/span&gt; &lt;span class="pl-c1"&gt;%s&lt;/span&gt; &lt;span class="pl-c1"&gt;%d&lt;/span&gt; &lt;span class="pl-c1"&gt;%s&lt;/span&gt; &lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\"&lt;/span&gt; &lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\"\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
				param.&lt;span class="pl-smi"&gt;ClientIP&lt;/span&gt;,
				param.&lt;span class="pl-smi"&gt;TimeStamp&lt;/span&gt;.&lt;span class="pl-c1"&gt;Format&lt;/span&gt;(time.&lt;span class="pl-smi"&gt;RFC1123&lt;/span&gt;),
				param.&lt;span class="pl-smi"&gt;Method&lt;/span&gt;,
				param.&lt;span class="pl-smi"&gt;Path&lt;/span&gt;,
				param.&lt;span class="pl-smi"&gt;Request&lt;/span&gt;.&lt;span class="pl-smi"&gt;Proto&lt;/span&gt;,
				param.&lt;span class="pl-smi"&gt;StatusCode&lt;/span&gt;,
				param.&lt;span class="pl-smi"&gt;Latency&lt;/span&gt;,
				param.&lt;span class="pl-smi"&gt;Request&lt;/span&gt;.&lt;span class="pl-c1"&gt;UserAgent&lt;/span&gt;(),
				param.&lt;span class="pl-smi"&gt;ErrorMessage&lt;/span&gt;,
		)
	}))
	router.&lt;span class="pl-c1"&gt;Use&lt;/span&gt;(gin.&lt;span class="pl-c1"&gt;Recovery&lt;/span&gt;())

	router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ping&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pong&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	})

	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;::1 - [Fri, 07 Dec 2018 17:04:38 JST] "GET /ping HTTP/1.1 200 122.767µs "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.80 Safari/537.36" "
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-controlling-log-output-coloring" class="anchor" aria-hidden="true" href="#controlling-log-output-coloring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controlling Log output coloring&lt;/h3&gt;
&lt;p&gt;By default, logs output on console should be colorized depending on the detected TTY.&lt;/p&gt;
&lt;p&gt;Never colorize logs:&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Disable log's color&lt;/span&gt;
    gin.&lt;span class="pl-c1"&gt;DisableConsoleColor&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Creates a gin router with default middleware:&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logger and recovery (crash-free) middleware&lt;/span&gt;
    &lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
    
    router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ping&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
        c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pong&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
    
    router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Always colorize logs:&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Force log's color&lt;/span&gt;
    gin.&lt;span class="pl-c1"&gt;ForceConsoleColor&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Creates a gin router with default middleware:&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logger and recovery (crash-free) middleware&lt;/span&gt;
    &lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
    
    router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ping&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
        c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pong&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
    
    router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-model-binding-and-validation" class="anchor" aria-hidden="true" href="#model-binding-and-validation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model binding and validation&lt;/h3&gt;
&lt;p&gt;To bind a request body into a type, use model binding. We currently support binding of JSON, XML, YAML and standard form values (foo=bar&amp;amp;boo=baz).&lt;/p&gt;
&lt;p&gt;Gin uses &lt;a href="https://github.com/go-playground/validator"&gt;&lt;strong&gt;go-playground/validator.v8&lt;/strong&gt;&lt;/a&gt; for validation. Check the full docs on tags usage &lt;a href="http://godoc.org/gopkg.in/go-playground/validator.v8#hdr-Baked_In_Validators_and_Tags" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that you need to set the corresponding binding tag on all fields you want to bind. For example, when binding from JSON, set &lt;code&gt;json:"fieldname"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Also, Gin provides two sets of methods for binding:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt; - Must bind
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Methods&lt;/strong&gt; - &lt;code&gt;Bind&lt;/code&gt;, &lt;code&gt;BindJSON&lt;/code&gt;, &lt;code&gt;BindXML&lt;/code&gt;, &lt;code&gt;BindQuery&lt;/code&gt;, &lt;code&gt;BindYAML&lt;/code&gt;, &lt;code&gt;BindHeader&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Behavior&lt;/strong&gt; - These methods use &lt;code&gt;MustBindWith&lt;/code&gt; under the hood. If there is a binding error, the request is aborted with &lt;code&gt;c.AbortWithError(400, err).SetType(ErrorTypeBind)&lt;/code&gt;. This sets the response status code to 400 and the &lt;code&gt;Content-Type&lt;/code&gt; header is set to &lt;code&gt;text/plain; charset=utf-8&lt;/code&gt;. Note that if you try to set the response code after this, it will result in a warning &lt;code&gt;[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 422&lt;/code&gt;. If you wish to have greater control over the behavior, consider using the &lt;code&gt;ShouldBind&lt;/code&gt; equivalent method.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt; - Should bind
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Methods&lt;/strong&gt; - &lt;code&gt;ShouldBind&lt;/code&gt;, &lt;code&gt;ShouldBindJSON&lt;/code&gt;, &lt;code&gt;ShouldBindXML&lt;/code&gt;, &lt;code&gt;ShouldBindQuery&lt;/code&gt;, &lt;code&gt;ShouldBindYAML&lt;/code&gt;, &lt;code&gt;ShouldBindHeader&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Behavior&lt;/strong&gt; - These methods use &lt;code&gt;ShouldBindWith&lt;/code&gt; under the hood. If there is a binding error, the error is returned and it is the developer's responsibility to handle the request and error appropriately.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When using the Bind-method, Gin tries to infer the binder depending on the Content-Type header. If you are sure what you are binding, you can use &lt;code&gt;MustBindWith&lt;/code&gt; or &lt;code&gt;ShouldBindWith&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can also specify that specific fields are required. If a field is decorated with &lt;code&gt;binding:"required"&lt;/code&gt; and has a empty value when binding, an error will be returned.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Binding from JSON&lt;/span&gt;
&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-v"&gt;Login&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
	&lt;span class="pl-v"&gt;User&lt;/span&gt;     &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"user" json:"user" xml:"user"  binding:"required"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-v"&gt;Password&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"password" json:"password" xml:"password" binding:"required"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Example for binding JSON ({"user": "manu", "password": "123"})&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/loginJSON&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;json&lt;/span&gt; Login
		&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBindJSON&lt;/span&gt;(&amp;amp;json); err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusBadRequest&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: err.&lt;span class="pl-c1"&gt;Error&lt;/span&gt;()})
			&lt;span class="pl-k"&gt;return&lt;/span&gt;
		}
		
		&lt;span class="pl-k"&gt;if&lt;/span&gt; json.&lt;span class="pl-smi"&gt;User&lt;/span&gt; != &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;manu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; || json.&lt;span class="pl-smi"&gt;Password&lt;/span&gt; != &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusUnauthorized&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unauthorized&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
			&lt;span class="pl-k"&gt;return&lt;/span&gt;
		} 
		
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;you are logged in&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Example for binding XML (&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;	&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;	&amp;lt;root&amp;gt;&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;		&amp;lt;user&amp;gt;user&amp;lt;/user&amp;gt;&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;		&amp;lt;password&amp;gt;123&amp;lt;/password&amp;gt;&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;	&amp;lt;/root&amp;gt;)&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/loginXML&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;xml&lt;/span&gt; Login
		&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBindXML&lt;/span&gt;(&amp;amp;xml); err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusBadRequest&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: err.&lt;span class="pl-c1"&gt;Error&lt;/span&gt;()})
			&lt;span class="pl-k"&gt;return&lt;/span&gt;
		}
		
		&lt;span class="pl-k"&gt;if&lt;/span&gt; xml.&lt;span class="pl-smi"&gt;User&lt;/span&gt; != &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;manu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; || xml.&lt;span class="pl-smi"&gt;Password&lt;/span&gt; != &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusUnauthorized&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unauthorized&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
			&lt;span class="pl-k"&gt;return&lt;/span&gt;
		} 
		
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;you are logged in&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Example for binding a HTML form (user=manu&amp;amp;password=123)&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/loginForm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;form&lt;/span&gt; Login
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This will infer what binder to use depending on the content-type header.&lt;/span&gt;
		&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBind&lt;/span&gt;(&amp;amp;form); err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusBadRequest&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: err.&lt;span class="pl-c1"&gt;Error&lt;/span&gt;()})
			&lt;span class="pl-k"&gt;return&lt;/span&gt;
		}
		
		&lt;span class="pl-k"&gt;if&lt;/span&gt; form.&lt;span class="pl-smi"&gt;User&lt;/span&gt; != &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;manu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; || form.&lt;span class="pl-smi"&gt;Password&lt;/span&gt; != &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusUnauthorized&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unauthorized&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
			&lt;span class="pl-k"&gt;return&lt;/span&gt;
		} 
		
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;you are logged in&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and serve on 0.0.0.0:8080&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample request&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ curl -v -X POST \
  http://localhost:8080/loginJSON \
  -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;content-type: application/json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
  -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{ "user": "manu" }&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; POST /loginJSON HTTP/1.1
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Host: localhost:8080
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; User-Agent: curl/7.51.0
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Accept: &lt;span class="pl-k"&gt;*&lt;/span&gt;/&lt;span class="pl-k"&gt;*&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; content-type: application/json
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Content-Length: 18
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;*&lt;/span&gt; upload completely sent off: 18 out of 18 bytes
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; HTTP/1.1 400 Bad Request
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; Content-Type: application/json&lt;span class="pl-k"&gt;;&lt;/span&gt; charset=utf-8
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; Date: Fri, 04 Aug 2017 03:51:31 GMT
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; Content-Length: 100
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Key: 'Login.Password' Error:Field validation for 'Password' failed on the 'required' tag&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Skip validate&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When running the above example using the above the &lt;code&gt;curl&lt;/code&gt; command, it returns error. Because the example use &lt;code&gt;binding:"required"&lt;/code&gt; for &lt;code&gt;Password&lt;/code&gt;. If use &lt;code&gt;binding:"-"&lt;/code&gt; for &lt;code&gt;Password&lt;/code&gt;, then it will not return error when running the above example again.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-custom-validators" class="anchor" aria-hidden="true" href="#custom-validators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Validators&lt;/h3&gt;
&lt;p&gt;It is also possible to register custom validators. See the &lt;a href="https://github.com/gin-gonic/examples/tree/master/custom-validation/server.go"&gt;example code&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;net/http&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflect&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin/binding&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gopkg.in/go-playground/validator.v8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Booking contains binded and validated data.&lt;/span&gt;
&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-v"&gt;Booking&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
	&lt;span class="pl-v"&gt;CheckIn&lt;/span&gt;  time.&lt;span class="pl-smi"&gt;Time&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"check_in" binding:"required,bookabledate" time_format:"2006-01-02"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-v"&gt;CheckOut&lt;/span&gt; time.&lt;span class="pl-smi"&gt;Time&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"check_out" binding:"required,gtfield=CheckIn" time_format:"2006-01-02"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-c1"&gt;bookableDate&lt;/span&gt;(
	v *validator.&lt;span class="pl-smi"&gt;Validate&lt;/span&gt;, topStruct reflect.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;, currentStructOrField reflect.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;,
	field reflect.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;, fieldType reflect.&lt;span class="pl-smi"&gt;Type&lt;/span&gt;, fieldKind reflect.&lt;span class="pl-smi"&gt;Kind&lt;/span&gt;, param &lt;span class="pl-k"&gt;string&lt;/span&gt;,
) &lt;span class="pl-k"&gt;bool&lt;/span&gt; {
	&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt;, &lt;span class="pl-smi"&gt;ok&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; field.&lt;span class="pl-c1"&gt;Interface&lt;/span&gt;().(time.&lt;span class="pl-smi"&gt;Time&lt;/span&gt;); ok {
		&lt;span class="pl-smi"&gt;today&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; time.&lt;span class="pl-c1"&gt;Now&lt;/span&gt;()
		&lt;span class="pl-k"&gt;if&lt;/span&gt; today.&lt;span class="pl-c1"&gt;After&lt;/span&gt;(date) {
			&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
		}
	}
	&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;route&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;, &lt;span class="pl-smi"&gt;ok&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; binding.&lt;span class="pl-smi"&gt;Validator&lt;/span&gt;.&lt;span class="pl-c1"&gt;Engine&lt;/span&gt;().(*validator.&lt;span class="pl-smi"&gt;Validate&lt;/span&gt;); ok {
		v.&lt;span class="pl-c1"&gt;RegisterValidation&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookabledate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, bookableDate)
	}

	route.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/bookable&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, getBookable)
	route.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8085&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;getBookable&lt;/span&gt;(&lt;span class="pl-v"&gt;c&lt;/span&gt; *&lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;Context&lt;/span&gt;) {
	&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt; Booking
	&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBindWith&lt;/span&gt;(&amp;amp;b, binding.&lt;span class="pl-smi"&gt;Query&lt;/span&gt;); err == &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Booking dates are valid!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
	} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusBadRequest&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: err.&lt;span class="pl-c1"&gt;Error&lt;/span&gt;()})
	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;curl &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost:8085/bookable?check_in=2018-04-16&amp;amp;check_out=2018-04-17&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;{"message":"Booking dates are valid!"}&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;curl &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost:8085/bookable?check_in=2018-03-08&amp;amp;check_out=2018-03-09&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;{"error":"Key: 'Booking.CheckIn' Error:Field validation for 'CheckIn' failed on the 'bookabledate' tag"}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://github.com/go-playground/validator/releases/tag/v8.7"&gt;Struct level validations&lt;/a&gt; can also be registered this way.
See the &lt;a href="https://github.com/gin-gonic/examples/tree/master/struct-lvl-validations"&gt;struct-lvl-validation example&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-only-bind-query-string" class="anchor" aria-hidden="true" href="#only-bind-query-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Only Bind Query String&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ShouldBindQuery&lt;/code&gt; function only binds the query params and not the post data. See the &lt;a href="https://github.com/gin-gonic/gin/issues/742#issuecomment-315953017"&gt;detail information&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;log&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-v"&gt;Person&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
	&lt;span class="pl-v"&gt;Name&lt;/span&gt;    &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"name"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-v"&gt;Address&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"address"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;route&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	route.&lt;span class="pl-c1"&gt;Any&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/testing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, startPage)
	route.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8085&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;startPage&lt;/span&gt;(&lt;span class="pl-v"&gt;c&lt;/span&gt; *&lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;Context&lt;/span&gt;) {
	&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person&lt;/span&gt; Person
	&lt;span class="pl-k"&gt;if&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBindQuery&lt;/span&gt;(&amp;amp;person) == &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
		log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;====== Only Bind By Query String ======&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(person.&lt;span class="pl-smi"&gt;Name&lt;/span&gt;)
		log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(person.&lt;span class="pl-smi"&gt;Address&lt;/span&gt;)
	}
	c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Success&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-bind-query-string-or-post-data" class="anchor" aria-hidden="true" href="#bind-query-string-or-post-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bind Query String or Post Data&lt;/h3&gt;
&lt;p&gt;See the &lt;a href="https://github.com/gin-gonic/gin/issues/742#issuecomment-264681292"&gt;detail information&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;log&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-v"&gt;Person&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
        &lt;span class="pl-v"&gt;Name&lt;/span&gt;       &lt;span class="pl-k"&gt;string&lt;/span&gt;    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"name"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-v"&gt;Address&lt;/span&gt;    &lt;span class="pl-k"&gt;string&lt;/span&gt;    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"address"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-v"&gt;Birthday&lt;/span&gt;   time.&lt;span class="pl-smi"&gt;Time&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"birthday" time_format:"2006-01-02" time_utc:"1"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-v"&gt;CreateTime&lt;/span&gt; time.&lt;span class="pl-smi"&gt;Time&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"createTime" time_format:"unixNano"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-v"&gt;UnixTime&lt;/span&gt;   time.&lt;span class="pl-smi"&gt;Time&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"unixTime" time_format:"unix"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;route&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	route.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/testing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, startPage)
	route.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8085&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;startPage&lt;/span&gt;(&lt;span class="pl-v"&gt;c&lt;/span&gt; *&lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;Context&lt;/span&gt;) {
	&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person&lt;/span&gt; Person
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If `GET`, only `Form` binding engine (`query`) used.&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If `POST`, first checks the `content-type` for `JSON` or `XML`, then uses `Form` (`form-data`).&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; See more at https://github.com/gin-gonic/gin/blob/master/binding/binding.go#L48&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBind&lt;/span&gt;(&amp;amp;person) == &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
                log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(person.&lt;span class="pl-smi"&gt;Name&lt;/span&gt;)
                log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(person.&lt;span class="pl-smi"&gt;Address&lt;/span&gt;)
                log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(person.&lt;span class="pl-smi"&gt;Birthday&lt;/span&gt;)
                log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(person.&lt;span class="pl-smi"&gt;CreateTime&lt;/span&gt;)
                log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(person.&lt;span class="pl-smi"&gt;UnixTime&lt;/span&gt;)
        }

	c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Success&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test it with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ curl -X GET &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost:8085/testing?name=appleboy&amp;amp;address=xyz&amp;amp;birthday=1992-03-15&amp;amp;createTime=1562400033000000123&amp;amp;unixTime=1562400033&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-bind-uri" class="anchor" aria-hidden="true" href="#bind-uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bind Uri&lt;/h3&gt;
&lt;p&gt;See the &lt;a href="https://github.com/gin-gonic/gin/issues/846"&gt;detail information&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-v"&gt;Person&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
	&lt;span class="pl-v"&gt;ID&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;uri:"id" binding:"required,uuid"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-v"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;uri:"name" binding:"required"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;route&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	route.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/:name/:id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person&lt;/span&gt; Person
		&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBindUri&lt;/span&gt;(&amp;amp;person); err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;400&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;msg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: err})
			&lt;span class="pl-k"&gt;return&lt;/span&gt;
		}
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: person.&lt;span class="pl-smi"&gt;Name&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;uuid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: person.&lt;span class="pl-smi"&gt;ID&lt;/span&gt;})
	})
	route.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8088&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test it with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ curl -v localhost:8088/thinkerou/987fbc97-4bed-5078-9f07-9141ba07c9f3
$ curl -v localhost:8088/thinkerou/not-uuid&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-bind-header" class="anchor" aria-hidden="true" href="#bind-header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bind Header&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fmt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;type&lt;/span&gt; testHeader &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
	&lt;span class="pl-v"&gt;Rate&lt;/span&gt;   &lt;span class="pl-k"&gt;int&lt;/span&gt;    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;header:"Rate"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-v"&gt;Domain&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;header:"Domain"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;h&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; testHeader{}

		&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBindHeader&lt;/span&gt;(&amp;amp;h); err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, err)
		}

		fmt.&lt;span class="pl-c1"&gt;Printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%#v&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, h)
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Rate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: h.&lt;span class="pl-smi"&gt;Rate&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Domain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: h.&lt;span class="pl-smi"&gt;Domain&lt;/span&gt;})
	})

	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; client&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; curl -H "rate:300" -H "domain:music" 127.0.0.1:8080/&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; output&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"Domain":"music","Rate":300}&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-bind-html-checkboxes" class="anchor" aria-hidden="true" href="#bind-html-checkboxes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bind HTML checkboxes&lt;/h3&gt;
&lt;p&gt;See the &lt;a href="https://github.com/gin-gonic/gin/issues/129#issuecomment-124260092"&gt;detail information&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;main.go&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;...

&lt;span class="pl-k"&gt;type&lt;/span&gt; myForm &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
    &lt;span class="pl-v"&gt;Colors&lt;/span&gt; []&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"colors[]"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

...

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;formHandler&lt;/span&gt;(&lt;span class="pl-v"&gt;c&lt;/span&gt; *&lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;Context&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;fakeForm&lt;/span&gt; myForm
    c.&lt;span class="pl-c1"&gt;ShouldBind&lt;/span&gt;(&amp;amp;fakeForm)
    c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: fakeForm.&lt;span class="pl-smi"&gt;Colors&lt;/span&gt;})
}

...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;form.html&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;form&lt;/span&gt; &lt;span class="pl-e"&gt;action&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;method&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;POST&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;Check some colors&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;label&lt;/span&gt; &lt;span class="pl-e"&gt;for&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;Red&amp;lt;/&lt;span class="pl-ent"&gt;label&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;input&lt;/span&gt; &lt;span class="pl-e"&gt;type&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;checkbox&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;colors[]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;id&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;label&lt;/span&gt; &lt;span class="pl-e"&gt;for&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;green&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;Green&amp;lt;/&lt;span class="pl-ent"&gt;label&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;input&lt;/span&gt; &lt;span class="pl-e"&gt;type&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;checkbox&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;colors[]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;green&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;id&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;green&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;label&lt;/span&gt; &lt;span class="pl-e"&gt;for&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;blue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;Blue&amp;lt;/&lt;span class="pl-ent"&gt;label&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;input&lt;/span&gt; &lt;span class="pl-e"&gt;type&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;checkbox&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;colors[]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;blue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;id&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;blue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;input&lt;/span&gt; &lt;span class="pl-e"&gt;type&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;submit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;form&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;result:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{"color":["red","green","blue"]}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-multiparturlencoded-binding" class="anchor" aria-hidden="true" href="#multiparturlencoded-binding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multipart/Urlencoded binding&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-v"&gt;ProfileForm&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
	&lt;span class="pl-v"&gt;Name&lt;/span&gt;   &lt;span class="pl-k"&gt;string&lt;/span&gt;                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"name" binding:"required"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-v"&gt;Avatar&lt;/span&gt; *multipart.&lt;span class="pl-smi"&gt;FileHeader&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"avatar" binding:"required"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or for multiple files&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Avatars []*multipart.FileHeader `form:"avatar" binding:"required"`&lt;/span&gt;
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	router.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/profile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; you can bind multipart form with explicit binding declaration:&lt;/span&gt;
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; c.ShouldBindWith(&amp;amp;form, binding.Form)&lt;/span&gt;
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or you can simply use autobinding with ShouldBind method:&lt;/span&gt;
		&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;form&lt;/span&gt; ProfileForm
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; in this case proper binding will be automatically selected&lt;/span&gt;
		&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBind&lt;/span&gt;(&amp;amp;form); err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusBadRequest&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bad request&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
			&lt;span class="pl-k"&gt;return&lt;/span&gt;
		}

		&lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;SaveUploadedFile&lt;/span&gt;(form.&lt;span class="pl-smi"&gt;Avatar&lt;/span&gt;, form.&lt;span class="pl-smi"&gt;Avatar&lt;/span&gt;.&lt;span class="pl-smi"&gt;Filename&lt;/span&gt;)
		&lt;span class="pl-k"&gt;if&lt;/span&gt; err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusInternalServerError&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unknown error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
			&lt;span class="pl-k"&gt;return&lt;/span&gt;
		}

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; db.Save(&amp;amp;form)&lt;/span&gt;

		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ok&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	})
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test it with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ curl -X POST -v --form name=user --form &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;avatar=@./avatar.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; http://localhost:8080/profile&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-xml-json-yaml-and-protobuf-rendering" class="anchor" aria-hidden="true" href="#xml-json-yaml-and-protobuf-rendering"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XML, JSON, YAML and ProtoBuf rendering&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; gin.H is a shortcut for map[string]interface{}&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someJSON&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;})
	})

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/moreJSON&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You also can use a struct&lt;/span&gt;
		&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;msg&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
			Name    &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;json:"user"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
			Message &lt;span class="pl-k"&gt;string&lt;/span&gt;
			Number  &lt;span class="pl-k"&gt;int&lt;/span&gt;
		}
		msg.&lt;span class="pl-smi"&gt;Name&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Lena&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
		msg.&lt;span class="pl-smi"&gt;Message&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
		msg.&lt;span class="pl-smi"&gt;Number&lt;/span&gt; = &lt;span class="pl-c1"&gt;123&lt;/span&gt;
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note that msg.Name becomes "user" in the JSON&lt;/span&gt;
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Will output  :   {"user": "Lena", "Message": "hey", "Number": 123}&lt;/span&gt;
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, msg)
	})

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someXML&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;XML&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;})
	})

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someYAML&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;YAML&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;})
	})

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someProtoBuf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;reps&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; []&lt;span class="pl-k"&gt;int64&lt;/span&gt;{&lt;span class="pl-k"&gt;int64&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;), &lt;span class="pl-c1"&gt;int64&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)}
		&lt;span class="pl-smi"&gt;label&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The specific definition of protobuf is written in the testdata/protoexample file.&lt;/span&gt;
		&lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &amp;amp;protoexample.&lt;span class="pl-smi"&gt;Test&lt;/span&gt;{
			Label: &amp;amp;label,
			Reps:  reps,
		}
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note that data becomes binary data in the response&lt;/span&gt;
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Will output protoexample.Test protobuf serialized data&lt;/span&gt;
		c.&lt;span class="pl-c1"&gt;ProtoBuf&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, data)
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and serve on 0.0.0.0:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-securejson" class="anchor" aria-hidden="true" href="#securejson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SecureJSON&lt;/h4&gt;
&lt;p&gt;Using SecureJSON to prevent json hijacking. Default prepends &lt;code&gt;"while(1),"&lt;/code&gt; to response body if the given struct is array values.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can also use your own secure json prefix&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; r.SecureJsonPrefix(")]}',\n")&lt;/span&gt;

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someJSON&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;names&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; []&lt;span class="pl-k"&gt;string&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lena&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;austin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Will output  :   while(1);["lena","austin","foo"]&lt;/span&gt;
		c.&lt;span class="pl-c1"&gt;SecureJSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, names)
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and serve on 0.0.0.0:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-jsonp" class="anchor" aria-hidden="true" href="#jsonp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSONP&lt;/h4&gt;
&lt;p&gt;Using JSONP to request data from a server  in a different domain. Add callback to response body if the query parameter callback exists.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/JSONP&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		}
		
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;callback is x&lt;/span&gt;
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Will output  :   x({\"foo\":\"bar\"})&lt;/span&gt;
		c.&lt;span class="pl-c1"&gt;JSONP&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, data)
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and serve on 0.0.0.0:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; client&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; curl http://127.0.0.1:8080/JSONP?callback=x&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-asciijson" class="anchor" aria-hidden="true" href="#asciijson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AsciiJSON&lt;/h4&gt;
&lt;p&gt;Using AsciiJSON to Generates ASCII-only JSON with escaped non-ASCII characters.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someJSON&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lang&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GO语言&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tag&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;br&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		}

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will output : {"lang":"GO\u8bed\u8a00","tag":"\u003cbr\u003e"}&lt;/span&gt;
		c.&lt;span class="pl-c1"&gt;AsciiJSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, data)
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and serve on 0.0.0.0:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-purejson" class="anchor" aria-hidden="true" href="#purejson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PureJSON&lt;/h4&gt;
&lt;p&gt;Normally, JSON replaces special HTML characters with their unicode entities, e.g. &lt;code&gt;&amp;lt;&lt;/code&gt; becomes  &lt;code&gt;\u003c&lt;/code&gt;. If you want to encode such characters literally, you can use PureJSON instead.
This feature is unavailable in Go 1.6 and lower.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Serves unicode entities&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;b&amp;gt;Hello, world!&amp;lt;/b&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		})
	})
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Serves literal characters&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/purejson&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;PureJSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;b&amp;gt;Hello, world!&amp;lt;/b&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		})
	})
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; listen and serve on 0.0.0.0:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-serving-static-files" class="anchor" aria-hidden="true" href="#serving-static-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serving static files&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	router.&lt;span class="pl-c1"&gt;Static&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/assets&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./assets&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	router.&lt;span class="pl-c1"&gt;StaticFS&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/more_static&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, http.&lt;span class="pl-c1"&gt;Dir&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my_file_system&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
	router.&lt;span class="pl-c1"&gt;StaticFile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/favicon.ico&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./resources/favicon.ico&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and serve on 0.0.0.0:8080&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-serving-data-from-reader" class="anchor" aria-hidden="true" href="#serving-data-from-reader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serving data from reader&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/someDataFromReader&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;response&lt;/span&gt;, &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; http.&lt;span class="pl-c1"&gt;Get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://raw.githubusercontent.com/gin-gonic/logo/master/color.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		&lt;span class="pl-k"&gt;if&lt;/span&gt; err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; || response.&lt;span class="pl-smi"&gt;StatusCode&lt;/span&gt; != http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;Status&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusServiceUnavailable&lt;/span&gt;)
			&lt;span class="pl-k"&gt;return&lt;/span&gt;
		}

		&lt;span class="pl-smi"&gt;reader&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; response.&lt;span class="pl-smi"&gt;Body&lt;/span&gt;
		&lt;span class="pl-smi"&gt;contentLength&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; response.&lt;span class="pl-smi"&gt;ContentLength&lt;/span&gt;
		&lt;span class="pl-smi"&gt;contentType&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; response.&lt;span class="pl-smi"&gt;Header&lt;/span&gt;.&lt;span class="pl-c1"&gt;Get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

		&lt;span class="pl-smi"&gt;extraHeaders&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &lt;span class="pl-k"&gt;map&lt;/span&gt;[&lt;span class="pl-k"&gt;string&lt;/span&gt;]&lt;span class="pl-k"&gt;string&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Disposition&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;attachment; filename="gopher.png"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;,
		}

		c.&lt;span class="pl-c1"&gt;DataFromReader&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, contentLength, contentType, reader, extraHeaders)
	})
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-html-rendering" class="anchor" aria-hidden="true" href="#html-rendering"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTML rendering&lt;/h3&gt;
&lt;p&gt;Using LoadHTMLGlob() or LoadHTMLFiles()&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	router.&lt;span class="pl-c1"&gt;LoadHTMLGlob&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;templates/*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;router.LoadHTMLFiles("templates/template1.html", "templates/template2.html")&lt;/span&gt;
	router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/index&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;HTML&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;index.tmpl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Main website&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		})
	})
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;templates/index.tmpl&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
		{{ .title }}
	&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using templates with same name in different directories&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	router.&lt;span class="pl-c1"&gt;LoadHTMLGlob&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;templates/**/*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/posts/index&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;HTML&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;posts/index.tmpl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Posts&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		})
	})
	router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/users/index&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;HTML&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;users/index.tmpl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		})
	})
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;templates/posts/index.tmpl&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;{{ define "posts/index.tmpl" }}
&amp;lt;&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
	{{ .title }}
&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;Using posts/index.tmpl&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;templates/users/index.tmpl&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;{{ define "users/index.tmpl" }}
&amp;lt;&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
	{{ .title }}
&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;Using users/index.tmpl&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-custom-template-renderer" class="anchor" aria-hidden="true" href="#custom-template-renderer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Template renderer&lt;/h4&gt;
&lt;p&gt;You can also use your own html template render&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html/template&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	&lt;span class="pl-smi"&gt;html&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; template.&lt;span class="pl-c1"&gt;Must&lt;/span&gt;(template.&lt;span class="pl-c1"&gt;ParseFiles&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
	router.&lt;span class="pl-c1"&gt;SetHTMLTemplate&lt;/span&gt;(html)
	router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-custom-delimiters" class="anchor" aria-hidden="true" href="#custom-delimiters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Delimiters&lt;/h4&gt;
&lt;p&gt;You may use custom delims&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	r.&lt;span class="pl-c1"&gt;Delims&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{[{&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;}]}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	r.&lt;span class="pl-c1"&gt;LoadHTMLGlob&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/templates&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-custom-template-funcs" class="anchor" aria-hidden="true" href="#custom-template-funcs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Template Funcs&lt;/h4&gt;
&lt;p&gt;See the detail &lt;a href="https://github.com/gin-gonic/examples/tree/master/template"&gt;example code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;main.go&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; (
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fmt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html/template&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;net/http&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;formatAsDate&lt;/span&gt;(&lt;span class="pl-v"&gt;t&lt;/span&gt; &lt;span class="pl-v"&gt;time&lt;/span&gt;.&lt;span class="pl-v"&gt;Time&lt;/span&gt;) &lt;span class="pl-v"&gt;string&lt;/span&gt; {
    &lt;span class="pl-smi"&gt;year&lt;/span&gt;, &lt;span class="pl-smi"&gt;month&lt;/span&gt;, &lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; t.&lt;span class="pl-c1"&gt;Date&lt;/span&gt;()
    &lt;span class="pl-k"&gt;return&lt;/span&gt; fmt.&lt;span class="pl-c1"&gt;Sprintf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d%02d&lt;/span&gt;/&lt;span class="pl-c1"&gt;%02d&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, year, month, day)
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
    router.&lt;span class="pl-c1"&gt;Delims&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{[{&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;}]}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    router.&lt;span class="pl-c1"&gt;SetFuncMap&lt;/span&gt;(template.&lt;span class="pl-smi"&gt;FuncMap&lt;/span&gt;{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;formatAsDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: formatAsDate,
    })
    router.&lt;span class="pl-c1"&gt;LoadHTMLFiles&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./testdata/template/raw.tmpl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/raw&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
        c.&lt;span class="pl-c1"&gt;HTML&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;raw.tmpl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;now&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: time.&lt;span class="pl-c1"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;2017&lt;/span&gt;, &lt;span class="pl-c1"&gt;07&lt;/span&gt;, &lt;span class="pl-c1"&gt;01&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, time.&lt;span class="pl-smi"&gt;UTC&lt;/span&gt;),
        })
    })

    router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;raw.tmpl&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;Date: {[{.now | formatAsDate}]}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Result:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Date: 2017/07/01
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-multitemplate" class="anchor" aria-hidden="true" href="#multitemplate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multitemplate&lt;/h3&gt;
&lt;p&gt;Gin allow by default use only one html.Template. Check &lt;a href="https://github.com/gin-contrib/multitemplate"&gt;a multitemplate render&lt;/a&gt; for using features like go 1.6 &lt;code&gt;block template&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-redirects" class="anchor" aria-hidden="true" href="#redirects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Redirects&lt;/h3&gt;
&lt;p&gt;Issuing a HTTP redirect is easy. Both internal and external locations are supported.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
	c.&lt;span class="pl-c1"&gt;Redirect&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusMovedPermanently&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.google.com/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Issuing a Router redirect, use &lt;code&gt;HandleContext&lt;/code&gt; like below.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
    c.&lt;span class="pl-smi"&gt;Request&lt;/span&gt;.&lt;span class="pl-smi"&gt;URL&lt;/span&gt;.&lt;span class="pl-smi"&gt;Path&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/test2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    r.&lt;span class="pl-c1"&gt;HandleContext&lt;/span&gt;(c)
})
r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/test2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
    c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
})&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-middleware" class="anchor" aria-hidden="true" href="#custom-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Middleware&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;Logger&lt;/span&gt;() &lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;HandlerFunc&lt;/span&gt; {
	&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;t&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; time.&lt;span class="pl-c1"&gt;Now&lt;/span&gt;()

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set example variable&lt;/span&gt;
		c.&lt;span class="pl-c1"&gt;Set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12345&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; before request&lt;/span&gt;

		c.&lt;span class="pl-c1"&gt;Next&lt;/span&gt;()

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; after request&lt;/span&gt;
		&lt;span class="pl-smi"&gt;latency&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; time.&lt;span class="pl-c1"&gt;Since&lt;/span&gt;(t)
		log.&lt;span class="pl-c1"&gt;Print&lt;/span&gt;(latency)

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; access the status we are sending&lt;/span&gt;
		&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-smi"&gt;Writer&lt;/span&gt;.&lt;span class="pl-c1"&gt;Status&lt;/span&gt;()
		log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(status)
	}
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;New&lt;/span&gt;()
	r.&lt;span class="pl-c1"&gt;Use&lt;/span&gt;(&lt;span class="pl-c1"&gt;Logger&lt;/span&gt;())

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-smi"&gt;example&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;MustGet&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).(&lt;span class="pl-k"&gt;string&lt;/span&gt;)

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; it would print: "12345"&lt;/span&gt;
		log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(example)
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and serve on 0.0.0.0:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-basicauth-middleware" class="anchor" aria-hidden="true" href="#using-basicauth-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using BasicAuth() middleware&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; simulate some private data&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;secrets&lt;/span&gt; = gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:    gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo@bar.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;phone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123433&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;austin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;austin@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;phone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;666&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lena&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:   gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lena@guapa.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;phone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;523443&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Group using gin.BasicAuth() middleware&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; gin.Accounts is a shortcut for map[string]string&lt;/span&gt;
	&lt;span class="pl-smi"&gt;authorized&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; r.&lt;span class="pl-c1"&gt;Group&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/admin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, gin.&lt;span class="pl-c1"&gt;BasicAuth&lt;/span&gt;(gin.&lt;span class="pl-smi"&gt;Accounts&lt;/span&gt;{
		&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;austin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lena&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;manu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4321&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
	}))

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; /admin/secrets endpoint&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; hit "localhost:8080/admin/secrets&lt;/span&gt;
	authorized.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/secrets&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; get user, it was set by the BasicAuth middleware&lt;/span&gt;
		&lt;span class="pl-smi"&gt;user&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;MustGet&lt;/span&gt;(gin.&lt;span class="pl-smi"&gt;AuthUserKey&lt;/span&gt;).(&lt;span class="pl-k"&gt;string&lt;/span&gt;)
		&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;secret&lt;/span&gt;, &lt;span class="pl-smi"&gt;ok&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; secrets[user]; ok {
			c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: user, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: secret})
		} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
			c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: user, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NO SECRET :(&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
		}
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and serve on 0.0.0.0:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-goroutines-inside-a-middleware" class="anchor" aria-hidden="true" href="#goroutines-inside-a-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Goroutines inside a middleware&lt;/h3&gt;
&lt;p&gt;When starting new Goroutines inside a middleware or handler, you &lt;strong&gt;SHOULD NOT&lt;/strong&gt; use the original context inside it, you have to use a read-only copy.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/long_async&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create copy to be used inside the goroutine&lt;/span&gt;
		&lt;span class="pl-smi"&gt;cCp&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;Copy&lt;/span&gt;()
		&lt;span class="pl-k"&gt;go&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt;() {
			&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; simulate a long task with time.Sleep(). 5 seconds&lt;/span&gt;
			time.&lt;span class="pl-c1"&gt;Sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt; * time.&lt;span class="pl-smi"&gt;Second&lt;/span&gt;)

			&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; note that you are using the copied context "cCp", IMPORTANT&lt;/span&gt;
			log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Done! in path &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; + cCp.&lt;span class="pl-smi"&gt;Request&lt;/span&gt;.&lt;span class="pl-smi"&gt;URL&lt;/span&gt;.&lt;span class="pl-smi"&gt;Path&lt;/span&gt;)
		}()
	})

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/long_sync&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; simulate a long task with time.Sleep(). 5 seconds&lt;/span&gt;
		time.&lt;span class="pl-c1"&gt;Sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt; * time.&lt;span class="pl-smi"&gt;Second&lt;/span&gt;)

		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; since we are NOT using a goroutine, we do not have to copy the context&lt;/span&gt;
		log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Done! in path &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; + c.&lt;span class="pl-smi"&gt;Request&lt;/span&gt;.&lt;span class="pl-smi"&gt;URL&lt;/span&gt;.&lt;span class="pl-smi"&gt;Path&lt;/span&gt;)
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and serve on 0.0.0.0:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-http-configuration" class="anchor" aria-hidden="true" href="#custom-http-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom HTTP configuration&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;http.ListenAndServe()&lt;/code&gt; directly, like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	http.&lt;span class="pl-c1"&gt;ListenAndServe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, router)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-smi"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &amp;amp;http.&lt;span class="pl-smi"&gt;Server&lt;/span&gt;{
		Addr:           &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		Handler:        router,
		ReadTimeout:    &lt;span class="pl-c1"&gt;10&lt;/span&gt; * time.&lt;span class="pl-smi"&gt;Second&lt;/span&gt;,
		WriteTimeout:   &lt;span class="pl-c1"&gt;10&lt;/span&gt; * time.&lt;span class="pl-smi"&gt;Second&lt;/span&gt;,
		MaxHeaderBytes: &lt;span class="pl-c1"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;,
	}
	s.&lt;span class="pl-c1"&gt;ListenAndServe&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-support-lets-encrypt" class="anchor" aria-hidden="true" href="#support-lets-encrypt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support Let's Encrypt&lt;/h3&gt;
&lt;p&gt;example for 1-line LetsEncrypt HTTPS servers.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;log&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/autotls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Ping handler&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ping&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pong&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	})

	log.&lt;span class="pl-c1"&gt;Fatal&lt;/span&gt;(autotls.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(r, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example1.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example2.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;example for custom autocert manager.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;log&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/autotls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;golang.org/x/crypto/acme/autocert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Ping handler&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ping&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pong&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	})

	&lt;span class="pl-smi"&gt;m&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; autocert.&lt;span class="pl-smi"&gt;Manager&lt;/span&gt;{
		Prompt:     autocert.&lt;span class="pl-smi"&gt;AcceptTOS&lt;/span&gt;,
		HostPolicy: autocert.&lt;span class="pl-c1"&gt;HostWhitelist&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example1.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example2.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
		Cache:      autocert.&lt;span class="pl-c1"&gt;DirCache&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/var/www/.cache&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
	}

	log.&lt;span class="pl-c1"&gt;Fatal&lt;/span&gt;(autotls.&lt;span class="pl-c1"&gt;RunWithManager&lt;/span&gt;(r, &amp;amp;m))
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-run-multiple-service-using-gin" class="anchor" aria-hidden="true" href="#run-multiple-service-using-gin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run multiple service using Gin&lt;/h3&gt;
&lt;p&gt;See the &lt;a href="https://github.com/gin-gonic/gin/issues/346"&gt;question&lt;/a&gt; and try the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;log&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;net/http&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;golang.org/x/sync/errgroup&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;var&lt;/span&gt; (
	g errgroup.&lt;span class="pl-smi"&gt;Group&lt;/span&gt;
)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;router01&lt;/span&gt;() &lt;span class="pl-v"&gt;http&lt;/span&gt;.&lt;span class="pl-v"&gt;Handler&lt;/span&gt; {
	&lt;span class="pl-smi"&gt;e&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;New&lt;/span&gt;()
	e.&lt;span class="pl-c1"&gt;Use&lt;/span&gt;(gin.&lt;span class="pl-c1"&gt;Recovery&lt;/span&gt;())
	e.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(
			http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;,
			gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
				&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;code&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:  http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;,
				&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Welcome server 01&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
			},
		)
	})

	&lt;span class="pl-k"&gt;return&lt;/span&gt; e
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;router02&lt;/span&gt;() &lt;span class="pl-v"&gt;http&lt;/span&gt;.&lt;span class="pl-v"&gt;Handler&lt;/span&gt; {
	&lt;span class="pl-smi"&gt;e&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;New&lt;/span&gt;()
	e.&lt;span class="pl-c1"&gt;Use&lt;/span&gt;(gin.&lt;span class="pl-c1"&gt;Recovery&lt;/span&gt;())
	e.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(
			http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;,
			gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
				&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;code&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:  http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;,
				&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Welcome server 02&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
			},
		)
	})

	&lt;span class="pl-k"&gt;return&lt;/span&gt; e
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;server01&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &amp;amp;http.&lt;span class="pl-smi"&gt;Server&lt;/span&gt;{
		Addr:         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		Handler:      &lt;span class="pl-c1"&gt;router01&lt;/span&gt;(),
		ReadTimeout:  &lt;span class="pl-c1"&gt;5&lt;/span&gt; * time.&lt;span class="pl-smi"&gt;Second&lt;/span&gt;,
		WriteTimeout: &lt;span class="pl-c1"&gt;10&lt;/span&gt; * time.&lt;span class="pl-smi"&gt;Second&lt;/span&gt;,
	}

	&lt;span class="pl-smi"&gt;server02&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &amp;amp;http.&lt;span class="pl-smi"&gt;Server&lt;/span&gt;{
		Addr:         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8081&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		Handler:      &lt;span class="pl-c1"&gt;router02&lt;/span&gt;(),
		ReadTimeout:  &lt;span class="pl-c1"&gt;5&lt;/span&gt; * time.&lt;span class="pl-smi"&gt;Second&lt;/span&gt;,
		WriteTimeout: &lt;span class="pl-c1"&gt;10&lt;/span&gt; * time.&lt;span class="pl-smi"&gt;Second&lt;/span&gt;,
	}

	g.&lt;span class="pl-c1"&gt;Go&lt;/span&gt;(&lt;span class="pl-k"&gt;func&lt;/span&gt;() &lt;span class="pl-k"&gt;error&lt;/span&gt; {
		&lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; server01.&lt;span class="pl-c1"&gt;ListenAndServe&lt;/span&gt;()
		&lt;span class="pl-k"&gt;if&lt;/span&gt; err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &amp;amp;&amp;amp; err != http.&lt;span class="pl-smi"&gt;ErrServerClosed&lt;/span&gt; {
			log.&lt;span class="pl-c1"&gt;Fatal&lt;/span&gt;(err)
		}
		&lt;span class="pl-k"&gt;return&lt;/span&gt; err
	})

	g.&lt;span class="pl-c1"&gt;Go&lt;/span&gt;(&lt;span class="pl-k"&gt;func&lt;/span&gt;() &lt;span class="pl-k"&gt;error&lt;/span&gt; {
		&lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; server02.&lt;span class="pl-c1"&gt;ListenAndServe&lt;/span&gt;()
		&lt;span class="pl-k"&gt;if&lt;/span&gt; err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &amp;amp;&amp;amp; err != http.&lt;span class="pl-smi"&gt;ErrServerClosed&lt;/span&gt; {
			log.&lt;span class="pl-c1"&gt;Fatal&lt;/span&gt;(err)
		}
		&lt;span class="pl-k"&gt;return&lt;/span&gt; err
	})

	&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; g.&lt;span class="pl-c1"&gt;Wait&lt;/span&gt;(); err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
		log.&lt;span class="pl-c1"&gt;Fatal&lt;/span&gt;(err)
	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-graceful-restart-or-stop" class="anchor" aria-hidden="true" href="#graceful-restart-or-stop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graceful restart or stop&lt;/h3&gt;
&lt;p&gt;Do you want to graceful restart or stop your web server?
There are some ways this can be done.&lt;/p&gt;
&lt;p&gt;We can use &lt;a href="https://github.com/fvbock/endless"&gt;fvbock/endless&lt;/a&gt; to replace the default &lt;code&gt;ListenAndServe&lt;/code&gt;. Refer issue &lt;a href="https://github.com/gin-gonic/gin/issues/296"&gt;#296&lt;/a&gt; for more details.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, handler)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [...]&lt;/span&gt;
endless.&lt;span class="pl-c1"&gt;ListenAndServe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:4242&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, router)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternative to endless:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/braintree/manners"&gt;manners&lt;/a&gt;: A polite Go HTTP server that shuts down gracefully.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tylerb/graceful"&gt;graceful&lt;/a&gt;: Graceful is a Go package enabling graceful shutdown of an http.Handler server.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebookgo/grace"&gt;grace&lt;/a&gt;: Graceful restart &amp;amp; zero downtime deploy for Go servers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are using Go 1.8, you may not need to use this library! Consider using http.Server's built-in &lt;a href="https://golang.org/pkg/net/http/#Server.Shutdown" rel="nofollow"&gt;Shutdown()&lt;/a&gt; method for graceful shutdowns. See the full &lt;a href="https://github.com/gin-gonic/examples/tree/master/graceful-shutdown"&gt;graceful-shutdown&lt;/a&gt; example with gin.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; +build go1.8&lt;/span&gt;

&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;context&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;log&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;net/http&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;os&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;os/signal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;syscall&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		time.&lt;span class="pl-c1"&gt;Sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt; * time.&lt;span class="pl-smi"&gt;Second&lt;/span&gt;)
		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Welcome Gin Server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	})

	&lt;span class="pl-smi"&gt;srv&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &amp;amp;http.&lt;span class="pl-smi"&gt;Server&lt;/span&gt;{
		Addr:    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		Handler: router,
	}

	&lt;span class="pl-k"&gt;go&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt;() {
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; service connections&lt;/span&gt;
		&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; srv.&lt;span class="pl-c1"&gt;ListenAndServe&lt;/span&gt;(); err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &amp;amp;&amp;amp; err != http.&lt;span class="pl-smi"&gt;ErrServerClosed&lt;/span&gt; {
			log.&lt;span class="pl-c1"&gt;Fatalf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;listen: &lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
		}
	}()

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wait for interrupt signal to gracefully shutdown the server with&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a timeout of 5 seconds.&lt;/span&gt;
	&lt;span class="pl-smi"&gt;quit&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &lt;span class="pl-c1"&gt;make&lt;/span&gt;(&lt;span class="pl-k"&gt;chan&lt;/span&gt; os.&lt;span class="pl-smi"&gt;Signal&lt;/span&gt;)
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; kill (no param) default send syscall.SIGTERM&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; kill -2 is syscall.SIGINT&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; kill -9 is syscall.SIGKILL but can't be catch, so don't need add it&lt;/span&gt;
	signal.&lt;span class="pl-c1"&gt;Notify&lt;/span&gt;(quit, syscall.&lt;span class="pl-smi"&gt;SIGINT&lt;/span&gt;, syscall.&lt;span class="pl-smi"&gt;SIGTERM&lt;/span&gt;)
	&lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt;quit
	log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Shutdown Server ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

	&lt;span class="pl-smi"&gt;ctx&lt;/span&gt;, &lt;span class="pl-smi"&gt;cancel&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; context.&lt;span class="pl-c1"&gt;WithTimeout&lt;/span&gt;(context.&lt;span class="pl-c1"&gt;Background&lt;/span&gt;(), &lt;span class="pl-c1"&gt;5&lt;/span&gt;*time.&lt;span class="pl-smi"&gt;Second&lt;/span&gt;)
	&lt;span class="pl-k"&gt;defer&lt;/span&gt; &lt;span class="pl-c1"&gt;cancel&lt;/span&gt;()
	&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; srv.&lt;span class="pl-c1"&gt;Shutdown&lt;/span&gt;(ctx); err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
		log.&lt;span class="pl-c1"&gt;Fatal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Server Shutdown:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
	}
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; catching ctx.Done(). timeout of 5 seconds.&lt;/span&gt;
	&lt;span class="pl-k"&gt;select&lt;/span&gt; {
	&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt;ctx.&lt;span class="pl-c1"&gt;Done&lt;/span&gt;():
		log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;timeout of 5 seconds.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	}
	log.&lt;span class="pl-c1"&gt;Println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Server exiting&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-build-a-single-binary-with-templates" class="anchor" aria-hidden="true" href="#build-a-single-binary-with-templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build a single binary with templates&lt;/h3&gt;
&lt;p&gt;You can build a server into a single binary containing templates by using &lt;a href="https://github.com/jessevdk/go-assets"&gt;go-assets&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;New&lt;/span&gt;()

	&lt;span class="pl-smi"&gt;t&lt;/span&gt;, &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &lt;span class="pl-c1"&gt;loadTemplate&lt;/span&gt;()
	&lt;span class="pl-k"&gt;if&lt;/span&gt; err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
		&lt;span class="pl-c1"&gt;panic&lt;/span&gt;(err)
	}
	r.&lt;span class="pl-c1"&gt;SetHTMLTemplate&lt;/span&gt;(t)

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;HTML&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/html/index.tmpl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
	})
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; loadTemplate loads templates embedded by go-assets-builder&lt;/span&gt;
&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;loadTemplate&lt;/span&gt;() (*&lt;span class="pl-v"&gt;template&lt;/span&gt;.&lt;span class="pl-v"&gt;Template&lt;/span&gt;, &lt;span class="pl-v"&gt;error&lt;/span&gt;) {
	&lt;span class="pl-smi"&gt;t&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; template.&lt;span class="pl-c1"&gt;New&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-smi"&gt;file&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &lt;span class="pl-k"&gt;range&lt;/span&gt; Assets.&lt;span class="pl-smi"&gt;Files&lt;/span&gt; {
		&lt;span class="pl-k"&gt;defer&lt;/span&gt; file.&lt;span class="pl-c1"&gt;Close&lt;/span&gt;()
		&lt;span class="pl-k"&gt;if&lt;/span&gt; file.&lt;span class="pl-c1"&gt;IsDir&lt;/span&gt;() || !strings.&lt;span class="pl-c1"&gt;HasSuffix&lt;/span&gt;(name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.tmpl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
			&lt;span class="pl-k"&gt;continue&lt;/span&gt;
		}
		&lt;span class="pl-smi"&gt;h&lt;/span&gt;, &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; ioutil.&lt;span class="pl-c1"&gt;ReadAll&lt;/span&gt;(file)
		&lt;span class="pl-k"&gt;if&lt;/span&gt; err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
			&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, err
		}
		t, err = t.&lt;span class="pl-c1"&gt;New&lt;/span&gt;(name).&lt;span class="pl-c1"&gt;Parse&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;(h))
		&lt;span class="pl-k"&gt;if&lt;/span&gt; err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
			&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, err
		}
	}
	&lt;span class="pl-k"&gt;return&lt;/span&gt; t, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See a complete example in the &lt;code&gt;https://github.com/gin-gonic/examples/tree/master/assets-in-binary&lt;/code&gt; directory.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bind-form-data-request-with-custom-struct" class="anchor" aria-hidden="true" href="#bind-form-data-request-with-custom-struct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bind form-data request with custom struct&lt;/h3&gt;
&lt;p&gt;The follow example using custom struct:&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-v"&gt;StructA&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
    &lt;span class="pl-v"&gt;FieldA&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"field_a"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-v"&gt;StructB&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
    &lt;span class="pl-v"&gt;NestedStruct&lt;/span&gt; &lt;span class="pl-v"&gt;StructA&lt;/span&gt;
    &lt;span class="pl-v"&gt;FieldB&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"field_b"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-v"&gt;StructC&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
    &lt;span class="pl-v"&gt;NestedStructPointer&lt;/span&gt; *StructA
    &lt;span class="pl-v"&gt;FieldC&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"field_c"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-v"&gt;StructD&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
    &lt;span class="pl-v"&gt;NestedAnonyStruct&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
        FieldX &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"field_x"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
    }
    &lt;span class="pl-v"&gt;FieldD&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;form:"field_d"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;GetDataB&lt;/span&gt;(&lt;span class="pl-v"&gt;c&lt;/span&gt; *&lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;Context&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt; StructB
    c.&lt;span class="pl-c1"&gt;Bind&lt;/span&gt;(&amp;amp;b)
    c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: b.&lt;span class="pl-smi"&gt;NestedStruct&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: b.&lt;span class="pl-smi"&gt;FieldB&lt;/span&gt;,
    })
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;GetDataC&lt;/span&gt;(&lt;span class="pl-v"&gt;c&lt;/span&gt; *&lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;Context&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt; StructC
    c.&lt;span class="pl-c1"&gt;Bind&lt;/span&gt;(&amp;amp;b)
    c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: b.&lt;span class="pl-smi"&gt;NestedStructPointer&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: b.&lt;span class="pl-smi"&gt;FieldC&lt;/span&gt;,
    })
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;GetDataD&lt;/span&gt;(&lt;span class="pl-v"&gt;c&lt;/span&gt; *&lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;Context&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt; StructD
    c.&lt;span class="pl-c1"&gt;Bind&lt;/span&gt;(&amp;amp;b)
    c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: b.&lt;span class="pl-smi"&gt;NestedAnonyStruct&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: b.&lt;span class="pl-smi"&gt;FieldD&lt;/span&gt;,
    })
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
    r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/getb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, GetDataB)
    r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/getc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, GetDataC)
    r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/getd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, GetDataD)

    r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the command &lt;code&gt;curl&lt;/code&gt; command result:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl "http://localhost:8080/getb?field_a=hello&amp;amp;field_b=world"
{"a":{"FieldA":"hello"},"b":"world"}
$ curl "http://localhost:8080/getc?field_a=hello&amp;amp;field_c=world"
{"a":{"FieldA":"hello"},"c":"world"}
$ curl "http://localhost:8080/getd?field_x=hello&amp;amp;field_d=world"
{"d":"world","x":{"FieldX":"hello"}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-try-to-bind-body-into-different-structs" class="anchor" aria-hidden="true" href="#try-to-bind-body-into-different-structs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try to bind body into different structs&lt;/h3&gt;
&lt;p&gt;The normal methods for binding request body consumes &lt;code&gt;c.Request.Body&lt;/code&gt; and they
cannot be called multiple times.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;type&lt;/span&gt; formA &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
  &lt;span class="pl-v"&gt;Foo&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;json:"foo" xml:"foo" binding:"required"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;type&lt;/span&gt; formB &lt;span class="pl-k"&gt;struct&lt;/span&gt; {
  &lt;span class="pl-v"&gt;Bar&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;json:"bar" xml:"bar" binding:"required"&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;SomeHandler&lt;/span&gt;(&lt;span class="pl-v"&gt;c&lt;/span&gt; *&lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;Context&lt;/span&gt;) {
  &lt;span class="pl-smi"&gt;objA&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; formA{}
  &lt;span class="pl-smi"&gt;objB&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; formB{}
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This c.ShouldBind consumes c.Request.Body and it cannot be reused.&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;errA&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBind&lt;/span&gt;(&amp;amp;objA); errA == &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
    c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;the body should be formA&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Always an error is occurred by this because c.Request.Body is EOF now.&lt;/span&gt;
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;errB&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBind&lt;/span&gt;(&amp;amp;objB); errB == &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
    c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;the body should be formB&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;)
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    ...
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For this, you can use &lt;code&gt;c.ShouldBindBodyWith&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;SomeHandler&lt;/span&gt;(&lt;span class="pl-v"&gt;c&lt;/span&gt; *&lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;Context&lt;/span&gt;) {
  &lt;span class="pl-smi"&gt;objA&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; formA{}
  &lt;span class="pl-smi"&gt;objB&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; formB{}
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This reads c.Request.Body and stores the result into the context.&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;errA&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBindBodyWith&lt;/span&gt;(&amp;amp;objA, binding.&lt;span class="pl-smi"&gt;JSON&lt;/span&gt;); errA == &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
    c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;the body should be formA&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; At this time, it reuses body stored in the context.&lt;/span&gt;
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;errB&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBindBodyWith&lt;/span&gt;(&amp;amp;objB, binding.&lt;span class="pl-smi"&gt;JSON&lt;/span&gt;); errB == &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
    c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;the body should be formB JSON&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; And it can accepts other formats&lt;/span&gt;
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;errB2&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;ShouldBindBodyWith&lt;/span&gt;(&amp;amp;objB, binding.&lt;span class="pl-smi"&gt;XML&lt;/span&gt;); errB2 == &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
    c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;the body should be formB XML&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;)
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    ...
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;c.ShouldBindBodyWith&lt;/code&gt; stores body into the context before binding. This has
a slight impact to performance, so you should not use this method if you are
enough to call binding at once.&lt;/li&gt;
&lt;li&gt;This feature is only needed for some formats -- &lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;XML&lt;/code&gt;, &lt;code&gt;MsgPack&lt;/code&gt;,
&lt;code&gt;ProtoBuf&lt;/code&gt;. For other formats, &lt;code&gt;Query&lt;/code&gt;, &lt;code&gt;Form&lt;/code&gt;, &lt;code&gt;FormPost&lt;/code&gt;, &lt;code&gt;FormMultipart&lt;/code&gt;,
can be called by &lt;code&gt;c.ShouldBind()&lt;/code&gt; multiple times without any damage to
performance (See &lt;a href="https://github.com/gin-gonic/gin/pull/1341"&gt;#1341&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-http2-server-push" class="anchor" aria-hidden="true" href="#http2-server-push"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;http2 server push&lt;/h3&gt;
&lt;p&gt;http.Pusher is supported only &lt;strong&gt;go1.8+&lt;/strong&gt;. See the &lt;a href="https://blog.golang.org/h2push" rel="nofollow"&gt;golang blog&lt;/a&gt; for detail information.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html/template&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;log&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;html&lt;/span&gt; = template.&lt;span class="pl-c1"&gt;Must&lt;/span&gt;(template.&lt;span class="pl-c1"&gt;New&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;Parse&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;title&amp;gt;Https Test&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;script src="/assets/app.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;h1 style="color:red;"&amp;gt;Welcome, Ginner!&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;))

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	r.&lt;span class="pl-c1"&gt;Static&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/assets&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./assets&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	r.&lt;span class="pl-c1"&gt;SetHTMLTemplate&lt;/span&gt;(html)

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;pusher&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-smi"&gt;Writer&lt;/span&gt;.&lt;span class="pl-c1"&gt;Pusher&lt;/span&gt;(); pusher != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
			&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use pusher.Push() to do server push&lt;/span&gt;
			&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; pusher.&lt;span class="pl-c1"&gt;Push&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/assets/app.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;); err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
				log.&lt;span class="pl-c1"&gt;Printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed to push: &lt;span class="pl-c1"&gt;%v&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
			}
		}
		c.&lt;span class="pl-c1"&gt;HTML&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, gin.&lt;span class="pl-smi"&gt;H&lt;/span&gt;{
			&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;success&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		})
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and Server in https://127.0.0.1:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;RunTLS&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./testdata/server.pem&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./testdata/server.key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-define-format-for-the-log-of-routes" class="anchor" aria-hidden="true" href="#define-format-for-the-log-of-routes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Define format for the log of routes&lt;/h3&gt;
&lt;p&gt;The default log of routes is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[GIN-debug] POST   /foo                      --&amp;gt; main.main.func1 (3 handlers)
[GIN-debug] GET    /bar                      --&amp;gt; main.main.func2 (3 handlers)
[GIN-debug] GET    /status                   --&amp;gt; main.main.func3 (3 handlers)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to log this information in given format (e.g. JSON, key values or something else), then you can define this format with &lt;code&gt;gin.DebugPrintRouteFunc&lt;/code&gt;.
In the example below, we log all routes with standard log package but you can use another log tools that suits of your needs.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;log&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;net/http&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	gin.&lt;span class="pl-smi"&gt;DebugPrintRouteFunc&lt;/span&gt; = &lt;span class="pl-c1"&gt;func&lt;/span&gt;(httpMethod, absolutePath, handlerName &lt;span class="pl-k"&gt;string&lt;/span&gt;, nuHandlers &lt;span class="pl-k"&gt;int&lt;/span&gt;) {
		log.&lt;span class="pl-c1"&gt;Printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;endpoint &lt;span class="pl-c1"&gt;%v&lt;/span&gt; &lt;span class="pl-c1"&gt;%v&lt;/span&gt; &lt;span class="pl-c1"&gt;%v&lt;/span&gt; &lt;span class="pl-c1"&gt;%v&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, httpMethod, absolutePath, handlerName, nuHandlers)
	}

	r.&lt;span class="pl-c1"&gt;POST&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	})

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	})

	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;(http.&lt;span class="pl-smi"&gt;StatusOK&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ok&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	})

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Listen and Server in http://0.0.0.0:8080&lt;/span&gt;
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-set-and-get-a-cookie" class="anchor" aria-hidden="true" href="#set-and-get-a-cookie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set and get a cookie&lt;/h3&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; (
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fmt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/gin-gonic/gin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {

    &lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()

    router.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/cookie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {

        &lt;span class="pl-smi"&gt;cookie&lt;/span&gt;, &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; c.&lt;span class="pl-c1"&gt;Cookie&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gin_cookie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        &lt;span class="pl-k"&gt;if&lt;/span&gt; err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            cookie = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NotSet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            c.&lt;span class="pl-c1"&gt;SetCookie&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gin_cookie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3600&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        }

        fmt.&lt;span class="pl-c1"&gt;Printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cookie value: &lt;span class="pl-c1"&gt;%s&lt;/span&gt; &lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cookie)
    })

    router.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;net/http/httptest&lt;/code&gt; package is preferable way for HTTP testing.&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;setupRouter&lt;/span&gt;() *&lt;span class="pl-v"&gt;gin&lt;/span&gt;.&lt;span class="pl-v"&gt;Engine&lt;/span&gt; {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; gin.&lt;span class="pl-c1"&gt;Default&lt;/span&gt;()
	r.&lt;span class="pl-c1"&gt;GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ping&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;func&lt;/span&gt;(c *gin.&lt;span class="pl-smi"&gt;Context&lt;/span&gt;) {
		c.&lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pong&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	})
	&lt;span class="pl-k"&gt;return&lt;/span&gt; r
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &lt;span class="pl-c1"&gt;setupRouter&lt;/span&gt;()
	r.&lt;span class="pl-c1"&gt;Run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test for code example above:&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; (
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;net/http&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;net/http/httptest&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/stretchr/testify/assert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;TestPingRoute&lt;/span&gt;(&lt;span class="pl-v"&gt;t&lt;/span&gt; *&lt;span class="pl-v"&gt;testing&lt;/span&gt;.&lt;span class="pl-v"&gt;T&lt;/span&gt;) {
	&lt;span class="pl-smi"&gt;router&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; &lt;span class="pl-c1"&gt;setupRouter&lt;/span&gt;()

	&lt;span class="pl-smi"&gt;w&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; httptest.&lt;span class="pl-c1"&gt;NewRecorder&lt;/span&gt;()
	&lt;span class="pl-smi"&gt;req&lt;/span&gt;, &lt;span class="pl-smi"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; http.&lt;span class="pl-c1"&gt;NewRequest&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GET&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ping&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
	router.&lt;span class="pl-c1"&gt;ServeHTTP&lt;/span&gt;(w, req)

	assert.&lt;span class="pl-c1"&gt;Equal&lt;/span&gt;(t, &lt;span class="pl-c1"&gt;200&lt;/span&gt;, w.&lt;span class="pl-smi"&gt;Code&lt;/span&gt;)
	assert.&lt;span class="pl-c1"&gt;Equal&lt;/span&gt;(t, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pong&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, w.&lt;span class="pl-smi"&gt;Body&lt;/span&gt;.&lt;span class="pl-c1"&gt;String&lt;/span&gt;())
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-users" class="anchor" aria-hidden="true" href="#users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Users&lt;/h2&gt;
&lt;p&gt;Awesome project lists using &lt;a href="https://github.com/gin-gonic/gin"&gt;Gin&lt;/a&gt; web framework.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/appleboy/gorush"&gt;gorush&lt;/a&gt;: A push notification server written in Go.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fnproject/fn"&gt;fnproject&lt;/a&gt;: The container native, cloud agnostic serverless platform.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/photoprism/photoprism"&gt;photoprism&lt;/a&gt;: Personal photo management powered by Go and Google TensorFlow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devopsfaith/krakend"&gt;krakend&lt;/a&gt;: Ultra performant API Gateway with middlewares.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoas/picfit"&gt;picfit&lt;/a&gt;: An image resizing server written in Go.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brigadecore/brigade"&gt;brigade&lt;/a&gt;: Event-based Scripting for Kubernetes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gin-gonic</author><guid isPermaLink="false">https://github.com/gin-gonic/gin</guid><pubDate>Sun, 01 Dec 2019 00:22:00 GMT</pubDate></item><item><title>alibaba/p3c #23 in All Languages, This month</title><link>https://github.com/alibaba/p3c</link><description>&lt;p&gt;&lt;i&gt;Alibaba Java Coding Guidelines pmd implements and IDE plugin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://detail.tmall.com/item.htm?spm=a1zb6.8232479.0.0.17f533e9VNZxB2&amp;amp;id=575107529181&amp;amp;cm_id=140105335569ed55e27b&amp;amp;abbucket=15" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89402009a196b32d47de80bb4314bce750180568/68747470733a2f2f696d672e616c6963646e2e636f6d2f7466732f544231664a416a636972704b31526a535a466858585853645858612d373036382d313230312e6a7067" data-canonical-src="https://img.alicdn.com/tfs/TB1fJAjcirpK1RjSZFhXXXSdXXa-7068-1201.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
2018年9月22日，在2018杭州云栖大会上，召开《码出高效：Java 开发手册》新书发布会，并宣布将图书所有收益均捐赠于技术公益项目“83行代码计划”。&lt;/p&gt;
&lt;p&gt;阿里巴巴正式在2018杭州云栖大会《开发者生态峰会》上，由阿里巴巴高年级同学中间件负责人林昊、阿里巴巴研究员刘湘雯、阿里巴巴研究员刘国华，OpenJDK社区Committer杨晓峰，全栈视障工程师蔡勇斌，电子工业出版社博文视点出版公司总经理郭立以及两位图书作者杨冠宝（孤尽）和高海慧（鸣莎）重磅大咖联合发布新书&lt;a href="https://detail.tmall.com/item.htm?spm=a1zb6.8232479.0.0.17f533e9VNZxB2&amp;amp;id=575107529181&amp;amp;cm_id=140105335569ed55e27b&amp;amp;abbucket=15" rel="nofollow"&gt;《码出高效：Java开发手册》（跳转至天猫书店）&lt;/a&gt;，并宣布将图书所有收益均捐赠于技术公益项目“83行代码计划”，第一个“83行代码计划”行动，将围绕着帮助盲人工程师，开发更多无障碍化产品，让盲人上网更便捷。未来，我们会坚持用技术为公益行业赋能，也希望更多人成为技术受益者&amp;lt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ae1e22e461d7cd220d05ab1a578ca9d82aaa4052/68747470733a2f2f696d672e616c6963646e2e636f6d2f7466732f544231667875656441766f4b31526a535a464458585859337058612d313436352d3630332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ae1e22e461d7cd220d05ab1a578ca9d82aaa4052/68747470733a2f2f696d672e616c6963646e2e636f6d2f7466732f544231667875656441766f4b31526a535a464458585859337058612d313436352d3630332e706e67" alt="" data-canonical-src="https://img.alicdn.com/tfs/TB1fxuedAvoK1RjSZFDXXXY3pXa-1465-603.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2017年10月14日杭州云栖大会，Java代码规约扫描插件全球首发仪式正式启动，规范正式以插件形式公开走向业界，引领Java语言的规范之路。目前，插件已在&lt;a href="https://www.aliyun.com/product/yunxiao" rel="nofollow"&gt;云效公有云产品&lt;/a&gt;中集成，&lt;a href="https://rdc-test.aliyun.com" rel="nofollow"&gt;立即体验&lt;/a&gt;！（云效&amp;gt;公有云&amp;gt;设置-&amp;gt;测试服务-&amp;gt;阿里巴巴Java代码规约）。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-p3c" class="anchor" aria-hidden="true" href="#p3c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;P3C&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8cb994f6c4a156c623fe057fccd7fb7d7d2e8c9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322d3445423142412e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-preface" class="anchor" aria-hidden="true" href="#preface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preface&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;We are pleased to present Alibaba Java Coding Guidelines which consolidates the best programming practices over the years from Alibaba Group's technical teams. A vast number of Java programming teams impose demanding requirements on code quality across projects as we encourage reuse and better understanding of each other's programs. We have seen many programming problems in the past. For example, defective database table structures and index designs may cause software architecture flaws and performance risks. Another example is confusing code structures being difficult to maintain. Furthermore, vulnerable code without authentication is prone to hackers’ attacks. To address these kinds of problems, we developed this document for Java developers at Alibaba.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For more information please refer the &lt;em&gt;Alibaba Java Coding Guidelines&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文版: &lt;em&gt;&lt;a href="https://github.com/alibaba/p3c/blob/master/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%EF%BC%88%E5%8D%8E%E5%B1%B1%E7%89%88%EF%BC%89.pdf"&gt;阿里巴巴Java开发手册&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;English Version: &lt;em&gt;&lt;a href="https://alibaba.github.io/Alibaba-Java-Coding-Guidelines" rel="nofollow"&gt;Alibaba Java Coding Guidelines&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;《阿里巴巴Java开发手册》书籍版天猫官方店: &lt;em&gt;&lt;a href="https://detail.tmall.com/item.htm?spm=a1z2e.8325951.feedDetail.4.3315431gklIXe&amp;amp;id=562626792765&amp;amp;ns=1&amp;amp;abbucket=14" rel="nofollow"&gt;阿里巴巴Java开发手册最新版&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;《码出高效》书籍版天猫官方店: &lt;em&gt;&lt;a href="https://detail.tmall.com/item.htm?spm=a230r.1.14.40.7dee7d6bwpO82U&amp;amp;id=575107529181&amp;amp;ns=1&amp;amp;abbucket=20" rel="nofollow"&gt;码出高效：Java开发手册&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The project consists of 3 parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="p3c-pmd"&gt;PMD implementations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="idea-plugin"&gt;IntelliJ IDEA plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="eclipse-plugin"&gt;Eclipse plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-rules" class="anchor" aria-hidden="true" href="#rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h2&gt;
&lt;p&gt;Forty-nine rules are realized based on PMD, please refer the P3C-PMD documentation for more detailed information. Four rules are implemented within IDE plugins (IDEA and Eclipse) as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[Mandatory]&lt;/code&gt; Using a deprecated class or method is prohibited.&lt;br&gt;
Note: For example, decode(String source, String encode) should be used instead of the deprecated method decode(String encodeStr). Once an interface has been deprecated, the interface provider has the obligation to provide a new one. At the same time, client programmers have the obligation to check out what its new implementation is.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[Mandatory]&lt;/code&gt; An overridden method from an interface or abstract class must be marked with @Override annotation.
Counter example: For getObject() and get0bject(), the first one has a letter 'O', and the second one has a number '0'. To accurately determine whether the overriding is successful, an @Override annotation is necessary. Meanwhile, once the method signature in the abstract class is changed, the implementation class will report a compile-time error immediately.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[Mandatory]&lt;/code&gt; A static field or method should be directly referred by its class name instead of its corresponding object name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[Mandatory]&lt;/code&gt; The usage of hashCode and equals should follow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Override hashCode if equals is overridden.&lt;/li&gt;
&lt;li&gt;These two methods must be overridden for Set since they are used to ensure that no duplicate object will be inserted in Set.&lt;/li&gt;
&lt;li&gt;These two methods must be overridden if self-defined object is used as the key of Map.
Note: String can be used as the key of Map since these two methods have been rewritten.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-join-us" class="anchor" aria-hidden="true" href="#join-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join us&lt;/h2&gt;
&lt;p&gt;If you have any questions or comments, please contact junlie by email at &lt;a href="mailto:caikang.ck@alibaba-inc.com"&gt;caikang.ck@alibaba-inc.com&lt;/a&gt;, and please join us to make project P3C perfect for more programmers.&lt;/p&gt;
&lt;p&gt;Please follow our WeChat official account as ali_yunxiao below:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/236a44daa24cc521f94e08b12ff398480f3e918b/68747470733a2f2f67772e616c6963646e2e636f6d2f746673636f6d2f54423154724e63586a763835754a6a535a464e5858634a417058612e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/236a44daa24cc521f94e08b12ff398480f3e918b/68747470733a2f2f67772e616c6963646e2e636f6d2f746673636f6d2f54423154724e63586a763835754a6a535a464e5858634a417058612e706e67" alt="" data-canonical-src="https://gw.alicdn.com/tfscom/TB1TrNcXjv85uJjSZFNXXcJApXa.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>alibaba</author><guid isPermaLink="false">https://github.com/alibaba/p3c</guid><pubDate>Sun, 01 Dec 2019 00:23:00 GMT</pubDate></item><item><title>topjohnwu/Magisk #24 in All Languages, This month</title><link>https://github.com/topjohnwu/Magisk</link><description>&lt;p&gt;&lt;i&gt;A Magic Mask to Alter Android System Systemless-ly&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body MD" data-path="README.MD"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-magisk" class="anchor" aria-hidden="true" href="#magisk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Magisk&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/topjohnwu/Magisk/releases"&gt;Downloads&lt;/a&gt; | &lt;a href="https://topjohnwu.github.io/Magisk/" rel="nofollow"&gt;Documentation&lt;/a&gt; | &lt;a href="https://forum.xda-developers.com/apps/magisk/official-magisk-v7-universal-systemless-t3473445" rel="nofollow"&gt;XDA Thread&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Magisk is a suite of open source tools for customizing Android, supporting devices higher than Android 4.2 (API 17). It covers the fundamental parts for Android customization: root, boot scripts, SELinux patches, AVB2.0 / dm-verity / forceencrypt removals etc.&lt;/p&gt;
&lt;p&gt;Furthermore, Magisk provides a &lt;strong&gt;Systemless Interface&lt;/strong&gt; to alter the system (or vendor) arbitrarily while the actual partitions stay completely intact. With its systemless nature along with several other hacks, Magisk can hide modifications from nearly any system integrity verifications used in banking apps, corporation monitoring apps, game cheat detections, and most importantly &lt;a href="https://developer.android.com/training/safetynet/index.html" rel="nofollow"&gt;Google's SafetyNet API&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug Reports&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Make sure to install the latest &lt;a href="https://forum.xda-developers.com/apps/magisk/dev-magisk-canary-channel-bleeding-edge-t3839337" rel="nofollow"&gt;Canary Build&lt;/a&gt; before reporting any bugs!&lt;/strong&gt; &lt;strong&gt;DO NOT&lt;/strong&gt; report bugs that are already fixed upstream. Follow the instructions in the &lt;a href="https://forum.xda-developers.com/apps/magisk/dev-magisk-canary-channel-bleeding-edge-t3839337" rel="nofollow"&gt;Canary Channel XDA Thread&lt;/a&gt;, and report a bug either by &lt;a href="https://github.com/topjohnwu/Magisk/issues"&gt;opening an issue on GitHub&lt;/a&gt; or directly in the thread.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-environment-requirements" class="anchor" aria-hidden="true" href="#building-environment-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Environment Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Python 3: run &lt;code&gt;build.py&lt;/code&gt; script&lt;/li&gt;
&lt;li&gt;Java Development Kit (JDK) 8: Compile Magisk Manager and sign zips&lt;/li&gt;
&lt;li&gt;Latest Android SDK: set &lt;code&gt;ANDROID_HOME&lt;/code&gt; environment variable to the path to Android SDK&lt;/li&gt;
&lt;li&gt;Android NDK: Install NDK along with SDK (&lt;code&gt;$ANDROID_HOME/ndk-bundle&lt;/code&gt;), or optionally specify a custom path &lt;code&gt;ANDROID_NDK_HOME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(Windows Only) Python package Colorama: Install with &lt;code&gt;pip install colorama&lt;/code&gt;, used for ANSI color codes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-notes-and-instructions" class="anchor" aria-hidden="true" href="#building-notes-and-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Notes and Instructions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Clone sources with submodules: &lt;code&gt;git clone --recurse-submodules https://github.com/topjohnwu/Magisk.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Building is supported on macOS, Linux, and Windows. Official releases are built and tested with &lt;a href="https://github.com/topjohnwu/FrankeNDK"&gt;FrankeNDK&lt;/a&gt;; point &lt;code&gt;ANDROID_NDK_HOME&lt;/code&gt; to FrankeNDK if you want to use it for compiling.&lt;/li&gt;
&lt;li&gt;Set configurations in &lt;code&gt;config.prop&lt;/code&gt;. A sample file &lt;code&gt;config.prop.sample&lt;/code&gt; is provided as an example.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;build.py&lt;/code&gt; with argument &lt;code&gt;-h&lt;/code&gt; to see the built-in help message. The &lt;code&gt;-h&lt;/code&gt; option also works for each supported actions, e.g. &lt;code&gt;./build.py binary -h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;By default, &lt;code&gt;build.py&lt;/code&gt; build binaries and Magisk Manager in debug mode. If you want to build Magisk Manager in release mode (via the &lt;code&gt;-r, --release&lt;/code&gt; flag), you need a Java Keystore file &lt;code&gt;release-key.jks&lt;/code&gt; (only &lt;code&gt;JKS&lt;/code&gt; format is supported) to sign APKs and zips. For more information, check out &lt;a href="https://developer.android.com/studio/publish/app-signing.html#signing-manually" rel="nofollow"&gt;Google's Official Documentation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-translations" class="anchor" aria-hidden="true" href="#translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translations&lt;/h2&gt;
&lt;p&gt;Default string resources for Magisk Manager and its stub APK are located here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stub/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Translate each and place them in the respective locations (&lt;code&gt;[module]/src/main/res/values-[lang]/strings.xml&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-signature-verification" class="anchor" aria-hidden="true" href="#signature-verification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Signature Verification&lt;/h2&gt;
&lt;p&gt;Official release zips and APKs are signed with my personal private key. You can verify the key certificate to make sure the binaries you downloaded are not manipulated in anyway.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use the keytool command from JDK to print certificates&lt;/span&gt;
keytool -printcert -jarfile &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;APK or Magisk zip&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The output should contain the following signature&lt;/span&gt;
Owner: CN=John Wu, L=Taipei, C=TW
Issuer: CN=John Wu, L=Taipei, C=TW
Serial number: 50514879
Valid from: Sun Aug 14 13:23:44 EDT 2016 until: Tue Jul 21 13:23:44 EDT 2116
Certificate fingerprints:
	 MD5:  CE:DA:68:C1:E1:74:71:0A:EF:58:89:7D:AE:6E:AB:4F
	 SHA1: DC:0F:2B:61:CB:D7:E9:D3:DB:BE:06:0B:2B:87:0D:46:BB:06:02:11
	 SHA256: B4:CB:83:B4:DA:D9:9F:99:7D:BE:87:2F:01:3A:A1:6C:14:EE:C4:1D:16:70:21:F3:71:F7:E1:33:0F:27:3E:E6
	 Signature algorithm name: SHA256withRSA
	 Version: 3&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Magisk, including all git submodules are free software:
you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>topjohnwu</author><guid isPermaLink="false">https://github.com/topjohnwu/Magisk</guid><pubDate>Sun, 01 Dec 2019 00:24:00 GMT</pubDate></item><item><title>apple/swift #25 in All Languages, This month</title><link>https://github.com/apple/swift</link><description>&lt;p&gt;&lt;i&gt;The Swift Programming Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/de32b354687f1cd9b05a89e4aa03c7f2d311f294/68747470733a2f2f73776966742e6f72672f6173736574732f696d616765732f73776966742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de32b354687f1cd9b05a89e4aa03c7f2d311f294/68747470733a2f2f73776966742e6f72672f6173736574732f696d616765732f73776966742e737667" alt="Swift logo" height="70" data-canonical-src="https://swift.org/assets/images/swift.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-swift-programming-language" class="anchor" aria-hidden="true" href="#swift-programming-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Programming Language&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Master&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Package&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-incremental-RA-osx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/420ae09ae46d5931c1b7e6dff6e37d2459ce2def/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d696e6372656d656e74616c2d52412d6f73782f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-incremental-RA-osx/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-package-osx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58423c4e59db7442e7dc11bb235af62a1c6cbac3/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d7061636b6167652d6f73782f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-package-osx/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Ubuntu 16.04&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-incremental-RA-linux-ubuntu-16_04" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/06c5b99f4916a48b14f4c2718ad037f942988092/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d696e6372656d656e74616c2d52412d6c696e75782d7562756e74752d31365f30342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-incremental-RA-linux-ubuntu-16_04/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-package-linux-ubuntu-16_04" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5cf5c2953eeaa3b12e72a11b3383826c89674db5/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d7061636b6167652d6c696e75782d7562756e74752d31365f30342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-package-linux-ubuntu-16_04/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Ubuntu 18.04&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-incremental-RA-linux-ubuntu-18_04" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/047eaed5aec213f593331721a4fdc5880875f3ab/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d696e6372656d656e74616c2d52412d6c696e75782d7562756e74752d31385f30342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-incremental-RA-linux-ubuntu-18_04/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-package-linux-ubuntu-18_04" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2f3d6386ffa8caa9966d17eaf8397657beb231fd/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d7061636b6167652d6c696e75782d7562756e74752d31385f30342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-package-linux-ubuntu-18_04/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Swift Community-Hosted CI Platforms&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;OS&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Build&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/ppc64le_ubuntu_16_04.json"&gt;Ubuntu 16.04 &lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;PPC64LE&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-5.1-RA-linux-ubuntu-16.04-ppc64le" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6cf7576c61883b4750df90536b782541125cd6c8/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d352e312d52412d6c696e75782d7562756e74752d31362e30342d70706336346c652f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-5.1-RA-linux-ubuntu-16.04-ppc64le/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/aarch64_ubuntu_16.04.json"&gt;Ubuntu 16.04 &lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;AArch64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-aarch64" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/481396441fe3bea6e34c707490139c92363216be/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6c696e75782d7562756e74752d31362e30342d616172636836342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-aarch64/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_ubuntu_16_04_LTS_android.json"&gt;Android&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;ARMv7&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/afca45c4f049c77c6c32e66835390d0f8bd35cc7/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6c696e75782d7562756e74752d31362e30342d616e64726f69642f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_ubuntu_16_04_LTS_android.json"&gt;Android&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;AArch64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android-arm64" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99ccaba54dcaba7c43d255a307f9e011ea5e9184/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6c696e75782d7562756e74752d31362e30342d616e64726f69642d61726d36342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android-arm64/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_windows_2019.json"&gt;Windows 2019&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-windows-x86_64" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00518f70a51b8f0b27141bdc77e228dbdba54e8b/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d77696e646f77732d7838365f36342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-windows-x86_64/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Swift TensorFlow Community-Hosted CI Platforms&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;OS&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Build&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_ubuntu_16_04_tensorflow.json"&gt;Ubuntu 16.04&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-tensorflow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d5d053b1e64e3c6d84efb783ec67357ebfc7923d/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6c696e75782d7562756e74752d31362e30342d74656e736f72666c6f772f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-tensorflow/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_macos_high_sierra_tensorflow.json"&gt;macOS 10.13&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-macOS-tensorflow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d9ddf5609894ac5153456d3450c142be6eecb32/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6d61634f532d74656e736f72666c6f772f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-macOS-tensorflow/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_ubuntu_16_04_tensorflow_gpu.json"&gt;Ubuntu 16.04 (GPU)&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-tensorflow-gpu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/18aaaa0e56522b7333744b64b7aa6ed4cb71c93f/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6c696e75782d7562756e74752d31362e30342d74656e736f72666c6f772d6770752f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-tensorflow-gpu/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-welcome-to-swift" class="anchor" aria-hidden="true" href="#welcome-to-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to Swift&lt;/h2&gt;
&lt;p&gt;Swift is a high-performance system programming language.  It has a clean
and modern syntax, offers seamless access to existing C and Objective-C code
and frameworks, and is memory safe by default.&lt;/p&gt;
&lt;p&gt;Although inspired by Objective-C and many other languages, Swift is not itself a
C-derived language. As a complete and independent language, Swift packages core
features like flow control, data structures, and functions, with high-level
constructs like objects, protocols, closures, and generics. Swift embraces
modules, eliminating the need for headers and the code duplication they entail.&lt;/p&gt;
&lt;p&gt;To learn more about the programming language, visit &lt;a href="https://swift.org/documentation/" rel="nofollow"&gt;swift.org&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#contributing-to-swift"&gt;Contributing to Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#system-requirements"&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-sources-for-swift-and-related-projects"&gt;Getting Sources for Swift and Related Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-swift"&gt;Building Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-toolchains"&gt;Swift Toolchains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-failures"&gt;Build Failures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing-swift"&gt;Testing Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#learning-more"&gt;Learning More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-dependencies"&gt;Build Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-swift" class="anchor" aria-hidden="true" href="#contributing-to-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Swift&lt;/h2&gt;
&lt;p&gt;Contributions to Swift are welcomed and encouraged! Please see the
&lt;a href="https://swift.org/contributing/" rel="nofollow"&gt;Contributing to Swift guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To be a truly great community, &lt;a href="https://swift.org/" rel="nofollow"&gt;Swift.org&lt;/a&gt; needs to welcome
developers from all walks of life, with different backgrounds, and with a wide
range of experience. A diverse and friendly community will have more great
ideas, more unique perspectives, and produce more great code. We will work
diligently to make the Swift community welcoming to everyone.&lt;/p&gt;
&lt;p&gt;To give clarity of what is expected of our members, Swift has adopted the
code of conduct defined by the Contributor Covenant. This document is used
across many open source communities, and we think it articulates our values
well. For more, see the &lt;a href="https://swift.org/community/#code-of-conduct" rel="nofollow"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;These instructions give the most direct path to a working Swift development
environment. To build from source you will need about 2 GB of disk space for the
source code and up to 70 GB of disk space for the build artifacts with full
debugging. Depending on your machine, a clean build can take a few minutes to
several hours. Naturally, incremental builds are much faster.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Requirements&lt;/h3&gt;
&lt;p&gt;macOS, Ubuntu Linux LTS, and the latest Ubuntu Linux release are currently
supported as host development operating systems.&lt;/p&gt;
&lt;p&gt;Please make sure you use Python 2.x. Python 3.x is not supported currently.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h4&gt;
&lt;p&gt;To build for macOS, you need &lt;a href="https://developer.apple.com/xcode/downloads/" rel="nofollow"&gt;Xcode 11.2&lt;/a&gt;.
The required version of Xcode changes frequently, and is often a beta release.
Check this document or the host information on &lt;a href="https://ci.swift.org" rel="nofollow"&gt;https://ci.swift.org&lt;/a&gt; for the
current required version.&lt;/p&gt;
&lt;p&gt;You will also need &lt;a href="https://cmake.org" rel="nofollow"&gt;CMake&lt;/a&gt; and &lt;a href="https://ninja-build.org" rel="nofollow"&gt;Ninja&lt;/a&gt;,
which can be installed via a package manager:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install cmake ninja
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://macports.org" rel="nofollow"&gt;MacPorts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo port install cmake ninja
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instructions for installing CMake and Ninja directly can be found &lt;a href="#build-dependencies"&gt;below&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h4&gt;
&lt;p&gt;For Ubuntu, you'll need the following development dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install git cmake ninja-build clang python uuid-dev libicu-dev icu-devtools libedit-dev libxml2-dev libsqlite3-dev swig libpython-dev libncurses5-dev pkg-config libcurl4-openssl-dev systemtap-sdt-dev tzdata rsync
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; LLDB currently requires at least &lt;code&gt;swig-1.3.40&lt;/code&gt; but will successfully build
with version 2 shipped with Ubuntu.&lt;/p&gt;
&lt;p&gt;Build instructions for Ubuntu 14.04 LTS can be found &lt;a href="docs/Ubuntu14.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-sources-for-swift-and-related-projects" class="anchor" aria-hidden="true" href="#getting-sources-for-swift-and-related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Sources for Swift and Related Projects&lt;/h3&gt;
&lt;p&gt;First create a directory for all of the Swift sources:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir swift-source
cd swift-source
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is important since update-checkout (see below) checks out
repositories next to the Swift source directory. This means that if one clones
Swift and has other unrelated repositories, update-checkout may not clone those
repositories and will update them instead.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Via HTTPS&lt;/strong&gt;  For those checking out sources as read-only, HTTPS works best:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/apple/swift.git
./swift/utils/update-checkout --clone
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Via SSH&lt;/strong&gt;  For those who plan on regularly making direct commits,
cloning over SSH may provide a better experience (which requires
&lt;a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/"&gt;uploading SSH keys to GitHub&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:apple/swift.git
./swift/utils/update-checkout --clone-with-ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-building-swift" class="anchor" aria-hidden="true" href="#building-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Swift&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;build-script&lt;/code&gt; is a high-level build automation script that supports basic
options such as building a Swift-compatible LLDB, building the Swift Package
Manager, building for various platforms, running tests after builds, and more.&lt;/p&gt;
&lt;p&gt;There are two primary build systems to use: Xcode and Ninja. The Xcode build
system allows you to work in Xcode, but Ninja is a bit faster and supports
more environments.&lt;/p&gt;
&lt;p&gt;First, make sure that you're in the swift directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd swift
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build using Ninja, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;utils/build-script --release-debuginfo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When developing Swift, it helps to build what you're working on in a debug
configuration while building the rest of the project with optimizations. Below
are some examples of using debug variants:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;utils/build-script --release-debuginfo --debug-swift # Swift frontend built in debug
utils/build-script --release-debuginfo --debug-swift-stdlib # Standard library built in debug
utils/build-script --release-debuginfo --debug-swift --force-optimized-typechecker # Swift frontend sans type checker built in debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Limiting the amount of debug code in the compiler has a very large impact on
Swift compile times, and in turn the test execution time. If you want to build
the entire project in debug, you can run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;utils/build-script --debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For documentation of all available arguments, as well as additional usage
information, see the inline help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;utils/build-script -h
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h4&gt;
&lt;p&gt;To build using Xcode, specify the &lt;code&gt;--xcode&lt;/code&gt; argument on any of the above commands.
Xcode can be used to edit the Swift source code, but it is not currently
fully supported as a build environment for SDKs other than macOS. The generated
Xcode project does not integrate with the test runner, but the tests can be run
with the 'check-swift' target.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-build-products" class="anchor" aria-hidden="true" href="#build-products"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Products&lt;/h4&gt;
&lt;p&gt;All of the build products are placed in &lt;code&gt;swift-source/build/${TOOL}-${MODE}/${PRODUCT}-${PLATFORM}/&lt;/code&gt;.
If macOS Swift with Ninja in DebugAssert mode was built, all of the products
would be in &lt;code&gt;swift-source/build/Ninja-DebugAssert/swift-macosx-x86_64/&lt;/code&gt;. It
helps to save this directory as an environment variable for future use.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export SWIFT_BUILD_DIR="~/swift-source/build/Ninja-DebugAssert/swift-macosx-x86_64"
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-ninja" class="anchor" aria-hidden="true" href="#ninja"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ninja&lt;/h4&gt;
&lt;p&gt;Once the first build has completed, Ninja can perform fast incremental builds of
various products. These incremental builds are a big timesaver when developing
and debugging.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ${SWIFT_BUILD_DIR}
ninja swift
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will build the Swift compiler, but will not rebuild the standard library or
any other target. Building the &lt;code&gt;swift-stdlib&lt;/code&gt; target as an additional layer of
testing from time to time is also a good idea. To build just the standard
library, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ninja swift-stdlib
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is always a good idea to do a full build after using &lt;code&gt;update-checkout&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-xcode" class="anchor" aria-hidden="true" href="#using-xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Xcode&lt;/h4&gt;
&lt;p&gt;To open the Swift project in Xcode, open &lt;code&gt;${SWIFT_BUILD_DIR}/Swift.xcodeproj&lt;/code&gt;.
It will auto-create a &lt;em&gt;lot&lt;/em&gt; of schemes for all of the available targets. A
common debug flow would involve:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select the 'swift' scheme.&lt;/li&gt;
&lt;li&gt;Pull up the scheme editor (⌘⇧&amp;lt;).&lt;/li&gt;
&lt;li&gt;Select the 'Arguments' tab and click the '+'.&lt;/li&gt;
&lt;li&gt;Add the command line options.&lt;/li&gt;
&lt;li&gt;Close the scheme editor.&lt;/li&gt;
&lt;li&gt;Build and run.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another option is to change the scheme to "Wait for executable to be launched",
then run the build product in Terminal.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-toolchains" class="anchor" aria-hidden="true" href="#swift-toolchains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Toolchains&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h4&gt;
&lt;p&gt;Swift toolchains are created using the script
&lt;a href="https://github.com/apple/swift/blob/master/utils/build-toolchain"&gt;build-toolchain&lt;/a&gt;. This
script is used by swift.org's CI to produce snapshots and can allow for one to
locally reproduce such builds for development or distribution purposes. E.x.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  $ ./swift/utils/build-toolchain $BUNDLE_PREFIX
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;$BUNDLE_PREFIX&lt;/code&gt; is a string that will be prepended to the build
date to give the bundle identifier of the toolchain's &lt;code&gt;Info.plist&lt;/code&gt;. For
instance, if &lt;code&gt;$BUNDLE_PREFIX&lt;/code&gt; was &lt;code&gt;com.example&lt;/code&gt;, the toolchain
produced will have the bundle identifier &lt;code&gt;com.example.YYYYMMDD&lt;/code&gt;. It
will be created in the directory you run the script with a filename
of the form: &lt;code&gt;swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Beyond building the toolchain, &lt;code&gt;build-toolchain&lt;/code&gt; also supports the
following (non-exhaustive) set of useful options::&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--dry-run&lt;/code&gt;: Perform a dry run build. This is off by default.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--test&lt;/code&gt;: Test the toolchain after it has been compiled. This is off by default.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--distcc&lt;/code&gt;: Use distcc to speed up the build by distributing the c++ part of
the swift build. This is off by default.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More options may be added over time. Please pass &lt;code&gt;--help&lt;/code&gt; to
&lt;code&gt;build-toolchain&lt;/code&gt; to see the full set of options.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-installing-into-xcode" class="anchor" aria-hidden="true" href="#installing-into-xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing into Xcode&lt;/h4&gt;
&lt;p&gt;On macOS if one wants to install such a toolchain into Xcode:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Untar and copy the toolchain to one of &lt;code&gt;/Library/Developer/Toolchains/&lt;/code&gt; or
&lt;code&gt;~/Library/Developer/Toolchains/&lt;/code&gt;. E.x.:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C /
  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C ~/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The script also generates an archive containing debug symbols which
can be installed over the main archive allowing symbolication of any
compiler crashes.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C /
  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C ~/
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Specify the local toolchain for Xcode's use via &lt;code&gt;Xcode-&amp;gt;Toolchains&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-build-failures" class="anchor" aria-hidden="true" href="#build-failures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Failures&lt;/h3&gt;
&lt;p&gt;Make sure you are using the &lt;a href="#macos"&gt;correct release&lt;/a&gt; of Xcode.&lt;/p&gt;
&lt;p&gt;If you have changed Xcode versions but still encounter errors that appear to
be related to the Xcode version, try passing &lt;code&gt;--clean&lt;/code&gt; to &lt;code&gt;build-script&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When a new version of Xcode is released, you can update your build without
recompiling the entire project by passing the &lt;code&gt;--reconfigure&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;Make sure all repositories are up to date with the &lt;code&gt;update-checkout&lt;/code&gt; command
described above.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing-swift" class="anchor" aria-hidden="true" href="#testing-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing Swift&lt;/h2&gt;
&lt;p&gt;See &lt;a href="docs/Testing.md"&gt;docs/Testing.md&lt;/a&gt;, in particular the section on &lt;a href="docs/Testing.md#using-litpy"&gt;lit.py&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learning-more" class="anchor" aria-hidden="true" href="#learning-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning More&lt;/h2&gt;
&lt;p&gt;Be sure to look through the &lt;a href="https://github.com/apple/swift/tree/master/docs"&gt;docs&lt;/a&gt;
directory for more information about the compiler. In particular, the documents
titled &lt;a href="docs/DebuggingTheCompiler.rst"&gt;Debugging the Swift Compiler&lt;/a&gt; and
&lt;a href="docs/ContinuousIntegration.md"&gt;Continuous Integration for Swift&lt;/a&gt; are very
helpful to understand before submitting your first PR.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-documentation" class="anchor" aria-hidden="true" href="#building-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Documentation&lt;/h3&gt;
&lt;p&gt;To read the compiler documentation, start by installing the
&lt;a href="http://sphinx-doc.org" rel="nofollow"&gt;Sphinx&lt;/a&gt; documentation generator tool by running the
command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;easy_install -U "Sphinx &amp;lt; 2.0"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once complete, you can build the Swift documentation by changing directory into
&lt;a href="https://github.com/apple/swift/tree/master/docs"&gt;docs&lt;/a&gt; and typing &lt;code&gt;make&lt;/code&gt;. This
compiles the &lt;code&gt;.rst&lt;/code&gt; files in the &lt;a href="https://github.com/apple/swift/tree/master/docs"&gt;docs&lt;/a&gt;
directory into HTML in the &lt;code&gt;docs/_build/html&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Many of the docs are out of date, but you can see some historical design
documents in the &lt;code&gt;docs&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Another source of documentation is the standard library itself, located in
&lt;code&gt;stdlib&lt;/code&gt;. Much of the language is actually implemented in the library
(including &lt;code&gt;Int&lt;/code&gt;), and the standard library gives some examples of what can be
expressed today.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-dependencies" class="anchor" aria-hidden="true" href="#build-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Dependencies&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cmake" class="anchor" aria-hidden="true" href="#cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMake&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cmake.org" rel="nofollow"&gt;CMake&lt;/a&gt; is the core infrastructure used to configure builds of
Swift and its companion projects; at least version 3.4.3 is required.&lt;/p&gt;
&lt;p&gt;On macOS, you can download the &lt;a href="https://cmake.org/download" rel="nofollow"&gt;CMake Binary Distribution&lt;/a&gt;,
bundled as an application, copy it to &lt;code&gt;/Applications&lt;/code&gt;, and add the embedded
command line tools to your &lt;code&gt;PATH&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=/Applications/CMake.app/Contents/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Linux, if you have not already installed Swift's &lt;a href="#linux"&gt;development
dependencies&lt;/a&gt;, you can download and install the CMake
package separately using the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install cmake
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-ninja-1" class="anchor" aria-hidden="true" href="#ninja-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ninja&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ninja-build.org" rel="nofollow"&gt;Ninja&lt;/a&gt; is the current recommended build system
for building Swift and is the default configuration generated by CMake. &lt;a href="https://github.com/ninja-build/ninja/wiki/Pre-built-Ninja-packages"&gt;Pre-built
packages&lt;/a&gt;
are available for macOS and Linux distributions. You can also clone Ninja
next to the other projects and it will be bootstrapped automatically:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Via HTTPS&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/ninja-build/ninja.git &amp;amp;&amp;amp; cd ninja
git checkout release
cat README
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Via SSH&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:ninja-build/ninja.git &amp;amp;&amp;amp; cd ninja
git checkout release
cat README
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift</guid><pubDate>Sun, 01 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>