<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C++, This month</title><link>https://github.com/trending/c++?since=monthly</link><description>The top repositories on GitHub for c++, measured monthly</description><pubDate>Thu, 26 Dec 2019 01:12:56 GMT</pubDate><lastBuildDate>Thu, 26 Dec 2019 01:12:56 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>Aircoookie/WLED #1 in C++, This month</title><link>https://github.com/Aircoookie/WLED</link><description>&lt;p&gt;&lt;i&gt;Control WS2812B RGB LEDs with an ESP8266 over WiFi!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/Aircoookie/WLED/master/wled_logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/Aircoookie/WLED/master/wled_logo.png" alt="WLED logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Aircoookie/WLED/releases"&gt;&lt;img src="https://camo.githubusercontent.com/ad76ef9f155a700b70095799a4d6433a2ea5e130/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f416972636f6f6f6b69652f574c45442e7376673f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/github/release/Aircoookie/WLED.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/KuqP7NE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/de12d57b707b74ef19d429623a04631aedacdce3/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3437333434383931373034303735383738372e7376673f636f6c6f72423d626c7565266c6162656c3d646973636f7264267374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/discord/473448917040758787.svg?colorB=blue&amp;amp;label=discord&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Aircoookie/WLED/wiki"&gt;&lt;img src="https://camo.githubusercontent.com/3f899af96e63c01b745fda02d11e94b76b775788/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f717569636b5f73746172742d77696b692d626c75652e7376673f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/badge/quick_start-wiki-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Aircoookie/WLED-App"&gt;&lt;img src="https://camo.githubusercontent.com/14c0db511ac74a90c2983093ef2eba52a14f2fd5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6170702d776c65642d626c75652e7376673f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/badge/app-wled-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-welcome-to-my-project-wled" class="anchor" aria-hidden="true" href="#welcome-to-my-project-wled"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to my project WLED!&lt;/h2&gt;
&lt;p&gt;A fast and feature-rich implementation of an ESP8266/ESP32 webserver to control NeoPixel (WS2812B, WS2811, SK6812, APA102) LEDs!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;WS2812FX library integrated for almost 90 special effects&lt;/li&gt;
&lt;li&gt;FastLED noise effects and palettes&lt;/li&gt;
&lt;li&gt;Modern UI with color, effect and segment controls&lt;/li&gt;
&lt;li&gt;Segments to set different effects and colors to parts of the LEDs&lt;/li&gt;
&lt;li&gt;Settings page - configuration over network&lt;/li&gt;
&lt;li&gt;Access Point and station mode - automatic failsafe AP&lt;/li&gt;
&lt;li&gt;Support for RGBW strips&lt;/li&gt;
&lt;li&gt;16 user presets to save and load colors/effects easily, supports cycling through them.&lt;/li&gt;
&lt;li&gt;Macro functions to automatically execute API calls&lt;/li&gt;
&lt;li&gt;Nightlight function (gradually dims down)&lt;/li&gt;
&lt;li&gt;Full OTA software updatability (HTTP + ArduinoOTA), password protectable&lt;/li&gt;
&lt;li&gt;Configurable analog clock + support for the Cronixie kit by Diamex&lt;/li&gt;
&lt;li&gt;Configurable Auto Brightness limit for safer operation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-light-control-interfaces" class="anchor" aria-hidden="true" href="#supported-light-control-interfaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported light control interfaces:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;WLED app for Android and iOS&lt;/li&gt;
&lt;li&gt;JSON and HTTP request APIs&lt;/li&gt;
&lt;li&gt;MQTT&lt;/li&gt;
&lt;li&gt;Blynk IoT&lt;/li&gt;
&lt;li&gt;E1.31&lt;/li&gt;
&lt;li&gt;Hyperion&lt;/li&gt;
&lt;li&gt;UDP realtime&lt;/li&gt;
&lt;li&gt;Alexa voice control (including dimming and color)&lt;/li&gt;
&lt;li&gt;Sync to Philips hue lights&lt;/li&gt;
&lt;li&gt;Adalight (PC ambilight via serial)&lt;/li&gt;
&lt;li&gt;Sync color of multiple WLED devices (UDP notifier)&lt;/li&gt;
&lt;li&gt;Infrared remotes (24-key RGB, receiver required)&lt;/li&gt;
&lt;li&gt;Simple timers/schedules (time from NTP, timezones/DST supported)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-quick-start-guide-and-documentation" class="anchor" aria-hidden="true" href="#quick-start-guide-and-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start guide and documentation:&lt;/h3&gt;
&lt;p&gt;See the &lt;a href="https://github.com/Aircoookie/WLED/wiki"&gt;wiki&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;DrZzs has made some excellent video guides:&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=tXvtxwK3jRk" rel="nofollow"&gt;Introduction, hardware and installation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=6eCE2BpLaUQ" rel="nofollow"&gt;Settings, tips and tricks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you'd rather read, here is a very &lt;a href="https://tynick.com/blog/11-03-2019/getting-started-with-wled-on-esp8266/" rel="nofollow"&gt;detailed step-by-step beginner tutorial&lt;/a&gt; by tynick!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h3&gt;
&lt;p&gt;Licensed under the MIT license&lt;br&gt;
Credits &lt;a href="https://github.com/Aircoookie/WLED/wiki/Contributors-&amp;amp;-About"&gt;here&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Uses Linearicons by Perxis!&lt;/p&gt;
&lt;p&gt;Join the Discord &lt;a href="https://discord.gg/KuqP7NE" rel="nofollow"&gt;server&lt;/a&gt; to discuss everything about WLED!&lt;br&gt;
You can also send me mails to &lt;a href="mailto:dev.aircoookie@gmail.com"&gt;dev.aircoookie@gmail.com&lt;/a&gt;.&lt;br&gt;
If WLED really brightens up your every day, you can &lt;a href="https://paypal.me/aircoookie" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/874472800a9540f0dce94915d4b0134e03541798/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73656e642532306d6525323061253230736d616c6c253230676966742d70617970616c2d626c75652e7376673f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/badge/send%20me%20a%20small%20gift-paypal-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Disclaimer:&lt;/em&gt;&lt;br&gt;
If you are sensitive to photoeleptic seizures it is not recommended that you use this software.&lt;br&gt;
In case you still want to try, don't use strobe, lighting or noise modes or high effect speed settings.
As per the MIT license, i assume no liability for any damage to you or any other person or equipment.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Aircoookie</author><guid isPermaLink="false">https://github.com/Aircoookie/WLED</guid><pubDate>Thu, 26 Dec 2019 00:01:00 GMT</pubDate></item><item><title>xmrig/xmrig #2 in C++, This month</title><link>https://github.com/xmrig/xmrig</link><description>&lt;p&gt;&lt;i&gt;RandomX, CryptoNight and Argon2 CPU miner&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-xmrig" class="anchor" aria-hidden="true" href="#xmrig"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XMRig&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;a href="https://github.com/xmrig/xmrig/issues/1204"&gt;Monero will change PoW algorithm to RandomX on November 30.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;&lt;img src="https://camo.githubusercontent.com/cba2a049186e5c8d15393b74ca2246ceb5adbcea/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f786d7269672f786d7269672f746f74616c2e737667" alt="Github All Releases" data-canonical-src="https://img.shields.io/github/downloads/xmrig/xmrig/total.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;&lt;img src="https://camo.githubusercontent.com/4f5d7ec092633db1a996ed25b4e253b83b57a670/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f786d7269672f786d7269672f616c6c2e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/xmrig/xmrig/all.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;&lt;img src="https://camo.githubusercontent.com/cf58fa6773dd99d78ae3f2abcc8169f1ed89caf3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652d7072652f786d7269672f786d7269672e737667" alt="GitHub Release Date" data-canonical-src="https://img.shields.io/github/release-date-pre/xmrig/xmrig.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xmrig/xmrig/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/4f91242674e6b58bb6c3be0cc7ae3e6f7e9e1459/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f786d7269672f786d7269672e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/github/license/xmrig/xmrig.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xmrig/xmrig/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/7c59ed3363d3ba5fc5f5075bbc55638661e4fac0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f786d7269672f786d7269672e737667" alt="GitHub stars" data-canonical-src="https://img.shields.io/github/stars/xmrig/xmrig.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xmrig/xmrig/network"&gt;&lt;img src="https://camo.githubusercontent.com/9b005f2fc190beccdfce44b7ff60d228e96b9fd5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f786d7269672f786d7269672e737667" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/xmrig/xmrig.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;XMRig High performance, open source, cross platform RandomX, CryptoNight and Argon2 CPU/GPU miner, with official support for Windows.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mining-backends" class="anchor" aria-hidden="true" href="#mining-backends"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mining backends&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt; (x64/x86/ARM)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OpenCL&lt;/strong&gt; for AMD GPUs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CUDA&lt;/strong&gt; for NVIDIA GPUs via external &lt;a href="https://github.com/xmrig/xmrig-cuda"&gt;CUDA plugin&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/screenshot_v5_2_0.png"&gt;&lt;img src="doc/screenshot_v5_2_0.png" width="833" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Binary releases: &lt;a href="https://github.com/xmrig/xmrig/releases"&gt;https://github.com/xmrig/xmrig/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Git tree: &lt;a href="https://github.com/xmrig/xmrig.git"&gt;https://github.com/xmrig/xmrig.git&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Clone with &lt;code&gt;git clone https://github.com/xmrig/xmrig.git&lt;/code&gt; &lt;g-emoji class="g-emoji" alias="hammer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f528.png"&gt;🔨&lt;/g-emoji&gt; &lt;a href="https://github.com/xmrig/xmrig/wiki/Build"&gt;Build instructions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;The preferred way to configure the miner is the &lt;a href="src/config.json"&gt;JSON config file&lt;/a&gt; as it is more flexible and human friendly. The command line interface does not cover all features, such as mining profiles for different algorithms. Important options can be changed during runtime without miner restart by editing the config file or executing API calls.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://xmrig.com/wizard" rel="nofollow"&gt;xmrig.com/wizard&lt;/a&gt;&lt;/strong&gt; helps you create initial configuration for the miner.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://workers.xmrig.info" rel="nofollow"&gt;workers.xmrig.info&lt;/a&gt;&lt;/strong&gt; helps manage your miners via HTTP API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-command-line-options" class="anchor" aria-hidden="true" href="#command-line-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line options&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Network:
  -o, --url=URL                 URL of mining server
  -a, --algo=ALGO               mining algorithm https://xmrig.com/docs/algorithms
      --coin=COIN               specify coin instead of algorithm
  -u, --user=USERNAME           username for mining server
  -p, --pass=PASSWORD           password for mining server
  -O, --userpass=U:P            username:password pair for mining server
  -k, --keepalive               send keepalived packet for prevent timeout (needs pool support)
      --nicehash                enable nicehash.com support
      --rig-id=ID               rig identifier for pool-side statistics (needs pool support)
      --tls                     enable SSL/TLS support (needs pool support)
      --tls-fingerprint=HEX     pool TLS certificate fingerprint for strict certificate pinning
      --daemon                  use daemon RPC instead of pool for solo mining
      --daemon-poll-interval=N  daemon poll interval in milliseconds (default: 1000)
  -r, --retries=N               number of times to retry before switch to backup server (default: 5)
  -R, --retry-pause=N           time to pause between retries (default: 5)
      --user-agent              set custom user-agent string for pool
      --donate-level=N          donate level, default 5%% (5 minutes in 100 minutes)
      --donate-over-proxy=N     control donate over xmrig-proxy feature

CPU backend:
      --no-cpu                  disable CPU mining backend
  -t, --threads=N               number of CPU threads
  -v, --av=N                    algorithm variation, 0 auto select
      --cpu-affinity            set process affinity to CPU core(s), mask 0x3 for cores 0 and 1
      --cpu-priority            set process priority (0 idle, 2 normal to 5 highest)
      --cpu-max-threads-hint=N  maximum CPU threads count (in percentage) hint for autoconfig
      --cpu-memory-pool=N       number of 2 MB pages for persistent memory pool, -1 (auto), 0 (disable)
      --cpu-no-yield            prefer maximum hashrate rather than system response/stability
      --no-huge-pages           disable huge pages support
      --asm=ASM                 ASM optimizations, possible values: auto, none, intel, ryzen, bulldozer
      --randomx-init=N          threads count to initialize RandomX dataset
      --randomx-no-numa         disable NUMA support for RandomX
      --randomx-mode=MODE       RandomX mode: auto, fast, light
      --randomx-1gb-pages       use 1GB hugepages for dataset (Linux only)
      --randomx-wrmsr=N         write value (0-15) to Intel MSR register 0x1a4 or do nothing (-1) (Linux only)

API:
      --api-worker-id=ID        custom worker-id for API
      --api-id=ID               custom instance ID for API
      --http-host=HOST          bind host for HTTP API (default: 127.0.0.1)
      --http-port=N             bind port for HTTP API
      --http-access-token=T     access token for HTTP API
      --http-no-restricted      enable full remote access to HTTP API (only if access token set)

OpenCL backend:
      --opencl                  enable OpenCL mining backend
      --opencl-devices=N        comma separated list of OpenCL devices to use
      --opencl-platform=N       OpenCL platform index or name
      --opencl-loader=PATH      path to OpenCL-ICD-Loader (OpenCL.dll or libOpenCL.so)
      --opencl-no-cache         disable OpenCL cache
      --print-platforms         print available OpenCL platforms and exit

CUDA backend:
      --cuda                    enable CUDA mining backend
      --cuda-loader=PATH        path to CUDA plugin (xmrig-cuda.dll or libxmrig-cuda.so)
      --cuda-devices=N          comma separated list of CUDA devices to use
      --cuda-bfactor-hint=N     bfactor hint for autoconfig (0-12)
      --cuda-bsleep-hint=N      bsleep hint for autoconfig
      --no-nvml                 disable NVML (NVIDIA Management Library) support

Logging:
  -S, --syslog                  use system log for output messages
  -l, --log-file=FILE           log all output to a file
      --print-time=N            print hashrate report every N seconds
      --health-print-time=N     print health report every N seconds
      --no-color                disable colored output
      --verbose                 verbose output

Misc:
  -c, --config=FILE             load a JSON-format configuration file
  -B, --background              run the miner in the background
  -V, --version                 output version information and exit
  -h, --help                    display this help and exit
      --dry-run                 test configuration and exit
      --export-topology         export hwloc topology to a XML file and exit
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Default donation 5% (5 minutes in 100 minutes) can be reduced to 1% via option &lt;code&gt;donate-level&lt;/code&gt; or disabled in source code.&lt;/li&gt;
&lt;li&gt;XMR: &lt;code&gt;48edfHu7V9Z84YzzMa6fUueoELZ9ZRXq9VetWzYGzKt52XU5xvqgzYnDK9URnRoJMk1j8nLwEVsaSWJ4fhdUyZijBGUicoD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;BTC: &lt;code&gt;1P7ujsXeX7GxQwHNnJsRMgAdNkFZmNVqJT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contacts" class="anchor" aria-hidden="true" href="#contacts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contacts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:support@xmrig.com"&gt;support@xmrig.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/user/XMRig/" rel="nofollow"&gt;reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/xmrig_dev" rel="nofollow"&gt;twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xmrig</author><guid isPermaLink="false">https://github.com/xmrig/xmrig</guid><pubDate>Thu, 26 Dec 2019 00:02:00 GMT</pubDate></item><item><title>arendst/Tasmota #3 in C++, This month</title><link>https://github.com/arendst/Tasmota</link><description>&lt;p&gt;&lt;i&gt;Alternative firmware for ESP8266 with easy configuration using webUI, OTA updates, automation using timers or rules, expandability and entirely local control over MQTT, HTTP, Serial or KNX&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/tools/logo/TASMOTA_FullLogo_Vector.svg"&gt;&lt;img src="/tools/logo/TASMOTA_FullLogo_Vector.svg" alt="Tasmota logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alternative firmware for &lt;a href="https://en.wikipedia.org/wiki/ESP8266" rel="nofollow"&gt;ESP8266&lt;/a&gt; based devices with &lt;strong&gt;easy configuration using webUI, OTA updates, automation using timers or rules, expandability and entirely local control over MQTT, HTTP, Serial or KNX&lt;/strong&gt;.
&lt;em&gt;Written for Arduino IDE and PlatformIO.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/arendst/Tasmota/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/85e9056df0a052ab64d9810ce8b2166f559c74de/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6172656e6473742f5461736d6f74612e737667" alt="GitHub version" data-canonical-src="https://img.shields.io/github/release/arendst/Tasmota.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/arendst/Tasmota/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/bef11c48812c8d4969d6007935198f806748f9c9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6172656e6473742f5461736d6f74612f746f74616c2e737667" alt="GitHub download" data-canonical-src="https://img.shields.io/github/downloads/arendst/Tasmota/total.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE.txt"&gt;&lt;img src="https://camo.githubusercontent.com/85f933b764023f91c8cadb39758c0133cc34ba74/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6172656e6473742f5461736d6f74612e737667" alt="License" data-canonical-src="https://img.shields.io/github/license/arendst/Tasmota.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/Ks2Kzd4" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4239baddbfd9b5117ea880e4576cd9da3c422f92/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3437393338393136373338323639313836332e737667" alt="Chat" data-canonical-src="https://img.shields.io/discord/479389167382691863.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you like &lt;strong&gt;Tasmota&lt;/strong&gt;, give it a star, or fork it and contribute!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/arendst/Tasmota/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/4713ab24535db79e35ab3eee94e0d3c77a5475d8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6172656e6473742f5461736d6f74612e7376673f7374796c653d736f6369616c266c6162656c3d53746172" alt="GitHub stars" data-canonical-src="https://img.shields.io/github/stars/arendst/Tasmota.svg?style=social&amp;amp;label=Star" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/arendst/Tasmota/network"&gt;&lt;img src="https://camo.githubusercontent.com/2db3272ec156c6a91faac4fda537e288590f2e5d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6172656e6473742f5461736d6f74612e7376673f7374796c653d736f6369616c266c6162656c3d466f726b" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/arendst/Tasmota.svg?style=social&amp;amp;label=Fork" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://paypal.me/tasmota" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3acd922fa1c97f34ea6ed5a0b44348dc9b81389e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f6e6174652d50617950616c2d626c75652e737667" alt="donate" data-canonical-src="https://img.shields.io/badge/donate-PayPal-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="RELEASENOTES.md"&gt;RELEASENOTES.md&lt;/a&gt; for release information.&lt;/p&gt;
&lt;p&gt;In addition to the &lt;a href="https://github.com/arendst/Tasmota/releases/latest"&gt;release webpage&lt;/a&gt; the binaries can also be downloaded from &lt;a href="http://thehackbox.org/tasmota/release/" rel="nofollow"&gt;http://thehackbox.org/tasmota/release/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/arendst/Tasmota"&gt;&lt;img src="https://camo.githubusercontent.com/f016c50abf05532cd90b4fce97f61a792545817f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646576656c6f706d656e7425323076657273696f6e2d76382e312e782e782d626c75652e737667" alt="Dev Version" data-canonical-src="https://img.shields.io/badge/development%20version-v8.1.x.x-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://thehackbox.org/tasmota/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89a6112fdd19e255548b5ef2160a7913a9d4215a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f776e6c6f61642d646576656c6f706d656e742d79656c6c6f772e737667" alt="Download Dev" data-canonical-src="https://img.shields.io/badge/download-development-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/arendst/Tasmota" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/87196e6d4fd75db1961a392760cd92f072c707d5/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6172656e6473742f5461736d6f74612e737667" alt="Build Status" data-canonical-src="https://img.shields.io/travis/arendst/Tasmota.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="tasmota/CHANGELOG.md"&gt;tasmota/CHANGELOG.md&lt;/a&gt; for detailed change information.&lt;/p&gt;
&lt;p&gt;Unless your Tasmota powered device exhibits a problem or you need to make use of a feature that is not available in the Tasmota version currently installed on your device, leave your device alone - it works so don't make unnecessary changes! If the release version (i.e., the master branch) exhibits unexpected behaviour for your device and configuration, you should upgrade to the latest development version instead to see if your problem is resolved as some bugs in previous releases or development builds may already have been resolved.&lt;/p&gt;
&lt;p&gt;The Tasmota development codebase is checked every 1-2 hours for changes. If new commits have been merged and they compile successfuly, new binary files for every variant will be posted at &lt;a href="http://thehackbox.org/tasmota/" rel="nofollow"&gt;http://thehackbox.org/tasmota/&lt;/a&gt; (this web address can be used for OTA updates too). The last compiled commit number is also indicated on the same page. It is important to note that these binaries are based on the current development codebase. These commits are tested as much as is possible and are typically quite stable. However, it is infeasible to test on the hundreds of different types of devices with all the available configuration options permitted.&lt;/p&gt;
&lt;p&gt;Note that there is a chance, as with any upgrade, that the device may not function as expected. You must always account for the possibility that you may need to flash the device via the serial programming interface if the OTA upgrade fails. Even with the master release, you should always attempt to test the device or a similar prototype before upgrading a device which is in production or is hard to reach. And, as always, make a backup of the device configuration before beginning any firmware update.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;DANGER OF ELECTROCUTION&lt;/strong&gt; &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;If your device connects to mains electricity (AC power) there is danger of electrocution if not installed properly. If you don't know how to install it, please call an electrician (&lt;em&gt;&lt;strong&gt;Beware:&lt;/strong&gt;&lt;/em&gt; certain countries prohibit installation without a licensed electrician present). Remember: &lt;em&gt;&lt;strong&gt;SAFETY FIRST&lt;/strong&gt;&lt;/em&gt;. It is not worth the risk to yourself, your family and your home if you don't know exactly what you are doing. Never tinker or try to flash a device using the serial programming interface while it is connected to MAINS ELECTRICITY (AC power).&lt;/p&gt;
&lt;p&gt;We don't take any responsibility nor liability for using this software nor for the installation or any tips, advice, videos, etc. given by any member of this site or any related site.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-note" class="anchor" aria-hidden="true" href="#note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note&lt;/h2&gt;
&lt;p&gt;Please do not ask to add new devices unless it requires additional code for new features. If the device is not listed as a module, try using &lt;a href="https://tasmota.github.io/docs/#/Templates" rel="nofollow"&gt;Templates&lt;/a&gt; first. If it is not listed in the &lt;a href="http://blakadder.github.io/templates" rel="nofollow"&gt;Tasmota Device Templates Repository&lt;/a&gt; create your own &lt;a href="https://tasmota.github.io/docs/#/Templates?id=creating-your-template" rel="nofollow"&gt;Template&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-install" class="anchor" aria-hidden="true" href="#quick-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Install&lt;/h2&gt;
&lt;p&gt;Download one of the released binaries from &lt;a href="https://github.com/arendst/Tasmota/releases"&gt;https://github.com/arendst/Tasmota/releases&lt;/a&gt; and flash it to your hardware &lt;a href="https://tasmota.github.io/docs/#/installation/" rel="nofollow"&gt;using our installation guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-user-compilation-information" class="anchor" aria-hidden="true" href="#important-user-compilation-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important User Compilation Information&lt;/h2&gt;
&lt;p&gt;If you want to compile Tasmota yourself keep in mind the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only Flash Mode &lt;strong&gt;DOUT&lt;/strong&gt; is supported. Do not use Flash Mode DIO / QIO / QOUT as it might seem to brick your device.&lt;/li&gt;
&lt;li&gt;Tasmota uses a 1M linker script WITHOUT spiffs &lt;strong&gt;1M (no SPIFFS)&lt;/strong&gt; for optimal code space.&lt;/li&gt;
&lt;li&gt;To make compile time changes to Tasmota use the &lt;code&gt;user_config_override.h&lt;/code&gt; file. It assures keeping your custom settings when you download and compile a new version. You have to make a copy from the provided &lt;code&gt;user_config_override_sample.h&lt;/code&gt; file and add your setting overrides. To enable the override you have to set a compile define as documented in the &lt;code&gt;user_config_override_sample.h&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuration-information" class="anchor" aria-hidden="true" href="#configuration-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration Information&lt;/h2&gt;
&lt;p&gt;Please refer to the installation and configuration articles in our &lt;a href="https://tasmota.github.io/docs" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-migration-information" class="anchor" aria-hidden="true" href="#migration-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migration Information&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://tasmota.github.io/docs/#/Upgrading?id=migration-path" rel="nofollow"&gt;wiki migration path&lt;/a&gt; for instructions how to migrate to a major version. Pay attention to the following version breaks due to dynamic settings updates:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Migrate to &lt;strong&gt;Sonoff-Tasmota 3.9.x&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Migrate to &lt;strong&gt;Sonoff-Tasmota 4.x&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Migrate to &lt;strong&gt;Sonoff-Tasmota 5.14&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Migrate to &lt;strong&gt;Sonoff-Tasmota 6.x&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Migrate to &lt;strong&gt;Tasmota 7.x&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;--- Major change in parameter storage layout ---&lt;/p&gt;
&lt;ol start="6"&gt;
&lt;li&gt;Migrate to &lt;strong&gt;Tasmota 8.1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Migrate to &lt;strong&gt;Tasmota 8.x&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-support-information" class="anchor" aria-hidden="true" href="#support-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support Information&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5904370/68332933-e6e5a600-00d7-11ea-885d-50395f7239a1.png"&gt;&lt;img src="https://user-images.githubusercontent.com/5904370/68332933-e6e5a600-00d7-11ea-885d-50395f7239a1.png" width="150" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a database of supported devices see &lt;a href="https://blakadder.github.io/templates" rel="nofollow"&gt;Tasmota Device Templates Repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're looking for support on &lt;strong&gt;Tasmota&lt;/strong&gt; there are some options available:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tasmota.github.io/docs" rel="nofollow"&gt;Documentation Site&lt;/a&gt;: For information on how to flash Tasmota, configure, use and expand it&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tasmota.github.io/docs/#/help/" rel="nofollow"&gt;FAQ and Troubleshooting&lt;/a&gt;: For information on common problems and solutions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tasmota.github.io/docs/#/Commands" rel="nofollow"&gt;Commands Information&lt;/a&gt;: For information on all the commands supported by Tasmota.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supports-community" class="anchor" aria-hidden="true" href="#supports-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support's Community&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/d/forum/sonoffusers" rel="nofollow"&gt;Tasmota Forum&lt;/a&gt;: For usage and discussions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/Ks2Kzd4" rel="nofollow"&gt;Tasmota Support Chat&lt;/a&gt;: For support, troubleshooting and general questions. You have better chances to get fast answers from members of the Tasmota Community.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arendst/Tasmota/issues"&gt;Search in Issues&lt;/a&gt;: You might find an answer to your question by searching current or closed issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-developers-community" class="anchor" aria-hidden="true" href="#developers-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers' Community&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/arendst/Tasmota/issues/new?template=Bug_report.md"&gt;Bug Report&lt;/a&gt;: For reporting Bugs of Tasmota Software.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arendst/Tasmota/issues/new?template=Feature_request.md"&gt;Feature Request&lt;/a&gt;: For requesting features/functions to Tasmota Software.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arendst/Tasmota/issues/new?template=Custom.md"&gt;Troubleshooting&lt;/a&gt;: As a last resort, you can open new &lt;em&gt;Troubleshooting&lt;/em&gt; issue on GitHub if the solution could not be found using the other channels. Just remember: the more info you provide the more chances you'll have to get an accurate answer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arendst/Tasmota/issues/new/choose"&gt;Issue a question&lt;/a&gt;: As a last resort, you can open a new &lt;em&gt;Question&lt;/em&gt; issue on GitHub if the answer could not be found using the other channels. Just remember: the more info you provide the more chances you'll have to get an accurate answer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;You can contribute to Tasmota by&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;providing Pull Requests (Features, Proof of Concepts, Language files or Fixes)&lt;/li&gt;
&lt;li&gt;testing new released features and report issues&lt;/li&gt;
&lt;li&gt;donating to acquire hardware for testing and implementing or out of gratitude&lt;/li&gt;
&lt;li&gt;contributing missing &lt;a href="https://tasmota.github.io/docs" rel="nofollow"&gt;documentation&lt;/a&gt; for features and devices&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://paypal.me/tasmota" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3acd922fa1c97f34ea6ed5a0b44348dc9b81389e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f6e6174652d50617950616c2d626c75652e737667" alt="donate" data-canonical-src="https://img.shields.io/badge/donate-PayPal-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;People helping to keep the show on the road:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;David Lang providing initial issue resolution and code optimizations&lt;/li&gt;
&lt;li&gt;Heiko Krupp for his IRSend, HTU21, SI70xx and Wemo/Hue emulation drivers&lt;/li&gt;
&lt;li&gt;Wiktor Schmidt for Travis CI implementation&lt;/li&gt;
&lt;li&gt;Thom Dietrich for PlatformIO optimizations&lt;/li&gt;
&lt;li&gt;Marinus van den Broek for his EspEasy groundwork&lt;/li&gt;
&lt;li&gt;Pete Ba for more user friendly energy monitor calibration&lt;/li&gt;
&lt;li&gt;Lobradov providing compile optimization tips&lt;/li&gt;
&lt;li&gt;Flexiti for his initial timer implementation&lt;/li&gt;
&lt;li&gt;reloxx13 for his &lt;a href="https://github.com/reloxx13/TasmoAdmin"&gt;TasmoAdmin&lt;/a&gt; management tool&lt;/li&gt;
&lt;li&gt;Joachim Banzhaf for his TSL2561 library and driver&lt;/li&gt;
&lt;li&gt;Gijs Noorlander for his MHZ19, SenseAir and updated PubSubClient drivers&lt;/li&gt;
&lt;li&gt;Emontnemery for his HomeAssistant Discovery concept and many code tuning tips&lt;/li&gt;
&lt;li&gt;Aidan Mountford for his HSB support&lt;/li&gt;
&lt;li&gt;Daniel Ztolnai for his Serial Bridge implementation&lt;/li&gt;
&lt;li&gt;Gerhard Mutz for multiple sensor &amp;amp; display drivers, Sunrise/Sunset, and scripting&lt;/li&gt;
&lt;li&gt;Nuno Ferreira for his HC-SR04 driver&lt;/li&gt;
&lt;li&gt;Adrian Scillato for his (security)fixes and implementing and maintaining KNX&lt;/li&gt;
&lt;li&gt;Gennaro Tortone for implementing and maintaining Eastron drivers&lt;/li&gt;
&lt;li&gt;Raymond Mouthaan for managing Wemos Wiki information&lt;/li&gt;
&lt;li&gt;Norbert Richter for his decode-config.py tool&lt;/li&gt;
&lt;li&gt;Andre Thomas for providing &lt;a href="http://thehackbox.org/tasmota/" rel="nofollow"&gt;thehackbox&lt;/a&gt; OTA support and daily development builds&lt;/li&gt;
&lt;li&gt;Joel Stein, digiblur and Shantur Rathore for their Tuya research and driver&lt;/li&gt;
&lt;li&gt;Frogmore42 and Jason2866 for providing many issue answers&lt;/li&gt;
&lt;li&gt;Blakadder for editing the wiki and providing template management&lt;/li&gt;
&lt;li&gt;Stephan Hadinger for refactoring light driver, enhancing HueEmulation and Zigbee support&lt;/li&gt;
&lt;li&gt;tmo for designing the official Tasmota logo&lt;/li&gt;
&lt;li&gt;Stefan Bode for his Shutter and Deep sleep drivers&lt;/li&gt;
&lt;li&gt;Jacek Ziółkowski for his &lt;a href="https://github.com/jziolkowski/tdm"&gt;TDM&lt;/a&gt; management tool&lt;/li&gt;
&lt;li&gt;Many more providing Tips, Wips, Pocs, PRs and Donations&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This program is licensed under GPL-3.0&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>arendst</author><guid isPermaLink="false">https://github.com/arendst/Tasmota</guid><pubDate>Thu, 26 Dec 2019 00:03:00 GMT</pubDate></item><item><title>mozilla/DeepSpeech #4 in C++, This month</title><link>https://github.com/mozilla/DeepSpeech</link><description>&lt;p&gt;&lt;i&gt;A TensorFlow implementation of Baidu's DeepSpeech architecture&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-project-deepspeech" class="anchor" aria-hidden="true" href="#project-deepspeech"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project DeepSpeech&lt;/h1&gt;
&lt;a href="http://deepspeech.readthedocs.io/?badge=latest" rel="nofollow"&gt;&lt;img alt="Documentation" src="https://camo.githubusercontent.com/3b257803230e39d28f21be777a5317d8200060f9/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f646565707370656563682f62616467652f3f76657273696f6e3d6c6174657374" data-canonical-src="https://readthedocs.org/projects/deepspeech/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://community-tc.services.mozilla.com/api/github/v1/repository/mozilla/DeepSpeech/master/latest" rel="nofollow"&gt;&lt;img alt="Task Status" src="https://camo.githubusercontent.com/f94608a0ba1d59b7af921f5022300c6bc9563936/68747470733a2f2f636f6d6d756e6974792d74632e73657276696365732e6d6f7a696c6c612e636f6d2f6170692f6769746875622f76312f7265706f7369746f72792f6d6f7a696c6c612f446565705370656563682f6d61737465722f62616467652e737667" data-canonical-src="https://community-tc.services.mozilla.com/api/github/v1/repository/mozilla/DeepSpeech/master/badge.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;p&gt;DeepSpeech is an open source Speech-To-Text engine, using a model trained by machine learning techniques based on &lt;a href="https://arxiv.org/abs/1412.5567" rel="nofollow"&gt;Baidu's Deep Speech research paper&lt;/a&gt;. Project DeepSpeech uses Google's &lt;a href="https://www.tensorflow.org/" rel="nofollow"&gt;TensorFlow&lt;/a&gt; to make the implementation easier.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This documentation applies to the &lt;strong&gt;master branch&lt;/strong&gt; of DeepSpeech only. If you're using a stable release, you must use the documentation for the corresponding version by using GitHub's branch switcher button above.&lt;/p&gt;
&lt;p&gt;To install and use deepspeech all you have to do is:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create and activate a virtualenv&lt;/span&gt;
virtualenv -p python3 &lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/tmp/deepspeech-venv/
&lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/tmp/deepspeech-venv/bin/activate

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Install DeepSpeech&lt;/span&gt;
pip3 install deepspeech

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download pre-trained English model and extract&lt;/span&gt;
curl -LO https://github.com/mozilla/DeepSpeech/releases/download/v0.6.0/deepspeech-0.6.0-models.tar.gz
tar xvf deepspeech-0.6.0-models.tar.gz

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download example audio files&lt;/span&gt;
curl -LO https://github.com/mozilla/DeepSpeech/releases/download/v0.6.0/audio-0.6.0.tar.gz
tar xvf audio-0.6.0.tar.gz

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Transcribe an audio file&lt;/span&gt;
deepspeech --model deepspeech-0.6.0-models/output_graph.pbmm --lm deepspeech-0.6.0-models/lm.binary --trie deepspeech-0.6.0-models/trie --audio audio/2830-3980-0043.wav&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A pre-trained English model is available for use and can be downloaded using &lt;a href="USING.rst#using-a-pre-trained-model"&gt;the instructions below&lt;/a&gt;. Currently, only 16-bit, 16 kHz, mono-channel WAVE audio files are supported in the Python client. A package with some example audio files is available for download in our &lt;a href="https://github.com/mozilla/DeepSpeech/releases/latest"&gt;release notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Quicker inference can be performed using a supported NVIDIA GPU on Linux. See the &lt;a href="https://github.com/mozilla/DeepSpeech/releases/latest"&gt;release notes&lt;/a&gt; to find which GPUs are supported. To run &lt;code&gt;deepspeech&lt;/code&gt; on a GPU, install the GPU specific package:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create and activate a virtualenv&lt;/span&gt;
virtualenv -p python3 &lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/tmp/deepspeech-gpu-venv/
&lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/tmp/deepspeech-gpu-venv/bin/activate

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Install DeepSpeech CUDA enabled package&lt;/span&gt;
pip3 install deepspeech-gpu

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Transcribe an audio file.&lt;/span&gt;
deepspeech --model deepspeech-0.6.0-models/output_graph.pbmm --lm deepspeech-0.6.0-models/lm.binary --trie deepspeech-0.6.0-models/trie --audio audio/2830-3980-0043.wav&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please ensure you have the required &lt;a href="USING.rst#cuda-dependency"&gt;CUDA dependencies&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the output of &lt;code&gt;deepspeech -h&lt;/code&gt; for more information on the use of &lt;code&gt;deepspeech&lt;/code&gt;. (If you experience problems running &lt;code&gt;deepspeech&lt;/code&gt;, please check &lt;a href="native_client/README.rst#required-dependencies"&gt;required runtime dependencies&lt;/a&gt;).&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="USING.rst#using-a-pre-trained-model"&gt;Using a Pre-trained Model&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="USING.rst#cuda-dependency"&gt;CUDA dependency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="USING.rst#getting-the-pre-trained-model"&gt;Getting the pre-trained model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="USING.rst#model-compatibility"&gt;Model compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="USING.rst#using-the-python-package"&gt;Using the Python package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="USING.rst#using-the-nodejs-package"&gt;Using the Node.JS package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="USING.rst#using-the-command-line-client"&gt;Using the Command Line client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="USING.rst#installing-bindings-from-source"&gt;Installing bindings from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="USING.rst#third-party-bindings"&gt;Third party bindings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="examples/README.rst"&gt;Trying out DeepSpeech with examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#training-your-own-model"&gt;Training your own Model&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#prerequisites-for-training-a-model"&gt;Prerequisites for training a model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#getting-the-training-code"&gt;Getting the training code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#installing-python-dependencies"&gt;Installing Python dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#recommendations"&gt;Recommendations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#common-voice-training-data"&gt;Common Voice training data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#training-a-model"&gt;Training a model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#checkpointing"&gt;Checkpointing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#exporting-a-model-for-inference"&gt;Exporting a model for inference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#exporting-a-model-for-tflite"&gt;Exporting a model for TFLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#making-a-mmap-able-model-for-inference"&gt;Making a mmap-able model for inference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#continuing-training-from-a-release-model"&gt;Continuing training from a release model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRAINING.rst#training-with-augmentation"&gt;Training with Augmentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="CONTRIBUTING.rst"&gt;Contribution guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="SUPPORT.rst"&gt;Contact/Getting Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>mozilla</author><guid isPermaLink="false">https://github.com/mozilla/DeepSpeech</guid><pubDate>Thu, 26 Dec 2019 00:04:00 GMT</pubDate></item><item><title>MarlinFirmware/Marlin #5 in C++, This month</title><link>https://github.com/MarlinFirmware/Marlin</link><description>&lt;p&gt;&lt;i&gt;Optimized firmware for RepRap 3D printers based on the Arduino platform.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-marlin-3d-printer-firmware" class="anchor" aria-hidden="true" href="#marlin-3d-printer-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin 3D Printer Firmware&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/01760ea0e7e753c89822cf7b9dbeb3740aa8f386/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d61726c696e6669726d776172652f6d61726c696e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/01760ea0e7e753c89822cf7b9dbeb3740aa8f386/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d61726c696e6669726d776172652f6d61726c696e2e737667" alt="GitHub" data-canonical-src="https://img.shields.io/github/license/marlinfirmware/marlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cdc4c42d12df25184203715a1954a81bdb153038/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6d61726c696e6669726d776172652f6d61726c696e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/cdc4c42d12df25184203715a1954a81bdb153038/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6d61726c696e6669726d776172652f6d61726c696e2e737667" alt="GitHub contributors" data-canonical-src="https://img.shields.io/github/contributors/marlinfirmware/marlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/764e40a1787cb51eeaba2d62bbc3551dc1d029d1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6d61726c696e6669726d776172652f6d61726c696e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/764e40a1787cb51eeaba2d62bbc3551dc1d029d1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6d61726c696e6669726d776172652f6d61726c696e2e737667" alt="GitHub Release Date" data-canonical-src="https://img.shields.io/github/release-date/marlinfirmware/marlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/MarlinFirmware/Marlin/actions"&gt;&lt;img src="https://github.com/MarlinFirmware/Marlin/workflows/CI/badge.svg?branch=bugfix-2.0.x" alt="Build Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="buildroot/share/pixmaps/logo/marlin-250.png"&gt;&lt;img align="right" width="175" src="buildroot/share/pixmaps/logo/marlin-250.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Additional documentation can be found at the &lt;a href="http://marlinfw.org/" rel="nofollow"&gt;Marlin Home Page&lt;/a&gt;.
Please let us know if Marlin misbehaves in any way. Volunteers are standing by!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-marlin-20" class="anchor" aria-hidden="true" href="#marlin-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin 2.0&lt;/h2&gt;
&lt;p&gt;Marlin 2.0 takes this popular RepRap firmware to the next level by adding support for much faster 32-bit and ARM-based boards while improving support for 8-bit AVR boards. Read about Marlin's decision to use a "Hardware Abstraction Layer" below.&lt;/p&gt;
&lt;p&gt;Download earlier versions of Marlin on the &lt;a href="https://github.com/MarlinFirmware/Marlin/releases"&gt;Releases page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-marlin-20" class="anchor" aria-hidden="true" href="#building-marlin-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Marlin 2.0&lt;/h2&gt;
&lt;p&gt;To build Marlin 2.0 you'll need &lt;a href="https://www.arduino.cc/en/main/software" rel="nofollow"&gt;Arduino IDE 1.8.8 or newer&lt;/a&gt; or &lt;a href="http://docs.platformio.org/en/latest/ide.html#platformio-ide" rel="nofollow"&gt;PlatformIO&lt;/a&gt;. Detailed build and install instructions are posted at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://marlinfw.org/docs/basics/install_arduino.html" rel="nofollow"&gt;Installing Marlin (Arduino)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marlinfw.org/docs/basics/install_platformio_vscode.html" rel="nofollow"&gt;Installing Marlin (VSCode)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Platforms&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;th&gt;MCU&lt;/th&gt;
&lt;th&gt;Example Boards&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.arduino.cc/" rel="nofollow"&gt;Arduino AVR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ATmega&lt;/td&gt;
&lt;td&gt;RAMPS, Melzi, RAMBo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.microchip.com/wwwproducts/en/AT90USB1286" rel="nofollow"&gt;Teensy++ 2.0&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;AT90USB1286&lt;/td&gt;
&lt;td&gt;Printrboard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.arduino.cc/en/Guide/ArduinoDue" rel="nofollow"&gt;Arduino Due&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SAM3X8E&lt;/td&gt;
&lt;td&gt;RAMPS-FD, RADDS, RAMPS4DUE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.nxp.com/products/microcontrollers-and-processors/arm-based-processors-and-mcus/lpc-cortex-m-mcus/lpc1700-cortex-m3/512kb-flash-64kb-sram-ethernet-usb-lqfp100-package:LPC1768FBD100" rel="nofollow"&gt;LPC1768&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M3&lt;/td&gt;
&lt;td&gt;MKS SBASE, Re-ARM, Selena Compact&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.nxp.com/products/processors-and-microcontrollers/arm-microcontrollers/general-purpose-mcus/lpc1700-cortex-m3/512kb-flash-64kb-sram-ethernet-usb-lqfp100-package:LPC1769FBD100" rel="nofollow"&gt;LPC1769&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M3&lt;/td&gt;
&lt;td&gt;Smoothieboard, Azteeg X5 mini, TH3D EZBoard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm32f103.html" rel="nofollow"&gt;STM32F103&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M3&lt;/td&gt;
&lt;td&gt;Malyan M200, GTM32 Pro, MKS Robin, BTT SKR Mini&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm32f401.html" rel="nofollow"&gt;STM32F401&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M4&lt;/td&gt;
&lt;td&gt;ARMED, Rumba32, SKR Pro, Lerdge, FYSETC S6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm32f7x6.html" rel="nofollow"&gt;STM32F7x6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M7&lt;/td&gt;
&lt;td&gt;The Borg, RemRam V1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.adafruit.com/product/4064" rel="nofollow"&gt;SAMD51P20A&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M4&lt;/td&gt;
&lt;td&gt;Adafruit Grand Central M4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.pjrc.com/store/teensy35.html" rel="nofollow"&gt;Teensy 3.5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.pjrc.com/store/teensy36.html" rel="nofollow"&gt;Teensy 3.6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-submitting-changes" class="anchor" aria-hidden="true" href="#submitting-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting Changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Submit &lt;strong&gt;Bug Fixes&lt;/strong&gt; as Pull Requests to the (&lt;a href="https://github.com/MarlinFirmware/Marlin/tree/bugfix-2.0.x"&gt;bugfix-2.0.x&lt;/a&gt;) branch.&lt;/li&gt;
&lt;li&gt;Submit &lt;strong&gt;New Features&lt;/strong&gt; to the (&lt;a href="https://github.com/MarlinFirmware/Marlin/tree/dev-2.1.x"&gt;dev-2.1.x&lt;/a&gt;) branch.&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href="http://marlinfw.org/docs/development/coding_standards.html" rel="nofollow"&gt;Coding Standards&lt;/a&gt; to gain points with the maintainers.&lt;/li&gt;
&lt;li&gt;Please submit your questions and concerns to the &lt;a href="https://github.com/MarlinFirmware/Marlin/issues"&gt;Issue Queue&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-marlin-support" class="anchor" aria-hidden="true" href="#marlin-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin Support&lt;/h2&gt;
&lt;p&gt;For best results getting help with configuration and troubleshooting, please use the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://marlinfw.org" rel="nofollow"&gt;Marlin Documentation&lt;/a&gt; - Official Marlin documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/n5NJ59y" rel="nofollow"&gt;Marlin Discord&lt;/a&gt; - Discuss issues with Marlin users and developers&lt;/li&gt;
&lt;li&gt;Facebook Group &lt;a href="https://www.facebook.com/groups/1049718498464482/" rel="nofollow"&gt;"Marlin Firmware"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RepRap.org &lt;a href="http://forums.reprap.org/list.php?415" rel="nofollow"&gt;Marlin Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discuss.toms3d.org/" rel="nofollow"&gt;Tom's 3D Forums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Facebook Group &lt;a href="https://www.facebook.com/groups/3Dtechtalk/" rel="nofollow"&gt;"Marlin Firmware for 3D Printers"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/results?search_query=marlin+configuration" rel="nofollow"&gt;Marlin Configuration&lt;/a&gt; on YouTube&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The current Marlin dev team consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scott Lahteine [&lt;a href="https://github.com/thinkyhead"&gt;@thinkyhead&lt;/a&gt;] - USA   &lt;a href="http://www.thinkyhead.com/donate-to-marlin" rel="nofollow"&gt;Donate&lt;/a&gt; / Flattr: &lt;a href="https://flattr.com/submit/auto?user_id=thinkyhead&amp;amp;url=https://github.com/MarlinFirmware/Marlin&amp;amp;title=Marlin&amp;amp;language=&amp;amp;tags=github&amp;amp;category=software" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/739a757846f69c1cc10163619eec008e871b591b/687474703a2f2f6170692e666c617474722e636f6d2f627574746f6e2f666c617474722d62616467652d6c617267652e706e67" alt="Flattr Scott" data-canonical-src="http://api.flattr.com/button/flattr-badge-large.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Roxanne Neufeld [&lt;a href="https://github.com/Roxy-3D"&gt;@Roxy-3D&lt;/a&gt;] - USA&lt;/li&gt;
&lt;li&gt;Chris Pepper [&lt;a href="https://github.com/p3p"&gt;@p3p&lt;/a&gt;] - UK&lt;/li&gt;
&lt;li&gt;Bob Kuhn [&lt;a href="https://github.com/Bob-the-Kuhn"&gt;@Bob-the-Kuhn&lt;/a&gt;] - USA&lt;/li&gt;
&lt;li&gt;João Brazio [&lt;a href="https://github.com/jbrazio"&gt;@jbrazio&lt;/a&gt;] - Portugal&lt;/li&gt;
&lt;li&gt;Erik van der Zalm [&lt;a href="https://github.com/ErikZalm"&gt;@ErikZalm&lt;/a&gt;] - Netherlands   &lt;a href="https://flattr.com/submit/auto?user_id=ErikZalm&amp;amp;url=https://github.com/MarlinFirmware/Marlin&amp;amp;title=Marlin&amp;amp;language=&amp;amp;tags=github&amp;amp;category=software" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/739a757846f69c1cc10163619eec008e871b591b/687474703a2f2f6170692e666c617474722e636f6d2f627574746f6e2f666c617474722d62616467652d6c617267652e706e67" alt="Flattr Erik" data-canonical-src="http://api.flattr.com/button/flattr-badge-large.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Marlin is published under the &lt;a href="/LICENSE"&gt;GPL license&lt;/a&gt; because we believe in open development. The GPL comes with both rights and obligations. Whether you use Marlin firmware as the driver for your open or closed-source product, you must keep Marlin open, and you must provide your compatible Marlin source code to end users upon request. The most straightforward way to comply with the Marlin license is to make a fork of Marlin on Github, perform your modifications, and direct users to your modified fork.&lt;/p&gt;
&lt;p&gt;While we can't prevent the use of this code in products (3D printers, CNC, etc.) that are closed source or crippled by a patent, we would prefer that you choose another firmware or, better yet, make your own.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>MarlinFirmware</author><guid isPermaLink="false">https://github.com/MarlinFirmware/Marlin</guid><pubDate>Thu, 26 Dec 2019 00:05:00 GMT</pubDate></item><item><title>microsoft/terminal #6 in C++, This month</title><link>https://github.com/microsoft/terminal</link><description>&lt;p&gt;&lt;i&gt;The new Windows Terminal, and the original Windows console host - all in the same place!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-welcome-to-the-windows-terminal-console-and-command-line-repo" class="anchor" aria-hidden="true" href="#welcome-to-the-windows-terminal-console-and-command-line-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to the Windows Terminal, Console and Command-Line repo&lt;/h1&gt;
&lt;p&gt;This repository contains the source code for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/p/windows-terminal-preview/9n0dx20hk701" rel="nofollow"&gt;Windows Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Windows console host (&lt;code&gt;conhost.exe&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Components shared between the two projects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/tree/master/src/tools/ColorTool"&gt;ColorTool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/tree/master/samples"&gt;Sample projects&lt;/a&gt; that show how to consume the Windows Console APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Related repositories include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MicrosoftDocs/Console-Docs"&gt;Console API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Cascadia-Code"&gt;Cascadia Code Font&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installing-and-running-windows-terminal" class="anchor" aria-hidden="true" href="#installing-and-running-windows-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing and running Windows Terminal&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; Note: Windows Terminal requires Windows 10 1903 (build 18362) or later&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-manually-installing-builds-from-this-repository" class="anchor" aria-hidden="true" href="#manually-installing-builds-from-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually installing builds from this repository&lt;/h3&gt;
&lt;p&gt;For users who are unable to install Terminal from the Microsoft Store, Terminal builds can be manually downloaded from this repository's &lt;a href="https://github.com/microsoft/terminal/releases"&gt;Releases page&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⚠ Note: If you install Terminal manually:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be sure to install the &lt;a href="https://www.microsoft.com/en-us/download/details.aspx?id=53175" rel="nofollow"&gt;Desktop Bridge VC++ v14 Redistributable Package&lt;/a&gt; otherwise Terminal may not install and/or run and may crash at startup&lt;/li&gt;
&lt;li&gt;Terminal will not auto-update when new builds are released so you will need to regularly install the latest Terminal release to receive all the latest fixes and improvements!&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-install-via-chocolatey-unofficial" class="anchor" aria-hidden="true" href="#install-via-chocolatey-unofficial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install via Chocolatey (unofficial)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chocolatey.org" rel="nofollow"&gt;Chocolatey&lt;/a&gt; users can download and install the latest Terminal release by installing the &lt;code&gt;microsoft-windows-terminal&lt;/code&gt; package:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;choco install microsoft&lt;span class="pl-k"&gt;-&lt;/span&gt;windows&lt;span class="pl-k"&gt;-&lt;/span&gt;terminal&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To upgrade Windows Terminal using Chocolatey, run the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;choco upgrade microsoft&lt;span class="pl-k"&gt;-&lt;/span&gt;windows&lt;span class="pl-k"&gt;-&lt;/span&gt;terminal&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have any issues when installing/upgrading the package please go to the &lt;a href="https://chocolatey.org/packages/microsoft-windows-terminal" rel="nofollow"&gt;Windows Terminal package page&lt;/a&gt; and follow the &lt;a href="https://chocolatey.org/docs/package-triage-process" rel="nofollow"&gt;Chocolatey triage process&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-project-build-status" class="anchor" aria-hidden="true" href="#project-build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Build Status&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Project&lt;/th&gt;
&lt;th&gt;Build Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Terminal&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/ms/Terminal/_build?definitionId=136" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/68b3641b349416aae435031ac10c3d4cf5111af1/68747470733a2f2f6465762e617a7572652e636f6d2f6d732f5465726d696e616c2f5f617069732f6275696c642f7374617475732f5465726d696e616c25323043493f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/ms/Terminal/_apis/build/status/Terminal%20CI?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ColorTool&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5f0bb274d277032d46bb648be44bdf30c4ce1978/68747470733a2f2f6d6963726f736f66742e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f63393365383637612d383831352d343363312d393263342d6537646435343034663165312f31373032332f6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/5f0bb274d277032d46bb648be44bdf30c4ce1978/68747470733a2f2f6d6963726f736f66742e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f63393365383637612d383831352d343363312d393263342d6537646435343034663165312f31373032332f6261646765" alt="" data-canonical-src="https://microsoft.visualstudio.com/_apis/public/build/definitions/c93e867a-8815-43c1-92c4-e7dd5404f1e1/17023/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-windows-terminal-v10-roadmap" class="anchor" aria-hidden="true" href="#windows-terminal-v10-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows Terminal v1.0 Roadmap&lt;/h2&gt;
&lt;p&gt;The plan for delivering Windows Terminal v1.0 &lt;a href="/doc/terminal-v1-roadmap.md"&gt;is described here&lt;/a&gt;, and will be updated as the project proceeds.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-terminal--console-overview" class="anchor" aria-hidden="true" href="#terminal--console-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal &amp;amp; Console Overview&lt;/h2&gt;
&lt;p&gt;Please take a few minutes to review the overview below before diving into the code:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows-terminal" class="anchor" aria-hidden="true" href="#windows-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows Terminal&lt;/h3&gt;
&lt;p&gt;Windows Terminal is a new, modern, feature-rich, productive terminal application for command-line users. It includes many of the features most frequently requested by the Windows command-line community including support for tabs, rich text, globalization, configurability, theming &amp;amp; styling, and more.&lt;/p&gt;
&lt;p&gt;The Terminal will also need to meet our goals and measures to ensure it remains fast and efficient, and doesn't consume vast amounts of memory or power.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-the-windows-console-host" class="anchor" aria-hidden="true" href="#the-windows-console-host"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Windows Console Host&lt;/h3&gt;
&lt;p&gt;The Windows Console host, &lt;code&gt;conhost.exe&lt;/code&gt;, is Windows' original command-line user experience. It also hosts Windows' command-line infrastructure and the Windows Console API server, input engine, rendering engine, user preferences, etc. The console host code in this repository is the actual source from which the &lt;code&gt;conhost.exe&lt;/code&gt; in Windows itself is built.&lt;/p&gt;
&lt;p&gt;Since taking ownership of the Windows command-line in 2014, the team added several new features to the Console, including background transparency, line-based selection, support for &lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code" rel="nofollow"&gt;ANSI / Virtual Terminal sequences&lt;/a&gt;, &lt;a href="https://devblogs.microsoft.com/commandline/24-bit-color-in-the-windows-console/" rel="nofollow"&gt;24-bit color&lt;/a&gt;, a &lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/" rel="nofollow"&gt;Pseudoconsole ("ConPTY")&lt;/a&gt;, and more.&lt;/p&gt;
&lt;p&gt;However, because Windows Console's primary goal is to maintain backward compatibility, we have been unable to add many of the features the community (and the team) have been wanting for the last several years including tabs, unicode text, and emoji.&lt;/p&gt;
&lt;p&gt;These limitations led us to create the new Windows Terminal.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can read more about the evolution of the command-line in general, and the Windows command-line specifically in &lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-backgrounder/" rel="nofollow"&gt;this accompanying series of blog posts&lt;/a&gt; on the Command-Line team's blog.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-shared-components" class="anchor" aria-hidden="true" href="#shared-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shared Components&lt;/h3&gt;
&lt;p&gt;While overhauling Windows Console, we modernized its codebase considerably, cleanly separating logical entities into modules and classes, introduced some key extensibility points, replaced several old, home-grown collections and containers with safer, more efficient &lt;a href="https://docs.microsoft.com/en-us/cpp/standard-library/stl-containers?view=vs-2019" rel="nofollow"&gt;STL containers&lt;/a&gt;, and made the code simpler and safer by using Microsoft's &lt;a href="https://github.com/Microsoft/wil"&gt;Windows Implementation Libraries - WIL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This overhaul resulted in several of Console's key components being available for re-use in any terminal implementation on Windows. These components include a new DirectWrite-based text layout and rendering engine, a text buffer capable of storing both UTF-16 and UTF-8, a VT parser/emitter, and more.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-creating-the-new-windows-terminal" class="anchor" aria-hidden="true" href="#creating-the-new-windows-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating the new Windows Terminal&lt;/h3&gt;
&lt;p&gt;When we started planning the new Windows Terminal application, we explored and evaluated several approaches and technology stacks. We ultimately decided that our goals would be best met by continuing our investment in our C++ codebase, which would allow us to reuse several of the aforementioned modernized components in both the existing Console and the new Terminal. Further, we realized that this would allow us to build much of the Terminal's core itself as a reusable UI control that others can incorporate into their own applications.&lt;/p&gt;
&lt;p&gt;The result of this work is contained within this repo and delivered as the Windows Terminal application you can download from the Microsoft Store, or &lt;a href="https://github.com/microsoft/terminal/releases"&gt;directly from this repo's releases&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;For more information about Windows Terminal, you may find some of these resources useful and interesting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/commandline" rel="nofollow"&gt;Command-Line Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-backgrounder/" rel="nofollow"&gt;Command-Line Backgrounder Blog Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows Terminal Launch: &lt;a href="https://www.youtube.com/watch?v=8gw0rXPMMPE&amp;amp;list=PLEHMQNlPj-Jzh9DkNpqipDGCZZuOwrQwR&amp;amp;index=2&amp;amp;t=0s" rel="nofollow"&gt;Terminal "Sizzle Video"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows Terminal Launch: &lt;a href="https://www.youtube.com/watch?v=KMudkRcwjCw" rel="nofollow"&gt;Build 2019 Session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run As Radio: &lt;a href="http://www.runasradio.com/Shows/Show/645" rel="nofollow"&gt;Show 645 - Windows Terminal with Richard Turner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Azure Devops Podcast: &lt;a href="http://azuredevopspodcast.clear-measure.com/kayla-cinnamon-and-rich-turner-on-devops-on-the-windows-terminal-team-episode-54" rel="nofollow"&gt;Episode 54 - Kayla Cinnamon and Rich Turner on DevOps on the Windows Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft Ignite 2019 Session: &lt;a href="https://myignite.techcommunity.microsoft.com/sessions/81329?source=sessions" rel="nofollow"&gt;The Modern Windows Command Line: Windows Terminal - BRK3321&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-i-built-and-ran-the-new-terminal-but-it-looks-just-like-the-old-console" class="anchor" aria-hidden="true" href="#i-built-and-ran-the-new-terminal-but-it-looks-just-like-the-old-console"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I built and ran the new Terminal, but it looks just like the old console&lt;/h3&gt;
&lt;p&gt;Cause: You're launching the incorrect solution in Visual Studio.&lt;/p&gt;
&lt;p&gt;Solution: Make sure you're building &amp;amp; deploying the &lt;code&gt;CascadiaPackage&lt;/code&gt; project in Visual Studio.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⚠ Note: &lt;code&gt;OpenConsole.exe&lt;/code&gt; is just a locally-built &lt;code&gt;conhost.exe&lt;/code&gt;, the classic Windows Console that hosts Windows' command-line infrastructure. OpenConsole is used by Windows Terminal to connect to and communicate with command-line applications (via &lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/" rel="nofollow"&gt;ConPty&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;All project documentation is located in the &lt;code&gt;./doc&lt;/code&gt; folder. If you would like to contribute to the documentation, please submit a pull request.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We are excited to work alongside you, our amazing community, to build and enhance Windows Terminal!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;BEFORE you start work on a feature/fix&lt;/strong&gt;&lt;/em&gt;, please read &amp;amp; follow our &lt;a href="https://github.com/microsoft/terminal/blob/master/contributing.md"&gt;Contributor's Guide&lt;/a&gt; to help avoid any wasted or duplicate effort.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-communicating-with-the-team" class="anchor" aria-hidden="true" href="#communicating-with-the-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communicating with the Team&lt;/h2&gt;
&lt;p&gt;The easiest way to communicate with the team is via GitHub issues.&lt;/p&gt;
&lt;p&gt;Please file new issues, feature requests and suggestions, but &lt;strong&gt;DO search for similar open/closed pre-existing issues before creating a new issue.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you would like to ask a question that you feel doesn't warrant an issue (yet), please reach out to us via Twitter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kayla Cinnamon, Program Manager: &lt;a href="https://twitter.com/cinnamon_msft" rel="nofollow"&gt;@cinnamon_msft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rich Turner, Program Manager: &lt;a href="https://twitter.com/richturn_ms" rel="nofollow"&gt;@richturn_ms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dustin Howett, Engineering Lead: &lt;a href="https://twitter.com/DHowett" rel="nofollow"&gt;@dhowett&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Michael Niksa, Senior Developer: &lt;a href="https://twitter.com/MichaelNiksa" rel="nofollow"&gt;@michaelniksa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mike Griese, Developer: &lt;a href="https://twitter.com/zadjii" rel="nofollow"&gt;@zadjii&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Carlos Zamora, Developer: &lt;a href="https://twitter.com/cazamor_msft" rel="nofollow"&gt;@cazamor_msft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Leon Liang, Developer: &lt;a href="https://twitter.com/leonmsft" rel="nofollow"&gt;@leonmsft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-developer-guidance" class="anchor" aria-hidden="true" href="#developer-guidance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developer Guidance&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You must be running Windows 1903 (build &amp;gt;= 10.0.18362.0) or later to run Windows Terminal&lt;/li&gt;
&lt;li&gt;You must &lt;a href="https://docs.microsoft.com/en-us/windows/uwp/get-started/enable-your-device-for-development" rel="nofollow"&gt;enable Developer Mode in the Windows Settings app&lt;/a&gt; to locally install and run Windows Terminal&lt;/li&gt;
&lt;li&gt;You must have the &lt;a href="https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk" rel="nofollow"&gt;Windows 10 1903 SDK&lt;/a&gt; installed&lt;/li&gt;
&lt;li&gt;You must have at least &lt;a href="https://visualstudio.microsoft.com/downloads/" rel="nofollow"&gt;VS 2019&lt;/a&gt; installed&lt;/li&gt;
&lt;li&gt;You must install the following Workloads via the VS Installer. Note: Opening the solution in VS 2019 will &lt;a href="https://devblogs.microsoft.com/setup/configure-visual-studio-across-your-organization-with-vsconfig/" rel="nofollow"&gt;prompt you to install missing components automatically&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;Desktop Development with C++&lt;/li&gt;
&lt;li&gt;Universal Windows Platform Development&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The following Individual Components&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;C++ (v142) Universal Windows Platform Tools&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-code" class="anchor" aria-hidden="true" href="#building-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Code&lt;/h2&gt;
&lt;p&gt;This repository uses &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" rel="nofollow"&gt;git submodules&lt;/a&gt; for some of its dependencies. To make sure submodules are restored or updated, be sure to run the following prior to building:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git submodule update --init --recursive&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OpenConsole.sln may be built from within Visual Studio or from the command-line using a set of convenience scripts &amp;amp; tools in the &lt;strong&gt;/tools&lt;/strong&gt; directory:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-in-powershell" class="anchor" aria-hidden="true" href="#building-in-powershell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building in PowerShell&lt;/h3&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Import-Module&lt;/span&gt; .\tools\OpenConsole.psm1
&lt;span class="pl-c1"&gt;Set-MsBuildDevEnvironment&lt;/span&gt;
&lt;span class="pl-c1"&gt;Invoke-OpenConsoleBuild&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-in-cmd" class="anchor" aria-hidden="true" href="#building-in-cmd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building in Cmd&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;.&lt;span class="pl-cce"&gt;\t&lt;/span&gt;ools&lt;span class="pl-cce"&gt;\r&lt;/span&gt;azzle.cmd
bcz&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-debugging-terminal" class="anchor" aria-hidden="true" href="#debugging-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging Terminal&lt;/h2&gt;
&lt;p&gt;To debug Terminal in VS, right click on &lt;code&gt;CascadiaPackage&lt;/code&gt; (in the Solution Explorer) and go to properties. In the Debug menu, change "Application process" and "Background task process" to "Native Only".&lt;/p&gt;
&lt;p&gt;You should then be able to build &amp;amp; debug the Terminal project by hitting &lt;kbd&gt;F5&lt;/kbd&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To debug in VS, right click on CascadiaPackage (from VS Solution Explorer) and go to properties, in the Debug menu, change "Application process" and "Background task process" to "Native Only".&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-coding-guidance" class="anchor" aria-hidden="true" href="#coding-guidance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding Guidance&lt;/h3&gt;
&lt;p&gt;Please review these brief docs below about our coding practices.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; If you find something missing from these docs, feel free to contribute to any of our documentation files anywhere in the repository (or write some new ones!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a work in progress as we learn what we'll need to provide people in order to be effective contributors to our project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/STYLE.md"&gt;Coding Style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/ORGANIZATION.md"&gt;Code Organization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/EXCEPTIONS.md"&gt;Exceptions in our legacy codebase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/WIL.md"&gt;Helpful smart pointers and macros for interfacing with Windows in WIL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h1&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/terminal</guid><pubDate>Thu, 26 Dec 2019 00:06:00 GMT</pubDate></item><item><title>lemire/simdjson #7 in C++, This month</title><link>https://github.com/lemire/simdjson</link><description>&lt;p&gt;&lt;i&gt;Parsing gigabytes of JSON per second &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-simdjson--parsing-gigabytes-of-json-per-second" class="anchor" aria-hidden="true" href="#simdjson--parsing-gigabytes-of-json-per-second"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;simdjson : Parsing gigabytes of JSON per second&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cloud.drone.io/lemire/simdjson/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec1f8bbf9d7c2ece1571bb14b62b043975aa440f/68747470733a2f2f636c6f75642e64726f6e652e696f2f6170692f6261646765732f6c656d6972652f73696d646a736f6e2f7374617475732e737667" alt="Build Status" data-canonical-src="https://cloud.drone.io/api/badges/lemire/simdjson/status.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/lemire/simdjson" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0af3527ec8ecd39a54eb9ba135694bf55a2ddf7/68747470733a2f2f636972636c6563692e636f6d2f67682f6c656d6972652f73696d646a736f6e2e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/lemire/simdjson.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/lemire/simdjson" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1767d7deb339dfbc494fc52cdd559e28b77e964b/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f6c656d6972652f73696d646a736f6e2f6d61737465722e737667" alt="Build Status" data-canonical-src="https://img.shields.io/appveyor/ci/lemire/simdjson/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/447208e0b8e76dca9b01994d2c445850c30c0f6d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/License-Apache%202-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:simdjson" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/889432f637ee1b595725c76da8cc4d73112f1d2d/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f73696d646a736f6e2e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/simdjson.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-a-c-library-to-see-how-fast-we-can-parse-json-with-complete-validation" class="anchor" aria-hidden="true" href="#a-c-library-to-see-how-fast-we-can-parse-json-with-complete-validation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A C++ library to see how fast we can parse JSON with complete validation.&lt;/h2&gt;
&lt;p&gt;JSON documents are everywhere on the Internet. Servers spend a lot of time parsing these documents. We want to accelerate the parsing of JSON per se using commonly available SIMD instructions as much as possible while doing full validation (including character encoding). This library is part of the &lt;a href="https://awesomecpp.com" rel="nofollow"&gt;Awesome Modern C++&lt;/a&gt; list.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/logo.png"&gt;&lt;img src="images/logo.png" width="10%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-real-world-usage" class="anchor" aria-hidden="true" href="#real-world-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Real-world usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/FishStore"&gt;Microsoft FishStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yandex/ClickHouse"&gt;Yandex ClickHouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-research-article-vldb-journal" class="anchor" aria-hidden="true" href="#research-article-vldb-journal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Research article (VLDB Journal)&lt;/h2&gt;
&lt;p&gt;A description of the design and implementation of simdjson is in our research article:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geoff Langdale, Daniel Lemire, &lt;a href="https://arxiv.org/abs/1902.08318" rel="nofollow"&gt;Parsing Gigabytes of JSON per Second&lt;/a&gt;, VLDB Journal (to appear)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also have an informal &lt;a href="https://branchfree.org/2019/02/25/paper-parsing-gigabytes-of-json-per-second/" rel="nofollow"&gt;blog post providing some background and context&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some people &lt;a href="https://arxiv.org/abs/1902.08318" rel="nofollow"&gt;enjoy reading our paper&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/halvarflake/status/1118459536686362625" rel="nofollow"&gt;&lt;img src="images/halvarflake.png" width="50%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance-results" class="anchor" aria-hidden="true" href="#performance-results"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance results&lt;/h2&gt;
&lt;p&gt;simdjson uses three-quarters less instructions than state-of-the-art parser RapidJSON and fifty percent less than sajson. To our knowledge, simdjson is the first fully-validating JSON parser to run at gigabytes per second on commodity processors.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/gbps.png"&gt;&lt;img src="doc/gbps.png" width="90%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On a Skylake processor, the parsing speeds (in GB/s) of various processors on the twitter.json file are as follows.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;parser&lt;/th&gt;
&lt;th&gt;GB/s&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;simdjson&lt;/td&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RapidJSON encoding-validation&lt;/td&gt;
&lt;td&gt;0.51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RapidJSON encoding-validation, insitu&lt;/td&gt;
&lt;td&gt;0.71&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sajson (insitu, dynamic)&lt;/td&gt;
&lt;td&gt;0.70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sajson (insitu, static)&lt;/td&gt;
&lt;td&gt;0.97&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dropbox&lt;/td&gt;
&lt;td&gt;0.14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fastjson&lt;/td&gt;
&lt;td&gt;0.26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gason&lt;/td&gt;
&lt;td&gt;0.85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ultrajson&lt;/td&gt;
&lt;td&gt;0.42&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;jsmn&lt;/td&gt;
&lt;td&gt;0.28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cJSON&lt;/td&gt;
&lt;td&gt;0.34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JSON for Modern C++ (nlohmann/json)&lt;/td&gt;
&lt;td&gt;0.10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;We support 64-bit platforms like Linux or macOS, as well as Windows through Visual Studio 2017 or later.&lt;/li&gt;
&lt;li&gt;A processor with
&lt;ul&gt;
&lt;li&gt;AVX2 (i.e., Intel processors starting with the Haswell microarchitecture released 2013 and AMD processors starting with the Zen microarchitecture released 2017),&lt;/li&gt;
&lt;li&gt;or SSE 4.2 and CLMUL (i.e., Intel processors going back to Westmere released in 2010 or AMD processors starting with the Jaguar used in the PS4 and XBox One)&lt;/li&gt;
&lt;li&gt;or a 64-bit ARM processor (ARMv8-A): this covers a wide range of mobile processors, including all Apple processors currently available for sale, going as far back as the iPhone 5s (2013).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A recent C++ compiler (e.g., GNU GCC or LLVM CLANG or Visual Studio 2017), we assume C++17. GNU GCC 7 or better or LLVM's clang 6 or better.&lt;/li&gt;
&lt;li&gt;Some benchmark scripts assume bash and other common utilities, but they are optional.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This code is made available under the Apache License 2.0.&lt;/p&gt;
&lt;p&gt;Under Windows, we build some tools using the windows/dirent_portable.h file (which is outside our library code): it under the liberal (business-friendly) MIT license.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-usage-and-example" class="anchor" aria-hidden="true" href="#code-usage-and-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code usage and example&lt;/h2&gt;
&lt;p&gt;The main API involves populating a &lt;code&gt;ParsedJson&lt;/code&gt; object which hosts a fully navigable document-object-model (DOM) view of the JSON document. The DOM can be accessed using &lt;a href="https://tools.ietf.org/html/rfc6901" rel="nofollow"&gt;JSON Pointer&lt;/a&gt; paths, for example. The main function is &lt;code&gt;json_parse&lt;/code&gt; which takes a string containing the JSON document as well as a reference to pre-allocated &lt;code&gt;ParsedJson&lt;/code&gt; object (which can be reused multiple time). Once you have populated the &lt;code&gt;ParsedJson&lt;/code&gt; object you can navigate through the DOM with an iterator (e.g., created by &lt;code&gt;ParsedJson::Iterator pjh(pj)&lt;/code&gt;, see 'Navigating the parsed document').&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simdjson/jsonparser.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
using namespace simdjson;

/...

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; * filename = ... &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use whatever means you want to get a string (UTF-8) of your JSON document&lt;/span&gt;
padded_string p = get_corpus(filename);
ParsedJson pj;
pj.allocate_capacity(p.size()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; allocate memory for parsing up to p.size() bytes&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; res = json_parse(p, pj); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do the parsing, return 0 on success&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parsing is done!&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; (res != &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can use the "simdjson/simdjson.h" header to access the error message&lt;/span&gt;
    std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Error parsing:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class="pl-c1"&gt;simdjson::error_message&lt;/span&gt;(res) &amp;lt;&amp;lt; std::endl;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the ParsedJson document can be used here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pj can be reused with other json_parse calls.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also possible to use a simpler API if you do not mind having the overhead
of memory allocation with each new JSON document:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simdjson/jsonparser.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
using namespace simdjson;

/...

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; * filename = ... &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
padded_string p = get_corpus(filename);
ParsedJson pj = build_parsed_json(p); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do the parsing&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt;( ! pj.is_valid() ) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; something went wrong&lt;/span&gt;
    std::cout &amp;lt;&amp;lt; pj.&lt;span class="pl-c1"&gt;get_error_message&lt;/span&gt;() &amp;lt;&amp;lt; std::endl;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Though the &lt;code&gt;padded_string&lt;/code&gt; class is recommended for best performance, you can call &lt;code&gt;json_parse&lt;/code&gt; and &lt;code&gt;build_parsed_json&lt;/code&gt;, passing a standard &lt;code&gt;std::string&lt;/code&gt; object.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simdjson/jsonparser.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
using namespace simdjson;

/...
std::string mystring = ... &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
ParsedJson pj;
pj.allocate_capacity(mystring.size()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; allocate memory for parsing up to p.size() bytes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; std::string may not overallocate so a copy will be needed&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; res = json_parse(mystring, pj); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do the parsing, return 0 on success&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parsing is done!&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; (res != &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can use the "simdjson/simdjson.h" header to access the error message&lt;/span&gt;
    std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Error parsing:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class="pl-c1"&gt;simdjson::error_message&lt;/span&gt;(res) &amp;lt;&amp;lt; std::endl;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pj can be reused with other json_parse calls.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simdjson/jsonparser.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
using namespace simdjson;

/...

std::string mystring = ... &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; std::string may not overallocate so a copy will be needed&lt;/span&gt;
ParsedJson pj = build_parsed_json(mystring); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do the parsing&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt;( ! pj.is_valid() ) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; something went wrong&lt;/span&gt;
    std::cout &amp;lt;&amp;lt; pj.&lt;span class="pl-c1"&gt;get_error_message&lt;/span&gt;() &amp;lt;&amp;lt; std::endl;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As needed, the &lt;code&gt;json_parse&lt;/code&gt; and &lt;code&gt;build_parsed_json&lt;/code&gt; functions copy the input data to a temporary buffer readable up to SIMDJSON_PADDING bytes beyond the end of the data.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-json-streaming" class="anchor" aria-hidden="true" href="#json-streaming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON streaming&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;API and detailed documentation found &lt;a href="doc/JsonStream.md"&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is a simple example, using single header simdjson:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simdjson.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simdjson.cpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;parse_file&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *filename) {
    simdjson::padded_string p = &lt;span class="pl-c1"&gt;simdjson::get_corpus&lt;/span&gt;(filename);
    simdjson::ParsedJson pj;
    simdjson::JsonStream js{p};
    &lt;span class="pl-k"&gt;int&lt;/span&gt; parse_res = simdjson::SUCCESS_AND_HAS_MORE;
    
    &lt;span class="pl-k"&gt;while&lt;/span&gt; (parse_res == simdjson::SUCCESS_AND_HAS_MORE) {
            parse_res = js.&lt;span class="pl-c1"&gt;json_parse&lt;/span&gt;(pj);

            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Do something with pj...&lt;/span&gt;
        }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage-easy-single-header-version" class="anchor" aria-hidden="true" href="#usage-easy-single-header-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage: easy single-header version&lt;/h2&gt;
&lt;p&gt;See the "singleheader" repository for a single header version. See the included
file "amalgamation_demo.cpp" for usage. This requires no specific build system: just
copy the files in your project in your include path. You can then include them quite simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simdjson.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simdjson.cpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
using namespace simdjson;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt; *argv[]) {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; * filename = argv[&lt;span class="pl-c1"&gt;1&lt;/span&gt;];
  padded_string p = &lt;span class="pl-c1"&gt;get_corpus&lt;/span&gt;(filename);
  ParsedJson pj = &lt;span class="pl-c1"&gt;build_parsed_json&lt;/span&gt;(p); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do the parsing&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt;( ! pj.&lt;span class="pl-c1"&gt;is_valid&lt;/span&gt;() ) {
    std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not valid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; std::endl;
    std::cout &amp;lt;&amp;lt; pj.&lt;span class="pl-c1"&gt;get_error_message&lt;/span&gt;() &amp;lt;&amp;lt; std::endl;
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;valid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; std::endl;
  }
  &lt;span class="pl-k"&gt;return&lt;/span&gt; EXIT_SUCCESS;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: In some settings, it might be desirable to precompile &lt;code&gt;simdjson.cpp&lt;/code&gt; instead of including it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-runtime-dispatch" class="anchor" aria-hidden="true" href="#runtime-dispatch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Runtime dispatch&lt;/h2&gt;
&lt;p&gt;On Intel and AMD processors, we get best performance by using the hardware support for AVX2 instructions. However, simdjson also
runs on older Intel and AMD processors. We require a minimum feature support of SSE 4.2 and CLMUL (2010 Intel Westmere or better).
The code automatically detects the feature set of your processor and switches to the right function at runtime (a technique
sometimes called runtime dispatch).&lt;/p&gt;
&lt;p&gt;We also support 64-bit ARM. We assume NEON support, and if the cryptographic extension is available, we leverage it, at compile-time.
There is no runtime dispatch on ARM.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thread-safety" class="anchor" aria-hidden="true" href="#thread-safety"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thread safety&lt;/h2&gt;
&lt;p&gt;The simdjson library is single-threaded. Thread safety is the responsability of the caller: it is unsafe to reuse a ParsedJson object between different threads.&lt;/p&gt;
&lt;p&gt;If you are on an x64 processor, the runtime dispatching assigns the right code path the first time that parsing is attempted. The runtime dispatching is thread-safe.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage-old-school-makefile-on-platforms-like-linux-or-macos" class="anchor" aria-hidden="true" href="#usage-old-school-makefile-on-platforms-like-linux-or-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage (old-school Makefile on platforms like Linux or macOS)&lt;/h2&gt;
&lt;p&gt;Requirements: recent clang or gcc, and make. We recommend at least GNU GCC/G++ 7 or LLVM clang 6. A 64-bit system like Linux or macOS is expected.&lt;/p&gt;
&lt;p&gt;To test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make
make test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run benchmarks:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make parse
./parse jsonexamples/twitter.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Under Linux, the &lt;code&gt;parse&lt;/code&gt; command gives a detailed analysis of the performance counters.&lt;/p&gt;
&lt;p&gt;To run comparative benchmarks (with other parsers):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make benchmark
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage-cmake-on-64-bit-platforms-like-linux-or-macos" class="anchor" aria-hidden="true" href="#usage-cmake-on-64-bit-platforms-like-linux-or-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage (CMake on 64-bit platforms like Linux or macOS)&lt;/h2&gt;
&lt;p&gt;Requirements: We require a recent version of cmake. On macOS, the easiest way to install cmake might be to use &lt;a href="https://brew.sh" rel="nofollow"&gt;brew&lt;/a&gt; and then type&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install cmake
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is an &lt;a href="https://linuxbrew.sh" rel="nofollow"&gt;equivalent brew on Linux which works the same way as well&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You need a recent compiler like clang or gcc. We recommend at least GNU GCC/G++ 7 or LLVM clang 6. For example, you can install a recent compiler with brew:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install gcc@8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Optional: You need to tell cmake which compiler you wish to use by setting the CC and CXX variables. Under bash, you can do so with commands such as &lt;code&gt;export CC=gcc-7&lt;/code&gt; and &lt;code&gt;export CXX=g++-7&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Building: While in the project repository, do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir build
cd build
cmake ..
make
make test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;CMake will build a library. By default, it builds a shared library (e.g., libsimdjson.so on Linux).&lt;/p&gt;
&lt;p&gt;You can build a static library:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir buildstatic
cd buildstatic
cmake -DSIMDJSON_BUILD_STATIC=ON ..
make
make test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In some cases, you may want to specify your compiler, especially if the default compiler on your system is too old. You may proceed as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install gcc@8
mkdir build
cd build
export CXX=g++-8 CC=gcc-8
cmake ..
make
make test
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage-cmake-on-64-bit-windows-using-visual-studio" class="anchor" aria-hidden="true" href="#usage-cmake-on-64-bit-windows-using-visual-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage (CMake on 64-bit Windows using Visual Studio)&lt;/h2&gt;
&lt;p&gt;We assume you have a common 64-bit Windows PC with at least Visual Studio 2017 and an x64 processor with AVX2 support (2013 Intel Haswell or later) or SSE 4.2 + CLMUL (2010 Westmere or later).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Grab the simdjson code from GitHub, e.g., by cloning it using &lt;a href="https://desktop.github.com/"&gt;GitHub Desktop&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://cmake.org/download/" rel="nofollow"&gt;CMake&lt;/a&gt;. When you install it, make sure to ask that &lt;code&gt;cmake&lt;/code&gt; be made available from the command line. Please choose a recent version of cmake.&lt;/li&gt;
&lt;li&gt;Create a subdirectory within simdjson, such as &lt;code&gt;VisualStudio&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Using a shell, go to this newly created directory.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;cmake -DCMAKE_GENERATOR_PLATFORM=x64 ..&lt;/code&gt; in the shell while in the &lt;code&gt;VisualStudio&lt;/code&gt; repository. (Alternatively, if you want to build a DLL, you may use the command line &lt;code&gt;cmake -DCMAKE_GENERATOR_PLATFORM=x64 -DSIMDJSON_BUILD_STATIC=OFF ..&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;This last command (&lt;code&gt;cmake ...&lt;/code&gt;) created a Visual Studio solution file in the newly created directory (e.g., &lt;code&gt;simdjson.sln&lt;/code&gt;). Open this file in Visual Studio. You should now be able to build the project and run the tests. For example, in the &lt;code&gt;Solution Explorer&lt;/code&gt; window (available from the &lt;code&gt;View&lt;/code&gt; menu), right-click &lt;code&gt;ALL_BUILD&lt;/code&gt; and select &lt;code&gt;Build&lt;/code&gt;. To test the code, still in the &lt;code&gt;Solution Explorer&lt;/code&gt; window, select &lt;code&gt;RUN_TESTS&lt;/code&gt; and select &lt;code&gt;Build&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage-using-vcpkg-on-64-bit-windows-linux-and-macos" class="anchor" aria-hidden="true" href="#usage-using-vcpkg-on-64-bit-windows-linux-and-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage (Using &lt;code&gt;vcpkg&lt;/code&gt; on 64-bit Windows, Linux and macOS)&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Microsoft/vcpkg"&gt;vcpkg&lt;/a&gt; users on Windows, Linux and macOS can download and install &lt;code&gt;simdjson&lt;/code&gt; with one single command from their favorite shell.&lt;/p&gt;
&lt;p&gt;On 64-bit Linux and macOS:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./vcpkg install simdjson
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will build and install &lt;code&gt;simdjson&lt;/code&gt; as a static library.&lt;/p&gt;
&lt;p&gt;On Windows (64-bit):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.\vcpkg.exe install simdjson:x64-windows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will build and install &lt;code&gt;simdjson&lt;/code&gt; as a shared library.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.\vcpkg.exe install simdjson:x64-windows-static  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will build and install &lt;code&gt;simdjson&lt;/code&gt; as a static library.&lt;/p&gt;
&lt;p&gt;These commands will also print out instructions on how to use the library from MSBuild or CMake-based projects.&lt;/p&gt;
&lt;p&gt;If you find the version of &lt;code&gt;simdjson&lt;/code&gt; shipped with &lt;code&gt;vcpkg&lt;/code&gt; is out-of-date, feel free to report it to &lt;code&gt;vcpkg&lt;/code&gt; community either by submiting an issue or by creating a PR.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;json2json mydoc.json&lt;/code&gt; parses the document, constructs a model and then dumps back the result to standard output.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json2json -d mydoc.json&lt;/code&gt; parses the document, constructs a model and then dumps model (as a tape) to standard output. The tape format is described in the accompanying file &lt;code&gt;tape.md&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minify mydoc.json&lt;/code&gt; minifies the JSON document, outputting the result to standard output. Minifying means to remove the unneeded white space characters.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jsonpointer mydoc.json &amp;lt;jsonpath&amp;gt; &amp;lt;jsonpath&amp;gt; ... &amp;lt;jsonpath&amp;gt;&lt;/code&gt; parses the document, constructs a model and then processes a series of &lt;a href="https://tools.ietf.org/html/rfc6901" rel="nofollow"&gt;JSON Pointer paths&lt;/a&gt;. The result is itself a JSON document.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-scope" class="anchor" aria-hidden="true" href="#scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scope&lt;/h2&gt;
&lt;p&gt;We provide a fast parser, that fully validates an input according to various specifications.
The parser builds a useful immutable (read-only) DOM (document-object model) which can be later accessed.&lt;/p&gt;
&lt;p&gt;To simplify the engineering, we make some assumptions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We support UTF-8 (and thus ASCII), nothing else (no Latin, no UTF-16). We do not believe this is a genuine limitation, because we do not think there is any serious application that needs to process JSON data without an ASCII or UTF-8 encoding. If the UTF-8 contains a leading BOM, it should be omitted: the user is responsible for detecting and skipping the BOM; UTF-8 BOMs are discouraged.&lt;/li&gt;
&lt;li&gt;All strings in the JSON document may have up to 4294967295 bytes in UTF-8 (4GB). To enforce this constraint, we refuse to parse a document that contains more than 4294967295 bytes (4GB). This should accommodate most JSON documents.&lt;/li&gt;
&lt;li&gt;As allowed by the specification, we allow repeated keys within an object (other parsers like sajson do the same).&lt;/li&gt;
&lt;li&gt;Performance is optimized for JSON documents spanning at least a tens kilobytes up to many megabytes: the performance issues with having to parse many tiny JSON documents or one truly enormous JSON document are different.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;We do not aim to provide a general-purpose JSON library.&lt;/em&gt; A library like RapidJSON offers much more than just parsing, it helps you generate JSON and offers various other convenient functions. We merely parse the document.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The input string is unmodified. (Parsers like sajson and RapidJSON use the input string as a buffer.)&lt;/li&gt;
&lt;li&gt;We parse integers and floating-point numbers as separate types which allows us to support large signed 64-bit integers in [-9223372036854775808,9223372036854775808), like a Java &lt;code&gt;long&lt;/code&gt; or a C/C++ &lt;code&gt;long long&lt;/code&gt; and large unsigned integers up to the value 18446744073709551615. Among the parsers that differentiate between integers and floating-point numbers, not all support 64-bit integers. (For example, sajson rejects JSON files with integers larger than or equal to 2147483648. RapidJSON will parse a file containing an overly long integer like 18446744073709551616 as a floating-point number.) When we cannot represent exactly an integer as a signed or unsigned 64-bit value, we reject the JSON document.&lt;/li&gt;
&lt;li&gt;We support the full range of 64-bit floating-point numbers (binary64). The values range from &lt;code&gt; std::numeric_limits&amp;lt;double&amp;gt;::lowest()&lt;/code&gt;  to &lt;code&gt;std::numeric_limits&amp;lt;double&amp;gt;::max()&lt;/code&gt;, so from -1.7976e308 all the way to 1.7975e308. Extreme values (less or equal to -1e308, greater or equal to 1e308) are rejected: we refuse to parse the input document.&lt;/li&gt;
&lt;li&gt;We test for accurate float parsing with a bound on the &lt;a href="https://en.wikipedia.org/wiki/Unit_in_the_last_place" rel="nofollow"&gt;unit of least precision (ULP)&lt;/a&gt; of one. Practically speaking, this implies 15 digits of accuracy or better.&lt;/li&gt;
&lt;li&gt;We do full UTF-8 validation as part of the parsing. (Parsers like fastjson, gason and dropbox json11 do not do UTF-8 validation. The sajson parser does incomplete UTF-8 validation, accepting code point
sequences like 0xb1 0x87.)&lt;/li&gt;
&lt;li&gt;We fully validate the numbers. (Parsers like gason and ultranjson will accept &lt;code&gt;[0e+]&lt;/code&gt; as valid JSON.)&lt;/li&gt;
&lt;li&gt;We validate string content for unescaped characters. (Parsers like fastjson and ultrajson accept unescaped line breaks and tabs in strings.)&lt;/li&gt;
&lt;li&gt;We fully validate the white-space characters outside of the strings. Parsers like RapidJSON will accept JSON documents with null characters outside of strings.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h2&gt;
&lt;p&gt;The parser works in two stages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stage 1. (Find marks) Identifies quickly structure elements, strings, and so forth. We validate UTF-8 encoding at that stage.&lt;/li&gt;
&lt;li&gt;Stage 2. (Structure building) Involves constructing a "tree" of sort (materialized as a tape) to navigate through the data. Strings and numbers are parsed at this stage.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-json-pointer" class="anchor" aria-hidden="true" href="#json-pointer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Pointer&lt;/h2&gt;
&lt;p&gt;We can navigate the parsed JSON using JSON Pointers as per the &lt;a href="https://tools.ietf.org/html/rfc6901" rel="nofollow"&gt;RFC6901 standard&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can build a tool (jsonpointer) to parse a JSON document and then issue an array of JSON Pointer queries:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make jsonpointer
 ./jsonpointer jsonexamples/small/demo.json /Image/Width /Image/Height /Image/IDs/2
 ./jsonpointer jsonexamples/twitter.json /statuses/0/id /statuses/1/id /statuses/2/id /statuses/3/id /statuses/4/id /statuses/5/id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In C++, given a &lt;code&gt;ParsedJson&lt;/code&gt;, we can move to a node with the &lt;code&gt;move_to&lt;/code&gt; method, passing a &lt;code&gt;std::string&lt;/code&gt; representing the JSON Pointer query.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-navigating-the-parsed-document" class="anchor" aria-hidden="true" href="#navigating-the-parsed-document"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Navigating the parsed document&lt;/h2&gt;
&lt;p&gt;From a &lt;code&gt;simdjson::ParsedJson&lt;/code&gt; instance, you can create an iterator (of type &lt;code&gt;simdjson::ParsedJson::Iterator&lt;/code&gt; which is in fact &lt;code&gt;simdjson::ParsedJson::BasicIterator&amp;lt;DEFAULT_MAX_DEPTH&amp;gt;&lt;/code&gt; ) via a constructor:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ParsedJson::Iterator pjh(pj); // pj is a ParsedJSON
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You then have access to the following methods on the resulting &lt;code&gt;simdjson::ParsedJson::Iterator&lt;/code&gt;  instance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bool is_ok() const&lt;/code&gt;: whether you have a valid iterator, will be false if your parent parsed ParsedJson is not a valid JSON.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;size_t get_depth() const&lt;/code&gt;:  returns the current depth (start at 1 with 0 reserved for the fictitious root node)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int8_t get_scope_type() const&lt;/code&gt;: a scope is a series of nodes at the same depth, typically it is either an object (&lt;code&gt;{&lt;/code&gt;) or an array (&lt;code&gt;[&lt;/code&gt;). The root node has type 'r'.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool move_forward()&lt;/code&gt;:  move forward in document order&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uint8_t get_type() const&lt;/code&gt;: retrieve the character code of what we're looking at: &lt;code&gt;[{"slutfn&lt;/code&gt; are the possibilities&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int64_t get_integer() const&lt;/code&gt;: get the int64_t value at this node; valid only if get_type() is "l"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uint64_t get_unsigned_integer() const&lt;/code&gt;: get the value as uint64; valid only if get_type() is "u"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const char *get_string() const&lt;/code&gt;: get the string value at this node (NULL ended); valid only if get_type()  is ", note that tabs, and line endings are escaped in the returned value, return value is valid UTF-8, it may contain NULL chars, get_string_length() determines the true string length.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uint32_t get_string_length() const&lt;/code&gt;: return the length of the string in bytes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;double get_double() const&lt;/code&gt;: get the double value at this node; valid only if gettype() is "d"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_object_or_array() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_object() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_array() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_string() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_integer() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_unsigned_integer() const&lt;/code&gt;: Returns true if the current type of node is an unsigned integer. You can get its value with &lt;code&gt;get_unsigned_integer()&lt;/code&gt;. Only a large value, which is out of range of a 64-bit signed integer, is represented internally as an unsigned node. On the other hand, a typical positive integer, such as 1, 42, or 1000000, is as a signed node. Be aware this function returns false for a signed node.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_double() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_number() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_true() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_false() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_null() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool is_number() const&lt;/code&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool move_to_key(const char *key)&lt;/code&gt;: when at {, go one level deep, looking for a given key, if successful, we are left pointing at the value, if not, we are still pointing at the object ({)  (in case of repeated keys, this only finds the first one). We seek the key using C's strcmp so if your JSON strings contain NULL chars, this would trigger a false positive: if you expect that to be the case, take extra precautions. Furthermore, we do the comparison character-by-character without taking into account Unicode equivalence.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool move_to_key_insensitive(const char *key)&lt;/code&gt;: as above, but case insensitive lookup&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool move_to_key(const char *key, uint32_t length)&lt;/code&gt;: as above except that the target can contain NULL characters&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void move_to_value()&lt;/code&gt;: when at a key location within an object, this moves to the accompanying, value (located next to it).  This is equivalent but much faster than calling &lt;code&gt;next()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool move_to_index(uint32_t index)&lt;/code&gt;: when at &lt;code&gt;[&lt;/code&gt;, go one level deep, and advance to the given index, if successful, we are left pointing at the value,i f not, we are still pointing at the array&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool move_to(const char *pointer, uint32_t length)&lt;/code&gt;: Moves the iterator to the value correspoding to the json pointer. Always search from the root of the document. If successful, we are left pointing at the value, if not, we are still pointing the same value we were pointing before the call. The json pointer follows the rfc6901 standard's syntax: &lt;a href="https://tools.ietf.org/html/rfc6901" rel="nofollow"&gt;https://tools.ietf.org/html/rfc6901&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool move_to(const std::string &amp;amp;pointer) &lt;/code&gt;: same as above but with a std::string parameter&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool next()&lt;/code&gt;:   Withing a given scope (series of nodes at the same depth within either an array or an object), we move forward. Thus, given [true, null, {"a":1}, [1,2]], we would visit true, null, { and [. At the object ({) or at the array ([), you can issue a "down" to visit their content. valid if we're not at the end of a scope (returns true).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool prev()&lt;/code&gt;:  Within a given scope (series of nodes at the same depth within either an
array or an object), we move backward.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool up()&lt;/code&gt;:  moves back to either the containing array or object (type { or [) from within a contained scope.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool down()&lt;/code&gt;: moves us to start of that deeper scope if it not empty. Thus, given [true, null, {"a":1}, [1,2]], if we are at the { node, we would move to the "a" node.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void to_start_scope()&lt;/code&gt;: move us to the start of our current scope, a scope is a series of nodes at the same level&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void rewind()&lt;/code&gt;: repeatedly calls up until we are at the root of the document&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool print(std::ostream &amp;amp;os, bool escape_strings = true) const&lt;/code&gt;: print the node we are currently pointing at&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is a code sample to dump back the parsed JSON to a string:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;    ParsedJson::Iterator &lt;span class="pl-en"&gt;pjh&lt;/span&gt;(pj);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (!pjh.is_ok()) {
      std::cerr &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; Could not iterate parsed result. &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; std::endl;
      &lt;span class="pl-k"&gt;return&lt;/span&gt; EXIT_FAILURE;
    }
    &lt;span class="pl-en"&gt;compute_dump&lt;/span&gt;(pj);
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; where compute_dump is :&lt;/span&gt;

&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;compute_dump&lt;/span&gt;(ParsedJson::Iterator &amp;amp;pjh) {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (pjh.&lt;span class="pl-c1"&gt;is_object&lt;/span&gt;()) {
    std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (pjh.&lt;span class="pl-c1"&gt;down&lt;/span&gt;()) {
      pjh.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(std::cout); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; must be a string&lt;/span&gt;
      std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
      pjh.&lt;span class="pl-c1"&gt;next&lt;/span&gt;();
      &lt;span class="pl-c1"&gt;compute_dump&lt;/span&gt;(pjh); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; let us recurse&lt;/span&gt;
      &lt;span class="pl-k"&gt;while&lt;/span&gt; (pjh.&lt;span class="pl-c1"&gt;next&lt;/span&gt;()) {
        std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        pjh.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(std::cout);
        std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        pjh.&lt;span class="pl-c1"&gt;next&lt;/span&gt;();
        &lt;span class="pl-c1"&gt;compute_dump&lt;/span&gt;(pjh); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; let us recurse&lt;/span&gt;
      }
      pjh.&lt;span class="pl-c1"&gt;up&lt;/span&gt;();
    }
    std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (pjh.&lt;span class="pl-c1"&gt;is_array&lt;/span&gt;()) {
    std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (pjh.&lt;span class="pl-c1"&gt;down&lt;/span&gt;()) {
      &lt;span class="pl-c1"&gt;compute_dump&lt;/span&gt;(pjh); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; let us recurse&lt;/span&gt;
      &lt;span class="pl-k"&gt;while&lt;/span&gt; (pjh.&lt;span class="pl-c1"&gt;next&lt;/span&gt;()) {
        std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        &lt;span class="pl-c1"&gt;compute_dump&lt;/span&gt;(pjh); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; let us recurse&lt;/span&gt;
      }
      pjh.&lt;span class="pl-c1"&gt;up&lt;/span&gt;();
    }
    std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    pjh.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(std::cout); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; just print the lone value&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following function will find all user.id integers:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;simdjson_scan&lt;/span&gt;(std::vector&amp;lt;&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;&amp;gt; &amp;amp;answer, ParsedJson::Iterator &amp;amp;i) {
   &lt;span class="pl-k"&gt;while&lt;/span&gt;(i.&lt;span class="pl-c1"&gt;move_forward&lt;/span&gt;()) {
     &lt;span class="pl-k"&gt;if&lt;/span&gt;(i.&lt;span class="pl-c1"&gt;get_scope_type&lt;/span&gt;() == &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) {
       &lt;span class="pl-k"&gt;bool&lt;/span&gt; found_user = (i.&lt;span class="pl-c1"&gt;get_string_length&lt;/span&gt;() == &lt;span class="pl-c1"&gt;4&lt;/span&gt;) &amp;amp;&amp;amp; (&lt;span class="pl-c1"&gt;memcmp&lt;/span&gt;(i.&lt;span class="pl-c1"&gt;get_string&lt;/span&gt;(), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;) == &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
       i.&lt;span class="pl-c1"&gt;move_to_value&lt;/span&gt;();
       &lt;span class="pl-k"&gt;if&lt;/span&gt;(found_user) {
          &lt;span class="pl-k"&gt;if&lt;/span&gt;(i.&lt;span class="pl-c1"&gt;is_object&lt;/span&gt;() &amp;amp;&amp;amp; i.&lt;span class="pl-c1"&gt;move_to_key&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;)) {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (i.&lt;span class="pl-c1"&gt;is_integer&lt;/span&gt;()) {
              answer.&lt;span class="pl-c1"&gt;push_back&lt;/span&gt;(i.&lt;span class="pl-c1"&gt;get_integer&lt;/span&gt;());
            }
            i.&lt;span class="pl-c1"&gt;up&lt;/span&gt;();
          }
       }
     }
   }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-in-depth-comparisons" class="anchor" aria-hidden="true" href="#in-depth-comparisons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In-depth comparisons&lt;/h2&gt;
&lt;p&gt;If you want to see how a wide range of parsers validate a given JSON file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make allparserscheckfile
./allparserscheckfile myfile.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For performance comparisons:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make parsingcompetition
./parsingcompetition myfile.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For broader comparisons:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make allparsingcompetition
./allparsingcompetition myfile.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Both the &lt;code&gt;parsingcompetition&lt;/code&gt; and &lt;code&gt;allparsingcompetition&lt;/code&gt; tools take a &lt;code&gt;-t&lt;/code&gt; flag which produces
a table-oriented output that can be conventiently parsed by other tools.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h2&gt;
&lt;p&gt;One can run tests and benchmarks using docker. It especially makes sense under Linux. A privileged access may be needed to get performance counters.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/lemire/simdjson.git
cd simdjson
docker build -t simdjson .
docker run --privileged -t simdjson
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-other-programming-languages" class="anchor" aria-hidden="true" href="#other-programming-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other programming languages&lt;/h2&gt;
&lt;p&gt;We distinguish between "bindings" (which just wrap the C++ code) and a port to another programming language (which reimplements everything).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/michaeleisel/zippyjson"&gt;ZippyJSON&lt;/a&gt;: Swift bindings for the simdjson project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TkTech/pysimdjson"&gt;pysimdjson&lt;/a&gt;: Python bindings for the simdjson project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Licenser/simdjson-rs"&gt;simdjson-rs&lt;/a&gt;: Rust port.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SunDoge/simdjson-rust"&gt;simdjson-rust&lt;/a&gt;: Rust wrapper (bindings).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EgorBo/SimdJsonSharp"&gt;SimdJsonSharp&lt;/a&gt;: C# version for .NET Core (bindings and full port).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luizperes/simdjson_nodejs"&gt;simdjson_nodejs&lt;/a&gt;: Node.js bindings for the simdjson project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crazyxman/simdjson_php"&gt;simdjson_php&lt;/a&gt;: PHP bindings for the simdjson project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saka1/simdjson_ruby"&gt;simdjson_ruby&lt;/a&gt;: Ruby bindings for the simdjson project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fwessels/simdjson-go"&gt;simdjson-go&lt;/a&gt;: Go port.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-various-references" class="anchor" aria-hidden="true" href="#various-references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Various References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/double-conversion/"&gt;Google double-conv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/35127060/how-to-implement-atoi-using-simd" rel="nofollow"&gt;How to implement atoi using SIMD?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://seriot.ch/parsing_json.php" rel="nofollow"&gt;Parsing JSON is a Minefield &lt;g-emoji class="g-emoji" alias="bomb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a3.png"&gt;💣&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tools.ietf.org/html/rfc7159" rel="nofollow"&gt;https://tools.ietf.org/html/rfc7159&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Mison implementation in rust &lt;a href="https://github.com/pikkr/pikkr"&gt;https://github.com/pikkr/pikkr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rapidjson.org/md_doc_sax.html" rel="nofollow"&gt;http://rapidjson.org/md_doc_sax.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Geal/parser_benchmarks/tree/master/json"&gt;https://github.com/Geal/parser_benchmarks/tree/master/json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gron: A command line tool that makes JSON greppable &lt;a href="https://news.ycombinator.com/item?id=16727665" rel="nofollow"&gt;https://news.ycombinator.com/item?id=16727665&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GoogleGson &lt;a href="https://github.com/google/gson"&gt;https://github.com/google/gson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jackson &lt;a href="https://github.com/FasterXML/jackson"&gt;https://github.com/FasterXML/jackson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.yelp.com/dataset_challenge" rel="nofollow"&gt;https://www.yelp.com/dataset_challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RapidJSON. &lt;a href="http://rapidjson.org/" rel="nofollow"&gt;http://rapidjson.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inspiring links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://auth0.com/blog/beating-json-performance-with-protobuf/" rel="nofollow"&gt;https://auth0.com/blog/beating-json-performance-with-protobuf/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/shijuvar/25ad7de9505232c87034b8359543404a"&gt;https://gist.github.com/shijuvar/25ad7de9505232c87034b8359543404a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/frankmcsherry/blog/blob/master/posts/2018-02-11.md"&gt;https://github.com/frankmcsherry/blog/blob/master/posts/2018-02-11.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Validating UTF-8 takes no more than 0.7 cycles per byte:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lemire/fastvalidate-utf-8"&gt;https://github.com/lemire/fastvalidate-utf-8&lt;/a&gt; &lt;a href="https://lemire.me/blog/2018/05/16/validating-utf-8-strings-using-as-little-as-0-7-cycles-per-byte/" rel="nofollow"&gt;https://lemire.me/blog/2018/05/16/validating-utf-8-strings-using-as-little-as-0-7-cycles-per-byte/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-remarks-on-json-parsing" class="anchor" aria-hidden="true" href="#remarks-on-json-parsing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Remarks on JSON parsing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The JSON spec defines what a JSON parser is:
&lt;blockquote&gt;
&lt;p&gt;A JSON parser transforms a JSON text into another representation. A JSON parser MUST accept all texts that conform to the JSON grammar. A JSON parser MAY accept non-JSON forms or extensions. An implementation may set limits on the size of texts that it accepts. An implementation may set limits on the maximum depth of nesting. An implementation may set limits on the range and precision of numbers. An implementation may set limits on the length and character contents of strings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;JSON is not JavaScript:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All JSON is Javascript but NOT all Javascript is JSON. So {property:1} is invalid because property does not have double quotes around it. {'property':1} is also invalid, because it's single quoted while the only thing that can placate the JSON specification is double quoting. JSON is even fussy enough that {"property":.1} is invalid too, because you should have of course written {"property":0.1}. Also, don't even think about having comments or semicolons, you guessed it: they're invalid. (credit:&lt;a href="https://github.com/elzr/vim-json"&gt;https://github.com/elzr/vim-json&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The structural characters are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;begin-array     =  [ left square bracket
begin-object    =  { left curly bracket
end-array       =  ] right square bracket
end-object      =  } right curly bracket
name-separator  = : colon
value-separator = , comma
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-pseudo-structural-elements" class="anchor" aria-hidden="true" href="#pseudo-structural-elements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pseudo-structural elements&lt;/h3&gt;
&lt;p&gt;A character is pseudo-structural if and only if:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Not enclosed in quotes, AND&lt;/li&gt;
&lt;li&gt;Is a non-whitespace character, AND&lt;/li&gt;
&lt;li&gt;Its preceding character is either:
(a) a structural character, OR
(b) whitespace.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This helps as we redefine some new characters as pseudo-structural such as the characters 1, G, n in the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;{ "foo" : 1.5, "bar" : 1.5 GEOFF_IS_A_DUMMY bla bla , "baz", null }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-academic-references" class="anchor" aria-hidden="true" href="#academic-references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Academic References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;T.Mühlbauer, W.Rödiger, R.Seilbeck, A.Reiser, A.Kemper, and T.Neumann. Instant loading for main memory databases. PVLDB, 6(14):1702–1713, 2013. (SIMD-based CSV parsing)&lt;/li&gt;
&lt;li&gt;Mytkowicz, Todd, Madanlal Musuvathi, and Wolfram Schulte. "Data-parallel finite-state machines." ACM SIGARCH Computer Architecture News. Vol. 42. No. 1. ACM, 2014.&lt;/li&gt;
&lt;li&gt;Lu, Yifan, et al. "Tree structured data processing on GPUs." Cloud Computing, Data Science &amp;amp; Engineering-Confluence, 2017 7th International Conference on. IEEE, 2017.&lt;/li&gt;
&lt;li&gt;Sidhu, Reetinder. "High throughput, tree automata based XML processing using FPGAs." Field-Programmable Technology (FPT), 2013 International Conference on. IEEE, 2013.&lt;/li&gt;
&lt;li&gt;Dai, Zefu, Nick Ni, and Jianwen Zhu. "A 1 cycle-per-byte XML parsing accelerator." Proceedings of the 18th annual ACM/SIGDA international symposium on Field programmable gate arrays. ACM, 2010.&lt;/li&gt;
&lt;li&gt;Lin, Dan, et al. "Parabix: Boosting the efficiency of text processing on commodity processors." High Performance Computer Architecture (HPCA), 2012 IEEE 18th International Symposium on. IEEE, 2012. &lt;a href="http://parabix.costar.sfu.ca/export/1783/docs/HPCA2012/final_ieee/final.pdf" rel="nofollow"&gt;http://parabix.costar.sfu.ca/export/1783/docs/HPCA2012/final_ieee/final.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Deshmukh, V. M., and G. R. Bamnote. "An empirical evaluation of optimization parameters in XML parsing for performance enhancement." Computer, Communication and Control (IC4), 2015 International Conference on. IEEE, 2015.&lt;/li&gt;
&lt;li&gt;Moussalli, Roger, et al. "Efficient XML Path Filtering Using GPUs." ADMS@ VLDB. 2011.&lt;/li&gt;
&lt;li&gt;Jianliang, Ma, et al. "Parallel speculative dom-based XML parser." High Performance Computing and Communication &amp;amp; 2012 IEEE 9th International Conference on Embedded Software and Systems (HPCC-ICESS), 2012 IEEE 14th International Conference on. IEEE, 2012.&lt;/li&gt;
&lt;li&gt;Li, Y., Katsipoulakis, N.R., Chandramouli, B., Goldstein, J. and Kossmann, D., 2017. Mison: a fast JSON parser for data analytics. Proceedings of the VLDB Endowment, 10(10), pp.1118-1129. &lt;a href="http://www.vldb.org/pvldb/vol10/p1118-li.pdf" rel="nofollow"&gt;http://www.vldb.org/pvldb/vol10/p1118-li.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cameron, Robert D., et al. "Parallel scanning with bitstream addition: An xml case study." European Conference on Parallel Processing. Springer, Berlin, Heidelberg, 2011.&lt;/li&gt;
&lt;li&gt;Cameron, Robert D., Kenneth S. Herdy, and Dan Lin. "High performance XML parsing using parallel bit stream technology." Proceedings of the 2008 conference of the center for advanced studies on collaborative research: meeting of minds. ACM, 2008.&lt;/li&gt;
&lt;li&gt;Shah, Bhavik, et al. "A data parallel algorithm for XML DOM parsing." International XML Database Symposium. Springer, Berlin, Heidelberg, 2009.&lt;/li&gt;
&lt;li&gt;Cameron, Robert D., and Dan Lin. "Architectural support for SWAR text processing with parallel bit streams: the inductive doubling principle." ACM Sigplan Notices. Vol. 44. No. 3. ACM, 2009.&lt;/li&gt;
&lt;li&gt;Amagasa, Toshiyuki, Mana Seino, and Hiroyuki Kitagawa. "Energy-Efficient XML Stream Processing through Element-Skipping Parsing." Database and Expert Systems Applications (DEXA), 2013 24th International Workshop on. IEEE, 2013.&lt;/li&gt;
&lt;li&gt;Medforth, Nigel Woodland. "icXML: Accelerating Xerces-C 3.1. 1 using the Parabix Framework." (2013).&lt;/li&gt;
&lt;li&gt;Zhang, Qiang Scott. Embedding Parallel Bit Stream Technology Into Expat. Diss. Simon Fraser University, 2010.&lt;/li&gt;
&lt;li&gt;Cameron, Robert D., et al. "Fast Regular Expression Matching with Bit-parallel Data Streams."&lt;/li&gt;
&lt;li&gt;Lin, Dan. Bits filter: a high-performance multiple string pattern matching algorithm for malware detection. Diss. School of Computing Science-Simon Fraser University, 2010.&lt;/li&gt;
&lt;li&gt;Yang, Shiyang. Validation of XML Document Based on Parallel Bit Stream Technology. Diss. Applied Sciences: School of Computing Science, 2013.&lt;/li&gt;
&lt;li&gt;N. Nakasato, "Implementation of a parallel tree method on a GPU", Journal of Computational Science, vol. 3, no. 3, pp. 132-141, 2012.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-funding" class="anchor" aria-hidden="true" href="#funding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Funding&lt;/h2&gt;
&lt;p&gt;The work is supported by the Natural Sciences and Engineering Research Council of Canada under grant number RGPIN-2017-03910.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>lemire</author><guid isPermaLink="false">https://github.com/lemire/simdjson</guid><pubDate>Thu, 26 Dec 2019 00:07:00 GMT</pubDate></item><item><title>ocornut/imgui #8 in C++, This month</title><link>https://github.com/ocornut/imgui</link><description>&lt;p&gt;&lt;i&gt;Dear ImGui: Bloat-free Immediate Mode Graphical User interface for C++ with minimal dependencies&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="docs/README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dear-imgui" class="anchor" aria-hidden="true" href="#dear-imgui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dear imgui&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/ocornut/imgui/actions?workflow=build"&gt;&lt;img src="https://github.com/ocornut/imgui/workflows/build/badge.svg" alt="Build Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/4720" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd8d75b32a7b7529e474e3811c14a1ff3df9c541/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f343732302f62616467652e737667" alt="Coverity Status" data-canonical-src="https://scan.coverity.com/projects/4720/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;sub&gt;(This library is available under a free and permissive license, but needs financial support to sustain its continued improvements. In addition to maintenance and stability there are many desirable features yet to be added. If your company is using dear imgui, please consider reaching out. If you are an individual using dear imgui, please consider supporting the project via Patreon or PayPal.)&lt;/sub&gt;&lt;/p&gt;
&lt;p&gt;Businesses: support continued development via invoiced technical support, maintenance, sponsoring contracts:
&lt;br&gt;  &lt;em&gt;E-mail: contact @ dearimgui dot org&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Individuals/hobbyists: support continued maintenance and development via the monthly Patreon:
&lt;br&gt;  &lt;a href="http://www.patreon.com/imgui" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/patreon_02.png" alt="Patreon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Individuals/hobbyists: support continued maintenance and development via PayPal:
&lt;br&gt;  &lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=WGHNC6MBFLZ2S" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="PayPal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Dear ImGui is a &lt;strong&gt;bloat-free graphical user interface library for C++&lt;/strong&gt;. It outputs optimized vertex buffers that you can render anytime in your 3D-pipeline enabled application. It is fast, portable, renderer agnostic and self-contained (no external dependencies).&lt;/p&gt;
&lt;p&gt;Dear ImGui is designed to &lt;strong&gt;enable fast iterations&lt;/strong&gt; and to &lt;strong&gt;empower programmers&lt;/strong&gt; to create &lt;strong&gt;content creation tools and visualization / debug tools&lt;/strong&gt; (as opposed to UI for the average end-user). It favors simplicity and productivity toward this goal, and lacks certain features normally found in more high-level libraries.&lt;/p&gt;
&lt;p&gt;Dear ImGui is particularly suited to integration in games engine (for tooling), real-time 3D applications, fullscreen applications, embedded applications, or any applications on consoles platforms where operating system features are non-standard.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt; - &lt;a href="#how-it-works"&gt;How it works&lt;/a&gt; - &lt;a href="#demo"&gt;Demo&lt;/a&gt; - &lt;a href="#integration"&gt;Integration&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="#upcoming-changes"&gt;Upcoming changes&lt;/a&gt; - &lt;a href="#gallery"&gt;Gallery&lt;/a&gt; - &lt;a href="#support-frequently-asked-questions-faq"&gt;Support, FAQ&lt;/a&gt; -  &lt;a href="#how-to-help"&gt;How to help&lt;/a&gt; - &lt;a href="#sponsors"&gt;Sponsors&lt;/a&gt; - &lt;a href="#credits"&gt;Credits&lt;/a&gt; - &lt;a href="#license"&gt;License&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/ocornut/imgui/wiki"&gt;Wiki&lt;/a&gt; - &lt;a href="https://github.com/ocornut/imgui/wiki/Bindings"&gt;Language &amp;amp; frameworks bindings&lt;/a&gt; - &lt;a href="https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui"&gt;Software using Dear ImGui&lt;/a&gt; - &lt;a href="https://github.com/ocornut/imgui/wiki/Quotes"&gt;User quotes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;The core of Dear ImGui is self-contained within a few platform-agnostic files&lt;/strong&gt; which you can easily copy and compile into your application/engine. They are all the files in the root folder of the repository (imgui.cpp, imgui.h, imgui_demo.cpp, imgui_draw.cpp etc.).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;No specific build process is required&lt;/strong&gt;. You can add the .cpp files to your existing project.&lt;/p&gt;
&lt;p&gt;You will need a backend to integrate Dear ImGui in your app. The backend passes mouse/keyboard/gamepad inputs and variety of settings to Dear ImGui, and is in charge of rendering the resulting vertices.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Backends for a variety of graphics api and rendering platforms&lt;/strong&gt; are provided in the &lt;a href="https://github.com/ocornut/imgui/tree/master/examples"&gt;examples/&lt;/a&gt; folder, along with example applications. See the &lt;a href="#integration"&gt;Integration&lt;/a&gt; section of this document for details. You may also create your own backend. Anywhere where you can render textured triangles, you can render Dear ImGui.&lt;/p&gt;
&lt;p&gt;After Dear ImGui is setup in your application, you can use it from _anywhere_ in your program loop:&lt;/p&gt;
&lt;p&gt;Code:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;ImGui::Text&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, world %d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;123&lt;/span&gt;);
&lt;span class="pl-k"&gt;if&lt;/span&gt; (ImGui::Button(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Save&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    &lt;span class="pl-en"&gt;MySaveFunction&lt;/span&gt;();
&lt;span class="pl-en"&gt;ImGui::InputText&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, buf, IM_ARRAYSIZE(buf));
&lt;span class="pl-en"&gt;ImGui::SliderFloat&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;float&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &amp;amp;f, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;0f&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-c1"&gt;0f&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Result:
&lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/code_sample_02.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/code_sample_02.png" alt="sample code output" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;&lt;em&gt;(settings: Dark style (left), Light style (right) / Font: Roboto-Medium, 16px / Rounding: 5)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Code:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create a window called "My First Tool", with a menu bar.&lt;/span&gt;
&lt;span class="pl-en"&gt;ImGui::Begin&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My First Tool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &amp;amp;my_tool_active, ImGuiWindowFlags_MenuBar);
&lt;span class="pl-k"&gt;if&lt;/span&gt; (ImGui::BeginMenuBar())
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;ImGui::BeginMenu&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;File&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;ImGui::MenuItem&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Open..&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ctrl+O&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Do stuff &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;ImGui::MenuItem&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Save&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ctrl+S&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))   { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Do stuff &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;ImGui::MenuItem&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Close&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ctrl+W&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))  { my_tool_active = &lt;span class="pl-c1"&gt;false&lt;/span&gt;; }
        &lt;span class="pl-c1"&gt;ImGui::EndMenu&lt;/span&gt;();
    }
    &lt;span class="pl-c1"&gt;ImGui::EndMenuBar&lt;/span&gt;();
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Edit a color (stored as ~4 floats)&lt;/span&gt;
&lt;span class="pl-en"&gt;ImGui::ColorEdit4&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, my_color);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Plot some values&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;float&lt;/span&gt; my_values[] = { &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;2f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;1f&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-c1"&gt;0f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;5f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;9f&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;.&lt;span class="pl-c1"&gt;2f&lt;/span&gt; };
&lt;span class="pl-en"&gt;ImGui::PlotLines&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Frame Times&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, my_values, IM_ARRAYSIZE(my_values));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Display contents in a scrolling region&lt;/span&gt;
&lt;span class="pl-en"&gt;ImGui::TextColored&lt;/span&gt;(ImVec4(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;), "Important Stuff");
&lt;span class="pl-en"&gt;ImGui::BeginChild&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Scrolling&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; n = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; n &amp;lt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;; n++)
    &lt;span class="pl-en"&gt;ImGui::Text&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%04d: Some text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, n);
&lt;span class="pl-en"&gt;ImGui::EndChild&lt;/span&gt;();
&lt;span class="pl-en"&gt;ImGui::End&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Result:
&lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/code_sample_03_color.gif"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/code_sample_03_color.gif" alt="sample code output" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dear ImGui allows you &lt;strong&gt;create elaborate tools&lt;/strong&gt; as well as very short-lived ones. On the extreme side of short-liveness: using the Edit&amp;amp;Continue (hot code reload) feature of modern compilers you can add a few widgets to tweaks variables while your application is running, and remove the code a minute later! Dear ImGui is not just for tweaking values. You can use it to trace a running algorithm by just emitting text commands. You can use it along with your own reflection data to browse your dataset live. You can use it to expose the internals of a subsystem in your engine, to create a logger, an inspection tool, a profiler, a debugger, an entire game making editor/framework, etc.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it works&lt;/h3&gt;
&lt;p&gt;Check out the Wiki's &lt;a href="https://github.com/ocornut/imgui/wiki#About-the-IMGUI-paradigm"&gt;About the IMGUI paradigm&lt;/a&gt; section if you want to understand the core principles behind the IMGUI paradigm. An IMGUI tries to minimize superfluous state duplication, state synchronization and state retention from the user's point of view. It is less error prone (less code and less bugs) than traditional retained-mode interfaces, and lends itself to create dynamic user interfaces.&lt;/p&gt;
&lt;p&gt;Dear ImGui outputs vertex buffers and command lists that you can easily render in your application. The number of draw calls and state changes required to render them is fairly small. Because Dear ImGui doesn't know or touch graphics state directly, you can call its functions  anywhere in your code (e.g. in the middle of a running algorithm, or in the middle of your own rendering process). Refer to the sample applications in the examples/ folder for instructions on how to integrate dear imgui with your existing codebase.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A common misunderstanding is to mistake immediate mode gui for immediate mode rendering, which usually implies hammering your driver/GPU with a bunch of inefficient draw calls and state changes as the gui functions are called. This is NOT what Dear ImGui does. Dear ImGui outputs vertex buffers and a small list of draw calls batches. It never touches your GPU directly. The draw call batches are decently optimal and you can render them later, in your app or even remotely.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h3&gt;
&lt;p&gt;Calling the &lt;code&gt;ImGui::ShowDemoWindow()&lt;/code&gt; function will create a demo window showcasing variety of features and examples. The code is always available for reference in &lt;code&gt;imgui_demo.cpp&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v167/v167-misc.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v167/v167-misc.png" alt="screenshot demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You should be able to build the examples from sources (tested on Windows/Mac/Linux). If you don't, let me know! If you want to have a quick look at some Dear ImGui features, you can download Windows binaries of the demo app here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.dearimgui.org/binaries/imgui-demo-binaries-20190715.zip" rel="nofollow"&gt;imgui-demo-binaries-20190715.zip&lt;/a&gt; (Windows binaries, 1.72 WIP, built 2019/07/15, master branch, 5 executables)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The demo applications are not DPI aware so expect some blurriness on a 4K screen. For DPI awareness in your application, you can load/reload your font at different scale, and scale your style with &lt;code&gt;style.ScaleAllSizes()&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-integration" class="anchor" aria-hidden="true" href="#integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration&lt;/h3&gt;
&lt;p&gt;On most platforms and when using C++, &lt;strong&gt;you should be able to use a combination of the &lt;a href="https://github.com/ocornut/imgui/tree/master/examples"&gt;imgui_impl_xxxx&lt;/a&gt; files without modification&lt;/strong&gt; (e.g. &lt;code&gt;imgui_impl_win32.cpp&lt;/code&gt; + &lt;code&gt;imgui_impl_dx11.cpp&lt;/code&gt;). If your engine supports multiple platforms, consider using more of the imgui_impl_xxxx files instead of rewriting them: this will be less work for you and you can get Dear ImGui running immediately. You can &lt;em&gt;later&lt;/em&gt; decide to rewrite a custom binding using your custom engine functions if you wish so.&lt;/p&gt;
&lt;p&gt;Integrating Dear ImGui within your custom engine is a matter of 1) wiring mouse/keyboard/gamepad inputs 2) uploading one texture to your GPU/render engine 3) providing a render function that can bind textures and render textured triangles. The &lt;a href="https://github.com/ocornut/imgui/tree/master/examples"&gt;examples/&lt;/a&gt; folder is populated with applications doing just that. If you are an experienced programmer at ease with those concepts, it should take you less than two hours to integrate Dear ImGui in your custom engine. &lt;strong&gt;Make sure to spend time reading the &lt;a href="https://www.dearimgui.org/faq" rel="nofollow"&gt;FAQ&lt;/a&gt;, comments, and some of the examples/ application!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Officially maintained bindings (in repository):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Renderers: DirectX9, DirectX10, DirectX11, DirectX12, OpenGL (legacy), OpenGL3/ES/ES2 (modern), Vulkan, Metal.&lt;/li&gt;
&lt;li&gt;Platforms: GLFW, SDL2, Win32, Glut, OSX.&lt;/li&gt;
&lt;li&gt;Frameworks: Emscripten, Allegro5, Marmalade.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Third-party bindings (see &lt;a href="https://github.com/ocornut/imgui/wiki/Bindings/"&gt;Bindings&lt;/a&gt; page):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Languages: C, C#/.Net, ChaiScript, D, Go, Haskell, Haxe/hxcpp, Java, JavaScript, Julia, Lua, Odin, Pascal, PureBasic, Python, Ruby, Rust, Swift...&lt;/li&gt;
&lt;li&gt;Frameworks: Amethyst, bsf, Cinder, Cocos2d-x, Diligent Engine, Flexium, GML/GameMakerStudio2, Irrlicht, Ogre, OpenFrameworks, OpenSceneGraph/OSG, ORX, px_render, LÖVE+Lua, Magnum, NanoRT, Qt, QtDirect3D, SFML, Software Rasterizers, Unreal Engine 4...&lt;/li&gt;
&lt;li&gt;Note that C bindings (&lt;a href="https://github.com/cimgui/cimgui"&gt;cimgui&lt;/a&gt;) are auto-generated, you can use its json/lua output to generate bindings for other languages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also see &lt;a href="https://github.com/ocornut/imgui/wiki"&gt;Wiki&lt;/a&gt; for more links and ideas.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-upcoming-changes" class="anchor" aria-hidden="true" href="#upcoming-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upcoming Changes&lt;/h3&gt;
&lt;p&gt;Some of the goals for 2019-2020 are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Finish work on docking, tabs. (see &lt;a href="https://github.com/ocornut/imgui/issues/2109"&gt;#2109&lt;/a&gt;, in public &lt;a href="https://github.com/ocornut/imgui/tree/docking"&gt;docking&lt;/a&gt; branch looking for feedback)&lt;/li&gt;
&lt;li&gt;Finish work on multiple viewports / multiple OS windows. (see &lt;a href="https://github.com/ocornut/imgui/issues/1542"&gt;#1542&lt;/a&gt;, in public &lt;a href="https://github.com/ocornut/imgui/tree/docking"&gt;docking&lt;/a&gt; branch looking for feedback)&lt;/li&gt;
&lt;li&gt;Finish work on gamepad/keyboard controls. (see &lt;a href="https://github.com/ocornut/imgui/issues/787"&gt;#787&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add an automation and testing system, both to test the library and end-user apps. (see &lt;a href="https://github.com/ocornut/imgui/issues/435"&gt;#435&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Make Columns better. They are currently pretty terrible! New Tables API coming Q4 2019!&lt;/li&gt;
&lt;li&gt;Make the examples look better, improve styles, improve font support, make the examples hi-DPI and multi-DPI aware.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery&lt;/h3&gt;
&lt;p&gt;For more user-submitted screenshots of projects using Dear ImGui, check out the &lt;a href="https://github.com/ocornut/imgui/issues/2847"&gt;Gallery Threads&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Custom engine
&lt;a href="https://cloud.githubusercontent.com/assets/8225057/20628927/33e14cac-b329-11e6-80f6-9524e93b048a.png" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v149/gallery_TheDragonsTrap-01-thumb.jpg" alt="screenshot game" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Custom engine
&lt;a href="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/editor_white.png" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/editor_white_preview.jpg" alt="screenshot tool" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/wolfpld/tracy" rel="nofollow"&gt;Tracy Profiler&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v173/tracy_profiler.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v173/tracy_profiler.jpg" alt="tracy profiler" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-support-frequently-asked-questions-faq" class="anchor" aria-hidden="true" href="#support-frequently-asked-questions-faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support, Frequently Asked Questions (FAQ)&lt;/h3&gt;
&lt;p&gt;Most common questions will be answered by the &lt;a href="https://github.com/ocornut/imgui/blob/master/docs/FAQ.md"&gt;Frequently Asked Questions (FAQ)&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;See: &lt;a href="https://github.com/ocornut/imgui/wiki"&gt;Wiki&lt;/a&gt; for many links, references, articles.&lt;/p&gt;
&lt;p&gt;See: &lt;a href="https://github.com/ocornut/imgui/wiki#Articles-about-the-IMGUI-paradigm"&gt;Articles about the IMGUI paradigm&lt;/a&gt; to read/learn about the Immediate Mode GUI paradigm.&lt;/p&gt;
&lt;p&gt;If you are new to Dear ImGui and have issues with: compiling, linking, adding fonts, wiring inputs, running or displaying Dear ImGui: you can use &lt;a href="http://discord.dearimgui.org" rel="nofollow"&gt;Discord server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Otherwise, for any other questions, bug reports, requests, feedback, you may post on &lt;a href="https://github.com/ocornut/imgui/issues"&gt;https://github.com/ocornut/imgui/issues&lt;/a&gt;. Please read and fill the New Issue template carefully.&lt;/p&gt;
&lt;p&gt;Paid private support is available for business customers (E-mail: &lt;em&gt;contact @ dearimgui dot org&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Which version should I get?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I occasionally tag &lt;a href="https://github.com/ocornut/imgui/releases"&gt;Releases&lt;/a&gt; but it is generally safe and recommended to sync to master/latest. The library is fairly stable and regressions tend to be fixed fast when reported.&lt;/p&gt;
&lt;p&gt;You may also peak at the &lt;a href="https://github.com/ocornut/imgui/issues/1542"&gt;Multi-Viewport&lt;/a&gt; and &lt;a href="https://github.com/ocornut/imgui/issues/2109"&gt;Docking&lt;/a&gt; features in the &lt;code&gt;docking&lt;/code&gt; branch. Many projects are using this branch and it is kept in sync with master regularly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Who uses Dear ImGui?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/ocornut/imgui/wiki/Quotes"&gt;Quotes&lt;/a&gt; and &lt;a href="https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui"&gt;Software using dear imgui&lt;/a&gt; Wiki pages for a list of games/software which are publicly known to use dear imgui. Please add yours if you can! Also see the &lt;a href="https://github.com/ocornut/imgui/issues/2847"&gt;Gallery Threads&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-help" class="anchor" aria-hidden="true" href="#how-to-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to help&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;How can I help?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You may participate in the &lt;a href="http://discord.dearimgui.org" rel="nofollow"&gt;Discord server&lt;/a&gt;, &lt;a href="https://github.com/ocornut/imgui/issues"&gt;GitHub forum/issues&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You may help with development and submit pull requests! Please understand that by submitting a PR you are also submitting a request for the maintainer to review your code and then take over its maintenance forever. PR should be crafted both in the interest in the end-users and also to ease the maintainer into understanding and accepting it.&lt;/li&gt;
&lt;li&gt;See &lt;a href="https://github.com/ocornut/imgui/wiki/Help-Wanted"&gt;Help wanted&lt;/a&gt; on the &lt;a href="https://github.com/ocornut/imgui/wiki/"&gt;Wiki&lt;/a&gt; for some more ideas.&lt;/li&gt;
&lt;li&gt;Have your company financially support this project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;How can I help financing further development of Dear ImGui?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Your contributions are keeping this project alive. The library is available under a free and permissive license, but continued maintenance and development are a full-time endeavor and I would like to grow the team. In addition to maintenance and stability there are many desirable features yet to be added. If your company is using dear imgui, please consider reaching out for invoiced technical support and maintenance contracts. If you are an individual using dear imgui, please consider supporting the project via Patreon or PayPal. Thank you!&lt;/p&gt;
&lt;p&gt;Businesses: support continued development via invoiced technical support, maintenance, sponsoring contracts:
&lt;br&gt;  &lt;em&gt;E-mail: contact @ dearimgui dot org&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Individuals/hobbyists: support continued maintenance and development via the monthly Patreon:
&lt;br&gt;  &lt;a href="http://www.patreon.com/imgui" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/patreon_02.png" alt="Patreon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Individuals/hobbyists: support continued maintenance and development via PayPal:
&lt;br&gt;  &lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=WGHNC6MBFLZ2S" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="PayPal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;p&gt;Ongoing Dear ImGui development is financially supported by users and private sponsors, recently:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Platinum-chocolate sponsors&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blizzard Entertainment&lt;/li&gt;
&lt;li&gt;Google&lt;/li&gt;
&lt;li&gt;Ubisoft&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Double-chocolate sponsors&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Media Molecule, Mobigame, Aras Pranckevičius, Greggman, DotEmu, Nadeo, Supercell, Aiden Koss, Kylotonn.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Salty caramel supporters&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remedy Entertainment, Next Level Games, Recognition Robotics, ikrima, Geoffrey Evans, Mercury Labs, Singularity Demo Group, Lionel Landwerlin, Ron Gilbert, Brandon Townsend, G3DVu, Cort Stratton, drudru, Harfang 3D, Jeff Roberts, Rainway inc, Ondra Voves, Mesh Consultants, Unit 2 Games, Neil Bickford, Bill Six, Graham Manders.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Caramel supporters&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jerome Lanquetot, Daniel Collin, Ctrl Alt Ninja, Neil Henning, Neil Blakey-Milner, Aleksei, NeiloGD, Eric, Game Atelier, Vincent Hamm, Morten Skaaning, Colin Riley, Sergio Gonzales, Andrew Berridge, Roy Eltham, Game Preservation Society, Josh Faust, Martin Donlon, Codecat, Doug McNabb, Emmanuel Julien, Guillaume Chereau, Jeffrey Slutter, Jeremiah Deckard, r-lyeh, Nekith, Joshua Fisher, Malte Hoffmann, Mustafa Karaalioglu, Merlyn Morgan-Graham, Per Vognsen, Fabian Giesen, Jan Staubach, Matt Hargett, John Shearer, Jesse Chounard, kingcoopa, Jonas Bernemann, Johan Andersson, Michael Labbe, Tomasz Golebiowski, Louis Schnellbach, Jimmy Andrews, Bojan Endrovski, Robin Berg Pettersen, Rachel Crawford, Andrew Johnson, Sean Hunter, Jordan Mellow, Nefarius Software Solutions, Laura Wieme, Robert Nix, Mick Honey, Steven Kah Hien Wong, Bartosz Bielecki, Oscar Penas, A M, Liam Moynihan, Artometa, Mark Lee, Dimitri Diakopoulos, Pete Goodwin, Johnathan Roatch, nyu lea, Oswald Hurlem, Semyon Smelyanskiy, Le Bach, Jeong MyeongSoo, Chris Matthews, Astrofra, Frederik De Bleser, Anticrisis, Matt Reyer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And all other past and present supporters; THANK YOU!
(Please contact me if you would like to be added or removed from this list)&lt;/p&gt;
&lt;p&gt;Dear ImGui is using software and services kindly provided free of charge for open source projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.viva64.com/en/b/0570/" rel="nofollow"&gt;PVS-Studio&lt;/a&gt; for static analysis.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/features/actions"&gt;GitHub actions&lt;/a&gt; for continuous integration systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Developed by &lt;a href="http://www.miracleworld.net" rel="nofollow"&gt;Omar Cornut&lt;/a&gt; and every direct or indirect contributors to the GitHub. The early version of this library was developed with the support of &lt;a href="http://www.mediamolecule.com" rel="nofollow"&gt;Media Molecule&lt;/a&gt; and first used internally on the game &lt;a href="http://tearaway.mediamolecule.com" rel="nofollow"&gt;Tearaway&lt;/a&gt; (Vita).&lt;/p&gt;
&lt;p&gt;I first discovered the IMGUI paradigm at &lt;a href="http://www.q-games.com" rel="nofollow"&gt;Q-Games&lt;/a&gt; where Atman Binstock had dropped his own simple implementation in the codebase, which I spent quite some time improving and thinking about. It turned out that Atman was exposed to the concept directly by working with Casey. When I moved to Media Molecule I rewrote a new library trying to overcome the flaws and limitations of the first one I've worked with. It became this library and since then I have spent an unreasonable amount of time iterating and improving it.&lt;/p&gt;
&lt;p&gt;Embeds &lt;a href="http://upperbounds.net" rel="nofollow"&gt;ProggyClean.ttf&lt;/a&gt; font by Tristan Grimmer (MIT license).&lt;/p&gt;
&lt;p&gt;Embeds &lt;a href="https://github.com/nothings/stb/"&gt;stb_textedit.h, stb_truetype.h, stb_rect_pack.h&lt;/a&gt; by Sean Barrett (public domain).&lt;/p&gt;
&lt;p&gt;Inspiration, feedback, and testing for early versions: Casey Muratori, Atman Binstock, Mikko Mononen, Emmanuel Briney, Stefan Kamoda, Anton Mikhailov, Matt Willis. And everybody posting feedback, questions and patches on the GitHub.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Dear ImGui is licensed under the MIT License, see &lt;a href="https://github.com/ocornut/imgui/blob/master/LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ocornut</author><guid isPermaLink="false">https://github.com/ocornut/imgui</guid><pubDate>Thu, 26 Dec 2019 00:08:00 GMT</pubDate></item><item><title>musescore/MuseScore #9 in C++, This month</title><link>https://github.com/musescore/MuseScore</link><description>&lt;p&gt;&lt;i&gt;MuseScore is an open source and free music notation software. For support, contribution, bug reports, visit MuseScore.org. Fork and make pull requests!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="mscore/data/musescore_logo_full.png"&gt;&lt;img src="mscore/data/musescore_logo_full.png" alt="MuseScore" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
Music notation and composition software&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/musescore/MuseScore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d678d1f5626cf43a3e5c9729a18854bdcccfd3ec/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6d75736573636f72652f4d75736553636f72652e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://secure.travis-ci.org/musescore/MuseScore.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/MuseScore/musescore/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cf64d504ea184dffa56a7034e2f6a9efa81cce6/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f627033777736763938356936346563652f6272616e63682f6d61737465723f7376673d74727565" alt="Appveyor" data-canonical-src="https://ci.appveyor.com/api/projects/status/bp3ww6v985i64ece/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/old-licenses/gpl-2.0.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3747c67073ec4721770786d0225722d98bdf74c2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076322d626c75652e737667" alt="License: GPL v2" data-canonical-src="https://img.shields.io/badge/License-GPL%20v2-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MuseScore is an open source and free music notation software. For support, contribution, and bug reports visit MuseScore.org. Fork and make pull requests!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WYSIWYG design, notes are entered on a "virtual notepaper"&lt;/li&gt;
&lt;li&gt;TrueType font(s) for printing &amp;amp; display allows for high quality scaling to all sizes&lt;/li&gt;
&lt;li&gt;Easy &amp;amp; fast note entry&lt;/li&gt;
&lt;li&gt;Many editing functions&lt;/li&gt;
&lt;li&gt;MusicXML import/export&lt;/li&gt;
&lt;li&gt;MIDI (SMF) import/export&lt;/li&gt;
&lt;li&gt;MuseData import&lt;/li&gt;
&lt;li&gt;MIDI input for note entry&lt;/li&gt;
&lt;li&gt;Integrated sequencer and software synthesizer to play the score&lt;/li&gt;
&lt;li&gt;Print or create pdf files&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-more-info" class="anchor" aria-hidden="true" href="#more-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More info&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://musescore.org" rel="nofollow"&gt;MuseScore Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://musescore.org/en/developers-handbook/git-workflow" rel="nofollow"&gt;MuseScore Git workflow instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://musescore.org/en/developers-handbook/compilation" rel="nofollow"&gt;How to compile MuseScore?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MuseScore is licensed under GPL version 2.0. See &lt;a href="https://github.com/musescore/MuseScore/blob/master/LICENSE.GPL"&gt;LICENSE.GPL&lt;/a&gt; in the same directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-packages" class="anchor" aria-hidden="true" href="#packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;aeolus:&lt;/strong&gt; Clone of &lt;a href="http://kokkinizita.linuxaudio.org/linuxaudio/aeolus/" rel="nofollow"&gt;Aeolus&lt;/a&gt;. Disabled by default in the stable releases. See &lt;a href="http://dev-list.musescore.org/Aeolus-Organ-Synth-td7578364.html" rel="nofollow"&gt;http://dev-list.musescore.org/Aeolus-Organ-Synth-td7578364.html&lt;/a&gt;. Kept as an example of how to integrate with a complex synthesizer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;assets:&lt;/strong&gt; Graphical assets, use them if you need a MuseScore icon. For logo, color, etc., see &lt;a href="https://musescore.org/en/about/logos-and-graphics" rel="nofollow"&gt;https://musescore.org/en/about/logos-and-graphics&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;awl:&lt;/strong&gt; Audio Widget Library, from the MusE project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;build:&lt;/strong&gt; Utility files for build.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;bww2mxml:&lt;/strong&gt; Command line tool to convert BWW files to MusicXML. BWW parser is used by MuseScore to import BWW files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;demos:&lt;/strong&gt; A few MuseScore files to demonstrate what can be done.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;fluid:&lt;/strong&gt; Clone of &lt;a href="https://sourceforge.net/projects/fluidsynth" rel="nofollow"&gt;FluidSynth@sourceforge&lt;/a&gt;, ported to C++ and customized. Code now at &lt;a href="https://github.com/FluidSynth/fluidsynth"&gt;fluidsynth@github&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;fonts:&lt;/strong&gt; Contains fontforge source (sfd) + ttf/otf fonts. MuseScore includes the "Emmentaler" font from the Lilypond project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;libmscore:&lt;/strong&gt; Data model of MuseScore.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mscore:&lt;/strong&gt; Main code for the MuseScore UI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;msynth:&lt;/strong&gt; Abstract interface to Fluid + Aeolus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mtest:&lt;/strong&gt; Unit testing using QTest.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;omr:&lt;/strong&gt; Optical music recognition.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;share:&lt;/strong&gt; Files moved to /usr/share/... on install.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;test:&lt;/strong&gt; Old tests. Should move to mtest.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;vtest:&lt;/strong&gt; Visual tests. Compare reference images with current implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;thirdparty:&lt;/strong&gt; Contains projects which are included for convenience, usually to integrate them into the build system to make them available for all supported platforms.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;thirdparty/rtf2html:&lt;/strong&gt;
Used for capella import. Clone from &lt;a href="https://sourceforge.net/projects/rtf2html" rel="nofollow"&gt;rtf2html@sourceforge&lt;/a&gt;, code now at &lt;a href="https://github.com/lvu/rtf2html"&gt;rtf2html@github&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;thirdparty/dtl:&lt;/strong&gt;
Used for the score comparison tool. &lt;a href="https://github.com/cubicdaiya/dtl"&gt;Diff Template Library&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;thirdparty/ofqf:&lt;/strong&gt;
OSC server interface. Based on &lt;a href="http://www.arnoldarts.de/projects/ofqf/" rel="nofollow"&gt;OSC for Qt4&lt;/a&gt;, code now at &lt;a href="https://github.com/kampfschlaefer/ofq"&gt;ofq@github&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;thirdparty/singleapp:&lt;/strong&gt;
Clone from &lt;a href="https://github.com/qtproject/qt-solutions/tree/master/qtsingleapplication"&gt;Qt Single Application&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;thirdparty/portmidi:&lt;/strong&gt;
Clone from &lt;a href="https://sourceforge.net/projects/portmedia/" rel="nofollow"&gt;PortMidi&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;thirdparty/beatroot:&lt;/strong&gt;
It's a core part of &lt;a href="https://code.soundsoftware.ac.uk/projects/beatroot-vamp/repository" rel="nofollow"&gt;BeatRoot Vamp Plugin&lt;/a&gt; by Simon Dixon and Chris Cannam, used in MIDI import for beat detection.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Read the developer handbook for a &lt;a href="https://musescore.org/en/developers-handbook/compilation" rel="nofollow"&gt;complete build walkthrough&lt;/a&gt; and a list of dependencies.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-sources" class="anchor" aria-hidden="true" href="#getting-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting sources&lt;/h3&gt;
&lt;p&gt;If using git to download repo of entire code history, type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/musescore/MuseScore.git
cd MuseScore
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Otherwise, you can just download the latest source release tarball from the &lt;a href="https://github.com/musescore/MuseScore/releases"&gt;Releases page&lt;/a&gt;, and then from your download directory type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tar xzf MuseScore-x.x.x.tar.gz
cd MuseScore-x.x.x
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-release-build" class="anchor" aria-hidden="true" href="#release-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Build&lt;/h3&gt;
&lt;p&gt;To compile MuseScore, type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If something goes wrong, then remove the whole build subdirectory with &lt;code&gt;make clean&lt;/code&gt; and start new with &lt;code&gt;make release&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-running" class="anchor" aria-hidden="true" href="#running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running&lt;/h3&gt;
&lt;p&gt;To start MuseScore, type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./build.release/mscore/mscore
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Start Center window will appear on every invocation until you disable that setting via the "Preferences" dialog.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h3&gt;
&lt;p&gt;To install to default prefix using root user, type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-debug-build" class="anchor" aria-hidden="true" href="#debug-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debug Build&lt;/h3&gt;
&lt;p&gt;A debug version can be built by doing &lt;code&gt;make debug&lt;/code&gt; instead of &lt;code&gt;make release&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To run the debug version, type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./build.debug/mscore/mscore
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h3&gt;
&lt;p&gt;See &lt;a href="/mtest/README.md"&gt;mtest/README.md&lt;/a&gt; or &lt;a href="https://musescore.org/handbook/developers-handbook/finding-your-way-around/automated-tests" rel="nofollow"&gt;the developer handbook&lt;/a&gt; for instructions on how to run the test suite.&lt;/p&gt;
&lt;p&gt;The new &lt;a href="https://musescore.org/node/278278" rel="nofollow"&gt;script testing facility&lt;/a&gt; is also available to create your own automated tests. Please try it out!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>musescore</author><guid isPermaLink="false">https://github.com/musescore/MuseScore</guid><pubDate>Thu, 26 Dec 2019 00:09:00 GMT</pubDate></item><item><title>radareorg/cutter #10 in C++, This month</title><link>https://github.com/radareorg/cutter</link><description>&lt;p&gt;&lt;i&gt;Free and Open Source Reverse Engineering Platform powered by radare2&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/radareorg/cutter/master/src/img/cutter.svg?sanitize=true"&gt;&lt;img width="150" height="150" align="left" alt="Cutter logo" src="https://raw.githubusercontent.com/radareorg/cutter/master/src/img/cutter.svg?sanitize=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-cutter" class="anchor" aria-hidden="true" href="#cutter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cutter&lt;/h1&gt;
&lt;p&gt;Cutter is a free and open-source reverse engineering framework powered by &lt;a href="https://github.com/radareorg/radare2"&gt;radare2&lt;/a&gt; . Its goal is making an advanced, customizable and FOSS reverse-engineering platform while keeping the user experience at mind. Cutter is created by reverse engineers for reverse engineers.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/radareorg/cutter" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/109ebd02b50ded2b6d5d39f655045bcf0530151b/68747470733a2f2f7472617669732d63692e636f6d2f7261646172656f72672f6375747465722e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/radareorg/cutter.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/radareorg/cutter/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e2669b527deb0a2c87684480dcd3a5e97f8e63b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7339726b7831646e33757934626664782f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/s9rkx1dn3uy4bfdx/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/radareorg/cutter/alerts/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/263bbf1a01c01cd26d881c44735b7a30cd4b950a/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f7261646172656f72672f6375747465722e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Total alerts" data-canonical-src="https://img.shields.io/lgtm/alerts/g/radareorg/cutter.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/radareorg/cutter/master/docs/source/images/screenshot.png"&gt;&lt;img src="https://raw.githubusercontent.com/radareorg/cutter/master/docs/source/images/screenshot.png" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more-at-httpscutterre" class="anchor" aria-hidden="true" href="#learn-more-at-httpscutterre"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more at &lt;a href="https://cutter.re" rel="nofollow"&gt;https://cutter.re&lt;/a&gt;.&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-downloading-a-release" class="anchor" aria-hidden="true" href="#downloading-a-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading a release&lt;/h2&gt;
&lt;p&gt;Cutter is available for all platforms (Linux, macOS, Windows).
You can download the latest release &lt;a href="https://github.com/radareorg/cutter/releases"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;macOS: Download the latest &lt;code&gt;.dmg&lt;/code&gt; file or use &lt;a href="https://github.com/Homebrew/homebrew-cask"&gt;Homebrew Cask&lt;/a&gt; &lt;code&gt;brew cask install cutter&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Windows: Download the latest Zip archive.&lt;/li&gt;
&lt;li&gt;Linux: Download the latest AppImage file. Then just make it executable and run it:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chmod +x &amp;lt;appimage_file&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./&amp;lt;appimage_file&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-sources" class="anchor" aria-hidden="true" href="#building-from-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from sources&lt;/h2&gt;
&lt;p&gt;To build Cutter on your local machine, please follow this guide: &lt;a href="https://cutter.re/docs/building.html" rel="nofollow"&gt;Building from source&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h2&gt;
&lt;p&gt;To deploy &lt;em&gt;cutter&lt;/em&gt; using a pre-built &lt;code&gt;Dockerfile&lt;/code&gt;, it's possible to use the &lt;a href="docker"&gt;provided configuration&lt;/a&gt;. The corresponding &lt;code&gt;README.md&lt;/code&gt; file also contains instructions on how to get started using the docker image with minimal effort.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;You can find our documentation in our &lt;a href="https://cutter.re/docs/" rel="nofollow"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Cutter supports both Python and Native C++ plugins. Want to extend Cutter with Plugins? Read the &lt;a href="https://cutter.re/docs/plugins" rel="nofollow"&gt;Plugins&lt;/a&gt; section on our documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-official-and-community-plugins" class="anchor" aria-hidden="true" href="#official-and-community-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official and Community Plugins&lt;/h3&gt;
&lt;p&gt;Our community built many plugins and useful scripts for Cutter such as the native integration of Ghidra decompiler or the plugin to visualize DynamoRIO code coverage. You can find more plugins in the &lt;a href="https://github.com/radareorg/cutter-plugins"&gt;following list&lt;/a&gt;. Don't hesitate to extend it with your own plugins and scripts for Cutter.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h2&gt;
&lt;p&gt;The best place to obtain help from &lt;em&gt;Cutter&lt;/em&gt; developers and community is to contact us on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Telegram:&lt;/strong&gt; &lt;a href="https://t.me/r2cutter" rel="nofollow"&gt;https://t.me/r2cutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IRC:&lt;/strong&gt; #cutter on irc.freenode.net&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Twitter:&lt;/strong&gt; &lt;a href="https://twitter.com/r2gui" rel="nofollow"&gt;@r2gui&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>radareorg</author><guid isPermaLink="false">https://github.com/radareorg/cutter</guid><pubDate>Thu, 26 Dec 2019 00:10:00 GMT</pubDate></item><item><title>microsoft/onnxruntime #11 in C++, This month</title><link>https://github.com/microsoft/onnxruntime</link><description>&lt;p&gt;&lt;i&gt;ONNX Runtime: cross-platform, high performance scoring engine for ML models&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/ONNX_Runtime_logo_dark.png"&gt;&lt;img width="50%" src="docs/images/ONNX_Runtime_logo_dark.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/onnxruntime/onnxruntime/_build/latest?definitionId=9" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/678d291f6372c18e55586a36dd810e70b53596b5/68747470733a2f2f6465762e617a7572652e636f6d2f6f6e6e7872756e74696d652f6f6e6e7872756e74696d652f5f617069732f6275696c642f7374617475732f57696e646f77732532304350552532304349253230506970656c696e653f6c6162656c3d57696e646f77732b435055" alt="Build Status" data-canonical-src="https://dev.azure.com/onnxruntime/onnxruntime/_apis/build/status/Windows%20CPU%20CI%20Pipeline?label=Windows+CPU" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/onnxruntime/onnxruntime/_build/latest?definitionId=10" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/77c43ba954a5cdb4c45c14aebe53b8ca2c42bc61/68747470733a2f2f6465762e617a7572652e636f6d2f6f6e6e7872756e74696d652f6f6e6e7872756e74696d652f5f617069732f6275696c642f7374617475732f57696e646f77732532304750552532304349253230506970656c696e653f6c6162656c3d57696e646f77732b475055" alt="Build Status" data-canonical-src="https://dev.azure.com/onnxruntime/onnxruntime/_apis/build/status/Windows%20GPU%20CI%20Pipeline?label=Windows+GPU" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/onnxruntime/onnxruntime/_build/latest?definitionId=11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e997484a33e23f8c9ff1c6f5257773176831aaed/68747470733a2f2f6465762e617a7572652e636f6d2f6f6e6e7872756e74696d652f6f6e6e7872756e74696d652f5f617069732f6275696c642f7374617475732f4c696e75782532304350552532304349253230506970656c696e653f6c6162656c3d4c696e75782b435055" alt="Build Status" data-canonical-src="https://dev.azure.com/onnxruntime/onnxruntime/_apis/build/status/Linux%20CPU%20CI%20Pipeline?label=Linux+CPU" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/onnxruntime/onnxruntime/_build/latest?definitionId=12" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bab010ae4f5c1410cb69873efb34539867f35dc/68747470733a2f2f6465762e617a7572652e636f6d2f6f6e6e7872756e74696d652f6f6e6e7872756e74696d652f5f617069732f6275696c642f7374617475732f4c696e75782532304750552532304349253230506970656c696e653f6c6162656c3d4c696e75782b475055" alt="Build Status" data-canonical-src="https://dev.azure.com/onnxruntime/onnxruntime/_apis/build/status/Linux%20GPU%20CI%20Pipeline?label=Linux+GPU" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/onnxruntime/onnxruntime/_build/latest?definitionId=13" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b94ade1bdcdd99c95df94f1cf0f8e4ad960f4932/68747470733a2f2f6465762e617a7572652e636f6d2f6f6e6e7872756e74696d652f6f6e6e7872756e74696d652f5f617069732f6275696c642f7374617475732f4d61634f532532304349253230506970656c696e653f6c6162656c3d4d61634f532b435055" alt="Build Status" data-canonical-src="https://dev.azure.com/onnxruntime/onnxruntime/_apis/build/status/MacOS%20CI%20Pipeline?label=MacOS+CPU" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ONNX Runtime&lt;/strong&gt; is a performance-focused complete scoring engine for Open Neural Network Exchange (ONNX) models, with an open extensible architecture to continually address the latest developments in AI and Deep Learning. ONNX Runtime stays up to date with the ONNX standard and supports all operators from the ONNX v1.2+ spec with both forwards and backwards compatibility. Please refer to &lt;a href="docs/Versioning.md"&gt;this page&lt;/a&gt; for ONNX opset compatibility details.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://onnx.ai" rel="nofollow"&gt;ONNX&lt;/a&gt; is an interoperable format for machine learning models supported by various ML and DNN frameworks and tools. The universal format makes it easier to interoperate between frameworks and maximize the reach of hardware optimization investments.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#key-features"&gt;Key Features&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="./samples"&gt;Samples and Tutorials&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#apis-and-official-builds"&gt;APIs and Official Binaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-from-source"&gt;Building from Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-onnx-models"&gt;Getting ONNX Models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploying-onnx-runtime"&gt;Deploying ONNX Runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance-tuning"&gt;Performance Tuning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;More Info&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#technical-design-details"&gt;Technical Design Details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extensibility-options"&gt;Extensibility Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#Data/Telemetry"&gt;Data/Telemetry&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#contribute"&gt;Contributions and Feedback&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-key-features" class="anchor" aria-hidden="true" href="#key-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Features&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-run-any-onnx-model" class="anchor" aria-hidden="true" href="#run-any-onnx-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run any ONNX model&lt;/h2&gt;
&lt;p&gt;ONNX Runtime provides comprehensive support of the ONNX spec and can be used to run all models based on ONNX v1.2.1 and higher. See version compatibility details &lt;a href="./docs/Versioning.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Traditional ML support&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In addition to DNN models, ONNX Runtime fully supports the &lt;a href="https://github.com/onnx/onnx/blob/master/docs/Operators-ml.md"&gt;ONNX-ML profile&lt;/a&gt; of the ONNX spec for traditional ML scenarios.&lt;/p&gt;
&lt;p&gt;For the full set of operators and types supported, please see &lt;a href="./docs/OperatorKernels.md"&gt;operator documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: Some operators not supported in the current ONNX version may be available as a &lt;a href="./docs/ContribOperators.md"&gt;Contrib Operator&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-high-performance" class="anchor" aria-hidden="true" href="#high-performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;High Performance&lt;/h2&gt;
&lt;p&gt;ONNX Runtime supports both CPU and GPU. Using various graph optimizations and accelerators, ONNX Runtime can provide lower latency compared to other runtimes for faster end-to-end customer experiences and minimized machine utilization costs.&lt;/p&gt;
&lt;p&gt;Currently ONNX Runtime supports the following accelerators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MLAS (Microsoft Linear Algebra Subprograms)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NVIDIA CUDA&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Intel MKL-ML&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./docs/execution_providers/MKL-DNN-ExecutionProvider.md"&gt;Intel DNNL&lt;/a&gt; - &lt;a href="./docs/execution_providers/MKL-DNN-Subgraphs.md"&gt;subgraph optimization&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./docs/execution_providers/nGraph-ExecutionProvider.md"&gt;Intel nGraph&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./docs/execution_providers/TensorRT-ExecutionProvider.md"&gt;NVIDIA TensorRT&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./docs/execution_providers/OpenVINO-ExecutionProvider.md"&gt;Intel OpenVINO&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./docs/execution_providers/Nuphar-ExecutionProvider.md"&gt;Nuphar Model Compiler&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./docs/execution_providers/DirectML-ExecutionProvider.md"&gt;DirectML&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./docs/execution_providers/ACL-ExecutionProvider.md"&gt;ACL&lt;/a&gt; (in preview, for ARM Compute Library)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not all variations are supported in the &lt;a href="#apis-and-official-builds"&gt;official release builds&lt;/a&gt;, but can be built from source following &lt;a href="./BUILD.md"&gt;these instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We are continuously working to integrate new execution providers for further improvements in latency and efficiency. If you are interested in contributing a new execution provider, please see &lt;a href="docs/AddingExecutionProvider.md"&gt;this page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cross-platform" class="anchor" aria-hidden="true" href="#cross-platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cross Platform&lt;/h2&gt;
&lt;p&gt;ONNX Runtime is currently available for Linux, Windows, and Mac with Python, C#, C++, and C APIs. Please see &lt;a href="#installation"&gt;API documentation and package installation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have specific scenarios that are not supported, please share your suggestions and scenario details via &lt;a href="https://github.com/microsoft/onnxruntime/issues"&gt;Github Issues&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Quick Start:&lt;/strong&gt; The &lt;a href="https://github.com/onnx/onnx-docker/tree/master/onnx-ecosystem"&gt;ONNX-Ecosystem Docker container image&lt;/a&gt; is available on Dockerhub and includes ONNX Runtime (CPU, Python), dependencies, tools to convert from various frameworks, and Jupyter notebooks to help get started.&lt;/p&gt;
&lt;p&gt;Additional dockerfiles can be found &lt;a href="./dockerfiles"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-apis-and-official-builds" class="anchor" aria-hidden="true" href="#apis-and-official-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;APIs and Official Builds&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-api-documentation" class="anchor" aria-hidden="true" href="#api-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aka.ms/onnxruntime-python" rel="nofollow"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/C_API.md"&gt;C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/CSharp_API.md"&gt;C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./include/onnxruntime/core/session/onnxruntime_cxx_api.h"&gt;C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/Java_API.md"&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ankane/onnxruntime"&gt;Ruby&lt;/a&gt; (external project)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-official-builds" class="anchor" aria-hidden="true" href="#official-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Builds&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align="left"&gt;CPU (MLAS+Eigen)&lt;/th&gt;
&lt;th align="left"&gt;CPU (MKL-ML)&lt;/th&gt;
&lt;th align="left"&gt;GPU (CUDA)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://pypi.org/project/onnxruntime" rel="nofollow"&gt;pypi: onnxruntime&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Windows (x64)&lt;br&gt;Linux (x64)&lt;br&gt;Mac OS X (x64)&lt;/td&gt;
&lt;td align="left"&gt;--&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://pypi.org/project/onnxruntime-gpu" rel="nofollow"&gt;pypi: onnxruntime-gpu&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Windows (x64)&lt;br&gt;Linux (x64)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.ML.OnnxRuntime/" rel="nofollow"&gt;Nuget: Microsoft.ML.OnnxRuntime&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Windows (x64, x86)&lt;br&gt;Linux (x64, x86)&lt;br&gt;Mac OS X (x64)&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.ML.OnnxRuntime.MKLML/" rel="nofollow"&gt;Nuget: Microsoft.ML.OnnxRuntime.MKLML&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Windows (x64)&lt;br&gt;Linux (x64)&lt;br&gt;Mac OS X (x64)&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.ML.OnnxRuntime.Gpu/" rel="nofollow"&gt;Nuget: Microsoft.ML.OnnxRuntime.Gpu&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Windows (x64)&lt;br&gt;Linux (x64)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;C/C++ wrapper&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.ML.OnnxRuntime" rel="nofollow"&gt;Nuget: Microsoft.ML.OnnxRuntime&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://aka.ms/onnxruntime-release" rel="nofollow"&gt;.zip, .tgz&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Windows (x64, x86)&lt;br&gt;Linux (x64, x86)&lt;br&gt;Mac OS X (x64)&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.ML.OnnxRuntime.MKLML/" rel="nofollow"&gt;Nuget: Microsoft.ML.OnnxRuntime.MKLML&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Windows (x64)&lt;br&gt;Linux (x64)&lt;br&gt;Mac OS X (x64)&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.ML.OnnxRuntime.Gpu/" rel="nofollow"&gt;Nuget: Microsoft.ML.OnnxRuntime.Gpu&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://aka.ms/onnxruntime-release" rel="nofollow"&gt;.zip, .tgz&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Windows (x64)&lt;br&gt;Linux (x64)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-system-requirements-pre-requisite-dependencies" class="anchor" aria-hidden="true" href="#system-requirements-pre-requisite-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Requirements (pre-requisite dependencies)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ONNX Runtime binaries in the CPU packages use OpenMP and depend on the library being available at runtime in the
system.
&lt;ul&gt;
&lt;li&gt;For Windows, &lt;strong&gt;OpenMP&lt;/strong&gt; support comes as part of VC runtime. It is also available as redist packages:
&lt;a href="https://aka.ms/vs/16/release/vc_redist.x64.exe" rel="nofollow"&gt;vc_redist.x64.exe&lt;/a&gt; and &lt;a href="https://aka.ms/vs/16/release/vc_redist.x86.exe" rel="nofollow"&gt;vc_redist.x86.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For Linux, the system must have &lt;strong&gt;libgomp.so.1&lt;/strong&gt; which can be installed using &lt;code&gt;apt-get install libgomp1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GPU builds require CUDA runtime libraries being installed on the system:
&lt;ul&gt;
&lt;li&gt;Version: &lt;strong&gt;CUDA 10.0&lt;/strong&gt;, &lt;strong&gt;cuDNN 7.6 on Linux and cuDNN 7.3 on Windows&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Older ONNX Runtime releases: used &lt;strong&gt;CUDA 9.1&lt;/strong&gt; and &lt;strong&gt;cuDNN 7.1&lt;/strong&gt; - please refer to &lt;a href="https://github.com/microsoft/onnxruntime/releases"&gt;prior release notes&lt;/a&gt; for more details.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Python binaries are compatible with &lt;strong&gt;Python 3.5-3.7&lt;/strong&gt;. See &lt;a href="./docs/Python_Dev_Notes.md"&gt;Python Dev Notes&lt;/a&gt;. If using &lt;code&gt;pip&lt;/code&gt; to be download the Python binaries, run &lt;code&gt;pip install --upgrade pip&lt;/code&gt; prior to downloading.&lt;/li&gt;
&lt;li&gt;The Java API is compatible with &lt;strong&gt;Java 8-13&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Certain operators makes use of system locales. Installation of the &lt;strong&gt;English language package&lt;/strong&gt; and configuring &lt;code&gt;en_US.UTF-8 locale&lt;/code&gt; is required.
&lt;ul&gt;
&lt;li&gt;For Ubuntu install &lt;a href="https://packages.ubuntu.com/search?keywords=language-pack-en" rel="nofollow"&gt;language-pack-en package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run the following commands:
&lt;code&gt;locale-gen en_US.UTF-8&lt;/code&gt;
&lt;code&gt;update-locale LANG=en_US.UTF-8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Follow similar procedure to configure other locales on other platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from Source&lt;/h2&gt;
&lt;p&gt;If additional build flavors and/or dockerfiles are needed, please find instructions at &lt;a href="BUILD.md"&gt;Build ONNX Runtime&lt;/a&gt;. For production scenarios, it's strongly recommended to build only from an &lt;a href="https://github.com/microsoft/onnxruntime/releases"&gt;official release branch&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-getting-onnx-models" class="anchor" aria-hidden="true" href="#getting-onnx-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting ONNX Models&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://github.com/onnx/models"&gt;ONNX Model Zoo&lt;/a&gt; has popular ready-to-use pre-trained models.&lt;/li&gt;
&lt;li&gt;To export or convert a trained ONNX model trained from various frameworks, see &lt;a href="https://github.com/onnx/tutorials"&gt;ONNX Tutorials&lt;/a&gt;. Versioning compatibility information can be found under &lt;a href="docs/Versioning.md#tool-compatibility"&gt;Versioning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other services that can be used to create ONNX models include:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aka.ms/automatedmldocs" rel="nofollow"&gt;AutoML from AzureML SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.customvision.ai/" rel="nofollow"&gt;Custom Vision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/machine-learning/service/concept-onnx" rel="nofollow"&gt;E2E training on Azure Machine Learning Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-deploying-onnx-runtime" class="anchor" aria-hidden="true" href="#deploying-onnx-runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deploying ONNX Runtime&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cloud" class="anchor" aria-hidden="true" href="#cloud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cloud&lt;/h3&gt;
&lt;p&gt;ONNX Runtime can be deployed to the cloud for model inferencing using &lt;a href="https://azure.microsoft.com/en-us/services/machine-learning-service" rel="nofollow"&gt;Azure Machine Learning Services&lt;/a&gt;. See &lt;a href="https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-build-deploy-onnx" rel="nofollow"&gt;detailed instructions&lt;/a&gt; and &lt;a href="https://github.com/Azure/MachineLearningNotebooks/tree/master/how-to-use-azureml/deployment/onnx"&gt;sample notebooks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ONNX Runtime Server (beta)&lt;/strong&gt; is a hosted application for serving ONNX models using ONNX Runtime, providing a REST API for prediction. Usage details can be found &lt;a href="./docs/ONNX_Runtime_Server_Usage.md"&gt;here&lt;/a&gt;, and image installation instructions are &lt;a href="./dockerfiles#onnx-runtime-server-preview"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-iot-and-edge-devices" class="anchor" aria-hidden="true" href="#iot-and-edge-devices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IoT and edge devices&lt;/h3&gt;
&lt;p&gt;The expanding focus and selection of IoT devices with sensors and consistent signal streams introduces new opportunities to move AI workloads to the edge.&lt;/p&gt;
&lt;p&gt;This is particularly important when there are massive volumes of incoming data/signals that may not be efficient or useful to push to the cloud due to storage or latency considerations. Consider: surveillance tapes where 99% of footage is uneventful, or real-time person detection scenarios where immediate action is required. In these scenarios, directly executing model inferencing on the target device is crucial for optimal assistance.&lt;/p&gt;
&lt;p&gt;To deploy AI workloads to these edge devices and take advantage of hardware acceleration capabilities on the target device, see &lt;a href="https://github.com/Azure-Samples/onnxruntime-iot-edge"&gt;these reference implementations&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-local-applications" class="anchor" aria-hidden="true" href="#local-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local applications&lt;/h3&gt;
&lt;p&gt;ONNX Runtime packages are published to PyPi and Nuget (see &lt;a href="#official-builds"&gt;Official Builds&lt;/a&gt; and/or can be &lt;a href="./BUILD.md"&gt;built from source&lt;/a&gt; for local application development. Find samples &lt;a href="https://github.com/microsoft/onnxruntime/tree/master/samples/c_cxx"&gt;here&lt;/a&gt; using the C++ API.&lt;/p&gt;
&lt;p&gt;On newer Windows 10 devices (1809+), ONNX Runtime is available by default as part of the OS and is accessible via the &lt;a href="https://docs.microsoft.com/en-us/windows/ai/windows-ml/" rel="nofollow"&gt;Windows Machine Learning APIs&lt;/a&gt;. Find tutorials &lt;a href="https://docs.microsoft.com/en-us/windows/ai/windows-ml/get-started-desktop" rel="nofollow"&gt;here&lt;/a&gt; for building a Windows Desktop or UWP application using WinML.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance-tuning" class="anchor" aria-hidden="true" href="#performance-tuning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Tuning&lt;/h2&gt;
&lt;p&gt;ONNX Runtime is open and extensible, supporting a broad set of configurations and execution providers for model acceleration. For performance tuning guidance, please see &lt;a href="./docs/ONNX_Runtime_Perf_Tuning.md"&gt;this page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To tune performance for ONNX models, the &lt;a href="https://github.com/microsoft/OLive"&gt;ONNX Go Live tool "OLive"&lt;/a&gt; provides an easy-to-use pipeline for converting models to ONNX and optimizing performance for inferencing with ONNX Runtime.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-technical-design-details" class="anchor" aria-hidden="true" href="#technical-design-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technical Design Details&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/HighLevelDesign.md"&gt;High level architectural design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/Versioning.md"&gt;Versioning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-extensibility-options" class="anchor" aria-hidden="true" href="#extensibility-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensibility Options&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/AddingCustomOp.md"&gt;Add a custom operator/kernel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/AddingExecutionProvider.md"&gt;Add an execution provider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="include/onnxruntime/core/optimizer/graph_transformer.h"&gt;Add a new graph
transform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="include/onnxruntime/core/optimizer/rewrite_rule.h"&gt;Add a new rewrite rule&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-datatelemetry" class="anchor" aria-hidden="true" href="#datatelemetry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data/Telemetry&lt;/h1&gt;
&lt;p&gt;This project may collect usage data and send it to Microsoft to help improve our products and services. See the &lt;a href="docs/Privacy.md"&gt;privacy statement&lt;/a&gt; for more details.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h1&gt;
&lt;p&gt;We welcome contributions! Please see the &lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feedback" class="anchor" aria-hidden="true" href="#feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback&lt;/h2&gt;
&lt;p&gt;For any feedback or to report a bug, please file a &lt;a href="https://github.com/Microsoft/onnxruntime/issues"&gt;GitHub Issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt;
or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/onnxruntime</guid><pubDate>Thu, 26 Dec 2019 00:11:00 GMT</pubDate></item><item><title>tensorflow/tensorflow #12 in C++, This month</title><link>https://github.com/tensorflow/tensorflow</link><description>&lt;p&gt;&lt;i&gt;An Open Source Machine Learning Framework for Everyone&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0905c7d634421f8aa4ab3ddf19a582572df568e1/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f736f6369616c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0905c7d634421f8aa4ab3ddf19a582572df568e1/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f736f6369616c2e706e67" data-canonical-src="https://www.tensorflow.org/images/tf_logo_social.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.tensorflow.org/api_docs/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bcb2a5bacdee6fffb24776a79c21bc3eae19ecc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6170692d7265666572656e63652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/api-reference-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://www.tensorflow.org/" rel="nofollow"&gt;TensorFlow&lt;/a&gt; is an end-to-end open source platform
for machine learning. It has a comprehensive, flexible ecosystem of
&lt;a href="https://www.tensorflow.org/resources/tools" rel="nofollow"&gt;tools&lt;/a&gt;,
&lt;a href="https://www.tensorflow.org/resources/libraries-extensions" rel="nofollow"&gt;libraries&lt;/a&gt;, and
&lt;a href="https://www.tensorflow.org/community" rel="nofollow"&gt;community&lt;/a&gt; resources that lets
researchers push the state-of-the-art in ML and developers easily build and
deploy ML-powered applications.&lt;/p&gt;
&lt;p&gt;TensorFlow was originally developed by researchers and engineers working on the
Google Brain team within Google's Machine Intelligence Research organization to
conduct machine learning and deep neural networks research. The system is
general enough to be applicable in a wide variety of other domains, as well.&lt;/p&gt;
&lt;p&gt;TensorFlow provides stable &lt;a href="https://www.tensorflow.org/api_docs/python" rel="nofollow"&gt;Python&lt;/a&gt;
and &lt;a href="https://www.tensorflow.org/api_docs/cc" rel="nofollow"&gt;C++&lt;/a&gt; APIs, as well as
non-guaranteed backward compatible API for
&lt;a href="https://www.tensorflow.org/api_docs" rel="nofollow"&gt;other languages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Keep up-to-date with release announcements and security updates by subscribing
to
&lt;a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/announce" rel="nofollow"&gt;announce@tensorflow.org&lt;/a&gt;.
See all the &lt;a href="https://www.tensorflow.org/community/forums" rel="nofollow"&gt;mailing lists&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feature-prioritization-survey" class="anchor" aria-hidden="true" href="#feature-prioritization-survey"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature Prioritization Survey&lt;/h2&gt;
&lt;p&gt;The TensorFlow team is working on building/improving features, and understands
that it is very important to prioritize these efforts based on what TF users
need.&lt;/p&gt;
&lt;p&gt;The goal of this short, &amp;lt; 5 minute
&lt;a href="https://google.qualtrics.com/jfe/form/SV_d5nqhCEbkDkQ7ad" rel="nofollow"&gt;survey&lt;/a&gt;, is to help
the TensorFlow team better understand what features to prioritize based on your
feedback. Participation is of course optional.&lt;/p&gt;
&lt;p&gt;Take the survey
&lt;a href="https://google.qualtrics.com/jfe/form/SV_d5nqhCEbkDkQ7ad" rel="nofollow"&gt;HERE&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://www.tensorflow.org/install" rel="nofollow"&gt;TensorFlow install guide&lt;/a&gt; for the
&lt;a href="https://www.tensorflow.org/install/pip" rel="nofollow"&gt;pip package&lt;/a&gt;, to
&lt;a href="https://www.tensorflow.org/install/gpu" rel="nofollow"&gt;enable GPU support&lt;/a&gt;, use a
&lt;a href="https://www.tensorflow.org/install/docker" rel="nofollow"&gt;Docker container&lt;/a&gt;, and
&lt;a href="https://www.tensorflow.org/install/source" rel="nofollow"&gt;build from source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To install the current release, which includes support for
&lt;a href="https://www.tensorflow.org/install/gpu" rel="nofollow"&gt;CUDA-enabled GPU cards&lt;/a&gt; &lt;em&gt;(Ubuntu and
Windows)&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pip install tensorflow
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A smaller CPU-only package is also available:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pip install tensorflow-cpu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To update TensorFlow to the latest version, add &lt;code&gt;--upgrade&lt;/code&gt; flag to the above
commands.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nightly binaries are available for testing using the
&lt;a href="https://pypi.python.org/pypi/tf-nightly" rel="nofollow"&gt;tf-nightly&lt;/a&gt; and
&lt;a href="https://pypi.python.org/pypi/tf-nightly-cpu" rel="nofollow"&gt;tf-nightly-cpu&lt;/a&gt; packages on PyPi.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-try-your-first-tensorflow-program" class="anchor" aria-hidden="true" href="#try-your-first-tensorflow-program"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Try your first TensorFlow program&lt;/em&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ python&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; tensorflow &lt;span class="pl-k"&gt;as&lt;/span&gt; tf
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; tf.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;).numpy()
&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; hello &lt;span class="pl-k"&gt;=&lt;/span&gt; tf.constant(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello, TensorFlow!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; hello.numpy()
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello, TensorFlow!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more examples, see the
&lt;a href="https://www.tensorflow.org/tutorials/" rel="nofollow"&gt;TensorFlow tutorials&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution guidelines&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;If you want to contribute to TensorFlow, be sure to review the
&lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. This project adheres to TensorFlow's
&lt;a href="CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;. By participating, you are expected to
uphold this code.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We use &lt;a href="https://github.com/tensorflow/tensorflow/issues"&gt;GitHub issues&lt;/a&gt; for
tracking requests and bugs, please see
&lt;a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/discuss" rel="nofollow"&gt;TensorFlow Discuss&lt;/a&gt;
for general questions and discussion, and please direct specific questions to
&lt;a href="https://stackoverflow.com/questions/tagged/tensorflow" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The TensorFlow project strives to abide by generally accepted best practices in
open-source software development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/1486" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e88ed14c6c25049b897c18ec0634849eedd41ed/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f313438362f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/1486/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="CODE_OF_CONDUCT.md"&gt;&lt;img src="https://camo.githubusercontent.com/8315e511f8eb4651470540d6951fd05099251fc5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e7472696275746f72253230436f76656e616e742d76312e3425323061646f707465642d6666363962342e737667" alt="Contributor Covenant" data-canonical-src="https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-continuous-build-status" class="anchor" aria-hidden="true" href="#continuous-build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continuous build status&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-official-builds" class="anchor" aria-hidden="true" href="#official-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Builds&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Type&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Artifacts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a4fdcfa00ca9b58e25faeb12b3c33e76b1a958e/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d63632e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux GPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/23974bb3500725d9002d3d90db6969209727e67a/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d6770752d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly-gpu/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux XLA&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f87640221ff02de68733023965fbc4158915ae34/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d786c612e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;TBA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a870cac7ec5bb83225157f2d8cd29402c5c225c2/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f6d61636f732d7079322d63632e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Windows CPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bb46296f5a577e642e90c2790cd986fed948001/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f77696e646f77732d6370752e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Windows GPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dcef118987c7dc26851bd1bf06209a73a321eade/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f77696e646f77732d6770752e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly-gpu/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac624987d37e4b45b7d48af47da9a2c59aa91f98/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f616e64726f69642e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bintray.com/google/tensorflow/tensorflow/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c70326c7b5968c1c60c4736aca22ceea7caee29/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f676f6f676c652f74656e736f72666c6f772f74656e736f72666c6f772f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Raspberry Pi 0 and 1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py2.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b1d713c0f336323888f3af38b245d48437bfff6/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706930312d7079322e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py2.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/206345bc65f075349a30f0417d98696db7a3c991/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706930312d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp27-none-linux_armv6l.whl" rel="nofollow"&gt;Py2&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv6l.whl" rel="nofollow"&gt;Py3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Raspberry Pi 2 and 3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py2.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9ad01af09347b9b3d51598136966906db5078f6/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706932332d7079322e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py2.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3005cda539dbd99ffdd30b4a3a53632ca0b3157d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706932332d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp27-none-linux_armv7l.whl" rel="nofollow"&gt;Py2&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv7l.whl" rel="nofollow"&gt;Py3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-community-supported-builds" class="anchor" aria-hidden="true" href="#community-supported-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Supported Builds&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Type&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Artifacts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux AMD ROCm GPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43be7f8a67c3b3b7d3a36a1e643080d50f0d0161/687474703a2f2f6d6c2d63692e616d642e636f6d3a32313039362f6a6f622f74656e736f72666c6f772d726f636d2d6e696768746c792f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/lastSuccessfulBuild/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux AMD ROCm GPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b7df6fd69523c6ac58fa4e18020fbb11ccefb3a/687474703a2f2f6d6c2d63692e616d642e636f6d3a32313039362f6a6f622f74656e736f72666c6f772d726f636d2d72656c656173652f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/lastSuccessfulBuild/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-v2-release/lastSuccessfulBuild/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux s390x&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bf78ecce19b8d70fd6e2b8b69e9b471f34bd6b4/687474703a2f2f69626d7a2d63692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f49424d5a5f43492f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux s390x CPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f42181ec41d0488d09a5ee573fdbc99984aa1145/687474703a2f2f69626d7a2d63692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f49424d5a5f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/" rel="nofollow"&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le CPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54cb21daa12029bb61f4e7d7bc95e0e335ceda2e/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4350555f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le CPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b254e3e5afa48aeb9c1ae1a0ae2638d34154b62/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4350555f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le GPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e8e2513df82fb86f96c447d323ea2cb0dd70b05c/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4750555f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le GPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f1f37aee090217fc7a43ea95ca9b0de6939c163/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4750555f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU with Intel® MKL-DNN&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c40f3ad1a2607800e59b7883ad6b02bd7f14a571/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6275696c642d77686c2d6e696768746c792f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU with Intel® MKL-DNN&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b2c71a19d8201755f18351c512a056932c4398cf/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6275696c642d72656c656173652d77686c2f62616467652f69636f6e"&gt;&lt;img src="https://camo.githubusercontent.com/b2c71a19d8201755f18351c512a056932c4398cf/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6275696c642d72656c656173652d77686c2f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://pypi.org/project/intel-tensorflow/1.15.0/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://pypi.org/project/intel-tensorflow/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Red Hat® Enterprise Linux® 7.6 CPU &amp;amp; GPU&lt;/strong&gt; &lt;br&gt; Python 2.7, 3.6&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins-tensorflow.apps.ci.centos.org/job/tensorflow-rhel7-3.6/2/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54054605d50d10a330786d70ac221bb8874caa5d/68747470733a2f2f6a656e6b696e732d74656e736f72666c6f772e617070732e63692e63656e746f732e6f72672f6275696c645374617475732f69636f6e3f6a6f623d74656e736f72666c6f772d7268656c372d332e36266275696c643d32" alt="Build Status" data-canonical-src="https://jenkins-tensorflow.apps.ci.centos.org/buildStatus/icon?job=tensorflow-rhel7-3.6&amp;amp;build=2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow.pypi.thoth-station.ninja/index/" rel="nofollow"&gt;1.13.1 PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org" rel="nofollow"&gt;TensorFlow.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/tutorials/" rel="nofollow"&gt;TensorFlow tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/models/tree/master/official"&gt;TensorFlow official models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/examples"&gt;TensorFlow examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/specializations/tensorflow-in-practice" rel="nofollow"&gt;TensorFlow in Practice from Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/intro-to-tensorflow-for-deep-learning--ud187" rel="nofollow"&gt;Intro to TensorFlow for Deep Learning from Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/intro-to-tensorflow-lite--ud190" rel="nofollow"&gt;Introduction to TensorFlow Lite from Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.tensorflow.org" rel="nofollow"&gt;TensorFlow blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tensorflow" rel="nofollow"&gt;TensorFlow Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC0rqucBdTuFTjJiefW5t-IQ" rel="nofollow"&gt;TensorFlow YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/community/roadmap" rel="nofollow"&gt;TensorFlow roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/about/bib" rel="nofollow"&gt;TensorFlow white papers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/tensorboard"&gt;TensorBoard visualization toolkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more about the
&lt;a href="https://www.tensorflow.org/community" rel="nofollow"&gt;TensorFlow community&lt;/a&gt; and how to
&lt;a href="https://www.tensorflow.org/community/contribute" rel="nofollow"&gt;contribute&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tensorflow</author><guid isPermaLink="false">https://github.com/tensorflow/tensorflow</guid><pubDate>Thu, 26 Dec 2019 00:12:00 GMT</pubDate></item><item><title>NVIDIAGameWorks/kaolin #13 in C++, This month</title><link>https://github.com/NVIDIAGameWorks/kaolin</link><description>&lt;p&gt;&lt;i&gt;A PyTorch Library for Accelerating 3D Deep Learning Research&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="assets/kaolin.png"&gt;&lt;img src="assets/kaolin.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-kaolin-a-pytorch-library-for-accelerating-3d-deep-learning-research" class="anchor" aria-hidden="true" href="#kaolin-a-pytorch-library-for-accelerating-3d-deep-learning-research"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kaolin: A PyTorch Library for Accelerating 3D Deep Learning Research&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://kaolin.readthedocs.io/en/latest/" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://arxiv.org/abs/1911.05063" rel="nofollow"&gt;Paper&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kaolin is a PyTorch library aiming to accelerate 3D deep learning research. Kaolin provides efficient implementations of differentiable 3D modules for use in deep learning systems. With functionality to load and preprocess several popular 3D datasets, and native functions to manipulate meshes, pointclouds, signed distance functions, and voxel grids, Kaolin mitigates the need to write wasteful boilerplate code. Kaolin packages together several differentiable graphics modules including rendering, lighting, shading, and view warping. Kaolin also supports an array of loss functions and evaluation metrics for seamless evaluation and provides visualization functionality to render the 3D results. Importantly, we curate a comprehensive model zoo comprising many state-of-the-art 3D deep learning architectures, to serve as a starting point for future research endeavours.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Fun fact&lt;/em&gt;: The name &lt;em&gt;Kaolin&lt;/em&gt;, it’s from Kaolinite, a form of plasticine (clay) that is sometimes used in 3D modeling.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#functionality"&gt;Functionality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-and-usage"&gt;Installation And Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#supported-platforms"&gt;Supported Platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-kaolin"&gt;Install Kaolin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#verify-installation"&gt;Verify Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-the-documentation"&gt;Building the Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-unittests"&gt;Running Unittests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#main-modules"&gt;Main Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#acknowledgements"&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-functionality" class="anchor" aria-hidden="true" href="#functionality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functionality&lt;/h2&gt;
&lt;p align="center"&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="assets/kaolin_applications.png"&gt;&lt;img src="assets/kaolin_applications.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Currently, the (beta) release contains several processing functions for 3D deep learning on meshes, voxels, signed distance functions, and pointclouds. Loading of several popular datasets (eg. ShapeNet, ModelNet, SHREC) are supported out-of-the-box. We also implement several 3D conversion and transformation operations (both within and across the aforementioned representations).&lt;/p&gt;
&lt;p&gt;Kaolin supports several 3D tasks such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Differentiable rendering (see &lt;a href="https://github.com/hiroharu-kato/neural_renderer"&gt;Neural Mesh Renderer&lt;/a&gt;, its &lt;a href="https://github.com/daniilidis-group/neural_renderer"&gt;PyTorch port&lt;/a&gt;, &lt;a href="https://github.com/ShichenLiu/SoftRas"&gt;Soft Rasterizer&lt;/a&gt;, &lt;a href="https://nv-tlabs.github.io/DIB-R/" rel="nofollow"&gt;Differentiable Interpolation-based Renderer&lt;/a&gt;, and a modular and extensible abstract DifferentiableRenderer specification).&lt;/li&gt;
&lt;li&gt;Single-image based mesh reconstruction (&lt;a href="https://github.com/nywang16/Pixel2Mesh"&gt;Pixel2Mesh&lt;/a&gt;, &lt;a href="https://github.com/EdwardSmith1884/GEOMetrics"&gt;GEOMetrics&lt;/a&gt;, &lt;a href="https://github.com/autonomousvision/occupancy_networks"&gt;OccupancyNets&lt;/a&gt;, and more...)&lt;/li&gt;
&lt;li&gt;Pointcloud classification and segmentation (&lt;a href="https://github.com/fxia22/pointnet.pytorch"&gt;PointNet&lt;/a&gt;, &lt;a href="https://github.com/erikwijmans/Pointnet2_PyTorch"&gt;PoinNet++&lt;/a&gt;, &lt;a href="https://github.com/muhanzhang/pytorch_DGCNN"&gt;DGCNN&lt;/a&gt;, ...)&lt;/li&gt;
&lt;li&gt;Mesh classification and segmentation (&lt;a href="https://github.com/ranahanocka/MeshCNN"&gt;MeshCNN&lt;/a&gt;, &lt;a href="https://github.com/tkipf/pygcn"&gt;GCN&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;3D superresolution on voxel grids (&lt;a href="https://github.com/EdwardSmith1884/Multi-View-Silhouette-and-Depth-Decomposition-for-High-Resolution-3D-Object-Representation"&gt;ODM&lt;/a&gt;, VoxelUNet, and more...)&lt;/li&gt;
&lt;li&gt;Basic graphics utilities (lighting, shading, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-model-zoo" class="anchor" aria-hidden="true" href="#model-zoo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Zoo&lt;/h2&gt;
&lt;p&gt;Kaolin curates a large &lt;em&gt;model zoo&lt;/em&gt; containing reference implementations of popular 3D DL architectures. Head over &lt;a href="kaolin/models"&gt;here&lt;/a&gt; to check them out.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: For several of these models, the implementation is due to the original authors. We build a bridge to our library and wherever possible, we introduce optimization. If you use any of the models in the model zoo, or the graphics packages (eg. differentiable renderers such as &lt;a href="https://arxiv.org/abs/1711.07566" rel="nofollow"&gt;NMR&lt;/a&gt;, &lt;a href="https://arxiv.org/abs/1904.01786" rel="nofollow"&gt;SoftRas&lt;/a&gt;, &lt;a href="https://arxiv.org/abs/1908.01210" rel="nofollow"&gt;DIB-R&lt;/a&gt;), please cite the original papers in addition to Kaolin. For convenience, BibTeX citation formats for each of the original papers are included in the documentation for each model provided.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-installation-and-usage" class="anchor" aria-hidden="true" href="#installation-and-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation and Usage&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The API is currently somewhat unstable, as we're making constant changes. (It's a beta release)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Python &amp;gt;= 3.6&lt;/li&gt;
&lt;li&gt;CUDA &amp;gt;= 10.0.130 (with &lt;code&gt;nvcc&lt;/code&gt; installed)&lt;/li&gt;
&lt;li&gt;Display Driver &amp;gt;= 410.48&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Windows support is in the works and is currently considered experimental.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;numpy &amp;gt;= 1.17&lt;/li&gt;
&lt;li&gt;PyTorch &amp;gt;= 1.2 and Torchvision (see &lt;a href="http://pytorch.org" rel="nofollow"&gt;pytorch.org&lt;/a&gt; for installation instructions)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;We highly recommend installing Kaolin inside of a virtual environment (such as ones created using &lt;code&gt;conda&lt;/code&gt; or &lt;code&gt;virtualenv&lt;/code&gt;). In this example, we show how to create a &lt;code&gt;conda&lt;/code&gt; virtual environment for installing kaolin.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ conda create --name kaolin python=3.6
$ conda activate kaolin&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-dependencies-1" class="anchor" aria-hidden="true" href="#dependencies-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h4&gt;
&lt;p&gt;Install PyTorch and Torchvision by following instructions from &lt;a href="https://pytorch.org/" rel="nofollow"&gt;https://pytorch.org/&lt;/a&gt;. Numpy will be installed as part of the Pytorch installation. Note that the setup file does not automatically install these dependencies.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-install-kaolin" class="anchor" aria-hidden="true" href="#install-kaolin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Kaolin&lt;/h4&gt;
&lt;p&gt;Now, you can install the library. From the root directory of this repo (i.e., the directory containing this &lt;code&gt;README&lt;/code&gt; file), run&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-for-general-use" class="anchor" aria-hidden="true" href="#for-general-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For General Use&lt;/h5&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ python setup.py build_ext --inplace   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional, allows importing kaolin from the kaolin root directory&lt;/span&gt;
$ python setup.py install&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-development-modifying-kaolin-code" class="anchor" aria-hidden="true" href="#for-development-modifying-kaolin-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For Development (modifying kaolin code)&lt;/h5&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ python setup.py develop&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note, if modifying or adding Cython files, ensure that Cython is installed and set the following environment variable &lt;code&gt;USE_CYTHON=1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;During installation, the &lt;em&gt;packman&lt;/em&gt; package manager will
download the nv-usd package to &lt;code&gt;~/packman-repo/&lt;/code&gt; containing the necessary packages for reading and writing Universal Scene Description (USD) files.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-verify-installation" class="anchor" aria-hidden="true" href="#verify-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verify installation&lt;/h3&gt;
&lt;p&gt;To verify that &lt;code&gt;kaolin&lt;/code&gt; has been installed, fire up your python interpreter, and execute the following commands.&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; kaolin &lt;span class="pl-k"&gt;as&lt;/span&gt; kal
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(kal.&lt;span class="pl-c1"&gt;__version__&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-documentation" class="anchor" aria-hidden="true" href="#building-the-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Documentation&lt;/h3&gt;
&lt;p&gt;To delve deeper into the library, build the documentation. From the root directory of the repository (i.e., the directory containing this &lt;code&gt;README&lt;/code&gt; file), execute the following.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; docs
$ sphinx-build &lt;span class="pl-c1"&gt;.&lt;/span&gt; _build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-running-unittests" class="anchor" aria-hidden="true" href="#running-unittests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Unittests&lt;/h3&gt;
&lt;p&gt;To run unittests, from the root directory of the repository (i.e., the directory containing this &lt;code&gt;README&lt;/code&gt; file), execute the following commands.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pytest tests/&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-main-modules" class="anchor" aria-hidden="true" href="#main-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Main Modules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;rep&lt;/strong&gt;: Supported 3D asset representations include: Triangle Meshes, Quad Meshes, Voxel Grids, Point Clouds, Signed Distance Functions (SDF).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;conversions&lt;/strong&gt;: Supports conversion across all popular 3D representations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;models&lt;/strong&gt;: Provided models include the following. For each implementation, we also provide a link to the &lt;em&gt;original implementation which it was ported from&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DGCNN [&lt;a href="https://arxiv.org/abs/1801.07829v1" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/WangYueFt/dgcnn"&gt;Original implementation&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;DIB-R [&lt;a href="https://arxiv.org/abs/1908.01210" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/nv-tlabs/DIB-R/"&gt;Original implementation&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;GEOMetrics [&lt;a href="https://arxiv.org/abs/1901.11461" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/EdwardSmith1884/GEOMetrics"&gt;Original implementation&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Image2Mesh [&lt;a href="https://arxiv.org/abs/1711.10669" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/jhonykaesemodel/image2mesh"&gt;Original implementation&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Occupancy Network [&lt;a href="https://arxiv.org/abs/1812.03828" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/autonomousvision/occupancy_networks"&gt;Original implementation&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Pixel2Mesh [&lt;a href="https://arxiv.org/abs/1804.01654" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/nywang16/Pixel2Mesh"&gt;Original implementation (TensorFlow)&lt;/a&gt;], [&lt;a href="https://github.com/EdwardSmith1884/GEOMetrics"&gt;Re-implementation that we borrow from&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;PointNet [&lt;a href="https://arxiv.org/abs/1612.00593" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/charlesq34/pointnet"&gt;Original implementation&lt;/a&gt;], [&lt;a href="https://github.com/fxia22/pointnet.pytorch/"&gt;Re-implementation (we borrow from here)&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;PointNet++ [&lt;a href="https://arxiv.org/abs/1706.02413" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/charlesq34/pointnet2"&gt;Original implementation (we borrow  from here)&lt;/a&gt;], [&lt;a href="https://github.com/erikwijmans/Pointnet2_PyTorch"&gt;Re-implementation (we borrow from here)&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;MeshEncoder: A simple mesh encoder architecture.&lt;/li&gt;
&lt;li&gt;GraphResNet: MeshEncoder with residual connections.&lt;/li&gt;
&lt;li&gt;OccupancyNetworks [&lt;a href="https://arxiv.org/abs/1812.03828" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/autonomousvision/occupancy_networks"&gt;Original implementation&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;MeshCNN: [&lt;a href="https://arxiv.org/abs/1809.05910" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/ranahanocka/MeshCNN"&gt;Original implementation&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;VoxelGAN [&lt;a href="http://3dgan.csail.mit.edu/papers/3dgan_nips.pdf" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/zck119/3dgan-release"&gt;Original implementation&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;AtlasNet [&lt;a href="https://arxiv.org/abs/1802.05384" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/ThibaultGROUEIX/AtlasNet"&gt;Original implementation&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;And many more to come!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: For several of these models, the implementation is due to the original authors. We build a bridge to our library and wherever possible, we introduce optimization. If you use any of the models in the model zoo, or the graphics packages (eg. differentiable renderers such as &lt;a href="https://arxiv.org/abs/1711.07566" rel="nofollow"&gt;NMR&lt;/a&gt;, &lt;a href="https://arxiv.org/abs/1904.01786" rel="nofollow"&gt;SoftRas&lt;/a&gt;, &lt;a href="https://arxiv.org/abs/1908.01210" rel="nofollow"&gt;DIB-R&lt;/a&gt;), please cite the original papers in addition to Kaolin. For convenience, BibTeX citation formats for each of the original papers are included in the documentation for each model provided.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;graphics&lt;/strong&gt;: Kaolin provides a flexible and modular framework for building differentiable renderers, making it simple to replace individual components with new ones. Kaolin also provides implementations of the following differentiable renderers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DIB-R [&lt;a href="https://arxiv.org/abs/1908.01210" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/nv-tlabs/DIB-R/"&gt;Original implementation (we borrow from here)&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;SoftRas [&lt;a href="https://arxiv.org/abs/1904.01786" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/ShichenLiu/SoftRas"&gt;Original implementation (we borrow from here)&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Neural 3D Mesh Renderer [&lt;a href="https://arxiv.org/abs/1711.07566" rel="nofollow"&gt;Paper&lt;/a&gt;], [&lt;a href="https://github.com/hiroharu-kato/neural_renderer"&gt;Original Chainer implementation&lt;/a&gt;], [&lt;a href="https://github.com/daniilidis-group/neural_renderer"&gt;PyTorch re-implementation (we borrow from here)&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;metrics&lt;/strong&gt;: Implemented metrics and loss functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mesh: Triangle Distance, Chamfer Distance, Edge Length regularization, Laplacian regularization, Point to Surface distance, Normal consistency&lt;/li&gt;
&lt;li&gt;Point Cloud: Sided Distance, Chamfer Distance, Directed Distance&lt;/li&gt;
&lt;li&gt;Voxel Grid: Intersection Over Union (3D IoU), F-Score&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Take a look at some of our examples!! Examples include differentiable renderers, voxel superresolution, etc. Begin &lt;a href="examples"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We will (very soon) host our docs online. Stay tuned for the link. Until then, please follow instructions from &lt;a href="#building-the-documentation"&gt;above&lt;/a&gt; to build docs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://krrish94.github.io/" rel="nofollow"&gt;Krishna Murthy Jatavallabhula&lt;/a&gt;,
&lt;a href="https://github.com/EdwardSmith1884"&gt;Edward Smith&lt;/a&gt;,
&lt;a href="https://www.linkedin.com/in/jflafleche" rel="nofollow"&gt;Jean-Francois Lafleche&lt;/a&gt;,
&lt;a href="https://ca.linkedin.com/in/clement-fuji-tsang-b8028a82" rel="nofollow"&gt;Clement Fuji Tsang&lt;/a&gt;,
&lt;a href="https://sites.google.com/site/artemrozantsev/" rel="nofollow"&gt;Artem Rozantsev&lt;/a&gt;,
&lt;a href="http://www.cs.toronto.edu/~wenzheng/" rel="nofollow"&gt;Wenzheng Chen&lt;/a&gt;,
&lt;a href="https://github.com/TommyX12"&gt;Tommy Xiang&lt;/a&gt;,
&lt;a href="https://blogs.nvidia.com/blog/author/revlebaredian/" rel="nofollow"&gt;Rev Lebaredian&lt;/a&gt;,
&lt;a href="https://ca.linkedin.com/in/gavstate" rel="nofollow"&gt;Gavriel State&lt;/a&gt;,
&lt;a href="https://www.cs.utoronto.ca/~fidler/" rel="nofollow"&gt;Sanja Fidler&lt;/a&gt;,&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="Acknowledgements.txt"&gt;Acknowledgements&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We would like to thank &lt;a href="https://amlankar.github.io" rel="nofollow"&gt;Amlan Kar&lt;/a&gt; for suggesting the need for this library. We also thank &lt;a href="http://ankurhanda.github.io" rel="nofollow"&gt;Ankur Handa&lt;/a&gt; for his advice during the initial and final stages of the project. Many thanks to &lt;a href="https://scholar.google.com/citations?user=VVIAoY0AAAAJ&amp;amp;hl=en" rel="nofollow"&gt;Joanh Philion&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/daiqing-li-23873789?originalSubdomain=ca" rel="nofollow"&gt;Daiqing Li&lt;/a&gt;, &lt;a href="https://ca.linkedin.com/in/mark-brophy-3a298382" rel="nofollow"&gt;Mark Brophy&lt;/a&gt;, &lt;a href="http://www.cs.toronto.edu/~jungao/" rel="nofollow"&gt;Jun Gao&lt;/a&gt;, and &lt;a href="http://www.cs.toronto.edu/~linghuan/" rel="nofollow"&gt;Huan Ling&lt;/a&gt; who performed detailed internal reviews, and provided constructive comments. We also thank &lt;a href="https://ca.linkedin.com/in/gavstate" rel="nofollow"&gt;Gavriel State&lt;/a&gt; for all his help during the project.&lt;/p&gt;
&lt;p&gt;Most importantly, we thank all 3D DL researchers who have made their code available as open-source. The field could use a lot more of it!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license-and-copyright" class="anchor" aria-hidden="true" href="#license-and-copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License and Copyright&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="COPYRIGHT"&gt;COPYRIGHT&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you find this library useful, consider citing the following paper:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{kaolin2019arxiv,
    author = {J., {Krishna Murthy} and Smith, Edward and Lafleche, Jean-Francois and {Fuji Tsang}, Clement and Rozantsev, Artem and Chen, Wenzheng and Xiang, Tommy and Lebaredian, Rev and Fidler, Sanja},
    title = {Kaolin: A PyTorch Library for Accelerating 3D Deep Learning Research},
    journal = {arXiv:1911.05063},
    year = {2019},
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contributors-for-borrowed-sources" class="anchor" aria-hidden="true" href="#contributors-for-borrowed-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors for borrowed sources&lt;/h2&gt;
&lt;p&gt;Here is a list of all authors on relevant research papers that Kaolin borrows code from. Without the efforts of these folks (and their willingness to release their implementations under permissive open-source licenses), Kaolin would not have been possible.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kornia: Edgar Riba, Dmytro Mishkin, Daniel Ponsa, Ethan Rublee and Gary Bradski. [&lt;a href="https://arxiv.org/pdf/1910.02190.pdf" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/kornia/kornia"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Occupancy Networks: Lars Mescheder, Michael Oechsle, Michael Niemeyer, Sebastian Nowozin, Andreas Geiger. [&lt;a href="https://avg.is.tuebingen.mpg.de/publications/occupancy-networks" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/autonomousvision/occupancy_networks"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Multi-View Silhouette and Depth Decomposition for High Resolution 3D Object Representation: Edward Smith, Scott Fujimoto, David Meger. [&lt;a href="https://papers.nips.cc/paper/7883-multi-view-silhouette-and-depth-decomposition-for-high-resolution-3d-object-representation.pdf" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/EdwardSmith1884/Multi-View-Silhouette-and-Depth-Decomposition-for-High-Resolution-3D-Object-Representation"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Pytorch Chamfer Distance: Christian Diller. [&lt;a href="https://github.com/chrdiller/pyTorchChamferDistance"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;GEOMetrics: Edward Smith, Scott Fujimoto, Adriana Romero, David Meger. [&lt;a href="https://arxiv.org/abs/1901.11461" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/EdwardSmith1884/GEOMetrics"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;DeepSDF: Jeong Joon Park, Peter Florence, Julian Straub, Richard Newcombe, Steven Lovegrove. [&lt;a href="http://openaccess.thecvf.com/content_CVPR_2019/html/Park_DeepSDF_Learning_Continuous_Signed_Distance_Functions_for_Shape_Representation_CVPR_2019_paper.html" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/facebookresearch/DeepSDF"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;PointGAN: Fei Xia. [&lt;a href="https://github.com/fxia22/pointGAN"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;AtlasNet: Thibault Groueix, Matthew Fisher, Vladimir G. Kim, Bryan C. Russell, Mathieu Aubry. [&lt;a href="https://arxiv.org/abs/1802.05384" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/ThibaultGROUEIX/AtlasNet"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;PointNet: Charles R. Qi, Hao Su, Kaichun Mo, Leonidas J. Guibas. Also, Fei Xia (reimplementation). [&lt;a href="https://arxiv.org/abs/1612.00593" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/fxia22/pointnet.pytorch"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;MeshCNN: Rana Hanocka, Amir Hertz, Noa Fish, Raja Giryes, Shachar Fleishman, Daniel Cohen-Or. [&lt;a href="https://arxiv.org/abs/1809.05910" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/ranahanocka/MeshCNN"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;DGCNN: Muhan Zhang, Zhicheng Cui, Marion Neumann, Yixin Chen. [&lt;a href="https://www.cse.wustl.edu/~muhan/papers/AAAI_2018_DGCNN.pdf" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/muhanzhang/pytorch_DGCNN"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Neural 3D Mesh Renderer: Hiroharu Kato, Yoshitaka Ushiku, Tatsuya Harada. Also, Nikos Kolotouros (for reimplementation). [&lt;a href="https://arxiv.org/abs/1711.07566" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/daniilidis-group/neural_renderer"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;SoftRasterizer: Shichen Liu, Tianye Li, Weikai Chen, Hao Li. [&lt;a href="https://arxiv.org/abs/1904.01786" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/ShichenLiu/SoftRas"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;DIB-R: Wenzheng Chen, Jun Gao, Huan Ling, Edward J. Smith, Jaakko Lehtinen, Alec Jacobson, Sanja Fidler. [&lt;a href="https://arxiv.org/abs/1908.01210" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/nv-tlabs/DIB-R"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;PointNet++: Charles R. Qi, Li (Eric) Yi, Hao Su, Leonidas J. Guibas. Also, Erik Wijmans (reimplementation). [&lt;a href="https://arxiv.org/abs/1706.02413" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/erikwijmans/Pointnet2_PyTorch"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Learning a Probabilistic Latent Space of Object Shapes via 3D Generative-Adversarial Modeling': Jiajun Wu, Chengkai Zhang, Tianfan Xue, William T. Freeman, Joshua B. Tenenbaum. [&lt;a href="http://arxiv.org/abs/1610.07584" rel="nofollow"&gt;Paper&lt;/a&gt;] [&lt;a href="https://github.com/zck119/3dgan-release"&gt;Code&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NVIDIAGameWorks</author><guid isPermaLink="false">https://github.com/NVIDIAGameWorks/kaolin</guid><pubDate>Thu, 26 Dec 2019 00:13:00 GMT</pubDate></item><item><title>carla-simulator/carla #14 in C++, This month</title><link>https://github.com/carla-simulator/carla</link><description>&lt;p&gt;&lt;i&gt;Open-source simulator for autonomous driving research.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-carla-simulator" class="anchor" aria-hidden="true" href="#carla-simulator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CARLA Simulator&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/carla-simulator/carla" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/39af5139fdf06a09ad2730e7ef58f33f1c4352e6/68747470733a2f2f7472617669732d63692e6f72672f6361726c612d73696d756c61746f722f6361726c612e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/carla-simulator/carla.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://carla.readthedocs.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0f44b70018afb5af1e7d2a0e369ef1d4117b6e90/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6361726c612f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation" data-canonical-src="https://readthedocs.org/projects/carla/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://carla.org" rel="nofollow"&gt;&lt;img src="Docs/img/btn/web.png" alt="carla.org" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/carla-simulator/carla/blob/master/Docs/download.md"&gt;&lt;img src="Docs/img/btn/download.png" alt="download" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://carla.readthedocs.io" rel="nofollow"&gt;&lt;img src="Docs/img/btn/docs.png" alt="documentation" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://forum.carla.org" rel="nofollow"&gt;&lt;img src="Docs/img/btn/forum.png" alt="forum" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/8kqACuC" rel="nofollow"&gt;&lt;img src="Docs/img/btn/chat.png" alt="discord" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CARLA is an open-source simulator for autonomous driving research. CARLA has
been developed from the ground up to support development, training, and
validation of autonomous driving systems. In addition to open-source code
and protocols, CARLA provides open digital assets (urban layouts, buildings,
vehicles) that were created for this purpose and can be used freely. The
simulation platform supports flexible specification of sensor suites and
environmental conditions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=TOojcifcRBA" rel="nofollow"&gt;&lt;img src="Docs/img/video_thumbnail.png" alt="CARLA Video" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to benchmark your model in the same conditions as in our CoRL’17
paper, check out
&lt;a href="https://github.com/carla-simulator/driving-benchmarks"&gt;Benchmarking&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://carla-assets-internal.s3.amazonaws.com/Releases/Linux/Dev/CARLA_Latest.tar.gz" rel="nofollow"&gt;&lt;strong&gt;Get CARLA overnight build&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-carla-ecosystem" class="anchor" aria-hidden="true" href="#carla-ecosystem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CARLA Ecosystem&lt;/h2&gt;
&lt;p&gt;Repositories associated to the CARLA simulation platform:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/carla-simulator/scenario_runner"&gt;&lt;strong&gt;Scenario_Runner&lt;/strong&gt;&lt;/a&gt;: Engine to execute traffic scenarios in CARLA 0.9.X&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carla-simulator/ros-bridge"&gt;&lt;strong&gt;ROS-bridge&lt;/strong&gt;&lt;/a&gt;: Interface to connect CARLA 0.9.X to ROS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carla-simulator/driving-benchmarks"&gt;&lt;strong&gt;Driving-benchmarks&lt;/strong&gt;&lt;/a&gt;: Benchmark tools for Autonomous Driving tasks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/felipecode/coiltraine"&gt;&lt;strong&gt;Conditional Imitation-Learning&lt;/strong&gt;&lt;/a&gt;: Training and testing Conditional Imitation Learning models in CARLA&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carla-simulator/carla-autoware"&gt;&lt;strong&gt;AutoWare AV stack&lt;/strong&gt;&lt;/a&gt;: Bridge to connect AutoWare AV stack to CARLA&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carla-simulator/reinforcement-learning"&gt;&lt;strong&gt;Reinforcement-Learning&lt;/strong&gt;&lt;/a&gt;: Code for running Conditional Reinforcement Learning models in CARLA&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carla-simulator/carla-map-editor"&gt;&lt;strong&gt;Map Editor&lt;/strong&gt;&lt;/a&gt;: Standalone GUI application to enhance RoadRunner maps with traffic lights and traffic signs information&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Like what you see? Star us on GitHub to support the project!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-paper" class="anchor" aria-hidden="true" href="#paper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Paper&lt;/h2&gt;
&lt;p&gt;If you use CARLA, please cite our CoRL’17 paper.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CARLA: An Open Urban Driving Simulator&lt;/em&gt;&lt;br&gt;Alexey Dosovitskiy, German Ros,
Felipe Codevilla, Antonio Lopez, Vladlen Koltun; PMLR 78:1-16
[&lt;a href="http://proceedings.mlr.press/v78/dosovitskiy17a/dosovitskiy17a.pdf" rel="nofollow"&gt;PDF&lt;/a&gt;]
[&lt;a href="https://www.youtube.com/watch?v=xfyK03MEZ9Q&amp;amp;feature=youtu.be&amp;amp;t=2h44m30s" rel="nofollow"&gt;talk&lt;/a&gt;]&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@inproceedings{Dosovitskiy17,
  title = {{CARLA}: {An} Open Urban Driving Simulator},
  author = {Alexey Dosovitskiy and German Ros and Felipe Codevilla and Antonio Lopez and Vladlen Koltun},
  booktitle = {Proceedings of the 1st Annual Conference on Robot Learning},
  pages = {1--16},
  year = {2017}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-building-carla" class="anchor" aria-hidden="true" href="#building-carla"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building CARLA&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;git clone&lt;/code&gt; or download the project from this page. Note that the master
branch contains the latest fixes and features, for the latest stable code may be
best to switch to the &lt;code&gt;stable&lt;/code&gt; branch.&lt;/p&gt;
&lt;p&gt;Then follow the instruction at &lt;a href="http://carla.readthedocs.io/en/latest/how_to_build_on_linux" rel="nofollow"&gt;How to build on Linux&lt;/a&gt; or
&lt;a href="http://carla.readthedocs.io/en/latest/how_to_build_on_windows" rel="nofollow"&gt;How to build on Windows&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately we don't have official instructions to build on Mac yet, please
check the progress at &lt;a href="https://github.com/carla-simulator/carla/issues/150"&gt;issue #150&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please take a look at our &lt;a href="http://carla.readthedocs.io/en/latest/CONTRIBUTING" rel="nofollow"&gt;Contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;F.A.Q.&lt;/h2&gt;
&lt;p&gt;If you run into problems, check our
&lt;a href="http://carla.readthedocs.io/en/latest/faq/" rel="nofollow"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;CARLA specific code is distributed under MIT License.&lt;/p&gt;
&lt;p&gt;CARLA specific assets are distributed under CC-BY License.&lt;/p&gt;
&lt;p&gt;The ad-rss-lib library compiled and linked by the &lt;a href="Docs/rss_lib_integration.md"&gt;RSS Integration build variant&lt;/a&gt; introduces LGPL-2.1-only License.&lt;/p&gt;
&lt;p&gt;Note that UE4 itself follows its own license terms.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>carla-simulator</author><guid isPermaLink="false">https://github.com/carla-simulator/carla</guid><pubDate>Thu, 26 Dec 2019 00:14:00 GMT</pubDate></item><item><title>flutter/engine #15 in C++, This month</title><link>https://github.com/flutter/engine</link><description>&lt;p&gt;&lt;i&gt;The Flutter engine&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-flutter-engine" class="anchor" aria-hidden="true" href="#flutter-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flutter Engine&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cirrus-ci.com/github/flutter/engine" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ec7da1f62e8e38002cee9b499809859ebaf33f1/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f666c75747465722f656e67696e652e7376673f6272616e63683d6d6173746572" alt="Build Status - Cirrus" data-canonical-src="https://api.cirrus-ci.com/github/flutter/engine.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Flutter is Google's mobile app SDK for crafting high-quality native interfaces
in record time. Flutter works with existing code, is used by developers and
organizations around the world, and is free and open source.&lt;/p&gt;
&lt;p&gt;The Flutter Engine is a portable runtime for hosting
&lt;a href="https://flutter.dev" rel="nofollow"&gt;Flutter&lt;/a&gt; applications.  It implements Flutter's core
libraries, including animation and graphics, file and network I/O,
accessibility support, plugin architecture, and a Dart runtime and compile
toolchain. Most developers will interact with Flutter via the &lt;a href="https://github.com/flutter/flutter"&gt;Flutter
Framework&lt;/a&gt;, which provides a modern,
reactive framework, and a rich set of platform, layout and foundation widgets.&lt;/p&gt;
&lt;p&gt;If you are new to Flutter, then you will find more general information
on the Flutter project, including tutorials and samples, on our Web
site at &lt;a href="https://flutter.dev" rel="nofollow"&gt;Flutter.dev&lt;/a&gt;. For specific information
about Flutter's APIs, consider our API reference which can be found at
the &lt;a href="https://docs.flutter.dev/" rel="nofollow"&gt;docs.flutter.dev&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Flutter is a fully open source project, and we welcome contributions.
Information on how to get started can be found at our
&lt;a href="CONTRIBUTING.md"&gt;contributor guide&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>flutter</author><guid isPermaLink="false">https://github.com/flutter/engine</guid><pubDate>Thu, 26 Dec 2019 00:15:00 GMT</pubDate></item><item><title>commaai/openpilot #16 in C++, This month</title><link>https://github.com/commaai/openpilot</link><description>&lt;p&gt;&lt;i&gt;open source driving agent&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="#"&gt;&lt;img src="https://camo.githubusercontent.com/1b436879cec3f221bdb1e838b506cad7434c5bad/68747470733a2f2f692e696d6775722e636f6d2f556574494679482e6a7067" alt="" data-canonical-src="https://i.imgur.com/UetIFyH.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-openpilot"&gt;What is openpilot?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#integration-with-stock-features"&gt;Integration with Stock Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#supported-hardware"&gt;Supported Hardware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#supported-cars"&gt;Supported Cars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#community-maintained-cars-and-features"&gt;Community Maintained Cars and Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-instructions"&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-of-openpilot-alc-and-ldw"&gt;Limitations of openpilot ALC and LDW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-of-openpilot-acc-and-fcw"&gt;Limitations of openpilot ACC and FCW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-of-openpilot-dm"&gt;Limitations of openpilot DM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#user-data-and-comma-account"&gt;User Data and comma Account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#safety-and-testing"&gt;Safety and Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing-on-pc"&gt;Testing on PC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#community-and-contributing"&gt;Community and Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#directory-structure"&gt;Directory Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#licensing"&gt;Licensing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-openpilot" class="anchor" aria-hidden="true" href="#what-is-openpilot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is openpilot?&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://github.com/commaai/openpilot"&gt;openpilot&lt;/a&gt; is an open source driver assistance system. Currently, openpilot performs the functions of Adaptive Cruise Control (ACC), Automated Lane Centering (ALC), Forward Collision Warning (FCW) and Lane Departure Warning (LDW) for a growing variety of supported &lt;a href="#supported-cars"&gt;car makes, models and model years&lt;/a&gt;. In addition, while openpilot is engaged, a camera based Driver Monitoring (DM) feature alerts distracted and asleep drivers.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=mgAbfr42oI8" title="YouTube" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/361caac74d26e25fcbaa0fe269c740b62fb1d478/68747470733a2f2f692e696d6775722e636f6d2f6b4174543645692e706e67" data-canonical-src="https://i.imgur.com/kAtT6Ei.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=394rJKeh76k" title="YouTube" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/247bdab178792afa9dee41f49cade65bcd988ae9/68747470733a2f2f692e696d6775722e636f6d2f6c5474386353322e706e67" data-canonical-src="https://i.imgur.com/lTt8cS2.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=1iNOc3cq8cs" title="YouTube" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/20c854357def20c0bfa1811dbc8b89ee3a4db4bc/68747470733a2f2f692e696d6775722e636f6d2f414e6e755370652e706e67" data-canonical-src="https://i.imgur.com/ANnuSpe.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=Vr6NgrB-zHw" title="YouTube" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e4c193b6261c5703c81f9c9da68413f967d57bf7/68747470733a2f2f692e696d6775722e636f6d2f517970616e75712e706e67" data-canonical-src="https://i.imgur.com/Qypanuq.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=Ug41KIKF0oo" title="YouTube" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e92d00445815efa69bbfc688629598e3b41e301a/68747470733a2f2f692e696d6775722e636f6d2f3363615a37784d2e706e67" data-canonical-src="https://i.imgur.com/3caZ7xM.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=NVR_CdG1FRg" title="YouTube" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f19f0e68e031d562f3aa212d6a00817d73f8dd4c/68747470733a2f2f692e696d6775722e636f6d2f62415a4f77716c2e706e67" data-canonical-src="https://i.imgur.com/bAZOwql.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=tkEvIdzdfUE" title="YouTube" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d301588a8594e01b4b33af77a9a87d9ae192c66a/68747470733a2f2f692e696d6775722e636f6d2f4546494e457a472e706e67" data-canonical-src="https://i.imgur.com/EFINEzG.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=_P-N1ewNne4" title="YouTube" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c960c2e48511730a6c928ea3ba4fdebb85b76f0c/68747470733a2f2f692e696d6775722e636f6d2f674179417132322e706e67" data-canonical-src="https://i.imgur.com/gAyAq22.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-integration-with-stock-features" class="anchor" aria-hidden="true" href="#integration-with-stock-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration with Stock Features&lt;/h2&gt;
&lt;p&gt;In all supported cars:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stock Lane Keep Assist (LKA) and stock ALC are replaced by openpilot ALC, which only functions when openpilot is engaged by the user.&lt;/li&gt;
&lt;li&gt;Stock LDW is replaced by openpilot LDW.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, on specific supported cars (see ACC column in &lt;a href="#supported-cars"&gt;supported cars&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stock ACC is replaced by openpilot ACC.&lt;/li&gt;
&lt;li&gt;openpilot FCW operates in addition to stock FCW.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;openpilot should preserve all other vehicle's stock features, including, but are not limited to: FCW, Automatic Emergency Braking (AEB), auto high-beam, blind spot warning, and side collision warning.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-hardware" class="anchor" aria-hidden="true" href="#supported-hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Hardware&lt;/h2&gt;
&lt;p&gt;At the moment, openpilot supports the &lt;a href="https://comma.ai/shop/products/eon-dashcam-devkit" rel="nofollow"&gt;EON DevKit&lt;/a&gt;. A &lt;a href="https://comma.ai/shop/products/car-harness" rel="nofollow"&gt;car harness&lt;/a&gt; is recommended to connect the EON to the car. In the future, we'd like to support other platforms as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-cars" class="anchor" aria-hidden="true" href="#supported-cars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Cars&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Make&lt;/th&gt;
&lt;th&gt;Model (US Market Reference)&lt;/th&gt;
&lt;th&gt;Supported Package&lt;/th&gt;
&lt;th&gt;ACC&lt;/th&gt;
&lt;th&gt;No ACC accel below&lt;/th&gt;
&lt;th&gt;No ALC below&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Acura&lt;/td&gt;
&lt;td&gt;ILX 2016-18&lt;/td&gt;
&lt;td&gt;AcuraWatch Plus&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;25mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;25mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Acura&lt;/td&gt;
&lt;td&gt;RDX 2016-18&lt;/td&gt;
&lt;td&gt;AcuraWatch Plus&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;25mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chrysler&lt;/td&gt;
&lt;td&gt;Pacifica 2017-18&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;9mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chrysler&lt;/td&gt;
&lt;td&gt;Pacifica Hybrid 2017-18&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;9mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chrysler&lt;/td&gt;
&lt;td&gt;Pacifica Hybrid 2019&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;39mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Accord 2018-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;3mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Accord Hybrid 2018-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;3mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Civic Sedan/Coupe 2016-18&lt;/td&gt;
&lt;td&gt;Honda Sensing&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Civic Sedan/Coupe 2019&lt;/td&gt;
&lt;td&gt;Honda Sensing&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;2mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Civic Hatchback 2017-19&lt;/td&gt;
&lt;td&gt;Honda Sensing&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;CR-V 2015-16&lt;/td&gt;
&lt;td&gt;Touring&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;25mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;CR-V 2017-19&lt;/td&gt;
&lt;td&gt;Honda Sensing&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;CR-V Hybrid 2017-2019&lt;/td&gt;
&lt;td&gt;Honda Sensing&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Fit 2018-19&lt;/td&gt;
&lt;td&gt;Honda Sensing&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;25mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Odyssey 2018-20&lt;/td&gt;
&lt;td&gt;Honda Sensing&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;25mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Passport 2019&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;25mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Pilot 2016-18&lt;/td&gt;
&lt;td&gt;Honda Sensing&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;25mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Pilot 2019&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;25mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Honda&lt;/td&gt;
&lt;td&gt;Ridgeline 2017-19&lt;/td&gt;
&lt;td&gt;Honda Sensing&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;25mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;12mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hyundai&lt;/td&gt;
&lt;td&gt;Santa Fe 2019&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hyundai&lt;/td&gt;
&lt;td&gt;Elantra 2017-19&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;SCC + LKAS&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;19mph&lt;/td&gt;
&lt;td&gt;34mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hyundai&lt;/td&gt;
&lt;td&gt;Genesis 2018&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;19mph&lt;/td&gt;
&lt;td&gt;34mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jeep&lt;/td&gt;
&lt;td&gt;Grand Cherokee 2016-18&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;9mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jeep&lt;/td&gt;
&lt;td&gt;Grand Cherokee 2019&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;39mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kia&lt;/td&gt;
&lt;td&gt;Optima 2019&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;SCC + LKAS&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kia&lt;/td&gt;
&lt;td&gt;Sorento 2018&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kia&lt;/td&gt;
&lt;td&gt;Stinger 2018&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;SCC + LKAS&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lexus&lt;/td&gt;
&lt;td&gt;CT Hybrid 2017-18&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lexus&lt;/td&gt;
&lt;td&gt;ES Hybrid 2019&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lexus&lt;/td&gt;
&lt;td&gt;RX Hybrid 2016-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lexus&lt;/td&gt;
&lt;td&gt;IS 2017-2019&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;22mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lexus&lt;/td&gt;
&lt;td&gt;IS Hybrid 2017&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Subaru&lt;/td&gt;
&lt;td&gt;Crosstrek 2018-19&lt;/td&gt;
&lt;td&gt;EyeSight&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Subaru&lt;/td&gt;
&lt;td&gt;Impreza 2019-20&lt;/td&gt;
&lt;td&gt;EyeSight&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Avalon 2016&lt;/td&gt;
&lt;td&gt;TSS-P&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;20mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Avalon 2017-18&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;20mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Camry 2018-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Camry Hybrid 2018-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;C-HR 2017-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;C-HR Hybrid 2017-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Corolla 2017-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;20mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Corolla 2020&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Corolla Hatchback 2019&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Corolla Hybrid 2020&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Highlander 2017-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Highlander Hybrid 2017-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Prius 2016&lt;/td&gt;
&lt;td&gt;TSS-P&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Prius 2017-19&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Prius Prime 2017-20&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Rav4 2016&lt;/td&gt;
&lt;td&gt;TSS-P&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;20mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Rav4 2017-18&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;20mph&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Rav4 2019&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Rav4 Hybrid 2016&lt;/td&gt;
&lt;td&gt;TSS-P&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Rav4 Hybrid 2017-18&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Toyota&lt;/td&gt;
&lt;td&gt;Sienna 2018&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;Stock&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Volkswagen&lt;/td&gt;
&lt;td&gt;Golf 2016-19&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Driver Assistance&lt;/td&gt;
&lt;td&gt;Stock&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;Requires a &lt;a href="https://comma.ai/shop/products/panda-obd-ii-dongle" rel="nofollow"&gt;panda&lt;/a&gt; and open sourced &lt;a href="https://github.com/commaai/neo/tree/master/giraffe/hyundai"&gt;Hyundai giraffe&lt;/a&gt;, designed for the 2019 Sante Fe; pinout may differ for other Hyundai and Kia models. &lt;br&gt;
&lt;sup&gt;2&lt;/sup&gt;28mph for Camry 4CYL L, 4CYL LE and 4CYL SE which don't have Full-Speed Range Dynamic Radar Cruise Control. &lt;br&gt;
&lt;sup&gt;3&lt;/sup&gt;Requires a &lt;a href="https://community.comma.ai/wiki/index.php/Volkswagen#Integration_at_R242_Camera" rel="nofollow"&gt;custom connector&lt;/a&gt; for the &lt;a href="https://comma.ai/shop/products/car-harness" rel="nofollow"&gt;car harness&lt;/a&gt; &lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-maintained-cars-and-features" class="anchor" aria-hidden="true" href="#community-maintained-cars-and-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Maintained Cars and Features&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Make&lt;/th&gt;
&lt;th&gt;Model (US Market Reference)&lt;/th&gt;
&lt;th&gt;Supported Package&lt;/th&gt;
&lt;th&gt;ACC&lt;/th&gt;
&lt;th&gt;No ACC accel below&lt;/th&gt;
&lt;th&gt;No ALC below&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Buick&lt;/td&gt;
&lt;td&gt;Regal 2018&lt;sup&gt;6&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;7mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chevrolet&lt;/td&gt;
&lt;td&gt;Malibu 2017&lt;sup&gt;6&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;7mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chevrolet&lt;/td&gt;
&lt;td&gt;Volt 2017-18&lt;sup&gt;6&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;7mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cadillac&lt;/td&gt;
&lt;td&gt;ATS 2018&lt;sup&gt;6&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;7mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GMC&lt;/td&gt;
&lt;td&gt;Acadia Denali 2018&lt;sup&gt;6&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;7mph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Holden&lt;/td&gt;
&lt;td&gt;Astra 2017&lt;sup&gt;6&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Adaptive Cruise&lt;/td&gt;
&lt;td&gt;openpilot&lt;/td&gt;
&lt;td&gt;0mph&lt;/td&gt;
&lt;td&gt;7mph&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;sup&gt;4&lt;/sup&gt;When disconnecting the Driver Support Unit (DSU), openpilot ACC will replace stock ACC. For DSU locations, see &lt;a href="https://community.comma.ai/wiki/index.php/Toyota" rel="nofollow"&gt;Toyota Wiki page&lt;/a&gt;. &lt;em&gt;&lt;strong&gt;NOTE: disconnecting the DSU disables Automatic Emergency Braking (AEB).&lt;/strong&gt;&lt;/em&gt; &lt;br&gt;
&lt;sup&gt;5&lt;/sup&gt;&lt;a href="https://community.comma.ai/wiki/index.php/Comma_Pedal" rel="nofollow"&gt;Comma Pedal&lt;/a&gt; is used to provide stop-and-go capability to some of the openpilot-supported cars that don't currently support stop-and-go. Here is how to &lt;a href="https://medium.com/@jfrux/comma-pedal-building-with-macrofab-6328bea791e8" rel="nofollow"&gt;build a Comma Pedal&lt;/a&gt;. &lt;em&gt;&lt;strong&gt;NOTE: The Comma Pedal is not officially supported by &lt;a href="https://comma.ai" rel="nofollow"&gt;comma&lt;/a&gt;.&lt;/strong&gt;&lt;/em&gt; &lt;br&gt;
&lt;sup&gt;6&lt;/sup&gt;Requires a &lt;a href="https://comma.ai/shop/products/panda-obd-ii-dongle" rel="nofollow"&gt;panda&lt;/a&gt; and &lt;a href="https://zoneos.com/volt/" rel="nofollow"&gt;community built giraffe&lt;/a&gt;. &lt;em&gt;&lt;strong&gt;NOTE: disconnecting the ASCM disables Automatic Emergency Braking (AEB).&lt;/strong&gt;&lt;/em&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;Community Maintained Cars and Features are not verified by comma to meet our &lt;a href="SAFETY.md"&gt;safety model&lt;/a&gt;. Be extra cautious using them. They are only available after enabling the toggle in &lt;code&gt;Settings-&amp;gt;Developer-&amp;gt;Enable Community Features&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Instructions&lt;/h2&gt;
&lt;p&gt;Install openpilot on a EON by entering &lt;code&gt;https://openpilot.comma.ai&lt;/code&gt; during the installer setup.&lt;/p&gt;
&lt;p&gt;Follow this &lt;a href="https://youtu.be/3nlkomHathI" rel="nofollow"&gt;video instructions&lt;/a&gt; to properly mount the EON on the windshield. Note: openpilot features an automatic pose calibration routine and openpilot performance should not be affected by small pitch and yaw misalignments caused by imprecise EON mounting.&lt;/p&gt;
&lt;p&gt;Before placing the device on your windshield, check the state and local laws and ordinances where you drive. Some state laws prohibit or restrict the placement of objects on the windshield of a motor vehicle.&lt;/p&gt;
&lt;p&gt;You will be able to engage openpilot after reviewing the onboarding screens and finishing the calibration procedure.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-limitations-of-openpilot-alc-and-ldw" class="anchor" aria-hidden="true" href="#limitations-of-openpilot-alc-and-ldw"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations of openpilot ALC and LDW&lt;/h2&gt;
&lt;p&gt;openpilot ALC and openpilot LDW do not automatically drive the vehicle or reduce the amount of attention that must be paid to operate your vehicle. The driver must always keep control of the steering wheel and be ready to correct the openpilot ALC action at all times.&lt;/p&gt;
&lt;p&gt;Many factors can impact the performance of openpilot ALC and openpilot LDW, causing them to be unable to function as intended. These include, but are not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Poor visibility (heavy rain, snow, fog, etc.) or weather conditions that may interfere with sensor operation.&lt;/li&gt;
&lt;li&gt;The road facing camera is obstructed, covered or damaged by mud, ice, snow, etc.&lt;/li&gt;
&lt;li&gt;Obstruction caused by applying excessive paint or adhesive products (such as wraps, stickers, rubber coating, etc.) onto the vehicle.&lt;/li&gt;
&lt;li&gt;The EON is mounted incorrectly.&lt;/li&gt;
&lt;li&gt;When in sharp curves, like on-off ramps, intersections etc...; openpilot is designed to be limited in the amount of steering torque it can produce.&lt;/li&gt;
&lt;li&gt;In the presence of restricted lanes or construction zones.&lt;/li&gt;
&lt;li&gt;When driving on highly banked roads or in presence of strong cross-wind.&lt;/li&gt;
&lt;li&gt;Extremely hot or cold temperatures.&lt;/li&gt;
&lt;li&gt;Bright light (due to oncoming headlights, direct sunlight, etc.).&lt;/li&gt;
&lt;li&gt;Driving on hills, narrow, or winding roads.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The list above does not represent an exhaustive list of situations that may interfere with proper operation of openpilot components. It is the driver's responsibility to be in control of the vehicle at all times.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-limitations-of-openpilot-acc-and-fcw" class="anchor" aria-hidden="true" href="#limitations-of-openpilot-acc-and-fcw"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations of openpilot ACC and FCW&lt;/h2&gt;
&lt;p&gt;openpilot ACC and openpilot FCW are not systems that allow careless or inattentive driving. It is still necessary for the driver to pay close attention to the vehicle’s surroundings and to be ready to re-take control of the gas and the brake at all times.&lt;/p&gt;
&lt;p&gt;Many factors can impact the performance of openpilot ACC and openpilot FCW, causing them to be unable to function as intended. These include, but are not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Poor visibility (heavy rain, snow, fog, etc.) or weather conditions that may interfere with sensor operation.&lt;/li&gt;
&lt;li&gt;The road facing camera or radar are obstructed, covered, or damaged by mud, ice, snow, etc.&lt;/li&gt;
&lt;li&gt;Obstruction caused by applying excessive paint or adhesive products (such as wraps, stickers, rubber coating, etc.) onto the vehicle.&lt;/li&gt;
&lt;li&gt;The EON is mounted incorrectly.&lt;/li&gt;
&lt;li&gt;Approaching a toll booth, a bridge or a large metal plate.&lt;/li&gt;
&lt;li&gt;When driving on roads with pedestrians, cyclists, etc...&lt;/li&gt;
&lt;li&gt;In presence of traffic signs or stop lights, which are not detected by openpilot at this time.&lt;/li&gt;
&lt;li&gt;When the posted speed limit is below the user selected set speed. openpilot does not detect speed limits at this time.&lt;/li&gt;
&lt;li&gt;In presence of vehicles in the same lane that are not moving.&lt;/li&gt;
&lt;li&gt;When abrupt braking maneuvers are required. openpilot is designed to be limited in the amount of deceleration and acceleration that it can produce.&lt;/li&gt;
&lt;li&gt;When surrounding vehicles perform close cut-ins from neighbor lanes.&lt;/li&gt;
&lt;li&gt;Driving on hills, narrow, or winding roads.&lt;/li&gt;
&lt;li&gt;Extremely hot or cold temperatures.&lt;/li&gt;
&lt;li&gt;Bright light (due to oncoming headlights, direct sunlight, etc.).&lt;/li&gt;
&lt;li&gt;Interference from other equipment that generates radar waves.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The list above does not represent an exhaustive list of situations that may interfere with proper operation of openpilot components. It is the driver's responsibility to be in control of the vehicle at all times.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-limitations-of-openpilot-dm" class="anchor" aria-hidden="true" href="#limitations-of-openpilot-dm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations of openpilot DM&lt;/h2&gt;
&lt;p&gt;openpilot DM should not be considered an exact measurements of the status of alertness of the driver.&lt;/p&gt;
&lt;p&gt;Many factors can impact the performance of openpilot DM, causing it to be unable to function as intended. These include, but are not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Low light conditions, such as driving at night or in dark tunnels.&lt;/li&gt;
&lt;li&gt;Bright light (due to oncoming headlights, direct sunlight, etc.).&lt;/li&gt;
&lt;li&gt;The driver face is partially or completely outside field of view of the driver facing camera.&lt;/li&gt;
&lt;li&gt;Right hand driving vehicles.&lt;/li&gt;
&lt;li&gt;The driver facing camera is obstructed, covered, or damaged.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The list above does not represent an exhaustive list of situations that may interfere with proper operation of openpilot components. A driver should not rely on openpilot DM to assess their level of attention.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-user-data-and-comma-account" class="anchor" aria-hidden="true" href="#user-data-and-comma-account"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Data and comma Account&lt;/h2&gt;
&lt;p&gt;By default, openpilot uploads the driving data to our servers. You can also access your data by pairing with the comma connect app (&lt;a href="https://apps.apple.com/us/app/comma-connect/id1456551889" rel="nofollow"&gt;iOS&lt;/a&gt;, &lt;a href="https://play.google.com/store/apps/details?id=ai.comma.connect&amp;amp;hl=en_US" rel="nofollow"&gt;Android&lt;/a&gt;). We use your data to train better models and improve openpilot for everyone.&lt;/p&gt;
&lt;p&gt;openpilot is open source software: the user is free to disable data collection if they wish to do so.&lt;/p&gt;
&lt;p&gt;openpilot logs the road facing camera, CAN, GPS, IMU, magnetometer, thermal sensors, crashes, and operating system logs.
The driver facing camera is only logged if you explicitly opt-in in settings. The microphone is not recorded.&lt;/p&gt;
&lt;p&gt;By using openpilot, you agree to &lt;a href="https://my.comma.ai/privacy" rel="nofollow"&gt;our Privacy Policy&lt;/a&gt;. You understand that use of this software or its related services will generate certain types of user data, which may be logged and stored at the sole discretion of comma. By accepting this agreement, you grant an irrevocable, perpetual, worldwide right to comma for the use of this data.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-safety-and-testing" class="anchor" aria-hidden="true" href="#safety-and-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Safety and Testing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;openpilot observes ISO26262 guidelines, see &lt;a href="SAFETY.md"&gt;SAFETY.md&lt;/a&gt; for more detail.&lt;/li&gt;
&lt;li&gt;openpilot has software in the loop &lt;a href="run_docker_tests.sh"&gt;tests&lt;/a&gt; that run on every commit.&lt;/li&gt;
&lt;li&gt;The safety model code lives in panda and is written in C, see &lt;a href="https://github.com/commaai/panda#code-rigor"&gt;code rigor&lt;/a&gt; for more details.&lt;/li&gt;
&lt;li&gt;panda has software in the loop &lt;a href="https://github.com/commaai/panda/tree/master/tests/safety"&gt;safety tests&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Internally, we have a hardware in the loop Jenkins test suite that builds and unit tests the various processes.&lt;/li&gt;
&lt;li&gt;panda has additional hardware in the loop &lt;a href="https://github.com/commaai/panda/blob/master/Jenkinsfile"&gt;tests&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;We run the latest openpilot in a testing closet containing 10 EONs continuously replaying routes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-testing-on-pc" class="anchor" aria-hidden="true" href="#testing-on-pc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing on PC&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href="https://github.com/commaai/openpilot-tools"&gt;openpilot-tools&lt;/a&gt;: lots of tools you can use to replay driving data, test and develop openpilot from your pc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-and-contributing" class="anchor" aria-hidden="true" href="#community-and-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community and Contributing&lt;/h2&gt;
&lt;p&gt;openpilot is developed by &lt;a href="https://comma.ai/" rel="nofollow"&gt;comma&lt;/a&gt; and by users like you. We welcome both pull requests and issues on &lt;a href="http://github.com/commaai/openpilot"&gt;GitHub&lt;/a&gt;. Bug fixes and new car ports are encouraged.&lt;/p&gt;
&lt;p&gt;You can add support for your car by following guides we have written for &lt;a href="https://medium.com/@comma_ai/how-to-write-a-car-port-for-openpilot-7ce0785eda84" rel="nofollow"&gt;Brand&lt;/a&gt; and &lt;a href="https://medium.com/@comma_ai/openpilot-port-guide-for-toyota-models-e5467f4b5fe6" rel="nofollow"&gt;Model&lt;/a&gt; ports. Generally, a car with adaptive cruise control and lane keep assist is a good candidate. &lt;a href="https://discord.comma.ai" rel="nofollow"&gt;Join our Discord&lt;/a&gt; to discuss car ports: most car makes have a dedicated channel.&lt;/p&gt;
&lt;p&gt;Want to get paid to work on openpilot? &lt;a href="https://comma.ai/jobs/" rel="nofollow"&gt;comma is hiring&lt;/a&gt;. We also have a &lt;a href="https://comma.ai/bounties.html" rel="nofollow"&gt;bounty program&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And &lt;a href="https://twitter.com/comma_ai" rel="nofollow"&gt;follow us on Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-directory-structure" class="anchor" aria-hidden="true" href="#directory-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Directory Structure&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;.
├── apk                 # The apk files used for the UI
├── cereal              # The messaging spec and libs used for all logs on EON
├── common              # Library like functionality we've developed here
├── installer/updater   # Manages auto-updates of openpilot
├── opendbc             # Files showing how to interpret data from cars
├── panda               # Code used to communicate on CAN
├── phonelibs           # Libraries used on EON
├── pyextra             # Libraries used on EON
└── selfdrive           # Code needed to drive the car
    ├── assets          # Fonts and images for UI
    ├── athena          # Allows communication with the app
    ├── boardd          # Daemon to talk to the board
    ├── camerad         # Driver to capture images from the camera sensors
    ├── car             # Car specific code to read states and control actuators
    ├── common          # Shared C/C++ code for the daemons
    ├── controls        # Perception, planning and controls
    ├── debug           # Tools to help you debug and do car ports
    ├── locationd       # Soon to be home of precise location
    ├── logcatd         # Android logcat as a service
    ├── loggerd         # Logger and uploader of car data
    ├── modeld          # Driving and monitoring model runners
    ├── proclogd        # Logs information from proc
    ├── sensord         # IMU / GPS interface code
    ├── tests           # Unit tests, system tests and a car simulator
    └── ui              # The UI
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To understand how the services interact, see &lt;code&gt;cereal/service_list.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h2&gt;
&lt;p&gt;openpilot is released under the MIT license. Some parts of the software are released under other licenses as specified.&lt;/p&gt;
&lt;p&gt;Any user of this software shall indemnify and hold harmless comma.ai, Inc. and its directors, officers, employees, agents, stockholders, affiliates, subcontractors and customers from and against all allegations, claims, actions, suits, demands, damages, liabilities, obligations, losses, settlements, judgments, costs and expenses (including without limitation attorneys’ fees and costs) which arise out of, relate to or result from any use of this software by user.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;THIS IS ALPHA QUALITY SOFTWARE FOR RESEARCH PURPOSES ONLY. THIS IS NOT A PRODUCT.
YOU ARE RESPONSIBLE FOR COMPLYING WITH LOCAL LAWS AND REGULATIONS.
NO WARRANTY EXPRESSED OR IMPLIED.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c93f9b3a1bbb98aee637825923b0d04c1de248e1/68747470733a2f2f64317162326e6235637a6e6174752e636c6f756466726f6e742e6e65742f73746172747570732f692f313036313135372d62633765396266336232343665636537333232653666666536353366366166382d6d656469756d5f6a70672e6a70673f6275737465723d31343538333633313330"&gt;&lt;img src="https://camo.githubusercontent.com/c93f9b3a1bbb98aee637825923b0d04c1de248e1/68747470733a2f2f64317162326e6235637a6e6174752e636c6f756466726f6e742e6e65742f73746172747570732f692f313036313135372d62633765396266336232343665636537333232653666666536353366366166382d6d656469756d5f6a70672e6a70673f6275737465723d31343538333633313330" width="75" data-canonical-src="https://d1qb2nb5cznatu.cloudfront.net/startups/i/1061157-bc7e9bf3b246ece7322e6ffe653f6af8-medium_jpg.jpg?buster=1458363130" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5cda36b7447fb30b53fefb059ccd3b28e46aa7c8/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6d61782f313630302f312a433837456a7847654d50726b547556525657566734772e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/5cda36b7447fb30b53fefb059ccd3b28e46aa7c8/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6d61782f313630302f312a433837456a7847654d50726b547556525657566734772e706e67" width="225" data-canonical-src="https://cdn-images-1.medium.com/max/1600/1*C87EjxGeMPrkTuVRVWVg4w.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>commaai</author><guid isPermaLink="false">https://github.com/commaai/openpilot</guid><pubDate>Thu, 26 Dec 2019 00:16:00 GMT</pubDate></item><item><title>tesseract-ocr/tesseract #17 in C++, This month</title><link>https://github.com/tesseract-ocr/tesseract</link><description>&lt;p&gt;&lt;i&gt;Tesseract Open Source OCR Engine (main repository)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-tesseract-ocr" class="anchor" aria-hidden="true" href="#tesseract-ocr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tesseract OCR&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/tesseract-ocr/tesseract" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f977e557da0c774be0b7806b1a2e4dc438ac7e6f/68747470733a2f2f7472617669732d63692e6f72672f7465737365726163742d6f63722f7465737365726163742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tesseract-ocr/tesseract.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/zdenop/tesseract/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6fe400330c665a8a034c2910ae464ee9ff80d97b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d69616830696b667366306a333831392f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://scan.coverity.com/projects/tesseract-ocr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/636fdecb66629791150ed4b120fc958bed413583/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f7465737365726163742d6f63722f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/tesseract-ocr/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/tesseract-ocr/tesseract/context:cpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e984e6d985dd0ee49cc30e4d74674a065804e75/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f672f7465737365726163742d6f63722f7465737365726163742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Code Quality: Cpp" data-canonical-src="https://img.shields.io/lgtm/grade/cpp/g/tesseract-ocr/tesseract.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/tesseract-ocr/tesseract/alerts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34d1fd3bea9f85c9b3e9c977881b500e8ed8b315/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f7465737365726163742d6f63722f7465737365726163742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Total Alerts" data-canonical-src="https://img.shields.io/lgtm/alerts/g/tesseract-ocr/tesseract.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/tesseract-ocr/tesseract/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a4d3bc039085cffdfecbe3077ffe49c5fe23286/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d2d322e302d626c75652e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-Apache--2.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/tesseract-ocr/tesseract/releases/"&gt;&lt;img src="https://camo.githubusercontent.com/75f3daa1bec0562b7a0df017704694b0424dc2e2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f776e6c6f61642d616c6c25323072656c65617365732d627269676874677265656e2e737667" alt="Downloads" data-canonical-src="https://img.shields.io/badge/download-all%20releases-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;This package contains an &lt;strong&gt;OCR engine&lt;/strong&gt; - &lt;code&gt;libtesseract&lt;/code&gt; and a &lt;strong&gt;command line program&lt;/strong&gt; - &lt;code&gt;tesseract&lt;/code&gt;.
Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused
on line recognition, but also still supports the legacy Tesseract OCR engine of
Tesseract 3 which works by recognizing character patterns. Compatibility with
Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).
It also needs traineddata files which support the legacy engine, for example
those from the tessdata repository.&lt;/p&gt;
&lt;p&gt;The lead developer is Ray Smith. The maintainer is Zdenko Podobny.
For a list of contributors see &lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/AUTHORS"&gt;AUTHORS&lt;/a&gt;
and GitHub's log of &lt;a href="https://github.com/tesseract-ocr/tesseract/graphs/contributors"&gt;contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tesseract has &lt;strong&gt;unicode (UTF-8) support&lt;/strong&gt;, and can &lt;strong&gt;recognize more than 100 languages&lt;/strong&gt; "out of the box".&lt;/p&gt;
&lt;p&gt;Tesseract supports &lt;strong&gt;various output formats&lt;/strong&gt;: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV. The master branch also has experimental support for ALTO (XML) output.&lt;/p&gt;
&lt;p&gt;You should note that in many cases, in order to get better OCR results, you'll need to &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/ImproveQuality"&gt;improve the quality&lt;/a&gt; of the image&lt;/strong&gt; you are giving Tesseract.&lt;/p&gt;
&lt;p&gt;This project &lt;strong&gt;does not include a GUI application&lt;/strong&gt;. If you need one, please see the &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/User-Projects-%E2%80%93-3rdParty"&gt;3rdParty&lt;/a&gt; wiki page.&lt;/p&gt;
&lt;p&gt;Tesseract &lt;strong&gt;can be trained to recognize other languages&lt;/strong&gt;. See &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/TrainingTesseract"&gt;Tesseract Training&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-brief-history" class="anchor" aria-hidden="true" href="#brief-history"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Brief history&lt;/h2&gt;
&lt;p&gt;Tesseract was originally developed at Hewlett-Packard Laboratories Bristol and
at Hewlett-Packard Co, Greeley Colorado between 1985 and 1994, with some
more changes made in 1996 to port to Windows, and some C++izing in 1998.
In 2005 Tesseract was open sourced by HP. Since 2006 it is developed by Google.&lt;/p&gt;
&lt;p&gt;The latest (LSTM based) stable version is &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/releases/tag/4.1.0"&gt;4.1.0&lt;/a&gt;&lt;/strong&gt;, released on July 7, 2019. Latest source code is available from &lt;a href="https://github.com/tesseract-ocr/tesseract/tree/master"&gt;master branch on GitHub&lt;/a&gt;. Open issues can be found in &lt;a href="https://github.com/tesseract-ocr/tesseract/issues"&gt;issue tracker&lt;/a&gt;, and &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/Planning"&gt;Planning wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The latest 3.5 version is &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/releases/tag/3.05.02"&gt;3.05.02&lt;/a&gt;&lt;/strong&gt;, released on June 19, 2018. Latest source code for 3.05 is available from &lt;a href="https://github.com/tesseract-ocr/tesseract/tree/3.05"&gt;3.05 branch on GitHub&lt;/a&gt;. There is no development for this version, but it can be used for special cases (e.g. see &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/Planning#regression-of-features-from-30x"&gt;Regression of features from 3.0x&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;See &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/ReleaseNotes"&gt;Release Notes&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/ChangeLog"&gt;Change Log&lt;/a&gt;&lt;/strong&gt; for more details of the releases.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-tesseract" class="anchor" aria-hidden="true" href="#installing-tesseract"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Tesseract&lt;/h2&gt;
&lt;p&gt;You can either &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki"&gt;Install Tesseract via pre-built binary package&lt;/a&gt; or &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/Compiling"&gt;build it from source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Supported Compilers are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.8 and above&lt;/li&gt;
&lt;li&gt;Clang 3.4 and above&lt;/li&gt;
&lt;li&gt;MSVC 2015, 2017, 2019&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other compilers might work, but are not officially supported.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-tesseract" class="anchor" aria-hidden="true" href="#running-tesseract"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Tesseract&lt;/h2&gt;
&lt;p&gt;Basic &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/Command-Line-Usage"&gt;command line usage&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tesseract imagename outputbase [-l lang] [--oem ocrenginemode] [--psm pagesegmode] [configfiles...]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more information about the various command line options use &lt;code&gt;tesseract --help&lt;/code&gt; or &lt;code&gt;man tesseract&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Examples can be found in the &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/Command-Line-Usage#simplest-invocation-to-ocr-an-image"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-for-developers" class="anchor" aria-hidden="true" href="#for-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For developers&lt;/h2&gt;
&lt;p&gt;Developers can use &lt;code&gt;libtesseract&lt;/code&gt; &lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/include/tesseract/capi.h"&gt;C&lt;/a&gt; or
&lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/include/tesseract/baseapi.h"&gt;C++&lt;/a&gt; API to build their own application.
If you need bindings to &lt;code&gt;libtesseract&lt;/code&gt; for other programming languages, please see the
&lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/AddOns#tesseract-wrappers"&gt;wrapper&lt;/a&gt; section on AddOns wiki page.&lt;/p&gt;
&lt;p&gt;Documentation of Tesseract generated from source code by doxygen can be found on &lt;a href="https://tesseract-ocr.github.io/" rel="nofollow"&gt;tesseract-ocr.github.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;Before you submit an issue, please review &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/CONTRIBUTING.md"&gt;the guidelines for this repository&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For support, first read the &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki"&gt;Wiki&lt;/a&gt;, particularly the &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/FAQ"&gt;FAQ&lt;/a&gt; to see if your problem is addressed there. If not, search the &lt;a href="https://groups.google.com/d/forum/tesseract-ocr" rel="nofollow"&gt;Tesseract user forum&lt;/a&gt;, the &lt;a href="https://groups.google.com/d/forum/tesseract-dev" rel="nofollow"&gt;Tesseract developer forum&lt;/a&gt; and &lt;a href="https://github.com/tesseract-ocr/tesseract/issues"&gt;past issues&lt;/a&gt;, and if you still can't find what you need, ask for support in the mailing-lists.&lt;/p&gt;
&lt;p&gt;Mailing-lists:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/d/forum/tesseract-ocr" rel="nofollow"&gt;tesseract-ocr&lt;/a&gt; - For tesseract users.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/d/forum/tesseract-dev" rel="nofollow"&gt;tesseract-dev&lt;/a&gt; - For tesseract developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please report an issue only for a &lt;strong&gt;bug&lt;/strong&gt;, not for asking questions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;The code in this repository is licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This software depends on other packages that may be licensed under different open source licenses.&lt;/p&gt;
&lt;p&gt;Tesseract uses &lt;a href="http://leptonica.com/" rel="nofollow"&gt;Leptonica library&lt;/a&gt; which essentially
uses a &lt;a href="http://leptonica.com/about-the-license.html" rel="nofollow"&gt;BSD 2-clause license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;Tesseract uses &lt;a href="https://github.com/DanBloomberg/leptonica"&gt;Leptonica library&lt;/a&gt;
for opening input images (e.g. not documents like pdf).
It is suggested to use leptonica with built-in support for &lt;a href="https://zlib.net" rel="nofollow"&gt;zlib&lt;/a&gt;,
&lt;a href="https://sourceforge.net/projects/libpng" rel="nofollow"&gt;png&lt;/a&gt; and
&lt;a href="http://www.simplesystems.org/libtiff" rel="nofollow"&gt;tiff&lt;/a&gt; (for w multipage tiff).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-latest-version-of-readme" class="anchor" aria-hidden="true" href="#latest-version-of-readme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest Version of README&lt;/h2&gt;
&lt;p&gt;For the latest online version of the README.md see:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/README.md"&gt;https://github.com/tesseract-ocr/tesseract/blob/master/README.md&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tesseract-ocr</author><guid isPermaLink="false">https://github.com/tesseract-ocr/tesseract</guid><pubDate>Thu, 26 Dec 2019 00:17:00 GMT</pubDate></item><item><title>ApolloAuto/apollo #18 in C++, This month</title><link>https://github.com/ApolloAuto/apollo</link><description>&lt;p&gt;&lt;i&gt;An open autonomous driving platform&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_logo.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_logo.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://180.76.142.62:8111/viewType.html?buildTypeId=ApolloPublic_Build&amp;amp;guest=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a9c672f3a44820e607009d685e21f6acb58aa7e/687474703a2f2f3138302e37362e3134322e36323a383131312f6170702f726573742f6275696c64732f6275696c64547970653a41706f6c6c6f5075626c69635f4275696c642f73746174757349636f6e" alt="Build Status" data-canonical-src="http://180.76.142.62:8111/app/rest/builds/buildType:ApolloPublic_Build/statusIcon" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://azure.apollo.auto/daily-build/public" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e4b3bc119035c1ebe7bbd43d39d9de77ef14b2c/68747470733a2f2f617a7572652e61706f6c6c6f2e6175746f2f6461696c796275696c647374617475732e737667" alt="Simulation Status" data-canonical-src="https://azure.apollo.auto/dailybuildstatus.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
We choose to go to the moon in this decade and do the other things,

not because they are easy, but because they are hard.

-- John F. Kennedy, 1962

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Welcome to Apollo's GitHub page!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://apollo.auto" rel="nofollow"&gt;Apollo&lt;/a&gt; is a high performance, flexible architecture which accelerates the development, testing, and deployment of Autonomous Vehicles.&lt;/p&gt;
&lt;p&gt;For business and partnership, please visit &lt;a href="http://apollo.auto" rel="nofollow"&gt;our website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#basic-requirements"&gt;Basic Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#individual-version-requirements"&gt;Individual Version Requirements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documents"&gt;Documents&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Apollo 5.0 is loaded with new modules and features but needs to be calibrated and configured perfectly before you take it for a spin. Please review the prerequisites and installation steps in detail to ensure that you are well equipped to build and launch Apollo. You could also check out Apollo's architecture overview for a greater understanding of Apollo's core technology and platform.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Attention]&lt;/strong&gt; The Apollo team is proud to announce that the platform has been migrated to Ubuntu 18.04, one of the most requested upgrades from our developers. We do not expect a disruption to your current work with the Apollo platform, but for perception related code, you would need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Upgrade host to ubuntu_16.04 and above (Ubuntu 18.04 is preferred)&lt;/li&gt;
&lt;li&gt;Update local host NVIDIA driver &amp;gt;=410.48. &lt;a href="https://www.nvidia.com/Download/index.aspx?lang=en-us" rel="nofollow"&gt;Website link&lt;/a&gt;. Or follow the &lt;a href="https://github.com/ApolloAuto/apollo-kernel/tree/master/linux/Install_nvidia_driver_on_ubuntu_18.04.md"&gt;guide&lt;/a&gt; to install Apollo-Kernel and NVIDIA driver, if you want to install Apollo-Kernel.&lt;/li&gt;
&lt;li&gt;Install latest Docker-CE (19.03+) by following the &lt;a href="https://docs.docker.com/install/linux/docker-ce/ubuntu" rel="nofollow"&gt;official doc&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install latest nvidia-container-toolkit by following the &lt;a href="https://github.com/NVIDIA/nvidia-docker"&gt;official doc&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For those developers that would like to continue working with Ubuntu 14.04, please use the &lt;a href="https://github.com/ApolloAuto/apollo/tree/ubuntu_14.04"&gt;Ubuntu 14.04 branch&lt;/a&gt; instead of the master branch.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Attention]&lt;/strong&gt; The Apollo team has decided to retire Git LFS, which might impact your development. For details, please refer to:
&lt;a href="docs/howto/how_to_migrate_to_the_updated_apollo_master_from_old_versions.md"&gt;migration guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="CONTRIBUTING.md"&gt;Want to contribute to our code?&lt;/a&gt; Follow this guide.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-basic-requirements" class="anchor" aria-hidden="true" href="#basic-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Requirements:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The vehicle equipped with the by-wire system, including but not limited to brake-by-wire, steering-by-wire, throttle-by-wire and shift-by-wire (Apollo is currently tested on Lincoln MKZ)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A machine with a 4-core processor and 8GB memory minimum (16GB for Apollo 3.5 and above)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu 14.04&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Working knowledge of Docker&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Please note, it is recommended that you install the versions of Apollo in the following order:
&lt;strong&gt;1.0 &amp;gt; whichever version you would like to test out&lt;/strong&gt;.
The reason behind this recommendation is that you need to confirm whether individual hardware components
and modules are functioning correctly and clear various version test cases,
before progressing to a higher, more capable version for your safety and the safety of those around you.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-individual-version-requirements" class="anchor" aria-hidden="true" href="#individual-version-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Individual Version Requirements:&lt;/h4&gt;
&lt;p&gt;The following diagram highlights the scope and features of each Apollo release:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_Roadmap.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_Roadmap.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_1_0_hardware_system_installation_guide.md"&gt;&lt;strong&gt;Apollo 1.0:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 1.0, also referred to as the Automatic GPS Waypoint Following, works in an enclosed venue such as a test track or parking lot. This installation is necessary to ensure that Apollo works perfectly with your vehicle. The diagram below lists the various modules in Apollo 1.0.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_1.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_1.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hardware&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Industrial PC (IPC)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Global Positioning System (GPS)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inertial Measurement Unit (IMU)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Controller Area Network (CAN) card&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hard drive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GPS Antenna&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GPS Receiver&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apollo Linux Kernel (based on Linux Kernel 4.4.32)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_1_5_hardware_system_installation_guide.md"&gt;&lt;strong&gt;Apollo 1.5:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 1.5 is meant for fixed lane cruising. With the addition of LiDAR, vehicles with this version now have better perception of its surroundings and can better map its current position and plan its trajectory for safer maneuvering on its lane. Please note, the modules highlighted in Yellow are additions or upgrades for version 1.5.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_1_5.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_1_5.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All the requirements mentioned in version 1.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hardware&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Light Detection and Ranging System (LiDAR)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ASUS GTX1080 GPU-A8G- Gaming GPU Card&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nvidia GPU Driver&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_2_0_hardware_system_installation_guide_v1.md#key-hardware-components"&gt;&lt;strong&gt;Apollo 2.0:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 2.0 supports vehicles autonomously driving on simple urban roads. Vehicles are able to cruise on roads safely, avoid collisions with obstacles, stop at traffic lights, and change lanes if needed to reach their destination.  Please note, the modules highlighted in Red are additions or upgrades for version 2.0.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_2.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_2.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All the requirements mentioned in versions 1.5 and 1.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hardware&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Traffic Light Detection using Camera&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ranging System (LiDAR)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Radar&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Same as 1.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_2_5_hardware_system_installation_guide_v1.md"&gt;&lt;strong&gt;Apollo 2.5:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 2.5 allows the vehicle to autonomously run on geo-fenced highways with a camera for obstacle detection. Vehicles are able to maintain lane control, cruise and avoid collisions with vehicles ahead of them.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Please note, if you need to test Apollo 2.5; for safety purposes, please seek the help of the
Apollo Engineering team. Your safety is our #1 priority,
and we want to ensure Apollo 2.5 was integrated correctly with your vehicle before you hit the road.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_2_5.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_2_5.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All the requirements mentioned in 2.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hardware:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Additional Camera&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Same as 2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_3_0_quick_start.md"&gt;&lt;strong&gt;Apollo 3.0:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 3.0's primary focus is to provide a platform for developers to build upon in a closed venue low-speed environment. Vehicles are able to maintain lane control, cruise and avoid collisions with vehicles ahead of them.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_3.0_diagram.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_3.0_diagram.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hardware:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ultrasonic sensors&lt;/li&gt;
&lt;li&gt;Apollo Sensor Unit&lt;/li&gt;
&lt;li&gt;Apollo Hardware Development Platform with additional sensor support and flexibility&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Guardian&lt;/li&gt;
&lt;li&gt;Monitor&lt;/li&gt;
&lt;li&gt;Additional drivers to support Hardware&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_3_5_quick_start.md"&gt;&lt;strong&gt;Apollo 3.5:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 3.5 is capable of navigating through complex driving scenarios such as residential and downtown areas. The car now has 360-degree visibility, along with upgraded perception algorithms to handle the changing conditions of urban roads, making the car more secure and aware. Scenario-based planning can navigate through complex scenarios, including unprotected turns and narrow streets often found in residential areas and roads with stop signs.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_3_5_Architecture.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_3_5_Architecture.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hardware:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Velodyne VLS - 128&lt;/li&gt;
&lt;li&gt;Apollo Extension Unit (AXU)&lt;/li&gt;
&lt;li&gt;ARGUS FPD-Link Cameras (3)&lt;/li&gt;
&lt;li&gt;NovAtel PwrPak7&lt;/li&gt;
&lt;li&gt;Additional IPC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Perception&lt;/li&gt;
&lt;li&gt;Planning&lt;/li&gt;
&lt;li&gt;V2X&lt;/li&gt;
&lt;li&gt;Additional drivers to support Hardware&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Runtime Framework&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cyber RT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_3_5_quick_start.md"&gt;&lt;strong&gt;Apollo 5.0:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 5.0 is an effort to support volume production for Geo-Fenced Autonomous Driving.
The car now has 360-degree visibility, along with upgraded perception deep learning model to handle the changing conditions of complex road scenarios, making the car more secure and aware. Scenario-based planning has been enhanced to support additional scenarios like pull over and crossing bare intersections.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_5_0_diagram1.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_5_0_diagram1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hardware:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Same as Apollo 3.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ApolloAuto/apollo/tree/master/modules/tools/fuel_proxy"&gt;Data Pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Perception&lt;/li&gt;
&lt;li&gt;Planning&lt;/li&gt;
&lt;li&gt;Control&lt;/li&gt;
&lt;li&gt;Prediction&lt;/li&gt;
&lt;li&gt;Map Engine&lt;/li&gt;
&lt;li&gt;Simulation&lt;/li&gt;
&lt;li&gt;&lt;a href="http://apollo.auto/synthetic.html" rel="nofollow"&gt;Apollo Synthetic Data Set&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hardware/ Vehicle Overview&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Hardware_overview_3_5.png"&gt;&lt;img src="docs/demo_guide/images/Hardware_overview_3_5.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hardware Connection Overview&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Hardware_connection_3_5_1.png"&gt;&lt;img src="docs/demo_guide/images/Hardware_connection_3_5_1.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Software Overview - Navigation Mode&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_3_5_software_architecture.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_3_5_software_architecture.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ApolloAuto/apollo"&gt;Fork and then Clone Apollo's GitHub code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/howto/how_to_build_and_release.md"&gt;Build and Release using Docker&lt;/a&gt; - This step is required&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/howto/how_to_launch_Apollo.md"&gt;Launch and Run Apollo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Congratulations! You have successfully built out Apollo without Hardware. If you do have a vehicle and hardware setup for a particular version, please pick the Quickstart guide most relevant to your setup:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-with-hardware" class="anchor" aria-hidden="true" href="#with-hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With Hardware:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_1_0_quick_start.md"&gt;Apollo 1.0 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_1_5_quick_start.md"&gt;Apollo 1.5 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_2_0_quick_start.md"&gt;Apollo 2.0 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_2_5_quick_start.md"&gt;Apollo 2.5 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_3_0_quick_start.md"&gt;Apollo 3.0 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_3_5_quick_start.md"&gt;Apollo 3.5 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_5_0_quick_start.md"&gt;Apollo 5.0 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documents" class="anchor" aria-hidden="true" href="#documents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/technical_tutorial/README.md"&gt;Technical Tutorial&lt;/a&gt;: Everything you need to know about Apollo. Written as individual versions with links to every document related to that version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/howto/README.md"&gt;How To Guide&lt;/a&gt;: Brief technical solutions to common problems that developers face during the installation and use of the Apollo platform&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/specs/README.md"&gt;Specs&lt;/a&gt;: A Deep dive into Apollo's Hardware and Software specifications (only recommended for expert level developers that have successfully installed and launched Apollo)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/FAQs/README.md"&gt;FAQs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-questions" class="anchor" aria-hidden="true" href="#questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions&lt;/h2&gt;
&lt;p&gt;You are welcome to submit questions and bug reports as &lt;a href="https://github.com/ApolloAuto/apollo/issues"&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;Apollo is provided under the &lt;a href="https://github.com/ApolloAuto/apollo/blob/master/LICENSE"&gt;Apache-2.0 license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;Please refer to the Disclaimer of Apollo in &lt;a href="http://apollo.auto/docs/disclaimer.html" rel="nofollow"&gt;Apollo's official website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-connect-with-us" class="anchor" aria-hidden="true" href="#connect-with-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connect with us&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ApolloAuto/apollo/issues"&gt;Have suggestions for our GitHub page?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/apolloplatform" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC8wR_NX_NShUTSSqIaEUY9Q" rel="nofollow"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.medium.com/apollo-auto" rel="nofollow"&gt;Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://eepurl.com/c-mLSz" rel="nofollow"&gt;Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Interested in our turnKey solutions or partnering with us Mail us at: &lt;a href="mailto:apollopartner@baidu.com"&gt;apollopartner@baidu.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ApolloAuto</author><guid isPermaLink="false">https://github.com/ApolloAuto/apollo</guid><pubDate>Thu, 26 Dec 2019 00:18:00 GMT</pubDate></item><item><title>qbittorrent/qBittorrent #19 in C++, This month</title><link>https://github.com/qbittorrent/qBittorrent</link><description>&lt;p&gt;&lt;i&gt;qBittorrent BitTorrent client&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-qbittorrent---a-bittorrent-client-in-qt" class="anchor" aria-hidden="true" href="#qbittorrent---a-bittorrent-client-in-qt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;qBittorrent - A BitTorrent client in Qt&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/qbittorrent/qBittorrent" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ad75aa5974b05ee2ee787f111f8bbca4800f2ed6/68747470733a2f2f7472617669732d63692e6f72672f71626974746f7272656e742f71426974746f7272656e742e7376673f6272616e63683d6d6173746572" alt="TravisCI Status" data-canonical-src="https://travis-ci.org/qbittorrent/qBittorrent.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/qbittorrent/qBittorrent" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e99cfe944a02ae5d1f4cc97866068c7242ed567f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f71626974746f7272656e742f71426974746f7272656e743f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/qbittorrent/qBittorrent?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/5494" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c5a80afea2c797c85d5d465a72664b164dc1e0be/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f353439342f62616467652e737667" alt="Coverity Status" data-canonical-src="https://scan.coverity.com/projects/5494/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description:&lt;/h3&gt;
&lt;p&gt;qBittorrent is a bittorrent client programmed in C++ / Qt that uses
libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg.&lt;/p&gt;
&lt;p&gt;It aims to be a good alternative to all other bittorrent clients
out there. qBittorrent is fast, stable and provides unicode
support as well as many features.&lt;/p&gt;
&lt;p&gt;This product includes GeoLite data created by MaxMind, available from
&lt;a href="https://www.maxmind.com/" rel="nofollow"&gt;https://www.maxmind.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation:&lt;/h3&gt;
&lt;p&gt;For installation, follow the instructions from INSTALL file, but simple:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure
make &amp;amp;&amp;amp; make install
qbittorrent
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will install and execute qBittorrent hopefully without any problem.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-public-key" class="anchor" aria-hidden="true" href="#public-key"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Public key:&lt;/h3&gt;
&lt;p&gt;Starting from v3.3.4 all source tarballs and binaries are signed.&lt;br&gt;
The key currently used is 4096R/&lt;a href="https://pgp.mit.edu/pks/lookup?op=get&amp;amp;search=0x6E4A2D025B7CC9A2" rel="nofollow"&gt;5B7CC9A2&lt;/a&gt; with fingerprint &lt;code&gt;D8F3DA77AAC6741053599C136E4A2D025B7CC9A2&lt;/code&gt;.&lt;br&gt;
You can also download it from &lt;a href="https://github.com/qbittorrent/qBittorrent/raw/master/5B7CC9A2.asc"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;strong&gt;PREVIOUSLY&lt;/strong&gt; the following key was used to sign the v3.3.4 source tarballs and v3.3.4 Windows installer &lt;strong&gt;only&lt;/strong&gt;: 4096R/&lt;a href="https://pgp.mit.edu/pks/lookup?op=get&amp;amp;search=0xA1ACCAE4520EC6F6" rel="nofollow"&gt;520EC6F6&lt;/a&gt; with fingerprint &lt;code&gt;F4A5FD201B117B1C2AB590E2A1ACCAE4520EC6F6&lt;/code&gt;.&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-misc" class="anchor" aria-hidden="true" href="#misc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Misc:&lt;/h3&gt;
&lt;p&gt;For more information please visit:
&lt;a href="https://www.qbittorrent.org" rel="nofollow"&gt;https://www.qbittorrent.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;or our wiki here:
&lt;a href="http://wiki.qbittorrent.org" rel="nofollow"&gt;http://wiki.qbittorrent.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use the forum for troubleshooting before reporting bugs:
&lt;a href="http://forum.qbittorrent.org" rel="nofollow"&gt;http://forum.qbittorrent.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please report any bug (or feature request) to:
&lt;a href="http://bugs.qbittorrent.org" rel="nofollow"&gt;http://bugs.qbittorrent.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also meet me (sledgehammer_999) on IRC:
&lt;code&gt;#qbittorrent on irc.freenode.net&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;sledgehammer999 &lt;a href="mailto:sledgehammer999@qbittorrent.org"&gt;sledgehammer999@qbittorrent.org&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>qbittorrent</author><guid isPermaLink="false">https://github.com/qbittorrent/qBittorrent</guid><pubDate>Thu, 26 Dec 2019 00:19:00 GMT</pubDate></item><item><title>microsoft/SEAL #20 in C++, This month</title><link>https://github.com/microsoft/SEAL</link><description>&lt;p&gt;&lt;i&gt;Microsoft SEAL is an easy-to-use and powerful homomorphic encryption library.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-microsoft-seal" class="anchor" aria-hidden="true" href="#microsoft-seal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft SEAL&lt;/h1&gt;
&lt;p&gt;Microsoft SEAL is an easy-to-use open-source (&lt;a href="LICENSE"&gt;MIT licensed&lt;/a&gt;) homomorphic
encryption library developed by the Cryptography and Privacy Research group at
Microsoft. Microsoft SEAL is written in modern standard C++ and has no external
dependencies, making it easy to compile and run in many different environments.
For more information about the Microsoft SEAL project, see
&lt;a href="https://www.microsoft.com/en-us/research/project/microsoft-seal" rel="nofollow"&gt;sealcrypto.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This document pertains to Microsoft SEAL version 3.4. Users of previous versions
of the library should look at the &lt;a href="Changes.md"&gt;list of changes&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#core-concepts"&gt;Core Concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#homomorphic-encryption"&gt;Homomorphic Encryption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#microsoft-seal-1"&gt;Microsoft SEAL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-microsoft-seal"&gt;Installing Microsoft SEAL&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linux-and-macos"&gt;Linux and macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#from-nuget-package"&gt;From NuGet package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#enabling-optional-dependencies"&gt;Enabling Optional Dependencies&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#microsoft-gsl"&gt;Microsoft GSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zlib"&gt;ZLIB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-microsoft-seal-for-net"&gt;Building Microsoft SEAL for .NET&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#windows-1"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linux-and-macos-1"&gt;Linux and macOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#citing-microsoft-seal"&gt;Citing Microsoft SEAL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-core-concepts" class="anchor" aria-hidden="true" href="#core-concepts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Concepts&lt;/h2&gt;
&lt;p&gt;Most encryption schemes consist of three functionalities: key generation, encryption,
and decryption. Symmetric-key encryption schemes use the same secret key for both
encryption and decryption; public-key encryption schemes use separately a public
key for encryption and a secret key for decryption. Therefore, public-key encryption
schemes allow anyone who knows the public key to encrypt data, but only those who
know the secret key can decrypt and read the data. Symmetric-key encryption can be
used for efficiently encrypting very large amounts of data, and enables secure
outsourced cloud storage. Public-key encryption is a fundamental concept that
enables secure online communication today, but is typically much less efficient
than symmetric-key encryption.&lt;/p&gt;
&lt;p&gt;While traditional symmetric- and public-key encryption can be used for secure storage
and communication, any outsourced computation will necessarily require such encryption
layers to be removed before computation can take place. Therefore, cloud services
providing outsourced computation capabilities must have access to the secret keys,
and implement access policies to prevent unauthorized employees from getting access
to these keys.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-homomorphic-encryption" class="anchor" aria-hidden="true" href="#homomorphic-encryption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homomorphic Encryption&lt;/h2&gt;
&lt;p&gt;Homomorphic encryption refers to encryption schemes that allow the cloud to compute
directly on the encrypted data, without requiring the data to be decrypted first.
The results of such encrypted computations remain encrypted, and can be only decrypted
with the secret key (by the data owner). Multiple homomorphic encryption schemes
with different capabilities and trade-offs have been invented over the past decade;
most of these are public-key encryption schemes, although the public-key functionality
may not always be needed.&lt;/p&gt;
&lt;p&gt;Homomorphic encryption is not a generic technology: only some computations on
encrypted data are possible. It also comes with a substantial performance overhead,
so computations that are already very costly to perform on unencrypted data are
likely to be infeasible on encrypted data. Moreover, data encrypted with homomorphic
encryption is many times larger than unencrypted data, so it may not make sense to
encrypt, e.g., entire large databases, with this technology. Instead, meaningful
use-cases are in scenarios where strict privacy requirements prohibit unencrypted
cloud computation altogether, but the computations themselves are fairly lightweight.&lt;/p&gt;
&lt;p&gt;Typically, homomorphic encryption schemes have a single secret key which is held
by the data owner. For scenarios where multiple different private data owners wish
to engage in collaborative computation, homomorphic encryption is probably not
a reasonable solution.&lt;/p&gt;
&lt;p&gt;Homomorphic encryption cannot be used to enable data scientist to circumvent GDPR.
For example, there is no way for a cloud service to use homomorphic encryption to
draw insights from encrypted customer data. Instead, results of encrypted computations
remain encrypted and can only be decrypted by the owner of the data, e.g., a cloud
service customer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-microsoft-seal-1" class="anchor" aria-hidden="true" href="#microsoft-seal-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft SEAL&lt;/h2&gt;
&lt;p&gt;Microsoft SEAL is a homomorphic encryption library that allows additions and
multiplications to be performed on encrypted integers or real numbers. Other
operations, such as encrypted comparison, sorting, or regular expressions, are
in most cases not feasible to evaluate on encrypted data using this technology.
Therefore, only specific privacy-critical cloud computation parts of programs
should be implemented with Microsoft SEAL.&lt;/p&gt;
&lt;p&gt;It is not always easy or straightfoward to translate an unencrypted computation
into a computation on encrypted data, for example, it is not possible to branch
on encrypted data. Microsoft SEAL itself has a steep learning curve and requires
the user to understand many homomorphic encryption specific concepts, even though
in the end the API is not too complicated. Even if a user is able to program and
run a specific computation using Microsoft SEAL, the difference between efficient
and inefficient implementations can be several orders of magnitude, and it can be
hard for new users to know how to improve the performance of their computation.&lt;/p&gt;
&lt;p&gt;Microsoft SEAL comes with two different homomorphic encryption schemes with very
different properties. The BFV scheme allows modular arithmetic to be performed on
encrypted integers. The CKKS scheme allows additions and multiplications on encrypted
real or complex numbers, but yields only approximate results. In applications such
as summing up encrypted real numbers, evaluating machine learning models on encrypted
data, or computing distances of encrypted locations CKKS is going to be by far the
best choice. For applications where exact values are necessary, the BFV scheme is
the only choice.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installing-microsoft-seal" class="anchor" aria-hidden="true" href="#installing-microsoft-seal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Microsoft SEAL&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h2&gt;
&lt;p&gt;Microsoft SEAL comes with a Microsoft Visual Studio 2019 solution file &lt;code&gt;SEAL.sln&lt;/code&gt;
that can be used to conveniently build the library, examples, and unit tests. Visual
Studio 2017 version 15.3 or newer is required to build Microsoft SEAL.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-platform" class="anchor" aria-hidden="true" href="#platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platform&lt;/h4&gt;
&lt;p&gt;The Visual Studio solution &lt;code&gt;SEAL.sln&lt;/code&gt; is configured to build Microsoft SEAL both
for &lt;code&gt;Win32&lt;/code&gt; and &lt;code&gt;x64&lt;/code&gt; platforms. Please choose the right platform before building
Microsoft SEAL. The &lt;code&gt;SEALNetNative&lt;/code&gt; project or the .NET wrapper library &lt;code&gt;SEALNet&lt;/code&gt;
can only be built for &lt;code&gt;x64&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-debug-and-release-builds" class="anchor" aria-hidden="true" href="#debug-and-release-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debug and Release builds&lt;/h4&gt;
&lt;p&gt;You can easily switch from Visual Studio build configuration menu whether Microsoft
SEAL should be built in &lt;code&gt;Debug&lt;/code&gt; mode (no optimizations) or in &lt;code&gt;Release&lt;/code&gt; mode. Please
note that &lt;code&gt;Debug&lt;/code&gt; mode should not be used except for debugging Microsoft SEAL itself,
as the performance will be orders of magnitude worse than in &lt;code&gt;Release&lt;/code&gt; mode.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-microsoft-seal" class="anchor" aria-hidden="true" href="#building-microsoft-seal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Microsoft SEAL&lt;/h4&gt;
&lt;p&gt;Build the SEAL project &lt;code&gt;native\src\SEAL.vcxproj&lt;/code&gt; from &lt;code&gt;SEAL.sln&lt;/code&gt;. This results in
the static library &lt;code&gt;seal.lib&lt;/code&gt; to be created in &lt;code&gt;native\lib\$(Platform)\$(Configuration)&lt;/code&gt;.
When linking with applications, you need to add &lt;code&gt;native\src\&lt;/code&gt; (full path) as an
include directory for Microsoft SEAL header files.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-examples" class="anchor" aria-hidden="true" href="#building-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Examples&lt;/h4&gt;
&lt;p&gt;Build the SEALExamples project &lt;code&gt;native\examples\SEALExamples.vcxproj&lt;/code&gt; from &lt;code&gt;SEAL.sln&lt;/code&gt;.
This results in an executable &lt;code&gt;sealexamples.exe&lt;/code&gt; to be created in
&lt;code&gt;native\bin\$(Platform)\$(Configuration)&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-unit-tests" class="anchor" aria-hidden="true" href="#building-unit-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Unit Tests&lt;/h4&gt;
&lt;p&gt;The unit tests require the Google Test framework to be installed. The appropriate
NuGet package is already listed in &lt;code&gt;native\tests\packages.config&lt;/code&gt;, so once you
attempt to build the SEALTest project &lt;code&gt;native\tests\SEALTest.vcxproj&lt;/code&gt; from &lt;code&gt;SEAL.sln&lt;/code&gt;
Visual Studio will automatically download and install it for you.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-linux-and-macos" class="anchor" aria-hidden="true" href="#linux-and-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux and macOS&lt;/h2&gt;
&lt;p&gt;Microsoft SEAL is very easy to configure and build in Linux and macOS using CMake
(&amp;gt;= 3.12). A modern version of GNU G++ (&amp;gt;= 6.0) or Clang++ (&amp;gt;= 5.0) is needed. In macOS
the Xcode toolchain (&amp;gt;= 9.3) will work.&lt;/p&gt;
&lt;p&gt;In macOS you will need CMake with command line tools. For this, you can either&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;install the cmake package with &lt;a href="https://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;, or&lt;/li&gt;
&lt;li&gt;download CMake directly from &lt;a href="https://cmake.org/download" rel="nofollow"&gt;cmake.org/download&lt;/a&gt; and
&lt;a href="https://stackoverflow.com/questions/30668601/installing-cmake-command-line-tools-on-a-mac" rel="nofollow"&gt;enable command line tools&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Below we give instructions for how to configure, build, and install Microsoft SEAL either
system-wide (global install), or for a single user (local install). A system-wide
install requires elevated (root) privileges.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-debug-and-release-modes" class="anchor" aria-hidden="true" href="#debug-and-release-modes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debug and Release Modes&lt;/h4&gt;
&lt;p&gt;You can easily switch from CMake configuration options whether Microsoft SEAL should be
built in &lt;code&gt;Debug&lt;/code&gt; mode (no optimizations) or in &lt;code&gt;Release&lt;/code&gt; mode. Please note that &lt;code&gt;Debug&lt;/code&gt;
mode should not be used except for debugging Microsoft SEAL itself, as the performance
will be orders of magnitude worse than in &lt;code&gt;Release&lt;/code&gt; mode.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-microsoft-seal-1" class="anchor" aria-hidden="true" href="#building-microsoft-seal-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Microsoft SEAL&lt;/h4&gt;
&lt;p&gt;We assume that Microsoft SEAL has been cloned into a directory called &lt;code&gt;SEAL&lt;/code&gt; and all
commands presented below are assumed to be executed in the directory &lt;code&gt;SEAL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can build Microsoft SEAL for your machine by executing the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/src
cmake .
make
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-building-examples-1" class="anchor" aria-hidden="true" href="#building-examples-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Examples&lt;/h4&gt;
&lt;p&gt;After building Microsoft SEAL, you can build the examples as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/examples
cmake .
make
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;sealexamples&lt;/code&gt; executable can now be found in &lt;code&gt;native/bin/&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-unit-tests-1" class="anchor" aria-hidden="true" href="#building-unit-tests-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Unit Tests&lt;/h4&gt;
&lt;p&gt;To build the unit tests you will need the &lt;a href="https://github.com/google/googletest"&gt;GoogleTest&lt;/a&gt;
framework, which is included in Microsoft SEAL as a git submodule. To download the GoogleTest
source files, do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git submodule update --init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This needs to be executed only once, and can be skipped if Microsoft SEAL was cloned with
&lt;code&gt;git --recurse-submodules&lt;/code&gt;. To build the tests, do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/tests
cmake .
make
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;sealtest&lt;/code&gt; executable can now be found in &lt;code&gt;native/bin/&lt;/code&gt;. All unit tests should pass
successfully.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-microsoft-seal-1" class="anchor" aria-hidden="true" href="#installing-microsoft-seal-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Microsoft SEAL&lt;/h3&gt;
&lt;p&gt;If you have root access to the system you can install Microsoft SEAL system-wide as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/src
cmake .
make
sudo make install
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To instead install Microsoft SEAL locally, e.g., to &lt;code&gt;~/mylibs/&lt;/code&gt;, do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/src
cmake . -DCMAKE_INSTALL_PREFIX=~/mylibs
make
make install
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-linking-with-microsoft-seal-through-cmake" class="anchor" aria-hidden="true" href="#linking-with-microsoft-seal-through-cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linking with Microsoft SEAL through CMake&lt;/h3&gt;
&lt;p&gt;It is very easy to link your own applications and libraries with Microsoft SEAL if
you use CMake. Simply add the following to your &lt;code&gt;CMakeLists.txt&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;find_package(SEAL 3.4 REQUIRED)
target_link_libraries(&amp;lt;your target&amp;gt; SEAL::seal)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If Microsoft SEAL was installed globally, the above &lt;code&gt;find_package&lt;/code&gt; command will likely
find the library automatically. To link with a locally installed Microsoft SEAL, e.g.,
installed in &lt;code&gt;~/mylibs&lt;/code&gt; as described above, you may need to tell CMake where to look for
Microsoft SEAL when you configure your application by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd &amp;lt;directory containing your CMakeLists.txt&amp;gt;
cmake . -DCMAKE_PREFIX_PATH=~/mylibs
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-from-nuget-package" class="anchor" aria-hidden="true" href="#from-nuget-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From NuGet package&lt;/h2&gt;
&lt;p&gt;For .NET developers the easiest way of installing Microsoft SEAL is by using the
multi-platform NuGet package available at
&lt;a href="https://www.nuget.org/packages/Microsoft.Research.SEALNet" rel="nofollow"&gt;NuGet.org&lt;/a&gt;. Simply add
this package into your .NET project as a dependency and you are ready to go.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-enabling-optional-dependencies" class="anchor" aria-hidden="true" href="#enabling-optional-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling Optional Dependencies&lt;/h1&gt;
&lt;p&gt;Microsoft SEAL has no required dependencies, but certain optional features can be
enabled if it is compiled with support for specific third-party libraries.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-microsoft-gsl" class="anchor" aria-hidden="true" href="#microsoft-gsl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft GSL&lt;/h2&gt;
&lt;p&gt;Microsoft GSL (Guidelines Support Library) is a header-only library that implements
two convenient (templated) data types: &lt;code&gt;gsl::span&lt;/code&gt; and &lt;code&gt;gsl::multi_span&lt;/code&gt;. These
are &lt;em&gt;view types&lt;/em&gt; that provide safe (bounds-checked) array access to memory. For
example, if Microsoft GSL is available, Microsoft SEAL can allow &lt;code&gt;BatchEncoder&lt;/code&gt;
and &lt;code&gt;CKKSEncoder&lt;/code&gt; to encode from and decode to a &lt;code&gt;gsl::span&lt;/code&gt; instead of &lt;code&gt;std::vector&lt;/code&gt;,
which can have significant benefit in performance. Additionally, &lt;code&gt;BatchEncoder&lt;/code&gt; allows
access to the slot data alternatively through a two-dimensional &lt;code&gt;gsl::multi_span&lt;/code&gt;,
reflecting the batching slot structure. Also the &lt;code&gt;Ciphertext&lt;/code&gt; class allows the
ciphertext data to be accessed hierarchically through a &lt;code&gt;gsl::multi_span&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-microsoft-gsl-in-windows" class="anchor" aria-hidden="true" href="#microsoft-gsl-in-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft GSL in Windows&lt;/h4&gt;
&lt;p&gt;To build Microsoft SEAL with support for Microsoft GSL, clone first the Microsoft GSL
library from &lt;a href="https://GitHub.com/Microsoft/GSL"&gt;GitHub.com/Microsoft/GSL&lt;/a&gt; to some
convenient directory, e.g., &lt;code&gt;C:\MyLibs\GSL&lt;/code&gt; in this example.&lt;/p&gt;
&lt;p&gt;Next, you will need to signal Microsoft SEAL to enable Microsoft GSL support by
creating a new Windows environment variable &lt;code&gt;MSGSL_ROOT&lt;/code&gt;, and setting its value to
&lt;code&gt;C:\MyLibs\GSL\include&lt;/code&gt;. Restart Visual Studio at this point if you had it open,
otherwise it will not have captured the newly created environment variable.
Rebuilding Microsoft SEAL should now automatically detect that Microsoft GSL is
available, and enable both &lt;code&gt;gsl::span&lt;/code&gt; and &lt;code&gt;gsl::multi_span&lt;/code&gt; support. To disable
Microsoft GSL support, delete the &lt;code&gt;MSGSL_ROOT&lt;/code&gt; environment variable, restart Visual
Studio, and rebuild Microsoft SEAL.&lt;/p&gt;
&lt;p&gt;If Microsoft SEAL is built with Microsoft GSL support, any programs or libraries
consuming Microsoft SEAL will need access to the Microsoft GSL header files, so you
need to add &lt;code&gt;$(MSGSL_ROOT)&lt;/code&gt; to &lt;em&gt;Additional Include Directories&lt;/em&gt; under the &lt;em&gt;C/C++&lt;/em&gt; tab
in your Visual Studio project properties. Note that in the Microsoft SEAL projects
this has already been set for you, so all projects in &lt;code&gt;SEAL.sln&lt;/code&gt; should work without
change.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-microsoft-gsl-in-linux-and-macos" class="anchor" aria-hidden="true" href="#microsoft-gsl-in-linux-and-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft GSL in Linux and macOS&lt;/h4&gt;
&lt;p&gt;On some Linux distributions Microsoft GSL can be conveniently obtained through
a package manager, e.g., on Ubuntu it suffices to install the package &lt;code&gt;libmsgsl-dev&lt;/code&gt;.
Alternatively, you can simply clone it from
&lt;a href="https://github.com/Microsoft/GSL"&gt;GitHub.com/Microsoft/GSL&lt;/a&gt;. When installed with
a package manager, CMake will likely detect the Microsoft GSL location automatically.
Otherwise, if Microsoft GSL is cloned to &lt;code&gt;~/mylibs/GSL&lt;/code&gt;, you need to provide CMake
with this location when building Microsoft SEAL as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/src
cmake . -DMSGSL_ROOT=~/mylibs/GSL/include
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that you may need to give the same &lt;code&gt;-DMSGSL_ROOT=~/mylibs/GSL/include&lt;/code&gt; hint
to CMake when configuring your own applications linking with Microsoft SEAL.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-zlib" class="anchor" aria-hidden="true" href="#zlib"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ZLIB&lt;/h2&gt;
&lt;p&gt;ZLIB is a widely used compression library that implements the DEFLATE compression
algorithm. Microsoft SEAL can use ZLIB (if present) to automatically compress data
that is serialized. For example, in some cases &lt;code&gt;Ciphertext&lt;/code&gt; objects consist of a large
number of integers modulo specific prime numbers (&lt;code&gt;coeff_modulus&lt;/code&gt; primes). When using
the CKKS scheme, although these prime numbers can often be quite small (e.g., 30 bits),
the numbers are nevertheless serialized as 64-bit integers. In this case, more than
half of data in a ciphertext are zeros that can be compressed away with a compression
library, such as ZLIB. The BFV scheme benefits typically less from this technique, because
the prime numbers used for the &lt;code&gt;coeff_modulus&lt;/code&gt; encryption parameter tend to be larger,
and integers modulo these prime numbers fill more of each 64-bit word. The compression is
not only applied to &lt;code&gt;Ciphertext&lt;/code&gt; objects, but to every serializable Microsoft SEAL object.&lt;/p&gt;
&lt;p&gt;If ZLIB is detected by CMake, it will be automatically used for serialization (see
&lt;code&gt;Serialization::compr_mode_default&lt;/code&gt; in &lt;code&gt;native/src/seal/serialization.h&lt;/code&gt;. However, it is
always possible to explicitly pass &lt;code&gt;compr_mode_type::none&lt;/code&gt; to serialization methods to
disable compression.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; The compression rate for a &lt;code&gt;SecretKey&lt;/code&gt; can (in theory at least) reveal
information about the key. In most common applications of Microsoft SEAL the size of
a &lt;code&gt;SecretKey&lt;/code&gt; would not be deliberately revealed to untrusted parties. If this is
a concern, one can always save the &lt;code&gt;SecretKey&lt;/code&gt; in an uncompressed form by passing
&lt;code&gt;compr_mode_type::none&lt;/code&gt; to &lt;code&gt;SecretKey::save&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-zlib-in-windows" class="anchor" aria-hidden="true" href="#zlib-in-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ZLIB in Windows&lt;/h4&gt;
&lt;p&gt;ZLIB is usually not found on a typical Windows system. You can clone it from
&lt;a href="https://github.com/madler/zlib"&gt;GitHub.com/madler/zlib&lt;/a&gt; to some convenient directory,
e.g., &lt;code&gt;C:\MyLibs\zlib&lt;/code&gt; in this example. You need to build ZLIB first by opening
&lt;em&gt;Developer Command Prompt for VS 2019&lt;/em&gt;, go to &lt;code&gt;C:\MyLibs\zlib&lt;/code&gt;, and run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake .
cmake --build . --config Release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, you will need to signal Microsoft SEAL to enable ZLIB support by creating a new
Windows environment variable &lt;code&gt;ZLIB_ROOT&lt;/code&gt;, and setting its value to &lt;code&gt;C:\MyLibs\zlib&lt;/code&gt;.
Restart Visual Studio at this point if you had it open, otherwise it will not have
captured the newly created environment variable. Rebuilding Microsoft SEAL should now
automatically detect that ZLIB is available, and enable support for
&lt;code&gt;compr_mode_type::deflate&lt;/code&gt;. To disable ZLIB support, delete the &lt;code&gt;ZLIB_ROOT&lt;/code&gt; environment
variable, restart Visual Studio, and rebuild Microsoft SEAL.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-zlib-in-linux-and-macos" class="anchor" aria-hidden="true" href="#zlib-in-linux-and-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ZLIB in Linux and macOS&lt;/h4&gt;
&lt;p&gt;The ZLIB (development package) can be conveniently obtained through a package manager
on most Linux distributions, e.g., on Ubuntu it suffices to install the package
&lt;code&gt;zlib1g-dev&lt;/code&gt;. Alternatively, clone from &lt;a href="GitHub.com/madler/zlib"&gt;GitHub.com/madler/zlib&lt;/a&gt;
and build it yourself. For example, suppose you have cloned ZLIB to &lt;code&gt;~/mylibs/zlib&lt;/code&gt;.
To build ZLIB, simply execute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/mylibs/zlib
cmake .
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If ZLIB was installed with a package manager, CMake will likely detect the location
of ZLIB automatically. Otherwise, if ZLIB was built in &lt;code&gt;~/mylibs/zlib&lt;/code&gt;, you need
to provide CMake with this location when building Microsoft SEAL as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/src
cmake . -DZLIB_ROOT=~/mylibs/zlib
make
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-building-microsoft-seal-for-net" class="anchor" aria-hidden="true" href="#building-microsoft-seal-for-net"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Microsoft SEAL for .NET&lt;/h1&gt;
&lt;p&gt;Microsoft SEAL provides a .NET Standard library that wraps the functionality in
Microsoft SEAL for use in .NET development.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-windows-1" class="anchor" aria-hidden="true" href="#windows-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h2&gt;
&lt;p&gt;The Microsoft Visual Studio 2019 solution file &lt;code&gt;SEAL.sln&lt;/code&gt; contains the projects necessary
to build the .NET assembly, a backing native shared library, .NET examples, and unit
tests.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-native-library" class="anchor" aria-hidden="true" href="#native-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Native library&lt;/h4&gt;
&lt;p&gt;Microsoft SEAL for .NET requires a native library that is invoked by the managed .NET
library. Build the SEALNetNative project &lt;code&gt;dotnet\native\SEALNetNative.vcxproj&lt;/code&gt; from
&lt;code&gt;SEAL.sln&lt;/code&gt;. Building SEALNetNative results in the dynamic library &lt;code&gt;sealnetnative.dll&lt;/code&gt;
to be created in &lt;code&gt;dotnet\lib\$(Platform)\$(Configuration)&lt;/code&gt;. This library is meant to
be used only by the .NET library, not by end users, and needs to be present in the same
directory as your executable when running a .NET application.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-net-library" class="anchor" aria-hidden="true" href="#net-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET library&lt;/h4&gt;
&lt;p&gt;Once you have built the shared native library (see above), build the SEALNet project
&lt;code&gt;dotnet\src\SEALNet.csproj&lt;/code&gt; from &lt;code&gt;SEAL.sln&lt;/code&gt;. Building SEALNet results in the assembly
&lt;code&gt;SEALNet.dll&lt;/code&gt; to be created in &lt;code&gt;dotnet\lib\$(Configuration)\netstandard2.0&lt;/code&gt;. This
is the assembly you can reference in your application.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-net-examples" class="anchor" aria-hidden="true" href="#net-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET examples&lt;/h4&gt;
&lt;p&gt;Build the SEALNetExamples project &lt;code&gt;dotnet\examples\SEALNetExamples.csproj&lt;/code&gt; from
&lt;code&gt;SEAL.sln&lt;/code&gt;. This results in the assembly &lt;code&gt;SEALNetExamples.dll&lt;/code&gt; to be created in
&lt;code&gt;dotnet\bin\$(Configuration)\netcoreapp2.1&lt;/code&gt;. The project takes care of copying the
native SEALNetNative library to the output directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-net-unit-tests" class="anchor" aria-hidden="true" href="#net-unit-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET unit tests&lt;/h4&gt;
&lt;p&gt;Build the SEALNet Test project &lt;code&gt;dotnet\tests\SEALNetTest.csproj&lt;/code&gt; from &lt;code&gt;SEAL.sln&lt;/code&gt;. This
results in the &lt;code&gt;SEALNetTest.dll&lt;/code&gt; assembly to be created in
&lt;code&gt;dotnet\lib\$(Configuration)\netcoreapp2.1&lt;/code&gt;. The project takes care of copying the
native SEALNetNative library to the output directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-microsoft-seal-for-net-in-your-own-application" class="anchor" aria-hidden="true" href="#using-microsoft-seal-for-net-in-your-own-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Microsoft SEAL for .NET in your own application&lt;/h4&gt;
&lt;p&gt;To use Microsoft SEAL for .NET in your own application you need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;add a reference in your project to &lt;code&gt;SEALNet.dll&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;ensure &lt;code&gt;sealnetnative.dll&lt;/code&gt; is available for your application when run. The easiest
way to ensure this is to copy &lt;code&gt;sealnetnative.dll&lt;/code&gt; to the same directory where your
application's executable is located.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-building-your-own-nuget-package" class="anchor" aria-hidden="true" href="#building-your-own-nuget-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building your own NuGet package&lt;/h4&gt;
&lt;p&gt;You can build your own NuGet package for Microsoft SEAL by following the instructions
in &lt;a href="dotnet/nuget/NUGET.md"&gt;NUGET.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-linux-and-macos-1" class="anchor" aria-hidden="true" href="#linux-and-macos-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux and macOS&lt;/h2&gt;
&lt;p&gt;Microsoft SEAL for .NET relies on a native shared library that can be easily
configured and built using CMake (&amp;gt;= 3.12) and a modern version of GNU G++ (&amp;gt;= 6.0)
or Clang++ (&amp;gt;= 5.0). In macOS the Xcode toolchain (&amp;gt;= 9.3) will work.&lt;/p&gt;
&lt;p&gt;For compiling .NET code you will need to install a .NET Core SDK (&amp;gt;= 2.1). You can
follow these
&lt;a href="https://dotnet.microsoft.com/download?initial-os=linux" rel="nofollow"&gt;instructions for installing in Linux&lt;/a&gt;,
or for &lt;a href="https://dotnet.microsoft.com/download?initial-os=macos" rel="nofollow"&gt;installing in macOS&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-native-library-1" class="anchor" aria-hidden="true" href="#native-library-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Native library&lt;/h4&gt;
&lt;p&gt;If you only intend to run the examples and unit tests provided with Microsoft SEAL,
you do not need to install the native shared library, you only need to compile it.
The SEALNetExamples and SEALNetTest projects take care of copying the native shared
library to the appropriate assembly output directory.&lt;/p&gt;
&lt;p&gt;To compile the native shared library you will need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Compile Microsoft SEAL as a static or shared library with Position-Independent Code (PIC);&lt;/li&gt;
&lt;li&gt;Compile native shared library.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The instructions for compiling Microsoft SEAL are similar to the instructions described, but
in addition you need to ensure that the CMake configuration option &lt;code&gt;SEAL_LIB_BUILD_TYPE&lt;/code&gt; is
set to either &lt;code&gt;Static_PIC&lt;/code&gt; (default) or &lt;code&gt;Shared&lt;/code&gt;. Assuming Microsoft SEAL was built using
the default CMake configuration options, we can immediately use it to compile the shared
native library required for .NET:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dotnet/native
cmake .
make
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-net-library-1" class="anchor" aria-hidden="true" href="#net-library-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET library&lt;/h4&gt;
&lt;p&gt;To build the .NET Standard library, do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dotnet/src
dotnet build --configuration &amp;lt;Debug|Release&amp;gt;
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can use the &lt;code&gt;dotnet&lt;/code&gt; parameter &lt;code&gt;--configuration &amp;lt;Debug|Release&amp;gt;&lt;/code&gt; to build either
a &lt;code&gt;Debug&lt;/code&gt; or &lt;code&gt;Release&lt;/code&gt; version of the assembly. This will result in a &lt;code&gt;SEALNet.dll&lt;/code&gt;
assembly to be created in &lt;code&gt;dotnet/lib/$(Configuration)/netstandard2.0&lt;/code&gt;. This assembly
is the one you will want to reference in your own projects.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-net-examples-1" class="anchor" aria-hidden="true" href="#net-examples-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET examples&lt;/h4&gt;
&lt;p&gt;To build and run the .NET examples, do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dotnet/examples
dotnet run
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As mentioned before, the .NET project will copy the shared native library to the assembly
output directory. You can use the &lt;code&gt;dotnet&lt;/code&gt; parameter &lt;code&gt;--configuration &amp;lt;Debug|Release&amp;gt;&lt;/code&gt; to
run either &lt;code&gt;Debug&lt;/code&gt; or &lt;code&gt;Release&lt;/code&gt; versions of the examples.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-net-unit-tests-1" class="anchor" aria-hidden="true" href="#net-unit-tests-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET unit tests&lt;/h4&gt;
&lt;p&gt;To build and run the .NET unit tests, do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dotnet/tests
dotnet test
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All unit tests should pass. You can use the &lt;code&gt;dotnet&lt;/code&gt; parameter &lt;code&gt;--configuration &amp;lt;Debug|Release&amp;gt;&lt;/code&gt;
to run &lt;code&gt;Debug&lt;/code&gt; or &lt;code&gt;Relase&lt;/code&gt; unit tests, and you can use &lt;code&gt;--verbosity detailed&lt;/code&gt; to print the list
of unit tests that are being run.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-microsoft-seal-for-net-in-your-own-application-1" class="anchor" aria-hidden="true" href="#using-microsoft-seal-for-net-in-your-own-application-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Microsoft SEAL for .NET in your own application&lt;/h4&gt;
&lt;p&gt;To use Microsoft SEAL for .NET in your own application you need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;add a reference in your project to &lt;code&gt;SEALNet.dll&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;ensure the native shared library is available for your application when run. The easiest way
to ensure this is to copy &lt;code&gt;libsealnetnative.so&lt;/code&gt; to the same directory where your application's
executable is located.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In Linux or macOS, if you have root access to the system, you have the option to install the
native shared library globally. Then your application will always be able to find and load it.&lt;/p&gt;
&lt;p&gt;Assuming Microsoft SEAL is build and installed globally, you can install the shared native
library globally as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dotnet/native
cmake  .
make
sudo make install
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;p&gt;Using Microsoft SEAL will require the user to invest some time in learning fundamental
concepts in homomorphic encryption. The code comes with heavily commented examples that
are designed to gradually teach such concepts as well as to demonstrate much of the API.
The code examples are available (and identical) in C++ and C#, and are divided into
several source files in &lt;code&gt;native/examples/&lt;/code&gt; (C++) and &lt;code&gt;dotnet/examples/&lt;/code&gt; (C#), as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;C++&lt;/th&gt;
&lt;th&gt;C#&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;examples.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Examples.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The example runner application&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1_bfv_basics.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1_BFV_Basics.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Encrypted modular arithmetic using the BFV scheme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2_encoders.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;2_Encoders.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Encoding more complex data into Microsoft SEAL plaintext objects&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3_levels.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3_Levels.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Introduces the concept of levels; prerequisite for using the CKKS scheme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;4_ckks_basics.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;4_CKKS_Basics.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Encrypted real number arithmetic using the CKKS scheme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;5_rotation.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5_Rotation.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Performing cyclic rotations on encrypted vectors in the BFV and CKKS schemes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;6_performance.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;6_Performance.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Performance tests for Microsoft SEAL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It is recommeded to read the comments and the code snippets along with command line printout
from running an example. For easier navigation, command line printout provides the line number
in the associated source file where the associated code snippets start.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WARNING: It is impossible to use Microsoft SEAL correctly without reading all examples
or by simply re-using the code from examples. Any developer attempting to do so
will inevitably produce code that is &lt;em&gt;vulnerable&lt;/em&gt;, &lt;em&gt;malfunctioning&lt;/em&gt;, or &lt;em&gt;extremely slow&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you
to agree to a Contributor License Agreement (CLA) declaring that you have the right to,
and actually do, grant us the rights to use your contribution. For details, visit
&lt;a href="https://cla.microsoft.com" rel="nofollow"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need
to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow
the instructions provided by the bot. You will only need to do this once across all
repos using our CLA.&lt;/p&gt;
&lt;p&gt;Pull requests must be submitted to the branch called &lt;em&gt;contrib&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This project has adopted the
&lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information see the
&lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt;
or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional
questions or comments.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-pull-requests" class="anchor" aria-hidden="true" href="#pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pull Requests&lt;/h1&gt;
&lt;p&gt;For contributing to Microsoft SEAL, please see &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-citing-microsoft-seal" class="anchor" aria-hidden="true" href="#citing-microsoft-seal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citing Microsoft SEAL&lt;/h1&gt;
&lt;p&gt;To cite Microsoft SEAL in academic papers, please use the following BibTeX entries.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-version-34" class="anchor" aria-hidden="true" href="#version-34"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.4&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@misc{sealcrypto,
    title = {{M}icrosoft {SEAL} (release 3.4)},
    howpublished = {\url{https://github.com/Microsoft/SEAL}},
    month = oct,
    year = 2019,
    note = {Microsoft Research, Redmond, WA.},
    key = {SEAL}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-version-33" class="anchor" aria-hidden="true" href="#version-33"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.3&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@misc{sealcrypto,
    title = {{M}icrosoft {SEAL} (release 3.3)},
    howpublished = {\url{https://github.com/Microsoft/SEAL}},
    month = june,
    year = 2019,
    note = {Microsoft Research, Redmond, WA.},
    key = {SEAL}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-version-32" class="anchor" aria-hidden="true" href="#version-32"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.2&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@misc{sealcrypto,
    title = {{M}icrosoft {SEAL} (release 3.2)},
    howpublished = {\url{https://github.com/Microsoft/SEAL}},
    month = feb,
    year = 2019,
    note = {Microsoft Research, Redmond, WA.},
    key = {SEAL}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-version-31" class="anchor" aria-hidden="true" href="#version-31"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.1&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@misc{sealcrypto,
    title = {{M}icrosoft {SEAL} (release 3.1)},
    howpublished = {\url{https://github.com/Microsoft/SEAL}},
    month = dec,
    year = 2018,
    note = {Microsoft Research, Redmond, WA.},
    key = {SEAL}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-version-30" class="anchor" aria-hidden="true" href="#version-30"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.0&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@misc{sealcrypto,
    title = {{M}icrosoft {SEAL} (release 3.0)},
    howpublished = {\url{http://sealcrypto.org}},
    month = oct,
    year = 2018,
    note = {Microsoft Research, Redmond, WA.},
    key = {SEAL}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/SEAL</guid><pubDate>Thu, 26 Dec 2019 00:20:00 GMT</pubDate></item><item><title>qgis/QGIS #21 in C++, This month</title><link>https://github.com/qgis/QGIS</link><description>&lt;p&gt;&lt;i&gt;QGIS is a free, open source, cross platform (lin/win/mac) geographical information system (GIS)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-about-qgis" class="anchor" aria-hidden="true" href="#about-qgis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About QGIS&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/qgis/QGIS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/55717729edb368a2c1285e14ebdd9edf39b98fc6/68747470733a2f2f7472617669732d63692e6f72672f716769732f514749532e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/qgis/QGIS.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cloud.docker.com/app/qgis/repository/docker/qgis/qgis/general" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d426fb4e033481cbd11225f364d7effb2893f30f/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f6175746f6d617465642f716769732f716769732e737667" alt="Docker Status" data-canonical-src="https://img.shields.io/docker/automated/qgis/qgis.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/qgis/QGIS/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b04bda91bd5dec2b2275d7a9c76d87bd0c8a6608/68747470733a2f2f6465762e617a7572652e636f6d2f716769732f514749532f5f617069732f6275696c642f7374617475732f716769732e514749533f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/qgis/QGIS/_apis/build/status/qgis.QGIS?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;QGIS is an Open Source Geographic Information System. The project was born in
May of 2002 and was established as a project on SourceForge in June of the same
year. We've worked hard to make GIS software (which is traditionally expensive
commercial software) a viable prospect for anyone with basic access to a
Personal Computer.  QGIS currently runs on most Unix platforms (macOS/OS X included)
and Windows. QGIS is developed using the &lt;a href="https://qt.io" rel="nofollow"&gt;Qt toolkit&lt;/a&gt; and C++.  This
means that QGIS feels snappy to use and has a pleasing, easy to use graphical
user interface.&lt;/p&gt;
&lt;p&gt;QGIS aims to be an easy to use GIS, providing common functions and
features. The initial goal was to provide a GIS data viewer. QGIS has
reached that point in its evolution and is being used by many for their
daily GIS data viewing and editing needs. QGIS supports a number of raster
, vector and mesh data formats, with new support easily added using the plugin
architecture.&lt;/p&gt;
&lt;p&gt;QGIS is released under the GNU Public License (GPL) Version 2 or above.
Developing QGIS under this license means that you can (if you want to) inspect
and modify the source code and guarantees that you, our happy user will always
have access to a GIS program that is free of cost and can be freely
modified.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-raster-formats-include" class="anchor" aria-hidden="true" href="#supported-raster-formats-include"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported raster formats include:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GRASS&lt;/li&gt;
&lt;li&gt;USGS DEM&lt;/li&gt;
&lt;li&gt;ArcInfo binary grid&lt;/li&gt;
&lt;li&gt;ArcInfo ASCII grid&lt;/li&gt;
&lt;li&gt;ERDAS Imagine&lt;/li&gt;
&lt;li&gt;SDTS&lt;/li&gt;
&lt;li&gt;GeoTiff&lt;/li&gt;
&lt;li&gt;Tiff with world file&lt;/li&gt;
&lt;li&gt;WMS, WCS&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-vector-formats-include" class="anchor" aria-hidden="true" href="#supported-vector-formats-include"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported vector formats include:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ESRI Shapefiles&lt;/li&gt;
&lt;li&gt;PostgreSQL/PostGIS&lt;/li&gt;
&lt;li&gt;GRASS&lt;/li&gt;
&lt;li&gt;GeoPackage&lt;/li&gt;
&lt;li&gt;SpatiaLite&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gdal.org/ogr_formats.html" rel="nofollow"&gt;Other OGR supported formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MSSQL&lt;/li&gt;
&lt;li&gt;Oracle&lt;/li&gt;
&lt;li&gt;WFS&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-mesh-formats-include" class="anchor" aria-hidden="true" href="#supported-mesh-formats-include"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported mesh formats include:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NetCDF&lt;/li&gt;
&lt;li&gt;GRIB&lt;/li&gt;
&lt;li&gt;2DM&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lutraconsulting/MDAL#supported-formats"&gt;Other MDAL supported formats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-note" class="anchor" aria-hidden="true" href="#note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note&lt;/h2&gt;
&lt;p&gt;Please follow the installation instructions carefully.
After extracting the distribution, you can find the HTML version of the
installation document in &lt;code&gt;qgis/doc/index.html&lt;/code&gt;. The installation document is
also available as PDF in the same directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help-us" class="anchor" aria-hidden="true" href="#help-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help us&lt;/h2&gt;
&lt;p&gt;Please submit bug reports using the &lt;a href="https://github.com/qgis/QGIS/issues/"&gt;QGIS bug tracker&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;You can get support in the following ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using the QGIS community site at &lt;a href="https://qgis.org" rel="nofollow"&gt;https://qgis.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Joining the &lt;a href="https://lists.osgeo.org/mailman/listinfo/qgis-user" rel="nofollow"&gt;qgis-users mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chatting with us real-time.
Please wait around for a response to your question as many folks
on the channel are doing other things and it may take a while for
them to notice your question.
The following paths all take you to the same chat room:
&lt;ul&gt;
&lt;li&gt;Using an IRC client and joining the &lt;a href="http://webchat.freenode.net/?channels=#qgis" rel="nofollow"&gt;#qgis&lt;/a&gt; channel on irc.freenode.net.&lt;/li&gt;
&lt;li&gt;Using a Matrix client and joining the &lt;a href="http://matrix.to/#/#qgis:matrix.org" rel="nofollow"&gt;#qgis:matrix.org&lt;/a&gt; room.&lt;/li&gt;
&lt;li&gt;Using &lt;a href="https://gitter.im/qgis/QGIS?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;Gitter&lt;/a&gt; chat.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;QGIS is on GitHub at &lt;a href="https://github.com/qgis/QGIS"&gt;https://github.com/qgis/QGIS&lt;/a&gt;. If you wish to contribute
patches you can &lt;a href="https://help.github.com/forking/"&gt;fork the project&lt;/a&gt;, make your changes, commit to your
repository, and then &lt;a href="https://help.github.com/articles/creating-a-pull-request-from-a-fork/"&gt;create a pull request&lt;/a&gt;. The development team can then review your contribution and commit it upstream as appropriate.&lt;/p&gt;
&lt;p&gt;If you commit a new feature, add [FEATURE] to your commit message AND give a clear description of the new feature. A webhook will automatically create an issue on the QGIS-Documentation repo to tell people to write documentation about it.&lt;/p&gt;
&lt;p&gt;If you are not a developer, there are many other possibilities which do not require programming skills to help QGIS to evolve. Check our &lt;a href="http://qgis.org/en/site/getinvolved/index.html" rel="nofollow"&gt;project homepage for more information&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from source&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://htmlpreview.github.io/?https://raw.github.com/qgis/QGIS/master/doc/INSTALL.html" rel="nofollow"&gt;building guide&lt;/a&gt; can be used to get started with building QGIS from source.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>qgis</author><guid isPermaLink="false">https://github.com/qgis/QGIS</guid><pubDate>Thu, 26 Dec 2019 00:21:00 GMT</pubDate></item><item><title>fmtlib/fmt #22 in C++, This month</title><link>https://github.com/fmtlib/fmt</link><description>&lt;p&gt;&lt;i&gt;A modern formatting library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fmt" class="anchor" aria-hidden="true" href="#fmt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;{fmt}&lt;/h1&gt;
&lt;a href="https://travis-ci.org/fmtlib/fmt" rel="nofollow"&gt;&lt;img alt="https://travis-ci.org/fmtlib/fmt.png?branch=master" src="https://camo.githubusercontent.com/76f19974a593600e801b98fbbfed6befc693f137/68747470733a2f2f7472617669732d63692e6f72672f666d746c69622f666d742e706e673f6272616e63683d6d6173746572" data-canonical-src="https://travis-ci.org/fmtlib/fmt.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/vitaut/fmt" rel="nofollow"&gt;&lt;img alt="https://ci.appveyor.com/api/projects/status/ehjkiefde6gucy1v" src="https://camo.githubusercontent.com/1816a23c318d84b74169614cdf0ea55fa646e2ee/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f65686a6b696566646536677563793176" data-canonical-src="https://ci.appveyor.com/api/projects/status/ehjkiefde6gucy1v" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?colspec=ID%20Type%20Component%20Status%20Proj%20Reported%20Owner%20Summary&amp;amp;q=proj%3Dlibfmt&amp;amp;can=1" rel="nofollow"&gt;&lt;img alt="fmt is continuously fuzzed att oss-fuzz" src="https://camo.githubusercontent.com/d08a52c8a16f89915feae37ed00e31a3b374000a/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f6c6962666d742e737667" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/libfmt.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://stackoverflow.com/questions/tagged/fmt" rel="nofollow"&gt;&lt;img alt="Ask questions at StackOverflow with the tag fmt" src="https://camo.githubusercontent.com/dfc8830151cd195b0c3c6fc3cd43fc3818ad4187/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737461636b6f766572666c6f772d666d742d626c75652e737667" data-canonical-src="https://img.shields.io/badge/stackoverflow-fmt-blue.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;{fmt}&lt;/strong&gt; is an open-source formatting library for C++.
It can be used as a safe and fast alternative to (s)printf and iostreams.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fmt.dev/latest/" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Q&amp;amp;A: ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/fmt" rel="nofollow"&gt;StackOverflow with the tag fmt&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-features"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Replacement-based &lt;a href="https://fmt.dev/dev/api.html" rel="nofollow"&gt;format API&lt;/a&gt; with
positional arguments for localization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fmt.dev/dev/syntax.html" rel="nofollow"&gt;Format string syntax&lt;/a&gt; similar to the one
of &lt;a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"&gt;str.format&lt;/a&gt;
in Python.&lt;/li&gt;
&lt;li&gt;Safe &lt;a href="https://fmt.dev/latest/api.html#printf-formatting" rel="nofollow"&gt;printf implementation&lt;/a&gt; including
the POSIX extension for positional arguments.&lt;/li&gt;
&lt;li&gt;Implementation of &lt;a href="https://fmt.dev/Text%20Formatting.html" rel="nofollow"&gt;C++20 std::format&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Support for user-defined types.&lt;/li&gt;
&lt;li&gt;High performance: faster than common standard library implementations of
&lt;a href="https://en.cppreference.com/w/cpp/io/c/fprintf" rel="nofollow"&gt;printf&lt;/a&gt; and
iostreams. See &lt;a href="#speed-tests"&gt;Speed tests&lt;/a&gt; and &lt;a href="http://zverovich.net/2013/09/07/integer-to-string-conversion-in-cplusplus.html" rel="nofollow"&gt;Fast integer to string conversion in C++&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Small code size both in terms of source code (the minimum configuration
consists of just three header files, &lt;code&gt;core.h&lt;/code&gt;, &lt;code&gt;format.h&lt;/code&gt; and
&lt;code&gt;format-inl.h&lt;/code&gt;) and compiled code. See &lt;a href="#compile-time-and-code-bloat"&gt;Compile time and code bloat&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Reliability: the library has an extensive set of &lt;a href="https://github.com/fmtlib/fmt/tree/master/test"&gt;unit tests&lt;/a&gt; and is continuously fuzzed.&lt;/li&gt;
&lt;li&gt;Safety: the library is fully type safe, errors in format strings can be
reported at compile time, automatic memory management prevents buffer overflow
errors.&lt;/li&gt;
&lt;li&gt;Ease of use: small self-contained code base, no external dependencies,
permissive MIT &lt;a href="https://github.com/fmtlib/fmt/blob/master/LICENSE.rst"&gt;license&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fmt.dev/latest/index.html#portability" rel="nofollow"&gt;Portability&lt;/a&gt; with
consistent output across platforms and support for older compilers.&lt;/li&gt;
&lt;li&gt;Clean warning-free codebase even on high warning levels
(&lt;code&gt;-Wall -Wextra -pedantic&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Support for wide strings.&lt;/li&gt;
&lt;li&gt;Optional header-only configuration enabled with the &lt;code&gt;FMT_HEADER_ONLY&lt;/code&gt; macro.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="https://fmt.dev/latest/" rel="nofollow"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;a name="user-content-examples"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Print &lt;code&gt;Hello, world!&lt;/code&gt; to &lt;code&gt;stdout&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;fmt::print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, {}!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Python-like format string syntax&lt;/span&gt;
&lt;span class="pl-en"&gt;fmt::printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, %s!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; printf format string syntax&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Format a string and use positional arguments:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;std::string s = fmt::format(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I'd rather be {1} than {0}.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;happy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; s == "I'd rather be happy than right."&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check a format string at compile time:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; test.cc&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;fmt/format.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
std::string s = format(FMT_STRING(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{2}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;42&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;$ c++ -Iinclude -std=c++14 test.cc
...
test.cc:4:17: note: in instantiation of function template specialization 'fmt::v5::format&amp;lt;S, int&amp;gt;' requested here
std::string s = format(FMT_STRING("{2}"), 42);
                ^
include/fmt/core.h:778:19: note: non-constexpr function 'on_error' cannot be used in a constant expression
    ErrorHandler::on_error(message);
                  ^
include/fmt/format.h:2226:16: note: in call to '&amp;amp;checker.context_-&amp;gt;on_error(&amp;amp;"argument index out of range"[0])'
      context_.on_error("argument index out of range");
               ^
&lt;/pre&gt;
&lt;p&gt;Use {fmt} as a safe portable replacement for &lt;code&gt;itoa&lt;/code&gt;
(&lt;a href="https://godbolt.org/g/NXmpU4" rel="nofollow"&gt;godbolt&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;fmt::memory_buffer buf;
&lt;span class="pl-en"&gt;format_to&lt;/span&gt;(buf, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42&lt;/span&gt;);    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; replaces itoa(42, buffer, 10)&lt;/span&gt;
&lt;span class="pl-en"&gt;format_to&lt;/span&gt;(buf, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{:x}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42&lt;/span&gt;);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; replaces itoa(42, buffer, 16)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; access the string with to_string(buf) or buf.data()&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Format objects of user-defined types via a simple &lt;a href="https://fmt.dev/latest/api.html#formatting-user-defined-types" rel="nofollow"&gt;extension API&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fmt/format.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;date&lt;/span&gt; {
  &lt;span class="pl-k"&gt;int&lt;/span&gt; year, month, day;
};

&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&amp;gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;fmt&lt;/span&gt;::formatter&amp;lt;date&amp;gt; {
  &lt;span class="pl-k"&gt;constexpr&lt;/span&gt; &lt;span class="pl-k"&gt;auto&lt;/span&gt; &lt;span class="pl-en"&gt;parse&lt;/span&gt;(format_parse_context&amp;amp; ctx) { &lt;span class="pl-k"&gt;return&lt;/span&gt; ctx.&lt;span class="pl-c1"&gt;begin&lt;/span&gt;(); }

  &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; FormatContext&amp;gt;
  &lt;span class="pl-k"&gt;auto&lt;/span&gt; &lt;span class="pl-en"&gt;format&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; date&amp;amp; d, FormatContext&amp;amp; ctx) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;format_to&lt;/span&gt;(ctx.&lt;span class="pl-c1"&gt;out&lt;/span&gt;(), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{}-{}-{}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, d.&lt;span class="pl-smi"&gt;year&lt;/span&gt;, d.&lt;span class="pl-smi"&gt;month&lt;/span&gt;, d.&lt;span class="pl-smi"&gt;day&lt;/span&gt;);
  }
};

std::string s = fmt::format(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The date is {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, date{&lt;span class="pl-c1"&gt;2012&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;});
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; s == "The date is 2012-12-9"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create your own functions similar to &lt;a href="https://fmt.dev/latest/api.html#format" rel="nofollow"&gt;format&lt;/a&gt; and
&lt;a href="https://fmt.dev/latest/api.html#print" rel="nofollow"&gt;print&lt;/a&gt;
which take arbitrary arguments (&lt;a href="https://godbolt.org/g/MHjHVf" rel="nofollow"&gt;godbolt&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints formatted error message.&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;vreport_error&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;* format, fmt::format_args args) {
  &lt;span class="pl-c1"&gt;fmt::print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-c1"&gt;fmt::vprint&lt;/span&gt;(format, args);
}
&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt;... Args&amp;gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;report_error&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;* format, &lt;span class="pl-k"&gt;const&lt;/span&gt; Args &amp;amp; ... args) {
  &lt;span class="pl-c1"&gt;vreport_error&lt;/span&gt;(format, &lt;span class="pl-c1"&gt;fmt::make_format_args&lt;/span&gt;(args...));
}

&lt;span class="pl-en"&gt;report_error&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file not found: {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, path);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;vreport_error&lt;/code&gt; is not parameterized on argument types which can
improve compile times and reduce code size compared to a fully parameterized
version.&lt;/p&gt;
&lt;a name="user-content-benchmarks"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmarks&lt;/h2&gt;
&lt;a name="user-content-speed-tests"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-speed-tests" class="anchor" aria-hidden="true" href="#speed-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Speed tests&lt;/h3&gt;
&lt;table&gt;





&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th&gt;Library&lt;/th&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Run Time, s&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;libc&lt;/td&gt;
&lt;td&gt;printf&lt;/td&gt;
&lt;td&gt;1.04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;libc++&lt;/td&gt;
&lt;td&gt;std::ostream&lt;/td&gt;
&lt;td&gt;3.05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;{fmt} 6.1.1&lt;/td&gt;
&lt;td&gt;fmt::print&lt;/td&gt;
&lt;td&gt;0.75&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Boost Format 1.67&lt;/td&gt;
&lt;td&gt;boost::format&lt;/td&gt;
&lt;td&gt;7.24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Folly Format&lt;/td&gt;
&lt;td&gt;folly::format&lt;/td&gt;
&lt;td&gt;2.23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;{fmt} is the fastest of the benchmarked methods, ~35% faster than &lt;code&gt;printf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The above results were generated by building &lt;code&gt;tinyformat_test.cpp&lt;/code&gt; on macOS
10.14.6 with &lt;code&gt;clang++ -O3 -DSPEED_TEST -DHAVE_FORMAT&lt;/code&gt;, and taking the best of
three runs. In the test, the format string &lt;code&gt;"%0.10f:%04d:%+g:%s:%p:%c:%%\n"&lt;/code&gt;
or equivalent is filled 2,000,000 times with output sent to &lt;code&gt;/dev/null&lt;/code&gt;; for
further details refer to the &lt;a href="https://github.com/fmtlib/format-benchmark/blob/master/tinyformat_test.cpp"&gt;source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;{fmt} is 10x faster than &lt;code&gt;std::ostringstream&lt;/code&gt; and &lt;code&gt;sprintf&lt;/code&gt; on floating-point
formatting (&lt;a href="https://github.com/fmtlib/dtoa-benchmark"&gt;dtoa-benchmark&lt;/a&gt;)
and as fast as &lt;a href="https://github.com/google/double-conversion"&gt;double-conversion&lt;/a&gt;:&lt;/p&gt;
&lt;a href="https://fmt.dev/unknown_mac64_clang10.0.html" rel="nofollow"&gt;&lt;img alt="https://user-images.githubusercontent.com/576385/69767160-cdaca400-112f-11ea-9fc5-347c9f83caad.png" src="https://user-images.githubusercontent.com/576385/69767160-cdaca400-112f-11ea-9fc5-347c9f83caad.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a name="user-content-compile-time-and-code-bloat"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-compile-time-and-code-bloat" class="anchor" aria-hidden="true" href="#compile-time-and-code-bloat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile time and code bloat&lt;/h3&gt;
&lt;p&gt;The script &lt;a href="https://github.com/fmtlib/format-benchmark/blob/master/bloat-test.py"&gt;bloat-test.py&lt;/a&gt;
from &lt;a href="https://github.com/fmtlib/format-benchmark"&gt;format-benchmark&lt;/a&gt;
tests compile time and code bloat for nontrivial projects.
It generates 100 translation units and uses &lt;code&gt;printf()&lt;/code&gt; or its alternative
five times in each to simulate a medium sized project.  The resulting
executable size and compile time (Apple LLVM version 8.1.0 (clang-802.0.42),
macOS Sierra, best of three) is shown in the following tables.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Optimized build (-O3)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;






&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Compile Time, s&lt;/th&gt;
&lt;th&gt;Executable size, KiB&lt;/th&gt;
&lt;th&gt;Stripped size, KiB&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;printf&lt;/td&gt;
&lt;td&gt;2.6&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;printf+string&lt;/td&gt;
&lt;td&gt;16.4&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;iostreams&lt;/td&gt;
&lt;td&gt;31.1&lt;/td&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;{fmt}&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Boost Format&lt;/td&gt;
&lt;td&gt;91.9&lt;/td&gt;
&lt;td&gt;226&lt;/td&gt;
&lt;td&gt;203&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Folly Format&lt;/td&gt;
&lt;td&gt;115.7&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;88&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As you can see, {fmt} has 60% less overhead in terms of resulting binary code
size compared to iostreams and comes pretty close to &lt;code&gt;printf&lt;/code&gt;. Boost Format
and Folly Format have the largest overheads.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;printf+string&lt;/code&gt; is the same as &lt;code&gt;printf&lt;/code&gt; but with extra &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;
include to measure the overhead of the latter.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Non-optimized build&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;






&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Compile Time, s&lt;/th&gt;
&lt;th&gt;Executable size, KiB&lt;/th&gt;
&lt;th&gt;Stripped size, KiB&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;printf&lt;/td&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;printf+string&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;iostreams&lt;/td&gt;
&lt;td&gt;28.3&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;{fmt}&lt;/td&gt;
&lt;td&gt;18.2&lt;/td&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Boost Format&lt;/td&gt;
&lt;td&gt;54.1&lt;/td&gt;
&lt;td&gt;365&lt;/td&gt;
&lt;td&gt;303&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Folly Format&lt;/td&gt;
&lt;td&gt;79.9&lt;/td&gt;
&lt;td&gt;445&lt;/td&gt;
&lt;td&gt;430&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;libc&lt;/code&gt;, &lt;code&gt;lib(std)c++&lt;/code&gt; and &lt;code&gt;libfmt&lt;/code&gt; are all linked as shared libraries to
compare formatting function overhead only. Boost Format is a
header-only library so it doesn't provide any linkage options.&lt;/p&gt;
&lt;a name="user-content-running-the-tests"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-running-the-tests" class="anchor" aria-hidden="true" href="#running-the-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the tests&lt;/h3&gt;
&lt;p&gt;Please refer to &lt;a href="https://fmt.dev/latest/usage.html#building-the-library" rel="nofollow"&gt;Building the library&lt;/a&gt; for the instructions on how to build
the library and run the unit tests.&lt;/p&gt;
&lt;p&gt;Benchmarks reside in a separate repository,
&lt;a href="https://github.com/fmtlib/format-benchmark"&gt;format-benchmarks&lt;/a&gt;,
so to run the benchmarks you first need to clone this repository and
generate Makefiles with CMake:&lt;/p&gt;
&lt;pre&gt;$ git clone --recursive https://github.com/fmtlib/format-benchmark.git
$ cd format-benchmark
$ cmake .
&lt;/pre&gt;
&lt;p&gt;Then you can run the speed test:&lt;/p&gt;
&lt;pre&gt;$ make speed-test
&lt;/pre&gt;
&lt;p&gt;or the bloat test:&lt;/p&gt;
&lt;pre&gt;$ make bloat-test
&lt;/pre&gt;
&lt;a name="user-content-projects-using-this-library"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-projects-using-this-library" class="anchor" aria-hidden="true" href="#projects-using-this-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects using this library&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play0ad.com/" rel="nofollow"&gt;0 A.D.&lt;/a&gt;: A free, open-source, cross-platform real-time
strategy game&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ampl/mp"&gt;AMPL/MP&lt;/a&gt;:
An open-source library for mathematical programming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aviobook.aero/en" rel="nofollow"&gt;AvioBook&lt;/a&gt;: A comprehensive aircraft
operations suite&lt;/li&gt;
&lt;li&gt;&lt;a href="https://celestia.space/" rel="nofollow"&gt;Celestia&lt;/a&gt;: Real-time 3D visualization of space&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ceph.com/" rel="nofollow"&gt;Ceph&lt;/a&gt;: A scalable distributed storage system&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ccache.dev/" rel="nofollow"&gt;ccache&lt;/a&gt;: A compiler cache&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cuauv.org/" rel="nofollow"&gt;CUAUV&lt;/a&gt;: Cornell University's autonomous underwater
vehicle&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvpgn/pvpgn-server"&gt;HarpyWar/pvpgn&lt;/a&gt;:
Player vs Player Gaming Network with tweaks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kbengine.org/" rel="nofollow"&gt;KBEngine&lt;/a&gt;: An open-source MMOG server engine&lt;/li&gt;
&lt;li&gt;&lt;a href="https://keypirinha.com/" rel="nofollow"&gt;Keypirinha&lt;/a&gt;: A semantic launcher for Windows&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kodi.tv/" rel="nofollow"&gt;Kodi&lt;/a&gt; (formerly xbmc): Home theater software&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peter-clark/lifeline"&gt;Lifeline&lt;/a&gt;: A 2D game&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drake.mit.edu/" rel="nofollow"&gt;Drake&lt;/a&gt;: A planning, control, and analysis toolbox
for nonlinear dynamical systems (MIT)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lyft.github.io/envoy/" rel="nofollow"&gt;Envoy&lt;/a&gt;: C++ L7 proxy and communication bus
(Lyft)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fivem.net/" rel="nofollow"&gt;FiveM&lt;/a&gt;: a modification framework for GTA V&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mongodb.com/" rel="nofollow"&gt;MongoDB&lt;/a&gt;: Distributed document database&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/duckie/mongo_smasher"&gt;MongoDB Smasher&lt;/a&gt;: A small tool to
generate randomized datasets&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openspaceproject.com/" rel="nofollow"&gt;OpenSpace&lt;/a&gt;: An open-source astrovisualization
framework&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.polserver.com/" rel="nofollow"&gt;PenUltima Online (POL)&lt;/a&gt;:
An MMO server, compatible with most Ultima Online clients&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quasardb.net/" rel="nofollow"&gt;quasardb&lt;/a&gt;: A distributed, high-performance,
associative database&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/sys_dev/readpe" rel="nofollow"&gt;readpe&lt;/a&gt;: Read Portable Executable&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HunanTV/redis-cerberus"&gt;redis-cerberus&lt;/a&gt;: A Redis cluster
proxy&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rpclib.net/" rel="nofollow"&gt;rpclib&lt;/a&gt;: A modern C++ msgpack-RPC server and client
library&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mamontov-cpp/saddy-graphics-engine-2d"&gt;Saddy&lt;/a&gt;:
Small crossplatform 2D graphic engine&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.salesforce.com/analytics-cloud/overview/" rel="nofollow"&gt;Salesforce Analytics Cloud&lt;/a&gt;:
Business intelligence software&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scylladb.com/" rel="nofollow"&gt;Scylla&lt;/a&gt;: A Cassandra-compatible NoSQL data store
that can handle 1 million transactions per second on a single server&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.seastar-project.org/" rel="nofollow"&gt;Seastar&lt;/a&gt;: An advanced, open-source C++
framework for high-performance server applications on modern hardware&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gabime/spdlog"&gt;spdlog&lt;/a&gt;: Super fast C++ logging library&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stellar.org/" rel="nofollow"&gt;Stellar&lt;/a&gt;: Financial platform&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.touchsurgery.com/" rel="nofollow"&gt;Touch Surgery&lt;/a&gt;: Surgery simulator&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TrinityCore/TrinityCore"&gt;TrinityCore&lt;/a&gt;: Open-source
MMORPG framework&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/search?q=fmtlib&amp;amp;type=Code"&gt;More...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are aware of other projects using this library, please let me know
by &lt;a href="mailto:victor.zverovich@gmail.com"&gt;email&lt;/a&gt; or by submitting an
&lt;a href="https://github.com/fmtlib/fmt/issues"&gt;issue&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-motivation"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;p&gt;So why yet another formatting library?&lt;/p&gt;
&lt;p&gt;There are plenty of methods for doing this task, from standard ones like
the printf family of function and iostreams to Boost Format and FastFormat
libraries. The reason for creating a new library is that every existing
solution that I found either had serious issues or didn't provide
all the features I needed.&lt;/p&gt;
&lt;a name="user-content-id3"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-printf" class="anchor" aria-hidden="true" href="#printf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;printf&lt;/h3&gt;
&lt;p&gt;The good thing about &lt;code&gt;printf&lt;/code&gt; is that it is pretty fast and readily available
being a part of the C standard library. The main drawback is that it
doesn't support user-defined types. &lt;code&gt;printf&lt;/code&gt; also has safety issues although
they are somewhat mitigated with &lt;a href="https://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html" rel="nofollow"&gt;__attribute__ ((format (printf, ...))&lt;/a&gt; in GCC.
There is a POSIX extension that adds positional arguments required for
&lt;a href="https://en.wikipedia.org/wiki/Internationalization_and_localization" rel="nofollow"&gt;i18n&lt;/a&gt;
to &lt;code&gt;printf&lt;/code&gt; but it is not a part of C99 and may not be available on some
platforms.&lt;/p&gt;
&lt;a name="user-content-iostreams"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-iostreams" class="anchor" aria-hidden="true" href="#iostreams"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iostreams&lt;/h3&gt;
&lt;p&gt;The main issue with iostreams is best illustrated with an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;std::cout &amp;lt;&amp;lt; std::setprecision(&lt;span class="pl-c1"&gt;2&lt;/span&gt;) &amp;lt;&amp;lt; std::fixed &amp;lt;&amp;lt; &lt;span class="pl-c1"&gt;1.23456&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which is a lot of typing compared to printf:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%.2f&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.23456&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Matthew Wilson, the author of FastFormat, called this "chevron hell". iostreams
don't support positional arguments by design.&lt;/p&gt;
&lt;p&gt;The good part is that iostreams support user-defined types and are safe although
error handling is awkward.&lt;/p&gt;
&lt;a name="user-content-boost-format"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-boost-format" class="anchor" aria-hidden="true" href="#boost-format"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Boost Format&lt;/h3&gt;
&lt;p&gt;This is a very powerful library which supports both &lt;code&gt;printf&lt;/code&gt;-like format
strings and positional arguments. Its main drawback is performance. According to
various benchmarks it is much slower than other methods considered here. Boost
Format also has excessive build times and severe code bloat issues (see
&lt;a href="#benchmarks"&gt;Benchmarks&lt;/a&gt;).&lt;/p&gt;
&lt;a name="user-content-fastformat"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-fastformat" class="anchor" aria-hidden="true" href="#fastformat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FastFormat&lt;/h3&gt;
&lt;p&gt;This is an interesting library which is fast, safe and has positional
arguments. However it has significant limitations, citing its author:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Three features that have no hope of being accommodated within the
current design are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Leading zeros (or any other non-space padding)&lt;/li&gt;
&lt;li&gt;Octal/hexadecimal encoding&lt;/li&gt;
&lt;li&gt;Runtime width/alignment specification&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is also quite big and has a heavy dependency, STLSoft, which might be
too restrictive for using it in some projects.&lt;/p&gt;
&lt;a name="user-content-boost-spirit-karma"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-boost-spiritkarma" class="anchor" aria-hidden="true" href="#boost-spiritkarma"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Boost Spirit.Karma&lt;/h3&gt;
&lt;p&gt;This is not really a formatting library but I decided to include it here for
completeness. As iostreams, it suffers from the problem of mixing verbatim text
with arguments. The library is pretty fast, but slower on integer formatting
than &lt;code&gt;fmt::format_int&lt;/code&gt; on Karma's own benchmark,
see &lt;a href="http://zverovich.net/2013/09/07/integer-to-string-conversion-in-cplusplus.html" rel="nofollow"&gt;Fast integer to string conversion in C++&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-faq"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Q: how can I capture formatting arguments and format them later?&lt;/p&gt;
&lt;p&gt;A: use &lt;code&gt;std::tuple&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt;... Args&amp;gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; &lt;span class="pl-en"&gt;capture&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; Args&amp;amp;... args) {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;std::make_tuple&lt;/span&gt;(args...);
}

&lt;span class="pl-k"&gt;auto&lt;/span&gt; print_message = [](&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;auto&lt;/span&gt;&amp;amp;... args) {
  &lt;span class="pl-c1"&gt;fmt::print&lt;/span&gt;(args...);
};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Capture and store arguments:&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; args = capture(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{} {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do formatting:&lt;/span&gt;
&lt;span class="pl-en"&gt;std::apply&lt;/span&gt;(print_message, args);&lt;/pre&gt;&lt;/div&gt;
&lt;a name="user-content-id5"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;{fmt} is distributed under the MIT &lt;a href="https://github.com/fmtlib/fmt/blob/master/LICENSE.rst"&gt;license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://fmt.dev/latest/syntax.html" rel="nofollow"&gt;Format String Syntax&lt;/a&gt;
section in the documentation is based on the one from Python &lt;a href="https://docs.python.org/3/library/string.html#module-string" rel="nofollow"&gt;string module
documentation&lt;/a&gt;
adapted for the current library. For this reason the documentation is
distributed under the Python Software Foundation license available in
&lt;a href="https://raw.github.com/fmtlib/fmt/master/doc/python-license.txt"&gt;doc/python-license.txt&lt;/a&gt;.
It only applies if you distribute the documentation of fmt.&lt;/p&gt;
&lt;a name="user-content-acknowledgments"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h2&gt;
&lt;p&gt;The {fmt} library is maintained by Victor Zverovich (&lt;a href="https://github.com/vitaut"&gt;vitaut&lt;/a&gt;) and Jonathan Müller (&lt;a href="https://github.com/foonathan"&gt;foonathan&lt;/a&gt;) with contributions from many other people.
See &lt;a href="https://github.com/fmtlib/fmt/graphs/contributors"&gt;Contributors&lt;/a&gt; and
&lt;a href="https://github.com/fmtlib/fmt/releases"&gt;Releases&lt;/a&gt; for some of the names.
Let us know if your contribution is not listed or mentioned incorrectly and
we'll make it right.&lt;/p&gt;
&lt;p&gt;The benchmark section of this readme file and the performance tests are taken
from the excellent &lt;a href="https://github.com/c42f/tinyformat"&gt;tinyformat&lt;/a&gt; library
written by Chris Foster.  Boost Format library is acknowledged transitively
since it had some influence on tinyformat.
Some ideas used in the implementation are borrowed from &lt;a href="http://loki-lib.sourceforge.net/" rel="nofollow"&gt;Loki&lt;/a&gt; SafeFormat and &lt;a href="https://clang.llvm.org/doxygen/classclang_1_1Diagnostic.html" rel="nofollow"&gt;Diagnostic API&lt;/a&gt; in
&lt;a href="https://clang.llvm.org/" rel="nofollow"&gt;Clang&lt;/a&gt;.
Format string syntax and the documentation are based on Python's &lt;a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"&gt;str.format&lt;/a&gt;.
Thanks &lt;a href="https://github.com/softwaredoug"&gt;Doug Turnbull&lt;/a&gt; for his valuable
comments and contribution to the design of the type-safe API and
&lt;a href="https://github.com/gcflymoto"&gt;Gregory Czajkowski&lt;/a&gt; for implementing binary
formatting. Thanks &lt;a href="https://github.com/ruslo"&gt;Ruslan Baratov&lt;/a&gt; for comprehensive
&lt;a href="https://github.com/ruslo/int-dec-format-tests"&gt;comparison of integer formatting algorithms&lt;/a&gt;
and useful comments regarding performance, &lt;a href="https://github.com/localvoid"&gt;Boris Kaul&lt;/a&gt; for
&lt;a href="https://github.com/localvoid/cxx-benchmark-count-digits"&gt;C++ counting digits benchmark&lt;/a&gt;.
Thanks to &lt;a href="https://github.com/CarterLi"&gt;CarterLi&lt;/a&gt; for contributing various
improvements to the code.&lt;/p&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>fmtlib</author><guid isPermaLink="false">https://github.com/fmtlib/fmt</guid><pubDate>Thu, 26 Dec 2019 00:22:00 GMT</pubDate></item><item><title>facebook/rocksdb #23 in C++, This month</title><link>https://github.com/facebook/rocksdb</link><description>&lt;p&gt;&lt;i&gt;A library that provides an embeddable, persistent key-value store for fast storage.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-rocksdb-a-persistent-key-value-store-for-flash-and-ram-storage" class="anchor" aria-hidden="true" href="#rocksdb-a-persistent-key-value-store-for-flash-and-ram-storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RocksDB: A Persistent Key-Value Store for Flash and RAM Storage&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/facebook/rocksdb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/92609d436c14befa3b206de13176fa555d0ce639/68747470733a2f2f7472617669732d63692e6f72672f66616365626f6f6b2f726f636b7364622e7376673f6272616e63683d6d6173746572" alt="Linux/Mac Build Status" data-canonical-src="https://travis-ci.org/facebook/rocksdb.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/Facebook/rocksdb/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ddc311ddf956b1aa3b19aa4ccac723a1b63c33a1/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f666267667530736f336166636e6f37382f6272616e63682f6d61737465723f7376673d74727565" alt="Windows Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/fbgfu0so3afcno78/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://140.211.168.68:8080/job/Rocksdb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cec66a4dd3c4f4d5b6d47903fa96039406e3b089/687474703a2f2f3134302e3231312e3136382e36383a383038302f6275696c645374617475732f69636f6e3f6a6f623d526f636b736462" alt="PPC64le Build Status" data-canonical-src="http://140.211.168.68:8080/buildStatus/icon?job=Rocksdb" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RocksDB is developed and maintained by Facebook Database Engineering Team.
It is built on earlier work on &lt;a href="https://github.com/google/leveldb"&gt;LevelDB&lt;/a&gt; by Sanjay Ghemawat (&lt;a href="mailto:sanjay@google.com"&gt;sanjay@google.com&lt;/a&gt;)
and Jeff Dean (&lt;a href="mailto:jeff@google.com"&gt;jeff@google.com&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;This code is a library that forms the core building block for a fast
key-value server, especially suited for storing data on flash drives.
It has a Log-Structured-Merge-Database (LSM) design with flexible tradeoffs
between Write-Amplification-Factor (WAF), Read-Amplification-Factor (RAF)
and Space-Amplification-Factor (SAF). It has multi-threaded compactions,
making it especially suitable for storing multiple terabytes of data in a
single database.&lt;/p&gt;
&lt;p&gt;Start with example usage here: &lt;a href="https://github.com/facebook/rocksdb/tree/master/examples"&gt;https://github.com/facebook/rocksdb/tree/master/examples&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/facebook/rocksdb/wiki"&gt;github wiki&lt;/a&gt; for more explanation.&lt;/p&gt;
&lt;p&gt;The public interface is in &lt;code&gt;include/&lt;/code&gt;.  Callers should not include or
rely on the details of any other header files in this package.  Those
internal APIs may be changed without warning.&lt;/p&gt;
&lt;p&gt;Design discussions are conducted in &lt;a href="https://www.facebook.com/groups/rocksdb.dev/" rel="nofollow"&gt;https://www.facebook.com/groups/rocksdb.dev/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;RocksDB is dual-licensed under both the GPLv2 (found in the COPYING file in the root directory) and Apache 2.0 License (found in the LICENSE.Apache file in the root directory).  You may select, at your option, one of the above-listed licenses.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/rocksdb</guid><pubDate>Thu, 26 Dec 2019 00:23:00 GMT</pubDate></item><item><title>NVIDIA/TensorRT #24 in C++, This month</title><link>https://github.com/NVIDIA/TensorRT</link><description>&lt;p&gt;&lt;i&gt;TensorRT is a C++ library for high performance inference on NVIDIA GPUs and deep learning accelerators.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-developer-guide/index.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9aee5ab9338980085c2982c83699938b091a464d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f54656e736f7252542d646f63756d656e746174696f6e2d627269676874677265656e2e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/TensorRT-documentation-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-tensorrt-open-source-software" class="anchor" aria-hidden="true" href="#tensorrt-open-source-software"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TensorRT Open Source Software&lt;/h1&gt;
&lt;p&gt;This repository contains the Open Source Software (OSS) components of NVIDIA TensorRT. Included are the sources for TensorRT plugins and parsers (Caffe and ONNX), as well as sample applications demonstrating usage and capabilities of the TensorRT platform.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;To build the TensorRT OSS components, ensure you meet the following package requirements:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;System Packages&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developer.nvidia.com/cuda-toolkit" rel="nofollow"&gt;CUDA&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recommended versions:&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/cuda-10.2-download-archive-base" rel="nofollow"&gt;cuda-10.2&lt;/a&gt; + cuDNN-7.6&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/cuda-10.0-download-archive" rel="nofollow"&gt;cuda-10.0&lt;/a&gt; + cuDNN-7.6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ftp.gnu.org/gnu/make/" rel="nofollow"&gt;GNU Make&lt;/a&gt; &amp;gt;= v4.1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/Kitware/CMake/releases"&gt;CMake&lt;/a&gt; &amp;gt;= v3.13&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.python.org/downloads/" rel="nofollow"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recommended versions:&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/release/python-2715/" rel="nofollow"&gt;Python2&lt;/a&gt; &amp;gt;= v2.7.15&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/release/python-365/" rel="nofollow"&gt;Python3&lt;/a&gt; &amp;gt;= v3.6.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/pip/#history" rel="nofollow"&gt;PIP&lt;/a&gt; &amp;gt;= v19.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Essential libraries and utilities&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/downloads" rel="nofollow"&gt;Git&lt;/a&gt;, &lt;a href="https://www.freedesktop.org/wiki/Software/pkg-config/" rel="nofollow"&gt;pkg-config&lt;/a&gt;, &lt;a href="https://www.gnu.org/software/wget/faq.html#download" rel="nofollow"&gt;Wget&lt;/a&gt;, &lt;a href="https://zlib.net/" rel="nofollow"&gt;Zlib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cross compilation for Jetson platforms requires JetPack's host component installation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/embedded/jetpack" rel="nofollow"&gt;JetPack&lt;/a&gt; &amp;gt;= 4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Optional Packages&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Containerized builds&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/install/" rel="nofollow"&gt;Docker&lt;/a&gt; &amp;gt;= 1.12&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NVIDIA/nvidia-docker"&gt;NVIDIA Docker&lt;/a&gt; &amp;gt;= 2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code formatting tools&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://clang.llvm.org/docs/ClangFormat.html" rel="nofollow"&gt;Clang-format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/llvm-mirror/clang/blob/master/tools/clang-format/git-clang-format"&gt;Git-clang-format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TensorRT Release&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/nvidia-tensorrt-download" rel="nofollow"&gt;TensorRT&lt;/a&gt; v7.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NOTE: Along with the TensorRT OSS components, the following source packages will also be downloaded, and they are not required to be installed on the system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/onnx/onnx-tensorrt"&gt;ONNX-TensorRT&lt;/a&gt; v7.0&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nvlabs.github.io/cub/" rel="nofollow"&gt;CUB&lt;/a&gt; v1.8.0&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/protocolbuffers/protobuf.git"&gt;Protobuf&lt;/a&gt; v3.8.x&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-downloading-the-tensorrt-components" class="anchor" aria-hidden="true" href="#downloading-the-tensorrt-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading The TensorRT Components&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a id="user-content-download-tensorrt-oss-sources" class="anchor" aria-hidden="true" href="#download-tensorrt-oss-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download TensorRT OSS sources.&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone -b master https://github.com/nvidia/TensorRT TensorRT -b release/7.0
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; TensorRT
git submodule update --init --recursive
&lt;span class="pl-k"&gt;export&lt;/span&gt; TRT_SOURCE=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a id="user-content-download-the-tensorrt-binary-release" class="anchor" aria-hidden="true" href="#download-the-tensorrt-binary-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download the TensorRT binary release.&lt;/h4&gt;
&lt;p&gt;To build the TensorRT OSS, obtain the corresponding TensorRT 7.0 binary release from &lt;a href="https://developer.nvidia.com/nvidia-tensorrt-7x-download" rel="nofollow"&gt;NVidia Developer Zone&lt;/a&gt;. For a list of key features, known and fixed issues, refer to the &lt;a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-release-notes/tensorrt-7.html#tensorrt-7" rel="nofollow"&gt;TensorRT 7.0 Release Notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example: Ubuntu 18.04 with cuda-10.2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download and extract the latest &lt;em&gt;TensorRT 7.0 GA package for Ubuntu 18.04 and CUDA 10.2&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/Downloads
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download TensorRT-7.0.0.11.Ubuntu-18.04.x86_64-gnu.cuda-10.2.cudnn7.6.tar.gz&lt;/span&gt;
tar -xvzf TensorRT-7.0.0.11.Ubuntu-18.04.x86_64-gnu.cuda-10.2.cudnn7.6.tar.gz
&lt;span class="pl-k"&gt;export&lt;/span&gt; TRT_RELEASE=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;/TensorRT-7.0.0.11
&lt;span class="pl-k"&gt;export&lt;/span&gt; LD_LIBRARY_PATH=&lt;span class="pl-smi"&gt;$LD_LIBRARY_PATH&lt;/span&gt;:&lt;span class="pl-smi"&gt;$TRT_RELEASE&lt;/span&gt;/lib&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example: CentOS/RedHat 7 with cuda-10.0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download and extract the &lt;em&gt;TensorRT 7.0 GA for CentOS/RedHat 7 and CUDA 10.0 tar package&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/Downloads
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download TensorRT-7.0.0.11.CentOS-7.6.x86_64-gnu.cuda-10.0.cudnn7.6.tar.gz&lt;/span&gt;
tar -xvzf TensorRT-7.0.0.11.CentOS-7.6.x86_64-gnu.cuda-10.0.cudnn7.6.tar.gz
&lt;span class="pl-k"&gt;export&lt;/span&gt; TRT_RELEASE=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;/TensorRT-7.0.0.11
&lt;span class="pl-k"&gt;export&lt;/span&gt; LD_LIBRARY_PATH=&lt;span class="pl-smi"&gt;$LD_LIBRARY_PATH&lt;/span&gt;:&lt;span class="pl-smi"&gt;$TRT_RELEASE&lt;/span&gt;/lib&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a id="user-content-download-jetpack-packages-for-cross-compilationoptional" class="anchor" aria-hidden="true" href="#download-jetpack-packages-for-cross-compilationoptional"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download JetPack packages for cross-compilation.[OPTIONAL]&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Using the SDK manager, download the host componets of the PDK version or Jetpack specified in the name of the Dockerfile. To do this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[&lt;strong&gt;SDK Manager Step 01&lt;/strong&gt;] Log into the SDK manager&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;SDK Manager Step 01&lt;/strong&gt;] Select the correct platform and Target OS System  (should be corresponding to the name of the Dockerfile you are building (e.g. Jetson AGX Xavier, &lt;code&gt;Linux Jetpack 4.2.1&lt;/code&gt;), then click &lt;code&gt;Continue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;SDK Manager Step 02&lt;/strong&gt;] Under &lt;code&gt;Download &amp;amp; Install Options&lt;/code&gt; make note of or change the download folder &lt;strong&gt;and Select Download now. Install later.&lt;/strong&gt; then agree to the license terms and click &lt;code&gt;Continue&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should now have all expected files to build the container. Move these into the &lt;code&gt;docker/jetpack_files&lt;/code&gt; folder.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-the-build-environment" class="anchor" aria-hidden="true" href="#setting-up-the-build-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Up The Build Environment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install the &lt;em&gt;System Packages&lt;/em&gt; list of components in the &lt;em&gt;Prerequisites&lt;/em&gt; section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alternatively, use the build containers as described below:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a id="user-content-generate-the-tensorrt-build-container" class="anchor" aria-hidden="true" href="#generate-the-tensorrt-build-container"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate the TensorRT build container.&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The docker container can be built using the included Dockerfile. The build container is configured with the environment and packages required for building TensorRT OSS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example: Ubuntu 18.04 with cuda-10.2&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker build -f docker/ubuntu.Dockerfile --build-arg UBUNTU_VERSION=18.04 --build-arg CUDA_VERSION=10.2 --tag=tensorrt-ubuntu &lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example: CentOS/RedHat 7 with cuda-10.0&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker build -f docker/centos.Dockerfile --build-arg CENTOS_VERSION=7 --build-arg CUDA_VERSION=10.0 --tag=tensorrt-centos &lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example: Cross compile for JetPack 4.2.1 with cuda-10.0&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker build -f docker/ubuntu-cross-aarch64.Dockerfile --build-arg UBUNTU_VERSION=18.04 --build-arg CUDA_VERSION=10.0 --tag tensorrt-ubuntu-aarch64 &lt;span class="pl-c1"&gt;.&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a id="user-content-launch-the-tensorrt-build-container" class="anchor" aria-hidden="true" href="#launch-the-tensorrt-build-container"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Launch the TensorRT build container.&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -v &lt;span class="pl-smi"&gt;$TRT_RELEASE&lt;/span&gt;:/tensorrt -v &lt;span class="pl-smi"&gt;$TRT_SOURCE&lt;/span&gt;:/workspace/TensorRT -it tensorrt-ubuntu:latest&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: To run TensorRT/CUDA programs within the build container, install &lt;a href="#prerequisites"&gt;nvidia-docker&lt;/a&gt;. Replace the &lt;code&gt;docker run&lt;/code&gt; command with &lt;code&gt;nvidia-docker run&lt;/code&gt; or &lt;code&gt;docker run --runtime=nvidia&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-tensorrt-oss-components" class="anchor" aria-hidden="true" href="#building-the-tensorrt-oss-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building The TensorRT OSS Components&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Generate Makefiles and build.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-smi"&gt;$TRT_SOURCE&lt;/span&gt;
 mkdir -p build &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
 cmake .. -DTRT_LIB_DIR=&lt;span class="pl-smi"&gt;$TRT_RELEASE&lt;/span&gt;/lib -DTRT_BIN_DIR=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;/out
 make -j&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;nproc&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The default CUDA version used by CMake is 10.2. To override this, for example to 10.0, append &lt;code&gt;-DCUDA_VERSION=10.0&lt;/code&gt; to the cmake command.&lt;/li&gt;
&lt;li&gt;Samples may fail to link on CentOS7. To work around this create the following symbolic link:
&lt;code&gt;ln -s $TRT_BIN_DIR/libnvinfer_plugin.so $TRT_BIN_DIR/libnvinfer_plugin.so.7&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;The required CMake arguments are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;TRT_LIB_DIR&lt;/code&gt;: Path to the TensorRT installation directory containing libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;TRT_BIN_DIR&lt;/code&gt;: Output directory where generated build artifacts will be copied.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following CMake build parameters are &lt;em&gt;optional&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;: Specify if binaries generated are for release or debug (contain debug symbols). Values consists of [&lt;code&gt;Release&lt;/code&gt;] | &lt;code&gt;Debug&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CUDA_VERISON&lt;/code&gt;: The version of CUDA to target, for example [&lt;code&gt;10.2&lt;/code&gt;].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CUDNN_VERSION&lt;/code&gt;: The version of cuDNN to target, for example [&lt;code&gt;7.6&lt;/code&gt;].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PROTOBUF_VERSION&lt;/code&gt;:  The version of Protobuf to use, for example [&lt;code&gt;3.8.x&lt;/code&gt;]. Note: Changing this will not configure CMake to use a system version of Protobuf, it will configure CMake to download and try building that version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;: The path to a toolchain file for cross compilation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BUILD_PARSERS&lt;/code&gt;: Specify if the parsers should be built, for example [&lt;code&gt;ON&lt;/code&gt;] | &lt;code&gt;OFF&lt;/code&gt;.  If turned OFF, CMake will try to find precompiled versions of the parser libraries to use in compiling samples. First in &lt;code&gt;${TRT_LIB_DIR}&lt;/code&gt;, then on the system. If the build type is Debug, then it will prefer debug builds of the libraries before release versions if available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BUILD_PLUGINS&lt;/code&gt;: Specify if the plugins should be built, for example [&lt;code&gt;ON&lt;/code&gt;] | &lt;code&gt;OFF&lt;/code&gt;. If turned OFF, CMake will try to find a precompiled version of the plugin library to use in compiling samples. First in &lt;code&gt;${TRT_LIB_DIR}&lt;/code&gt;, then on the system. If the build type is Debug, then it will prefer debug builds of the libraries before release versions if available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BUILD_SAMPLES&lt;/code&gt;: Specify if the samples should be built, for example [&lt;code&gt;ON&lt;/code&gt;] | &lt;code&gt;OFF&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other build options with limited applicability:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NVINTERNAL&lt;/code&gt;: Used by TensorRT team for internal builds. Values consists of [&lt;code&gt;OFF&lt;/code&gt;] | &lt;code&gt;ON&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PROTOBUF_INTERNAL_VERSION&lt;/code&gt;: The version of protobuf to use, for example [&lt;code&gt;10.0&lt;/code&gt;].  Only applicable if &lt;code&gt;NVINTERNAL&lt;/code&gt; is also enabled.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NVPARTNER&lt;/code&gt;: For use by NVIDIA partners with exclusive source access.  Values consists of [&lt;code&gt;OFF&lt;/code&gt;] | &lt;code&gt;ON&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CUB_VERSION&lt;/code&gt;: The version of CUB to use, for example [&lt;code&gt;1.8.0&lt;/code&gt;].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GPU_ARCHS&lt;/code&gt;: GPU (SM) architectures to target. By default we generate CUDA code for all major SMs. Specific SM versions can be specified here as a quoted space-separated list to reduce compilation time and binary size. Table of compute capabilities of NVIDIA GPUs can be found &lt;a href="https://developer.nvidia.com/cuda-gpus" rel="nofollow"&gt;here&lt;/a&gt;. Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Titan V: &lt;code&gt;-DGPU_ARCHS="70"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Tesla V100: &lt;code&gt;-DGPU_ARCHS="70"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;GeForce RTX 2080: &lt;code&gt;-DGPU_ARCHS="75"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Tesla T4: &lt;code&gt;-DGPU_ARCHS="75"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Multiple SMs: &lt;code&gt;-DGPU_ARCHS="70 75"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-install-the-tensorrt-oss-components-optional" class="anchor" aria-hidden="true" href="#install-the-tensorrt-oss-components-optional"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install the TensorRT OSS Components [Optional]&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Copy the build artifacts into the TensorRT installation directory, updating the installation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TensorRT installation directory is determined as &lt;code&gt;$TRT_LIB_DIR/..&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installation might require superuser privileges depending on the path and permissions of files being replaced.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installation is not supported in cross compilation scenario. Please copy the result files from &lt;code&gt;build/out&lt;/code&gt; folder into the target device.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo make install&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verify the TensorRT samples have been installed correctly.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-smi"&gt;$TRT_LIB_DIR&lt;/span&gt;/../bin/
 ./sample_googlenet&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the sample was installed correctly, the following information will be printed out in the terminal.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; [08/23/2019-22:08:57] [I] Building and running a GPU inference engine &lt;span class="pl-k"&gt;for&lt;/span&gt; GoogleNet
 [08/23/2019-22:08:59] [I] [TRT] Some tactics &lt;span class="pl-k"&gt;do&lt;/span&gt; not have sufficient workspace memory to run. Increasing workspace size may increase performance, please check verbose output.
 [08/23/2019-22:09:05] [I] [TRT] Detected 1 inputs and 1 output network tensors.
 [08/23/2019-22:09:05] [I] Ran /tensorrt/bin/sample_googlenet with: 
 [08/23/2019-22:09:05] [I] Input(s): data 
 [08/23/2019-22:09:05] [I] Output(s): prob 
 &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&lt;/span&gt; PASSED TensorRT.sample_googlenet &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; /tensorrt/bin/sample_googlenet&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-useful-resources" class="anchor" aria-hidden="true" href="#useful-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Resources&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-tensorrt" class="anchor" aria-hidden="true" href="#tensorrt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TensorRT&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/tensorrt" rel="nofollow"&gt;TensorRT Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-developer-guide/index.html" rel="nofollow"&gt;TensorRT Developer Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-sample-support-guide/index.html" rel="nofollow"&gt;TensorRT Sample Support Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devtalk.nvidia.com/default/board/304/tensorrt/" rel="nofollow"&gt;TensorRT Discussion Forums&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-tensorrt-70" class="anchor" aria-hidden="true" href="#tensorrt-70"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TensorRT 7.0&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;See &lt;a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-release-notes/tensorrt-7.html#tensorrt-7" rel="nofollow"&gt;Release Notes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NVIDIA</author><guid isPermaLink="false">https://github.com/NVIDIA/TensorRT</guid><pubDate>Thu, 26 Dec 2019 00:24:00 GMT</pubDate></item><item><title>fritzing/fritzing-app #25 in C++, This month</title><link>https://github.com/fritzing/fritzing-app</link><description>&lt;p&gt;&lt;i&gt;Fritzing desktop application&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fritzing" class="anchor" aria-hidden="true" href="#fritzing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fritzing&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Branch&lt;/th&gt;
&lt;th&gt;Badge&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;master&lt;/td&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/fritzing/fritzing-app" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1fd9313a2452c9be2514f0a6024b4bcbcb24425e/68747470733a2f2f7472617669732d63692e6f72672f667269747a696e672f667269747a696e672d6170702e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/fritzing/fritzing-app.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;develop&lt;/td&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/fritzing/fritzing-app" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/930e88e0840610a1b5253c9cb9e9f639ac79b24e/68747470733a2f2f7472617669732d63692e6f72672f667269747a696e672f667269747a696e672d6170702e7376673f6272616e63683d646576656c6f70" alt="Build Status" data-canonical-src="https://travis-ci.org/fritzing/fritzing-app.svg?branch=develop" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The Fritzing application is an Electronic Design Automation software with a low entry barrier, suited for the needs of makers and hobbyists. It offers a unique real-life "breadboard" view, and a parts library with many commonly used high-level components. Fritzing makes it very easy to communicate about circuits, as well as to turn them into PCB layouts ready for production. It is particularly popular among Arduino and Raspberry Pi users, and is widely used in education and creative tinkering.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For more information on Fritzing and its related activities, visit &lt;a href="http://fritzing.org" rel="nofollow"&gt;http://fritzing.org&lt;/a&gt;. There you can also &lt;a href="http://fritzing.org/download" rel="nofollow"&gt;download&lt;/a&gt; the latest releases for all platforms and get help on getting started.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To report a problem or suggest improvements, use the &lt;a href="https://github.com/fritzing/fritzing-app/issues"&gt;issue tracker&lt;/a&gt; or the &lt;a href="http://forum.fritzing.org" rel="nofollow"&gt;user forum&lt;/a&gt;.
Please provide steps, what operating system you are on, including the version. Add screenshots or copies of error messages, describe what behavior you saw and what you expected.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you would like to help with the development, please take a look at those labels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fritzing/fritzing-app/labels/easy%20start"&gt;&lt;img src="https://camo.githubusercontent.com/8f97a25d6d5ac395f7583fa0c84180235f3bf42c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d6561737925323073746172742d253233333341414646" alt="label: easy start" data-canonical-src="https://img.shields.io/badge/-easy%20start-%2333AAFF" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fritzing/fritzing-app/labels/challenging%20start"&gt;&lt;img src="https://camo.githubusercontent.com/803ab054e1478ed597718bf8a947fbfad56e7f02/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d6368616c6c656e67696e6725323073746172742d253233353530304545" alt="label: challenging start" data-canonical-src="https://img.shields.io/badge/-challenging%20start-%235500EE" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of those don't need C++ skills, like reproducing an issue on a certain platform, or verifying translations of languages we don't speak. If there is something for you, you might want to check the &lt;a href="https://github.com/fritzing/fritzing-app/wiki"&gt;developer instructions&lt;/a&gt; next. This includes information about how to compile and run the Fritzing app.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-structure" class="anchor" aria-hidden="true" href="#project-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Structure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;help&lt;/strong&gt; - End-user documentation included with the app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;parts&lt;/strong&gt; - All the part definitions, including meta data (.fzp) and graphics (.svg), as well as some utility tools. They are kept in a separate repository at &lt;a href="http://github.com/fritzing/fritzing-parts"&gt;https://github.com/fritzing/fritzing-parts&lt;/a&gt; and only linked from here.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;pri&lt;/strong&gt; - Submodule definitions for Qt&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;resources&lt;/strong&gt; - Binaries and definitions that are supposed not to be touched by users, such as fonts, images, special parts, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;sketches&lt;/strong&gt; - Example circuits/sketches shipped with the application&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;src&lt;/strong&gt; - Application logic!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;tools&lt;/strong&gt; - Utility tools for making releases, converting parts, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;translations&lt;/strong&gt; - Language translations&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The Fritzing app was maintained by the Friends-of-Fritzing e.V., a non-profit foundation based in Berlin, Germany. The project has grown out of a state-funded research project at the &lt;a href="http://idl.fh-potsdam.de" rel="nofollow"&gt;Interaction Design Lab&lt;/a&gt; at &lt;a href="http://fh-potsdam.de" rel="nofollow"&gt;Potsdam University of Applied Sciences&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The founding team consists of Prof. Reto Wettach, André Knörig, Jonathan Cohen, and Stefan Hermann. Many &lt;a href="http://fritzing.org/about/people/" rel="nofollow"&gt;fantastic people&lt;/a&gt; have contributed to it over the years.&lt;/p&gt;
&lt;p&gt;Since 2019, the project is maintained by Kjell Morgenstern, with great support from Peter Van Epp, André Knörig, and AISLER.&lt;/p&gt;
&lt;p&gt;The Fritzing app is written on top of the &lt;a href="http://qt-project.org" rel="nofollow"&gt;Qt cross-platform framework&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h2&gt;
&lt;p&gt;The source code of Fritzing is under GNU GPL v3, the documentation and part designs under Creative Commons Attribution-ShareALike 3.0 Unported. The full texts of these licenses are shipped with this download.&lt;/p&gt;
&lt;p&gt;This means that you can create your own variation of Fritzing, as long as you credit us and also publish it under GPL. Similarly, you may re-publish our documentation, as long as you credit us, and publish it under the same
license. You may publish circuits and diagrams that you create with Fritzing and that use our graphics, again as long as you credit us, and
publish your works under the same license.  A credit can be as simple as "this image was created with Fritzing."&lt;/p&gt;
&lt;p&gt;Lookup &lt;a href="http://fritzing.org/faq/" rel="nofollow"&gt;our FAQs&lt;/a&gt; for more details on licensing.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fritzing</author><guid isPermaLink="false">https://github.com/fritzing/fritzing-app</guid><pubDate>Thu, 26 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>