<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: CMake, This month</title><link>https://github.com/trending/cmake?since=monthly</link><description>The top repositories on GitHub for cmake, measured monthly</description><pubDate>Sun, 12 Jan 2020 01:10:20 GMT</pubDate><lastBuildDate>Sun, 12 Jan 2020 01:10:20 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>huchunxu/ros_21_tutorials #1 in CMake, This month</title><link>https://github.com/huchunxu/ros_21_tutorials</link><description>&lt;p&gt;&lt;i&gt;《古月 · ROS入门21讲》课件&amp;源码&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/poster.png"&gt;&lt;img src="docs/poster.png" alt="poster" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="docs/schedule.jpg"&gt;&lt;img src="docs/schedule.jpg" alt="schedule" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>huchunxu</author><guid isPermaLink="false">https://github.com/huchunxu/ros_21_tutorials</guid><pubDate>Sun, 12 Jan 2020 00:01:00 GMT</pubDate></item><item><title>KiCad/kicad-footprints #2 in CMake, This month</title><link>https://github.com/KiCad/kicad-footprints</link><description>&lt;p&gt;&lt;i&gt;Official KiCad Footprint Libraries for Kicad version 5&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kicad-footprint-libraries" class="anchor" aria-hidden="true" href="#kicad-footprint-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KiCad Footprint Libraries&lt;/h1&gt;
&lt;p&gt;This repository contains the official KiCad footprint libraries.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The libraries in this repository are intended to be used with KiCad version 5 or with a nightly that supports rounded rectangle and polygon pads.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Each footprint library is stored as a directory with the &lt;code&gt;.pretty&lt;/code&gt; suffix. The footprint files are &lt;code&gt;.kicad_mod&lt;/code&gt; files within&lt;/p&gt;
&lt;p&gt;Weekly builds can be found at &lt;a href="https://kicad.github.io/footprints" rel="nofollow"&gt;https://kicad.github.io/footprints&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Contribution guidelines can be found at &lt;a href="http://kicad-pcb.org/libraries/contribute" rel="nofollow"&gt;http://kicad-pcb.org/libraries/contribute&lt;/a&gt;
The library convention can be found at &lt;a href="http://kicad-pcb.org/libraries/klc/" rel="nofollow"&gt;http://kicad-pcb.org/libraries/klc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Other KiCad library repositories are located:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Symbols:&lt;/strong&gt; &lt;a href="https://github.com/kicad/kicad-symbols"&gt;https://github.com/kicad/kicad-symbols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3D Models:&lt;/strong&gt; &lt;a href="https://github.com/kicad/kicad-packages3d"&gt;https://github.com/kicad/kicad-packages3d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Templates:&lt;/strong&gt; &lt;a href="https://github.com/kicad/kicad-templates"&gt;https://github.com/kicad/kicad-templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>KiCad</author><guid isPermaLink="false">https://github.com/KiCad/kicad-footprints</guid><pubDate>Sun, 12 Jan 2020 00:02:00 GMT</pubDate></item><item><title>wzpan/cmake-demo #3 in CMake, This month</title><link>https://github.com/wzpan/cmake-demo</link><description>&lt;p&gt;&lt;i&gt;《CMake入门实战》源码&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cmake-demo" class="anchor" aria-hidden="true" href="#cmake-demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMake-Demo&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://hahack.com/codes/cmake" rel="nofollow"&gt;CMake 入门实战&lt;/a&gt; 的源代码。&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>wzpan</author><guid isPermaLink="false">https://github.com/wzpan/cmake-demo</guid><pubDate>Sun, 12 Jan 2020 00:03:00 GMT</pubDate></item><item><title>ttroy50/cmake-examples #4 in CMake, This month</title><link>https://github.com/ttroy50/cmake-examples</link><description>&lt;p&gt;&lt;i&gt;Useful CMake Examples&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="adoc" data-path="README.adoc"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cmake-examples" class="anchor" aria-hidden="true" href="#cmake-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMake Examples&lt;/h1&gt;
&lt;div id="user-content-preamble"&gt;
&lt;div&gt;
&lt;div id="user-content-toc"&gt;
&lt;div id="user-content-toctitle"&gt;Table of Contents&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation-on-ubuntu"&gt;Installation on Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-links"&gt;Other Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id="user-content-introduction"&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt; is a cross-platform open-source meta-build system which
can build, test and package software. It can be used to support multiple native build environments including
make, Apple’s xcode and Microsoft Visual Studio.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;This repository includes some example modern CMake configurations which I have picked up
when exploring it’s usage for various projects. The examples are laid out in a tutorial like format.
The first examples are very basic and slowly increase in complexity drawing on previous examples to show
more complex use cases.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;These examples have been tested on Ubuntu 16.04 but should work under any Linux system that supports CMake v3.5+.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;This branch works with the CMake version 3.5 onwards.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For examples that use CMake version 2.x see the branch &lt;a href="https://github.com/ttroy50/cmake-examples/tree/v2-style-includes"&gt;v2-style-includes&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For examples that use CMake version 3.0 see the branch &lt;a href="https://github.com/ttroy50/cmake-examples/tree/v3.0-minimum"&gt;v3.0-minimum&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;&lt;span&gt;&lt;a href="https://travis-ci.org/ttroy50/cmake-examples" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34b7287eb555a94df13b32d20dcf33fd88bcb0fa/68747470733a2f2f7472617669732d63692e6f72672f7474726f7935302f636d616b652d6578616d706c65732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ttroy50/cmake-examples.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="user-content-requirements"&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h1&gt;
&lt;div&gt;
&lt;p&gt;The basic requirements for most examples are:&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CMake v3.5+&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A c++ compiler (defaults to gcc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;make&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id="user-content-installation-on-ubuntu"&gt;&lt;a id="user-content-installation-on-ubuntu" class="anchor" aria-hidden="true" href="#installation-on-ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation on Ubuntu&lt;/h2&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;The easiest way to install the above on Ubuntu is as follows&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ sudo apt-get install build-essential
$ sudo apt-get install cmake&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Some specific examples may require other tools including:&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.boost.org/" rel="nofollow"&gt;boost&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;$ sudo apt-get install libboost-all-dev&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/google/protobuf"&gt;protobuf&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;$ sudo apt-get install libprotobuf-dev
$ sudo apt-get install protobuf-compiler&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://cppcheck.sourceforge.net/" rel="nofollow"&gt;cppcheck&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;$ sudo apt-get install cppcheck&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://clang.llvm.org/" rel="nofollow"&gt;clang&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;$ sudo apt-get install clang-3.6&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ninja-build.org/" rel="nofollow"&gt;ninja&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;$ sudo apt-get install ninja-build&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://conan.io" rel="nofollow"&gt;conan&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;$ sudo apt-get install python3 python3-pip
$ sudo pip3 install conan&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id="user-content-docker"&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h2&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;Docker containers with all requirements and various versions of CMake are generated to help make testing the examples easier. These are available from the docker hub repository &lt;a href="https://hub.docker.com/r/matrim/cmake-examples/" rel="nofollow"&gt;matrim/cmake-examples&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;To build the full set of cmake-examples test cases you can run:&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -it matrim/cmake-examples:3.5.1
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;
git clone https://github.com/ttroy50/cmake-examples.git code
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; code
./test.sh&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;For more details on build and running the docker containers &lt;a href="here"&gt;dockerfiles&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id="user-content-other-links"&gt;&lt;a id="user-content-other-links" class="anchor" aria-hidden="true" href="#other-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Links&lt;/h1&gt;
&lt;div&gt;
&lt;p&gt;There are many CMake tutorials and examples online. The list below includes links
to some of these which I have found helpful in my CMake journey.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20160314094326/https://www.kdab.com/~stephen/moderncmake.pdf" rel="nofollow"&gt;Modern CMake Slides&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://rix0r.nl/blog/2015/08/13/cmake-guide/" rel="nofollow"&gt;rix0r Modern CMake Blog&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://cmake.org/cmake-tutorial/" rel="nofollow"&gt;Official CMake Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gitlab.kitware.com/cmake/community/wikis/home" rel="nofollow"&gt;Official CMake Wiki&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/Useful-Variables" rel="nofollow"&gt;CMake Useful Variables&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://derekmolloy.ie/hello-world-introductions-to-cmake/" rel="nofollow"&gt;Derek Molloy - Intro to CMake&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://techminded.net/blog/modular-c-projects-with-cmake.html" rel="nofollow"&gt;Modular C++ Projects&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20190320121339/http://voices.canonical.com/jussi.pakkanen/2013/03/26/a-list-of-common-cmake-antipatterns/" rel="nofollow"&gt;Common CMake Anti-Patterns&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://baptiste-wicht.com/posts/2014/04/install-use-clang-static-analyzer-cmake.html" rel="nofollow"&gt;Using clang static analyser with CMake&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://cmake.org/pipermail/cmake/2011-April/043709.html" rel="nofollow"&gt;Static Analysis with CDash&lt;/a&gt; - Includes some info about using CppCheck with CMake&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://samthursfield.wordpress.com/2015/10/20/some-cmake-tips/" rel="nofollow"&gt;CMake Tips&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.johnlamp.net/cmake-tutorial.html" rel="nofollow"&gt;John Lamp - CMake Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.conan.io" rel="nofollow"&gt;Conan Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;</description><author>ttroy50</author><guid isPermaLink="false">https://github.com/ttroy50/cmake-examples</guid><pubDate>Sun, 12 Jan 2020 00:04:00 GMT</pubDate></item><item><title>KiCad/kicad-packages3D #5 in CMake, This month</title><link>https://github.com/KiCad/kicad-packages3D</link><description>&lt;p&gt;&lt;i&gt;Official KiCad 3D model libraries for rendering and MCAD integration&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kicad-3d-models" class="anchor" aria-hidden="true" href="#kicad-3d-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KiCad 3D Models&lt;/h1&gt;
&lt;p&gt;This repository contains 3D models for rendering and MCAD integration, for use with &lt;a href="http://kicad-pcb.org/" rel="nofollow"&gt;KiCAD EDA&lt;/a&gt; software.
The model needs a mechanical model source (a manually-modelled or script-generated file); its WRL counterpart file must be obtained as a conversion from the MCAD model&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-file-formats" class="anchor" aria-hidden="true" href="#supported-file-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported File Formats&lt;/h2&gt;
&lt;p&gt;The 3D model library supports two file formats:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-step" class="anchor" aria-hidden="true" href="#step"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;STEP&lt;/h3&gt;
&lt;p&gt;STEP files are used for integration with MCAD software packages.&lt;br&gt;
STEP models must be 1:1 in mm, better if the model is a solid single object (a union of parts) for size and loading optimization. KiCad supports STEP file integration and can export board and component models into an integrated STEP file. This file can then be imported by a MCAD package.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-wrl" class="anchor" aria-hidden="true" href="#wrl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WRL&lt;/h3&gt;
&lt;p&gt;WRL files must be exported from its mechanical model counterpart. WRL files are used for photo-realistic rendering using KiCad's raytracing rendering engine. This format supports more complex material properties, allowing various common component materials to be accurately rendered.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-source-files" class="anchor" aria-hidden="true" href="#source-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Files&lt;/h2&gt;
&lt;p&gt;Source files for generated models should be submitted to (&lt;a href="https://github.com/kicad/packages3d-source"&gt;https://github.com/kicad/packages3d-source&lt;/a&gt;). This includes generator scripts, or native model files from source software (e.g. &lt;a href="https://www.freecadweb.org/" rel="nofollow"&gt;FreeCAD&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-preferred-method-to-create-3d-models" class="anchor" aria-hidden="true" href="#preferred-method-to-create-3d-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preferred method to create 3D models&lt;/h2&gt;
&lt;p&gt;The model has to be created in a mechanical program, able to generate STEP export. The model can be created by automatic scripts or manually.
&lt;a href="https://www.freecadweb.org/" rel="nofollow"&gt;FreeCAD&lt;/a&gt; is the preferred software because it is open source, and anyone can rework the model for future improvements, but also other proprietary MCAD software are allowed.
In case the model is generated by scripts, the scripts should be linked to the PR stating sw and version used to run the scripts;
when the model is manually created, the MCAD source file should be added to the PR as well as STEP file.
STEP models should be 1:1 in mm, better if the model is a solid single object (a union of parts) for size and loading optimization;
text is not suggested on models because of size increasing, anyway in case of text the fonts must be licensed free as the word.
WRL models should be exported from its mechanical counterpart and, when possible, have the suggested material properties as in these documents:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Vrml_materials_doc/KiCad_3D-Viewer_component-materials-reference-list_MarioLuzeiro.pdf"&gt;WRL Material Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Vrml_materials_doc/KiCad_3D-Viewer_Illumination_model_and_materials-MarioLuzeiro.pdf"&gt;WRL Illumination model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A simple method to export a fully compliant WRL model from a mechanical STEP model is through &lt;a href="https://sourceforge.net/projects/kicadstepup/" rel="nofollow"&gt;KiCad StepUp&lt;/a&gt;.&lt;br&gt;
A tutorial video can be found &lt;a href="https://youtu.be/O6vr8QFnYGw" rel="nofollow"&gt;here&lt;/a&gt;&lt;br&gt;
A good starting point to learn how to create models by script is this github repo &lt;a href="https://github.com/easyw/kicad-3d-models-in-freecad"&gt;kicad-3d-models-in-freecad&lt;/a&gt;.&lt;br&gt;
The scripts are made in Python and run in FreeCAD with &lt;a href="https://github.com/jmwright/cadquery-freecad-module"&gt;CadQuery module&lt;/a&gt; add-on.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-model-alignment" class="anchor" aria-hidden="true" href="#model-alignment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Alignment&lt;/h3&gt;
&lt;p&gt;The 3D models in this library are aligned with the footprints available in the KiCad footprint libraries.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-model-scaling" class="anchor" aria-hidden="true" href="#model-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Scaling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The STEP file format includes model scaling information, and so the 3D model scaling parameter must always be set to 1:1 in mm&lt;/li&gt;
&lt;li&gt;The WRL file format does not specify absolute dimensions. KiCad normalizes WRL model dimension to units of &lt;em&gt;0.1 Inches&lt;/em&gt;, and the internal units of the WRL files should be scaled accordingly&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Refer to the Wiki page on &lt;a href="https://github.com/KiCad/packages3D/wiki/Contributing"&gt;Contributing&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-model-licencing" class="anchor" aria-hidden="true" href="#model-licencing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Licencing&lt;/h2&gt;
&lt;p&gt;Refer to the LICENSE.md file&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-external-model-libraries" class="anchor" aria-hidden="true" href="#external-model-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External Model Libraries&lt;/h2&gt;
&lt;p&gt;In addition to the 3D model data provided in this library, there are other sources that designers may use to source 3D models.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Many manufacturers provide accurate 3D models for specific components.&lt;/li&gt;
&lt;li&gt;Online repositories, e.g.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/FreeCAD/FreeCAD-library/tree/master/Electrical%20Parts"&gt;FreeCAD Electric Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FreeCAD/FreeCAD-library/tree/master/Electrical%20Parts/electronic-components"&gt;FreeCAD Electronic Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://grabcad.com/" rel="nofollow"&gt;GrabCAD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.3dcontentcentral.com/" rel="nofollow"&gt;3D ContentCentral&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.traceparts.com/" rel="nofollow"&gt;traceparts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ensure that the LICENSE of any 3D data used is compatible with the intended use-case of the project.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>KiCad</author><guid isPermaLink="false">https://github.com/KiCad/kicad-packages3D</guid><pubDate>Sun, 12 Jan 2020 00:05:00 GMT</pubDate></item><item><title>KiCad/kicad-symbols #6 in CMake, This month</title><link>https://github.com/KiCad/kicad-symbols</link><description>&lt;p&gt;&lt;i&gt;Official KiCad schematic symbol libraries for Kicad 5&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kicad-symbols" class="anchor" aria-hidden="true" href="#kicad-symbols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KiCad Symbols&lt;/h1&gt;
&lt;p&gt;This repository contains the official KiCad schematic symbol libraries.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The libraries in this repositiory are intended for KiCad version 5 or a nightly build that supports the schematic library version 2.4 or newer.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Each symbol library is stored as a &lt;code&gt;.lib&lt;/code&gt; and &lt;code&gt;.dcm&lt;/code&gt; file pair.&lt;/p&gt;
&lt;p&gt;Weekly builds can be found at &lt;a href="https://kicad.github.io/symbols" rel="nofollow"&gt;https://kicad.github.io/symbols&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Contribution guidelines can be found at &lt;a href="http://kicad-pcb.org/libraries/contribute" rel="nofollow"&gt;http://kicad-pcb.org/libraries/contribute&lt;/a&gt;
The library convention can be found at &lt;a href="http://kicad-pcb.org/libraries/klc/" rel="nofollow"&gt;http://kicad-pcb.org/libraries/klc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Other KiCad library repositories are located:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Footprints: &lt;a href="https://github.com/kicad/kicad-footprints"&gt;https://github.com/kicad/kicad-footprints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3D Models: &lt;a href="https://github.com/kicad/kicad-packages3d"&gt;https://github.com/kicad/kicad-packages3d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Templates: &lt;a href="https://github.com/kicad/kicad-templates"&gt;https://github.com/kicad/kicad-templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>KiCad</author><guid isPermaLink="false">https://github.com/KiCad/kicad-symbols</guid><pubDate>Sun, 12 Jan 2020 00:06:00 GMT</pubDate></item><item><title>Polytonic/Glitter #7 in CMake, This month</title><link>https://github.com/Polytonic/Glitter</link><description>&lt;p&gt;&lt;i&gt;Dead Simple OpenGL&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-glitter" class="anchor" aria-hidden="true" href="#glitter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="http://polytonic.github.io/Glitter/" rel="nofollow"&gt;Glitter&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d9eb4d3e9cfe1f1a3f85fabf0cdf75d47975a07d/687474703a2f2f692e696d6775722e636f6d2f4d446f327273792e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/d9eb4d3e9cfe1f1a3f85fabf0cdf75d47975a07d/687474703a2f2f692e696d6775722e636f6d2f4d446f327273792e6a7067" alt="Screenshot" data-canonical-src="http://i.imgur.com/MDo2rsy.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;p&gt;Glitter is a dead simple boilerplate for OpenGL, intended as a starting point for the tutorials on &lt;a href="http://www.learnopengl.com" rel="nofollow"&gt;learnopengl.com&lt;/a&gt; and &lt;a href="https://open.gl" rel="nofollow"&gt;open.gl&lt;/a&gt;. Glitter compiles and statically links every required library, so you can jump right into doing what you probably want: how to get started with OpenGL.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Glitter has a single dependency: &lt;a href="http://www.cmake.org/download/" rel="nofollow"&gt;cmake&lt;/a&gt;, which is used to generate platform-specific makefiles or project files. Start by cloning this repository, making sure to pass the &lt;code&gt;--recursive&lt;/code&gt; flag to grab all the dependencies. If you forgot, then you can &lt;code&gt;git submodule update --init&lt;/code&gt; instead.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone --recursive https://github.com/Polytonic/Glitter
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; Glitter
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; Build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now generate a project file or makefile for your platform. If you want to use a particular IDE, make sure it is installed; don't forget to set the Start-Up Project in Visual Studio or the Target in Xcode.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; UNIX Makefile&lt;/span&gt;
cmake ..

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Mac OSX&lt;/span&gt;
cmake -G &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Xcode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ..

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Microsoft Windows&lt;/span&gt;
cmake -G &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Visual Studio 14&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ..
cmake -G &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Visual Studio 14 Win64&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ..
...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you compile and run, you should now be at the same point as the &lt;a href="http://www.learnopengl.com/#!Getting-started/Hello-Window" rel="nofollow"&gt;Hello Window&lt;/a&gt; or &lt;a href="https://open.gl/context" rel="nofollow"&gt;Context Creation&lt;/a&gt; sections of the tutorials. Open &lt;a href="https://github.com/Polytonic/Glitter/blob/master/Glitter/Sources/main.cpp"&gt;main.cpp&lt;/a&gt; on your computer and start writing code!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Many people overlook how frustrating it is to install dependencies, especially in environments lacking package managers or administrative privileges. For beginners, just getting set up properly set up can be a huge challenge. Glitter is meant to help you overcome that roadblock.&lt;/p&gt;
&lt;p&gt;Glitter provides the most basic windowing example. It is a starting point, and tries very hard not to enforce any sort of directory structure. Feel free to edit the include paths in &lt;code&gt;CMakeLists.txt&lt;/code&gt;. Glitter bundles most of the dependencies needed to implement a basic rendering engine. This includes:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Functionality&lt;/th&gt;
&lt;th&gt;Library&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Mesh Loading&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/assimp/assimp"&gt;assimp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Physics&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bulletphysics/bullet3"&gt;bullet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OpenGL Function Loader&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Dav1dde/glad"&gt;glad&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Windowing and Input&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/glfw/glfw"&gt;glfw&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OpenGL Mathematics&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/g-truc/glm"&gt;glm&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Texture Loading&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nothings/stb"&gt;stb&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If you started the tutorials by installing &lt;a href="https://www.libsdl.org/" rel="nofollow"&gt;SDL&lt;/a&gt;, &lt;a href="https://github.com/nigels-com/glew"&gt;GLEW&lt;/a&gt;, or &lt;a href="http://www.lonesock.net/soil.html" rel="nofollow"&gt;SOIL&lt;/a&gt;, &lt;em&gt;stop&lt;/em&gt;. The libraries bundled with Glitter supersede or are functional replacements for these libraries.&lt;/p&gt;
&lt;p&gt;I have provided sample implementations of an intrusive tree mesh and shader class, if you're following along with the tutorials and need another reference point. These were used to generate the screenshot above, but will not compile out-of-the-box. I leave that exercise for the reader. &lt;g-emoji class="g-emoji" alias="smiley" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png"&gt;😃&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The MIT License (MIT)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Copyright (c) 2015 Kevin Fung&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Polytonic</author><guid isPermaLink="false">https://github.com/Polytonic/Glitter</guid><pubDate>Sun, 12 Jan 2020 00:07:00 GMT</pubDate></item></channel></rss>