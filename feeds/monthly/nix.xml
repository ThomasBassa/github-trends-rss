<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Nix, This month</title><link>https://github.com/trending/nix?since=monthly</link><description>The top repositories on GitHub for nix, measured monthly</description><pubDate>Thu, 06 Feb 2020 01:10:42 GMT</pubDate><lastBuildDate>Thu, 06 Feb 2020 01:10:42 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>NixOS/nixpkgs #1 in Nix, This month</title><link>https://github.com/NixOS/nixpkgs</link><description>&lt;p&gt;&lt;i&gt;Nix Packages collection&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a href="https://nixos.org/nixos" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e18a77abf36b84656ddaa1e79fed706c9d3e8cfd/68747470733a2f2f6e69786f732e6f72672f6c6f676f2f6e69786f732d68697265732e706e67" width="500px" alt="NixOS logo" data-canonical-src="https://nixos.org/logo/nixos-hires.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://www.codetriage.com/nixos/nixpkgs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e1489d5f24cc4374b537ad029d640bd09ad415b8/68747470733a2f2f7777772e636f64657472696167652e636f6d2f6e69786f732f6e6978706b67732f6261646765732f75736572732e737667" alt="Code Triagers badge" data-canonical-src="https://www.codetriage.com/nixos/nixpkgs/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://opencollective.com/nixos" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3074f8b9c12e23540b01b770a06d2608902c9de1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e69786f732f74696572732f737570706f727465722f62616467652e7376673f6c6162656c3d537570706f7274657226636f6c6f723d627269676874677265656e" alt="Open Collective supporters" data-canonical-src="https://opencollective.com/nixos/tiers/supporter/badge.svg?label=Supporter&amp;amp;color=brightgreen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nixos/nixpkgs"&gt;Nixpkgs&lt;/a&gt; is a collection of over
40,000 software packages that can be installed with the
&lt;a href="https://nixos.org/nix/" rel="nofollow"&gt;Nix&lt;/a&gt; package manager. It also implements
&lt;a href="https://nixos.org/nixos/" rel="nofollow"&gt;NixOS&lt;/a&gt;, a purely-functional Linux distribution.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-manuals" class="anchor" aria-hidden="true" href="#manuals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manuals&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nixos.org/nixos/manual" rel="nofollow"&gt;NixOS Manual&lt;/a&gt; - how to install, configure, and maintain a purely-functional Linux distribution&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nixos.org/nixpkgs/manual/" rel="nofollow"&gt;Nixpkgs Manual&lt;/a&gt; - contributing to Nixpkgs and using programming-language-specific Nix expressions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nixos.org/nix/manual" rel="nofollow"&gt;Nix Package Manager Manual&lt;/a&gt; - how to write Nix expressions (programs), and how to use Nix command line tools&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discourse.nixos.org/" rel="nofollow"&gt;Discourse Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IRC - #nixos on freenode.net&lt;/li&gt;
&lt;li&gt;&lt;a href="https://weekly.nixos.org/" rel="nofollow"&gt;NixOS Weekly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nixos.wiki/" rel="nofollow"&gt;Community-maintained wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-other-project-repositories" class="anchor" aria-hidden="true" href="#other-project-repositories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Project Repositories&lt;/h1&gt;
&lt;p&gt;The sources of all official Nix-related projects are in the &lt;a href="https://github.com/NixOS/"&gt;NixOS
organization on GitHub&lt;/a&gt;. Here are some of
the main ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/NixOS/nix"&gt;Nix&lt;/a&gt; - the purely functional package manager&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NixOS/nixops"&gt;NixOps&lt;/a&gt; - the tool to remotely deploy NixOS machines&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NixOS/rfcs"&gt;Nix RFCs&lt;/a&gt; - the formal process for making substantial changes to the community&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NixOS/nixos-homepage"&gt;NixOS homepage&lt;/a&gt; - the &lt;a href="https://nixos.org" rel="nofollow"&gt;NixOS.org&lt;/a&gt; website&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NixOS/hydra"&gt;hydra&lt;/a&gt; - our continuous integration system&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NixOS/nixos-artwork"&gt;NixOS Artwork&lt;/a&gt; - NixOS artwork&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-continuous-integration-and-distribution" class="anchor" aria-hidden="true" href="#continuous-integration-and-distribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continuous Integration and Distribution&lt;/h1&gt;
&lt;p&gt;Nixpkgs and NixOS are built and tested by our continuous integration
system, &lt;a href="https://hydra.nixos.org/" rel="nofollow"&gt;Hydra&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hydra.nixos.org/jobset/nixos/trunk-combined" rel="nofollow"&gt;Continuous package builds for unstable/master&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hydra.nixos.org/jobset/nixos/release-19.09" rel="nofollow"&gt;Continuous package builds for the NixOS 19.09 release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hydra.nixos.org/job/nixos/trunk-combined/tested#tabs-constituents" rel="nofollow"&gt;Tests for unstable/master&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hydra.nixos.org/job/nixos/release-19.09/tested#tabs-constituents" rel="nofollow"&gt;Tests for the NixOS 19.09 release&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Artifacts successfully built with Hydra are published to cache at
&lt;a href="https://cache.nixos.org/" rel="nofollow"&gt;https://cache.nixos.org/&lt;/a&gt;. When successful build and test criteria are
met, the Nixpkgs expressions are distributed via &lt;a href="https://nixos.org/nix/manual/#sec-channels" rel="nofollow"&gt;Nix
channels&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Nixpkgs is among the most active projects on GitHub. While thousands
of open issues and pull requests might seem a lot at first, it helps
consider it in the context of the scope of the project. Nixpkgs
describes how to build over 40,000 pieces of software and implements a
Linux distribution. The &lt;a href="https://github.com/NixOS/nixpkgs/pulse"&gt;GitHub Insights&lt;/a&gt;
page gives a sense of the project activity.&lt;/p&gt;
&lt;p&gt;Community contributions are always welcome through GitHub Issues and
Pull Requests. When pull requests are made, our tooling automation bot,
&lt;a href="https://github.com/NixOS/ofborg"&gt;OfBorg&lt;/a&gt; will perform various checks
to help ensure expression quality.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Nixpkgs maintainers&lt;/em&gt; are people who have assigned themselves to
maintain specific individual packages. We encourage people who care
about a package to assign themselves as a maintainer. When a pull
request is made against a package, OfBorg will notify the appropriate
maintainer(s). The &lt;em&gt;Nixpkgs committers&lt;/em&gt; are people who have been given
permission to merge.&lt;/p&gt;
&lt;p&gt;Most contributions are based on and merged into these branches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master&lt;/code&gt; is the main branch where all small contributions go&lt;/li&gt;
&lt;li&gt;&lt;code&gt;staging&lt;/code&gt; is branched from master, changes that have a big impact on
Hydra builds go to this branch&lt;/li&gt;
&lt;li&gt;&lt;code&gt;staging-next&lt;/code&gt; is branched from staging and only fixes to stabilize
and security fixes with a big impact on Hydra builds should be
contributed to this branch. This branch is merged into master when
deemed of sufficiently high quality&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information about contributing to the project, please visit
the &lt;a href="https://github.com/NixOS/nixpkgs/blob/master/.github/CONTRIBUTING.md"&gt;contributing page&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h1&gt;
&lt;p&gt;The infrastructure for NixOS and related projects is maintained by a
nonprofit organization, the &lt;a href="https://nixos.org/nixos/foundation.html" rel="nofollow"&gt;NixOS
Foundation&lt;/a&gt;. To ensure the
continuity and expansion of the NixOS infrastructure, we are looking
for donations to our organization.&lt;/p&gt;
&lt;p&gt;You can donate to the NixOS foundation by using Open Collective:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/nixos#support" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3dcd758e7335402fe91cfbf27bec257c86ab2da/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e69786f732f74696572732f737570706f727465722e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/nixos/tiers/supporter.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Nixpkgs is licensed under the &lt;a href="COPYING"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note: MIT license does not apply to the packages built by Nixpkgs,
merely to the files in this repository (the Nix expressions, build
scripts, NixOS modules, etc.). It also might not apply to patches
included in Nixpkgs, which may be derivative works of the packages to
which they apply. The aforementioned artifacts are all covered by the
licenses of the respective packages.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NixOS</author><guid isPermaLink="false">https://github.com/NixOS/nixpkgs</guid><pubDate>Thu, 06 Feb 2020 00:01:00 GMT</pubDate></item><item><title>rycee/home-manager #2 in Nix, This month</title><link>https://github.com/rycee/home-manager</link><description>&lt;p&gt;&lt;i&gt;Manage a user environment using Nix&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-home-manager-using-nix" class="anchor" aria-hidden="true" href="#home-manager-using-nix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Home Manager using Nix&lt;/h1&gt;
&lt;p&gt;This project provides a basic system for managing a user environment
using the &lt;a href="https://nixos.org/nix/" rel="nofollow"&gt;Nix&lt;/a&gt; package manager together with the Nix libraries
found in &lt;a href="https://nixos.org/nixpkgs/" rel="nofollow"&gt;Nixpkgs&lt;/a&gt;. Before attempting to use Home Manager please
read the warning below.&lt;/p&gt;
&lt;p&gt;For a more systematic overview of all the options Home Manager
provides please see the &lt;a href="https://rycee.gitlab.io/home-manager/options.html" rel="nofollow"&gt;Home Manager manual&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-words-of-warning" class="anchor" aria-hidden="true" href="#words-of-warning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Words of warning&lt;/h2&gt;
&lt;p&gt;This project is under development. I personally use it to manage
several user configurations but it may fail catastrophically for you.
So beware!&lt;/p&gt;
&lt;p&gt;In some cases Home Manager cannot detect whether it will overwrite a
previous manual configuration. For example, the Gnome Terminal module
will write to your dconf store and cannot tell whether a configuration
that it is about to be overwrite was from a previous Home Manager
generation or from manual configuration.&lt;/p&gt;
&lt;p&gt;Home Manager targets &lt;a href="https://nixos.org/" rel="nofollow"&gt;NixOS&lt;/a&gt; unstable and NixOS version 19.09 (the
current stable version), it may or may not work on other Linux
distributions and NixOS versions.&lt;/p&gt;
&lt;p&gt;Also, the &lt;code&gt;home-manager&lt;/code&gt; tool does not explicitly support rollbacks at
the moment so if your home directory gets messed up you'll have to fix
it yourself. See the &lt;a href="#rollbacks"&gt;rollbacks&lt;/a&gt; section for instructions
on how to manually perform a rollback.&lt;/p&gt;
&lt;p&gt;Now when your expectations have been built up and you are eager to try
all this out you can go ahead and read the rest of this text.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;You can chat with us on IRC in the channel &lt;a href="https://webchat.freenode.net/?url=irc%3A%2F%2Firc.freenode.net%2Fhome-manager" rel="nofollow"&gt;#home-manager&lt;/a&gt; on
&lt;a href="https://freenode.net/" rel="nofollow"&gt;freenode&lt;/a&gt;. The &lt;a href="https://logs.nix.samueldr.com/home-manager/" rel="nofollow"&gt;channel logs&lt;/a&gt; are hosted courtesy of
&lt;a href="https://github.com/samueldr/"&gt;samueldr&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Currently the easiest way to install Home Manager is as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure you have a working Nix installation. If you are not
using NixOS then you may here have to run&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;mkdir -m 0755 -p /nix/var/nix/{profiles,gcroots}/per-user/&lt;span class="pl-smi"&gt;$USER&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;since Home Manager uses these directories to manage your profile
generations. On NixOS these should already be available.&lt;/p&gt;
&lt;p&gt;Also make sure that your user is able to build and install Nix
packages. For example, you should be able to successfully run a
command like &lt;code&gt;nix-instantiate '&amp;lt;nixpkgs&amp;gt;' -A hello&lt;/code&gt; without having
to switch to the root user. For a multi-user install of Nix this
means that your user must be covered by the
&lt;a href="https://nixos.org/nix/manual/#conf-allowed-users" rel="nofollow"&gt;&lt;code&gt;allowed-users&lt;/code&gt;&lt;/a&gt; Nix option. On NixOS you can
control this option using the
&lt;a href="https://nixos.org/nixos/manual/options.html#opt-nix.allowedUsers" rel="nofollow"&gt;&lt;code&gt;nix.allowedUsers&lt;/code&gt;&lt;/a&gt; system option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the appropriate Home Manager channel. Typically this is&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;nix-channel --add https://github.com/rycee/home-manager/archive/master.tar.gz home-manager&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;nix-channel --update&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if you are following Nixpkgs master or an unstable channel and&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;nix-channel --add https://github.com/rycee/home-manager/archive/release-19.09.tar.gz home-manager&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;nix-channel --update&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if you follow a Nixpkgs version 19.09 channel.&lt;/p&gt;
&lt;p&gt;On NixOS you may need to log out and back in for the channel to
become available. On non-NixOS you may have to add&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; NIX_PATH=&lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/.nix-defexpr/channels&lt;span class="pl-smi"&gt;${NIX_PATH&lt;span class="pl-k"&gt;:&lt;/span&gt;+&lt;span class="pl-k"&gt;:&lt;/span&gt;}&lt;/span&gt;&lt;span class="pl-smi"&gt;$NIX_PATH&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to your shell (see &lt;a href="https://github.com/NixOS/nix/issues/2033"&gt;nix#2033&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Home Manager and create the first Home Manager generation:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;nix-shell &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;home-manager&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; -A install&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once finished, Home Manager should be active and available in your
user environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you do not plan on having Home Manager manage your shell
configuration then you must source the&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;file in your shell configuration. Unfortunately, in this specific
case we currently only support POSIX.2-like shells such as
&lt;a href="https://www.gnu.org/software/bash/" rel="nofollow"&gt;Bash&lt;/a&gt; or &lt;a href="http://zsh.sourceforge.net/" rel="nofollow"&gt;Z shell&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For example, if you use Bash then add&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/.nix-profile/etc/profile.d/hm-session-vars.sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to your &lt;code&gt;~/.profile&lt;/code&gt; file.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If instead of using channels you want to run Home Manager from a Git
checkout of the repository then you can use the
&lt;code&gt;programs.home-manager.path&lt;/code&gt; option to specify the absolute path to
the repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Home Manager is typically managed through the &lt;code&gt;home-manager&lt;/code&gt; tool.
This tool can, for example, apply configurations to your home
directory, list user packages installed by the tool, and list the
configuration generations.&lt;/p&gt;
&lt;p&gt;As an example, let us expand the initial configuration file from the
installation above to install the htop and fortune packages, install
Emacs with a few extra packages enabled, install Firefox with the
IcedTea plugin enabled, and enable the user gpg-agent service.&lt;/p&gt;
&lt;p&gt;To satisfy the above setup we should elaborate the
&lt;code&gt;~/.config/nixpkgs/home.nix&lt;/code&gt; file as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-nix"&gt;&lt;pre&gt;{ &lt;span class="pl-smi"&gt;pkgs&lt;/span&gt;&lt;span class="pl-k"&gt;,&lt;/span&gt; &lt;span class="pl-k"&gt;... &lt;/span&gt;}:

{
  &lt;span class="pl-e"&gt;home&lt;/span&gt;.&lt;span class="pl-e"&gt;packages&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    &lt;span class="pl-v"&gt;pkgs&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;htop&lt;/span&gt;
    &lt;span class="pl-v"&gt;pkgs&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;fortune&lt;/span&gt;
  ];

  &lt;span class="pl-e"&gt;programs&lt;/span&gt;.&lt;span class="pl-e"&gt;emacs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-e"&gt;enable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
    &lt;span class="pl-e"&gt;extraPackages&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;epkgs&lt;/span&gt;: [
      &lt;span class="pl-v"&gt;epkgs&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;nix-mode&lt;/span&gt;
      &lt;span class="pl-v"&gt;epkgs&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;magit&lt;/span&gt;
    ];
  };

  &lt;span class="pl-e"&gt;programs&lt;/span&gt;.&lt;span class="pl-e"&gt;firefox&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-e"&gt;enable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
    &lt;span class="pl-e"&gt;enableIcedTea&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
  };

  &lt;span class="pl-e"&gt;services&lt;/span&gt;.&lt;span class="pl-e"&gt;gpg-agent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-e"&gt;enable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
    &lt;span class="pl-e"&gt;defaultCacheTtl&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1800&lt;/span&gt;;
    &lt;span class="pl-e"&gt;enableSshSupport&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
  };

  &lt;span class="pl-e"&gt;programs&lt;/span&gt;.&lt;span class="pl-e"&gt;home-manager&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-e"&gt;enable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
    &lt;span class="pl-e"&gt;path&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;…&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  };
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To activate this configuration you can then run&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;home-manager switch&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or if you are not feeling so lucky,&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;home-manager build&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which will create a &lt;code&gt;result&lt;/code&gt; link to a directory containing an
activation script and the generated home directory files.&lt;/p&gt;
&lt;p&gt;Documentation of available configuration options, including
descriptions and usage examples, is available in the &lt;a href="https://rycee.gitlab.io/home-manager/options.html" rel="nofollow"&gt;Home Manager
manual&lt;/a&gt; or offline by running&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;man home-configuration.nix&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-rollbacks" class="anchor" aria-hidden="true" href="#rollbacks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rollbacks&lt;/h2&gt;
&lt;p&gt;While the &lt;code&gt;home-manager&lt;/code&gt; tool does not explicitly support rollbacks at
the moment it is relatively easy to perform one manually. The steps to
do so are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;home-manager generations&lt;/code&gt; to determine which generation you
wish to rollback to:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;home-manager generations&lt;/span&gt;
&lt;span class="pl-c1"&gt;2018-01-04 11:56 : id 765 -&amp;gt; /nix/store/kahm1rxk77mnvd2l8pfvd4jkkffk5ijk-home-manager-generation&lt;/span&gt;
&lt;span class="pl-c1"&gt;2018-01-03 10:29 : id 764 -&amp;gt; /nix/store/2wsmsliqr5yynqkdyjzb1y57pr5q2lsj-home-manager-generation&lt;/span&gt;
&lt;span class="pl-c1"&gt;2018-01-01 12:21 : id 763 -&amp;gt; /nix/store/mv960kl9chn2lal5q8lnqdp1ygxngcd1-home-manager-generation&lt;/span&gt;
&lt;span class="pl-c1"&gt;2017-12-29 21:03 : id 762 -&amp;gt; /nix/store/6c0k1r03fxckql4vgqcn9ccb616ynb94-home-manager-generation&lt;/span&gt;
&lt;span class="pl-c1"&gt;2017-12-25 18:51 : id 761 -&amp;gt; /nix/store/czc5y6vi1rvnkfv83cs3rn84jarcgsgh-home-manager-generation&lt;/span&gt;
&lt;span class="pl-c1"&gt;…&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy the Nix store path of the generation you chose, e.g.,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/nix/store/mv960kl9chn2lal5q8lnqdp1ygxngcd1-home-manager-generation
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;for generation 763.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the &lt;code&gt;activate&lt;/code&gt; script inside the copied store path:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;/nix/store/mv960kl9chn2lal5q8lnqdp1ygxngcd1-home-manager-generation/activate&lt;/span&gt;
&lt;span class="pl-c1"&gt;Starting home manager activation&lt;/span&gt;
&lt;span class="pl-c1"&gt;…&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-keeping-your--safe-from-harm" class="anchor" aria-hidden="true" href="#keeping-your--safe-from-harm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keeping your ~ safe from harm&lt;/h2&gt;
&lt;p&gt;To configure programs and services Home Manager must write various
things to your home directory. To prevent overwriting any existing
files when switching to a new generation, Home Manager will attempt to
detect collisions between existing files and generated files. If any
such collision is detected the activation will terminate before
changing anything on your computer.&lt;/p&gt;
&lt;p&gt;For example, suppose you have a wonderful, painstakingly created
&lt;code&gt;~/.config/git/config&lt;/code&gt; and add&lt;/p&gt;
&lt;div class="highlight highlight-source-nix"&gt;&lt;pre&gt;{
  &lt;span class="pl-c"&gt;# …&lt;/span&gt;

  &lt;span class="pl-e"&gt;programs&lt;/span&gt;.&lt;span class="pl-e"&gt;git&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-e"&gt;enable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
    &lt;span class="pl-e"&gt;userName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jane Doe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-e"&gt;userEmail&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jane.doe@example.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  };

  &lt;span class="pl-c"&gt;# …&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to your configuration. Attempting to switch to the generation will
then result in&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;home-manager switch&lt;/span&gt;
&lt;span class="pl-c1"&gt;…&lt;/span&gt;
&lt;span class="pl-c1"&gt;Activating checkLinkTargets&lt;/span&gt;
&lt;span class="pl-c1"&gt;Existing file '/home/jdoe/.gitconfig' is in the way&lt;/span&gt;
&lt;span class="pl-c1"&gt;Please move the above files and try again&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-graphical-services" class="anchor" aria-hidden="true" href="#graphical-services"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graphical services&lt;/h2&gt;
&lt;p&gt;Home Manager includes a number of services intended to run in a
graphical session, for example &lt;code&gt;xscreensaver&lt;/code&gt; and &lt;code&gt;dunst&lt;/code&gt;.
Unfortunately, such services will not be started automatically unless
you let Home Manager start your X session. That is, you have something
like&lt;/p&gt;
&lt;div class="highlight highlight-source-nix"&gt;&lt;pre&gt;{
  &lt;span class="pl-c"&gt;# …&lt;/span&gt;

  &lt;span class="pl-e"&gt;services&lt;/span&gt;.&lt;span class="pl-e"&gt;xserver&lt;/span&gt;.&lt;span class="pl-e"&gt;enable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;

  &lt;span class="pl-c"&gt;# …&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in your system configuration and&lt;/p&gt;
&lt;div class="highlight highlight-source-nix"&gt;&lt;pre&gt;{
  &lt;span class="pl-c"&gt;# …&lt;/span&gt;

  &lt;span class="pl-e"&gt;xsession&lt;/span&gt;.&lt;span class="pl-e"&gt;enable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
  &lt;span class="pl-e"&gt;xsession&lt;/span&gt;.&lt;span class="pl-e"&gt;windowManager&lt;/span&gt;.&lt;span class="pl-e"&gt;command&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;…&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

  &lt;span class="pl-c"&gt;# …&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in your Home Manager configuration.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rycee</author><guid isPermaLink="false">https://github.com/rycee/home-manager</guid><pubDate>Thu, 06 Feb 2020 00:02:00 GMT</pubDate></item><item><title>mozilla/nixpkgs-mozilla #3 in Nix, This month</title><link>https://github.com/mozilla/nixpkgs-mozilla</link><description>&lt;p&gt;&lt;i&gt;mozilla related nixpkgs (extends nixos/nixpkgs repo)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nixpkgs-mozilla" class="anchor" aria-hidden="true" href="#nixpkgs-mozilla"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nixpkgs-mozilla&lt;/h1&gt;
&lt;p&gt;Gathering nix efforts in one repository.&lt;/p&gt;
&lt;a name="user-content-current-packages"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-current-packages" class="anchor" aria-hidden="true" href="#current-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current packages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;gecko (&lt;a href="https://github.com/mozilla/gecko-dev"&gt;https://github.com/mozilla/gecko-dev&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;firefox-bin variants including Nightly&lt;/li&gt;
&lt;li&gt;VidyoDesktop ()&lt;/li&gt;
&lt;/ul&gt;
&lt;a name="user-content-firefox-bin-variants"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-firefox-bin-variants" class="anchor" aria-hidden="true" href="#firefox-bin-variants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;firefox-bin variants&lt;/h2&gt;
&lt;p&gt;Nixpkgs already has definitions for &lt;a href="https://github.com/NixOS/nixpkgs/blob/246d2848ff657d56fcf2d8596709e8869ce8616a/pkgs/applications/networking/browsers/firefox/packages.nix"&gt;firefox&lt;/a&gt;,
which is built from source, as well as &lt;a href="https://github.com/NixOS/nixpkgs/blob/ba2fe3c9a626a8fb845c786383b8b23ad8355951/pkgs/applications/networking/browsers/firefox-bin/default.nix"&gt;firefox-bin&lt;/a&gt;,
which is the binary Firefox version built by Mozilla.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;firefox-overlay.nix&lt;/code&gt; in this repository adds definitions for
some other firefox-bin variants that Mozilla ships:
&lt;code&gt;firefox-nightly-bin&lt;/code&gt;, &lt;code&gt;firefox-beta-bin&lt;/code&gt;, and
&lt;code&gt;firefox-esr-bin&lt;/code&gt;. All are exposed under a &lt;code&gt;latest&lt;/code&gt; attribute,
e.g. &lt;code&gt;latest.firefox-nightly-bin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, these variants do not auto-update, and you may see some
annoying pop-ups complaining about this.&lt;/p&gt;
&lt;p&gt;Note that all the &lt;code&gt;-bin&lt;/code&gt; packages are "unfree" (because of the
Firefox trademark, held by Mozilla), so you will need to set
&lt;code&gt;nixpkgs.config.allowUnfree&lt;/code&gt; in order to use them. More info &lt;a href="https://nixos.wiki/wiki/FAQ#How_can_I_install_a_proprietary_or_unfree_package.3F" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-rust-overlay"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-rust-overlay" class="anchor" aria-hidden="true" href="#rust-overlay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rust overlay&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Nix overlays only works on up-to-date versions of NixOS/nixpkgs, starting from 17.03.&lt;/p&gt;
&lt;p&gt;A nixpkgs overlay is provided to contains all of the latest rust releases.&lt;/p&gt;
&lt;p&gt;To use the rust overlay run the &lt;code&gt;./rust-overlay-install.sh&lt;/code&gt; command. It will
link the current &lt;code&gt;./rust-overlay.nix&lt;/code&gt; into your &lt;code&gt;~/.config/nixpkgs/overlays&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;Once this is done, use &lt;code&gt;nix-env -iA nixpkgs.latest.rustChannels.nightly.rust&lt;/code&gt; for
example. Replace the &lt;code&gt;nixpkgs.&lt;/code&gt; prefix with &lt;code&gt;nixos.&lt;/code&gt; on NixOS.&lt;/p&gt;
&lt;a name="user-content-using-in-nix-expressions"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-using-in-nix-expressions" class="anchor" aria-hidden="true" href="#using-in-nix-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using in nix expressions&lt;/h2&gt;
&lt;p&gt;Example of using in &lt;code&gt;`shell.nix`&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nix"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt;
  &lt;span class="pl-e"&gt;moz_overlay&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;import&lt;/span&gt; (&lt;span class="pl-c1"&gt;builtins&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;fetchTarball&lt;/span&gt; &lt;span class="pl-s"&gt;https://github.com/mozilla/nixpkgs-mozilla/archive/master.tar.gz&lt;/span&gt;);
  &lt;span class="pl-e"&gt;nixpkgs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&amp;lt;nixpkgs&amp;gt;&lt;/span&gt; { &lt;span class="pl-e"&gt;overlays&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [ &lt;span class="pl-v"&gt;moz_overlay&lt;/span&gt; ]; };
&lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-v"&gt;nixpkgs&lt;/span&gt;;
  &lt;span class="pl-v"&gt;stdenv&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;mkDerivation&lt;/span&gt; {
    &lt;span class="pl-e"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;moz_overlay_shell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-e"&gt;buildInputs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
      &lt;span class="pl-v"&gt;nixpkgs&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;latest&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;rustChannels&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;nightly&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;rust&lt;/span&gt;
      ];
  }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or to retrieve a specific nightly version:&lt;/p&gt;
&lt;div class="highlight highlight-source-nix"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt;
  &lt;span class="pl-e"&gt;moz_overlay&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;import&lt;/span&gt; (&lt;span class="pl-c1"&gt;builtins&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;fetchTarball&lt;/span&gt; &lt;span class="pl-s"&gt;https://github.com/mozilla/nixpkgs-mozilla/archive/master.tar.gz&lt;/span&gt;);
  &lt;span class="pl-e"&gt;nixpkgs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&amp;lt;nixpkgs&amp;gt;&lt;/span&gt; { &lt;span class="pl-e"&gt;overlays&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [ &lt;span class="pl-v"&gt;moz_overlay&lt;/span&gt; ]; };
&lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-v"&gt;nixpkgs&lt;/span&gt;;
  &lt;span class="pl-v"&gt;stdenv&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;mkDerivation&lt;/span&gt; {
    &lt;span class="pl-e"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;moz_overlay_shell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-e"&gt;buildInputs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
      (&lt;span class="pl-v"&gt;nixpkgs&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;rustChannelOf&lt;/span&gt; { &lt;span class="pl-e"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2018-04-11&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-e"&gt;channel&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nightly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; })&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;rust&lt;/span&gt;
      ];
  }&lt;/pre&gt;&lt;/div&gt;
&lt;a name="user-content-firefox-development-environment"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-firefox-development-environment" class="anchor" aria-hidden="true" href="#firefox-development-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Firefox Development Environment&lt;/h2&gt;
&lt;p&gt;This repository provides several tools to facilitate development on
Firefox. Firefox is built on an engine called Gecko, which lends its
name to some of the files and derivations in this repo.&lt;/p&gt;
&lt;a name="user-content-checking-out-firefox"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-checking-out-firefox" class="anchor" aria-hidden="true" href="#checking-out-firefox"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Checking out Firefox&lt;/h3&gt;
&lt;p&gt;To build Firefox from source, it is best to have a local checkout of
&lt;code&gt;mozilla-central&lt;/code&gt;. &lt;code&gt;mozilla-central&lt;/code&gt; is hosted in Mercurial, but
some people prefer to access it using &lt;code&gt;git&lt;/code&gt; and
&lt;code&gt;git-cinnabar&lt;/code&gt;. The tools in this repo support either using
mercurial or git.&lt;/p&gt;
&lt;p&gt;This repository provides a &lt;code&gt;git-cinnabar-overlay.nix&lt;/code&gt; which defines
a &lt;code&gt;git-cinnabar&lt;/code&gt; derivation. This overlay can be used to install
&lt;code&gt;git-cinnabar&lt;/code&gt;, either using &lt;code&gt;nix-env&lt;/code&gt; or as part of a system-wide
&lt;code&gt;configuration.nix&lt;/code&gt;.&lt;/p&gt;
&lt;a name="user-content-building-firefox"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-building-firefox" class="anchor" aria-hidden="true" href="#building-firefox"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Firefox&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;firefox-overlay.nix&lt;/code&gt; provides an environment to build Firefox
from its sources, once you have finished the checkout of
&lt;code&gt;mozilla-central&lt;/code&gt;. You can use &lt;code&gt;nix-shell&lt;/code&gt; to enter this
environment to launch &lt;code&gt;mach&lt;/code&gt; commands to build Firefox and test your
build.&lt;/p&gt;
&lt;p&gt;Some debugging tools are available in this environment as well, but
other development tools (such as those used to submit changes for
review) are outside the scope of this environment.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;nix-shell&lt;/code&gt; environment is available in the
&lt;code&gt;gecko.&amp;lt;arch&amp;gt;.&amp;lt;cc&amp;gt;&lt;/code&gt; attribute of the &lt;code&gt;release.nix&lt;/code&gt; file provided
in this repository.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;arch&amp;gt;&lt;/code&gt; attribute is either &lt;code&gt;x86_64-linux&lt;/code&gt; or &lt;code&gt;i686-linux&lt;/code&gt;. The first
one would create a native toolchain for compiling on x64, while the second one
would give a native toolchain for compiling on x86. Note that due to the size of
the compilation units on x86, the compilation might not be able to complete, but
some sub part of Gecko, such as SpiderMonkey would compile fine.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;cc&amp;gt;&lt;/code&gt; attribute is either &lt;code&gt;gcc&lt;/code&gt; or &lt;code&gt;clang&lt;/code&gt;, or any specific version
of the compiler available in the &lt;code&gt;compiler-overlay.nix&lt;/code&gt; file which is repeated
in &lt;code&gt;release.nix&lt;/code&gt;. This compiler would only be used for compiling Gecko, and
the rest of the toolchain is compiled against the default &lt;code&gt;stdenv&lt;/code&gt; of the
architecture.&lt;/p&gt;
&lt;p&gt;When first entering the &lt;code&gt;nix-shell&lt;/code&gt;, the toolchain will pull and build all
the dependencies necessary to build Gecko, this includes might take some time.
This work will not be necessary the second time, unless you use a different
toolchain or architecture.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt;/$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; mozilla-central
&lt;span class="pl-k"&gt;~&lt;/span&gt;/mozilla-central$ nix-shell ../nixpkgs-mozilla/release.nix -A gecko.x86_64-linux.gcc --pure
  ... pull the rust compiler
  ... compile the toolchain
[~/mozilla-central] python ./mach build
  ... build firefox desktop
[~/mozilla-central] python ./mach run
  ... run firefox&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When entering the &lt;code&gt;nix-shell&lt;/code&gt;, the &lt;code&gt;MOZCONFIG&lt;/code&gt; environment variable is set
to a local file, named &lt;code&gt;.mozconfig.nix-shell&lt;/code&gt;, created each time you enter the
&lt;code&gt;nix-shell&lt;/code&gt;. You can create your own &lt;code&gt;.mozconfig&lt;/code&gt; file which extends the
default one, with your own options.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt;/mozilla-central$ nix-shell ../nixpkgs-mozilla/release.nix -A gecko.x86_64-linux.gcc --pure
[~/mozilla-central] cat .mozconfig
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Import current nix-shell config.&lt;/span&gt;
&lt;span class="pl-c1"&gt;.&lt;/span&gt; .mozconfig.nix-shell

ac_add_options --enable-js-shell
ac_add_options --disable-tests
[~/mozilla-central] &lt;span class="pl-k"&gt;export&lt;/span&gt; MOZCONFIG=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;/.mozconfig
[~/mozilla-central] python ./mach build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid repeating yourself, you can also rely on the &lt;code&gt;NIX_SHELL_HOOK&lt;/code&gt;
environment variable, to reset the &lt;code&gt;MOZCONFIG&lt;/code&gt; environment variable for you.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt;/mozilla-central$ &lt;span class="pl-k"&gt;export&lt;/span&gt; NIX_SHELL_HOOK=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;export MOZCONFIG=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;/.mozconfig;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;~&lt;/span&gt;/mozilla-central$ nix-shell ../nixpkgs-mozilla/release.nix -A gecko.x86_64-linux.gcc --pure
[~/mozilla-central] python ./mach build&lt;/pre&gt;&lt;/div&gt;
&lt;a name="user-content-submitting-firefox-patches"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-submitting-firefox-patches" class="anchor" aria-hidden="true" href="#submitting-firefox-patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting Firefox patches&lt;/h3&gt;
&lt;p&gt;Firefox development happens in &lt;a href="https://phabricator.services.mozilla.com/" rel="nofollow"&gt;Mozilla Phabricator&lt;/a&gt;. Mozilla Phabricator
docs are &lt;a href="https://moz-conduit.readthedocs.io/en/latest/phabricator-user.html" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get your commits into Phabricator, some options include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Arcanist, the upstream tool for interacting with
Phabricator. Arcanist is packaged in nixpkgs already; you can find
it in nixos.arcanist. Unfortunately, as of this writing, upstream
Arcanist does not support &lt;code&gt;git-cinnabar&lt;/code&gt; (according to &lt;a href="https://moz-conduit.readthedocs.io/en/latest/phabricator-user.html#setting-up-arcanist" rel="nofollow"&gt;the
"Setting up Arcanist"&lt;/a&gt;
documentation). &lt;a href="https://github.com/mozilla-conduit/arcanist"&gt;Mozilla maintains a fork of Arcanist&lt;/a&gt; but it isn't yet
packaged. (PRs welcome.)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mozilla-conduit/review"&gt;moz-phab&lt;/a&gt;, a small
Python script that wraps Arcanist to try to handle commit series
better than stock Arcanist. Because it wraps Arcanist, it suffers
from the same problems that Arcanist does if you use git-cinnabar,
and may work better if you use Mozilla's Arcanist fork.  &lt;code&gt;moz-phab&lt;/code&gt;
isn't packaged yet. (PRs welcome.)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mystor/phlay"&gt;phlay&lt;/a&gt;, a small Python script
that speaks to the Phabricator API directly. This repository ships a
&lt;code&gt;phlay-overlay.nix&lt;/code&gt; that you can use to make &lt;code&gt;phlay&lt;/code&gt; available
in a nix-shell or nix-env.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: although the &lt;code&gt;nix-shell&lt;/code&gt; from the previous section may have
all the tools you would normally use to do Firefox development, it
isn't recommended that you use that shell for anything besides tasks
that involve running &lt;code&gt;mach&lt;/code&gt;. Other development tasks such as
committing code and submitting patches to code review are best handled
in a separate nix-shell.&lt;/p&gt;
&lt;a name="user-content-todo"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;setup hydra to have binary channels&lt;/li&gt;
&lt;li&gt;make sure pinned revisions get updated automatically (if build passes we
should update revisions in default.nix)&lt;/li&gt;
&lt;li&gt;pin to specific (working) nixpkgs revision (as we do for other sources)&lt;/li&gt;
&lt;li&gt;can we make this work on darwin as well?&lt;/li&gt;
&lt;li&gt;assign maintainers for our packages that will montior that it "always" builds&lt;/li&gt;
&lt;li&gt;hook it with vulnix report to monitor CVEs (once vulnix is ready, it must be
ready soon :P)&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>mozilla</author><guid isPermaLink="false">https://github.com/mozilla/nixpkgs-mozilla</guid><pubDate>Thu, 06 Feb 2020 00:03:00 GMT</pubDate></item></channel></rss>