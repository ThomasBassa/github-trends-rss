<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Haskell, This month</title><link>https://github.com/trending/haskell?since=monthly</link><description>The top repositories on GitHub for haskell, measured monthly</description><pubDate>Mon, 03 Feb 2020 01:12:14 GMT</pubDate><lastBuildDate>Mon, 03 Feb 2020 01:12:14 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>koalaman/shellcheck #1 in Haskell, This month</title><link>https://github.com/koalaman/shellcheck</link><description>&lt;p&gt;&lt;i&gt;ShellCheck, a static analysis tool for shell scripts&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/koalaman/shellcheck" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9e97f328fa055534e41ae29a7d69e7798d549a7/68747470733a2f2f7472617669732d63692e6f72672f6b6f616c616d616e2f7368656c6c636865636b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/koalaman/shellcheck.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-shellcheck---a-shell-script-static-analysis-tool" class="anchor" aria-hidden="true" href="#shellcheck---a-shell-script-static-analysis-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ShellCheck - A shell script static analysis tool&lt;/h1&gt;
&lt;p&gt;ShellCheck is a GPLv3 tool that gives warnings and suggestions for bash/sh shell scripts:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/terminal.png"&gt;&lt;img src="doc/terminal.png" alt="Screenshot of a terminal showing problematic shell script lines highlighted" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The goals of ShellCheck are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To point out and clarify typical beginner's syntax issues that cause a shell
to give cryptic error messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To point out and clarify typical intermediate level semantic problems that
cause a shell to behave strangely and counter-intuitively.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To point out subtle caveats, corner cases and pitfalls that may cause an
advanced user's otherwise working script to fail under future circumstances.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="README.md#user-content-gallery-of-bad-code"&gt;the gallery of bad code&lt;/a&gt; for examples of what ShellCheck can help you identify!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-to-use"&gt;How to use&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#on-the-web"&gt;On the web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#from-your-terminal"&gt;From your terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#in-your-editor"&gt;In your editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#in-your-build-or-test-suites"&gt;In your build or test suites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing"&gt;Installing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compiling-from-source"&gt;Compiling from source&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installing-cabal"&gt;Installing Cabal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compiling-shellcheck"&gt;Compiling ShellCheck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-tests"&gt;Running tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#gallery-of-bad-code"&gt;Gallery of bad code&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quoting"&gt;Quoting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conditionals"&gt;Conditionals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#frequently-misused-commands"&gt;Frequently misused commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#common-beginners-mistakes"&gt;Common beginner's mistakes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#style"&gt;Style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-and-typing-errors"&gt;Data and typing errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#robustness"&gt;Robustness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#portability"&gt;Portability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#testimonials"&gt;Testimonials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ignoring-issues"&gt;Ignoring issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reporting-bugs"&gt;Reporting bugs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copyright"&gt;Copyright&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-resources"&gt;Other Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h2&gt;
&lt;p&gt;There are a number of ways to use ShellCheck!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-on-the-web" class="anchor" aria-hidden="true" href="#on-the-web"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;On the web&lt;/h3&gt;
&lt;p&gt;Paste a shell script on &lt;a href="https://www.shellcheck.net" rel="nofollow"&gt;https://www.shellcheck.net&lt;/a&gt; for instant feedback.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.shellcheck.net" rel="nofollow"&gt;ShellCheck.net&lt;/a&gt; is always synchronized to the latest git commit, and is the easiest way to give ShellCheck a go. Tell your friends!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-from-your-terminal" class="anchor" aria-hidden="true" href="#from-your-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From your terminal&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;shellcheck yourscript&lt;/code&gt; in your terminal for instant output, as seen above.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-in-your-editor" class="anchor" aria-hidden="true" href="#in-your-editor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In your editor&lt;/h3&gt;
&lt;p&gt;You can see ShellCheck suggestions directly in a variety of editors.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vim, through &lt;a href="https://github.com/w0rp/ale"&gt;ALE&lt;/a&gt;, &lt;a href="https://github.com/neomake/neomake"&gt;Neomake&lt;/a&gt;, or &lt;a href="https://github.com/scrooloose/syntastic"&gt;Syntastic&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/vim-syntastic.png"&gt;&lt;img src="doc/vim-syntastic.png" alt="Screenshot of Vim showing inlined shellcheck feedback" style="max-width:100%;"&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Emacs, through &lt;a href="https://github.com/flycheck/flycheck"&gt;Flycheck&lt;/a&gt; or &lt;a href="https://github.com/federicotdn/flymake-shellcheck"&gt;Flymake&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/emacs-flycheck.png"&gt;&lt;img src="doc/emacs-flycheck.png" alt="Screenshot of emacs showing inlined shellcheck feedback" style="max-width:100%;"&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sublime, through &lt;a href="https://github.com/SublimeLinter/SublimeLinter-shellcheck"&gt;SublimeLinter&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Atom, through &lt;a href="https://github.com/AtomLinter/linter-shellcheck"&gt;Linter&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VSCode, through &lt;a href="https://github.com/timonwong/vscode-shellcheck"&gt;vscode-shellcheck&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most other editors, through &lt;a href="shellcheck.1.md#user-content-formats"&gt;GCC error compatibility&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-in-your-build-or-test-suites" class="anchor" aria-hidden="true" href="#in-your-build-or-test-suites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In your build or test suites&lt;/h3&gt;
&lt;p&gt;While ShellCheck is mostly intended for interactive use, it can easily be added to builds or test suites.
It makes canonical use of exit codes, so you can just add a &lt;code&gt;shellcheck&lt;/code&gt; command as part of the process.&lt;/p&gt;
&lt;p&gt;For example, in a Makefile:&lt;/p&gt;
&lt;div class="highlight highlight-source-makefile"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;check-scripts&lt;/span&gt;:
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fail if any of these files have warnings&lt;/span&gt;
    shellcheck myscripts/*.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or in a Travis CI &lt;code&gt;.travis.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;:
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fail if any of these files have warnings&lt;/span&gt;
  - &lt;span class="pl-s"&gt;shellcheck myscripts/*.sh&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Services and platforms that have ShellCheck pre-installed and ready to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://travis-ci.org/" rel="nofollow"&gt;Travis CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com/" rel="nofollow"&gt;Codacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeclimate.com/" rel="nofollow"&gt;Code Climate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codefactor.io/" rel="nofollow"&gt;Code Factor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/features/actions"&gt;Github&lt;/a&gt;(only Linux)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Services and platforms with third party plugins:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sonarqube.org/" rel="nofollow"&gt;SonarQube&lt;/a&gt; through &lt;a href="https://github.com/emerald-squad/sonar-shellcheck-plugin"&gt;sonar-shellcheck-plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most other services, including &lt;a href="https://about.gitlab.com/" rel="nofollow"&gt;GitLab&lt;/a&gt;, let you install
ShellCheck yourself, either through the system's package manager (see &lt;a href="#installing"&gt;Installing&lt;/a&gt;),
or by downloading and unpacking a &lt;a href="#installing-a-pre-compiled-binary"&gt;binary release&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's a good idea to manually install a specific ShellCheck version regardless. This avoids
any surprise build breaks when a new version with new warnings is published.&lt;/p&gt;
&lt;p&gt;For customized filtering or reporting, ShellCheck can output simple JSON, CheckStyle compatible XML,
GCC compatible warnings as well as human readable text (with or without ANSI colors). See the
&lt;a href="https://github.com/koalaman/shellcheck/wiki/Integration"&gt;Integration&lt;/a&gt; wiki page for more documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;The easiest way to install ShellCheck locally is through your package manager.&lt;/p&gt;
&lt;p&gt;On systems with Cabal (installs to &lt;code&gt;~/.cabal/bin&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cabal update
cabal install ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On systems with Stack (installs to &lt;code&gt;~/.local/bin&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stack update
stack install ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Debian based distros:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Arch Linux based distros:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pacman -S shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or get the dependency free &lt;a href="https://aur.archlinux.org/packages/shellcheck-static/" rel="nofollow"&gt;shellcheck-static&lt;/a&gt; from the AUR.&lt;/p&gt;
&lt;p&gt;On Gentoo based distros:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;emerge --ask shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On EPEL based distros:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum -y install epel-release
yum install ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Fedora based distros:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dnf install ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On FreeBSD:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pkg install hs-ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On OS X with homebrew:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On OpenBSD:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pkg_add shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On openSUSE&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;zypper in ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or use OneClickInstall - &lt;a href="https://software.opensuse.org/package/ShellCheck" rel="nofollow"&gt;https://software.opensuse.org/package/ShellCheck&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On Solus:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;eopkg install shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Windows (via &lt;a href="https://chocolatey.org/packages/shellcheck" rel="nofollow"&gt;chocolatey&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;C:\&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; choco install shellcheck&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or Windows (via &lt;a href="http://scoop.sh" rel="nofollow"&gt;scoop&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;C:\&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; scoop install shellcheck&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From Snap Store:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;snap install --channel=edge shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From Docker Hub:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run --rm -v &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$PWD&lt;/span&gt;:/mnt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; koalaman/shellcheck:stable myscript
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or :v0.4.7 for that version, or :latest for daily builds&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use &lt;code&gt;koalaman/shellcheck-alpine&lt;/code&gt; if you want a larger Alpine Linux based image to extend. It works exactly like a regular Alpine image, but has shellcheck preinstalled.&lt;/p&gt;
&lt;p&gt;Using the &lt;a href="https://nixos.org/nix" rel="nofollow"&gt;nix package manager&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;nix-env -iA nixpkgs.shellcheck&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you can download pre-compiled binaries for the latest release here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz" rel="nofollow"&gt;Linux, x86_64&lt;/a&gt; (statically linked)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.armv6hf.tar.xz" rel="nofollow"&gt;Linux, armv6hf&lt;/a&gt;, i.e. Raspberry Pi (statically linked)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.armv6hf.tar.xz" rel="nofollow"&gt;Linux, aarch64&lt;/a&gt; aka ARM64 (statically linked)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shellcheck.storage.googleapis.com/shellcheck-stable.darwin.x86_64.tar.xz" rel="nofollow"&gt;MacOS, x86_64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://storage.googleapis.com/shellcheck/shellcheck-stable.zip" rel="nofollow"&gt;Windows, x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;or see the &lt;a href="https://shellcheck.storage.googleapis.com/index.html" rel="nofollow"&gt;storage bucket listing&lt;/a&gt; for checksums, older versions and the latest daily builds.&lt;/p&gt;
&lt;p&gt;Distro packages already come with a &lt;code&gt;man&lt;/code&gt; page. If you are building from source, it can be installed with:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;pandoc -s -f markdown-smart -t man shellcheck.1.md -o shellcheck.1&lt;/span&gt;
&lt;span class="pl-c1"&gt;sudo mv shellcheck.1 /usr/share/man/man1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-travis-ci" class="anchor" aria-hidden="true" href="#travis-ci"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Travis CI&lt;/h3&gt;
&lt;p&gt;Travis CI has now integrated ShellCheck by default, so you don't need to manually install it.&lt;/p&gt;
&lt;p&gt;If you still want to do so in order to upgrade at your leisure or ensure you're
using the latest release, follow the steps below to install a binary version.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-a-pre-compiled-binary" class="anchor" aria-hidden="true" href="#installing-a-pre-compiled-binary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing a pre-compiled binary&lt;/h3&gt;
&lt;p&gt;The pre-compiled binaries come in &lt;code&gt;tar.xz&lt;/code&gt; files. To decompress them, make sure
&lt;code&gt;xz&lt;/code&gt; is installed.
On Debian/Ubuntu/Mint, you can &lt;code&gt;apt install xz-utils&lt;/code&gt;.
On Redhat/Fedora/CentOS, &lt;code&gt;yum -y install xz&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A simple installer may do something like:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scversion=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stable&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or "v0.4.7", or "latest"&lt;/span&gt;
wget -qO- &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://storage.googleapis.com/shellcheck/shellcheck-&lt;span class="pl-smi"&gt;${scversion?}&lt;/span&gt;.linux.x86_64.tar.xz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; tar -xJv
cp &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;shellcheck-&lt;span class="pl-smi"&gt;${scversion}&lt;/span&gt;/shellcheck&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /usr/bin/
shellcheck --version&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from source&lt;/h2&gt;
&lt;p&gt;This section describes how to build ShellCheck from a source directory. ShellCheck is written in Haskell and requires 2GB of RAM to compile.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-cabal" class="anchor" aria-hidden="true" href="#installing-cabal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Cabal&lt;/h3&gt;
&lt;p&gt;ShellCheck is built and packaged using Cabal. Install the package &lt;code&gt;cabal-install&lt;/code&gt; from your system's package manager (with e.g. &lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;brew&lt;/code&gt;, &lt;code&gt;emerge&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;, or &lt;code&gt;zypper&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;On MacOS (OS X), you can do a fast install of Cabal using brew, which takes a couple of minutes instead of more than 30 minutes if you try to compile it from source.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install cabal-install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On MacPorts, the package is instead called &lt;code&gt;hs-cabal-install&lt;/code&gt;, while native Windows users should install the latest version of the Haskell platform from &lt;a href="https://www.haskell.org/platform/" rel="nofollow"&gt;https://www.haskell.org/platform/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Verify that &lt;code&gt;cabal&lt;/code&gt; is installed and update its dependency list with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal update
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-shellcheck" class="anchor" aria-hidden="true" href="#compiling-shellcheck"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling ShellCheck&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git clone&lt;/code&gt; this repository, and &lt;code&gt;cd&lt;/code&gt; to the ShellCheck source directory to build/install:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or if you intend to run the tests:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal install --enable-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will compile ShellCheck and install it to your &lt;code&gt;~/.cabal/bin&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Add this directory to your &lt;code&gt;PATH&lt;/code&gt; (for bash, add this to your &lt;code&gt;~/.bashrc&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; PATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/.cabal/bin:&lt;span class="pl-smi"&gt;$PATH&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Log out and in again, and verify that your PATH is set up correctly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ which shellcheck
&lt;span class="pl-k"&gt;~&lt;/span&gt;/.cabal/bin/shellcheck&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On native Windows, the &lt;code&gt;PATH&lt;/code&gt; should already be set up, but the system
may use a legacy codepage. In &lt;code&gt;cmd.exe&lt;/code&gt;, &lt;code&gt;powershell.exe&lt;/code&gt; and Powershell ISE,
make sure to use a TrueType font, not a Raster font, and set the active
codepage to UTF-8 (65001) with &lt;code&gt;chcp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;chcp&lt;/span&gt; &lt;span class="pl-c1"&gt;65001&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Powershell ISE, you may need to additionally update the output encoding:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;[&lt;span class="pl-k"&gt;Console&lt;/span&gt;]::OutputEncoding &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-k"&gt;System.Text.Encoding&lt;/span&gt;]::UTF8&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h3&gt;
&lt;p&gt;To run the unit test suite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal test
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-gallery-of-bad-code" class="anchor" aria-hidden="true" href="#gallery-of-bad-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery of bad code&lt;/h2&gt;
&lt;p&gt;So what kind of things does ShellCheck look for? Here is an incomplete list of detected issues.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-quoting" class="anchor" aria-hidden="true" href="#quoting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quoting&lt;/h3&gt;
&lt;p&gt;ShellCheck can recognize several types of incorrect quoting:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$1&lt;/span&gt;                           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unquoted variables&lt;/span&gt;
find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -name &lt;span class="pl-k"&gt;*&lt;/span&gt;.ogg                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unquoted find/grep patterns&lt;/span&gt;
rm &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~/my file.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Quoted tilde expansion&lt;/span&gt;
v=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--verbose="true"&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; cmd &lt;span class="pl-smi"&gt;$v&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Literal quotes in variables&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*.ogg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Incorrectly quoted 'for' loops&lt;/span&gt;
touch &lt;span class="pl-smi"&gt;$@&lt;/span&gt;                          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unquoted $@&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Don&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;t forget to restart&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;   # Singlequote closed by apostrophe&lt;/span&gt;
&lt;span class="pl-s"&gt;echo &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;Don&lt;span class="pl-cce"&gt;\'&lt;/span&gt;t try this at home&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;    # Attempting to escape &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Path is $PATH&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Variables in single quotes&lt;/span&gt;
&lt;span class="pl-c1"&gt;trap&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo Took &lt;span class="pl-smi"&gt;${SECONDS}&lt;/span&gt;s&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 0    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Prematurely expanded trap&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-conditionals" class="anchor" aria-hidden="true" href="#conditionals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditionals&lt;/h3&gt;
&lt;p&gt;ShellCheck can recognize many types of incorrect test statements.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;[[ n &lt;span class="pl-k"&gt;!=&lt;/span&gt; 0 ]]                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Constant test expressions&lt;/span&gt;
[[ &lt;span class="pl-k"&gt;-e&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.mpg ]]                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Existence checks of globs&lt;/span&gt;
[[ &lt;span class="pl-smi"&gt;$foo&lt;/span&gt;&lt;span class="pl-k"&gt;==&lt;/span&gt;0 ]]                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Always true due to missing spaces&lt;/span&gt;
[[ &lt;span class="pl-k"&gt;-n&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$foo&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ]]                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Always true due to literals&lt;/span&gt;
[[ &lt;span class="pl-smi"&gt;$foo&lt;/span&gt; &lt;span class="pl-k"&gt;=~&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fo+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ]]               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Quoted regex in =~&lt;/span&gt;
[ foo &lt;span class="pl-k"&gt;=~&lt;/span&gt; re ]                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unsupported [ ] operators&lt;/span&gt;
[ &lt;span class="pl-smi"&gt;$1&lt;/span&gt; &lt;span class="pl-k"&gt;-eq&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;shellcheck&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ]           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Numerical comparison of strings&lt;/span&gt;
[ &lt;span class="pl-smi"&gt;$n&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;$m&lt;/span&gt; ]                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; &amp;amp;&amp;amp; in [ .. ]&lt;/span&gt;
[ grep -q foo file ]              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Command without $(..)&lt;/span&gt;
[[ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$$&lt;/span&gt;file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.jpg ]]           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Comparisons that can't succeed&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;((&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;lt &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-pds"&gt;))&lt;/span&gt;&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Using test operators in ((..))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-frequently-misused-commands" class="anchor" aria-hidden="true" href="#frequently-misused-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frequently misused commands&lt;/h3&gt;
&lt;p&gt;ShellCheck can recognize instances where commands are used incorrectly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;grep &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*foo*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; file                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Globs in regex contexts&lt;/span&gt;
find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -exec foo {} &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; bar {} &lt;span class="pl-cce"&gt;\;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Prematurely terminated find -exec&lt;/span&gt;
sudo &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Var=42&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; /etc/profile &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Redirecting sudo&lt;/span&gt;
&lt;span class="pl-k"&gt;time&lt;/span&gt; --format=%s sleep 10         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Passing time(1) flags to time builtin&lt;/span&gt;
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;read&lt;/span&gt; h&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; ssh &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$h&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; uptime  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Commands eating while loop input&lt;/span&gt;
&lt;span class="pl-c1"&gt;alias&lt;/span&gt; archive=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mv $1 /backup&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Defining aliases with arguments&lt;/span&gt;
tr -cd &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[a-zA-Z0-9]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [] around ranges in tr&lt;/span&gt;
&lt;span class="pl-c1"&gt;exec&lt;/span&gt; foo&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Done!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Misused 'exec'&lt;/span&gt;
find -name &lt;span class="pl-cce"&gt;\*&lt;/span&gt;.bak -o -name &lt;span class="pl-cce"&gt;\*&lt;/span&gt;~ -delete  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Implicit precedence in find&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; find . -exec foo &amp;gt; bar \;       # Redirections in find&lt;/span&gt;
&lt;span class="pl-en"&gt;f&lt;/span&gt;() { whoami&lt;span class="pl-k"&gt;;&lt;/span&gt; }; sudo f           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; External use of internal functions&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-common-beginners-mistakes" class="anchor" aria-hidden="true" href="#common-beginners-mistakes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common beginner's mistakes&lt;/h3&gt;
&lt;p&gt;ShellCheck recognizes many common beginner's syntax errors:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;var = 42                          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Spaces around = in assignments&lt;/span&gt;
&lt;span class="pl-smi"&gt;$foo&lt;/span&gt;=42                           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; $ in assignments&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;$var&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; ...             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; $ in for loop variables&lt;/span&gt;
var&lt;span class="pl-smi"&gt;$n&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Wrong indirect assignment&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;${var&lt;span class="pl-smi"&gt;$n&lt;/span&gt;}&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Wrong indirect reference&lt;/span&gt;
var=(1, 2, 3)                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Comma separated arrays&lt;/span&gt;
array=( [index] = value )         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Incorrect index initialization&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$var&lt;/span&gt;[14]                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Missing {} in array references&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Argument 10 is &lt;span class="pl-smi"&gt;$1&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Positional parameter misreference&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;myfunction&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt; ..&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;fi&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Wrapping commands in $()&lt;/span&gt;
&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; othercondition&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt; ..   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Using 'else if'&lt;/span&gt;
f&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;() { &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world; }     # Using function before definition&lt;/span&gt;
&lt;span class="pl-s"&gt;[ false ]                         # 'false' being true&lt;/span&gt;
&lt;span class="pl-s"&gt;if ( -f file )                    # Using (..) instead of test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-style" class="anchor" aria-hidden="true" href="#style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style&lt;/h3&gt;
&lt;p&gt;ShellCheck can make suggestions to improve style:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;[[ &lt;span class="pl-k"&gt;-z&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;find /tmp &lt;span class="pl-k"&gt;|&lt;/span&gt; grep mpg&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; ]]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use grep -q instead&lt;/span&gt;
a &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; log&lt;span class="pl-k"&gt;;&lt;/span&gt; b &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; log&lt;span class="pl-k"&gt;;&lt;/span&gt; c &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; log      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use a redirection block instead&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The time is &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;date&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use $() instead&lt;/span&gt;
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; dir&lt;span class="pl-k"&gt;;&lt;/span&gt; process &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; ..&lt;span class="pl-k"&gt;;&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use subshells instead&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; $[1+2]                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use standard $((..)) instead of old $[]&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$((&lt;/span&gt;&lt;span class="pl-smi"&gt;$RANDOM&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-pds"&gt;))&lt;/span&gt;&lt;/span&gt;             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Don't use $ on variables in $((..))&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;date&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Useless use of echo&lt;/span&gt;
cat file &lt;span class="pl-k"&gt;|&lt;/span&gt; grep foo               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Useless use of cat&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-data-and-typing-errors" class="anchor" aria-hidden="true" href="#data-and-typing-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data and typing errors&lt;/h3&gt;
&lt;p&gt;ShellCheck can recognize issues related to data and typing:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;args=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$@&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Assigning arrays to strings&lt;/span&gt;
files=(foo bar)&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$files&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Referencing arrays as strings&lt;/span&gt;
&lt;span class="pl-k"&gt;declare&lt;/span&gt; -A arr=(foo bar)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Associative arrays without index&lt;/span&gt;
&lt;span class="pl-c1"&gt;printf&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s\n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arguments: &lt;span class="pl-smi"&gt;$@&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Concatenating strings and arrays&lt;/span&gt;
[[ &lt;span class="pl-smi"&gt;$#&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; 2 ]]                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Comparing numbers as strings&lt;/span&gt;
var=World&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; var      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unused lowercase variables&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-smi"&gt;$name&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unassigned lowercase variables&lt;/span&gt;
cmd &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-c1"&gt;read&lt;/span&gt; bar&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$bar&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Assignments in subshells&lt;/span&gt;
cat foo &lt;span class="pl-k"&gt;|&lt;/span&gt; cp bar                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Piping to commands that don't read&lt;/span&gt;
&lt;span class="pl-c1"&gt;printf&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%s: %s\n&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; foo             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Mismatches in printf argument count&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-robustness" class="anchor" aria-hidden="true" href="#robustness"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Robustness&lt;/h3&gt;
&lt;p&gt;ShellCheck can make suggestions for improving the robustness of a script:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rm -rf &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$STEAMROOT&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Catastrophic rm&lt;/span&gt;
touch ./-l&lt;span class="pl-k"&gt;;&lt;/span&gt; ls &lt;span class="pl-k"&gt;*&lt;/span&gt;                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Globs that could become options&lt;/span&gt;
find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -exec sh -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a &amp;amp;&amp;amp; b {}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-cce"&gt;\;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Find -exec shell injection&lt;/span&gt;
&lt;span class="pl-c1"&gt;printf&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-smi"&gt;$name&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Variables in printf format&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;ls &lt;span class="pl-k"&gt;*&lt;/span&gt;.txt&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Iterating over ls output&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; MYVAR=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;cmd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Masked exit codes&lt;/span&gt;
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-smi"&gt;$version&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; 2.&lt;span class="pl-k"&gt;*&lt;/span&gt;) &lt;span class="pl-c1"&gt;:&lt;/span&gt;;; 2.6.&lt;span class="pl-k"&gt;*&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Shadowed case branches&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-portability" class="anchor" aria-hidden="true" href="#portability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Portability&lt;/h3&gt;
&lt;p&gt;ShellCheck will warn when using features not supported by the shebang. For example, if you set the shebang to &lt;code&gt;#!/bin/sh&lt;/code&gt;, ShellCheck will warn about portability issues similar to &lt;code&gt;checkbashisms&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; {1..&lt;span class="pl-smi"&gt;$n&lt;/span&gt;}                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Works in ksh, but not bash/dash/sh&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; {1..10}                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Works in ksh and bash, but not dash/sh&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; -n 42                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Works in ksh, bash and dash, undefined in sh&lt;/span&gt;
&lt;span class="pl-c1"&gt;trap&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;exit 42&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; sigint            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unportable signal spec&lt;/span&gt;
cmd &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; file                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unportable redirection operator&lt;/span&gt;
&lt;span class="pl-c1"&gt;read&lt;/span&gt; foo &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; /dev/tcp/host/22      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unportable intercepted files&lt;/span&gt;
&lt;span class="pl-en"&gt;foo-bar&lt;/span&gt;() { ..&lt;span class="pl-k"&gt;;&lt;/span&gt; }                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Undefined/unsupported function name&lt;/span&gt;
[ &lt;span class="pl-smi"&gt;$UID&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; 0 ]                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Variable undefined in dash/sh&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; var=value                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; local is undefined in sh&lt;/span&gt;
&lt;span class="pl-k"&gt;time&lt;/span&gt; sleep 1 &lt;span class="pl-k"&gt;|&lt;/span&gt; sleep 5           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Undefined uses of 'time'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-miscellaneous" class="anchor" aria-hidden="true" href="#miscellaneous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miscellaneous&lt;/h3&gt;
&lt;p&gt;ShellCheck recognizes a menagerie of other issues:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;PS1=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\e[0;32m\$\e[0m &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; PS1 colors not in \[..\]&lt;/span&gt;
PATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$PATH&lt;/span&gt;:~/bin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Literal tilde in $PATH&lt;/span&gt;
rm “file”                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unicode quotes&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Carriage return / DOS line endings&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; hello &lt;span class="pl-cce"&gt;\ &lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Trailing spaces after \&lt;/span&gt;
var=42 &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$var&lt;/span&gt;                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Expansion of inlined environment&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#!&lt;/span&gt;/bin/bash -x -e                 # Common shebang errors&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$((&lt;/span&gt;n&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;180&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;&lt;span class="pl-pds"&gt;))&lt;/span&gt;&lt;/span&gt;               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unnecessary loss of precision&lt;/span&gt;
ls &lt;span class="pl-k"&gt;*&lt;/span&gt;[:digit:].txt                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Bad character class globs&lt;/span&gt;
sed &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s/foo/bar/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; file &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; file      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Redirecting to input&lt;/span&gt;
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;getopts&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; f&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-smi"&gt;$f&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unhandled getopts flags&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-testimonials" class="anchor" aria-hidden="true" href="#testimonials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testimonials&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;At first you're like "shellcheck is awesome" but then you're like "wtf are we still using bash"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alexander Tarasikov,
&lt;a href="https://twitter.com/astarasikov/status/568825996532707330" rel="nofollow"&gt;via Twitter&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ignoring-issues" class="anchor" aria-hidden="true" href="#ignoring-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignoring issues&lt;/h2&gt;
&lt;p&gt;Issues can be ignored via environmental variable, command line, individually or globally within a file:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/Ignore"&gt;https://github.com/koalaman/shellcheck/wiki/Ignore&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting bugs&lt;/h2&gt;
&lt;p&gt;Please use the GitHub issue tracker for any bugs or feature suggestions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/koalaman/shellcheck/issues"&gt;https://github.com/koalaman/shellcheck/issues&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please submit patches to code or documentation as GitHub pull requests! Check
out the &lt;a href="https://github.com/koalaman/shellcheck/wiki/DevGuide"&gt;DevGuide&lt;/a&gt; on the
ShellCheck Wiki.&lt;/p&gt;
&lt;p&gt;Contributions must be licensed under the GNU GPLv3.
The contributor retains the copyright.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h2&gt;
&lt;p&gt;ShellCheck is licensed under the GNU General Public License, v3. A copy of this license is included in the file &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Copyright 2012-2019, &lt;a href="https://github.com/koalaman/"&gt;Vidar 'koala_man' Holen&lt;/a&gt; and contributors.&lt;/p&gt;
&lt;p&gt;Happy ShellChecking!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-resources" class="anchor" aria-hidden="true" href="#other-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The wiki has &lt;a href="https://github.com/koalaman/shellcheck/wiki/Checks"&gt;long form descriptions&lt;/a&gt; for each warning, e.g. &lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2221"&gt;SC2221&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;ShellCheck does not attempt to enforce any kind of formatting or indenting style, so also check out &lt;a href="https://github.com/mvdan/sh"&gt;shfmt&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>koalaman</author><guid isPermaLink="false">https://github.com/koalaman/shellcheck</guid><pubDate>Mon, 03 Feb 2020 00:01:00 GMT</pubDate></item><item><title>hadolint/hadolint #2 in Haskell, This month</title><link>https://github.com/hadolint/hadolint</link><description>&lt;p&gt;&lt;i&gt;Dockerfile linter, validate inline bash, written in Haskell&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/hadolint/hadolint" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e6d207874dc54249e9d09cbca1941c2471077aff/68747470733a2f2f7472617669732d63692e6f72672f6861646f6c696e742f6861646f6c696e742e7376673f6272616e63683d6d6173746572" alt="Linux/OSX Build Status" data-canonical-src="https://travis-ci.org/hadolint/hadolint.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/hadolint/hadolint/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eb7cd8d4d85529cc7f47bf648a68e8031b14f52d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f2f6769746875622f6861646f6c696e742f6861646f6c696e743f7376673d74727565266272616e63683d6d6173746572" alt="Windows Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status//github/hadolint/hadolint?svg=true&amp;amp;branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://tldrlegal.com/l/gpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71665acade75a335fdeb8ba3d8a5983471ff27e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c2d2d332d626c75652e737667" alt="GPL-3 licensed" data-canonical-src="https://img.shields.io/badge/license-GPL--3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/hadolint/hadolint/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/620dbcfd64659be27db8b3c4849485e9b78c7a51/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6861646f6c696e742f6861646f6c696e742e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/hadolint/hadolint.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href=""&gt;&lt;img src="https://camo.githubusercontent.com/ada7a5263c892948b81eb40488f10c288a5c3568/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6861646f6c696e742f6861646f6c696e742f746f74616c2e737667" alt="Github downloads" data-canonical-src="https://img.shields.io/github/downloads/hadolint/hadolint/total.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ed1547b1b7f6060ad464d180a0c28975ba876830/68747470733a2f2f6861646f6c696e742e6769746875622e696f2f6861646f6c696e742f696d672f6361745f636f6e7461696e65722e706e67"&gt;&lt;img align="right" alt="pipecat" width="150" src="https://camo.githubusercontent.com/ed1547b1b7f6060ad464d180a0c28975ba876830/68747470733a2f2f6861646f6c696e742e6769746875622e696f2f6861646f6c696e742f696d672f6361745f636f6e7461696e65722e706e67" data-canonical-src="https://hadolint.github.io/hadolint/img/cat_container.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-haskell-dockerfile-linter" class="anchor" aria-hidden="true" href="#haskell-dockerfile-linter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Haskell Dockerfile Linter&lt;/h1&gt;
&lt;p&gt;A smarter Dockerfile linter that helps you build &lt;a href="https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices" rel="nofollow"&gt;best practice&lt;/a&gt; Docker
images. The linter is parsing the Dockerfile into an AST and performs rules on
top of the AST. It is standing on the shoulders of &lt;a href="https://github.com/koalaman/shellcheck"&gt;ShellCheck&lt;/a&gt; to lint
the Bash code inside &lt;code&gt;RUN&lt;/code&gt; instructions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hadolint.github.io/hadolint" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt; &lt;strong&gt;Check the online version on
hadolint.github.io/hadolint&lt;/strong&gt;&lt;/a&gt;
&lt;a href="https://hadolint.github.io/hadolint" rel="nofollow"&gt;&lt;img src="screenshot.png" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h2&gt;
&lt;p&gt;You can run &lt;code&gt;hadolint&lt;/code&gt; locally to lint your Dockerfile.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;hadolint &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dockerfile&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
hadolint --ignore DL3003 --ignore DL3006 &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dockerfile&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; exclude specific rules&lt;/span&gt;
hadolint --trusted-registry my-company.com:500 &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dockerfile&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Warn when using untrusted FROM images&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Docker comes to the rescue to provide an easy way how to run &lt;code&gt;hadolint&lt;/code&gt; on most
platforms.
Just pipe your &lt;code&gt;Dockerfile&lt;/code&gt; to &lt;code&gt;docker run&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run --rm -i hadolint/hadolint &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; Dockerfile&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;You can download prebuilt binaries for OSX, Windows and Linux from the latest
&lt;a href="https://github.com/hadolint/hadolint/releases/latest"&gt;release page&lt;/a&gt;. However, if it doesn't work for you, please fall back to
Docker, &lt;code&gt;brew&lt;/code&gt; or source installation.&lt;/p&gt;
&lt;p&gt;If you are on OSX you can use &lt;a href="https://brew.sh/" rel="nofollow"&gt;brew&lt;/a&gt; to install &lt;code&gt;hadolint&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install hadolint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows you can use &lt;a href="https://github.com/lukesampson/scoop"&gt;scoop&lt;/a&gt; to install &lt;code&gt;hadolint&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;scoop install hadolint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As shown before, &lt;code&gt;hadolint&lt;/code&gt; is available as a Docker container:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker pull hadolint/hadolint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need a Docker container with shell access, use the Debian or Alpine
variants of the Docker image:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker pull hadolint/hadolint:latest-debian
docker pull hadolint/hadolint:latest-alpine&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also build &lt;code&gt;hadolint&lt;/code&gt; locally. You need &lt;a href="https://www.haskell.org/platform/" rel="nofollow"&gt;Haskell&lt;/a&gt; and the &lt;a href="http://docs.haskellstack.org/en/stable/install_and_upgrade.html" rel="nofollow"&gt;stack&lt;/a&gt;
build tool to build the binary.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/hadolint/hadolint
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; hadolint
stack install&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configure" class="anchor" aria-hidden="true" href="#configure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hadolint&lt;/code&gt; supports specifying the ignored rules using a configuration file. The configuration
file should be in &lt;code&gt;yaml&lt;/code&gt; format. This is one valid configuration file as an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;ignored&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;DL3000&lt;/span&gt;
  - &lt;span class="pl-s"&gt;SC1010&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, &lt;code&gt;hadolint&lt;/code&gt; can warn you when images from untrusted repositories are being
used in Dockerfiles, you can append the &lt;code&gt;trustedRegistries&lt;/code&gt; keys to the configuration
file as shown below:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;ignored&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;DL3000&lt;/span&gt;
  - &lt;span class="pl-s"&gt;SC1010&lt;/span&gt;

&lt;span class="pl-ent"&gt;trustedRegistries&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;docker.io&lt;/span&gt;
  - &lt;span class="pl-s"&gt;my-company.com:5000&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configuration files can be used globally or per project. By default, &lt;code&gt;hadolint&lt;/code&gt; will look for
a configuration file in the current directory with the name &lt;code&gt;.hadolint.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The global configuration file should be placed in the folder specified by &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt;,
with the name &lt;code&gt;hadolint.yaml&lt;/code&gt;. In summary, the following locations are valid for the configuration
file, in order or preference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$PWD/.hadolint.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/hadolint.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.config/hadolint.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In windows, the &lt;code&gt;%LOCALAPPDATA%&lt;/code&gt; environment variable is used instead of &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Additionally, you can pass a custom configuration file in the command line with
the &lt;code&gt;--config&lt;/code&gt; option&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;hadolint --config /path/to/config.yaml Dockerfile&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-inline-ignores" class="anchor" aria-hidden="true" href="#inline-ignores"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inline ignores&lt;/h2&gt;
&lt;p&gt;It is also possible to ignore rules by using a special comment directly above the Dockerfile
instruction you want to make an exception for. Ignore rule comments look like
&lt;code&gt;# hadolint ignore=DL3001,SC1081&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-dockerfile"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; hadolint ignore=DL3006&lt;/span&gt;
&lt;span class="pl-k"&gt;FROM&lt;/span&gt; ubuntu

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; hadolint ignore=DL3003,SC1035&lt;/span&gt;
&lt;span class="pl-k"&gt;RUN&lt;/span&gt; cd /tmp &amp;amp;&amp;amp; echo &lt;span class="pl-s"&gt;"hello!"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inline ignores will only work if place directly above the instruction.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-integrations" class="anchor" aria-hidden="true" href="#integrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integrations&lt;/h2&gt;
&lt;p&gt;To get most of &lt;code&gt;hadolint&lt;/code&gt; it is useful to integrate it as a check to your CI
or to your editor to lint your &lt;code&gt;Dockerfile&lt;/code&gt; as you write it. See our
&lt;a href="docs/INTEGRATION.md"&gt;Integration&lt;/a&gt; docs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rules" class="anchor" aria-hidden="true" href="#rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h2&gt;
&lt;p&gt;An incomplete list of implemented rules. Click on the error code to get more
detailed information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Rules with the prefix &lt;code&gt;DL&lt;/code&gt; originate from &lt;code&gt;hadolint&lt;/code&gt;. Take a look at
&lt;code&gt;Rules.hs&lt;/code&gt; to find the implementation of the rules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rules with the &lt;code&gt;SC&lt;/code&gt; prefix originate from &lt;strong&gt;ShellCheck&lt;/strong&gt; (Only the most
common rules are listed, there are dozens more)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please &lt;a href="https://github.com/hadolint/hadolint/issues/new"&gt;create an issue&lt;/a&gt; if you have an idea for a good rule.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Rule&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3000"&gt;DL3000&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use absolute WORKDIR.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3001"&gt;DL3001&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;For some bash commands it makes no sense running them in a Docker container like ssh, vim, shutdown, service, ps, free, top, kill, mount, ifconfig.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3002"&gt;DL3002&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Last user should not be root.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3003"&gt;DL3003&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use WORKDIR to switch to a directory.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3004"&gt;DL3004&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use sudo as it leads to unpredictable behavior. Use a tool like gosu to enforce root.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3005"&gt;DL3005&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use apt-get upgrade or dist-upgrade.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3006"&gt;DL3006&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Always tag the version of an image explicitly.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3007"&gt;DL3007&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Using latest is prone to errors if the image will ever update. Pin the version explicitly to a release tag.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3008"&gt;DL3008&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in apt-get install.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3009"&gt;DL3009&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Delete the apt-get lists after installing something.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3010"&gt;DL3010&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use ADD for extracting archives into an image.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3011"&gt;DL3011&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Valid UNIX ports range from 0 to 65535.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3012"&gt;DL3012&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Provide an email address or URL as maintainer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3013"&gt;DL3013&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in pip.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3014"&gt;DL3014&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use the &lt;code&gt;-y&lt;/code&gt; switch.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3015"&gt;DL3015&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Avoid additional packages by specifying --no-install-recommends.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3016"&gt;DL3016&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in &lt;code&gt;npm&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3017"&gt;DL3017&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use &lt;code&gt;apk upgrade&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3018"&gt;DL3018&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in apk add. Instead of &lt;code&gt;apk add &amp;lt;package&amp;gt;&lt;/code&gt; use &lt;code&gt;apk add &amp;lt;package&amp;gt;=&amp;lt;version&amp;gt;&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3019"&gt;DL3019&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use the &lt;code&gt;--no-cache&lt;/code&gt; switch to avoid the need to use &lt;code&gt;--update&lt;/code&gt; and remove &lt;code&gt;/var/cache/apk/*&lt;/code&gt; when done installing packages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3020"&gt;DL3020&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;COPY&lt;/code&gt; instead of &lt;code&gt;ADD&lt;/code&gt; for files and folders.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3021"&gt;DL3021&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;COPY&lt;/code&gt; with more than 2 arguments requires the last argument to end with &lt;code&gt;/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3022"&gt;DL3022&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;COPY --from&lt;/code&gt; should reference a previously defined &lt;code&gt;FROM&lt;/code&gt; alias&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3023"&gt;DL3023&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;COPY --from&lt;/code&gt; cannot reference its own &lt;code&gt;FROM&lt;/code&gt; alias&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3024"&gt;DL3024&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;FROM&lt;/code&gt; aliases (stage names) must be unique&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3025"&gt;DL3025&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use arguments JSON notation for CMD and ENTRYPOINT arguments&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3026"&gt;DL3026&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use only an allowed registry in the FROM image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3027"&gt;DL3027&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use &lt;code&gt;apt&lt;/code&gt; as it is meant to be a end-user tool, use &lt;code&gt;apt-get&lt;/code&gt; or &lt;code&gt;apt-cache&lt;/code&gt; instead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3028"&gt;DL3028&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in gem install. Instead of &lt;code&gt;gem install &amp;lt;gem&amp;gt;&lt;/code&gt; use &lt;code&gt;gem install &amp;lt;gem&amp;gt;:&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4000"&gt;DL4000&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;MAINTAINER is deprecated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4001"&gt;DL4001&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Either use Wget or Curl but not both.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4003"&gt;DL4003&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Multiple &lt;code&gt;CMD&lt;/code&gt; instructions found.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4004"&gt;DL4004&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Multiple &lt;code&gt;ENTRYPOINT&lt;/code&gt; instructions found.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4005"&gt;DL4005&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;SHELL&lt;/code&gt; to change the default shell.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4006"&gt;DL4006&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Set the &lt;code&gt;SHELL&lt;/code&gt; option -o pipefail before &lt;code&gt;RUN&lt;/code&gt; with a pipe in it&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1000"&gt;SC1000&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;$&lt;/code&gt; is not used specially and should therefore be escaped.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1001"&gt;SC1001&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This &lt;code&gt;\c&lt;/code&gt; will be a regular &lt;code&gt;'c'&lt;/code&gt;  in this context.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1007"&gt;SC1007&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Remove space after &lt;code&gt;=&lt;/code&gt; if trying to assign a value (or for empty string, use &lt;code&gt;var='' ...&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1010"&gt;SC1010&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use semicolon or linefeed before &lt;code&gt;done&lt;/code&gt; (or quote to make it literal).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1018"&gt;SC1018&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This is a unicode non-breaking space. Delete it and retype as space.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1035"&gt;SC1035&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;You need a space here&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1045"&gt;SC1045&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;It's not &lt;code&gt;foo &amp;amp;; bar&lt;/code&gt;, just &lt;code&gt;foo &amp;amp; bar&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1065"&gt;SC1065&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Trying to declare parameters? Don't. Use &lt;code&gt;()&lt;/code&gt; and refer to params as &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt; etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1066"&gt;SC1066&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Don't use $ on the left side of assignments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1068"&gt;SC1068&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Don't put spaces around the &lt;code&gt;=&lt;/code&gt; in assignments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1077"&gt;SC1077&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;For command expansion, the tick should slant left (` vs ´).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1078"&gt;SC1078&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Did you forget to close this double-quoted string?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1079"&gt;SC1079&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This is actually an end quote, but due to next char, it looks suspect.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1081"&gt;SC1081&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Scripts are case sensitive. Use &lt;code&gt;if&lt;/code&gt;, not &lt;code&gt;If&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1083"&gt;SC1083&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This &lt;code&gt;{/}&lt;/code&gt; is literal. Check expression (missing &lt;code&gt;;/\n&lt;/code&gt;?) or quote it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1086"&gt;SC1086&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Don't use &lt;code&gt;$&lt;/code&gt; on the iterator name in for loops.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1087"&gt;SC1087&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Braces are required when expanding arrays, as in &lt;code&gt;${array[idx]}&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1095"&gt;SC1095&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;You need a space or linefeed between the function name and body.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1097"&gt;SC1097&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Unexpected &lt;code&gt;==&lt;/code&gt;. For assignment, use &lt;code&gt;=&lt;/code&gt;. For comparison, use &lt;code&gt;[/[[&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1098"&gt;SC1098&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Quote/escape special characters when using &lt;code&gt;eval&lt;/code&gt;, e.g. &lt;code&gt;eval "a=(b)"&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1099"&gt;SC1099&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;You need a space before the &lt;code&gt;#&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2002"&gt;SC2002&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Useless cat. Consider &lt;code&gt;cmd &amp;lt; file | ..&lt;/code&gt; or &lt;code&gt;cmd file | ..&lt;/code&gt; instead.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2015"&gt;SC2015&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Note that &lt;code&gt;A &amp;amp;&amp;amp; B || C&lt;/code&gt; is not if-then-else. C may run when A is true.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2026"&gt;SC2026&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This word is outside of quotes. Did you intend to 'nest '"'single quotes'"' instead'?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2028"&gt;SC2028&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;echo&lt;/code&gt; won't expand escape sequences. Consider &lt;code&gt;printf&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2035"&gt;SC2035&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;./*glob*&lt;/code&gt; or &lt;code&gt;-- *glob*&lt;/code&gt; so names with dashes won't become options.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2039"&gt;SC2039&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;In POSIX sh, something is undefined.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2046"&gt;SC2046&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Quote this to prevent word splitting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2086"&gt;SC2086&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Double quote to prevent globbing and word splitting.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2140"&gt;SC2140&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Word is in the form &lt;code&gt;"A"B"C"&lt;/code&gt; (B indicated). Did you mean &lt;code&gt;"ABC"&lt;/code&gt; or &lt;code&gt;"A\"B\"C"&lt;/code&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2154"&gt;SC2154&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;var is referenced but not assigned.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2155"&gt;SC2155&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Declare and assign separately to avoid masking return values.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2164"&gt;SC2164&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;cd ... || exit&lt;/code&gt; in case &lt;code&gt;cd&lt;/code&gt; fails.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-develop" class="anchor" aria-hidden="true" href="#develop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Develop&lt;/h2&gt;
&lt;p&gt;If you are an experienced Haskeller we would be really thankful if you would
tear our code apart in a review.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Clone repository&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone --recursive git@github.com:hadolint/hadolint.git&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the dependencies&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack install&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-repl" class="anchor" aria-hidden="true" href="#repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REPL&lt;/h3&gt;
&lt;p&gt;The easiest way to try out the parser is using the REPL.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; start the repl&lt;/span&gt;
stack repl
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; parse instruction and look at AST representation&lt;/span&gt;
parseString &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FROM debian:jessie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tests&lt;/h3&gt;
&lt;p&gt;Run unit tests.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run integration tests.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./integration_test.sh&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ast" class="anchor" aria-hidden="true" href="#ast"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AST&lt;/h3&gt;
&lt;p&gt;Dockerfile syntax is fully described in the &lt;a href="http://docs.docker.com/engine/reference/builder/" rel="nofollow"&gt;Dockerfile reference&lt;/a&gt;. Just take
a look at &lt;a href="https://www.stackage.org/haddock/nightly-2018-01-07/language-docker-2.0.1/Language-Docker-Syntax.html" rel="nofollow"&gt;Syntax.hs&lt;/a&gt; in the &lt;code&gt;language-docker&lt;/code&gt; project to see the AST definition.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;RedCoolBeans/&lt;a href="https://github.com/RedCoolBeans/dockerlint/"&gt;dockerlint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;projectatomic/&lt;a href="https://github.com/projectatomic/dockerfile_lint/"&gt;dockerfile_lint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>hadolint</author><guid isPermaLink="false">https://github.com/hadolint/hadolint</guid><pubDate>Mon, 03 Feb 2020 00:02:00 GMT</pubDate></item><item><title>jgm/pandoc #3 in Haskell, This month</title><link>https://github.com/jgm/pandoc</link><description>&lt;p&gt;&lt;i&gt;Universal markup converter&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-pandoc" class="anchor" aria-hidden="true" href="#pandoc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pandoc&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/jgm/pandoc/releases"&gt;&lt;img src="https://camo.githubusercontent.com/411f0ac7f05102f79a830ffdeb2ba4f087a667e9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6a676d2f70616e646f632e7376673f6c6162656c3d63757272656e742b72656c65617365" alt="github release" data-canonical-src="https://img.shields.io/github/release/jgm/pandoc.svg?label=current+release" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://hackage.haskell.org/package/pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d03bb9489bd54187b8486c245dbc084d041e13f/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f70616e646f632e7376673f6c6162656c3d6861636b616765" alt="hackage release" data-canonical-src="https://img.shields.io/hackage/v/pandoc.svg?label=hackage" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://brewformulas.org/Pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08d2230b9e9e2cbb12ea775d1bac8f50fd4275e8/68747470733a2f2f696d672e736869656c64732e696f2f686f6d65627265772f762f70616e646f632e737667" alt="homebrew" data-canonical-src="https://img.shields.io/homebrew/v/pandoc.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://stackage.org/lts/package/pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/44b5a4bcb04e663394157a419be74ff590f74ced/687474703a2f2f737461636b6167652e6f72672f7061636b6167652f70616e646f632f62616467652f6c7473" alt="stackage LTS package" data-canonical-src="http://stackage.org/package/pandoc/badge/lts" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/jgm/pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aedf8f0e0910d305ec01f09e62cdd2932308fc8a/68747470733a2f2f636972636c6563692e636f6d2f67682f6a676d2f70616e646f632e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/jgm/pandoc.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/jgm/pandoc/actions"&gt;&lt;img src="https://github.com/jgm/pandoc/workflows/CI%20tests/badge.svg" alt="CI tests" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/768ccc754b99092765bcf90953180fa0a2b7f3f0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c76322b2d6c69676874677261792e737667" alt="license" data-canonical-src="https://img.shields.io/badge/license-GPLv2+-lightgray.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://groups.google.com/forum/#!forum/pandoc-discuss" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/065ea70a67e226da3fb10642858cfd74f1a8307e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70616e646f632d646973637573732d7265642e7376673f7374796c653d736f6369616c" alt="pandoc-discuss on google groups" data-canonical-src="https://img.shields.io/badge/pandoc-discuss-red.svg?style=social" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-universal-markup-converter" class="anchor" aria-hidden="true" href="#the-universal-markup-converter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The universal markup converter&lt;/h2&gt;
&lt;p&gt;Pandoc is a &lt;a href="http://haskell.org" rel="nofollow"&gt;Haskell&lt;/a&gt; library for converting from
one markup format to another, and a command-line tool that uses this
library. It can convert &lt;em&gt;from&lt;/em&gt;&lt;/p&gt;
&lt;div id="user-content-input-formats"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;commonmark&lt;/code&gt; (&lt;a href="http://commonmark.org" rel="nofollow"&gt;CommonMark&lt;/a&gt; Markdown)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;creole&lt;/code&gt; (&lt;a href="http://www.wikicreole.org/wiki/Creole1.0" rel="nofollow"&gt;Creole 1.0&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docbook&lt;/code&gt; (&lt;a href="http://docbook.org" rel="nofollow"&gt;DocBook&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docx&lt;/code&gt; (&lt;a href="https://en.wikipedia.org/wiki/Office_Open_XML" rel="nofollow"&gt;Word docx&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokuwiki&lt;/code&gt; (&lt;a href="https://www.dokuwiki.org/dokuwiki" rel="nofollow"&gt;DokuWiki markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epub&lt;/code&gt; (&lt;a href="http://idpf.org/epub" rel="nofollow"&gt;EPUB&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fb2&lt;/code&gt;
(&lt;a href="http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1" rel="nofollow"&gt;FictionBook2&lt;/a&gt;
e-book)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gfm&lt;/code&gt; (&lt;a href="https://help.github.com/articles/github-flavored-markdown/"&gt;GitHub-Flavored
Markdown&lt;/a&gt;),
or the deprecated and less accurate &lt;code&gt;markdown_github&lt;/code&gt;; use
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;markdown_github&lt;/code&gt;&lt;/a&gt;
only if you need extensions not supported in
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;gfm&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;haddock&lt;/code&gt; (&lt;a href="https://www.haskell.org/haddock/doc/html/ch03s08.html" rel="nofollow"&gt;Haddock
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html&lt;/code&gt; (&lt;a href="http://www.w3.org/html/" rel="nofollow"&gt;HTML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipynb&lt;/code&gt; (&lt;a href="https://nbformat.readthedocs.io/en/latest/" rel="nofollow"&gt;Jupyter
notebook&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jats&lt;/code&gt; (&lt;a href="https://jats.nlm.nih.gov" rel="nofollow"&gt;JATS&lt;/a&gt; XML)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jira&lt;/code&gt;
(&lt;a href="https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all" rel="nofollow"&gt;Jira&lt;/a&gt;
wiki markup)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json&lt;/code&gt; (JSON version of native AST)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;latex&lt;/code&gt; (&lt;a href="http://latex-project.org" rel="nofollow"&gt;LaTeX&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown&lt;/code&gt; (&lt;a href="https://pandoc.org/MANUAL.html#pandocs-markdown" rel="nofollow"&gt;Pandoc’s
Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_mmd&lt;/code&gt;
(&lt;a href="http://fletcherpenney.net/multimarkdown/" rel="nofollow"&gt;MultiMarkdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_phpextra&lt;/code&gt; (&lt;a href="https://michelf.ca/projects/php-markdown/extra/" rel="nofollow"&gt;PHP Markdown
Extra&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_strict&lt;/code&gt; (original unextended
&lt;a href="http://daringfireball.net/projects/markdown/" rel="nofollow"&gt;Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mediawiki&lt;/code&gt; (&lt;a href="https://www.mediawiki.org/wiki/Help:Formatting" rel="nofollow"&gt;MediaWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man&lt;/code&gt; (&lt;a href="http://man7.org/linux/man-pages/man7/groff_man.7.html" rel="nofollow"&gt;roff
man&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;muse&lt;/code&gt; (&lt;a href="https://amusewiki.org/library/manual" rel="nofollow"&gt;Muse&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;native&lt;/code&gt; (native Haskell)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;odt&lt;/code&gt; (&lt;a href="http://en.wikipedia.org/wiki/OpenDocument" rel="nofollow"&gt;ODT&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opml&lt;/code&gt; (&lt;a href="http://dev.opml.org/spec2.html" rel="nofollow"&gt;OPML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org&lt;/code&gt; (&lt;a href="http://orgmode.org" rel="nofollow"&gt;Emacs Org mode&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rst&lt;/code&gt;
(&lt;a href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html" rel="nofollow"&gt;reStructuredText&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t2t&lt;/code&gt; (&lt;a href="http://txt2tags.org" rel="nofollow"&gt;txt2tags&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textile&lt;/code&gt; (&lt;a href="http://redcloth.org/textile" rel="nofollow"&gt;Textile&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tikiwiki&lt;/code&gt; (&lt;a href="https://doc.tiki.org/Wiki-Syntax-Text#The_Markup_Language_Wiki-Syntax" rel="nofollow"&gt;TikiWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;twiki&lt;/code&gt; (&lt;a href="http://twiki.org/cgi-bin/view/TWiki/TextFormattingRules" rel="nofollow"&gt;TWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vimwiki&lt;/code&gt; (&lt;a href="https://vimwiki.github.io" rel="nofollow"&gt;Vimwiki&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;It can convert &lt;em&gt;to&lt;/em&gt;&lt;/p&gt;
&lt;div id="user-content-output-formats"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;asciidoc&lt;/code&gt; (&lt;a href="http://www.methods.co.nz/asciidoc/" rel="nofollow"&gt;AsciiDoc&lt;/a&gt;) or
&lt;code&gt;asciidoctor&lt;/code&gt; (&lt;a href="https://asciidoctor.org/" rel="nofollow"&gt;AsciiDoctor&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beamer&lt;/code&gt; (&lt;a href="https://ctan.org/pkg/beamer" rel="nofollow"&gt;LaTeX beamer&lt;/a&gt; slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commonmark&lt;/code&gt; (&lt;a href="http://commonmark.org" rel="nofollow"&gt;CommonMark&lt;/a&gt; Markdown)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context&lt;/code&gt; (&lt;a href="http://www.contextgarden.net/" rel="nofollow"&gt;ConTeXt&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docbook&lt;/code&gt; or &lt;code&gt;docbook4&lt;/code&gt; (&lt;a href="http://docbook.org" rel="nofollow"&gt;DocBook&lt;/a&gt; 4)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docbook5&lt;/code&gt; (DocBook 5)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docx&lt;/code&gt; (&lt;a href="https://en.wikipedia.org/wiki/Office_Open_XML" rel="nofollow"&gt;Word docx&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokuwiki&lt;/code&gt; (&lt;a href="https://www.dokuwiki.org/dokuwiki" rel="nofollow"&gt;DokuWiki markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epub&lt;/code&gt; or &lt;code&gt;epub3&lt;/code&gt; (&lt;a href="http://idpf.org/epub" rel="nofollow"&gt;EPUB&lt;/a&gt; v3 book)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epub2&lt;/code&gt; (EPUB v2)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fb2&lt;/code&gt;
(&lt;a href="http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1" rel="nofollow"&gt;FictionBook2&lt;/a&gt;
e-book)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gfm&lt;/code&gt; (&lt;a href="https://help.github.com/articles/github-flavored-markdown/"&gt;GitHub-Flavored
Markdown&lt;/a&gt;),
or the deprecated and less accurate &lt;code&gt;markdown_github&lt;/code&gt;; use
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;markdown_github&lt;/code&gt;&lt;/a&gt;
only if you need extensions not supported in
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;gfm&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;haddock&lt;/code&gt; (&lt;a href="https://www.haskell.org/haddock/doc/html/ch03s08.html" rel="nofollow"&gt;Haddock
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html&lt;/code&gt; or &lt;code&gt;html5&lt;/code&gt; (&lt;a href="http://www.w3.org/html/" rel="nofollow"&gt;HTML&lt;/a&gt;,
i.e. &lt;a href="http://www.w3.org/TR/html5/" rel="nofollow"&gt;HTML5&lt;/a&gt;/XHTML &lt;a href="https://www.w3.org/TR/html-polyglot/" rel="nofollow"&gt;polyglot
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html4&lt;/code&gt; (&lt;a href="http://www.w3.org/TR/xhtml1/" rel="nofollow"&gt;XHTML&lt;/a&gt; 1.0 Transitional)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icml&lt;/code&gt; (&lt;a href="http://wwwimages.adobe.com/www.adobe.com/content/dam/acom/en/devnet/indesign/sdk/cs6/idml/idml-cookbook.pdf" rel="nofollow"&gt;InDesign
ICML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipynb&lt;/code&gt; (&lt;a href="https://nbformat.readthedocs.io/en/latest/" rel="nofollow"&gt;Jupyter
notebook&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jats&lt;/code&gt; (&lt;a href="https://jats.nlm.nih.gov" rel="nofollow"&gt;JATS&lt;/a&gt; XML)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jira&lt;/code&gt;
(&lt;a href="https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all" rel="nofollow"&gt;Jira&lt;/a&gt;
wiki markup)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json&lt;/code&gt; (JSON version of native AST)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;latex&lt;/code&gt; (&lt;a href="http://latex-project.org" rel="nofollow"&gt;LaTeX&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man&lt;/code&gt; (&lt;a href="http://man7.org/linux/man-pages/man7/groff_man.7.html" rel="nofollow"&gt;roff
man&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown&lt;/code&gt; (&lt;a href="https://pandoc.org/MANUAL.html#pandocs-markdown" rel="nofollow"&gt;Pandoc’s
Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_mmd&lt;/code&gt;
(&lt;a href="http://fletcherpenney.net/multimarkdown/" rel="nofollow"&gt;MultiMarkdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_phpextra&lt;/code&gt; (&lt;a href="https://michelf.ca/projects/php-markdown/extra/" rel="nofollow"&gt;PHP Markdown
Extra&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_strict&lt;/code&gt; (original unextended
&lt;a href="http://daringfireball.net/projects/markdown/" rel="nofollow"&gt;Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mediawiki&lt;/code&gt; (&lt;a href="https://www.mediawiki.org/wiki/Help:Formatting" rel="nofollow"&gt;MediaWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ms&lt;/code&gt; (&lt;a href="http://man7.org/linux/man-pages/man7/groff_ms.7.html" rel="nofollow"&gt;roff
ms&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;muse&lt;/code&gt; (&lt;a href="https://amusewiki.org/library/manual" rel="nofollow"&gt;Muse&lt;/a&gt;),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;native&lt;/code&gt; (native Haskell),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;odt&lt;/code&gt; (&lt;a href="http://en.wikipedia.org/wiki/OpenDocument" rel="nofollow"&gt;OpenOffice text
document&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opml&lt;/code&gt; (&lt;a href="http://dev.opml.org/spec2.html" rel="nofollow"&gt;OPML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opendocument&lt;/code&gt; (&lt;a href="http://opendocument.xml.org" rel="nofollow"&gt;OpenDocument&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org&lt;/code&gt; (&lt;a href="http://orgmode.org" rel="nofollow"&gt;Emacs Org mode&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pdf&lt;/code&gt; (&lt;a href="https://www.adobe.com/pdf/" rel="nofollow"&gt;PDF&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plain&lt;/code&gt; (plain text),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pptx&lt;/code&gt;
(&lt;a href="https://en.wikipedia.org/wiki/Microsoft_PowerPoint" rel="nofollow"&gt;PowerPoint&lt;/a&gt;
slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rst&lt;/code&gt;
(&lt;a href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html" rel="nofollow"&gt;reStructuredText&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtf&lt;/code&gt; (&lt;a href="http://en.wikipedia.org/wiki/Rich_Text_Format" rel="nofollow"&gt;Rich Text
Format&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;texinfo&lt;/code&gt; (&lt;a href="http://www.gnu.org/software/texinfo/" rel="nofollow"&gt;GNU Texinfo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textile&lt;/code&gt; (&lt;a href="http://redcloth.org/textile" rel="nofollow"&gt;Textile&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slideous&lt;/code&gt; (&lt;a href="http://goessner.net/articles/slideous/" rel="nofollow"&gt;Slideous&lt;/a&gt; HTML
and JavaScript slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slidy&lt;/code&gt; (&lt;a href="http://www.w3.org/Talks/Tools/Slidy/" rel="nofollow"&gt;Slidy&lt;/a&gt; HTML and
JavaScript slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dzslides&lt;/code&gt; (&lt;a href="http://paulrouget.com/dzslides/" rel="nofollow"&gt;DZSlides&lt;/a&gt; HTML5 +
JavaScript slide show),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;revealjs&lt;/code&gt; (&lt;a href="http://lab.hakim.se/reveal-js/" rel="nofollow"&gt;reveal.js&lt;/a&gt; HTML5 +
JavaScript slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s5&lt;/code&gt; (&lt;a href="http://meyerweb.com/eric/tools/s5/" rel="nofollow"&gt;S5&lt;/a&gt; HTML and JavaScript
slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tei&lt;/code&gt; (&lt;a href="https://github.com/TEIC/TEI-Simple"&gt;TEI Simple&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xwiki&lt;/code&gt; (&lt;a href="https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/XWikiSyntax/" rel="nofollow"&gt;XWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zimwiki&lt;/code&gt; (&lt;a href="http://zim-wiki.org/manual/Help/Wiki_Syntax.html" rel="nofollow"&gt;ZimWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the path of a custom Lua writer, see &lt;a href="https://pandoc.org/MANUAL.html#custom-writers" rel="nofollow"&gt;Custom
writers&lt;/a&gt; below&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Pandoc can also produce PDF output via LaTeX, Groff ms, or HTML.&lt;/p&gt;
&lt;p&gt;Pandoc’s enhanced version of Markdown includes syntax for tables,
definition lists, metadata blocks, footnotes, citations, math, and much
more. See the User’s Manual below under &lt;a href="https://pandoc.org/MANUAL.html#pandocs-markdown" rel="nofollow"&gt;Pandoc’s
Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pandoc has a modular design: it consists of a set of readers, which
parse text in a given format and produce a native representation of the
document (an &lt;em&gt;abstract syntax tree&lt;/em&gt; or AST), and a set of writers, which
convert this native representation into a target format. Thus, adding an
input or output format requires only adding a reader or writer. Users
can also run custom pandoc filters to modify the intermediate AST (see
the documentation for &lt;a href="https://pandoc.org/filters.html" rel="nofollow"&gt;filters&lt;/a&gt; and
&lt;a href="https://pandoc.org/lua-filters.html" rel="nofollow"&gt;Lua filters&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Because pandoc’s intermediate representation of a document is less
expressive than many of the formats it converts between, one should not
expect perfect conversions between every format and every other. Pandoc
attempts to preserve the structural elements of a document, but not
formatting details such as margin size. And some document elements, such
as complex tables, may not fit into pandoc’s simple document model.
While conversions from pandoc’s Markdown to all formats aspire to be
perfect, conversions from formats more expressive than pandoc’s Markdown
can be expected to be lossy.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;Here’s &lt;a href="INSTALL.md"&gt;how to install pandoc&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Pandoc’s website contains a full &lt;a href="https://pandoc.org/MANUAL.html" rel="nofollow"&gt;User’s
Guide&lt;/a&gt;. It is also available
&lt;a href="MANUAL.txt"&gt;here&lt;/a&gt; as pandoc-flavored Markdown. The website also
contains some &lt;a href="https://pandoc.org/demos.html" rel="nofollow"&gt;examples of the use of
pandoc&lt;/a&gt; and a limited &lt;a href="https://pandoc.org/try" rel="nofollow"&gt;online
demo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Pull requests, bug reports, and feature requests are welcome. Please
make sure to read &lt;a href="CONTRIBUTING.md"&gt;the contributor guidelines&lt;/a&gt; before
opening a new issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;© 2006-2018 John MacFarlane (&lt;a href="mailto:jgm@berkeley.edu"&gt;jgm@berkeley.edu&lt;/a&gt;). Released under the
&lt;a href="http://www.gnu.org/copyleft/gpl.html" title="GNU General Public License" rel="nofollow"&gt;GPL&lt;/a&gt;,
version 2 or greater. This software carries no warranty of any kind.
(See COPYRIGHT for full copyright and warranty notices.)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jgm</author><guid isPermaLink="false">https://github.com/jgm/pandoc</guid><pubDate>Mon, 03 Feb 2020 00:03:00 GMT</pubDate></item><item><title>haskell/haskell-ide-engine #4 in Haskell, This month</title><link>https://github.com/haskell/haskell-ide-engine</link><description>&lt;p&gt;&lt;i&gt;The engine for haskell ide-integration. Not an IDE&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-integration-with-ghcide-the-new-haskell-ide" class="anchor" aria-hidden="true" href="#integration-with-ghcide-the-new-haskell-ide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration with &lt;code&gt;ghcide&lt;/code&gt;: the new &lt;code&gt;haskell-ide&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Currently the main development effort is focused in &lt;a href="https://github.com/haskell/haskell-ide-engine/issues/1416"&gt;integrating haskell-ide-engine&lt;/a&gt; and &lt;a href="https://github.com/digital-asset/ghcide"&gt;ghcide&lt;/a&gt; under a common repository:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/haskell/haskell-language-server"&gt;https://github.com/haskell/haskell-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Until the new &lt;code&gt;haskell-language-server&lt;/code&gt; reaches the feature level and stability of &lt;code&gt;haskell-ide-engine&lt;/code&gt;, we aim to continue doing monthly releases. However, in general, bug fixes will be favored over new features and refactorings. They could be redirected to the new repo to avoid duplicated efforts.&lt;/p&gt;
&lt;p&gt;You still can contribute to improve the haskell ide experience! If you are not sure if you contribution should belong to this repo or the new one, feel free to ask in &lt;a href="#its-time-to-join-the-project"&gt;any of the communication channels&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-haskell-ide-engine-hie" class="anchor" aria-hidden="true" href="#haskell-ide-engine-hie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Haskell IDE Engine (HIE)&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/haskell/haskell-ide-engine/raw/master/logos/HIE_logo_512.png"&gt;&lt;img src="https://github.com/haskell/haskell-ide-engine/raw/master/logos/HIE_logo_512.png" width="256" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/e91a929ad3a9026c2d11216147f47b02866c9577/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d425344332d677265656e2e7376673f64756d6d79" alt="License BSD3" data-canonical-src="https://img.shields.io/badge/license-BSD3-green.svg?dummy" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/haskell/haskell-ide-engine/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c7ec34b3056999d94f373bf8596a8c3ee85a94c/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f6861736b656c6c2f6861736b656c6c2d6964652d656e67696e652f6d61737465722e737667" alt="CircleCI" data-canonical-src="https://img.shields.io/circleci/project/github/haskell/haskell-ide-engine/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/Bubba/haskell-ide-engine-74xec" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e965bc22ff5d28e244bde14e2923b6d6d7215caa/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f36686974376d7876676472616f3371303f7376673d74727565" alt="AppVeyor" data-canonical-src="https://ci.appveyor.com/api/projects/status/6hit7mxvgdrao3q0?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codetriage.com/haskell/haskell-ide-engine" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e91fe3f3c3461f8d7a5aaf33fb79d5ed0be4d42/68747470733a2f2f7777772e636f64657472696167652e636f6d2f6861736b656c6c2f6861736b656c6c2d6964652d656e67696e652f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/haskell/haskell-ide-engine/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project aims to be &lt;strong&gt;the universal interface&lt;/strong&gt; to &lt;strong&gt;a growing number of Haskell tools&lt;/strong&gt;, providing a &lt;strong&gt;fully-featured &lt;a href="https://github.com/Microsoft/language-server-protocol/blob/master/protocol.md"&gt;Language Server Protocol&lt;/a&gt; server&lt;/strong&gt; for editors and IDEs that require Haskell-specific functionality.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#haskell-ide-engine-hie"&gt;Haskell IDE Engine (HIE)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation-with-nix"&gt;Installation with Nix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-on-archlinux"&gt;Installation on ArchLinux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-with-ghc-and-hie-as-a-vs-code-devcontainer"&gt;Installation with GHC and HIE as a VS Code Devcontainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-from-source"&gt;Installation from source&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#common-pre-requirements"&gt;Common pre-requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linux-specific-pre-requirements"&gt;Linux-specific pre-requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows-specific-pre-requirements"&gt;Windows-specific pre-requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#download-the-source-code"&gt;Download the source code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building"&gt;Building&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#install-via-cabal"&gt;Install via cabal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-cabal-using-stack"&gt;Install cabal using stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-specific-ghc-version"&gt;Install specific GHC Version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multiple-versions-of-hie-optional"&gt;Multiple versions of HIE (optional)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#project-configuration"&gt;Project Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#editor-integration"&gt;Editor Integration&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#using-hie-with-vs-code"&gt;Using HIE with VS Code&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#using-vs-code-with-nix"&gt;Using VS Code with Nix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-hie-with-sublime-text"&gt;Using HIE with Sublime Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-hie-with-vim-or-neovim"&gt;Using HIE with Vim or Neovim&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#coc"&gt;Coc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#languageclient-neovim"&gt;LanguageClient-neovim&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#vim-plug"&gt;vim-plug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clone-the-languageclient-neovim-repo"&gt;Clone the LanguageClient-neovim repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sample-vimrc"&gt;Sample &lt;code&gt;~/.vimrc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-hie-with-atom"&gt;Using HIE with Atom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-hie-with-emacs"&gt;Using HIE with Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-hie-with-spacemacs"&gt;Using HIE with Spacemacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-hie-with-oni"&gt;Using HIE with Oni&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#docs-on-hovercompletion"&gt;Docs on hover/completion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#planned-features"&gt;Planned Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#its-time-to-join-the-project"&gt;It's time to join the project!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#emacs"&gt;Emacs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#parse-errors-file-state-going-out-of-sync"&gt;Parse errors, file state going out of sync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#emacs-direnv-loads-environment-too-late"&gt;&lt;code&gt;emacs-direnv&lt;/code&gt; loads environment too late&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#dyld-on-macos"&gt;DYLD on macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos-got-error-while-installing-ghc-861-or-862---dyld-library-not-loaded-usrlocaloptgmpliblibgmp10dylib"&gt;macOS: Got error while installing GHC 8.6.1 or 8.6.2 - dyld: Library not loaded: /usr/local/opt/gmp/lib/libgmp.10.dylib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos-got-error-while-processing-diagnostics-unable-to-load-package-integer-gmp-1020"&gt;macOS: Got error while processing diagnostics: unable to load package &lt;code&gt;integer-gmp-1.0.2.0&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cannot-satisfy--package-id-package"&gt;cannot satisfy -package-id &amp;lt;package&amp;gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#is-package-base-x"&gt;Is &amp;lt;package&amp;gt; base-x?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#is-there-a-hash--after-package"&gt;Is there a hash (#) after &amp;lt;package&amp;gt;?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#otherwise"&gt;Otherwise&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#liquid-haskell"&gt;Liquid Haskell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#profiling-haskell-ide-engine"&gt;Profiling &lt;code&gt;haskell-ide-engine&lt;/code&gt;.&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#using-ghc-events-analyze"&gt;Using &lt;code&gt;ghc-events-analyze&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Supports plain GHC projects, cabal projects(sandboxed and non sandboxed) and stack projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fast due to caching of compile info&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uses LSP, so should be easy to integrate with a wide selection of editors&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Diagnostics via hlint and GHC warnings/errors&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2aa08d157d92b2953bd86cfd35769fc0c42fb994/68747470733a2f2f692e696d6775722e636f6d2f3176716d3465462e676966"&gt;&lt;img src="https://camo.githubusercontent.com/2aa08d157d92b2953bd86cfd35769fc0c42fb994/68747470733a2f2f692e696d6775722e636f6d2f3176716d3465462e676966" alt="Diagnostics" data-canonical-src="https://i.imgur.com/1vqm4eF.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code actions and quick fixes via apply-refact&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6d201abf03ddb9be69ab213e92d8402b87a1e682/68747470733a2f2f692e696d6775722e636f6d2f644272536935462e676966"&gt;&lt;img src="https://camo.githubusercontent.com/6d201abf03ddb9be69ab213e92d8402b87a1e682/68747470733a2f2f692e696d6775722e636f6d2f644272536935462e676966" alt="Apply Refact" data-canonical-src="https://i.imgur.com/dBrSi5F.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type information and documentation(via haddock) on hover&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/61086adf657ed1e8cb4e23dc4c8ad2993535261f/68747470733a2f2f692e696d6775722e636f6d2f41637659524f762e676966"&gt;&lt;img src="https://camo.githubusercontent.com/61086adf657ed1e8cb4e23dc4c8ad2993535261f/68747470733a2f2f692e696d6775722e636f6d2f41637659524f762e676966" alt="Hover" data-canonical-src="https://i.imgur.com/AcvYROv.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jump to definition&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1df0430f4d616f03d5fb0cc2f566cf90ed4caf92/68747470733a2f2f692e696d6775722e636f6d2f6b6d435532427a2e676966"&gt;&lt;img src="https://camo.githubusercontent.com/1df0430f4d616f03d5fb0cc2f566cf90ed4caf92/68747470733a2f2f692e696d6775722e636f6d2f6b6d435532427a2e676966" alt="Find Def" data-canonical-src="https://i.imgur.com/kmCU2Bz.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List all top level definitions&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/98474da5d6fb94d6b50afc17159c07c7076ab5fd/68747470733a2f2f692e696d6775722e636f6d2f474572635971702e676966"&gt;&lt;img src="https://camo.githubusercontent.com/98474da5d6fb94d6b50afc17159c07c7076ab5fd/68747470733a2f2f692e696d6775722e636f6d2f474572635971702e676966" alt="Doc Symbols" data-canonical-src="https://i.imgur.com/GErcYqp.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Highlight references in document&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/321a7f27cb6a831de91a318d83ebd765785e0c9e/68747470733a2f2f692e696d6775722e636f6d2f594c6a487332732e676966"&gt;&lt;img src="https://camo.githubusercontent.com/321a7f27cb6a831de91a318d83ebd765785e0c9e/68747470733a2f2f692e696d6775722e636f6d2f594c6a487332732e676966" alt="Doc Highlight" data-canonical-src="https://i.imgur.com/YLjHs2s.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Completion&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f17cb65e337a168f3f99ab8c4749b076beee47ed/68747470733a2f2f692e696d6775722e636f6d2f775236494a374d2e676966"&gt;&lt;img src="https://camo.githubusercontent.com/f17cb65e337a168f3f99ab8c4749b076beee47ed/68747470733a2f2f692e696d6775722e636f6d2f775236494a374d2e676966" alt="Completion" data-canonical-src="https://i.imgur.com/wR6IJ7M.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Formatting via brittany&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/816777ff5ea8c4e5615579dc2ca14a895ad43420/68747470733a2f2f692e696d6775722e636f6d2f63715a5a3848432e676966"&gt;&lt;img src="https://camo.githubusercontent.com/816777ff5ea8c4e5615579dc2ca14a895ad43420/68747470733a2f2f692e696d6775722e636f6d2f63715a5a3848432e676966" alt="Formatting" data-canonical-src="https://i.imgur.com/cqZZ8HC.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Renaming via HaRe (NOTE: HaRe is temporarily disabled)&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9037127f728c4eec37a72e25b191c7b7a5a71c0b/68747470733a2f2f692e696d6775722e636f6d2f7a3033473261352e676966"&gt;&lt;img src="https://camo.githubusercontent.com/9037127f728c4eec37a72e25b191c7b7a5a71c0b/68747470733a2f2f692e696d6775722e636f6d2f7a3033473261352e676966" alt="Renaming" data-canonical-src="https://i.imgur.com/z03G2a5.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add packages to cabal and hpack package files&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2488460/43036067-20ae5964-8cf2-11e8-9951-4fd849b3f735.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/2488460/43036067-20ae5964-8cf2-11e8-9951-4fd849b3f735.gif" alt="Adding package to hpack" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1387653/40287051-b6f987fe-5c5f-11e8-980f-ed7bfa1b2aec.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/1387653/40287051-b6f987fe-5c5f-11e8-980f-ed7bfa1b2aec.gif" alt="Adding import &amp;amp; deps" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Typo quick fixes&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2488460/43036093-746ae176-8cf2-11e8-8b2d-59799b21c283.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/2488460/43036093-746ae176-8cf2-11e8-8b2d-59799b21c283.gif" alt="Quick fixes" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add missing imports (via hsimport)&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2488460/43036113-9bb5d5b0-8cf2-11e8-8e32-20952378cf2b.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/2488460/43036113-9bb5d5b0-8cf2-11e8-8e32-20952378cf2b.gif" alt="Missing imports" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation-with-nix" class="anchor" aria-hidden="true" href="#installation-with-nix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation with Nix&lt;/h3&gt;
&lt;p&gt;Follow the instructions at &lt;a href="https://github.com/Infinisil/all-hies"&gt;https://github.com/Infinisil/all-hies&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-on-archlinux" class="anchor" aria-hidden="true" href="#installation-on-archlinux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation on ArchLinux&lt;/h3&gt;
&lt;p&gt;An &lt;a href="https://aur.archlinux.org/packages/haskell-ide-engine/" rel="nofollow"&gt;haskell-ide-engine&lt;/a&gt; package is available on the AUR.&lt;/p&gt;
&lt;p&gt;Using &lt;a href="https://github.com/aurapm/aura"&gt;Aura&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# aura -A haskell-ide-engine
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-installation-with-ghc-and-hie-as-a-vs-code-devcontainer" class="anchor" aria-hidden="true" href="#installation-with-ghc-and-hie-as-a-vs-code-devcontainer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation with GHC and HIE as a VS Code Devcontainer&lt;/h3&gt;
&lt;p&gt;VS Code provides the ability to develop applications inside of a Docker container (called &lt;em&gt;Devcontainers&lt;/em&gt;)
&lt;a href="https://code.visualstudio.com/docs/remote/containers" rel="nofollow"&gt;https://code.visualstudio.com/docs/remote/containers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is a community Devcontainer setup which installs and configures GHC + HIE 8.6.5 and the necessary VS Code extensions to integrate them into the editor.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hmemcpy/haskell-hie-devcontainer"&gt;https://github.com/hmemcpy/haskell-hie-devcontainer&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-from-source" class="anchor" aria-hidden="true" href="#installation-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation from source&lt;/h3&gt;
&lt;p&gt;To install HIE, you need stack version &amp;gt;= 2.1.1.&lt;/p&gt;
&lt;p&gt;HIE builds from source code, so there's a couple of extra steps.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-common-pre-requirements" class="anchor" aria-hidden="true" href="#common-pre-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common pre-requirements&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stack&lt;/code&gt; must be in your PATH&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt; must be in your PATH&lt;/li&gt;
&lt;li&gt;Stack local bin directory must be in your PATH. Get it with &lt;code&gt;stack path --local-bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tip: you can quickly check if some command is in your path by running the command.
If you receive some meaningful output instead of "command not found"-like message
then it means you have the command in PATH.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-linux-specific-pre-requirements" class="anchor" aria-hidden="true" href="#linux-specific-pre-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux-specific pre-requirements&lt;/h4&gt;
&lt;p&gt;On Linux you will need install a couple of extra libraries (for Unicode (&lt;a href="http://site.icu-project.org/" rel="nofollow"&gt;ICU&lt;/a&gt;) and &lt;a href="https://www.gnu.org/software/ncurses/" rel="nofollow"&gt;NCURSES&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Debian 9/Ubuntu 18.04 or earlier&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt install libicu-dev libtinfo-dev libgmp-dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Debian 10/Ubuntu 18.10 or later&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt install libicu-dev libncurses-dev libgmp-dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Fedora&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo dnf install libicu-devel ncurses-devel &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; also zlib-devel if not already installed&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-windows-specific-pre-requirements" class="anchor" aria-hidden="true" href="#windows-specific-pre-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows-specific pre-requirements&lt;/h4&gt;
&lt;p&gt;In order to avoid problems with long paths on Windows you can do either one of the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Clone the &lt;code&gt;haskell-ide-engine&lt;/code&gt; to a short path, for example the root of your logical drive (e.g. to
&lt;code&gt;C:\hie&lt;/code&gt;). If this doesn't work or you want to use a longer path, try the second option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the &lt;code&gt;Local Group Policy Editor&lt;/code&gt; is available on your system, go to: &lt;code&gt;Local Computer Policy -&amp;gt; Computer Configuration -&amp;gt; Administrative Templates -&amp;gt; System -&amp;gt; Filesystem&lt;/code&gt; set &lt;code&gt;Enable Win32 long paths&lt;/code&gt; to &lt;code&gt;Enabled&lt;/code&gt;. If you don't have the policy editor you can use regedit by using the following instructions &lt;a href="https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file#enable-long-paths-in-windows-10-version-1607-and-later" rel="nofollow"&gt;here&lt;/a&gt;. You also need to configure git to allow longer paths by using unicode paths. To set this for all your git repositories use &lt;code&gt;git config --system core.longpaths true&lt;/code&gt; (you probably need an administrative shell for this) or for just this one repository use &lt;code&gt;git config core.longpaths true&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-download-the-source-code" class="anchor" aria-hidden="true" href="#download-the-source-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download the source code&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/haskell/haskell-ide-engine --recurse-submodules
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; haskell-ide-engine&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h4&gt;
&lt;p&gt;Uses the &lt;a href="https://shakebuild.com/" rel="nofollow"&gt;shake&lt;/a&gt; build system for predictable builds.&lt;/p&gt;
&lt;p&gt;Note, on first invocation of the build script, a GHC is being installed for execution.
The GHC used for the &lt;code&gt;install.hs&lt;/code&gt; can be adjusted in &lt;code&gt;shake.yaml&lt;/code&gt; by using a different resolver.&lt;/p&gt;
&lt;p&gt;Available commands can be seen with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack ./install.hs &lt;span class="pl-c1"&gt;help&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remember, this will take time to download a Stackage-LTS and an appropriate GHC. However, afterwards all commands should work as expected.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-install-via-cabal" class="anchor" aria-hidden="true" href="#install-via-cabal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install via cabal&lt;/h5&gt;
&lt;p&gt;The install-script can be invoked via &lt;code&gt;cabal&lt;/code&gt; instead of &lt;code&gt;stack&lt;/code&gt; with the command&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cabal v2-run ./install.hs --project-file install/shake.project &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;target&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or using the existing alias script&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./cabal-hie-install &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;target&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running the script with cabal on windows requires a cabal version greater or equal to &lt;code&gt;3.0.0.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For brevity, only the &lt;code&gt;stack&lt;/code&gt;-based commands are presented in the following sections.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-install-specific-ghc-version" class="anchor" aria-hidden="true" href="#install-specific-ghc-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install specific GHC Version&lt;/h5&gt;
&lt;p&gt;Install hie for the latest available and supported GHC version (and hoogle docs):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack ./install.hs hie&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install hie for a specific GHC version (and hoogle docs):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack ./install.hs hie-8.6.5
stack ./install.hs data&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Haskell IDE Engine can also be built with &lt;code&gt;cabal v2-build&lt;/code&gt; instead of &lt;code&gt;stack build&lt;/code&gt;.
This has the advantage that you can decide how the GHC versions have been installed.
To see what GHC versions are available, the command &lt;code&gt;cabal-hie-install ghcs&lt;/code&gt; can be used.
It will list all GHC versions that are on the path and their respective installation directory.
If you think, this list is incomplete, you can try to modify the PATH variable, such that the executables can be found.
Note, that the targets &lt;code&gt;hie&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; depend on the found GHC versions.
They install Haskell IDE Engine only for the found GHC versions.&lt;/p&gt;
&lt;p&gt;An example output is:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; cabal-hie-install ghcs
&lt;span class="pl-k"&gt;******************************************************************&lt;/span&gt;
Found the following GHC paths:
ghc-8.4.4: /opt/bin/ghc-8.4.4
ghc-8.6.2: /opt/bin/ghc-8.6.2

&lt;span class="pl-k"&gt;******************************************************************&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your desired ghc has been found, you use it to install Haskell IDE Engine.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cabal-hie-install hie-8.4.4
cabal-hie-install data&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In general, executing targets with &lt;code&gt;cabal&lt;/code&gt; instead of &lt;code&gt;stack&lt;/code&gt; have the same behaviour, except they do not install a GHC if it is missing but fail.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-multiple-versions-of-hie-optional" class="anchor" aria-hidden="true" href="#multiple-versions-of-hie-optional"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple versions of HIE (optional)&lt;/h5&gt;
&lt;p&gt;If you installed multiple versions of HIE then you will need to use a wrapper script.
Wrapper script will analyze your project, find suitable version of HIE and launch it.
Enable it by editing VS Code settings like that:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;languageServerHaskell.useCustomHieWrapper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;languageServerHaskell.useCustomHieWrapperPath&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hie-wrapper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;There are some settings that can be configured via a &lt;code&gt;settings.json&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;languageServerHaskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hlintOn&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-ii"&gt;Boolean&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxNumberOfProblems&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-ii"&gt;Number&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;diagnosticsDebounceDuration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-ii"&gt;:&lt;/span&gt; &lt;span class="pl-ii"&gt;Number&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;liquidOn&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                    &lt;span class="pl-ii"&gt;:&lt;/span&gt; &lt;span class="pl-ii"&gt;Bool&lt;/span&gt; &lt;span class="pl-ii"&gt;(default&lt;/span&gt; &lt;span class="pl-ii"&gt;False)&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;completionSnippetsOn&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;        &lt;span class="pl-ii"&gt;:&lt;/span&gt; &lt;span class="pl-ii"&gt;Bool&lt;/span&gt; &lt;span class="pl-ii"&gt;(default&lt;/span&gt; &lt;span class="pl-ii"&gt;True)&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;formatOnImportOn&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;            &lt;span class="pl-ii"&gt;:&lt;/span&gt; &lt;span class="pl-ii"&gt;Bool&lt;/span&gt; &lt;span class="pl-ii"&gt;(default&lt;/span&gt; &lt;span class="pl-ii"&gt;True)&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;formattingProvider&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;          &lt;span class="pl-ii"&gt;:&lt;/span&gt; &lt;span class="pl-ii"&gt;String&lt;/span&gt; &lt;span class="pl-ii"&gt;(default&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brittany&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                                &lt;span class="pl-ii"&gt;alternate&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;floskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-ii"&gt;)&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;VS Code: These settings will show up in the settings window&lt;/li&gt;
&lt;li&gt;LanguageClient-neovim: Create this file in &lt;code&gt;$projectdir/.vim/settings.json&lt;/code&gt; or set &lt;code&gt;g:LanguageClient_settingsPath&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-project-configuration" class="anchor" aria-hidden="true" href="#project-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Configuration&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;For a full explanation of possible configurations, refer to &lt;a href="https://github.com/mpickering/hie-bios/blob/master/README.md"&gt;hie-bios/README&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;HIE will attempt to automatically detect your project configuration and set up
the environment for GHC.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;cabal.project&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;stack.yaml&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;*.cabal&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;Project selected&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Cabal v2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Stack&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Cabal (v2 or v1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;However, you can also place a &lt;code&gt;hie.yaml&lt;/code&gt; file in the root of the workspace to
&lt;strong&gt;explicitly&lt;/strong&gt; describe how to setup the environment. For example, to state that
you want to use &lt;code&gt;stack&lt;/code&gt; then the configuration file would look like:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;stack&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell-ide-engine:lib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you use &lt;code&gt;cabal&lt;/code&gt; then you probably need to specify which component you want
to use.&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;cabal&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lib:haskell-ide-engine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have a project with multiple components, you can use a cabal-multi
cradle:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;cabal&lt;/span&gt;:
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./test/dispatcher/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test:dispatcher-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./test/functional/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test:func-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./test/unit/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test:unit-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./hie-plugin-api/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lib:hie-plugin-api&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./app/MainHie.hs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exe:hie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./app/HieWrapper.hs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exe:hie-wrapper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lib:haskell-ide-engine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Equivalently, you can use stack:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;stack&lt;/span&gt;:
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./test/dispatcher/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell-ide-engine:test:dispatcher-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./test/functional/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell-ide-engine:test:func-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./test/unit/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell-ide-engine:test:unit-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./hie-plugin-api/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hie-plugin-api:lib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./app/MainHie.hs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell-ide-engine:exe:hie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./app/HieWrapper.hs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell-ide-engine:exe:hie-wrapper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell-ide-engine:lib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can explicitly state the program which should be used to collect
the options by supplying the path to the program. It is interpreted
relative to the current working directory if it is not an absolute path.&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;bios&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;program&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.hie-bios&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The complete configuration is a subset of&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;cabal&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;optional component name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-ent"&gt;stack&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;optional component name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-ent"&gt;bios&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;program&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program to run&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ent"&gt;dependency-program&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;optional program to run&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-ent"&gt;direct&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;arguments&lt;/span&gt;: &lt;span class="pl-s"&gt;["list","of","ghc","arguments"]&lt;/span&gt;
  &lt;span class="pl-ent"&gt;default&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;none&lt;/span&gt;:

&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;someDep&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is also support for multiple cradles in a single &lt;code&gt;hie.yaml&lt;/code&gt;. An example configuration for Haskell IDE Engine:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;multi&lt;/span&gt;:
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;./test/dispatcher/&lt;/span&gt;
      &lt;span class="pl-ent"&gt;config&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;cabal&lt;/span&gt;:
            &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test:dispatcher-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;./test/functional/&lt;/span&gt;
      &lt;span class="pl-ent"&gt;config&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;cabal&lt;/span&gt;:
            &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test:func-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;./test/unit/&lt;/span&gt;
      &lt;span class="pl-ent"&gt;config&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;cabal&lt;/span&gt;:
            &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test:unit-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;./hie-plugin-api/&lt;/span&gt;
      &lt;span class="pl-ent"&gt;config&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;cabal&lt;/span&gt;:
            &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lib:hie-plugin-api&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;./app/MainHie.hs&lt;/span&gt;
      &lt;span class="pl-ent"&gt;config&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;cabal&lt;/span&gt;:
            &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exe:hie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;./app/HieWrapper.hs&lt;/span&gt;
      &lt;span class="pl-ent"&gt;config&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;cabal&lt;/span&gt;:
            &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exe:hie-wrapper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;./&lt;/span&gt;
      &lt;span class="pl-ent"&gt;config&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;cradle&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;cabal&lt;/span&gt;:
            &lt;span class="pl-ent"&gt;component&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lib:haskell-ide-engine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-editor-integration" class="anchor" aria-hidden="true" href="#editor-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editor Integration&lt;/h2&gt;
&lt;p&gt;Note to editor integrators: there is now a &lt;code&gt;hie-wrapper&lt;/code&gt; executable, which is installed alongside the &lt;code&gt;hie&lt;/code&gt; executable.  When this is invoked in the project root directory, it attempts to work out the GHC version used in the project, and then launch the matching &lt;code&gt;hie&lt;/code&gt; executable.&lt;/p&gt;
&lt;p&gt;All of the editor integrations assume that you have already installed HIE (see above) and that &lt;code&gt;stack&lt;/code&gt; put the &lt;code&gt;hie&lt;/code&gt; binary in your path (usually &lt;code&gt;~/.local/bin&lt;/code&gt; on linux and macOS).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-hie-with-vs-code" class="anchor" aria-hidden="true" href="#using-hie-with-vs-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using HIE with VS Code&lt;/h3&gt;
&lt;p&gt;Install from
&lt;a href="https://marketplace.visualstudio.com/items?itemName=alanz.vscode-hie-server" rel="nofollow"&gt;the VSCode marketplace&lt;/a&gt;, or manually from the repository &lt;a href="https://github.com/alanz/vscode-hie-server"&gt;vscode-hie-server&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-vs-code-with-nix" class="anchor" aria-hidden="true" href="#using-vs-code-with-nix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using VS Code with Nix&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;.config/nixpkgs/config.nix&lt;/code&gt; sample:&lt;/p&gt;
&lt;div class="highlight highlight-source-nix"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-c1"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&amp;lt;nixpkgs&amp;gt;&lt;/span&gt; {};

&lt;span class="pl-k"&gt;let&lt;/span&gt;
  &lt;span class="pl-e"&gt;hie&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;import&lt;/span&gt; (&lt;span class="pl-v"&gt;fetchFromGitHub&lt;/span&gt; {
                   &lt;span class="pl-e"&gt;owner&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;domenkozar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
                   &lt;span class="pl-e"&gt;repo&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hie-nix&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
                   &lt;span class="pl-e"&gt;rev&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;e3113da&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
                   &lt;span class="pl-e"&gt;sha256&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;05rkzjvzywsg66iafm84xgjlkf27yfbagrdcb8sc9fd59hrzyiqk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
                 }) {})&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;hie84&lt;/span&gt;;
&lt;span class="pl-k"&gt;in&lt;/span&gt;
{
  &lt;span class="pl-e"&gt;allowUnfree&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
  &lt;span class="pl-e"&gt;packageOverrides&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;pkgs&lt;/span&gt;: &lt;span class="pl-k"&gt;rec&lt;/span&gt; {

    &lt;span class="pl-e"&gt;vscode&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-v"&gt;pkgs&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;vscode&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;overrideDerivation&lt;/span&gt; (&lt;span class="pl-smi"&gt;old&lt;/span&gt;: {
      &lt;span class="pl-e"&gt;postFixup&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;''&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        wrapProgram $out/bin/code --prefix PATH : &lt;span class="pl-mi"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-v"&gt;lib&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-v"&gt;makeBinPath&lt;/span&gt; [&lt;span class="pl-v"&gt;hie&lt;/span&gt;]&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &lt;span class="pl-pds"&gt;''&lt;/span&gt;&lt;/span&gt;;
    });

  };
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-hie-with-sublime-text" class="anchor" aria-hidden="true" href="#using-hie-with-sublime-text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using HIE with Sublime Text&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Make sure HIE is installed (see above) and that the directory stack put the &lt;code&gt;hie&lt;/code&gt; binary in is in your path
&lt;ul&gt;
&lt;li&gt;(usually &lt;code&gt;~/.local/bin&lt;/code&gt; on unix)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://packagecontrol.io/packages/LSP" rel="nofollow"&gt;LSP&lt;/a&gt; using &lt;a href="https://packagecontrol.io/" rel="nofollow"&gt;Package Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;From Sublime Text, press Command+Shift+P and search for Preferences: LSP Settings&lt;/li&gt;
&lt;li&gt;Paste in these settings. Make sure to change the command path to your &lt;code&gt;hie&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{
"clients": {
  "haskell-ide-engine": {
    "command": ["hie"],
    "scopes": ["source.haskell"],
    "syntaxes": ["Packages/Haskell/Haskell.sublime-syntax"],
    "languageId": "haskell",
  },
},
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now open a Haskell project with Sublime Text. You should have these features available to you:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Errors are underlined in red&lt;/li&gt;
&lt;li&gt;LSP: Show Diagnostics will show a list of hints and errors&lt;/li&gt;
&lt;li&gt;LSP: Format Document will prettify the file&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-using-hie-with-vim-or-neovim" class="anchor" aria-hidden="true" href="#using-hie-with-vim-or-neovim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using HIE with Vim or Neovim&lt;/h3&gt;
&lt;p&gt;As above, make sure HIE is installed.
Then you can use &lt;a href="https://github.com/neoclide/coc.nvim"&gt;Coc&lt;/a&gt;, &lt;a href="https://github.com/autozimu/LanguageClient-neovim"&gt;LanguageClient-neovim&lt;/a&gt;
or any other vim Langauge server protocol client.
Coc is recommend since it is the only complete LSP implementation for Vim and Neovim and offers snippets and floating documentation out of the box.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-coc" class="anchor" aria-hidden="true" href="#coc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coc&lt;/h4&gt;
&lt;p&gt;Follow Coc's &lt;a href="https://github.com/neoclide/coc.nvim"&gt;installation instructions&lt;/a&gt;,
Then issue &lt;code&gt;:CocConfig&lt;/code&gt; and add the following to your Coc config file.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;languageserver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; {
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hie-wrapper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;args&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rootPatterns&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; [
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*.cabal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stack.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cabal.project&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    ],
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;filetypes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; [
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lhs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    ],
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;initializationOptions&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;languageServerHaskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; {
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-languageclient-neovim" class="anchor" aria-hidden="true" href="#languageclient-neovim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LanguageClient-neovim&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-vim-plug" class="anchor" aria-hidden="true" href="#vim-plug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim-plug&lt;/h5&gt;
&lt;p&gt;If you use &lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;, then you can do this by e.g.,
including the following line in the Plug section of your &lt;code&gt;init.vim&lt;/code&gt; or &lt;code&gt;~/.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Plug 'autozimu/LanguageClient-neovim', {
    \ 'branch': 'next',
    \ 'do': './install.sh'
    \ }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and issuing a &lt;code&gt;:PlugInstall&lt;/code&gt; command within Neovim or Vim.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-clone-the-languageclient-neovim-repo" class="anchor" aria-hidden="true" href="#clone-the-languageclient-neovim-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clone the LanguageClient-neovim repo&lt;/h5&gt;
&lt;p&gt;As an alternative to using &lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt; shown above, clone &lt;a href="https://github.com/autozimu/LanguageClient-neovim"&gt;LanguageClient-neovim&lt;/a&gt;
into &lt;code&gt;~/.vim/pack/XXX/start/&lt;/code&gt;, where &lt;code&gt;XXX&lt;/code&gt; is just a name for your "plugin suite".&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-sample-vimrc" class="anchor" aria-hidden="true" href="#sample-vimrc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample &lt;code&gt;~/.vimrc&lt;/code&gt;&lt;/h5&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;rtp&lt;/span&gt;&lt;span class="pl-k"&gt;+=&lt;/span&gt;&lt;span class="pl-c1"&gt;~/.vim/pack/XXX/start/LanguageClient-neovim&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;LanguageClient_serverCommands&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hie-wrapper&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll probably want to add some mappings for common commands:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;F5&amp;gt;&lt;/span&gt; :&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageClient_contextMenu&lt;/span&gt;()&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;lk :&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageClient#textDocument_hover&lt;/span&gt;()&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;lg&lt;/span&gt; :&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageClient#textDocument_definition&lt;/span&gt;()&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;lr&lt;/span&gt; :&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageClient#textDocument_rename&lt;/span&gt;()&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;lf&lt;/span&gt; :&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageClient#textDocument_formatting&lt;/span&gt;()&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;lb&lt;/span&gt; :&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageClient#textDocument_references&lt;/span&gt;()&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;la&lt;/span&gt; :&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageClient#textDocument_codeAction&lt;/span&gt;()&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;ls&lt;/span&gt; :&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageClient#textDocument_documentSymbol&lt;/span&gt;()&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;kbd&gt;Ctrl+x&lt;/kbd&gt;&lt;kbd&gt;Ctrl+o&lt;/kbd&gt; (&lt;code&gt;&amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;&lt;/code&gt;) to open up the auto-complete menu,
or for asynchronous auto-completion, follow the setup instructions on
&lt;a href="https://github.com/autozimu/LanguageClient-neovim"&gt;LanguageClient&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you'd like diagnostics to be highlighted, add a highlight group for &lt;code&gt;ALEError&lt;/code&gt;/&lt;code&gt;ALEWarning&lt;/code&gt;/&lt;code&gt;ALEInfo&lt;/code&gt;,
or customize &lt;code&gt; g:LanguageClient_diagnosticsDisplay&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;hi&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt; &lt;span class="pl-v"&gt;ALEError&lt;/span&gt; &lt;span class="pl-v"&gt;Error&lt;/span&gt;
&lt;span class="pl-c1"&gt;hi&lt;/span&gt; Warning &lt;span class="pl-c1"&gt;term&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;underline&lt;/span&gt; cterm&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;underline&lt;/span&gt; ctermfg&lt;span class="pl-k"&gt;=&lt;/span&gt;Yellow &lt;span class="pl-c1"&gt;gui&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;undercurl&lt;/span&gt; guisp&lt;span class="pl-k"&gt;=&lt;/span&gt;Gold
&lt;span class="pl-c1"&gt;hi&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt; &lt;span class="pl-v"&gt;ALEWarning&lt;/span&gt; &lt;span class="pl-v"&gt;Warning&lt;/span&gt;
&lt;span class="pl-c1"&gt;hi&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt; &lt;span class="pl-v"&gt;ALEInfo&lt;/span&gt; &lt;span class="pl-v"&gt;SpellCap&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you're finding that the server isn't starting at the correct project root,
it may also be helpful to also specify root markers:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;LanguageClient_rootMarkers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*.cabal&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stack.yaml&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-hie-with-atom" class="anchor" aria-hidden="true" href="#using-hie-with-atom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using HIE with Atom&lt;/h3&gt;
&lt;p&gt;Make sure HIE is installed, then install the two Atom packages &lt;a href="https://atom.io/packages/atom-ide-ui" rel="nofollow"&gt;atom-ide-ui&lt;/a&gt; and &lt;a href="https://atom.io/packages/ide-haskell-hie" rel="nofollow"&gt;ide-haskell-hie&lt;/a&gt;,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ apm install language-haskell atom-ide-ui ide-haskell-hie&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-hie-with-emacs" class="anchor" aria-hidden="true" href="#using-hie-with-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using HIE with Emacs&lt;/h3&gt;
&lt;p&gt;Install HIE along with the following emacs packages:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode"&gt;lsp-mode&lt;/a&gt;
&lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;
&lt;a href="https://github.com/emacs-lsp/lsp-haskell"&gt;lsp-haskell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Make sure to follow the instructions in the README of each of these packages.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-hie-with-spacemacs" class="anchor" aria-hidden="true" href="#using-hie-with-spacemacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using HIE with Spacemacs&lt;/h3&gt;
&lt;p&gt;Install HIE, and then add the following to your &lt;code&gt;.spacemacs&lt;/code&gt; config,&lt;/p&gt;
&lt;div class="highlight highlight-source-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-en"&gt;dotspacemacs&lt;/span&gt;/layers ()
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  (setq-default
   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; ...&lt;/span&gt;
   dotspacemacs-configuration-layers
   '(
     (haskell :variables haskell-completion-backend 'lsp)
     lsp
     )
    ))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you should be able to use HIE in Spacemacs.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-hie-with-oni" class="anchor" aria-hidden="true" href="#using-hie-with-oni"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using HIE with Oni&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.onivim.io/" rel="nofollow"&gt;Oni&lt;/a&gt; (a Neovim GUI) added built-in support for HIE, using stack, in &lt;a href="https://github.com/onivim/oni/pull/1918/files"&gt;#1918&lt;/a&gt;. If you need to change the configuration for HIE, you can overwrite the following settings in your &lt;code&gt;~/.config/oni/config.tsx&lt;/code&gt; file (accessible via the command palette and &lt;code&gt;Configuration: Edit User Config&lt;/code&gt;),&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;configuration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;language.haskell.languageServer.command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stack&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;language.haskell.languageServer.arguments&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exec&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;language.haskell.languageServer.rootFiles&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;language.haskell.languageServer.configuration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; {},
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-docs-on-hovercompletion" class="anchor" aria-hidden="true" href="#docs-on-hovercompletion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docs on hover/completion&lt;/h2&gt;
&lt;p&gt;HIE supports fetching docs from haddock on hover. It will fallback on using a hoogle db(generally located in ~/.hoogle on linux)
if no haddock documentation is found.&lt;/p&gt;
&lt;p&gt;To generate haddock documentation for stack projects:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; your-project-directory
$ stack haddock --keep-going&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To enable documentation generation for cabal projects, add the following to your ~/.cabal/config&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;documentation: True
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To generate a hoogle database that hie can use&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; haskell-ide-engine
$ stack --stack-yaml=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;stack.yaml you used to build hie&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;exec&lt;/span&gt; hoogle generate&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can set the environment variable &lt;code&gt;HIE_HOOGLE_DATABASE&lt;/code&gt; to specify a specific database.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please see the &lt;a href="#integration-with-ghcide-the-new-haskell-ide"&gt;note above&lt;/a&gt; about the new &lt;code&gt;haskell-ide&lt;/code&gt; project.&lt;/p&gt;
&lt;p&gt;This project is not started from scratch:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;See why &lt;a href="/docs/Challenges.md"&gt;we should supersede previous tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Check the &lt;a href="/docs/Tools.md"&gt;list of existing tools and functionality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;See more &lt;a href="/docs/Inspirations.md"&gt;other tools and IDEs for inspiration&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-its-time-to-join-the-project" class="anchor" aria-hidden="true" href="#its-time-to-join-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;It's time to join the project!&lt;/h3&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; Haskell tooling dream is near, we need your help! &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Register in &lt;a href="https://groups.google.com/forum/#!forum/haskell-ide" rel="nofollow"&gt;our google group mailing list&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Join &lt;a href="https://webchat.freenode.net/?channels=haskell-ide-engine" rel="nofollow"&gt;our IRC channel&lt;/a&gt; at &lt;code&gt;#haskell-ide-engine&lt;/code&gt; on &lt;code&gt;freenode&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Fork this repo and hack as much as you can.&lt;/li&gt;
&lt;li&gt;Ask @alanz or @hvr to join the project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-hacking-on-haskell-ide-engine" class="anchor" aria-hidden="true" href="#hacking-on-haskell-ide-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hacking on haskell-ide-engine&lt;/h3&gt;
&lt;p&gt;Haskell-ide-engine can be used on its own project.  We have supplied
preset samples of &lt;code&gt;hie.yaml&lt;/code&gt; files for stack and cabal, simply copy
the appropriate template to &lt;code&gt;hie.yaml&lt;/code&gt; and it shoule work.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hie.yaml.cbl&lt;/code&gt; for cabal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hie.yaml.stack&lt;/code&gt; for stack&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;All the documentation is in &lt;a href="/docs"&gt;the docs folder&lt;/a&gt; at the root of this project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h3&gt;
&lt;p&gt;Have a look at&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;a href="docs/Architecture.md"&gt;Architecture discussion&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/Protocol.md"&gt;Protocol discussion&lt;/a&gt; and&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/Design.md"&gt;Design discussion&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-emacs" class="anchor" aria-hidden="true" href="#emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emacs&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-parse-errors-file-state-going-out-of-sync" class="anchor" aria-hidden="true" href="#parse-errors-file-state-going-out-of-sync"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parse errors, file state going out of sync&lt;/h4&gt;
&lt;p&gt;With the &lt;code&gt;lsp-mode&lt;/code&gt; client for Emacs, it seems that the document can very easily get out of sync between, which leads to parse errors being displayed. To fix this, enable full document synchronization with&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; lsp-document-sync-method &lt;span class="pl-c1"&gt;'full&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-emacs-direnv-loads-environment-too-late" class="anchor" aria-hidden="true" href="#emacs-direnv-loads-environment-too-late"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/wbolster/emacs-direnv"&gt;&lt;code&gt;emacs-direnv&lt;/code&gt;&lt;/a&gt; loads environment too late&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;emacs-direnv&lt;/code&gt; sometimes loads the environment too late, meaning &lt;code&gt;lsp-mode&lt;/code&gt; won't be able to find correct GHC/cabal versions. To fix this, add a direnv update hook &lt;em&gt;after&lt;/em&gt; adding the lsp hook for &lt;code&gt;haskell-mode&lt;/code&gt; (meaning the direnv hook is executed first, because hooks are LIFO):&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'haskell-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'haskell-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'direnv-update-environment&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-dyld-on-macos" class="anchor" aria-hidden="true" href="#dyld-on-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DYLD on macOS&lt;/h3&gt;
&lt;p&gt;If you hit a problem that looks like &lt;code&gt;can't load .so/.DLL for: libiconv.dylib (dlopen(libiconv.dylib, 5): image not found)&lt;/code&gt;, it means that libraries cannot be found in the library path. We can hint where to look for them and append more paths to &lt;code&gt;DYLD_LIBRARY_PATH&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:/usr/lib:/usr/local/lib"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On practice &lt;code&gt;/usr/local/lib&lt;/code&gt; is full of dylibs linked by &lt;code&gt;brew&lt;/code&gt;. After you amend &lt;code&gt;DYLD_LIBRARY_PATH&lt;/code&gt;, some of the previously compiled application might not work and yell about incorrect linking, for example, &lt;code&gt;dyld: Symbol not found: __cg_jpeg_resync_to_restart&lt;/code&gt;. You may need to look up where it comes from and remove clashing links, in this case it were clashing images libs:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew unlink libjpeg
$ brew unlink libtiff
$ brew unlink libpng&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Recompile.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos-got-error-while-installing-ghc-861-or-862---dyld-library-not-loaded-usrlocaloptgmpliblibgmp10dylib" class="anchor" aria-hidden="true" href="#macos-got-error-while-installing-ghc-861-or-862---dyld-library-not-loaded-usrlocaloptgmpliblibgmp10dylib"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS: Got error while installing GHC 8.6.1 or 8.6.2 - dyld: Library not loaded: /usr/local/opt/gmp/lib/libgmp.10.dylib&lt;/h3&gt;
&lt;p&gt;These builds have a dependency on &lt;a href="https://brew.sh" rel="nofollow"&gt;homebrew&lt;/a&gt;'s &lt;code&gt;gmp&lt;/code&gt; library. Install with brew: &lt;code&gt;brew install gmp&lt;/code&gt;.
&lt;a href="https://ghc.haskell.org/trac/ghc/ticket/15769" rel="nofollow"&gt;Should be fixed in GHC 8.6.3.&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos-got-error-while-processing-diagnostics-unable-to-load-package-integer-gmp-1020" class="anchor" aria-hidden="true" href="#macos-got-error-while-processing-diagnostics-unable-to-load-package-integer-gmp-1020"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS: Got error while processing diagnostics: unable to load package &lt;code&gt;integer-gmp-1.0.2.0&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/alanz/vscode-hie-server/issues/89#issuecomment-398212122"&gt;Rename the file&lt;/a&gt; at &lt;code&gt;~/.stack/programs/x86_64-osx/ghc-8.4.3/lib/ghc-8.4.3/integer-gmp-1.0.2.0/HSinteger-gmp-1.0.2.0.o&lt;/code&gt; to a temporary name.
&lt;a href="https://ghc.haskell.org/trac/ghc/ticket/15105" rel="nofollow"&gt;Should be fixed in GHC 8.8.1.&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cannot-satisfy--package-id-package" class="anchor" aria-hidden="true" href="#cannot-satisfy--package-id-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cannot satisfy -package-id &amp;lt;package&amp;gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-is-package-base-x" class="anchor" aria-hidden="true" href="#is-package-base-x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Is &amp;lt;package&amp;gt; base-x?&lt;/h4&gt;
&lt;p&gt;Make sure that the GHC version of HIE matches the one of the project. After that run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal configure
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then restart HIE (e.g. by restarting your editor).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-is-there-a-hash--after-package" class="anchor" aria-hidden="true" href="#is-there-a-hash--after-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Is there a hash (#) after &amp;lt;package&amp;gt;?&lt;/h4&gt;
&lt;p&gt;Delete any &lt;code&gt;.ghc.environment*&lt;/code&gt; files in your project root and try again. (At the time of writing, cabal new-style projects are not supported with ghc-mod)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-otherwise" class="anchor" aria-hidden="true" href="#otherwise"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Otherwise&lt;/h4&gt;
&lt;p&gt;Try running &lt;code&gt;cabal update&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-liquid-haskell" class="anchor" aria-hidden="true" href="#liquid-haskell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Liquid Haskell&lt;/h3&gt;
&lt;p&gt;Liquid Haskell requires an SMT solver on the path. We do not take care of installing one, thus, Liquid Haskell will not run until one is installed.
The recommended SMT solver is &lt;a href="https://github.com/Z3Prover/z3"&gt;z3&lt;/a&gt;. To run the tests, it is also required to have an SMT solver on the path, otherwise the tests will fail for Liquid Haskell.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-profiling-haskell-ide-engine" class="anchor" aria-hidden="true" href="#profiling-haskell-ide-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Profiling &lt;code&gt;haskell-ide-engine&lt;/code&gt;.&lt;/h3&gt;
&lt;p&gt;If you think &lt;code&gt;haskell-ide-engine&lt;/code&gt; is using a lot of memory then the most useful
thing you can do is prepare a profile of the memory usage whilst you're using
the program.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;profiling: True&lt;/code&gt; to the cabal.project file of &lt;code&gt;haskell-ide-engine&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cabal new-build hie&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(IMPORTANT) Add &lt;code&gt;profiling: True&lt;/code&gt; to the &lt;code&gt;cabal.project&lt;/code&gt; file of the project you want to profile.&lt;/li&gt;
&lt;li&gt;Make a wrapper script which calls the &lt;code&gt;hie&lt;/code&gt; you built in step 2 with the additional options &lt;code&gt;+RTS -hd -l-au&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Modify your editor settings to call this wrapper script instead of looking for &lt;code&gt;hie&lt;/code&gt; on the path&lt;/li&gt;
&lt;li&gt;Try using &lt;code&gt;h-i-e&lt;/code&gt; as normal and then process the &lt;code&gt;*.eventlog&lt;/code&gt; which will be created using  &lt;a href="http://hackage.haskell.org/package/eventlog2html" rel="nofollow"&gt;&lt;code&gt;eventlog2html&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Repeat the process again using different profiling options if you like.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-using-ghc-events-analyze" class="anchor" aria-hidden="true" href="#using-ghc-events-analyze"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;code&gt;ghc-events-analyze&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;haskell-ide-engine&lt;/code&gt; contains the necessary tracing functions to work with &lt;a href="http://www.well-typed.com/blog/2014/02/ghc-events-analyze/" rel="nofollow"&gt;&lt;code&gt;ghc-events-analyze&lt;/code&gt;&lt;/a&gt;. Each
request which is made will emit an event to the eventlog when it starts and finishes. This way you
can see if there are any requests which are taking a long time to complete or are blocking.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure that &lt;code&gt;hie&lt;/code&gt; is linked with the &lt;code&gt;-eventlog&lt;/code&gt; option. This can be achieved by adding the flag
to the &lt;code&gt;ghc-options&lt;/code&gt; field in the cabal file.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;hie&lt;/code&gt; as normal but with the addition of &lt;code&gt;+RTS -l&lt;/code&gt;. This will produce an eventlog called &lt;code&gt;hie.eventlog&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;ghc-events-analyze&lt;/code&gt; on the &lt;code&gt;hie.eventlog&lt;/code&gt; file to produce the rendered SVG. Warning, this might take a while and produce a big SVG file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The default options for &lt;code&gt;ghc-events-analyze&lt;/code&gt; will produce quite a wide chart which is difficult to view. You can try using less buckets in order
to make the chart quicker to generate and faster to render.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ghc-events-analyze hie.eventlog -b 100
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This support is similar to the logging capabilities &lt;a href="https://www.haskell.org/ghc/blog/20190924-eventful-ghc.html" rel="nofollow"&gt;built into GHC&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>haskell</author><guid isPermaLink="false">https://github.com/haskell/haskell-ide-engine</guid><pubDate>Mon, 03 Feb 2020 00:04:00 GMT</pubDate></item><item><title>agda/agda #5 in Haskell, This month</title><link>https://github.com/agda/agda</link><description>&lt;p&gt;&lt;i&gt;Agda is a dependently typed programming language / interactive theorem prover.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-agda-2" class="anchor" aria-hidden="true" href="#agda-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Agda 2&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://hackage.haskell.org/package/Agda" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9048ae35fa410df17a3424f305829758ae92f51/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f416764612e7376673f6c6162656c3d4861636b616765" alt="Hackage version" data-canonical-src="https://img.shields.io/hackage/v/Agda.svg?label=Hackage" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.stackage.org/package/Agda" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9f88ff79ffa487f05b7a6b5316beafe9d174f02d/68747470733a2f2f7777772e737461636b6167652e6f72672f7061636b6167652f416764612f62616467652f6c74733f6c6162656c3d537461636b616765" alt="Stackage version" data-canonical-src="https://www.stackage.org/package/Agda/badge/lts?label=Stackage" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/agda/agda" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e044f602cbc729bd25dcf40c5b3dab9ff10b9a33/68747470733a2f2f7472617669732d63692e6f72672f616764612f616764612e7376673f6272616e63683d6d6173746572" alt="Travis Status" data-canonical-src="https://travis-ci.org/agda/agda.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/agda/agda/actions?query=workflow%3A%22stack+build%22"&gt;&lt;img src="https://github.com/agda/agda/workflows/stack%20build/badge.svg" alt="Stack Build Status via GH Actions" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/gallais/agda" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a431ee88796239ee20eb0ff21eb76302af31756/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f78366c696c6e32646f6c3062673471772f6272616e63682f6d61737465723f7376673d74727565" alt="Appveyor Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/x6liln2dol0bg4qw/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://agda.readthedocs.io/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1d7b94ef1f0376a13376b32e1bd02c1bca17242e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f616764612f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/agda/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/agda/agda?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b54f762e1605530037ddfc046cc2a5b77474b81/68747470733a2f2f6261646765732e6769747465722e696d2f616764612f616764612e737667" alt="Join the chat at https://gitter.im/agda/agda" data-canonical-src="https://badges.gitter.im/agda/agda.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/user-manual/agda.svg"&gt;&lt;img src="doc/user-manual/agda.svg" alt="The official Agda logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that this README is only about Agda, not its standard
library. See the &lt;a href="http://wiki.portal.chalmers.se/agda/pmwiki.php" rel="nofollow"&gt;Agda Wiki&lt;/a&gt; for information about the
library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://agda.readthedocs.io" rel="nofollow"&gt;User manual&lt;/a&gt;
(per-commit pdf can be downloaded from the
&lt;a href="https://github.com/agda/agda/actions?query=workflow%3A%22User+Manual%22"&gt;github actions&lt;/a&gt; page)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agda/agda/blob/master/CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://agda.readthedocs.io/en/latest/getting-started/prerequisites.html" rel="nofollow"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://agda.readthedocs.io/en/latest/getting-started/installation.html" rel="nofollow"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://agda.readthedocs.io/en/latest/getting-started/quick-guide.html" rel="nofollow"&gt;Quick guide to editing, type checking and compiling Agda
code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-agda" class="anchor" aria-hidden="true" href="#contributing-to-agda"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Agda&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Contribution how-to: &lt;a href="https://github.com/agda/agda/blob/master/HACKING.md"&gt;&lt;code&gt;HACKING&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreasabel/haskell-style-guide/blob/master/haskell-style.md"&gt;Haskell style-guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>agda</author><guid isPermaLink="false">https://github.com/agda/agda</guid><pubDate>Mon, 03 Feb 2020 00:05:00 GMT</pubDate></item><item><title>idris-lang/Idris-dev #6 in Haskell, This month</title><link>https://github.com/idris-lang/Idris-dev</link><description>&lt;p&gt;&lt;i&gt;A Dependently Typed Functional Programming Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-idris" class="anchor" aria-hidden="true" href="#idris"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Idris&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/idris-lang/Idris-dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd343118e69b413195fb1e0b5f1021d601498942/68747470733a2f2f7472617669732d63692e6f72672f69647269732d6c616e672f49647269732d6465762e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/idris-lang/Idris-dev.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/idrislang/idris-dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b982bf88ef78a9c9e286a6e6b2d5c11deb367e4b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f786938797538316f793131333467376f2f6272616e63682f6d61737465723f7376673d74727565" alt="Appveyor build" data-canonical-src="https://ci.appveyor.com/api/projects/status/xi8yu81oy1134g7o/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://readthedocs.org/projects/idris/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/864a08dfca8c9a1849bd393b65af8d267bb0b89a/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f69647269732f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/idris/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hackage.haskell.org/package/idris" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d7eccafe3d5829c82a4d58a90fd169ff427287a6/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f69647269732e737667" alt="Hackage" data-canonical-src="https://img.shields.io/hackage/v/idris.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stackage.org/lts/package/idris" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2cd84fd43e84d9dd4bbbf82b83eeb978cdae15a7/68747470733a2f2f737461636b6167652e6f72672f7061636b6167652f69647269732f62616467652f6c7473" alt="Stackage LTS" data-canonical-src="https://stackage.org/package/idris/badge/lts" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stackage.org/nightly/package/idris" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d8731729a1701110e153935f87391ca6c4e8b703/68747470733a2f2f737461636b6167652e6f72672f7061636b6167652f69647269732f62616467652f6e696768746c79" alt="Stackage Nightly" data-canonical-src="https://stackage.org/package/idris/badge/nightly" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.irccloud.com/invite?channel=%23idris&amp;amp;hostname=irc.freenode.net&amp;amp;port=6697&amp;amp;ssl=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/066b9c3b856a9da49aeac5f58e571e0bf1b827b5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4952432d25323369647269732d3165373266662e7376673f7374796c653d666c6174" alt="IRC" data-canonical-src="https://img.shields.io/badge/IRC-%23idris-1e72ff.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Idris (&lt;a href="https://idris-lang.org/" rel="nofollow"&gt;https://idris-lang.org/&lt;/a&gt;) is a general-purpose functional programming
language with dependent types.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-guides" class="anchor" aria-hidden="true" href="#installation-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Guides.&lt;/h2&gt;
&lt;p&gt;This repository represents the latest development version of the
language, and may contain bugs that are being actively worked on.  For
those who wish to use a more stable version of Idris please consider
installing the latest version that has been released on Hackage.
Installation instructions for various platforms can be
&lt;a href="https://github.com/idris-lang/Idris-dev/wiki/Installation-Instructions"&gt;found on the Idris Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More information about building Idris from source has been detailed in the &lt;a href="INSTALL.md"&gt;Installation Guide&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-generation" class="anchor" aria-hidden="true" href="#code-generation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Generation&lt;/h2&gt;
&lt;p&gt;Idris has support for external code generators. Supplied with the distribution
is a C code generator to compile executables, and a JavaScript code generator
with support for node.js and browser JavaScript.&lt;/p&gt;
&lt;p&gt;More information about &lt;a href="https://idris.readthedocs.io/en/latest/reference/codegen.html" rel="nofollow"&gt;code generators can be found on the wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-more-information" class="anchor" aria-hidden="true" href="#more-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More Information&lt;/h2&gt;
&lt;p&gt;If you would like to find out more information, or ask questions, we
currently have a &lt;a href="https://github.com/idris-lang/Idris-dev/wiki"&gt;Wiki&lt;/a&gt;;
a &lt;a href="https://groups.google.com/forum/#!forum/idris-lang" rel="nofollow"&gt;mailing list&lt;/a&gt;,
and an &lt;code&gt;IRC&lt;/code&gt; channel &lt;code&gt;#idris&lt;/code&gt; on freenode. To join the IRC channel,
point your irc client to &lt;code&gt;chat.freenode.net&lt;/code&gt; then &lt;code&gt;/join #idris&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For those further interested in using Idris for projects, the
&lt;a href="https://github.com/idris-hackers"&gt;Idris Hackers&lt;/a&gt; GitHub organisation is
where some interesting projects are being hosted.&lt;/p&gt;
&lt;p&gt;For those interested in contributing to Idris directly we kindly ask that
prospective developers please consult the &lt;a href="CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/edwinb/Idris2"&gt;Idris 2&lt;/a&gt; is an early preview of the next generation
of Idris, implemented in Idris.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>idris-lang</author><guid isPermaLink="false">https://github.com/idris-lang/Idris-dev</guid><pubDate>Mon, 03 Feb 2020 00:06:00 GMT</pubDate></item><item><title>unisonweb/unison #7 in Haskell, This month</title><link>https://github.com/unisonweb/unison</link><description>&lt;p&gt;&lt;i&gt;A friendly programming language from the future&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-the-unison-language" class="anchor" aria-hidden="true" href="#the-unison-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Unison language&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/unisonweb/unison" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1cf74060aa43b747ead8ff6ec02708dbdfb0b28a/68747470733a2f2f7472617669732d63692e6f72672f756e69736f6e7765622f756e69736f6e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/unisonweb/unison.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://unisonweb.org" rel="nofollow"&gt;Unison&lt;/a&gt; is a new programming language, currently under active development. It's a modern, statically-typed purely functional language, similar to Haskell, but with a unique ability to describe entire distributed systems with a single program. Here's a simple example:&lt;/p&gt;
&lt;div class="highlight highlight-source-haskell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; comments start with `--`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; alice : Node, bob : Node&lt;/span&gt;

x &lt;span class="pl-k"&gt;=&lt;/span&gt; factorial &lt;span class="pl-c1"&gt;6&lt;/span&gt;
&lt;span class="pl-c1"&gt;Remote.&lt;/span&gt;transfer alice
y &lt;span class="pl-k"&gt;=&lt;/span&gt; foo x &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; happens on `alice` node&lt;/span&gt;
&lt;span class="pl-c1"&gt;Remote.&lt;/span&gt;transfer bob
bar x y &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; happens on `bob` node&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Remote.transfer&lt;/code&gt; function introduces a "remote effect", where computation may proceed on multiple Unison nodes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;Remote.transfer alice&lt;/code&gt; transfers control of the computation to the &lt;code&gt;alice&lt;/code&gt; node.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;foo x&lt;/code&gt; call happens on the &lt;code&gt;alice&lt;/code&gt; node.&lt;/li&gt;
&lt;li&gt;At each transfer, any required definitions (such as &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt;) will be dynamically deployed to the &lt;code&gt;alice&lt;/code&gt; node and cached for future use.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Remote.transfer bob&lt;/code&gt; transfers control of the rest of the computation to the &lt;code&gt;bob&lt;/code&gt; node.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;bar x y&lt;/code&gt; computation happens on the &lt;code&gt;bob&lt;/code&gt; node. Again, any needed definitions (&lt;code&gt;bar&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, and &lt;code&gt;y&lt;/code&gt;) will be dynamically deployed to the &lt;code&gt;bob&lt;/code&gt; node.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This dynamic transfer / deployment of arbitrary computations is possible because definitions in Unison are identified by a cryptographic hash of their content, &lt;em&gt;including the hashes of all dependencies&lt;/em&gt; (the hash is also "nameless" as it isn't affected by naming of variables). To transfer a computation, we send it to the recipient, and the recipient checks to see if the computation references any unknown hashes. Any unknown hashes are synced to the recipient before the transfer completes and the computation proceeds.&lt;/p&gt;
&lt;p&gt;If you'd like to learn more about the project, the talk &lt;a href="https://www.youtube.com/watch?v=f6yA3t0dO-k" rel="nofollow"&gt;How to write a search engine in 15 lines of code&lt;/a&gt; has more of an introduction to the language. For a more complete overview of the syntax look at the &lt;a href="https://www.unisonweb.org/docs/language-reference" rel="nofollow"&gt;unison language reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since Unison isn't terribly useful in its current form, the rest of this README will focus on stuff that will be of interest for potential contributors, namely, how to build the code, and a brief tour of the (fairly small but action-packed) codebase. If you're just interested in the project and want to follow along with the progress, &lt;a href="http://unisonweb.org" rel="nofollow"&gt;unisonweb.org&lt;/a&gt; is the place to go, or you can also say hello or lurk &lt;a href="http://tiny.cc/unisonslack" rel="nofollow"&gt;in the Slack chat&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Still here? All right then! Let's get to it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-a-brief-code-tour" class="anchor" aria-hidden="true" href="#a-brief-code-tour"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A brief code tour&lt;/h2&gt;
&lt;p&gt;First, clone unison with &lt;code&gt;--recursive&lt;/code&gt;:
&lt;code&gt;git clone --recursive https://github.com/unisonweb/unison.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Next, a bit of orientation. Here's the directory structure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;editor-support/&lt;/code&gt; includes some very basic and probably incomplete text edit support (read: syntax highlighting)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yaks/&lt;/code&gt; has subprojects for various utilities not specific to Unison (the result of &lt;a href="https://en.wiktionary.org/wiki/yak_shaving" rel="nofollow"&gt;"yak-shaving"&lt;/a&gt;). Once mature, each of these might be moved to independent projects and published on Hackage.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parser-typechecker/&lt;/code&gt; has the meat: the Unison syntax tree, parser, typechecker, and runtime. Depends on &lt;code&gt;yaks/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-using-stack" class="anchor" aria-hidden="true" href="#building-using-stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building using Stack&lt;/h2&gt;
&lt;p&gt;If these instructions don't work for you or are incomplete, please file an issue.&lt;/p&gt;
&lt;p&gt;The build uses &lt;a href="http://docs.haskellstack.org/" rel="nofollow"&gt;Stack&lt;/a&gt;. If you don't already have it installed, &lt;a href="http://docs.haskellstack.org/en/stable/README.html#how-to-install" rel="nofollow"&gt;follow the install instructions&lt;/a&gt; for your platform.  (Hint: &lt;code&gt;brew update &amp;amp;&amp;amp; brew install stack&lt;/code&gt;)&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone --recursive https://github.com/unisonweb/unison.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; unison
$ stack --version &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; we'll want to know this version if you run into trouble&lt;/span&gt;
$ stack build &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; stack &lt;span class="pl-c1"&gt;exec&lt;/span&gt; tests &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; stack &lt;span class="pl-c1"&gt;exec&lt;/span&gt; unison&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: If you get this error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Stack looks for packages in the directories configured in the 'packages' and 'extra-deps' fields defined in your stack.yaml
The current entry points to &amp;lt;root&amp;gt;/yaks/haskeline/ but no .cabal or package.yaml file could be found there.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then your local git repo is older than the haskeline submodule dependency; use this to get it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git submodule init
git submodule update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See &lt;a href="development.markdown"&gt;&lt;code&gt;development.markdown&lt;/code&gt;&lt;/a&gt; for a list of build commands you'll likely use during development.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-a-brief-tour-of-the-haskell-code" class="anchor" aria-hidden="true" href="#a-brief-tour-of-the-haskell-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A brief tour of the Haskell code&lt;/h2&gt;
&lt;p&gt;In the &lt;code&gt;parser-typechecker/&lt;/code&gt; project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Unison.Term&lt;/code&gt; and &lt;code&gt;Unison.Type&lt;/code&gt; have the syntax trees for terms and types. In both &lt;code&gt;Term&lt;/code&gt; and &lt;code&gt;Type&lt;/code&gt;, the same pattern is used. Each defines a 'base functor' type, &lt;code&gt;F a&lt;/code&gt;, which is nonrecursive, and the actual thing we use is an &lt;em&gt;abstract binding tree&lt;/em&gt; over this base functor, an &lt;code&gt;ABT F&lt;/code&gt;. &lt;code&gt;ABT&lt;/code&gt; (for 'abstract binding tree') is defined in &lt;code&gt;Unison.ABT&lt;/code&gt;. If you aren't familiar with abstract binding trees, &lt;a href="http://semantic-domain.blogspot.com/2015/03/abstract-binding-trees.html" rel="nofollow"&gt;here is a nice blog post explaining one formulation of the idea&lt;/a&gt;, which inspired the &lt;code&gt;Unison.ABT&lt;/code&gt; module. A lot of operations on terms and types just delegate to generic &lt;code&gt;ABT&lt;/code&gt; operations.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unison.Parsers&lt;/code&gt; has the main entry point for the parser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unison.Typechecker.Context&lt;/code&gt; is the implementation of the typechecker, and &lt;code&gt;Unison.Typechecker&lt;/code&gt; has the "public interface to the typechecker" and some convenience functions. There isn't a lot of code here (about 700 LOC presently), since the typechecking algorithm is pretty simple. Unlike a unification-based typechecker, where the typechecking state is an unordered bag of unification constraints and higher-rank polymorphism is usually bolted on awkwardly later, &lt;a href="http://www.mpi-sws.org/~neelk/bidir.pdf" rel="nofollow"&gt;Dunfield and Krishnaswami's algorithm&lt;/a&gt; keeps the typechecking state as a nicely tidy &lt;em&gt;ordered context&lt;/em&gt;, represented as a regular list manipulated in a stack-like fashion, and the algorithm handles higher-rank polymorphism very cleanly. They've also &lt;a href="http://semantic-domain.blogspot.com/2015/03/new-draft-sound-and-complete.html" rel="nofollow"&gt;extended this work to include features like GADTs&lt;/a&gt;, though this new algorithm hasn't been incorporated into Unison yet.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>unisonweb</author><guid isPermaLink="false">https://github.com/unisonweb/unison</guid><pubDate>Mon, 03 Feb 2020 00:07:00 GMT</pubDate></item><item><title>commercialhaskell/stack #8 in Haskell, This month</title><link>https://github.com/commercialhaskell/stack</link><description>&lt;p&gt;&lt;i&gt;The Haskell Tool Stack&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-the-haskell-tool-stack" class="anchor" aria-hidden="true" href="#the-haskell-tool-stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Haskell Tool Stack&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/commercialhaskell/stack/_build/latest?definitionId=1?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/af4cca4edf474a6f58facb78f28c458582e3cd91/68747470733a2f2f6465762e617a7572652e636f6d2f636f6d6d65726369616c6861736b656c6c2f737461636b2f5f617069732f6275696c642f7374617475732f636f6d6d65726369616c6861736b656c6c2e737461636b3f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/commercialhaskell/stack/_apis/build/status/commercialhaskell.stack?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/commercialhaskell/stack/releases"&gt;&lt;img src="https://camo.githubusercontent.com/949c785e33be7450335e66fe7a388030b897d225/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f636f6d6d65726369616c6861736b656c6c2f737461636b2e737667" alt="Release" data-canonical-src="https://img.shields.io/github/release/commercialhaskell/stack.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/commercialhaskell/stack?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5accf8346d42c7a8ca7adafc9ee28535907a4ed1/68747470733a2f2f6261646765732e6769747465722e696d2f636f6d6d65726369616c6861736b656c6c2f737461636b2e737667" alt="Join the chat at https://gitter.im/commercialhaskell/stack" data-canonical-src="https://badges.gitter.im/commercialhaskell/stack.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stack is a cross-platform program for developing Haskell projects. It is intended for Haskellers both new and experienced.&lt;/p&gt;
&lt;p&gt;See &lt;a href="http://haskellstack.org" rel="nofollow"&gt;haskellstack.org&lt;/a&gt; or the &lt;a href="./doc"&gt;doc&lt;/a&gt; directory for more
information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-subsystem-maintainers" class="anchor" aria-hidden="true" href="#subsystem-maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Subsystem maintainers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GHCJS - &lt;a href="https://github.com/matchwood"&gt;Matchwood&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NOTE: GHCJS support is considered experimental. In Stack 2.0, we are
removing support for building GHCJS itself; links will be added to
this README for information on separate tools. Issues on GHCJS may be
closed as not supported, and the next major Stack release may remove
GHCJS support entirely.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>commercialhaskell</author><guid isPermaLink="false">https://github.com/commercialhaskell/stack</guid><pubDate>Mon, 03 Feb 2020 00:08:00 GMT</pubDate></item></channel></rss>