<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: HLSL, Today</title><link>https://github.com/trending/hlsl?since=daily</link><description>The top repositories on GitHub for hlsl, measured daily</description><pubDate>Sun, 26 Jan 2020 01:04:23 GMT</pubDate><lastBuildDate>Sun, 26 Jan 2020 01:04:23 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>keijiro/HdrpVatExample #1 in HLSL, Today</title><link>https://github.com/keijiro/HdrpVatExample</link><description>&lt;p&gt;&lt;i&gt;VAT (Vertex Animation Texture) with Unity Shader Graph and Visual Effect Graph&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vat-vertex-animation-texture-on-hdrp-examples" class="anchor" aria-hidden="true" href="#vat-vertex-animation-texture-on-hdrp-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VAT (Vertex Animation Texture) on HDRP examples&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/65b735964c4930c7a2ed37b3b67b6affcb88046a/68747470733a2f2f692e696d6775722e636f6d2f57794d616659352e676966"&gt;&lt;img src="https://camo.githubusercontent.com/65b735964c4930c7a2ed37b3b67b6affcb88046a/68747470733a2f2f692e696d6775722e636f6d2f57794d616659352e676966" alt="gif" data-canonical-src="https://i.imgur.com/WyMafY5.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8f957ad439cb26f2751335857137f8579a3c6dc2/68747470733a2f2f692e696d6775722e636f6d2f39464e6e3673762e676966"&gt;&lt;img src="https://camo.githubusercontent.com/8f957ad439cb26f2751335857137f8579a3c6dc2/68747470733a2f2f692e696d6775722e636f6d2f39464e6e3673762e676966" alt="gif" data-canonical-src="https://i.imgur.com/9FNn6sv.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a repository that contains examples of the use of VAT (Vertex Animation
Texture) on Unity High Definition Render Pipeline (HDRP).&lt;/p&gt;
&lt;p&gt;In this document, "VAT" refers explicitly to the texture encoding method used
in Houdini's &lt;a href="https://github.com/sideeffects/SideFXLabs"&gt;SideFX Labs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Unity 2019.3&lt;/li&gt;
&lt;li&gt;HDRP 7.1&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-vat-methods" class="anchor" aria-hidden="true" href="#supported-vat-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported VAT methods&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The Shader Graph example only supports the "Soft (Constant Topology)" method.&lt;/li&gt;
&lt;li&gt;The Visual Effect Graph example only supports the "Sprite (Camera Facing
Cards)" method.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use-vat-with-shader-graph" class="anchor" aria-hidden="true" href="#how-to-use-vat-with-shader-graph"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use VAT with Shader Graph&lt;/h2&gt;
&lt;p&gt;At first, export VAT files from Houdini: It consists of a geometry file
(&lt;code&gt;.fbx&lt;/code&gt;), texture files (&lt;code&gt;.exr&lt;/code&gt;) and realtime data file (&lt;code&gt;.json&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Then import &lt;code&gt;.fbx&lt;/code&gt; and &lt;code&gt;.exr&lt;/code&gt; files into Unity. The texture files must be
imported with the following settings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sRGB (Color Texture): Off&lt;/li&gt;
&lt;li&gt;Non-Power of 2: None&lt;/li&gt;
&lt;li&gt;Generate Mip Maps: Off&lt;/li&gt;
&lt;li&gt;Format: For position maps, "Automatic" is recommended. You can select a lower
BPP format with sacrificing quality. For normal maps, "RGB 16 bit" is
recommended.&lt;/li&gt;
&lt;li&gt;Compression: "None" is recommended. You can try other options, but usually
they don't work with non-power of two textures.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/28bb15179d19220b4ee28601bd9bc7355d1a4d67/68747470733a2f2f692e696d6775722e636f6d2f3031534b3630622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/28bb15179d19220b4ee28601bd9bc7355d1a4d67/68747470733a2f2f692e696d6775722e636f6d2f3031534b3630622e706e67" alt="importer" data-canonical-src="https://i.imgur.com/01SK60b.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can use a shader graph named "Shader Graph/Cloth" to animate the mesh.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d1757d0fb34e89c263fd99406b9d295ebdcf4bf3/68747470733a2f2f692e696d6775722e636f6d2f74794c576459512e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d1757d0fb34e89c263fd99406b9d295ebdcf4bf3/68747470733a2f2f692e696d6775722e636f6d2f74794c576459512e706e67" alt="material" data-canonical-src="https://i.imgur.com/tyLWdYQ.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The "_numOfFrames", "_posMax" and "_posMin" properties must be set based on
the realtime data. Open the exported &lt;code&gt;.json&lt;/code&gt; file with a text editor and
copy-paste these values to the material properties.&lt;/p&gt;
&lt;p&gt;You can use the packed-normal encoding (the "Pack normals into Position Alpha"
option in the VAT exporter) with enabling the "Use Packed Normals" option in
the material. Note that it may significantly increase the quantization error in
normal vectors.&lt;/p&gt;
&lt;p&gt;To animate the mesh, you have to control the "Current Frame" property manually.
In the "Cloth" example, this property is controlled by a timeline.&lt;/p&gt;
&lt;p&gt;The structure of the shader graph is quite simple. You can easily extend it to
add features, like adding a color map or support of different surface types.
For example, in the "Cloth" example, it uses an extended shader graph named
"Cloth Lerp" that interpolates positions/normals between consecutive frames to
achieve smooth animation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-frequently-asked-questions" class="anchor" aria-hidden="true" href="#frequently-asked-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frequently Asked Questions&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-is-it-possible-to-support-universal-rp" class="anchor" aria-hidden="true" href="#is-it-possible-to-support-universal-rp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Is it possible to support Universal RP?&lt;/h4&gt;
&lt;p&gt;Yes. Although these examples are created with HDRP, you can use the same
approach on Universal RP. These shader graphs and VFX graphs can be converted
by changing a few options.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>keijiro</author><guid isPermaLink="false">https://github.com/keijiro/HdrpVatExample</guid><pubDate>Sun, 26 Jan 2020 00:01:00 GMT</pubDate></item></channel></rss>