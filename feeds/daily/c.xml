<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C, Today</title><link>https://github.com/trending/c?since=daily</link><description>The top repositories on GitHub for c, measured daily</description><pubDate>Fri, 06 Dec 2019 01:04:12 GMT</pubDate><lastBuildDate>Fri, 06 Dec 2019 01:04:12 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>jarun/nnn #1 in C, Today</title><link>https://github.com/jarun/nnn</link><description>&lt;p&gt;&lt;i&gt;:dolphin: The missing terminal file manager for X.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content-nnn---type-less-do-more-wayyy-faster" class="anchor" aria-hidden="true" href="#nnn---type-less-do-more-wayyy-faster"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nnn - &lt;i&gt;type less, do more, wayyy faster&lt;/i&gt;&lt;/h1&gt;
&lt;p align="center"&gt;
&lt;a href="https://github.com/jarun/nnn/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/18b943470ae3352cbdef0c60fb019d35282b1544/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6a6172756e2f6e6e6e2e7376673f6d61784167653d363030" alt="Latest release" data-canonical-src="https://img.shields.io/github/release/jarun/nnn.svg?maxAge=600" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://repology.org/metapackage/nnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b6c50298eacbb6eb531dc1225a3b10fb6d00dca7/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f74696e792d7265706f732f6e6e6e2e737667" alt="Availability" data-canonical-src="https://repology.org/badge/tiny-repos/nnn.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/jarun/nnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/37db593059bd9da597d3d4372b0ad69ceece98f4/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6a6172756e2f6e6e6e2f6d61737465722e7376673f6c6162656c3d747261766973" alt="Travis Status" data-canonical-src="https://img.shields.io/travis/jarun/nnn/master.svg?label=travis" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/jarun/workflows/nnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/79031f9d0927a50a3a5b3bc80b07f5efcc4447ed/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f6a6172756e2f6e6e6e2e7376673f6c6162656c3d636972636c656369" alt="CircleCI Status" data-canonical-src="https://img.shields.io/circleci/project/github/jarun/nnn.svg?label=circleci" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://en.wikipedia.org/wiki/Privacy-invasive_software" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11f1e62eced3068d19b8c9ef0d15013b9c510615/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707269766163792d61776172652d6372696d736f6e" alt="Privacy Awareness" data-canonical-src="https://img.shields.io/badge/privacy-aware-crimson" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/jarun/nnn/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/0994a626d3e23c840a4ce2ec05783c1e88cf69f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d425344253230322d2d436c617573652d79656c6c6f772e7376673f6d61784167653d32353932303030" alt="License" data-canonical-src="https://img.shields.io/badge/license-BSD%202--Clause-yellow.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;&lt;a href="https://www.youtube.com/watch?v=U2n5aGqou9E" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d7abd98b23e90b9b4c295e2b15b7150b53cdd5a0/68747470733a2f2f692e696d6775722e636f6d2f4d5057706d6f732e706e67" data-canonical-src="https://i.imgur.com/MPWpmos.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;i&gt;navigate-as-you-type &amp;amp; du (click to see demo video)&lt;/i&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; is a full-featured terminal file manager. It's tiny and nearly 0-config with an &lt;a href="https://github.com/jarun/nnn/wiki/Performance"&gt;incredible performance&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; is also a du analyzer, a fuzzy app launcher, a batch renamer and a file picker. The &lt;a href="https://github.com/jarun/nnn/tree/master/plugins#nnn-plugins"&gt;plugin repository&lt;/a&gt; has tons of plugins and documentation to extend the capabilities further. You can &lt;em&gt;plug&lt;/em&gt; new functionality &lt;em&gt;and play&lt;/em&gt; with a custom keybind instantly. There's an independent &lt;a href="https://github.com/mcchrish/nnn.vim"&gt;(neo)vim plugin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It runs smoothly on the Raspberry Pi, Termux &lt;a href="https://www.youtube.com/watch?v=AbaauM7gUJw" rel="nofollow"&gt;on Android&lt;/a&gt;, Linux, macOS, BSD, Cygwin, WSL and works seamlessly with DEs and GUI utilities.&lt;/p&gt;
&lt;p&gt;Add to that an awesome &lt;a href="https://github.com/jarun/nnn/wiki"&gt;Wiki&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Love smart and efficient utilities? Explore &lt;a href="https://github.com/jarun?tab=repositories"&gt;my repositories&lt;/a&gt;. Buy me a cup of coffee if they help you.&lt;/em&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=RMLTQ76JSXJ4Q" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/091a000ee8ff6640d0e39066767e64382617d7be/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f50617950616c2d646f6e6174652d3165623066632e737667" alt="Donate via PayPal!" data-canonical-src="https://img.shields.io/badge/PayPal-donate-1eb0fc.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Modes
&lt;ul&gt;
&lt;li&gt;Light (default), detail&lt;/li&gt;
&lt;li&gt;Disk usage analyzer (block/apparent)&lt;/li&gt;
&lt;li&gt;File picker, (neo)vim plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Navigation
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Navigate-as-you-type&lt;/em&gt; with dir auto-select&lt;/li&gt;
&lt;li&gt;Contexts (&lt;em&gt;aka&lt;/em&gt; tabs/workspaces) with custom colors&lt;/li&gt;
&lt;li&gt;Sessions, bookmarks; pin and visit a dir&lt;/li&gt;
&lt;li&gt;Remote mounts (needs sshfs, rclone)&lt;/li&gt;
&lt;li&gt;Familiar shortcuts (arrows, &lt;kbd&gt;~&lt;/kbd&gt;, &lt;kbd&gt;-&lt;/kbd&gt;, &lt;kbd&gt;@&lt;/kbd&gt;), quick reference&lt;/li&gt;
&lt;li&gt;CD on quit (&lt;em&gt;easy&lt;/em&gt; shell integration)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sorting
&lt;ul&gt;
&lt;li&gt;Ordered pure numeric names by default (visit &lt;em&gt;/proc&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Case-insensitive version (&lt;em&gt;aka&lt;/em&gt; natural) sort&lt;/li&gt;
&lt;li&gt;By file name, modification/access time, size, extension&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Search
&lt;ul&gt;
&lt;li&gt;Instant filtering with &lt;em&gt;search-as-you-type&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Regex and substring match&lt;/li&gt;
&lt;li&gt;Subtree search to open or edit files (using plugin)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mimes
&lt;ul&gt;
&lt;li&gt;Open with desktop opener or specify a custom app&lt;/li&gt;
&lt;li&gt;Create, list, extract, mount (FUSE based) archives&lt;/li&gt;
&lt;li&gt;Option to open all text files in EDITOR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Information
&lt;ul&gt;
&lt;li&gt;Detailed file information&lt;/li&gt;
&lt;li&gt;Media information (using plugin)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Convenience
&lt;ul&gt;
&lt;li&gt;Run plugins and commands with custom keybinds&lt;/li&gt;
&lt;li&gt;FreeDesktop compliant trash (needs trash-cli)&lt;/li&gt;
&lt;li&gt;Cross-dir file/all/range selection&lt;/li&gt;
&lt;li&gt;Batch renamer (feature-limited) for selection or dir&lt;/li&gt;
&lt;li&gt;Copy (as), move (as), delete, archive, link selection&lt;/li&gt;
&lt;li&gt;Create (with parents), rename, duplicate (anywhere) files and dirs&lt;/li&gt;
&lt;li&gt;Spawn a shell, run apps, run commands, execute file&lt;/li&gt;
&lt;li&gt;Hovered file set as &lt;code&gt;$nnn&lt;/code&gt; at prompt and spawned shell&lt;/li&gt;
&lt;li&gt;Lock terminal (needs a locker)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Privacy-aware (no unconfirmed user data collection)&lt;/li&gt;
&lt;li&gt;Minimal deps, minimal config (with sensible defaults)&lt;/li&gt;
&lt;li&gt;Widely available&lt;/li&gt;
&lt;li&gt;Unicode support&lt;/li&gt;
&lt;li&gt;Follows Linux kernel coding style&lt;/li&gt;
&lt;li&gt;Highly optimized, static analysis integrated code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install the &lt;a href="https://github.com/jarun/nnn#utility-dependencies"&gt;utilities you may need&lt;/a&gt; based on your regular workflows.&lt;/li&gt;
&lt;li&gt;Configure &lt;a href="https://github.com/jarun/nnn/wiki/Basic-use-cases#configure-cd-on-quit"&gt;cd on quit&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Optionally open all text files in &lt;code&gt;$EDITOR&lt;/code&gt; (fallback vi): &lt;code&gt;export NNN_USE_EDITOR=1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For additional functionality &lt;a href="https://github.com/jarun/nnn/tree/master/plugins#installing-plugins"&gt;install plugins&lt;/a&gt; and the GUI app launcher &lt;a href="https://github.com/jarun/nnn/tree/master/misc/nlaunch"&gt;&lt;code&gt;nlaunch&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Don't memorize keys. Arrows, &lt;kbd&gt;/&lt;/kbd&gt; and &lt;kbd&gt;q&lt;/kbd&gt; suffice. Press &lt;kbd&gt;?&lt;/kbd&gt; for help on keyboard shortcuts anytime.&lt;/li&gt;
&lt;li&gt;To set &lt;code&gt;nnn&lt;/code&gt; as the default file manager, follow these &lt;a href="https://github.com/jarun/nnn/wiki/Advanced-use-cases#configure-as-default-fm"&gt;instructions&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-library-dependencies" class="anchor" aria-hidden="true" href="#library-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Library dependencies&lt;/h4&gt;
&lt;p&gt;A curses library with wide char support (e.g. ncursesw), libreadline (&lt;code&gt;make O_NORL=1&lt;/code&gt; to drop) and standard libc.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-utility-dependencies" class="anchor" aria-hidden="true" href="#utility-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Utility dependencies&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Dependency&lt;/th&gt;
&lt;th&gt;Installation&lt;/th&gt;
&lt;th&gt;Operation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;xdg-open (Linux), open(1) (macOS), cygstart (Cygwin)&lt;/td&gt;
&lt;td&gt;base&lt;/td&gt;
&lt;td&gt;desktop opener&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file, coreutils (cp, mv, rm), xargs&lt;/td&gt;
&lt;td&gt;base&lt;/td&gt;
&lt;td&gt;file type, copy, move and remove&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tar, (un)zip [atool/bsdtar for more formats]&lt;/td&gt;
&lt;td&gt;base&lt;/td&gt;
&lt;td&gt;create, list, extract tar, gzip, bzip2, zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;archivemount, fusermount(3)&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;mount, unmount archives&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sshfs, &lt;a href="https://rclone.org/" rel="nofollow"&gt;rclone&lt;/a&gt;, fusermount(3)&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;mount, unmount remotes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;trash-cli&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;trash files (default action: rm)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vlock (Linux), bashlock (macOS), lock(1) (BSD)&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;terminal locker (fallback: &lt;a href="https://github.com/abishekvashok/cmatrix"&gt;cmatrix&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;advcpmv (Linux) (&lt;a href="https://github.com/jarun/nnn/wiki/Advanced-use-cases#show-cp-mv-progress"&gt;integration&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;copy, move progress&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$VISUAL&lt;/code&gt; (else &lt;code&gt;$EDITOR&lt;/code&gt;), &lt;code&gt;$PAGER&lt;/code&gt;, &lt;code&gt;$SHELL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;fallback vi, less, sh&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-from-a-package-manager" class="anchor" aria-hidden="true" href="#from-a-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From a package manager&lt;/h4&gt;
&lt;p&gt;Install &lt;code&gt;nnn&lt;/code&gt; from your package manager. If the version available is dated try an alternative installation method.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Packaging status (expand)&lt;/summary&gt;
&lt;p&gt;
&lt;br&gt;
&lt;a href="https://repology.org/metapackage/nnn/versions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bfbef78a779d5f143146ad0570030f2928688b54/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f766572746963616c2d616c6c7265706f732f6e6e6e2e737667" alt="Packaging status" data-canonical-src="https://repology.org/badge/vertical-allrepos/nnn.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
Unlisted distros:
&lt;p&gt;
&lt;br&gt;
● CentOS (&lt;code&gt;yum --enablerepo=epel install nnn&lt;/code&gt;)&lt;br&gt;
● &lt;a href="https://notabug.org/milislinux/milis/src/master/talimatname/genel/n/nnn/talimat" rel="nofollow"&gt;Milis Linux&lt;/a&gt; (&lt;code&gt;mps kur nnn&lt;/code&gt;)&lt;br&gt;
● &lt;a href="https://www.nutyx.org/en/?type=pkg&amp;amp;branch=rolling&amp;amp;arch=x86_64&amp;amp;searchpkg=nnn" rel="nofollow"&gt;NuTyX&lt;/a&gt; (&lt;code&gt;cards install nnn&lt;/code&gt;)&lt;br&gt;
● &lt;a href="http://codex.sourcemage.org/test/shell-term-fm/nnn/" rel="nofollow"&gt;Source Mage&lt;/a&gt; (&lt;code&gt;cast nnn&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-release-packages" class="anchor" aria-hidden="true" href="#release-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release packages&lt;/h4&gt;
&lt;p&gt;Packages for Arch Linux, CentOS, Debian, Fedora and Ubuntu are auto-generated with the &lt;a href="https://github.com/jarun/nnn/releases/latest"&gt;latest stable release&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-from-source" class="anchor" aria-hidden="true" href="#from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From source&lt;/h4&gt;
&lt;p&gt;Download the latest stable release or clone this repository (&lt;em&gt;risky&lt;/em&gt;), install deps and compile. On Ubuntu 18.04:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install pkg-config libncursesw5-dev libreadline-dev
$ make
$ sudo make strip install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;PREFIX&lt;/code&gt; is supported, in case you want to install to a different location.&lt;/p&gt;
&lt;p&gt;Visit the &lt;a href="https://github.com/jarun/nnn/wiki/Developer-guides"&gt;developer guides&lt;/a&gt; for compilation notes on the Pi, Cygwin and other compilation modes.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-shell-completion" class="anchor" aria-hidden="true" href="#shell-completion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shell completion&lt;/h4&gt;
&lt;p&gt;Completion scripts for Bash, Fish and Zsh are &lt;a href="misc/auto-completion"&gt;available&lt;/a&gt;. Refer to your shell's manual for installation instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h4&gt;
&lt;p&gt;There is no config file. Associated files are stored under &lt;code&gt;${XDG_CONFIG_HOME:-$HOME/.config}/nnn/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; supports the following optional (set if you need) environment variables.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example &lt;code&gt;export&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NNN_OPENER=mimeopen&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;custom file opener&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NNN_BMS='d:~/Documents;D:~/Docs archive/'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;key-bookmark pairs [max 10]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NNN_PLUG='o:fzopen;m:nmount;x:_chmod +x $nnn'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;key-plugin (or cmd) pairs (&lt;kbd&gt;:key&lt;/kbd&gt; to run) [max 15]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NNN_USE_EDITOR=1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;open text files in &lt;code&gt;$VISUAL&lt;/code&gt; (else &lt;code&gt;$EDITOR&lt;/code&gt;, fallback vi)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NNN_CONTEXT_COLORS='1234'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify per context color [default: '4444' (all blue)]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NNN_SSHFS_OPTS='sshfs -o reconnect,idmap=user'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify SSHFS options&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NNN_RCLONE_OPTS='rclone mount --read-only'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify rclone options&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NNN_IDLE_TIMEOUT=300&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;idle seconds to lock terminal [default: disabled]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NNN_COPIER=copier&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clipboard copier script [default: none]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NNN_TRASH=1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;trash files to the desktop Trash [default: delete]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-cmdline-options" class="anchor" aria-hidden="true" href="#cmdline-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cmdline options&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;usage: nnn [OPTIONS] [PATH]

The missing terminal file manager for X.

positional args:
  PATH   start dir [default: .]

optional args:
 -a      use access time
 -b key  open bookmark key
 -c      cli-only opener
 -d      detail mode
 -e name load session by name
 -E      use EDITOR for undetached edits
 -f      run filter as cmd on prompt key
 -H      show hidden files
 -i      nav-as-you-type mode
 -K      detect key collision
 -n      version sort
 -o      open files on Enter
 -p file selection file [stdout if '-']
 -r      use advcpmv patched cp, mv
 -R      disable rollover at edges
 -s      string filters [default: regex]
 -S      du mode
 -t      disable dir auto-select
 -v      show version
 -h      show help
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-keyboard-and-mouse" class="anchor" aria-hidden="true" href="#keyboard-and-mouse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keyboard and mouse&lt;/h4&gt;
&lt;p&gt;The list below is from the &lt;strong&gt;dev branch&lt;/strong&gt;. Press &lt;kbd&gt;?&lt;/kbd&gt; in &lt;code&gt;nnn&lt;/code&gt; to see the keybinds in your installed version.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; NAVIGATION
         Up k  Up          PgUp ^U  Scroll up
       Down j  Down        PgDn ^D  Scroll down
       Left h  Parent      ~ ` @ -  HOME, /, start, last
  Ret Right l  Open              .  Toggle show hidden
         g ^A  First entry    G ^E  Last entry
            b  Pin current dir  ^B  Go to pinned dir
      (Sh)Tab  Cycle context     d  Toggle detail view
         , ^/  Lead key    N LeadN  Context N
            /  Filter/Lead  Ins ^N  Toggle nav-as-you-type
          Esc  Exit prompt   ^L F5  Redraw/clear prompt
            ?  Help, conf  ' Lead'  First file
         Q ^Q  Quit  ^G  QuitCD  q  Quit context
 FILES
           ^O  Open with...      n  Create new/link
            D  File details  ^R F2  Rename/duplicate
   Space ^J/a  Sel toggle/all    r  Batch rename
         m ^K  Sel range, clear  M  List selection
            P  Copy selection    K  Edit, flush sel
            V  Move selection    w  Copy/move sel as
            X  Del selection    ^X  Del entry
            f  Create archive    T  Mount archive
           ^F  Extract archive   F  List archive
            e  Edit in EDITOR    p  Open in PAGER
 ORDER TOGGLES
            A  Apparent du       S  du
            z  Size   E  Extn    t  Time
 MISC
         ! ^]  Shell      ;K :K xK  Execute plugin K
            C  Execute entry  R ^V  Pick plugin
            U  Manage session    =  Launch
            c  Remote mount      u  Unmount
         ] ^P  Prompt/run cmd    L  Lock
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Help &amp;amp; settings, file details and archive listing are shown in the &lt;code&gt;$PAGER&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;To change shortcuts modify key bindings in &lt;code&gt;nnn.h&lt;/code&gt; and compile.&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Mouse click&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Left single on context number&lt;/td&gt;
&lt;td&gt;Visit context&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Left single on top row after context numbers&lt;/td&gt;
&lt;td&gt;Visit parent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Left single/double on last 2 rows&lt;/td&gt;
&lt;td&gt;Toggle nav-as-you-type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Left single&lt;/td&gt;
&lt;td&gt;Select context or entry&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Left double&lt;/td&gt;
&lt;td&gt;Select context or open entry&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-lead-key" class="anchor" aria-hidden="true" href="#lead-key"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lead key&lt;/h4&gt;
&lt;p&gt;The Lead/Leader key provides a powerful multi-functional navigation mechanism. It is case-sensitive and understands contexts, bookmarks and location shortcuts.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Follower key&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;kbd&gt;1-4&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to/create selected context&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;key&lt;/td&gt;
&lt;td&gt;Go to bookmarked location&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;kbd&gt;'&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to first file in directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;kbd&gt;~&lt;/kbd&gt; &lt;kbd&gt;`&lt;/kbd&gt; &lt;kbd&gt;@&lt;/kbd&gt; &lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Visit HOME, &lt;code&gt;/&lt;/code&gt;, start, last visited dir&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;kbd&gt;.&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Toggle show hidden files&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;When the filter is on, &lt;kbd&gt;/&lt;/kbd&gt; works as an additional Lead key.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ nnn -h
$ man nnn
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To lookup keyboard shortcuts at runtime, press &lt;kbd&gt;?&lt;/kbd&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-elsewhere" class="anchor" aria-hidden="true" href="#elsewhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elsewhere&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Nnn_(file_manager)" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Nnn" rel="nofollow"&gt;ArchWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fossmint.com/nnn-linux-terminal-file-browser/" rel="nofollow"&gt;FOSSMint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ghacks.net/2019/11/01/nnn-is-an-excellent-command-line-based-file-manager-for-linux-macos-and-bsds/" rel="nofollow"&gt;gHacks Tech News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hacker News [&lt;a href="https://news.ycombinator.com/item?id=18520898" rel="nofollow"&gt;1&lt;/a&gt;] [&lt;a href="https://news.ycombinator.com/item?id=19850656" rel="nofollow"&gt;2&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itsfoss.com/nnn-file-browser-linux/" rel="nofollow"&gt;It's FOSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LinuxLinks [&lt;a href="https://www.linuxlinks.com/nnn-fast-and-flexible-file-manager/" rel="nofollow"&gt;1&lt;/a&gt;] [&lt;a href="https://www.linuxlinks.com/bestconsolefilemanagers/" rel="nofollow"&gt;2&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://suckless.org/rocks/" rel="nofollow"&gt;Suckless Rocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fullcirclemagazine.org/issue-135/" rel="nofollow"&gt;Ubuntu Full Circle Magazine - Issue 135&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-developers" class="anchor" aria-hidden="true" href="#developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jarun"&gt;Arun Prakash Jana&lt;/a&gt; (Copyright © 2016-2019)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0xACE"&gt;0xACE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/annagrram"&gt;Anna Arad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KlzXS"&gt;KlzXS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sjmulder"&gt;Sijmen J. Mulder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;and other contributors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; is actively developed. Visit the to the &lt;a href="https://github.com/jarun/nnn/issues/386"&gt;ToDo list&lt;/a&gt; to contribute or see the features in progress.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jarun</author><guid isPermaLink="false">https://github.com/jarun/nnn</guid><pubDate>Fri, 06 Dec 2019 00:01:00 GMT</pubDate></item><item><title>immunityinc/libptrace #2 in C, Today</title><link>https://github.com/immunityinc/libptrace</link><description>&lt;p&gt;&lt;i&gt;An event driven multi-core process debugging, tracing, and manipulation framework.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-libptrace" class="anchor" aria-hidden="true" href="#libptrace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libptrace&lt;/h1&gt;
&lt;p&gt;libptrace is an event driven process/thread debugging, tracing, and
manipulation framework.  It is written in C and has Python 2.7 bindings.&lt;/p&gt;
&lt;p&gt;It is meant to be used as a library.  The API has been designed with
cross-platform support in mind.  Although the current version only runs on 32-
and 64-bit (wow64 is supported) versions of Windows the design and abstractions
are such that other platforms and even remote debugging support can be added
under the same API.&lt;/p&gt;
&lt;p&gt;It is multiple core/thread aware, and can easily be used to run multiple event
loops concurrently.  Debugging process groups or pipelines or tracing a large
number of processes can be scaled by increasing execution cores this way.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-foreword" class="anchor" aria-hidden="true" href="#foreword"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Foreword&lt;/h2&gt;
&lt;p&gt;I wrote the initial version of libptrace in 2006 while still in university, and
re-licensed it for full use by Immunity Inc. in 2011, my employer at the time.
Around this time the framework was meant to be integrated in Immunity Debugger,
although I have always taken care to keep the framework separate, so it could
be used in a stand-alone fashion.&lt;/p&gt;
&lt;p&gt;With this goal in mind it saw a lot of development at Immunity, and I am
grateful to have been able to actively develop on it during my working hours
and see the framework become more mature.  I redesigned most of it to be aware
of multiple cores, to provide Python bindings, and create better abstractions.&lt;/p&gt;
&lt;p&gt;With the eventual release of x86dbg it was decided we would no longer work on
Immunity Debugger, and instead focus our efforts on other things.  This also
stalled libptrace development, and for the following years it collected dust in
the internal git repository, until after the acquisition of Immunity Inc. by
Cyxtera Technologies, now under Cyxtera Cybersecurity Inc., it was decided to
release the project under the LGPL version 2.1 so it could hopefully see
adoption and further development.&lt;/p&gt;
&lt;p&gt;I want to kindly thank Immunity Inc., as well as Cyxtera Technologies, and
Cyxtera Cybersecurity Inc. for making this release happen.  Also I'd like to
specifically thank Dave Aitel for pushing this release through layers of
management and shielding me from the bureaucratic parts of the process.  It
would have been sad to see my labor lost and without purpose, and without
their willingness to release the libptrace development that was done internally
as open source this is what would have happened.&lt;/p&gt;
&lt;p&gt;I also want to thank several coworkers that spent time using or working on the
framework, most notably Massimiliano Oldani, Roderick Asselineau, and Christos
Kalkanis.  My thanks also extends to Lennert Buytenhek for his intrusive AVL
tree and linked list implementations which I ended up using.&lt;/p&gt;
&lt;p&gt;Although it has been over 4 years since any work has been done on the project,
I hope people will find it useful.  I believe the design and source code are
relatively clean, and at this point allows the framework to be extended and
ported to other platforms relatively easily.  Hopefully one day this can turn
into a true cross-platform debugging library under a single consistent API.&lt;/p&gt;
&lt;p&gt;Finally, I'd like to dedicate this project to my lost daughter, Yuzuyu Huizer,
with whom I hope to one day reunite.  I love you.&lt;/p&gt;
&lt;p&gt;-- Ronald Huizer &lt;a href="mailto:rhuizer@hexpedition.com"&gt;rhuizer@hexpedition.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;The current supported build method is by cross-compiling the project using
MinGW and CMake.  The build system has been tested on Ubuntu 19.04.&lt;/p&gt;
&lt;p&gt;A 32-bit installer can be built using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_TOOLCHAIN_FILE=mingw-w64-x86.cmake .
make
makensis libptrace-setup.nsi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A 64-bit bit installer can be built using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_TOOLCHAIN_FILE=mingw-w64-x64.cmake .
make
makensis -DUSE64 libptrace-setup.nsi
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt; when using the installer please do not change the
&lt;code&gt;Immunity Inc\libptrace&lt;/code&gt; part of the destination path.  When installed to a
non-dedicated directory this will cause the uninstaller to delete the whole
directory, including other files and subdirectories, as it will simply
&lt;code&gt;RMDir /r&lt;/code&gt; the installation directory.  This fragility will be fixed later.&lt;/p&gt;
&lt;p&gt;After following the build steps above, the 32-bit installer will be at
&lt;code&gt;libptrace-setup32.exe&lt;/code&gt; and the 64-bit installer will be at
&lt;code&gt;libptrace-setup64.exe&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Release downloads can be found
&lt;a href="https://github.com/immunityinc/libptrace/releases"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;doc/&lt;/code&gt; directory is hopelessly outdated.  It is included as a starting
point for more current documentation.  Please do not use it.&lt;/p&gt;
&lt;p&gt;Several example scripts can be found in the &lt;code&gt;python/scripts&lt;/code&gt; directory.  They
will be installed to &lt;code&gt;Program Files\Immunity Inc\libptrace&lt;/code&gt; or in case of the
32-bit version &lt;code&gt;Program Files (x86)\Immunity Inc\libptrace&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These examples do in no way show the framework exhaustively, but they should
provide a good starting point for anyone that wants to use the framework.  The
C API has not been documented well, but some examples can be found in the
&lt;code&gt;unittests/windows&lt;/code&gt; directory.  The &lt;code&gt;python/&lt;/code&gt; directory which contains the
python bindings also provides a good overview.  Finally, the
&lt;code&gt;include/libptrace&lt;/code&gt; directory contains the header files which are public, and
as such provide a good list of API functions.&lt;/p&gt;
&lt;p&gt;It should be noted the Python API is currently a fairly limited subset of the
C API.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-a-python-example" class="anchor" aria-hidden="true" href="#a-python-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A python example&lt;/h3&gt;
&lt;p&gt;As an example, the general workflow to trace &lt;code&gt;RegOpenKeyExW&lt;/code&gt; calls in an
executable would be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import _ptrace

def bp_handler(bp, thread):
    (key, subkey, options, sam, result) = _ptrace.cconv.args_get(thread, "%u%p%u%u%p")
    subkey = thread.process.read_utf16(subkey)
    print "T%d: RegOpenKeyEx(%s, \"%s\", 0x%08x, 0x%08x, 0x%08x)" % \
        (thread.id, key, subkey, options, sam, result),

def attached_handler(process):
    bp = _ptrace.breakpoint_sw("advapi32!RegOpenKeyExW", bp_handler)
    process.breakpoint_set(bp)

handlers          = _ptrace.event_handlers()
handlers.attached = attached_handler

_ptrace.execv(r"C:\Windows\Notepad.exe", [], handlers, 0)
_ptrace.main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the return value of &lt;code&gt;RegOpenKeyExW&lt;/code&gt; is also desired, it is easiest to set
a breakpoint on the return address of the function call.  This avoids the
need for code analysis to determine function exit paths statically:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def bp_end_handler(bp, thread):
    print "= %d" % _ptrace.cconv.retval_get(thread)

def bp_handler(bp, thread):
    (key, subkey, options, sam, result) = _ptrace.cconv.args_get(thread, "%u%p%u%u%p")
    subkey = thread.process.read_utf16(subkey)
    print "T%d: RegOpenKeyEx(%s, \"%s\", 0x%08x, 0x%08x, 0x%08x)" % \
        (thread.id, key, subkey, options, sam, result),

    retaddr = _ptrace.cconv.retaddr_get(thread)
    if thread.process.breakpoint_find(retaddr) is None:
        bp_end  = _ptrace.breakpoint_sw(retaddr, bp_end_handler)
        thread.process.breakpoint_set(bp_end)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h2&gt;
&lt;p&gt;The copyright situation is made clear in each individual file.  They are mostly
held by Cyxtera Cybersecurity Inc., Ronald Huizer, or both at the same time. A
select few files have third party copyright holders, such as Lennert Buytenhek.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Distributed under version 2.1 of the GNU Lesser General Public License. See
&lt;code&gt;COPYING&lt;/code&gt; and &lt;code&gt;COPYING.LESSER&lt;/code&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rhuizer/"&gt;Ronald Huizer&lt;/a&gt; - project design and implementation&lt;/li&gt;
&lt;li&gt;Massimiliano Oldani - symbol handling, bug fixes&lt;/li&gt;
&lt;li&gt;Roderick Asselineau - pe improvements, interval tree, bug fixes&lt;/li&gt;
&lt;li&gt;Christos Kalkanis - testing, improvements, bug fixes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ronald Huizer - &lt;a href="mailto:rhuizer@hexpedition.com"&gt;rhuizer@hexpedition.com&lt;/a&gt; -
&lt;a href="https://twitter.com/ronaldhuizer" rel="nofollow"&gt;@ronaldhuizer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Immunity Inc. and Cyxtera Cybersecurity Inc. for making this release happen.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/buytenh/"&gt;Lennert Buytenhek&lt;/a&gt; for his intrusive AVL tree
and linked list implementation.&lt;/li&gt;
&lt;li&gt;Dave Aitel for dealing with the bureaucratic and legal parts of this release.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>immunityinc</author><guid isPermaLink="false">https://github.com/immunityinc/libptrace</guid><pubDate>Fri, 06 Dec 2019 00:02:00 GMT</pubDate></item><item><title>ldcsaa/HP-Socket #3 in C, Today</title><link>https://github.com/ldcsaa/HP-Socket</link><description>&lt;p&gt;&lt;i&gt;High Performance TCP/UDP/HTTP Communication Component&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c77b7ec2fb2cad71b531d7384883c40c890e9952/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303832302f3131323631365f35623862333762665f38313732302e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c77b7ec2fb2cad71b531d7384883c40c890e9952/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303832302f3131323631365f35623862333762665f38313732302e706e67" alt="HP-Socket" title="HP-Socket" data-canonical-src="https://images.gitee.com/uploads/images/2019/0820/112616_5b8b37bf_81720.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;High Performance Network Framework&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Server&lt;/strong&gt;&lt;/em&gt; Based on IOCP/EPOLL communication model, combined with technology of memory pool, private heap etc., efficient memory management is implemented to support large scale and high concurrent communication scenarios.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Agent&lt;/strong&gt;&lt;/em&gt; The Agent component is essentially a Multi-Client component that uses the same technical architecture as the Server component. An Agent component object can create and efficiently handle large-scale Socket connections at the same time.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Client&lt;/strong&gt;&lt;/em&gt; Based on Event-Select/POLL communication model, each component object creates a communication thread and manages a Socket connection. Client components are suitable for small-scale client scenarios.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-document" class="anchor" aria-hidden="true" href="#document"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Document&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HP-Socket Development Guide
&lt;a href="https://github.com/ldcsaa/HP-Socket/tree/master/Doc"&gt;[pdf]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HP-Socket Class Diagram
&lt;a href="https://github.com/ldcsaa/HP-Socket/tree/master/Doc"&gt;[uml]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HP-Socket Class Diagram
&lt;a href="https://github.com/ldcsaa/HP-Socket/tree/master/Doc"&gt;[jpg]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HP-Socket SSL Class Diagram
&lt;a href="https://github.com/ldcsaa/HP-Socket/tree/master/Doc"&gt;[jpg]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HP-Socket HTTP Class Diagram
&lt;a href="https://github.com/ldcsaa/HP-Socket/tree/master/Doc"&gt;[jpg]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-workflow" class="anchor" aria-hidden="true" href="#workflow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create listener object&lt;/li&gt;
&lt;li&gt;Create component object (and binding with listener object)&lt;/li&gt;
&lt;li&gt;Start component object&lt;/li&gt;
&lt;li&gt;Connect to dest host (for &lt;em&gt;Agent&lt;/em&gt; Component only)&lt;/li&gt;
&lt;li&gt;process network events (&lt;em&gt;OnConnect/OnReceive/OnClose&lt;/em&gt; etc.)&lt;/li&gt;
&lt;li&gt;Stop component object (optional: component object will be stopped before destroy in step 7)&lt;/li&gt;
&lt;li&gt;Destroy component object&lt;/li&gt;
&lt;li&gt;Destroy listener object&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/15c6a53b12261dc2b3b6cf68ff2ac8a0cd8bbd2e/68747470733a2f2f67697465652e636f6d2f75706c6f6164732f696d616765732f323031372f313231332f3132303630315f63306439353066625f38313732302e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/15c6a53b12261dc2b3b6cf68ff2ac8a0cd8bbd2e/68747470733a2f2f67697465652e636f6d2f75706c6f6164732f696d616765732f323031372f313231332f3132303630315f63306439353066625f38313732302e6a706567" alt="Agent Workflow" title="HP-Socket Agent Demo" data-canonical-src="https://gitee.com/uploads/images/2017/1213/120601_c0d950fb_81720.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;C++ Example&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;hpsocket/HPSocket.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Listener Class &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CListenerImpl&lt;/span&gt; : &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;CTcpPullServerListener&lt;/span&gt;
{

&lt;span class="pl-k"&gt;public:&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5. process network events&lt;/span&gt;
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnPrepareListen&lt;/span&gt;(ITcpServer* pSender, SOCKET soListen);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnAccept&lt;/span&gt;(ITcpServer* pSender, CONNID dwConnID, UINT_PTR soClient);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnHandShake&lt;/span&gt;(ITcpServer* pSender, CONNID dwConnID);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnReceive&lt;/span&gt;(ITcpServer* pSender, CONNID dwConnID, &lt;span class="pl-k"&gt;int&lt;/span&gt; iLength);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnSend&lt;/span&gt;(ITcpServer* pSender, CONNID dwConnID, &lt;span class="pl-k"&gt;const&lt;/span&gt; BYTE* pData, &lt;span class="pl-k"&gt;int&lt;/span&gt; iLength);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnClose&lt;/span&gt;(ITcpServer* pSender, CONNID dwConnID, EnSocketOperation enOperation, &lt;span class="pl-k"&gt;int&lt;/span&gt; iErrorCode);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnShutdown&lt;/span&gt;(ITcpServer* pSender);
};

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt;* &lt;span class="pl-k"&gt;const&lt;/span&gt; argv[])
{
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. Create listener object&lt;/span&gt;
	CListenerImpl s_listener;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. Create component object (and binding with listener object)&lt;/span&gt;
	CTcpPullServerPtr &lt;span class="pl-smi"&gt;s_pserver&lt;/span&gt;(&amp;amp;s_listener);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. Start component object&lt;/span&gt;
	&lt;span class="pl-k"&gt;if&lt;/span&gt;(!s_pserver-&amp;gt;&lt;span class="pl-c1"&gt;Start&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.0.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5555&lt;/span&gt;))
		&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; wait for exit &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... ... &lt;/span&gt;
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 6. (optional) Stop component object&lt;/span&gt;
	s_pserver-&amp;gt;&lt;span class="pl-c1"&gt;Stop&lt;/span&gt;();

	&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 7. Destroy component object automatically&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 8. Destroy listener object automatically&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;C Example&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;hpsocket/HPSocket4C.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5. process network events&lt;/span&gt;
EnHandleResult __HP_CALL &lt;span class="pl-en"&gt;OnConnect&lt;/span&gt;(HP_Agent pSender, HP_CONNID dwConnID);
EnHandleResult __HP_CALL &lt;span class="pl-en"&gt;OnReceive&lt;/span&gt;(HP_Agent pSender, HP_CONNID dwConnID, &lt;span class="pl-k"&gt;int&lt;/span&gt; iLength);
EnHandleResult __HP_CALL &lt;span class="pl-en"&gt;OnSend&lt;/span&gt;(HP_Agent pSender, HP_CONNID dwConnID, &lt;span class="pl-k"&gt;const&lt;/span&gt; BYTE* pData, &lt;span class="pl-k"&gt;int&lt;/span&gt; iLength);
EnHandleResult __HP_CALL &lt;span class="pl-en"&gt;OnClose&lt;/span&gt;(HP_Agent pSender, HP_CONNID dwConnID, En_HP_SocketOperation enOperation, &lt;span class="pl-k"&gt;int&lt;/span&gt; iErrorCode);
EnHandleResult __HP_CALL &lt;span class="pl-en"&gt;OnShutdown&lt;/span&gt;(HP_Agent pSender);

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt;* &lt;span class="pl-k"&gt;const&lt;/span&gt; argv[])
{
	HP_TcpPullAgentListener s_listener;
	HP_TcpPullAgent s_agent;

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. Create listener object&lt;/span&gt;
	s_listener	= ::&lt;span class="pl-c1"&gt;Create_HP_TcpPullAgentListener&lt;/span&gt;();
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. Create component object (and binding with listener object)&lt;/span&gt;
	s_agent		= ::&lt;span class="pl-c1"&gt;Create_HP_TcpPullAgent&lt;/span&gt;(s_listener);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Set listener callbacks &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-en"&gt;::HP_Set_FN_Agent_OnConnect&lt;/span&gt;(s_listener, OnConnect);
	&lt;span class="pl-en"&gt;::HP_Set_FN_Agent_OnSend&lt;/span&gt;(s_listener, OnSend);
	&lt;span class="pl-en"&gt;::HP_Set_FN_Agent_OnPullReceive&lt;/span&gt;(s_listener, OnReceive);
	&lt;span class="pl-en"&gt;::HP_Set_FN_Agent_OnClose&lt;/span&gt;(s_listener, OnClose);
	&lt;span class="pl-en"&gt;::HP_Set_FN_Agent_OnShutdown&lt;/span&gt;(s_listener, OnShutdown);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. Start component object&lt;/span&gt;
	&lt;span class="pl-k"&gt;if&lt;/span&gt;(::&lt;span class="pl-c1"&gt;HP_Agent_HasStarted&lt;/span&gt;(s_agent))
		&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4. Connect to dest host&lt;/span&gt;
	&lt;span class="pl-en"&gt;::HP_Agent_Connect&lt;/span&gt;(s_agent, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remote.host.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, REMOTE_PORT_1, nullptr);
	&lt;span class="pl-en"&gt;::HP_Agent_Connect&lt;/span&gt;(s_agent, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remote.host.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, REMOTE_PORT_2, nullptr);
	&lt;span class="pl-en"&gt;::HP_Agent_Connect&lt;/span&gt;(s_agent, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remote.host.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, REMOTE_PORT_3, nullptr);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; wait for exit &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... ... &lt;/span&gt;
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 6. (optional) Stop component object&lt;/span&gt;
	&lt;span class="pl-en"&gt;::HP_Agent_Stop&lt;/span&gt;(s_agent);

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 7. Destroy component object&lt;/span&gt;
	&lt;span class="pl-en"&gt;::Destroy_HP_TcpPullAgent&lt;/span&gt;(s_agent);
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 8. Destroy listener object&lt;/span&gt;
	&lt;span class="pl-en"&gt;::Destroy_HP_TcpPullAgentListener&lt;/span&gt;(s_listener);
	
	&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-component-list" class="anchor" aria-hidden="true" href="#component-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Component List&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Basic Components&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/da11612507dabf092d158fdbe7f6385aac837715/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f75702d34326261643661383332303863646136616161323634656430306535633332383332362e4a504547"&gt;&lt;img src="https://camo.githubusercontent.com/da11612507dabf092d158fdbe7f6385aac837715/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f75702d34326261643661383332303863646136616161323634656430306535633332383332362e4a504547" alt="Basic Component" title="Basic Component" data-canonical-src="https://oscimg.oschina.net/oscnet/up-42bad6a83208cda6aaa264ed00e5c328326.JPEG" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;SSL Components&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5c99ebc58c736ee14fdc1d2f0cbf62d06956116a/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f75702d34383162376534313831633165353764626535376366306634663332386437643232372e4a504547"&gt;&lt;img src="https://camo.githubusercontent.com/5c99ebc58c736ee14fdc1d2f0cbf62d06956116a/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f75702d34383162376534313831633165353764626535376366306634663332386437643232372e4a504547" alt="SSL Component" title="SSL Component" data-canonical-src="https://oscimg.oschina.net/oscnet/up-481b7e4181c1e57dbe57cf0f4f328d7d227.JPEG" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;HTTP Components&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1646e5958f936380d08257999c4dc4e3b70c7219/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f75702d38333039326666393735393866323735653363613662376162656436373964346636312e4a504547"&gt;&lt;img src="https://camo.githubusercontent.com/1646e5958f936380d08257999c4dc4e3b70c7219/68747470733a2f2f6f7363696d672e6f736368696e612e6e65742f6f73636e65742f75702d38333039326666393735393866323735653363613662376162656436373964346636312e4a504547" alt="HTTP COmponent" title="HTTP Component" data-canonical-src="https://oscimg.oschina.net/oscnet/up-83092ff97598f275e3ca6b7abed679d4f61.JPEG" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reference-projects" class="anchor" aria-hidden="true" href="#reference-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/jemalloc/jemalloc"&gt;jemalloc&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/openssl/openssl"&gt;openssl&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/nodejs/http-parser"&gt;http-parser&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/madler/zlib"&gt;zlib&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/skywind3000/kcp"&gt;kcp&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-third-party-extension-projects" class="anchor" aria-hidden="true" href="#third-party-extension-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third-party Extension Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://gitee.com/xin_chong/HP-Socket-for-macOS" rel="nofollow"&gt;HP-Socket for macOS&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://gitee.com/int2e/HPSocket.Net" rel="nofollow"&gt;HP-Socket for .Net&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-donation" class="anchor" aria-hidden="true" href="#donation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donation&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6020e99b37153c64720ba30ec251dc798641b353/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303931382f3139303030345f31316563656137635f38313732302e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/6020e99b37153c64720ba30ec251dc798641b353/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303931382f3139303030345f31316563656137635f38313732302e6a706567" alt="Alibaba Pay" title="Alibaba Pay" data-canonical-src="https://images.gitee.com/uploads/images/2019/0918/190004_11ecea7c_81720.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;
    
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d80835e2fd934bc1cffcfb61b242535943298de7/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303931382f3139303131355f61316663356562665f38313732302e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/d80835e2fd934bc1cffcfb61b242535943298de7/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303931382f3139303131355f61316663356562665f38313732302e6a706567" alt="Wechat Pay" title="Wechat Pay" data-canonical-src="https://images.gitee.com/uploads/images/2019/0918/190115_a1fc5ebf_81720.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ldcsaa</author><guid isPermaLink="false">https://github.com/ldcsaa/HP-Socket</guid><pubDate>Fri, 06 Dec 2019 00:03:00 GMT</pubDate></item><item><title>coolsnowwolf/lede #4 in C, Today</title><link>https://github.com/coolsnowwolf/lede</link><description>&lt;p&gt;&lt;i&gt;Lean's OpenWrt source&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;﻿Welcome to Lean's  git source of OpenWrt and packages

中文：如何编译自己需要的 OpenWrt 固件

注意：
1. 不要用 root 用户 git 和编译！！！
2. 国内用户编译前最好准备好梯子
3. 默认登陆IP 192.168.1.1, 密码 password

编译命令如下:

1. 首先装好 Ubuntu 64bit，推荐  Ubuntu  14 LTS x64

2. 命令行输入 sudo apt-get update ，然后输入
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler

3. git clone &lt;a href="https://github.com/coolsnowwolf/lede"&gt;https://github.com/coolsnowwolf/lede&lt;/a&gt; 命令下载好源代码，然后 cd lede 进入目录

4. ./scripts/feeds update -a 
   ./scripts/feeds install -a
   make menuconfig 

5. 最后选好你要的路由，输入 make -j1 V=s （-j1 后面是线程数。第一次编译推荐用单线程，国内请尽量全局科学上网）即可开始编译你要的固件了。

本套代码保证肯定可以编译成功。里面包括了 R9 所有源代码，包括 IPK 的。

你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！

特别提示：
1. 源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件，SSL 安全是互联网最后的壁垒。安全干净才是固件应该做到的。
2.如果你自认为 Koolshare 论坛或者其固件的脑残粉，本人不欢迎你使用本源代码。所以如果你是，那么使用过程中遇到任何问题本人概不回应。
3.如有问题需要讨论，欢迎加入 QQ 讨论群：Gargoyle OpenWrt 编译大群 ,号码 872575064 ，加群链接: 点击链接加入群聊【OP共享技术交流群】：&lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=51yhjb2" rel="nofollow"&gt;https://jq.qq.com/?_wv=1027&amp;amp;k=51yhjb2&lt;/a&gt;

Please use "make menuconfig" to choose your preferred
configuration for the toolchain and firmware.

You need to have installed gcc, binutils, bzip2, flex, python, perl, make,
find, grep, diff, unzip, gawk, getopt, subversion, libz-dev and libc headers.

Run "./scripts/feeds update -a" to get all the latest package definitions
defined in feeds.conf / feeds.conf.default respectively
and "./scripts/feeds install -a" to install symlinks of all of them into
package/feeds/.

Use "make menuconfig" to configure your image.

Simply running "make" will build your firmware.
It will download all sources, build the cross-compile toolchain, 
the kernel and all choosen applications.

To build your own firmware you need to have access to a Linux, BSD or MacOSX system
(case-sensitive filesystem required). Cygwin will not be supported because of
the lack of case sensitiveness in the file system.



Note: Addition Lean's private package source code in ./package/lean directory. Use it under GPL v3.

GPLv3 is compatible with more licenses than GPLv2: it allows you to make combinations with code that has specific kinds of additional requirements that are not in GPLv3 itself. Section 7 has more information about this, including the list of additional requirements that are permitted.

&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>coolsnowwolf</author><guid isPermaLink="false">https://github.com/coolsnowwolf/lede</guid><pubDate>Fri, 06 Dec 2019 00:04:00 GMT</pubDate></item><item><title>libgit2/libgit2 #5 in C, Today</title><link>https://github.com/libgit2/libgit2</link><description>&lt;p&gt;&lt;i&gt;A cross-platform, linkable library implementation of Git that you can use in your application.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-libgit2---the-git-linkable-library" class="anchor" aria-hidden="true" href="#libgit2---the-git-linkable-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libgit2 - the Git linkable library&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Status&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;master&lt;/strong&gt; branch CI builds&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/libgit2/libgit2/_build/latest?definitionId=7&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/544fe0e2770bdc4076f8d21f3d4f5de5d2fde5bb/68747470733a2f2f6465762e617a7572652e636f6d2f6c6962676974322f6c6962676974322f5f617069732f6275696c642f7374617475732f6c6962676974323f6272616e63684e616d653d6d6173746572" alt="Azure Pipelines Build Status" data-canonical-src="https://dev.azure.com/libgit2/libgit2/_apis/build/status/libgit2?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v0.28 branch&lt;/strong&gt; CI builds&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/libgit2/libgit2/_build/latest?definitionId=7&amp;amp;branchName=maint/v0.28" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a691e9f2df732451cfd7a327065af64e42f6499/68747470733a2f2f6465762e617a7572652e636f6d2f6c6962676974322f6c6962676974322f5f617069732f6275696c642f7374617475732f6c6962676974323f6272616e63684e616d653d6d61696e742f76302e3238" alt="Azure Pipelines Build Status" data-canonical-src="https://dev.azure.com/libgit2/libgit2/_apis/build/status/libgit2?branchName=maint/v0.28" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v0.27 branch&lt;/strong&gt; CI builds&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/libgit2/libgit2/_build/latest?definitionId=7&amp;amp;branchName=maint/v0.27" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f060a19cd547010cd111d31fe4f5aac5dd0ee16c/68747470733a2f2f6465762e617a7572652e636f6d2f6c6962676974322f6c6962676974322f5f617069732f6275696c642f7374617475732f6c6962676974323f6272616e63684e616d653d6d61696e742f76302e3237" alt="Azure Pipelines Build Status" data-canonical-src="https://dev.azure.com/libgit2/libgit2/_apis/build/status/libgit2?branchName=maint/v0.27" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v0.26 branch&lt;/strong&gt; CI builds&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/libgit2/libgit2/_build/latest?definitionId=7&amp;amp;branchName=maint/v0.26" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/65ce9a26b279a003129f3ffdecda36538628af4b/68747470733a2f2f6465762e617a7572652e636f6d2f6c6962676974322f6c6962676974322f5f617069732f6275696c642f7374617475732f6c6962676974323f6272616e63684e616d653d6d61696e742f76302e3236" alt="Azure Pipelines Build Status" data-canonical-src="https://dev.azure.com/libgit2/libgit2/_apis/build/status/libgit2?branchName=maint/v0.26" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Nightly&lt;/strong&gt; builds&lt;/td&gt;
&lt;td&gt;&lt;a href="https://libgit2.visualstudio.com/libgit2/_build/latest?definitionId=9&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9800f1f170731fc1288b838806accd939193481/68747470733a2f2f6c6962676974322e76697375616c73747564696f2e636f6d2f6c6962676974322f5f617069732f6275696c642f7374617475732f6e696768746c793f6272616e63684e616d653d6d6173746572266c6162656c3d46756c6c2b4275696c64" alt="Azure Pipelines Build Status" data-canonical-src="https://libgit2.visualstudio.com/libgit2/_apis/build/status/nightly?branchName=master&amp;amp;label=Full+Build" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://dev.azure.com/libgit2/libgit2/_build/latest?definitionId=21?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e39e5d70f25dfba8ec28f493b521f547b0a81eab/68747470733a2f2f6465762e617a7572652e636f6d2f6c6962676974322f6c6962676974322f5f617069732f6275696c642f7374617475732f636f7665726974793f6272616e63684e616d653d6d6173746572266c6162656c3d436f7665726974792b4275696c64" alt="Coverity Build Status" data-canonical-src="https://dev.azure.com/libgit2/libgit2/_apis/build/status/coverity?branchName=master&amp;amp;label=Coverity+Build" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://scan.coverity.com/projects/639" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b4cfd41c0a2f50139bc8c70b185085533d2c7c3c/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f3633392f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/639/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;libgit2&lt;/code&gt; is a portable, pure C implementation of the Git core methods
provided as a linkable library with a solid API, allowing to build Git
functionality into your application.  Language bindings like
&lt;a href="https://github.com/libgit2/rugged"&gt;Rugged&lt;/a&gt; (Ruby),
&lt;a href="https://github.com/libgit2/libgit2sharp"&gt;LibGit2Sharp&lt;/a&gt; (.NET),
&lt;a href="http://www.pygit2.org/" rel="nofollow"&gt;pygit2&lt;/a&gt; (Python) and
&lt;a href="http://nodegit.org" rel="nofollow"&gt;NodeGit&lt;/a&gt; (Node) allow you to build Git tooling
in your favorite language.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;libgit2&lt;/code&gt; is used to power Git GUI clients like
&lt;a href="https://gitkraken.com/" rel="nofollow"&gt;GitKraken&lt;/a&gt; and &lt;a href="https://gmaster.io/" rel="nofollow"&gt;gmaster&lt;/a&gt;
and on Git hosting providers like &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;,
&lt;a href="https://gitlab.com/" rel="nofollow"&gt;GitLab&lt;/a&gt; and
&lt;a href="https://azure.com/devops" rel="nofollow"&gt;Azure DevOps&lt;/a&gt;.
We perform the merge every time you click "merge pull request".&lt;/p&gt;
&lt;p&gt;&lt;code&gt;libgit2&lt;/code&gt; is licensed under a &lt;strong&gt;very permissive license&lt;/strong&gt; (GPLv2 with a special
Linking Exception).  This basically means that you can link it (unmodified)
with any kind of software without having to release its source code.
Additionally, the example code has been released to the public domain (see the
&lt;a href="examples/COPYING"&gt;separate license&lt;/a&gt; for more information).&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help"&gt;Getting Help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-it-can-do"&gt;What It Can Do&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#optional-dependencies"&gt;Optional dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initialization"&gt;Initialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#threading"&gt;Threading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conventions"&gt;Conventions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-libgit2---using-cmake"&gt;Building libgit2 - Using CMake&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#building"&gt;Building&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-usage"&gt;Advanced Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compiler-and-linker-options"&gt;Compiler and linker options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos-x"&gt;MacOS X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#android"&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#language-bindings"&gt;Language Bindings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-can-i-contribute"&gt;How Can I Contribute?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt; for building libgit2:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt;, and is recommended to be installed into
your &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org" rel="nofollow"&gt;Python&lt;/a&gt; is used by our test framework, and
should be installed into your &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;C compiler: libgit2 is C90 and should compile on most compilers.
&lt;ul&gt;
&lt;li&gt;Windows: Visual Studio is recommended&lt;/li&gt;
&lt;li&gt;Mac: Xcode is recommended&lt;/li&gt;
&lt;li&gt;Unix: gcc or clang is recommended.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Build&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a build directory beneath the libgit2 source directory, and change
into it: &lt;code&gt;mkdir build &amp;amp;&amp;amp; cd build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create the cmake build environment: &lt;code&gt;cmake ..&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Build libgit2: &lt;code&gt;cmake --build .&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Trouble with these steps?  Read our &lt;a href="docs/troubleshooting.md"&gt;troubleshooting guide&lt;/a&gt;.
More detailed build guidance is available below.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Chat with us&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;via IRC: join &lt;a href="https://webchat.freenode.net/#libgit2" rel="nofollow"&gt;#libgit2&lt;/a&gt; on Freenode&lt;/li&gt;
&lt;li&gt;via Slack: visit &lt;a href="http://slack.libgit2.org/" rel="nofollow"&gt;slack.libgit2.org&lt;/a&gt; to sign up,
then join us in &lt;code&gt;#libgit2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Getting Help&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you have questions about the library, please be sure to check out the
&lt;a href="http://libgit2.github.com/libgit2/"&gt;API documentation&lt;/a&gt;.  If you still have
questions, reach out to us on Slack or post a question on
&lt;a href="http://stackoverflow.com/questions/tagged/libgit2" rel="nofollow"&gt;StackOverflow&lt;/a&gt; (with the &lt;code&gt;libgit2&lt;/code&gt; tag).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reporting Bugs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Please open a &lt;a href="https://github.com/libgit2/libgit2/issues"&gt;GitHub Issue&lt;/a&gt; and
include as much information as possible.  If possible, provide sample code
that illustrates the problem you're seeing.  If you're seeing a bug only
on a specific repository, please provide a link to it if possible.&lt;/p&gt;
&lt;p&gt;We ask that you not open a GitHub Issue for help, only for bug reports.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reporting Security Issues&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Please have a look at SECURITY.md.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-what-it-can-do" class="anchor" aria-hidden="true" href="#what-it-can-do"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What It Can Do&lt;/h1&gt;
&lt;p&gt;libgit2 provides you with the ability to manage Git repositories in the
programming language of your choice.  It's used in production to power many
applications including GitHub.com, Plastic SCM and Azure DevOps.&lt;/p&gt;
&lt;p&gt;It does not aim to replace the git tool or its user-facing commands. Some APIs
resemble the plumbing commands as those align closely with the concepts of the
Git system, but most commands a user would type are out of scope for this
library to implement directly.&lt;/p&gt;
&lt;p&gt;The library provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SHA conversions, formatting and shortening&lt;/li&gt;
&lt;li&gt;abstracted ODB backend system&lt;/li&gt;
&lt;li&gt;commit, tag, tree and blob parsing, editing, and write-back&lt;/li&gt;
&lt;li&gt;tree traversal&lt;/li&gt;
&lt;li&gt;revision walking&lt;/li&gt;
&lt;li&gt;index file (staging area) manipulation&lt;/li&gt;
&lt;li&gt;reference management (including packed references)&lt;/li&gt;
&lt;li&gt;config file management&lt;/li&gt;
&lt;li&gt;high level repository management&lt;/li&gt;
&lt;li&gt;thread safety and reentrancy&lt;/li&gt;
&lt;li&gt;descriptive and detailed error messages&lt;/li&gt;
&lt;li&gt;...and more (over 175 different API calls)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As libgit2 is purely a consumer of the Git system, we have to
adjust to changes made upstream. This has two major consequences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some changes may require us to change provided interfaces. While we try to
implement functions in a generic way so that no future changes are required,
we cannot promise a completely stable API.&lt;/li&gt;
&lt;li&gt;As we have to keep up with changes in behavior made upstream, we may lag
behind in some areas. We usually to document these incompatibilities in our
issue tracker with the label "git change".&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-optional-dependencies" class="anchor" aria-hidden="true" href="#optional-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional dependencies&lt;/h1&gt;
&lt;p&gt;While the library provides git functionality without the need for
dependencies, it can make use of a few libraries to add to it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pthreads (non-Windows) to enable threadsafe access as well as multi-threaded pack generation&lt;/li&gt;
&lt;li&gt;OpenSSL (non-Windows) to talk over HTTPS and provide the SHA-1 functions&lt;/li&gt;
&lt;li&gt;LibSSH2 to enable the SSH transport&lt;/li&gt;
&lt;li&gt;iconv (OSX) to handle the HFS+ path encoding peculiarities&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-initialization" class="anchor" aria-hidden="true" href="#initialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Initialization&lt;/h1&gt;
&lt;p&gt;The library needs to keep track of some global state. Call&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git_libgit2_init();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;before calling any other libgit2 functions. You can call this function many times. A matching number of calls to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git_libgit2_shutdown();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will free the resources.  Note that if you have worker threads, you should
call &lt;code&gt;git_libgit2_shutdown&lt;/code&gt; &lt;em&gt;after&lt;/em&gt; those threads have exited.  If you
require assistance coordinating this, simply have the worker threads call
&lt;code&gt;git_libgit2_init&lt;/code&gt; at startup and &lt;code&gt;git_libgit2_shutdown&lt;/code&gt; at shutdown.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-threading" class="anchor" aria-hidden="true" href="#threading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Threading&lt;/h1&gt;
&lt;p&gt;See &lt;a href="docs/threading.md"&gt;threading&lt;/a&gt; for information&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-conventions" class="anchor" aria-hidden="true" href="#conventions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conventions&lt;/h1&gt;
&lt;p&gt;See &lt;a href="docs/conventions.md"&gt;conventions&lt;/a&gt; for an overview of the external
and internal API/coding conventions we use.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building-libgit2---using-cmake" class="anchor" aria-hidden="true" href="#building-libgit2---using-cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building libgit2 - Using CMake&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;libgit2&lt;/code&gt; builds cleanly on most platforms without any external dependencies.
Under Unix-like systems, like Linux, *BSD and Mac OS X, libgit2 expects &lt;code&gt;pthreads&lt;/code&gt; to be available;
they should be installed by default on all systems. Under Windows, libgit2 uses the native Windows API
for threading.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;libgit2&lt;/code&gt; library is built using &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt; (version 2.8 or newer) on all platforms.&lt;/p&gt;
&lt;p&gt;On most systems you can build the library using the following commands&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mkdir build &amp;amp;&amp;amp; cd build
$ cmake ..
$ cmake --build .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively you can point the CMake GUI tool to the CMakeLists.txt file and generate platform specific build project or IDE workspace.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Tests&lt;/h2&gt;
&lt;p&gt;Once built, you can run the tests from the &lt;code&gt;build&lt;/code&gt; directory with the command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ctest -V
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively you can run the test suite directly using,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./libgit2_clar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Invoking the test suite directly is useful because it allows you to execute
individual tests, or groups of tests using the &lt;code&gt;-s&lt;/code&gt; flag.  For example, to
run the index tests:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./libgit2_clar -sindex
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run a single test named &lt;code&gt;index::racy::diff&lt;/code&gt;, which corresponds to the test
function &lt;a href="https://github.com/libgit2/libgit2/blob/master/tests/index/racy.c#L23"&gt;&lt;code&gt;test_index_racy__diff&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./libgit2_clar -sindex::racy::diff
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The test suite will print a &lt;code&gt;.&lt;/code&gt; for every passing test, and an &lt;code&gt;F&lt;/code&gt; for any
failing test.  An &lt;code&gt;S&lt;/code&gt; indicates that a test was skipped because it is not
applicable to your platform or is particularly expensive.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There should be &lt;em&gt;no&lt;/em&gt; failing tests when you build an unmodified
source tree from a &lt;a href="https://github.com/libgit2/libgit2/releases"&gt;release&lt;/a&gt;,
or from the &lt;a href="https://github.com/libgit2/libgit2/tree/master"&gt;master branch&lt;/a&gt;.
Please contact us or &lt;a href="https://github.com/libgit2/libgit2/issues"&gt;open an issue&lt;/a&gt;
if you see test failures.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install the library you can specify the install prefix by setting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cmake .. -DCMAKE_INSTALL_PREFIX=/install/prefix
$ cmake --build . --target install
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-advanced-usage" class="anchor" aria-hidden="true" href="#advanced-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Usage&lt;/h2&gt;
&lt;p&gt;For more advanced use or questions about CMake please read &lt;a href="https://cmake.org/Wiki/CMake_FAQ" rel="nofollow"&gt;https://cmake.org/Wiki/CMake_FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following CMake variables are declared:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BIN_INSTALL_DIR&lt;/code&gt;: Where to install binaries to.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LIB_INSTALL_DIR&lt;/code&gt;: Where to install libraries to.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;INCLUDE_INSTALL_DIR&lt;/code&gt;: Where to install headers to.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt;: Build libgit2 as a Shared Library (defaults to ON)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BUILD_CLAR&lt;/code&gt;: Build &lt;a href="https://github.com/vmg/clar"&gt;Clar&lt;/a&gt;-based test suite (defaults to ON)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;THREADSAFE&lt;/code&gt;: Build libgit2 with threading support (defaults to ON)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To list all build options and their current value, you can do the
following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Create and set up a build directory
$ mkdir build
$ cmake ..
# List all build options and their values
$ cmake -L
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-compiler-and-linker-options" class="anchor" aria-hidden="true" href="#compiler-and-linker-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiler and linker options&lt;/h2&gt;
&lt;p&gt;CMake lets you specify a few variables to control the behavior of the
compiler and linker. These flags are rarely used but can be useful for
64-bit to 32-bit cross-compilation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMAKE_C_FLAGS&lt;/code&gt;: Set your own compiler flags&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;: Override the search path for libraries&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ZLIB_LIBRARY&lt;/code&gt;, &lt;code&gt;OPENSSL_SSL_LIBRARY&lt;/code&gt; AND &lt;code&gt;OPENSSL_CRYPTO_LIBRARY&lt;/code&gt;:
Tell CMake where to find those specific libraries&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-macos-x" class="anchor" aria-hidden="true" href="#macos-x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MacOS X&lt;/h2&gt;
&lt;p&gt;If you want to build a universal binary for Mac OS X, CMake sets it
all up for you if you use &lt;code&gt;-DCMAKE_OSX_ARCHITECTURES="i386;x86_64"&lt;/code&gt;
when configuring.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h2&gt;
&lt;p&gt;Extract toolchain from NDK using, &lt;code&gt;make-standalone-toolchain.sh&lt;/code&gt; script.
Optionally, crosscompile and install OpenSSL inside of it. Then create CMake
toolchain file that configures paths to your crosscompiler (substitute &lt;code&gt;{PATH}&lt;/code&gt;
with full path to the toolchain):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SET(CMAKE_SYSTEM_NAME Linux)
SET(CMAKE_SYSTEM_VERSION Android)

SET(CMAKE_C_COMPILER   {PATH}/bin/arm-linux-androideabi-gcc)
SET(CMAKE_CXX_COMPILER {PATH}/bin/arm-linux-androideabi-g++)
SET(CMAKE_FIND_ROOT_PATH {PATH}/sysroot/)

SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add &lt;code&gt;-DCMAKE_TOOLCHAIN_FILE={pathToToolchainFile}&lt;/code&gt; to cmake command
when configuring.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-language-bindings" class="anchor" aria-hidden="true" href="#language-bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language Bindings&lt;/h1&gt;
&lt;p&gt;Here are the bindings to libgit2 that are currently available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++
&lt;ul&gt;
&lt;li&gt;libqgit2, Qt bindings &lt;a href="https://projects.kde.org/projects/playground/libs/libqgit2/repository/" rel="nofollow"&gt;https://projects.kde.org/projects/playground/libs/libqgit2/repository/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chicken Scheme
&lt;ul&gt;
&lt;li&gt;chicken-git &lt;a href="https://wiki.call-cc.org/egg/git" rel="nofollow"&gt;https://wiki.call-cc.org/egg/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;D
&lt;ul&gt;
&lt;li&gt;dlibgit &lt;a href="https://github.com/s-ludwig/dlibgit"&gt;https://github.com/s-ludwig/dlibgit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Delphi
&lt;ul&gt;
&lt;li&gt;GitForDelphi &lt;a href="https://github.com/libgit2/GitForDelphi"&gt;https://github.com/libgit2/GitForDelphi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Erlang
&lt;ul&gt;
&lt;li&gt;Geef &lt;a href="https://github.com/carlosmn/geef"&gt;https://github.com/carlosmn/geef&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Go
&lt;ul&gt;
&lt;li&gt;git2go &lt;a href="https://github.com/libgit2/git2go"&gt;https://github.com/libgit2/git2go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GObject
&lt;ul&gt;
&lt;li&gt;libgit2-glib &lt;a href="https://wiki.gnome.org/Projects/Libgit2-glib" rel="nofollow"&gt;https://wiki.gnome.org/Projects/Libgit2-glib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Guile
&lt;ul&gt;
&lt;li&gt;Guile-Git &lt;a href="https://gitlab.com/guile-git/guile-git" rel="nofollow"&gt;https://gitlab.com/guile-git/guile-git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Haskell
&lt;ul&gt;
&lt;li&gt;hgit2 &lt;a href="https://github.com/jwiegley/gitlib"&gt;https://github.com/jwiegley/gitlib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Java
&lt;ul&gt;
&lt;li&gt;Jagged &lt;a href="https://github.com/ethomson/jagged"&gt;https://github.com/ethomson/jagged&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Julia
&lt;ul&gt;
&lt;li&gt;LibGit2.jl &lt;a href="https://github.com/jakebolewski/LibGit2.jl"&gt;https://github.com/jakebolewski/LibGit2.jl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lua
&lt;ul&gt;
&lt;li&gt;luagit2 &lt;a href="https://github.com/libgit2/luagit2"&gt;https://github.com/libgit2/luagit2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET
&lt;ul&gt;
&lt;li&gt;libgit2sharp &lt;a href="https://github.com/libgit2/libgit2sharp"&gt;https://github.com/libgit2/libgit2sharp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node.js
&lt;ul&gt;
&lt;li&gt;nodegit &lt;a href="https://github.com/nodegit/nodegit"&gt;https://github.com/nodegit/nodegit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Objective-C
&lt;ul&gt;
&lt;li&gt;objective-git &lt;a href="https://github.com/libgit2/objective-git"&gt;https://github.com/libgit2/objective-git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OCaml
&lt;ul&gt;
&lt;li&gt;ocaml-libgit2 &lt;a href="https://github.com/fxfactorial/ocaml-libgit2"&gt;https://github.com/fxfactorial/ocaml-libgit2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Parrot Virtual Machine
&lt;ul&gt;
&lt;li&gt;parrot-libgit2 &lt;a href="https://github.com/letolabs/parrot-libgit2"&gt;https://github.com/letolabs/parrot-libgit2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Perl
&lt;ul&gt;
&lt;li&gt;Git-Raw &lt;a href="https://github.com/jacquesg/p5-Git-Raw"&gt;https://github.com/jacquesg/p5-Git-Raw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PHP
&lt;ul&gt;
&lt;li&gt;php-git &lt;a href="https://github.com/libgit2/php-git"&gt;https://github.com/libgit2/php-git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PowerShell
&lt;ul&gt;
&lt;li&gt;PSGit &lt;a href="https://github.com/PoshCode/PSGit"&gt;https://github.com/PoshCode/PSGit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Python
&lt;ul&gt;
&lt;li&gt;pygit2 &lt;a href="https://github.com/libgit2/pygit2"&gt;https://github.com/libgit2/pygit2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;R
&lt;ul&gt;
&lt;li&gt;git2r &lt;a href="https://github.com/ropensci/git2r"&gt;https://github.com/ropensci/git2r&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ruby
&lt;ul&gt;
&lt;li&gt;Rugged &lt;a href="https://github.com/libgit2/rugged"&gt;https://github.com/libgit2/rugged&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Rust
&lt;ul&gt;
&lt;li&gt;git2-rs &lt;a href="https://github.com/rust-lang/git2-rs"&gt;https://github.com/rust-lang/git2-rs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Swift
&lt;ul&gt;
&lt;li&gt;SwiftGit2 &lt;a href="https://github.com/SwiftGit2/SwiftGit2"&gt;https://github.com/SwiftGit2/SwiftGit2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vala
&lt;ul&gt;
&lt;li&gt;libgit2.vapi &lt;a href="https://github.com/apmasell/vapis/blob/master/libgit2.vapi"&gt;https://github.com/apmasell/vapis/blob/master/libgit2.vapi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you start another language binding to libgit2, please let us know so
we can add it to the list.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-can-i-contribute" class="anchor" aria-hidden="true" href="#how-can-i-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How Can I Contribute?&lt;/h1&gt;
&lt;p&gt;We welcome new contributors!  We have a number of issues marked as
&lt;a href="https://github.com/libgit2/libgit2/issues?q=is%3Aissue+is%3Aopen+label%3A%22up+for+grabs%22"&gt;"up for grabs"&lt;/a&gt;
and
&lt;a href="https://github.com/libgit2/libgit2/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22easy+fix%22"&gt;"easy fix"&lt;/a&gt;
that are good places to jump in and get started.  There's much more detailed
information in our list of &lt;a href="docs/projects.md"&gt;outstanding projects&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please be sure to check the &lt;a href="docs/contributing.md"&gt;contribution guidelines&lt;/a&gt; to
understand our workflow, and the libgit2 &lt;a href="docs/conventions.md"&gt;coding conventions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;libgit2&lt;/code&gt; is under GPL2 &lt;strong&gt;with linking exception&lt;/strong&gt;. This means you can link to
and use the library from any program, proprietary or open source; paid or
gratis.  However, if you modify libgit2 itself, you must distribute the
source to your modified version of libgit2.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="COPYING"&gt;COPYING file&lt;/a&gt; for the full license text.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>libgit2</author><guid isPermaLink="false">https://github.com/libgit2/libgit2</guid><pubDate>Fri, 06 Dec 2019 00:05:00 GMT</pubDate></item><item><title>antirez/sds #6 in C, Today</title><link>https://github.com/antirez/sds</link><description>&lt;p&gt;&lt;i&gt;Simple Dynamic Strings library for C&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-simple-dynamic-strings" class="anchor" aria-hidden="true" href="#simple-dynamic-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Simple Dynamic Strings&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Notes about version 2&lt;/strong&gt;: this is an updated version of SDS in an attempt
to finally unify Redis, Disque, Hiredis, and the stand alone SDS versions.
This version is &lt;em&gt;&lt;em&gt;NOT&lt;/em&gt; binary compatible&lt;/em&gt;* with SDS verison 1, but the API
is 99% compatible so switching to the new lib should be trivial.&lt;/p&gt;
&lt;p&gt;Note that this version of SDS may be a slower with certain workloads, but
uses less memory compared to V1 since header size is dynamic and depends to
the string to alloc.&lt;/p&gt;
&lt;p&gt;Moreover it includes a few more API functions, notably &lt;code&gt;sdscatfmt&lt;/code&gt; which
is a faster version of &lt;code&gt;sdscatprintf&lt;/code&gt; that can be used for the simpler
cases in order to avoid the libc &lt;code&gt;printf&lt;/code&gt; family functions performance
penalty.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-sds-strings-work" class="anchor" aria-hidden="true" href="#how-sds-strings-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How SDS strings work&lt;/h1&gt;
&lt;p&gt;SDS is a string library for C designed to augment the limited libc string
handling functionalities by adding heap allocated strings that are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simpler to use.&lt;/li&gt;
&lt;li&gt;Binary safe.&lt;/li&gt;
&lt;li&gt;Computationally more efficient.&lt;/li&gt;
&lt;li&gt;But yet... Compatible with normal C string functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is achieved using an alternative design in which instead of using a C
structure to represent a string, we use a binary prefix that is stored
before the actual pointer to the string that is returned by SDS to the user.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+--------+-------------------------------+-----------+
| Header | Binary safe C alike string... | Null term |
+--------+-------------------------------+-----------+
         |
         `-&amp;gt; Pointer returned to the user.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Because of meta data stored before the actual returned pointer as a prefix,
and because of every SDS string implicitly adding a null term at the end of
the string regardless of the actual content of the string, SDS strings work
well together with C strings and the user is free to use them interchangeably
with other std C string functions that access the string in read-only.&lt;/p&gt;
&lt;p&gt;SDS was a C string I developed in the past for my everyday C programming needs,
later it was moved into Redis where it is used extensively and where it was
modified in order to be suitable for high performance operations. Now it was
extracted from Redis and forked as a stand alone project.&lt;/p&gt;
&lt;p&gt;Because of its many years life inside Redis, SDS provides both higher level
functions for easy strings manipulation in C, but also a set of low level
functions that make it possible to write high performance code without paying
a penalty for using an higher level string library.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-advantages-and-disadvantages-of-sds" class="anchor" aria-hidden="true" href="#advantages-and-disadvantages-of-sds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advantages and disadvantages of SDS&lt;/h1&gt;
&lt;p&gt;Normally dynamic string libraries for C are implemented using a structure
that defines the string. The structure has a pointer field that is managed
by the string function, so it looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; yourAverageStringLibrary {
    &lt;span class="pl-k"&gt;char&lt;/span&gt; *buf;
    &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; len;
    ... possibly more fields here ...
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SDS strings as already mentioned don't follow this schema, and are instead
a single allocation with a prefix that lives &lt;em&gt;before&lt;/em&gt; the address actually
returned for the string.&lt;/p&gt;
&lt;p&gt;There are advantages and disadvantages with this approach over the traditional
approach:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Disadvantage #1&lt;/strong&gt;: many functions return the new string as value, since sometimes SDS requires to create a new string with more space, so the most SDS API calls look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;s = sdscat(s,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Some more data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see &lt;code&gt;s&lt;/code&gt; is used as input for &lt;code&gt;sdscat&lt;/code&gt; but is also set to the value
returned by the SDS API call, since we are not sure if the call modified the
SDS string we passed or allocated a new one. Not remembering to assign back
the return value of &lt;code&gt;sdscat&lt;/code&gt; or similar functions to the variable holding
the SDS string will result in a bug.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Disadvantage #2&lt;/strong&gt;: if an SDS string is shared in different places in your program you have to modify all the references when you modify the string. However most of the times when you need to share SDS strings it is much better to encapsulate them into structures with a &lt;code&gt;reference count&lt;/code&gt; otherwise it is too easy to incur into memory leaks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Advantage #1&lt;/strong&gt;: you can pass SDS strings to functions designed for C functions without accessing a struct member or calling a function, like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, sds_string);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In most other libraries this will be something like:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, string-&amp;gt;buf);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, getStringPointer(string));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Advantage #2&lt;/strong&gt;: accessing individual chars is straightforward. C is a low level language so this is an important operation in many programs. With SDS strings accessing individual chars is very natural:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%c&lt;/span&gt; &lt;span class="pl-c1"&gt;%c&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, s[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], s[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With other libraries your best chance is to assign &lt;code&gt;string-&amp;gt;buf&lt;/code&gt; (or call the function to get the string pointer) to a &lt;code&gt;char&lt;/code&gt; pointer and work with this. However since the other libraries may reallocate the buffer implicitly every time you call a function that may modify the string you have to get a reference to the buffer again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Advantage #3&lt;/strong&gt;: single allocation has better cache locality. Usually when you access a string created by a string library using a structure, you have two different allocations for the structure representing the string, and the actual buffer holding the string. Over the time the buffer is reallocated, and it is likely that it ends in a totally different part of memory compared to the structure itself. Since modern programs performances are often dominated by cache misses, SDS may perform better in many workloads.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sds-basics" class="anchor" aria-hidden="true" href="#sds-basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDS basics&lt;/h1&gt;
&lt;p&gt;The type of SDS strings is just the char pointer &lt;code&gt;char *&lt;/code&gt;. However SDS defines
an &lt;code&gt;sds&lt;/code&gt; type as alias of &lt;code&gt;char *&lt;/code&gt; in its header file: you should use the
&lt;code&gt;sds&lt;/code&gt; type in order to make sure you remember that a given variable in your
program holds an SDS string and not a C string, however this is not mandatory.&lt;/p&gt;
&lt;p&gt;This is the simplest SDS program you can write that does something:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds mystring = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, mystring);
&lt;span class="pl-en"&gt;sdsfree&lt;/span&gt;(mystring);

output&amp;gt; Hello World!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above small program already shows a few important things about SDS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SDS strings are created, and heap allocated, via the &lt;code&gt;sdsnew()&lt;/code&gt; function, or other similar functions that we'll see in a moment.&lt;/li&gt;
&lt;li&gt;SDS strings can be passed to &lt;code&gt;printf()&lt;/code&gt; like any other C string.&lt;/li&gt;
&lt;li&gt;SDS strings require to be freed with &lt;code&gt;sdsfree()&lt;/code&gt;, since they are heap allocated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-creating-sds-strings" class="anchor" aria-hidden="true" href="#creating-sds-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating SDS strings&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds &lt;span class="pl-en"&gt;sdsnewlen&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; *init, &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; initlen);
sds &lt;span class="pl-en"&gt;sdsnew&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *init);
sds &lt;span class="pl-en"&gt;sdsempty&lt;/span&gt;(&lt;span class="pl-k"&gt;void&lt;/span&gt;);
sds &lt;span class="pl-en"&gt;sdsdup&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; sds s);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are many ways to create SDS strings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;sdsnew&lt;/code&gt; function creates an SDS string starting from a C null terminated string. We already saw how it works in the above example.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;sdsnewlen&lt;/code&gt; function is similar to &lt;code&gt;sdsnew&lt;/code&gt; but instead of creating the string assuming that the input string is null terminated, it gets an additional length parameter. This way you can create a string using binary data:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;char&lt;/span&gt; buf[&lt;span class="pl-c1"&gt;3&lt;/span&gt;];
sds mystring;

buf[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
buf[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;B&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
buf[&lt;span class="pl-c1"&gt;2&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
mystring = sdsnewlen(buf,&lt;span class="pl-c1"&gt;3&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt; of len &lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, mystring, (&lt;span class="pl-k"&gt;int&lt;/span&gt;) sdslen(mystring));

output&amp;gt; ABC of len &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: &lt;code&gt;sdslen&lt;/code&gt; return value is casted to &lt;code&gt;int&lt;/code&gt; because it returns a &lt;code&gt;size_t&lt;/code&gt;
type. You can use the right &lt;code&gt;printf&lt;/code&gt; specifier instead of casting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;sdsempty()&lt;/code&gt; function creates an empty zero-length string:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds mystring = sdsempty();
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, (&lt;span class="pl-k"&gt;int&lt;/span&gt;) sdslen(mystring));

output&amp;gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;sdsdup()&lt;/code&gt; function duplicates an already existing SDS string:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s1, s2;

s1 = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
s2 = sdsdup(s1);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt; &lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, s1, s2);

output&amp;gt; Hello Hello&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-obtaining-the-string-length" class="anchor" aria-hidden="true" href="#obtaining-the-string-length"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obtaining the string length&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; &lt;span class="pl-en"&gt;sdslen&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; sds s);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the examples above we already used the &lt;code&gt;sdslen&lt;/code&gt; function in order to get
the length of the string. This function works like &lt;code&gt;strlen&lt;/code&gt; of the libc
except that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It runs in constant time since the length is stored in the prefix of SDS strings, so calling &lt;code&gt;sdslen&lt;/code&gt; is not expensive even when called with very large strings.&lt;/li&gt;
&lt;li&gt;The function is binary safe like any other SDS string function, so the length is the true length of the string regardless of the content, there is no problem if the string includes null term characters in the middle.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As an example of the binary safeness of SDS strings, we can run the following
code:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s = sdsnewlen(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-cce"&gt;\0\0&lt;/span&gt;B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, (&lt;span class="pl-k"&gt;int&lt;/span&gt;) sdslen(s));

output&amp;gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that SDS strings are always null terminated at the end, so even in that
case &lt;code&gt;s[4]&lt;/code&gt; will be a null term, however printing the string with &lt;code&gt;printf&lt;/code&gt;
would result in just &lt;code&gt;"A"&lt;/code&gt; to be printed since libc will treat the SDS string
like a normal C string.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-destroying-strings" class="anchor" aria-hidden="true" href="#destroying-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Destroying strings&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;sdsfree&lt;/span&gt;(sds s);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The destroy an SDS string there is just to call &lt;code&gt;sdsfree&lt;/code&gt; with the string
pointer. Note that even empty strings created with &lt;code&gt;sdsempty&lt;/code&gt; need to be
destroyed as well otherwise they'll result into a memory leak.&lt;/p&gt;
&lt;p&gt;The function &lt;code&gt;sdsfree&lt;/code&gt; does not perform any operation if instead of an SDS
string pointer, &lt;code&gt;NULL&lt;/code&gt; is passed, so you don't need to check for &lt;code&gt;NULL&lt;/code&gt; explicitly before calling it:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (string) sdsfree(string); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Not needed. &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-en"&gt;sdsfree&lt;/span&gt;(string); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Same effect but simpler. &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-concatenating-strings" class="anchor" aria-hidden="true" href="#concatenating-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concatenating strings&lt;/h2&gt;
&lt;p&gt;Concatenating strings to other strings is likely the operation you will end
using the most with a dynamic C string library. SDS provides different
functions to concatenate strings to existing strings.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds &lt;span class="pl-en"&gt;sdscatlen&lt;/span&gt;(sds s, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; *t, &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; len);
sds &lt;span class="pl-en"&gt;sdscat&lt;/span&gt;(sds s, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *t);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The main string concatenation functions are &lt;code&gt;sdscatlen&lt;/code&gt; and &lt;code&gt;sdscat&lt;/code&gt; that are
identical, the only difference being that &lt;code&gt;sdscat&lt;/code&gt; does not have an explicit
length argument since it expects a null terminated string.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s = sdsempty();
s = sdscat(s, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
s = sdscat(s, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, s);

output&amp;gt; Hello World!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sometimes you want to cat an SDS string to another SDS string, so you don't
need to specify the length, but at the same time the string does not need to
be null terminated but can contain any binary data. For this there is a
special function:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds &lt;span class="pl-en"&gt;sdscatsds&lt;/span&gt;(sds s, &lt;span class="pl-k"&gt;const&lt;/span&gt; sds t);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Usage is straightforward:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s1 = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;aaa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
sds s2 = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bbb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
s1 = sdscatsds(s1,s2);
&lt;span class="pl-en"&gt;sdsfree&lt;/span&gt;(s2);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, s1);

output&amp;gt; aaabbb&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sometimes you don't want to append any special data to the string, but you want
to make sure that there are at least a given number of bytes composing the
whole string.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds &lt;span class="pl-en"&gt;sdsgrowzero&lt;/span&gt;(sds s, &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; len);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;sdsgrowzero&lt;/code&gt; function will do nothing if the current string length is
already &lt;code&gt;len&lt;/code&gt; bytes, otherwise it will enlarge the string to &lt;code&gt;len&lt;/code&gt; just padding
it with zero bytes.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
s = sdsgrowzero(s,&lt;span class="pl-c1"&gt;6&lt;/span&gt;);
s[&lt;span class="pl-c1"&gt;5&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; We are sure this is safe because of sdsgrowzero() &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;', s);&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;output&amp;gt; Hello!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-formatting-strings" class="anchor" aria-hidden="true" href="#formatting-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Formatting strings&lt;/h2&gt;
&lt;p&gt;There is a special string concatenation function that accepts a &lt;code&gt;printf&lt;/code&gt; alike
format specifier and cats the formatted string to the specified string.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds &lt;span class="pl-en"&gt;sdscatprintf&lt;/span&gt;(sds s, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *fmt, ...) {&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s;
&lt;span class="pl-k"&gt;int&lt;/span&gt; a = &lt;span class="pl-c1"&gt;10&lt;/span&gt;, b = &lt;span class="pl-c1"&gt;20&lt;/span&gt;;
s = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The sum is: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
s = sdscatprintf(s,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;+&lt;span class="pl-c1"&gt;%d&lt;/span&gt; = &lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,a,b,a+b);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Often you need to create SDS string directly from &lt;code&gt;printf&lt;/code&gt; format specifiers.
Because &lt;code&gt;sdscatprintf&lt;/code&gt; is actually a function that concatenates strings, all
you need is to concatenate your string to an empty string:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;char&lt;/span&gt; *name = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Anna&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;int&lt;/span&gt; loc = &lt;span class="pl-c1"&gt;2500&lt;/span&gt;;
sds s;
s = sdscatprintf(sdsempty(), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt; wrote &lt;span class="pl-c1"&gt;%d&lt;/span&gt; lines of LISP&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, name, loc);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use &lt;code&gt;sdscatprintf&lt;/code&gt; in order to convert numbers into SDS strings:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; some_integer = &lt;span class="pl-c1"&gt;100&lt;/span&gt;;
sds num = sdscatprintf(sdsempty(),&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, some_integer);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However this is slow and we have a special function to make it efficient.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fast-number-to-string-operations" class="anchor" aria-hidden="true" href="#fast-number-to-string-operations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fast number to string operations&lt;/h2&gt;
&lt;p&gt;Creating an SDS string from an integer may be a common operation in certain
kind of programs, and while you may do this with &lt;code&gt;sdscatprintf&lt;/code&gt; the performance
hit is big, so SDS provides a specialized function.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds &lt;span class="pl-en"&gt;sdsfromlonglong&lt;/span&gt;(&lt;span class="pl-k"&gt;long&lt;/span&gt; &lt;span class="pl-k"&gt;long&lt;/span&gt; value);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use it like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s = sdsfromlonglong(&lt;span class="pl-c1"&gt;10000&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, (&lt;span class="pl-k"&gt;int&lt;/span&gt;) sdslen(s));

output&amp;gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-trimming-strings-and-getting-ranges" class="anchor" aria-hidden="true" href="#trimming-strings-and-getting-ranges"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Trimming strings and getting ranges&lt;/h2&gt;
&lt;p&gt;String trimming is a common operation where a set of characters are
removed from the left and the right of the string. Another useful operation
regarding strings is the ability to just take a range out of a larger
string.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;sdstrim&lt;/span&gt;(sds s, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *cset);
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;sdsrange&lt;/span&gt;(sds s, &lt;span class="pl-k"&gt;int&lt;/span&gt; start, &lt;span class="pl-k"&gt;int&lt;/span&gt; end);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SDS provides both the operations with the &lt;code&gt;sdstrim&lt;/code&gt; and &lt;code&gt;sdsrange&lt;/code&gt; functions.
However note that both functions work differently than most functions modifying
SDS strings since the return value is void: basically those functions always
destructively modify the passed SDS string, never allocating a new one, because
both trimming and ranges will never need more room: the operations can only
remove characters from the original string.&lt;/p&gt;
&lt;p&gt;Because of this behavior, both functions are fast and don't involve reallocation.&lt;/p&gt;
&lt;p&gt;This is an example of string trimming where newlines and spaces are removed
from an SDS strings:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;         my string&lt;span class="pl-cce"&gt;\n\n&lt;/span&gt;  &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;sdstrim&lt;/span&gt;(s,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-&lt;span class="pl-c1"&gt;%s&lt;/span&gt;-&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,s);

output&amp;gt; -my string-&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basically &lt;code&gt;sdstrim&lt;/code&gt; takes the SDS string to trim as first argument, and a
null terminated set of characters to remove from left and right of the string.
The characters are removed as long as they are not interrupted by a character
that is not in the list of characters to trim: this is why the space between
&lt;code&gt;"my"&lt;/code&gt; and &lt;code&gt;"string"&lt;/code&gt; was preserved in the above example.&lt;/p&gt;
&lt;p&gt;Taking ranges is similar, but instead to take a set of characters, it takes
to indexes, representing the start and the end as specified by zero-based
indexes inside the string, to obtain the range that will be retained.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;sdsrange&lt;/span&gt;(s,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-&lt;span class="pl-c1"&gt;%s&lt;/span&gt;-&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

output&amp;gt; -ello-&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Indexes can be negative to specify a position starting from the end of the
string, so that &lt;code&gt;-1&lt;/code&gt; means the last character, &lt;code&gt;-2&lt;/code&gt; the penultimate, and so forth:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;sdsrange&lt;/span&gt;(s,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,-&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-&lt;span class="pl-c1"&gt;%s&lt;/span&gt;-&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;sdsrange&lt;/span&gt;(s,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,-&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-&lt;span class="pl-c1"&gt;%s&lt;/span&gt;-&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

output&amp;gt; -World!-
output&amp;gt; -World-&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sdsrange&lt;/code&gt; is very useful when implementing networking servers processing
a protocol or sending messages. For example the following code is used
implementing the write handler of the Redis Cluster message bus between
nodes:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;clusterWriteHandler&lt;/span&gt;(..., &lt;span class="pl-k"&gt;int&lt;/span&gt; fd, &lt;span class="pl-k"&gt;void&lt;/span&gt; *privdata, ...) {
    clusterLink *&lt;span class="pl-c1"&gt;link&lt;/span&gt; = (clusterLink*) privdata;
    &lt;span class="pl-c1"&gt;ssize_t&lt;/span&gt; nwritten = &lt;span class="pl-c1"&gt;write&lt;/span&gt;(fd, &lt;span class="pl-c1"&gt;link&lt;/span&gt;-&amp;gt;&lt;span class="pl-smi"&gt;sndbuf&lt;/span&gt;, &lt;span class="pl-c1"&gt;sdslen&lt;/span&gt;(&lt;span class="pl-c1"&gt;link&lt;/span&gt;-&amp;gt;&lt;span class="pl-smi"&gt;sndbuf&lt;/span&gt;));
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (nwritten &amp;lt;= &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Error handling... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    }
    &lt;span class="pl-c1"&gt;sdsrange&lt;/span&gt;(&lt;span class="pl-c1"&gt;link&lt;/span&gt;-&amp;gt;&lt;span class="pl-smi"&gt;sndbuf&lt;/span&gt;,nwritten,-&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    ... more code here ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Every time the socket of the node we want to send the message to is writable
we attempt to write as much bytes as possible, and we use &lt;code&gt;sdsrange&lt;/code&gt; in order
to remove from the buffer what was already sent.&lt;/p&gt;
&lt;p&gt;The function to queue new messages to send to some node in the cluster will
simply use &lt;code&gt;sdscatlen&lt;/code&gt; in order to put more data in the send buffer.&lt;/p&gt;
&lt;p&gt;Note that the Redis Cluster bus implements a binary protocol, but since SDS
is binary safe this is not a problem, so the goal of SDS is not just to provide
an high level string API for the C programmer but also dynamically allocated
buffers that are easy to manage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-string-copying" class="anchor" aria-hidden="true" href="#string-copying"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String copying&lt;/h2&gt;
&lt;p&gt;The most dangerous and infamus function of the standard C library is probably
&lt;code&gt;strcpy&lt;/code&gt;, so perhaps it is funny how in the context of better designed dynamic
string libraries the concept of copying strings is almost irrelevant. Usually
what you do is to create strings with the content you want, or concatenating
more content as needed.&lt;/p&gt;
&lt;p&gt;However SDS features a string copy function that is useful in performance
critical code sections, however I guess its practical usefulness is limited
as the function never managed to get called in the context of the 50k
lines of code composing the Redis code base.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds &lt;span class="pl-en"&gt;sdscpylen&lt;/span&gt;(sds s, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *t, &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; len);
sds &lt;span class="pl-en"&gt;sdscpy&lt;/span&gt;(sds s, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *t);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The string copy function of SDS is called &lt;code&gt;sdscpylen&lt;/code&gt; and works like that:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;s = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
s = sdscpylen(s,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello Superman!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;15&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see the function receives as input the SDS string &lt;code&gt;s&lt;/code&gt;, but also
returns an SDS string. This is common to many SDS functions that modify the
string: this way the returned SDS string may be the original one modified
or a newly allocated one (for example if there was not enough room in the
old SDS string).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;sdscpylen&lt;/code&gt; will simply replace what was in the old SDS string with the
new data you pass using the pointer and length argument. There is a similar
function called &lt;code&gt;sdscpy&lt;/code&gt; that does not need a length but expects a null
terminated string instead.&lt;/p&gt;
&lt;p&gt;You may wonder why it makes sense to have a string copy function in the
SDS library, since you can simply create a new SDS string from scratch
with the new value instead of copying the value in an existing SDS string.
The reason is efficiency: &lt;code&gt;sdsnewlen&lt;/code&gt; will always allocate a new string
while &lt;code&gt;sdscpylen&lt;/code&gt; will try to reuse the existing string if there is enough
room to old the new content specified by the user, and will allocate a new
one only if needed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quoting-strings" class="anchor" aria-hidden="true" href="#quoting-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quoting strings&lt;/h2&gt;
&lt;p&gt;In order to provide consistent output to the program user, or for debugging
purposes, it is often important to turn a string that may contain binary
data or special characters into a quoted string. Here for quoted string
we mean the common format for String literals in programming source code.
However today this format is also part of the well known serialization formats
like JSON and CSV, so it definitely escaped the simple goal of representing
literals strings in the source code of programs.&lt;/p&gt;
&lt;p&gt;An example of quoted string literal is the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\x00&lt;/span&gt;Hello World&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first byte is a zero byte while the last byte is a newline, so there are
two non alphanumerical characters inside the string.&lt;/p&gt;
&lt;p&gt;SDS uses a concatenation function for this goal, that concatenates to an
existing string the quoted string representation of the input string.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds &lt;span class="pl-en"&gt;sdscatrepr&lt;/span&gt;(sds s, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *p, &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; len);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;scscatrepr&lt;/code&gt; (where &lt;code&gt;repr&lt;/code&gt; means &lt;em&gt;representation&lt;/em&gt;) follows the usualy
SDS string function rules accepting a char pointer and a length, so you can
use it with SDS strings, normal C strings by using strlen() as &lt;code&gt;len&lt;/code&gt; argument,
or binary data. The following is an example usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s1 = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abcd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
sds s2 = sdsempty();
s[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] = &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
s[&lt;span class="pl-c1"&gt;2&lt;/span&gt;] = &lt;span class="pl-c1"&gt;2&lt;/span&gt;;
s[&lt;span class="pl-c1"&gt;3&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
s2 = sdscatrepr(s2,s1,sdslen(s1));
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, s2);

output&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-cce"&gt;\x01\x02\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is the rules &lt;code&gt;sdscatrepr&lt;/code&gt; uses for conversion:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\&lt;/code&gt; and &lt;code&gt;"&lt;/code&gt; are quoted with a backslash.&lt;/li&gt;
&lt;li&gt;It quotes special characters &lt;code&gt;'\n'&lt;/code&gt;, &lt;code&gt;'\r'&lt;/code&gt;, &lt;code&gt;'\t'&lt;/code&gt;, &lt;code&gt;'\a'&lt;/code&gt; and &lt;code&gt;'\b'&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;All the other non printable characters not passing the &lt;code&gt;isprint&lt;/code&gt; test are quoted in &lt;code&gt;\x..&lt;/code&gt; form, that is: backslash followed by &lt;code&gt;x&lt;/code&gt; followed by two digit hex number representing the character byte value.&lt;/li&gt;
&lt;li&gt;The function always adds initial and final double quotes characters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is an SDS function that is able to perform the reverse conversion and is
documented in the &lt;em&gt;Tokenization&lt;/em&gt; section below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tokenization" class="anchor" aria-hidden="true" href="#tokenization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tokenization&lt;/h2&gt;
&lt;p&gt;Tokenization is the process of splitting a larger string into smaller strings.
In this specific case, the split is performed specifying another string that
acts as separator. For example in the following string there are two substrings
that are separated by the &lt;code&gt;|-|&lt;/code&gt; separator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;foo|-|bar|-|zap
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A more common separator that consists of a single character is the comma:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;foo,bar,zap
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In many progrems it is useful to process a line in order to obtain the sub
strings it is composed of, so SDS provides a function that returns an
array of SDS strings given a string and a separator.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds *&lt;span class="pl-en"&gt;sdssplitlen&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *s, &lt;span class="pl-k"&gt;int&lt;/span&gt; len, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *sep, &lt;span class="pl-k"&gt;int&lt;/span&gt; seplen, &lt;span class="pl-k"&gt;int&lt;/span&gt; *count);
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;sdsfreesplitres&lt;/span&gt;(sds *tokens, &lt;span class="pl-k"&gt;int&lt;/span&gt; count);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As usually the function can work with both SDS strings or normal C strings.
The first two arguments &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; specify the string to tokenize, and the
other two arguments &lt;code&gt;sep&lt;/code&gt; and &lt;code&gt;seplen&lt;/code&gt; the separator to use during the
tokenization. The final argument &lt;code&gt;count&lt;/code&gt; is a pointer to an integer that will
be set to the number of tokens (sub strings) returned.&lt;/p&gt;
&lt;p&gt;The return value is a heap allocated array of SDS strings.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds *tokens;
&lt;span class="pl-k"&gt;int&lt;/span&gt; count, j;

sds line = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
tokens = sdssplitlen(line,sdslen(line),&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&amp;amp;count);

&lt;span class="pl-k"&gt;for&lt;/span&gt; (j = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; j &amp;lt; count; j++)
    &lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, tokens[j]);
&lt;span class="pl-en"&gt;sdsfreesplitres&lt;/span&gt;(tokens,count);

output&amp;gt; Hello
output&amp;gt; World!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The returned array is heap allocated, and the single elements of the array
are normal SDS strings. You can free everything calling &lt;code&gt;sdsfreesplitres&lt;/code&gt;
as in the example. Alternativey you are free to release the array yourself
using the &lt;code&gt;free&lt;/code&gt; function and use and/or free the individual SDS strings
as usually.&lt;/p&gt;
&lt;p&gt;A valid approach is to set the array elements you reused in some way to
&lt;code&gt;NULL&lt;/code&gt;, and use &lt;code&gt;sdsfreesplitres&lt;/code&gt; to free all the rest.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-command-line-oriented-tokenization" class="anchor" aria-hidden="true" href="#command-line-oriented-tokenization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line oriented tokenization&lt;/h2&gt;
&lt;p&gt;Splitting by a separator is a useful operation, but usually it is not enough
to perform one of the most common tasks involving some non trivial string
manipulation, that is, implementing a &lt;strong&gt;Command Line Interface&lt;/strong&gt; for a program.&lt;/p&gt;
&lt;p&gt;This is why SDS also provides an additional function that allows you to split
arguments provided by the user via the keyboard in an interactive manner, or
via a file, network, or any other mean, into tokens.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds *&lt;span class="pl-en"&gt;sdssplitargs&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *line, &lt;span class="pl-k"&gt;int&lt;/span&gt; *argc);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;sdssplitargs&lt;/code&gt; function returns an array of SDS strings exactly like
&lt;code&gt;sdssplitlen&lt;/code&gt;. The function to free the result is also identical, and is
&lt;code&gt;sdsfreesplitres&lt;/code&gt;. The difference is in the way the tokenization is performed.&lt;/p&gt;
&lt;p&gt;For example if the input is the following line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;call "Sabrina"    and "Mark Smith\n"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The function will return the following tokens:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"call"&lt;/li&gt;
&lt;li&gt;"Sabrina"&lt;/li&gt;
&lt;li&gt;"and"&lt;/li&gt;
&lt;li&gt;"Mark Smith\n"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Basically different tokens need to be separated by one or more spaces, and
every single token can also be a quoted string in the same format that
&lt;code&gt;sdscatrepr&lt;/code&gt; is able to emit.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-string-joining" class="anchor" aria-hidden="true" href="#string-joining"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String joining&lt;/h2&gt;
&lt;p&gt;There are two functions doing the reverse of tokenization by joining strings
into a single one.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds &lt;span class="pl-en"&gt;sdsjoin&lt;/span&gt;(&lt;span class="pl-k"&gt;char&lt;/span&gt; **argv, &lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt; *sep, &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; seplen);
sds &lt;span class="pl-en"&gt;sdsjoinsds&lt;/span&gt;(sds *argv, &lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *sep, &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; seplen);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The two functions take as input an array of strings of length &lt;code&gt;argc&lt;/code&gt; and
a separator and its length, and produce as output an SDS string consisting
of all the specified strings separated by the specified separator.&lt;/p&gt;
&lt;p&gt;The difference between &lt;code&gt;sdsjoin&lt;/code&gt; and &lt;code&gt;sdsjoinsds&lt;/code&gt; is that the former accept
C null terminated strings as input while the latter requires all the strings
in the array to be SDS strings. However because of this only &lt;code&gt;sdsjoinsds&lt;/code&gt; is
able to deal with binary data.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;char&lt;/span&gt; *tokens[&lt;span class="pl-c1"&gt;3&lt;/span&gt;] = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
sds s = sdsjoin(tokens,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;|&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, s);

output&amp;gt; foo|bar|zap&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error handling&lt;/h2&gt;
&lt;p&gt;All the SDS functions that return an SDS pointer may also return &lt;code&gt;NULL&lt;/code&gt; on
out of memory, this is basically the only check you need to perform.&lt;/p&gt;
&lt;p&gt;However many modern C programs handle out of memory simply aborting the program
so you may want to do this as well by wrapping &lt;code&gt;malloc&lt;/code&gt; and other related
memory allocation calls directly.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sds-internals-and-advanced-usage" class="anchor" aria-hidden="true" href="#sds-internals-and-advanced-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDS internals and advanced usage&lt;/h1&gt;
&lt;p&gt;At the very beginning of this documentation it was explained how SDS strings
are allocated, however the prefix stored before the pointer returned to the
user was classified as an &lt;em&gt;header&lt;/em&gt; without further details. For an advanced
usage it is better to dig more into the internals of SDS and show the
structure implementing it:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; sdshdr {
    &lt;span class="pl-k"&gt;int&lt;/span&gt; len;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-c1"&gt;free&lt;/span&gt;;
    &lt;span class="pl-k"&gt;char&lt;/span&gt; buf[];
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, the structure may resemble the one of a conventional string
library, however the &lt;code&gt;buf&lt;/code&gt; field of the structure is different since it is
not a pointer but an array without any length declared, so &lt;code&gt;buf&lt;/code&gt; actually
points at the first byte just after the &lt;code&gt;free&lt;/code&gt; integer. So in order to create
an SDS string we just allocate a piece of memory that is as large as the
&lt;code&gt;sdshdr&lt;/code&gt; structure plus the length of our string, plus an additional byte
for the mandatory null term that every SDS string has.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;len&lt;/code&gt; field of the structure is quite obvious, and is the current length
of the SDS string, always computed every time the string is modified via
SDS function calls. The &lt;code&gt;free&lt;/code&gt; field instead represents the amount of free
memory in the current allocation that can be used to store more characters.&lt;/p&gt;
&lt;p&gt;So the actual SDS layout is this one:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+------------+------------------------+-----------+---------------\
| Len | Free | H E L L O W O R L D \n | Null term |  Free space   \
+------------+------------------------+-----------+---------------\
             |
             `-&amp;gt; Pointer returned to the user.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may wonder why there is some free space at the end of the string, it
looks like a waste. Actually after a new SDS string is created, there is no
free space at the end at all: the allocation will be as small as possible to
just hold the header, string, and null term. However other access patterns
will create extra free space at the end, like in the following program:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;s = sdsempty();
s = sdscat(s,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
s = sdscat(s,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
s = sdscat(s,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since SDS tries to be efficient it can't afford to reallocate the string every
time new data is appended, since this would be very inefficient, so it uses
the &lt;strong&gt;preallocation of some free space&lt;/strong&gt; every time you enlarge the string.&lt;/p&gt;
&lt;p&gt;The preallocation algorithm used is the following: every time the string
is reallocated in order to hold more bytes, the actual allocation size performed
is two times the minimum required. So for instance if the string currently
is holding 30 bytes, and we concatenate 2 more bytes, instead of allocating 32
bytes in total SDS will allocate 64 bytes.&lt;/p&gt;
&lt;p&gt;However there is an hard limit to the allocation it can perform ahead, and is
defined by &lt;code&gt;SDS_MAX_PREALLOC&lt;/code&gt;. SDS will never allocate more than 1MB of
additional space (by default, you can change this default).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-shrinking-strings" class="anchor" aria-hidden="true" href="#shrinking-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shrinking strings&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds &lt;span class="pl-en"&gt;sdsRemoveFreeSpace&lt;/span&gt;(sds s);
&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; &lt;span class="pl-en"&gt;sdsAllocSize&lt;/span&gt;(sds s);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sometimes there are class of programs that require to use very little memory.
After strings concatenations, trimming, ranges, the string may end having
a non trivial amount of additional space at the end.&lt;/p&gt;
&lt;p&gt;It is possible to resize a string back to its minimal size in order to hold
the current content by using the function &lt;code&gt;sdsRemoveFreeSpace&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;s = sdsRemoveFreeSpace(s);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is also a function that can be used in order to get the size of the
total allocation for a given string, and is called &lt;code&gt;sdsAllocSize&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ladies and gentlemen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
s = sdscat(s,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;... welcome to the C language.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, (&lt;span class="pl-k"&gt;int&lt;/span&gt;) sdsAllocSize(s));
s = sdsRemoveFreeSpace(s);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, (&lt;span class="pl-k"&gt;int&lt;/span&gt;) sdsAllocSize(s));

output&amp;gt; &lt;span class="pl-c1"&gt;109&lt;/span&gt;
output&amp;gt; &lt;span class="pl-c1"&gt;59&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: SDS Low level API use cammelCase in order to warn you that you are playing with the fire.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-manual-modifications-of-sds-strings" class="anchor" aria-hidden="true" href="#manual-modifications-of-sds-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual modifications of SDS strings&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;void sdsupdatelen(sds s);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sometimes you may want to hack with an SDS string manually, without using
SDS functions. In the following example we implicitly change the length
of the string, however we want the logical length to reflect the null terminated
C string.&lt;/p&gt;
&lt;p&gt;The function &lt;code&gt;sdsupdatelen&lt;/code&gt; does just that, updating the internal length
information for the specified string to the length obtained via &lt;code&gt;strlen&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;sds s = sdsnew(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foobar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
s[&lt;span class="pl-c1"&gt;2&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\0&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, sdslen(s));
&lt;span class="pl-en"&gt;sdsupdatelen&lt;/span&gt;(s);
&lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, sdslen(s));

output&amp;gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;
output&amp;gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-sharing-sds-strings" class="anchor" aria-hidden="true" href="#sharing-sds-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sharing SDS strings&lt;/h2&gt;
&lt;p&gt;If you are writing a program in which it is advantageous to share the same
SDS string across different data structures, it is absolutely advised to
encapsulate SDS strings into structures that remember the number of references
of the string, with functions to increment and decrement the number of references.&lt;/p&gt;
&lt;p&gt;This approach is a memory management technique called &lt;em&gt;reference counting&lt;/em&gt; and
in the context of SDS has two advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is less likely that you'll create memory leaks or bugs due to non freeing SDS strings or freeing already freed strings.&lt;/li&gt;
&lt;li&gt;You'll not need to update every reference to an SDS string when you modify it (since the new SDS string may point to a different memory location).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While this is definitely a very common programming technique I'll outline
the basic ideas here. You create a structure like that:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; mySharedString {
    &lt;span class="pl-k"&gt;int&lt;/span&gt; refcount;
    sds string;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When new strings are created, the structure is allocated and returned with
&lt;code&gt;refcount&lt;/code&gt; set to 1. The you have two functions to change the reference count
of the shared string:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;incrementStringRefCount&lt;/code&gt; will simply increment &lt;code&gt;refcount&lt;/code&gt; of 1 in the structure. It will be called every time you add a reference to the string on some new data structure, variable, or whatever.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;decrementStringRefCount&lt;/code&gt; is used when you remove a reference. This function is however special since when the &lt;code&gt;refcount&lt;/code&gt; drops to zero, it automatically frees the SDS string, and the &lt;code&gt;mySharedString&lt;/code&gt; structure as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-interactions-with-heap-checkers" class="anchor" aria-hidden="true" href="#interactions-with-heap-checkers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactions with heap checkers&lt;/h2&gt;
&lt;p&gt;Because SDS returns pointers into the middle of memory chunks allocated with
&lt;code&gt;malloc&lt;/code&gt;, heap checkers may have issues, however:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The popular Valgrind program will detect SDS strings are &lt;em&gt;possibly lost&lt;/em&gt; memory and never as &lt;em&gt;definitely lost&lt;/em&gt;, so it is easy to tell if there is a leak or not. I used Valgrind with Redis for years and every real leak was consistently detected as "definitely lost".&lt;/li&gt;
&lt;li&gt;OSX instrumentation tools don't detect SDS strings as leaks but are able to correctly handle pointers pointing to the middle of memory chunks.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-zero-copy-append-from-syscalls" class="anchor" aria-hidden="true" href="#zero-copy-append-from-syscalls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zero copy append from syscalls&lt;/h2&gt;
&lt;p&gt;At this point you should have all the tools to dig more inside the SDS
library by reading the source code, however there is an interesting pattern
you can mount using the low level API exported, that is used inside Redis
in order to improve performances of the networking code.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;sdsIncrLen()&lt;/code&gt; and &lt;code&gt;sdsMakeRoomFor()&lt;/code&gt; it is possible to mount the
following schema, to cat bytes coming from the kernel to the end of an
sds string without copying into an intermediate buffer:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;oldlen = sdslen(s);
s = sdsMakeRoomFor(s, BUFFER_SIZE);
nread = read(fd, s+oldlen, BUFFER_SIZE);
... check &lt;span class="pl-k"&gt;for&lt;/span&gt; nread &amp;lt;= &lt;span class="pl-c1"&gt;0&lt;/span&gt; and handle it ...
&lt;span class="pl-en"&gt;sdsIncrLen&lt;/span&gt;(s, nread);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sdsIncrLen&lt;/code&gt; is documented inside the source code of &lt;code&gt;sds.c&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-embedding-sds-into-your-project" class="anchor" aria-hidden="true" href="#embedding-sds-into-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedding SDS into your project&lt;/h1&gt;
&lt;p&gt;This is as simple as copying the following files inside your
project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sds.c&lt;/li&gt;
&lt;li&gt;sds.h&lt;/li&gt;
&lt;li&gt;sdsalloc.h&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The source code is small and every C99 compiler should deal with
it without issues.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-using-a-different-allocator-for-sds" class="anchor" aria-hidden="true" href="#using-a-different-allocator-for-sds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using a different allocator for SDS&lt;/h1&gt;
&lt;p&gt;Internally sds.c uses the allocator defined into &lt;code&gt;sdsalloc.h&lt;/code&gt;. This header
file just defines macros for malloc, realloc and free, and by default libc
&lt;code&gt;malloc()&lt;/code&gt;, &lt;code&gt;realloc()&lt;/code&gt; and &lt;code&gt;free()&lt;/code&gt; are used. Just edit this file in order
to change the name of the allocation functions.&lt;/p&gt;
&lt;p&gt;The program using SDS can call the SDS allocator in order to manipulate
SDS pointers (usually not needed but sometimes the program may want to
do advanced things) by using the API exported by SDS in order to call the
allocator used. This is especially useful when the program linked to SDS
is using a different allocator compared to what SDS is using.&lt;/p&gt;
&lt;p&gt;The API to access the allocator used by SDS is composed of three functions: &lt;code&gt;sds_malloc()&lt;/code&gt;, &lt;code&gt;sds_realloc()&lt;/code&gt; and &lt;code&gt;sds_free()&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-credits-and-license" class="anchor" aria-hidden="true" href="#credits-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits and license&lt;/h1&gt;
&lt;p&gt;SDS was created by Salvatore Sanfilippo and is released under the BDS two clause license. See the LICENSE file in this source distribution for more information.&lt;/p&gt;
&lt;p&gt;Oran Agra improved SDS version 2 by adding dynamic sized headers in order to
save memory for small strings and allow strings greater than 4GB.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>antirez</author><guid isPermaLink="false">https://github.com/antirez/sds</guid><pubDate>Fri, 06 Dec 2019 00:06:00 GMT</pubDate></item><item><title>gluster/glusterfs #7 in C, Today</title><link>https://github.com/gluster/glusterfs</link><description>&lt;p&gt;&lt;i&gt;Gluster Filesystem - (this is only a public mirror, see the README for contributing)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-gluster" class="anchor" aria-hidden="true" href="#gluster"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gluster&lt;/h1&gt;
&lt;p&gt;Gluster is a software defined distributed storage that can scale to several
petabytes. It provides interfaces for object, block and file storage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;Contributions to gluster in the form of patches and new feature additions can
be made by following steps outlined at &lt;a href="http://docs.gluster.org/en/latest/Developer-guide/Developers-Index/#contributing-to-the-gluster-community" rel="nofollow"&gt;Developers Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The Gluster documentation can be found at &lt;a href="http://docs.gluster.org" rel="nofollow"&gt;Gluster Docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-deployment" class="anchor" aria-hidden="true" href="#deployment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment&lt;/h2&gt;
&lt;p&gt;Quick instructions to build and install can be found in &lt;a href="INSTALL"&gt;INSTALL&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;GlusterFS source contains some functional tests under &lt;code&gt;tests/&lt;/code&gt; directory. All
these tests are run against every patch submitted for review. If you want your
patch to be tested, please add a &lt;code&gt;.t&lt;/code&gt; test file as part of your patch submission.
You can also submit a patch to only add a &lt;code&gt;.t&lt;/code&gt; file for the test case you are
aware of.&lt;/p&gt;
&lt;p&gt;To run these tests, on your test-machine, just run &lt;code&gt;./run-tests.sh&lt;/code&gt;. Don't run
this on a machine where you have 'production' glusterfs is running, as it would
blindly kill all gluster processes in each runs.&lt;/p&gt;
&lt;p&gt;If you are sending a patch, and want to validate one or few specific tests, then
run a single test by running the below command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  bash# /bin/bash ${path_to_gluster}/tests/basic/rpc-coverage.t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also use &lt;code&gt;prove&lt;/code&gt; tool if available in your machine, as follows.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  bash# prove -vmfe '/bin/bash' ${path_to_gluster}/tests/basic/rpc-coverage.t
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-maintainers" class="anchor" aria-hidden="true" href="#maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainers&lt;/h2&gt;
&lt;p&gt;The list of Gluster maintainers is available in &lt;a href="MAINTAINERS"&gt;MAINTAINERS&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Gluster is dual licensed under &lt;a href="COPYING-GPLV2"&gt;GPLV2&lt;/a&gt; and &lt;a href="COPYING-LGPLV3"&gt;LGPLV3+&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please visit the &lt;a href="http://www.gluster.org/" rel="nofollow"&gt;Gluster Home Page&lt;/a&gt; to find out more about Gluster.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gluster</author><guid isPermaLink="false">https://github.com/gluster/glusterfs</guid><pubDate>Fri, 06 Dec 2019 00:07:00 GMT</pubDate></item><item><title>spdk/spdk #8 in C, Today</title><link>https://github.com/spdk/spdk</link><description>&lt;p&gt;&lt;i&gt;Storage Performance Development Kit&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-storage-performance-development-kit" class="anchor" aria-hidden="true" href="#storage-performance-development-kit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Storage Performance Development Kit&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/spdk/spdk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/87325252fd8822bb3dfb3cd5569c71d874aec775/68747470733a2f2f7472617669732d63692e6f72672f7370646b2f7370646b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/spdk/spdk.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Storage Performance Development Kit (&lt;a href="http://www.spdk.io" rel="nofollow"&gt;SPDK&lt;/a&gt;) provides a set of tools
and libraries for writing high performance, scalable, user-mode storage
applications. It achieves high performance by moving all of the necessary
drivers into userspace and operating in a polled mode instead of relying on
interrupts, which avoids kernel context switches and eliminates interrupt
handling overhead.&lt;/p&gt;
&lt;p&gt;The development kit currently includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.spdk.io/doc/nvme.html" rel="nofollow"&gt;NVMe driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.spdk.io/doc/ioat.html" rel="nofollow"&gt;I/OAT (DMA engine) driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.spdk.io/doc/nvmf.html" rel="nofollow"&gt;NVMe over Fabrics target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.spdk.io/doc/iscsi.html" rel="nofollow"&gt;iSCSI target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.spdk.io/doc/vhost.html" rel="nofollow"&gt;vhost target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.spdk.io/doc/virtio.html" rel="nofollow"&gt;Virtio-SCSI driver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-in-this-readme" class="anchor" aria-hidden="true" href="#in-this-readme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In this readme:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#source"&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#libraries"&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tests"&gt;Unit Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vagrant"&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced"&gt;Advanced Build Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shared"&gt;Shared libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#huge"&gt;Hugepages and Device Binding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples"&gt;Example Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="user-content-documentation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.spdk.io/doc/" rel="nofollow"&gt;Doxygen API documentation&lt;/a&gt; is available, as
well as a &lt;a href="http://www.spdk.io/doc/porting.html" rel="nofollow"&gt;Porting Guide&lt;/a&gt; for porting SPDK to different frameworks
and operating systems.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-source"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-source-code" class="anchor" aria-hidden="true" href="#source-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Code&lt;/h2&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;git clone https://github.com/spdk/spdk
cd spdk
git submodule update --init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-prerequisites"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;The dependencies can be installed automatically by &lt;code&gt;scripts/pkgdep.sh&lt;/code&gt;.&lt;/p&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;./scripts/pkgdep.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-libraries"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h2&gt;
&lt;p&gt;Linux:&lt;/p&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;./configure
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;FreeBSD:
Note: Make sure you have the matching kernel source in /usr/src/ and
also note that CONFIG_COVERAGE option is not available right now
for FreeBSD builds.&lt;/p&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;./configure
gmake
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-tests"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-unit-tests" class="anchor" aria-hidden="true" href="#unit-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unit Tests&lt;/h2&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;./test/unit/unittest.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will see several error messages when running the unit tests, but they are
part of the test suite. The final message at the end of the script indicates
success or failure.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-vagrant"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-vagrant" class="anchor" aria-hidden="true" href="#vagrant"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vagrant&lt;/h2&gt;
&lt;p&gt;A &lt;a href="https://www.vagrantup.com/downloads.html" rel="nofollow"&gt;Vagrant&lt;/a&gt; setup is also provided
to create a Linux VM with a virtual NVMe controller to get up and running
quickly.  Currently this has only been tested on MacOS and Ubuntu 16.04.2 LTS
with the &lt;a href="https://www.virtualbox.org/wiki/Downloads" rel="nofollow"&gt;VirtualBox&lt;/a&gt; provider.  The
&lt;a href="https://www.virtualbox.org/wiki/Downloads" rel="nofollow"&gt;VirtualBox Extension Pack&lt;/a&gt; must
also be installed in order to get the required NVMe support.&lt;/p&gt;
&lt;p&gt;Details on the Vagrant setup can be found in the
&lt;a href="http://spdk.io/doc/vagrant.html" rel="nofollow"&gt;SPDK Vagrant documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-advanced-build-options" class="anchor" aria-hidden="true" href="#advanced-build-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Build Options&lt;/h2&gt;
&lt;p&gt;Optional components and other build-time configuration are controlled by
settings in the Makefile configuration file in the root of the repository. &lt;code&gt;CONFIG&lt;/code&gt;
contains the base settings for the &lt;code&gt;configure&lt;/code&gt; script. This script generates a new
file, &lt;code&gt;mk/config.mk&lt;/code&gt;, that contains final build settings. For advanced configuration,
there are a number of additional options to &lt;code&gt;configure&lt;/code&gt; that may be used, or
&lt;code&gt;mk/config.mk&lt;/code&gt; can simply be created and edited by hand. A description of all
possible options is located in &lt;code&gt;CONFIG&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Boolean (on/off) options are configured with a 'y' (yes) or 'n' (no). For
example, this line of &lt;code&gt;CONFIG&lt;/code&gt; controls whether the optional RDMA (libibverbs)
support is enabled:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CONFIG_RDMA?=n
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To enable RDMA, this line may be added to &lt;code&gt;mk/config.mk&lt;/code&gt; with a 'y' instead of
'n'. For the majority of options this can be done using the &lt;code&gt;configure&lt;/code&gt; script.
For example:&lt;/p&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;./configure --with-rdma
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Additionally, &lt;code&gt;CONFIG&lt;/code&gt; options may also be overridden on the &lt;code&gt;make&lt;/code&gt; command
line:&lt;/p&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;make CONFIG_RDMA=y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Users may wish to use a version of DPDK different from the submodule included
in the SPDK repository.  Note, this includes the ability to build not only
from DPDK sources, but also just with the includes and libraries
installed via the dpdk and dpdk-devel packages.  To specify an alternate DPDK
installation, run configure with the --with-dpdk option.  For example:&lt;/p&gt;
&lt;p&gt;Linux:&lt;/p&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;./configure --with-dpdk=/path/to/dpdk/x86_64-native-linuxapp-gcc
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;FreeBSD:&lt;/p&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;./configure --with-dpdk=/path/to/dpdk/x86_64-native-bsdapp-clang
gmake
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The options specified on the &lt;code&gt;make&lt;/code&gt; command line take precedence over the
values in &lt;code&gt;mk/config.mk&lt;/code&gt;. This can be useful if you, for example, generate
a &lt;code&gt;mk/config.mk&lt;/code&gt; using the &lt;code&gt;configure&lt;/code&gt; script and then have one or two
options (i.e. debug builds) that you wish to turn on and off frequently.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-shared"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-shared-libraries" class="anchor" aria-hidden="true" href="#shared-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shared libraries&lt;/h2&gt;
&lt;p&gt;By default, the build of the SPDK yields static libraries against which
the SPDK applications and examples are linked.
Configure option &lt;code&gt;--with-shared&lt;/code&gt; provides the ability to produce SPDK shared
libraries, in addition to the default static ones.  Use of this flag also
results in the SPDK executables linked to the shared versions of libraries.
SPDK shared libraries by default, are located in &lt;code&gt;./build/lib&lt;/code&gt;.  This includes
the single SPDK shared lib encompassing all of the SPDK static libs
(&lt;code&gt;libspdk.so&lt;/code&gt;) as well as individual SPDK shared libs corresponding to each
of the SPDK static ones.&lt;/p&gt;
&lt;p&gt;In order to start a SPDK app linked with SPDK shared libraries, make sure
to do the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;run ldconfig specifying the directory containing SPDK shared libraries&lt;/li&gt;
&lt;li&gt;provide proper &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linux:&lt;/p&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;./configure --with-shared
make
ldconfig -v -n ./build/lib
LD_LIBRARY_PATH=./build/lib/ ./app/spdk_tgt/spdk_tgt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-huge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hugepages-and-device-binding" class="anchor" aria-hidden="true" href="#hugepages-and-device-binding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hugepages and Device Binding&lt;/h2&gt;
&lt;p&gt;Before running an SPDK application, some hugepages must be allocated and
any NVMe and I/OAT devices must be unbound from the native kernel drivers.
SPDK includes a script to automate this process on both Linux and FreeBSD.
This script should be run as root.&lt;/p&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;sudo scripts/setup.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Users may wish to configure a specific memory size. Below is an example of
configuring 8192MB memory.&lt;/p&gt;
&lt;pre lang="{.sh}"&gt;&lt;code&gt;sudo HUGEMEM=8192 scripts/setup.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-examples"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-code" class="anchor" aria-hidden="true" href="#example-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Code&lt;/h2&gt;
&lt;p&gt;Example code is located in the examples directory. The examples are compiled
automatically as part of the build process. Simply call any of the examples
with no arguments to see the help output. You'll likely need to run the examples
as a privileged user (root) unless you've done additional configuration
to grant your user permission to allocate huge pages and map devices through
vfio.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-contributing"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;For additional details on how to get more involved in the community, including
&lt;a href="http://www.spdk.io/development" rel="nofollow"&gt;contributing code&lt;/a&gt; and participating in discussions and other activities, please
refer to &lt;a href="http://www.spdk.io/community" rel="nofollow"&gt;spdk.io&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>spdk</author><guid isPermaLink="false">https://github.com/spdk/spdk</guid><pubDate>Fri, 06 Dec 2019 00:08:00 GMT</pubDate></item><item><title>coreutils/coreutils #9 in C, Today</title><link>https://github.com/coreutils/coreutils</link><description>&lt;p&gt;&lt;i&gt;upstream mirror&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;These are the GNU core utilities.  This package is the union of
the GNU fileutils, sh-utils, and textutils packages.

Most of these programs have significant advantages over their Unix
counterparts, such as greater speed, additional options, and fewer
arbitrary limits.

The programs that can be built with this package are:

  [ arch b2sum base32 base64 basename basenc cat chcon chgrp chmod chown
  chroot cksum comm coreutils cp csplit cut date dd df dir dircolors dirname
  du echo env expand expr factor false fmt fold groups head hostid hostname
  id install join kill link ln logname ls md5sum mkdir mkfifo mknod mktemp
  mv nice nl nohup nproc numfmt od paste pathchk pinky pr printenv printf ptx
  pwd readlink realpath rm rmdir runcon seq sha1sum sha224sum sha256sum
  sha384sum sha512sum shred shuf sleep sort split stat stdbuf stty sum sync
  tac tail tee test timeout touch tr true truncate tsort tty uname unexpand
  uniq unlink uptime users vdir wc who whoami yes

See the file NEWS for a list of major changes in the current release.

If you obtained this file as part of a "git clone", then see the
README-hacking file.  If this file came to you as part of a tar archive,
then see the file INSTALL for compilation and installation instructions.

Like the rest of the GNU system, these programs mostly conform to
POSIX, with BSD and other extensions.  For closer conformance, or
conformance to a particular POSIX version, set the POSIXLY_CORRECT
and the _POSIX2_VERSION environment variables, as described in
the documentation under "Standards conformance".

The ls, dir, and vdir commands are all separate executables instead of
one program that checks argv[0] because people often rename these
programs to things like gls, gnuls, l, etc.  Renaming a program
file shouldn't affect how it operates, so that people can get the
behavior they want with whatever name they want.

Special thanks to Paul Eggert, Brian Matthews, Bruce Evans, Karl Berry,
Kaveh Ghazi, and François Pinard for help with debugging and porting
these programs.  Many thanks to all of the people who have taken the
time to submit problem reports and fixes.  All contributed changes are
attributed in the commit logs.

And thanks to the following people who have provided accounts for
portability testing on many different types of systems: Bob Proulx,
Christian Robert, François Pinard, Greg McGary, Harlan Stenn,
Joel N. Weber, Mark D. Roth, Matt Schalit, Nelson H. F. Beebe,
Réjean Payette, Sam Tardieu.

Thanks to Michael Stone for inflicting test releases of this package
on Debian's unstable distribution, and to all the kind folks who used
that distribution and found and reported bugs.

Note that each man page is now automatically generated from a template
and from the corresponding --help usage message.  Patches to the template
files (man/*.x) are welcome.  However, the authoritative documentation
is in texinfo form in the doc directory.


*********************
Pre-C99 build failure
---------------------

In 2009 we added this requirement:
To build the coreutils from source, you must have a C99-conforming
compiler, due to the use of declarations after non-declaration statements
in several files in src/.  There is code in configure to find and, if
possible, enable an appropriate compiler.  However, if configure doesn't
find a C99 compiler, it continues nonetheless, and your build will fail.
There used to be a "c99-to-c89.diff" patch you could apply to convert
to code that even an old pre-c99 compiler can handle, but it was too
tedious to maintain, so has been removed.


***********************
HPUX 11.x build failure
-----------------------

A known problem exists when compiling on HPUX on both hppa and ia64
in 64-bit mode (i.e., +DD64) on HP-UX 11.0, 11.11, and 11.23.  This
is not due to a bug in the package but instead due to a bug in the
system header file which breaks things in 64-bit mode.  The default
compilation mode is 32-bit and the software compiles fine using the
default mode.  To build this software in 64-bit mode you will need
to fix the system /usr/include/inttypes.h header file.  After
correcting that file the software also compiles fine in 64-bit mode.
Here is one possible patch to correct the problem:

--- /usr/include/inttypes.h.orig	Thu May 30 01:00:00 1996
+++ /usr/include/inttypes.h	Sun Mar 23 00:20:36 2003
@@ -489 +489 @@
-#ifndef __STDC_32_MODE__
+#ifndef __LP64__


************************
OSF/1 4.0d and AIX build failures
------------------------

If you use /usr/bin/make on these systems, the build will fail due
to the presence of the "[" target.  OSF/1 make(1) appears to
treat "[" as some syntax relating to locks, while AIX make(1)
appears to skip the "[" target.  To work around these issues
the best solution is to use GNU make.  Otherwise, simply remove
all mention of "[$(EXEEXT)" from src/Makefile.


************************
32 bit time_t build failures
------------------------

On systems where it's determined that 64 bit time_t is supported
(indicated by touch -t &amp;lt;some time after 2038&amp;gt;), but that coreutils
would be built with a narrower time_t, the build will fail.
This can be allowed by passing TIME_T_32_BIT_OK=yes to configure,
or avoided by enabling 64 bit builds.  For example GCC on AIX defaults
to 32 bit, and to enable the 64 bit ABI one can use:
./configure CFLAGS=-maix64 LDFLAGs=-maix64 AR='ar -X64'


*************************************************
"make check" failure on IRIX 6.5 and Solaris &amp;lt;= 9
-------------------------------------------------

Using the vendor make program to run "make check" fails on these two systems.
If you want to run all of the tests there, use GNU make.



**********************
Running tests as root:
----------------------

If you run the tests as root, note that a few of them create files
and/or run programs as a non-root user, 'nobody' by default.
If you want to use some other non-root username, specify it via
the NON_ROOT_USERNAME environment variable.  Depending on the
permissions with which the working directories have been created,
using 'nobody' may fail, because that user won't have the required
read and write access to the build and test directories.
I find that it is best to unpack and build as a non-privileged
user, and then to run the following command as that user in order
to run the privilege-requiring tests:

  sudo env PATH="$PATH" NON_ROOT_USERNAME=$USER make -k check-root

If you can run the tests as root, please do so and report any
problems.  We get much less test coverage in that mode, and it's
arguably more important that these tools work well when run by
root than when run by less privileged users.


***************
Reporting bugs:
---------------

Send bug reports, questions, comments, etc. to bug-coreutils@gnu.org.
To suggest a patch, see the files README-hacking and HACKING for tips.

If you have a problem with 'sort', try running 'sort --debug', as it
can can often help find and fix problems without having to wait for an
answer to a bug report.  If the debug output does not suffice to fix
the problem on your own, please compress and attach it to the rest of
your bug report.

IMPORTANT: if you take the time to report a test failure,
please be sure to include the output of running 'make check'
in verbose mode for each failing test.  For example,
if the test that fails is tests/df/df-P.sh, then you would
run this command:

  make check TESTS=tests/df/df-P.sh VERBOSE=yes SUBDIRS=. &amp;gt;&amp;gt; log 2&amp;gt;&amp;amp;1

For some tests, you can get even more detail by adding DEBUG=yes.
Then include the contents of the file 'log' in your bug report.


***************************************

There are many tests, but nowhere near as many as we need.
Additions and corrections are very welcome.

If you see a problem that you've already reported, feel free to re-report
it -- it won't bother me to get a reminder.  Besides, the more messages I
get regarding a particular problem the sooner it'll be fixed -- usually.
If you sent a complete patch and, after a couple weeks you haven't
received any acknowledgement, please ping us.  A complete patch includes
a well-written ChangeLog entry, unified (diff -u format) diffs relative
to the most recent test release (or, better, relative to the latest
sources in the public repository), an explanation for why the patch is
necessary or useful, and if at all possible, enough information to
reproduce whatever problem prompted it.  Plus, you'll earn lots of
karma if you include a test case to exercise any bug(s) you fix.
Here are instructions for checking out the latest development sources:

  &lt;a href="https://savannah.gnu.org/git/?group=coreutils" rel="nofollow"&gt;https://savannah.gnu.org/git/?group=coreutils&lt;/a&gt;

If your patch adds a new feature, please try to get some sort of consensus
that it is a worthwhile change.  One way to do that is to send mail to
coreutils@gnu.org including as much description and justification
as you can.  Based on the feedback that generates, you may be able to
convince us that it's worth adding.  Please also consult the list of
previously discussed but ultimately rejected feature requests at:
&lt;a href="https://www.gnu.org/software/coreutils/rejected_requests.html" rel="nofollow"&gt;https://www.gnu.org/software/coreutils/rejected_requests.html&lt;/a&gt;


WARNING:  Now that we use the ./bootstrap script, you should not run
autoreconf manually.  Doing that will overwrite essential source files
with older versions, which may make the package unbuildable or introduce
subtle bugs.


WARNING:  If you modify files like configure.in, m4/*.m4, aclocal.m4,
or any Makefile.am, then don't be surprised if what gets regenerated no
longer works.  To make things work, you'll have to be using appropriate
versions of the tools listed in bootstrap.conf's buildreq string.

All of these programs except 'test' recognize the '--version' option.
When reporting bugs, please include in the subject line both the package
name/version and the name of the program for which you found a problem.

For general documentation on the coding and usage standards
this distribution follows, see the GNU Coding Standards at:
&lt;a href="https://www.gnu.org/prep/standards/" rel="nofollow"&gt;https://www.gnu.org/prep/standards/&lt;/a&gt;

For any copyright year range specified as YYYY-ZZZZ in this package
note that the range specifies every single year in that closed interval.

Mail suggestions and bug reports for these programs to
the address on the last line of --help output.


========================================================================

Copyright (C) 1998-2019 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the "GNU Free
Documentation License" file as part of this distribution.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>coreutils</author><guid isPermaLink="false">https://github.com/coreutils/coreutils</guid><pubDate>Fri, 06 Dec 2019 00:09:00 GMT</pubDate></item><item><title>meetecho/janus-gateway #10 in C, Today</title><link>https://github.com/meetecho/janus-gateway</link><description>&lt;p&gt;&lt;i&gt;Janus WebRTC Server&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-janus-webrtc-server" class="anchor" aria-hidden="true" href="#janus-webrtc-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Janus WebRTC Server&lt;/h1&gt;
&lt;p&gt;Janus is an open source, general purpose, WebRTC server designed and developed by &lt;a href="http://www.meetecho.com" rel="nofollow"&gt;Meetecho&lt;/a&gt;. This version of the server is tailored for Linux systems, although it can be compiled for, and installed on, MacOS machines as well. Windows is not supported, but if that's a requirement, Janus is known to work in the "Windows Subsystem for Linux" on Windows 10.&lt;/p&gt;
&lt;p&gt;For some online demos and documentations, make sure you pay the &lt;a href="https://janus.conf.meetecho.com/" rel="nofollow"&gt;project website&lt;/a&gt; a visit!&lt;/p&gt;
&lt;p&gt;To discuss Janus with us and other users, there's a Google Group called &lt;a href="https://groups.google.com/forum/#!forum/meetecho-janus" rel="nofollow"&gt;meetecho-janus&lt;/a&gt; that you can use. If you encounter bugs, though, please submit an issue on &lt;a href="https://github.com/meetecho/janus-gateway/issues"&gt;github&lt;/a&gt; instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;To install it, you'll need to satisfy the following dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.digip.org/jansson/" rel="nofollow"&gt;Jansson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hyperrealm.github.io/libconfig/" rel="nofollow"&gt;libconfig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nice.freedesktop.org/wiki/" rel="nofollow"&gt;libnice&lt;/a&gt; (at least v0.1.15 suggested, master recommended)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.openssl.org/" rel="nofollow"&gt;OpenSSL&lt;/a&gt; (at least v1.0.1e)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cisco/libsrtp"&gt;libsrtp&lt;/a&gt; (at least v1.5 suggested)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sctplab/usrsctp"&gt;usrsctp&lt;/a&gt; (only needed if you are interested in Data Channels)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gnu.org/software/libmicrohttpd/" rel="nofollow"&gt;libmicrohttpd&lt;/a&gt; (only needed if you are interested in REST support for the Janus API)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://libwebsockets.org/" rel="nofollow"&gt;libwebsockets&lt;/a&gt; (only needed if you are interested in WebSockets support for the Janus API)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cmake.org/" rel="nofollow"&gt;cmake&lt;/a&gt; (only needed if you are interested in WebSockets and/or BoringSSL support, as they make use of it)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alanxz/rabbitmq-c"&gt;rabbitmq-c&lt;/a&gt; (only needed if you are interested in RabbitMQ support for the Janus API or events)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eclipse.org/paho/clients/c" rel="nofollow"&gt;paho.mqtt.c&lt;/a&gt; (only needed if you are interested in MQTT support for the Janus API or events)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nanomsg.org/" rel="nofollow"&gt;nanomsg&lt;/a&gt; (only needed if you are interested in Nanomsg support for the Janus API)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://curl.haxx.se/libcurl/" rel="nofollow"&gt;libcurl&lt;/a&gt; (only needed if you are interested in the TURN REST API support)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A couple of plugins depend on a few more libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sofia-sip.sourceforge.net/" rel="nofollow"&gt;Sofia-SIP&lt;/a&gt; (only needed for the SIP plugin)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://opus-codec.org/" rel="nofollow"&gt;libopus&lt;/a&gt; (only needed for the bridge plugin)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://xiph.org/ogg/" rel="nofollow"&gt;libogg&lt;/a&gt; (needed for the voicemail plugin and/or post-processor)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://curl.haxx.se/libcurl/" rel="nofollow"&gt;libcurl&lt;/a&gt; (only needed if you are interested in RTSP support in the Streaming plugin or in the sample Event Handler plugin)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lua.org/download.html" rel="nofollow"&gt;Lua&lt;/a&gt; (only needed for the Lua plugin)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, you'll need the following libraries and tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://library.gnome.org/devel/glib/" rel="nofollow"&gt;GLib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zlib.net/" rel="nofollow"&gt;zlib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.freedesktop.org/wiki/Software/pkg-config/" rel="nofollow"&gt;pkg-config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gnu.org/software/gengetopt/" rel="nofollow"&gt;gengetopt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of those libraries are usually available on most of the most common distributions. Installing these libraries on a recent Fedora, for instance, is very simple:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install libmicrohttpd-devel jansson-devel \
   openssl-devel libsrtp-devel sofia-sip-devel glib2-devel \
   opus-devel libogg-devel libcurl-devel pkgconfig gengetopt \
   libconfig-devel libtool autoconf automake
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that you may have to &lt;code&gt;yum install epel-release&lt;/code&gt; as well if you're attempting an installation on a CentOS machine instead.&lt;/p&gt;
&lt;p&gt;On Ubuntu or Debian, it would require something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude install libmicrohttpd-dev libjansson-dev \
	libssl-dev libsrtp-dev libsofia-sip-ua-dev libglib2.0-dev \
	libopus-dev libogg-dev libcurl4-openssl-dev liblua5.3-dev \
	libconfig-dev pkg-config gengetopt libtool automake
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; please notice that libopus may not be available out of the box on Ubuntu or Debian, unless you're using a recent version (e.g., Ubuntu 14.04 LTS). In that case, you'll have to &lt;a href="http://www.opus-codec.org" rel="nofollow"&gt;install it manually&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While &lt;code&gt;libnice&lt;/code&gt; is typically available in most distros as a package, the version available out of the box in Ubuntu is known to cause problems. As such, we always recommend manually compiling and installing the master version of libnice. Installation of libnice master is quite straightforward:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://gitlab.freedesktop.org/libnice/libnice
cd libnice
./autogen.sh
./configure --prefix=/usr
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; Make sure you remove the distro version first, or you'll cause conflicts between the installations. In case you want to keep both for some reason, for custom installations of libnice you can also run &lt;code&gt;pkg-config --cflags --libs nice&lt;/code&gt; to make sure Janus can find the right installation. If that fails, you may need to set the &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; environment variable prior to compiling Janus, e.g., &lt;code&gt;export PKG_CONFIG_PATH=/path/to/libnice/lib/pkgconfig&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you're interested in compiling the sample Event Handler plugin, you'll need to install the development version of libcurl as well (usually &lt;code&gt;libcurl-devel&lt;/code&gt; on Fedora/CentOS, &lt;code&gt;libcurl4-openssl-dev&lt;/code&gt; on Ubuntu/Debian).&lt;/p&gt;
&lt;p&gt;If your distro ships a pre-1.5 version of libsrtp, you'll have to uninstall that version and &lt;a href="https://github.com/cisco/libsrtp/releases"&gt;install 1.5.x, 1.6.x or 2.x manually&lt;/a&gt;. In fact, 1.4.x is known to cause several issues with WebRTC. Installation of version 1.5.4 is quite straightforward:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/cisco/libsrtp/archive/v1.5.4.tar.gz
tar xfv v1.5.4.tar.gz
cd libsrtp-1.5.4
./configure --prefix=/usr --enable-openssl
make shared_library &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The instructions for version 2.x are practically the same. Notice that the following steps are for version 2.2.0, but there may be more recent versions available:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/cisco/libsrtp/archive/v2.2.0.tar.gz
tar xfv v2.2.0.tar.gz
cd libsrtp-2.2.0
./configure --prefix=/usr --enable-openssl
make shared_library &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Janus configure script autodetects which one you have installed and links to the correct library automatically, choosing 2.x if both are installed. If you want 1.5 or 1.6 to be picked, pass &lt;code&gt;--disable-libsrtp2&lt;/code&gt; when configuring Janus to force it to use the older version instead.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; when installing libsrtp, no matter which version, you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you're installing on a x86_64 distribution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to make use of BoringSSL instead of OpenSSL (e.g., because you want to take advantage of &lt;code&gt;--enable-dtls-settimeout&lt;/code&gt;), you'll have to manually install it to a specific location. Use the following steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://boringssl.googlesource.com/boringssl
cd boringssl
# Don't barf on errors
sed -i s/" -Werror"//g CMakeLists.txt
# Build
mkdir -p build
cd build
cmake -DCMAKE_CXX_FLAGS="-lrt" ..
make
cd ..
# Install
sudo mkdir -p /opt/boringssl
sudo cp -R include /opt/boringssl/
sudo mkdir -p /opt/boringssl/lib
sudo cp build/ssl/libssl.a /opt/boringssl/lib/
sudo cp build/crypto/libcrypto.a /opt/boringssl/lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the library is installed, you'll have to pass an additional &lt;code&gt;--enable-boringssl&lt;/code&gt; flag to the configure script, as by default Janus will be built assuming OpenSSL will be used. By default, Janus expects BoringSSL to be installed in &lt;code&gt;/opt/boringssl&lt;/code&gt; -- if it's installed in another location, pass the path to the configure script as such: &lt;code&gt;--enable-boringssl=/path/to/boringssl&lt;/code&gt; If you were using OpenSSL and want to switch to BoringSSL, make sure you also do a &lt;code&gt;make clean&lt;/code&gt; in the Janus folder before compiling with the new BoringSSL support. If you enabled BoringSSL support and also want Janus to detect and react to DTLS timeouts with faster retransmissions, then pass &lt;code&gt;--enable-dtls-settimeout&lt;/code&gt; to the configure script too.&lt;/p&gt;
&lt;p&gt;For what concerns usrsctp, which is needed for Data Channels support, it is usually not available in repositories, so if you're interested in them (support is optional) you'll have to install it manually. It is a pretty easy and standard process:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/sctplab/usrsctp
cd usrsctp
./bootstrap
./configure --prefix=/usr &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you're installing on a x86_64 distribution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The same applies for libwebsockets, which is needed for the optional WebSockets support. If you're interested in supporting WebSockets to control Janus, as an alternative (or replacement) to the default plain HTTP REST API, you'll have to install it manually:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://libwebsockets.org/repo/libwebsockets
cd libwebsockets
# If you want the stable version of libwebsockets, uncomment the next line
# git checkout v2.4-stable
mkdir build
cd build
# See https://github.com/meetecho/janus-gateway/issues/732 re: LWS_MAX_SMP
cmake -DLWS_MAX_SMP=1 -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS="-fpic" ..
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; if libwebsockets.org is unreachable for any reason, replace the first line with this:&lt;/p&gt;
&lt;p&gt;git clone &lt;a href="https://github.com/warmcat/libwebsockets.git"&gt;https://github.com/warmcat/libwebsockets.git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The same applies for Eclipse Paho MQTT C client library, which is needed for the optional MQTT support. If you're interested in integrating MQTT channels as an alternative (or replacement) to HTTP and/or WebSockets to control Janus, or as a carrier of Janus Events, you can install the latest version with the following steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/eclipse/paho.mqtt.c.git
cd paho.mqtt.c
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may want to set up a different install path for the library, to achieve that, replace the last command by 'sudo prefix=/usr make install'.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you're interested in Nanomsg support, you'll need to install the related C library. It is usually available as an easily installable package in pretty much all repositories. The following is an example on how to install it on Ubuntu:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude install libnanomsg-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, the same can be said for rabbitmq-c as well, which is needed for the optional RabbitMQ support. In fact, several different versions of the library can be found, and the versions usually available in most distribution repositories are not up-do-date with respect to the current state of the development. As such, if you're interested in integrating RabbitMQ queues as an alternative (or replacement) to HTTP and/or WebSockets to control Janus, you can install the latest version with the following steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/alanxz/rabbitmq-c
cd rabbitmq-c
git submodule init
git submodule update
mkdir build &amp;amp;&amp;amp; cd build
cmake -DCMAKE_INSTALL_PREFIX=/usr ..
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you're installing on a x86_64 distribution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To conclude, should you be interested in building the Janus documentation as well, you'll need some additional tools too:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.doxygen.org" rel="nofollow"&gt;Doxygen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.graphviz.org/" rel="nofollow"&gt;Graphviz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Fedora:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install doxygen graphviz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Ubuntu/Debian:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude install doxygen graphviz
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-compile" class="anchor" aria-hidden="true" href="#compile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile&lt;/h2&gt;
&lt;p&gt;Once you have installed all the dependencies, get the code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/meetecho/janus-gateway.git
cd janus-gateway
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then just use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sh autogen.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to generate the configure file. After that, configure and compile as usual to start the whole compilation process:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --prefix=/opt/janus
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since Janus requires configuration files for both the core and its modules in order to work, you'll probably also want to install the default configuration files to use, which you can do this way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make configs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Remember to only do this once, or otherwise a subsequent &lt;code&gt;make configs&lt;/code&gt; will overwrite any configuration file you may have modified in themeanwhile.&lt;/p&gt;
&lt;p&gt;If you've installed the above libraries but are not interested, for instance, in Data Channels, WebSockets, MQTT and/or RabbitMQ, you can disable them when configuring:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --disable-websockets --disable-data-channels --disable-rabbitmq --disable-mqtt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are configuration flags for pretty much all external modules and many of the features, so you may want to issue a &lt;code&gt;./configure --help&lt;/code&gt; to dig through the available options. A summary of what's going to be built will always appear after you do a configure, allowing you to double check if what you need and don't need is there.&lt;/p&gt;
&lt;p&gt;If Doxygen and graphviz are available, the process can also build the documentation for you. By default the compilation process will not try to build the documentation, so if you instead prefer to build it, use the &lt;code&gt;--enable-docs&lt;/code&gt; configuration option:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --enable-docs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also selectively enable/disable other features (e.g., specific plugins you don't care about, or whether or not you want to build the recordings post-processor). Use the --help option when configuring for more info.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-on-macos" class="anchor" aria-hidden="true" href="#building-on-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building on MacOS&lt;/h3&gt;
&lt;p&gt;While most of the above instructions will work when compiling Janus on MacOS as well, there are a few aspects to highlight when doing that.&lt;/p&gt;
&lt;p&gt;First of all, you can use &lt;code&gt;brew&lt;/code&gt; to install most of the dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install jansson libnice openssl srtp libusrsctp libmicrohttpd \
	libwebsockets cmake rabbitmq-c sofia-sip opus libogg curl glib \
	libconfig pkg-config gengetopt autoconf automake libtool
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For what concerns libwebsockets, though, make sure that the installed version is higher than &lt;code&gt;2.4.1&lt;/code&gt;, or you might encounter the problems described in &lt;a href="https://groups.google.com/forum/#!topic/meetecho-janus/HsFaEXBz4Cg" rel="nofollow"&gt;this post&lt;/a&gt;. If &lt;code&gt;brew&lt;/code&gt; doesn't provide a more recent version, you'll have to install the library manually.&lt;/p&gt;
&lt;p&gt;Notice that you may need to provide a custom &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; when configuring Janus as well, e.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --prefix=/usr/local/janus PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Everything else works exactly the same way as on Linux.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configure-and-start" class="anchor" aria-hidden="true" href="#configure-and-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure and start&lt;/h2&gt;
&lt;p&gt;To start the server, you can use the &lt;code&gt;janus&lt;/code&gt; executable. There are several things you can configure, either in a configuration file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/etc/janus/janus.jcfg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or on the command line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/bin/janus --help

janus 0.8.0

Usage: janus [OPTIONS]...

-h, --help                    Print help and exit
-V, --version                 Print version and exit
-b, --daemon                  Launch Janus in background as a daemon
                              (default=off)
-p, --pid-file=path           Open the specified PID file when starting Janus
                              (default=none)
-N, --disable-stdout          Disable stdout based logging  (default=off)
-L, --log-file=path           Log to the specified file (default=stdout only)
-H  --cwd-path                Working directory for Janus daemon process
                              (default=/)
-i, --interface=ipaddress     Interface to use (will be the public IP)
-P, --plugins-folder=path     Plugins folder (default=./plugins)
-C, --config=filename         Configuration file to use
-F, --configs-folder=path     Configuration files folder (default=./conf)
-c, --cert-pem=filename       DTLS certificate
-k, --cert-key=filename       DTLS certificate key
-K, --cert-pwd=text           DTLS certificate key passphrase (if needed)
-S, --stun-server=filename    STUN server(:port) to use, if needed (e.g.,
							  Janus behind NAT, default=none)
-1, --nat-1-1=ip              Public IP to put in all host candidates,
                              assuming a 1:1 NAT is in place (e.g., Amazon
                              EC2 instances, default=none)
-E, --ice-enforce-list=list   Comma-separated list of the only interfaces to
                              use for ICE gathering; partial strings are
                              supported (e.g., eth0 or eno1,wlan0,
                              default=none)
-X, --ice-ignore-list=list    Comma-separated list of interfaces or IP
                              addresses to ignore for ICE gathering;
                              partial strings are supported (e.g.,
                              vmnet8,192.168.0.1,10.0.0.1 or
                              vmnet,192.168., default=vmnet)
-6, --ipv6-candidates         Whether to enable IPv6 candidates or not
                              (experimental)  (default=off)
-l, --libnice-debug           Whether to enable libnice debugging or not
                              (default=off)
-f, --full-trickle            Do full-trickle instead of half-trickle
                              (default=off)
-I, --ice-lite                Whether to enable the ICE Lite mode or not
                              (default=off)
-T, --ice-tcp                 Whether to enable ICE-TCP or not (warning: only
                              works with ICE Lite)
                              (default=off)
-q, --max-nack-queue=number   Maximum size of the NACK queue (in ms) per user
                              for retransmissions
-t, --no-media-timer=number   Time (in s) that should pass with no media
                              (audio or video) being received before Janus
                              notifies you about this
-W, --slowlink-threshold=number
                              Number of lost packets (per s) that should
                              trigger a 'slowlink' Janus API event to users
-r, --rtp-port-range=min-max  Port range to use for RTP/RTCP (only available
							  if the installed libnice supports it)
-B, --twcc-period=number      How often (in ms) to send TWCC feedback back to
                              senders, if negotiated (default=200ms)
-n, --server-name=name        Public name of this Janus instance
                              (default=MyJanusInstance)
-s, --session-timeout=number  Session timeout value, in seconds (default=60)
-m, --reclaim-session-timeout=number
                              Reclaim session timeout value, in seconds
                              (default=0)
-d, --debug-level=1-7         Debug/logging level (0=disable debugging,
                              7=maximum debug level; default=4)
-D, --debug-timestamps        Enable debug/logging timestamps  (default=off)
-o, --disable-colors          Disable color in the logging  (default=off)
-M, --debug-locks             Enable debugging of locks/mutexes (very
                              verbose!)  (default=off)
-a, --apisecret=randomstring  API secret all requests need to pass in order
                              to be accepted by Janus (useful when wrapping
                              Janus API requests in a server, none by
                              default)
-A, --token-auth              Enable token-based authentication for all
                              requests  (default=off)
-e, --event-handlers          Enable event handlers  (default=off)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Options passed through the command line have the precedence on those specified in the configuration file. To start the server, simply run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/bin/janus
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will start the server, and have it look at the configuration file.&lt;/p&gt;
&lt;p&gt;Make sure you have a look at all of the configuration files, to tailor Janus to your specific needs: each configuration file is documented, so it shouldn't be hard to make changes according to your requirements. The repo comes with some defaults (assuming you issues &lt;code&gt;make configs&lt;/code&gt; after installing the server) that tend to make sense for generic deployments, and also includes some sample configurations for all the plugins (e.g., web servers to listen on, conference rooms to create, streaming mountpoints to make available at startup, etc.).&lt;/p&gt;
&lt;p&gt;To test whether it's working correctly, you can use the demos provided with this package in the &lt;code&gt;html&lt;/code&gt; folder: these are exactly the same demos available online on the &lt;a href="http://janus.conf.meetecho.com/" rel="nofollow"&gt;project website&lt;/a&gt;. Just copy the file it contains in a webserver, or use a userspace webserver to serve the files in the &lt;code&gt;html&lt;/code&gt; folder (e.g., with php or python), and open the &lt;code&gt;index.html&lt;/code&gt; page in either Chrome or Firefox. A list of demo pages exploiting the different plugins will be available. Remember to edit the transport/port details in the demo JavaScript files if you changed any transport-related configuration from its defaults. Besides, the demos refer to the pre-configured plugin resources, so if you add some new resources (e.g., a new videoconference) you may have to tweak the demo pages to actually use them.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Janus is thoroughly documented. You can find the current documentation, automatically generated with Doxygen, on the &lt;a href="http://janus.conf.meetecho.com/docs/" rel="nofollow"&gt;project website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help-us" class="anchor" aria-hidden="true" href="#help-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help us!&lt;/h2&gt;
&lt;p&gt;Any thought, feedback or (hopefully not!) insult is welcome!&lt;/p&gt;
&lt;p&gt;Developed by &lt;a href="https://github.com/meetecho"&gt;@meetecho&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>meetecho</author><guid isPermaLink="false">https://github.com/meetecho/janus-gateway</guid><pubDate>Fri, 06 Dec 2019 00:10:00 GMT</pubDate></item><item><title>tomaspinho/rtl8821ce #11 in C, Today</title><link>https://github.com/tomaspinho/rtl8821ce</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-realtek-rtl8821ce-driver" class="anchor" aria-hidden="true" href="#realtek-rtl8821ce-driver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Realtek RTL8821CE Driver&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-intent" class="anchor" aria-hidden="true" href="#intent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intent&lt;/h2&gt;
&lt;p&gt;This repository hosts the code for the &lt;a href="https://aur.archlinux.org/packages/rtl8821ce-dkms-git/" rel="nofollow"&gt;ArchLinux AUR Package&lt;/a&gt;. It's targetting Linux &amp;gt; 4.14 and is being developed for ArchLinux and Ubuntu 18.10. No support will be provided for other Linux distributions or Linux Kernel versions outside of that range.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;The maintainers of this repository are not Realtek employees and are maintaining this repository for their own usage. Further feature development (such as proper power saving, etc.) will not be pursued here, but will be gladly integrated if newer driver sources are provided by Realtek. Use at your own risk.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dkms" class="anchor" aria-hidden="true" href="#dkms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DKMS&lt;/h2&gt;
&lt;p&gt;This driver can be installed using &lt;a href="http://linux.dell.com/dkms/" rel="nofollow"&gt;DKMS&lt;/a&gt;. This is a system which will automatically recompile and install a kernel module when a new kernel gets installed or updated. To make use of DKMS, install the &lt;code&gt;dkms&lt;/code&gt; package.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-of-driver" class="anchor" aria-hidden="true" href="#installation-of-driver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation of Driver&lt;/h2&gt;
&lt;p&gt;Make sure you have a proper build environment and &lt;code&gt;dkms&lt;/code&gt; installed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ubuntu--debian" class="anchor" aria-hidden="true" href="#ubuntu--debian"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu &amp;amp; Debian&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install bc module-assistant build-essential dkms
sudo m-a prepare
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-arch-linux" class="anchor" aria-hidden="true" href="#arch-linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arch Linux&lt;/h3&gt;
&lt;p&gt;Generally speaking, Arch Linux already comes with a compiler toolchain installed. If you have a weird installation, just make sure you have the &lt;code&gt;base-devel&lt;/code&gt; package group installed before you proceed.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-installing-from-aur" class="anchor" aria-hidden="true" href="#installing-from-aur"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing from AUR&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;yaourt -Sy aur/rtl8821ce-dkms-git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And that's it.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-depencies-for-manual-installation-on-arch-linux" class="anchor" aria-hidden="true" href="#depencies-for-manual-installation-on-arch-linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Depencies for manual installation on Arch Linux&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -Syu linux-headers dkms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are running a non-vanilla kernel then install the headers to match the kernel package. Proceed to the section below.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manual-installation-of-driver" class="anchor" aria-hidden="true" href="#manual-installation-of-driver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual installation of driver&lt;/h3&gt;
&lt;p&gt;In order to install the driver open a terminal in the directory with the source code and execute the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ./dkms-install.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-removal-of-driver" class="anchor" aria-hidden="true" href="#removal-of-driver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Removal of Driver&lt;/h2&gt;
&lt;p&gt;Open a terminal window and git clone the repository to your local disk&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/tomaspinho/rtl8821ce.git
cd rtl8821ce
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run the installation script:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ./dkms-remove.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-issues" class="anchor" aria-hidden="true" href="#reporting-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting issues&lt;/h2&gt;
&lt;p&gt;When reporting issues, please make sure that debugging is enabled. To enable debugging either set &lt;code&gt;MAKEFLAGS="CONFIG_RTW_DEBUG = y"&lt;/code&gt; before compilation or edit Makefile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CONFIG_RTW_DEBUG = y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will enable verbose debug logging, helpful to developers.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-possible-issues" class="anchor" aria-hidden="true" href="#possible-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Possible issues&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-pcie-activate-state-power-management" class="anchor" aria-hidden="true" href="#pcie-activate-state-power-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PCIe Activate State Power Management&lt;/h3&gt;
&lt;p&gt;Your distribution may come with PCIe Active State Power Management enabled by default. That may conflict with this driver. To disable:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo $EDITOR /etc/default/grub
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add pci=noaer at the end of GRUB_CMDLINE_LINUX_DEFAULT. Line should look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT="quiet splash pci=noaer"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then update your GRUB configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo update-grub
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reboot.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-lenovo-yoga-laptops" class="anchor" aria-hidden="true" href="#lenovo-yoga-laptops"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lenovo Yoga laptops&lt;/h3&gt;
&lt;p&gt;Some new Yoga laptops (like the Yoga 530) come with &lt;code&gt;rtl8821ce&lt;/code&gt; as the Wi-Fi/Bluetooth chip. But the &lt;code&gt;ideapad-laptop&lt;/code&gt; module, which may come included in your distribution, may conflict with this driver. To disable:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo modprobe -r ideapad_laptop
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-bluetooth-is-not-working" class="anchor" aria-hidden="true" href="#bluetooth-is-not-working"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BlueTooth is not working&lt;/h3&gt;
&lt;p&gt;This may be due to the Kernel loading up the wrong firmware file for this card. Please take a look at &lt;a href="https://github.com/wahsot"&gt;@wahsot&lt;/a&gt;'s tutorial at &lt;a href="https://github.com/tomaspinho/rtl8821ce/issues/19#issuecomment-452196840"&gt;https://github.com/tomaspinho/rtl8821ce/issues/19#issuecomment-452196840&lt;/a&gt; to see if that helps you out.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tomaspinho</author><guid isPermaLink="false">https://github.com/tomaspinho/rtl8821ce</guid><pubDate>Fri, 06 Dec 2019 00:11:00 GMT</pubDate></item><item><title>openresty/lua-nginx-module #12 in C, Today</title><link>https://github.com/openresty/lua-nginx-module</link><description>&lt;p&gt;&lt;i&gt;Embed the Power of Lua into NGINX HTTP servers&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-name" class="anchor" aria-hidden="true" href="#name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Name&lt;/h1&gt;
&lt;p&gt;ngx_http_lua_module - Embed the power of Lua into Nginx HTTP Servers.&lt;/p&gt;
&lt;p&gt;This module is a core component of &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;. If you are using this module,
then you are essentially using OpenResty.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This module is not distributed with the Nginx source.&lt;/em&gt; See
&lt;a href="#installation"&gt;the installation instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#name"&gt;Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#status"&gt;Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#version"&gt;Version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#synopsis"&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#description"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#typical-uses"&gt;Typical Uses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-compatibility"&gt;Nginx Compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#building-as-a-dynamic-module"&gt;Building as a dynamic module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c-macro-configurations"&gt;C Macro Configurations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#english-mailing-list"&gt;English Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chinese-mailing-list"&gt;Chinese Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-repository"&gt;Code Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bugs-and-patches"&gt;Bugs and Patches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-environment-variable-support"&gt;System Environment Variable Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-10-support"&gt;HTTP 1.0 support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#statically-linking-pure-lua-modules"&gt;Statically Linking Pure Lua Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-sharing-within-an-nginx-worker"&gt;Data Sharing within an Nginx Worker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#known-issues"&gt;Known Issues&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tcp-socket-connect-operation-issues"&gt;TCP socket connect operation issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua-coroutine-yieldingresuming"&gt;Lua Coroutine Yielding/Resuming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua-variable-scope"&gt;Lua Variable Scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;Locations Configured by Subrequest Directives of Other Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cosockets-not-available-everywhere"&gt;Cosockets Not Available Everywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#special-escaping-sequences"&gt;Special Escaping Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mixing-with-ssi-not-supported"&gt;Mixing with SSI Not Supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spdy-mode-not-fully-supported"&gt;SPDY Mode Not Fully Supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#missing-data-on-short-circuited-requests"&gt;Missing data on short circuited requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changes"&gt;Changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#test-suite"&gt;Test Suite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copyright-and-license"&gt;Copyright and License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#see-also"&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#directives"&gt;Directives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#obsolete-sections"&gt;Obsolete Sections&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#special-pcre-sequences"&gt;Special PCRE Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lualuajit-bytecode-support"&gt;Lua/LuaJIT bytecode support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h1&gt;
&lt;p&gt;Production ready.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-version" class="anchor" aria-hidden="true" href="#version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version&lt;/h1&gt;
&lt;p&gt;This document describes ngx_lua
&lt;a href="https://github.com/openresty/lua-nginx-module/tags"&gt;v0.10.16&lt;/a&gt;, which is not
released yet.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Synopsis&lt;/h1&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# set search paths for pure Lua external libraries (';;' is the default path):&lt;/span&gt;
 &lt;span class="pl-k"&gt;lua_package_path&lt;/span&gt; &lt;span class="pl-s"&gt;'/foo/bar/?.lua;/blah/?.lua;;'&lt;/span&gt;;

 &lt;span class="pl-c"&gt;# set search paths for Lua external libraries written in C (can also use ';;'):&lt;/span&gt;
 &lt;span class="pl-k"&gt;lua_package_cpath&lt;/span&gt; &lt;span class="pl-s"&gt;'/bar/baz/?.so;/blah/blah/?.so;;'&lt;/span&gt;;

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua_content &lt;/span&gt;{
         &lt;span class="pl-c"&gt;# MIME type determined by default_type:&lt;/span&gt;
         &lt;span class="pl-k"&gt;default_type&lt;/span&gt; &lt;span class="pl-s"&gt;'text/plain'&lt;/span&gt;;

         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.say('Hello,world!')
         }
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/nginx_var &lt;/span&gt;{
         &lt;span class="pl-c"&gt;# MIME type determined by default_type:&lt;/span&gt;
         &lt;span class="pl-k"&gt;default_type&lt;/span&gt; &lt;span class="pl-s"&gt;'text/plain'&lt;/span&gt;;

         &lt;span class="pl-c"&gt;# try access /nginx_var?a=hello,world&lt;/span&gt;
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.say(ngx.var.arg_a)
         }
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /request_body &lt;/span&gt;{
         &lt;span class="pl-k"&gt;client_max_body_size&lt;/span&gt; &lt;span class="pl-c1"&gt;50k&lt;/span&gt;;
         &lt;span class="pl-k"&gt;client_body_buffer_size&lt;/span&gt; &lt;span class="pl-c1"&gt;50k&lt;/span&gt;;

         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.req.read_body()  -- &lt;span class="pl-k"&gt;explicitly&lt;/span&gt; read the req body
             &lt;span class="pl-k"&gt;local&lt;/span&gt; data = ngx.req.get_body_data()
             &lt;span class="pl-k"&gt;if&lt;/span&gt; data then
                 ngx.say("&lt;span class="pl-k"&gt;body&lt;/span&gt; data:&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.print(data)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 return&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             -- body may get buffered in a temp file:&lt;/span&gt;
&lt;span class="pl-s"&gt;             local file = ngx.req.get_body_file()&lt;/span&gt;
&lt;span class="pl-s"&gt;             if file then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;body is in file &lt;span class="pl-s"&gt;", file)&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;no body found&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     # transparent non-blocking I/O in Lua via subrequests&lt;/span&gt;
&lt;span class="pl-s"&gt;     # (well, a better way is to use cosockets)&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /lua {&lt;/span&gt;
&lt;span class="pl-s"&gt;         # MIME type determined by default_type:&lt;/span&gt;
&lt;span class="pl-s"&gt;         default_type 'text/plain';&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;             local res = ngx.location.capture("&lt;/span&gt;/some_other_location&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             if res then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;status: &lt;span class="pl-s"&gt;", res.status)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;body:&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /foo {&lt;/span&gt;
&lt;span class="pl-s"&gt;         rewrite_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;             res = ngx.location.capture("&lt;/span&gt;/memc&lt;span class="pl-s"&gt;",&lt;/span&gt;
&lt;span class="pl-s"&gt;                 { args = { cmd = "&lt;/span&gt;incr&lt;span class="pl-s"&gt;", key = ngx.var.uri } }&lt;/span&gt;
&lt;span class="pl-s"&gt;             )&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         proxy_pass http://blah.blah.com;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /mixed {&lt;/span&gt;
&lt;span class="pl-s"&gt;         rewrite_by_lua_file /path/to/rewrite.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;         access_by_lua_file /path/to/access.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_file /path/to/content.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     # use nginx var in code path&lt;/span&gt;
&lt;span class="pl-s"&gt;     # CAUTION: contents in nginx var must be carefully filtered,&lt;/span&gt;
&lt;span class="pl-s"&gt;     # otherwise there'll be great security risk!&lt;/span&gt;
&lt;span class="pl-s"&gt;     location ~ ^/app/([-_a-zA-Z0-9/]+) {&lt;/span&gt;
&lt;span class="pl-s"&gt;         set &lt;span class="pl-smi"&gt;$path&lt;/span&gt; &lt;span class="pl-smi"&gt;$1&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_file /path/to/lua/app/root/&lt;span class="pl-smi"&gt;$path&lt;/span&gt;.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location / {&lt;/span&gt;
&lt;span class="pl-s"&gt;        client_max_body_size 100k;&lt;/span&gt;
&lt;span class="pl-s"&gt;        client_body_buffer_size 100k;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        access_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- check the client IP address is in our black list&lt;/span&gt;
&lt;span class="pl-s"&gt;            if ngx.var.remote_addr == "&lt;/span&gt;132.5.72.3&lt;span class="pl-s"&gt;" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                ngx.exit(ngx.HTTP_FORBIDDEN)&lt;/span&gt;
&lt;span class="pl-s"&gt;            end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- check if the URI contains bad words&lt;/span&gt;
&lt;span class="pl-s"&gt;            if ngx.var.uri and&lt;/span&gt;
&lt;span class="pl-s"&gt;                   string.match(ngx.var.request_body, "&lt;/span&gt;evil&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;            then&lt;/span&gt;
&lt;span class="pl-s"&gt;                return ngx.redirect("&lt;/span&gt;/terms_of_use.html&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;            end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- tests passed&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        # proxy_pass/fastcgi_pass/etc settings&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h1&gt;
&lt;p&gt;This module embeds &lt;a href="https://luajit.org/luajit.html" rel="nofollow"&gt;LuaJIT 2.0/2.1&lt;/a&gt; into Nginx.
It is a core component of &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;. If you are using
this module, then you are essentially using OpenResty.&lt;/p&gt;
&lt;p&gt;Since version &lt;code&gt;v0.10.16&lt;/code&gt; of this module, the standard Lua
interpreter (also known as "PUC-Rio Lua") is not supported anymore. This
document interchangeably uses the terms "Lua" and "LuaJIT" to refer to the
LuaJIT interpreter.&lt;/p&gt;
&lt;p&gt;By leveraging Nginx's subrequests, this module allows the integration of the
powerful Lua threads (known as Lua "coroutines") into the Nginx event model.&lt;/p&gt;
&lt;p&gt;Unlike &lt;a href="https://httpd.apache.org/docs/trunk/mod/mod_lua.html" rel="nofollow"&gt;Apache's mod_lua&lt;/a&gt;
and &lt;a href="http://redmine.lighttpd.net/wiki/1/Docs:ModMagnet" rel="nofollow"&gt;Lighttpd's mod_magnet&lt;/a&gt;,
Lua code executed using this module can be &lt;em&gt;100% non-blocking&lt;/em&gt; on network
traffic as long as the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; provided by
this module is used to handle requests to upstream services such as MySQL,
PostgreSQL, Memcached, Redis, or upstream HTTP web services.&lt;/p&gt;
&lt;p&gt;At least the following Lua libraries and Nginx modules can be used with this
module:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-memcached"&gt;lua-resty-memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-mysql"&gt;lua-resty-mysql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-redis"&gt;lua-resty-redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-dns"&gt;lua-resty-dns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-upload"&gt;lua-resty-upload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lock"&gt;lua-resty-lock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cloudflare/lua-resty-logger-socket"&gt;lua-resty-logger-socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lrucache"&gt;lua-resty-lrucache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-string"&gt;lua-resty-string&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/memc-nginx-module"&gt;ngx_memc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_postgres"&gt;ngx_postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/redis2-nginx-module"&gt;ngx_redis2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.nginx.org/HttpRedisModule" rel="nofollow"&gt;ngx_redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_fastcgi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Almost any Nginx modules can be used with this ngx_lua module by means of
&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; or
&lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; but it is
recommended to use those &lt;code&gt;lua-resty-*&lt;/code&gt; libraries instead of creating
subrequests to access the Nginx upstream modules because the former is usually
much more flexible and memory-efficient.&lt;/p&gt;
&lt;p&gt;The Lua interpreter (also known as "Lua State" or "LuaJIT VM instance") is
shared across all the requests in a single Nginx worker process to minimize
memory use. Request contexts are segregated using lightweight Lua coroutines.&lt;/p&gt;
&lt;p&gt;Loaded Lua modules persist in the Nginx worker process level resulting in a
small memory footprint in Lua even when under heavy loads.&lt;/p&gt;
&lt;p&gt;This module is plugged into Nginx's "http" subsystem so it can only speaks
downstream communication protocols in the HTTP family (HTTP 0.9/1.0/1.1/2.0,
WebSockets, etc...).  If you want to do generic TCP communications with the
downstream clients, then you should use the
&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua&lt;/a&gt;
module instead, which offers a compatible Lua API.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-typical-uses" class="anchor" aria-hidden="true" href="#typical-uses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Typical Uses&lt;/h1&gt;
&lt;p&gt;Just to name a few:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mashup'ing and processing outputs of various Nginx upstream outputs (proxy, drizzle, postgres, redis, memcached, and etc) in Lua,&lt;/li&gt;
&lt;li&gt;doing arbitrarily complex access control and security checks in Lua before requests actually reach the upstream backends,&lt;/li&gt;
&lt;li&gt;manipulating response headers in an arbitrary way (by Lua)&lt;/li&gt;
&lt;li&gt;fetching backend information from external storage backends (like redis, memcached, mysql, postgresql) and use that information to choose which upstream backend to access on-the-fly,&lt;/li&gt;
&lt;li&gt;coding up arbitrarily complex web applications in a content handler using synchronous but still non-blocking access to the database backends and other storage,&lt;/li&gt;
&lt;li&gt;doing very complex URL dispatch in Lua at rewrite phase,&lt;/li&gt;
&lt;li&gt;using Lua to implement advanced caching mechanism for Nginx's subrequests and arbitrary locations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The possibilities are unlimited as the module allows bringing together various
elements within Nginx as well as exposing the power of the Lua language to the
user. The module provides the full flexibility of scripting while offering
performance levels comparable with native C language programs both in terms of
CPU time as well as memory footprint thanks to LuaJIT 2.x.&lt;/p&gt;
&lt;p&gt;Other scripting language implementations typically struggle to match this
performance level.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-nginx-compatibility" class="anchor" aria-hidden="true" href="#nginx-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx Compatibility&lt;/h1&gt;
&lt;p&gt;The latest version of this module is compatible with the following versions of Nginx:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.17.x  (last tested: 1.17.4)&lt;/li&gt;
&lt;li&gt;1.15.x  (last tested: 1.15.8)&lt;/li&gt;
&lt;li&gt;1.14.x&lt;/li&gt;
&lt;li&gt;1.13.x  (last tested: 1.13.6)&lt;/li&gt;
&lt;li&gt;1.12.x&lt;/li&gt;
&lt;li&gt;1.11.x  (last tested: 1.11.2)&lt;/li&gt;
&lt;li&gt;1.10.x&lt;/li&gt;
&lt;li&gt;1.9.x (last tested: 1.9.15)&lt;/li&gt;
&lt;li&gt;1.8.x&lt;/li&gt;
&lt;li&gt;1.7.x (last tested: 1.7.10)&lt;/li&gt;
&lt;li&gt;1.6.x&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nginx cores older than 1.6.0 (exclusive) are &lt;em&gt;not&lt;/em&gt; supported.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;It is &lt;em&gt;highly&lt;/em&gt; recommended to use &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty releases&lt;/a&gt;
which bundle Nginx, ngx_lua (this module), LuaJIT, as well as other powerful
companion Nginx modules and Lua libraries.&lt;/p&gt;
&lt;p&gt;It is discouraged to build this module with Nginx yourself since it is tricky
to set up exactly right.&lt;/p&gt;
&lt;p&gt;Note that Nginx, LuaJIT, and OpenSSL official releases have various limitations
and long standing bugs that can cause some of this module's features to be
disabled, not work properly, or run slower. Official OpenResty releases are
recommended because they bundle &lt;a href="https://github.com/openresty/luajit2"&gt;OpenResty's optimized LuaJIT 2.1 fork&lt;/a&gt; and
&lt;a href="https://github.com/openresty/openresty/tree/master/patches"&gt;Nginx/OpenSSL
patches&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, ngx_lua can be manually compiled into Nginx:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LuaJIT can be downloaded from the &lt;a href="https://github.com/openresty/luajit2/releases"&gt;latest release of OpenResty's LuaJIT fork&lt;/a&gt;. The official LuaJIT 2.x releases are also supported, although performance will be significantly lower for reasons elaborated above&lt;/li&gt;
&lt;li&gt;Download the latest version of the ngx_devel_kit (NDK) module &lt;a href="https://github.com/simplresty/ngx_devel_kit/tags"&gt;HERE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the latest version of ngx_lua &lt;a href="https://github.com/openresty/lua-nginx-module/tags"&gt;HERE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the latest supported version of Nginx &lt;a href="https://nginx.org/" rel="nofollow"&gt;HERE&lt;/a&gt; (See &lt;a href="#nginx-compatibility"&gt;Nginx Compatibility&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Build the source with this module:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; wget &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://nginx.org/download/nginx-1.13.6.tar.gz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
 tar -xzvf nginx-1.13.6.tar.gz
 &lt;span class="pl-c1"&gt;cd&lt;/span&gt; nginx-1.13.6/

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; tell nginx's build system where to find LuaJIT 2.0:&lt;/span&gt;
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_LIB=/path/to/luajit/lib
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_INC=/path/to/luajit/include/luajit-2.0

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; tell nginx's build system where to find LuaJIT 2.1:&lt;/span&gt;
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_LIB=/path/to/luajit/lib
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_INC=/path/to/luajit/include/luajit-2.1

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Here we assume Nginx is to be installed under /opt/nginx/.&lt;/span&gt;
 ./configure --prefix=/opt/nginx \
         --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Wl,-rpath,/path/to/luajit/lib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
         --add-module=/path/to/ngx_devel_kit \
         --add-module=/path/to/lua-nginx-module

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Note that you may also want to add `./configure` options which are used in your&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; current nginx build.&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; You can get usually those options using command nginx -V&lt;/span&gt;

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; you can change the parallism number 2 below to fit the number of spare CPU cores in your&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; machine.&lt;/span&gt;
 make -j2
 make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-as-a-dynamic-module" class="anchor" aria-hidden="true" href="#building-as-a-dynamic-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building as a dynamic module&lt;/h2&gt;
&lt;p&gt;Starting from NGINX 1.9.11, you can also compile this module as a dynamic module, by using the &lt;code&gt;--add-dynamic-module=PATH&lt;/code&gt; option instead of &lt;code&gt;--add-module=PATH&lt;/code&gt; on the
&lt;code&gt;./configure&lt;/code&gt; command line above. And then you can explicitly load the module in your &lt;code&gt;nginx.conf&lt;/code&gt; via the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#load_module" rel="nofollow"&gt;load_module&lt;/a&gt;
directive, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;load_module&lt;/span&gt; /path/to/modules/ndk_http_module.so;  &lt;span class="pl-c"&gt;# assuming NDK is built as a dynamic module too&lt;/span&gt;
 &lt;span class="pl-k"&gt;load_module&lt;/span&gt; /path/to/modules/ngx_http_lua_module.so;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-c-macro-configurations" class="anchor" aria-hidden="true" href="#c-macro-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C Macro Configurations&lt;/h2&gt;
&lt;p&gt;While building this module either via OpenResty or with the Nginx core, you can define the following C macros via the C compiler options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NGX_LUA_USE_ASSERT&lt;/code&gt;
When defined, will enable assertions in the ngx_lua C code base. Recommended for debugging or testing builds. It can introduce some (small) runtime overhead when enabled. This macro was first introduced in the &lt;code&gt;v0.9.10&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NGX_LUA_ABORT_AT_PANIC&lt;/code&gt;
When the LuaJIT VM panics, ngx_lua will instruct the current nginx worker process to quit gracefully by default. By specifying this C macro, ngx_lua will abort the current nginx worker process (which usually result in a core dump file) immediately. This option is useful for debugging VM panics. This option was first introduced in the &lt;code&gt;v0.9.8&lt;/code&gt; release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To enable one or more of these macros, just pass extra C compiler options to the &lt;code&gt;./configure&lt;/code&gt; script of either Nginx or OpenResty. For instance,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-cc-opt="-DNGX_LUA_USE_ASSERT -DNGX_LUA_ABORT_AT_PANIC"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-english-mailing-list" class="anchor" aria-hidden="true" href="#english-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;English Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty-en" rel="nofollow"&gt;openresty-en&lt;/a&gt; mailing list is for English speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-chinese-mailing-list" class="anchor" aria-hidden="true" href="#chinese-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chinese Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty" rel="nofollow"&gt;openresty&lt;/a&gt; mailing list is for Chinese speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-code-repository" class="anchor" aria-hidden="true" href="#code-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Repository&lt;/h1&gt;
&lt;p&gt;The code repository of this project is hosted on GitHub at
&lt;a href="https://github.com/openresty/lua-nginx-module"&gt;openresty/lua-nginx-module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-bugs-and-patches" class="anchor" aria-hidden="true" href="#bugs-and-patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs and Patches&lt;/h1&gt;
&lt;p&gt;Please submit bug reports, wishlists, or patches by&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;creating a ticket on the &lt;a href="https://github.com/openresty/lua-nginx-module/issues"&gt;GitHub Issue Tracker&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;or posting to the &lt;a href="#community"&gt;OpenResty community&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-luajit-bytecode-support" class="anchor" aria-hidden="true" href="#luajit-bytecode-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LuaJIT bytecode support&lt;/h1&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, all &lt;code&gt;*_by_lua_file&lt;/code&gt; configure directives (such as &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;) support loading LuaJIT 2.0/2.1 raw bytecode files directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -b /path/to/input_file.lua /path/to/output_file.ljbc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;-bg&lt;/code&gt; option can be used to include debug information in the LuaJIT bytecode file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -bg /path/to/input_file.lua /path/to/output_file.ljbc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please refer to the official LuaJIT documentation on the &lt;code&gt;-b&lt;/code&gt; option for more details:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://luajit.org/running.html#opt_b" rel="nofollow"&gt;https://luajit.org/running.html#opt_b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that the bytecode files generated by LuaJIT 2.1 is &lt;em&gt;not&lt;/em&gt; compatible with
LuaJIT 2.0, and vice versa. The support for LuaJIT 2.1 bytecode was first added
in ngx_lua v0.9.3.&lt;/p&gt;
&lt;p&gt;Attempts to load standard Lua 5.1 bytecode files into ngx_lua instances linked
to LuaJIT 2.0/2.1 (or vice versa) will result in an Nginx error message such as
the one below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[error] 13909#0: *1 failed to load Lua inlined code: bad byte-code header in /path/to/test_file.luac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Loading bytecode files via the Lua primitives like &lt;code&gt;require&lt;/code&gt; and
&lt;code&gt;dofile&lt;/code&gt; should always work as expected.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-system-environment-variable-support" class="anchor" aria-hidden="true" href="#system-environment-variable-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Environment Variable Support&lt;/h1&gt;
&lt;p&gt;If you want to access the system environment variable, say, &lt;code&gt;foo&lt;/code&gt;, in Lua via the standard Lua API &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.getenv" rel="nofollow"&gt;os.getenv&lt;/a&gt;, then you should also list this environment variable name in your &lt;code&gt;nginx.conf&lt;/code&gt; file via the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#env" rel="nofollow"&gt;env directive&lt;/a&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;env&lt;/span&gt; foo;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-http-10-support" class="anchor" aria-hidden="true" href="#http-10-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP 1.0 support&lt;/h1&gt;
&lt;p&gt;The HTTP 1.0 protocol does not support chunked output and requires an explicit &lt;code&gt;Content-Length&lt;/code&gt; header when the response body is not empty in order to support the HTTP 1.0 keep-alive.
So when a HTTP 1.0 request is made and the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive is turned &lt;code&gt;on&lt;/code&gt;, ngx_lua will buffer the
output of &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; calls and also postpone sending response headers until all the response body output is received.
At that time ngx_lua can calculate the total length of the body and construct a proper &lt;code&gt;Content-Length&lt;/code&gt; header to return to the HTTP 1.0 client.
If the &lt;code&gt;Content-Length&lt;/code&gt; response header is set in the running Lua code, however, this buffering will be disabled even if the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive is turned &lt;code&gt;on&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For large streaming output responses, it is important to disable the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive to minimise memory usage.&lt;/p&gt;
&lt;p&gt;Note that common HTTP benchmark tools such as &lt;code&gt;ab&lt;/code&gt; and &lt;code&gt;http_load&lt;/code&gt; issue HTTP 1.0 requests by default.
To force &lt;code&gt;curl&lt;/code&gt; to send HTTP 1.0 requests, use the &lt;code&gt;-0&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-statically-linking-pure-lua-modules" class="anchor" aria-hidden="true" href="#statically-linking-pure-lua-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Statically Linking Pure Lua Modules&lt;/h1&gt;
&lt;p&gt;With LuaJIT 2.x, it is possible to statically link the bytecode of pure Lua
modules into the Nginx executable.&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;luajit&lt;/code&gt; executable to compile &lt;code&gt;.lua&lt;/code&gt; Lua
module files to &lt;code&gt;.o&lt;/code&gt; object files containing the exported bytecode
data, and then link the &lt;code&gt;.o&lt;/code&gt; files directly in your Nginx build.&lt;/p&gt;
&lt;p&gt;Below is a trivial example to demonstrate this. Consider that we have the following &lt;code&gt;.lua&lt;/code&gt; file named &lt;code&gt;foo.lua&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; foo.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.go&lt;/span&gt;()
     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello from foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then we compile this &lt;code&gt;.lua&lt;/code&gt; file to &lt;code&gt;foo.o&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -bg foo.lua foo.o&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What matters here is the name of the &lt;code&gt;.lua&lt;/code&gt; file, which determines how you use this module later on the Lua land. The file name &lt;code&gt;foo.o&lt;/code&gt; does not matter at all except the &lt;code&gt;.o&lt;/code&gt; file extension (which tells &lt;code&gt;luajit&lt;/code&gt; what output format is used). If you want to strip the Lua debug information from the resulting bytecode, you can just specify the &lt;code&gt;-b&lt;/code&gt; option above instead of &lt;code&gt;-bg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then when building Nginx or OpenResty, pass the &lt;code&gt;--with-ld-opt="foo.o"&lt;/code&gt; option to the &lt;code&gt;./configure&lt;/code&gt; script:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/foo.o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, you can just do the following in any Lua code run by ngx_lua:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 foo.&lt;span class="pl-c1"&gt;go&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this piece of code no longer depends on the external &lt;code&gt;foo.lua&lt;/code&gt; file any more because it has already been compiled into the &lt;code&gt;nginx&lt;/code&gt; executable.&lt;/p&gt;
&lt;p&gt;If you want to use dot in the Lua module name when calling &lt;code&gt;require&lt;/code&gt;, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you need to rename the &lt;code&gt;foo.lua&lt;/code&gt; file to &lt;code&gt;resty_foo.lua&lt;/code&gt; before compiling it down to a &lt;code&gt;.o&lt;/code&gt; file with the &lt;code&gt;luajit&lt;/code&gt; command-line utility.&lt;/p&gt;
&lt;p&gt;It is important to use exactly the same version of LuaJIT when compiling &lt;code&gt;.lua&lt;/code&gt; files to &lt;code&gt;.o&lt;/code&gt; files as building nginx + ngx_lua. This is because the LuaJIT bytecode format may be incompatible between different LuaJIT versions. When the bytecode format is incompatible, you will see a Lua runtime error saying that the Lua module is not found.&lt;/p&gt;
&lt;p&gt;When you have multiple &lt;code&gt;.lua&lt;/code&gt; files to compile and link, then just specify their &lt;code&gt;.o&lt;/code&gt; files at the same time in the value of the &lt;code&gt;--with-ld-opt&lt;/code&gt; option. For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/foo.o /path/to/bar.o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have too many &lt;code&gt;.o&lt;/code&gt; files, then it might not be feasible to name them all in a single command. In this case, you can build a static library (or archive) for your &lt;code&gt;.o&lt;/code&gt; files, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ar rcus libmyluafiles.a &lt;span class="pl-k"&gt;*&lt;/span&gt;.o&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you can link the &lt;code&gt;myluafiles&lt;/code&gt; archive as a whole to your nginx executable:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure \
     --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-L/path/to/lib -Wl,--whole-archive -lmyluafiles -Wl,--no-whole-archive&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;/path/to/lib&lt;/code&gt; is the path of the directory containing the &lt;code&gt;libmyluafiles.a&lt;/code&gt; file. It should be noted that the linker option &lt;code&gt;--whole-archive&lt;/code&gt; is required here because otherwise our archive will be skipped because no symbols in our archive are mentioned in the main parts of the nginx executable.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-data-sharing-within-an-nginx-worker" class="anchor" aria-hidden="true" href="#data-sharing-within-an-nginx-worker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Sharing within an Nginx Worker&lt;/h1&gt;
&lt;p&gt;To globally share data among all the requests handled by the same Nginx worker
process, encapsulate the shared data into a Lua module, use the Lua
&lt;code&gt;require&lt;/code&gt; builtin to import the module, and then manipulate the
shared data in Lua. This works because required Lua modules are loaded only
once and all coroutines will share the same copy of the module (both its code
and data).&lt;/p&gt;
&lt;p&gt;Note that the use of global Lua variables is &lt;em&gt;strongly discouraged&lt;/em&gt;, as it may
lead to unexpected race conditions between concurrent requests.&lt;/p&gt;
&lt;p&gt;Here is a small example on sharing data within an Nginx worker via a Lua module:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mydata.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;local&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     dog &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
     cat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;,
     pig &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;,
 }

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.get_age&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; data[name]
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then accessing it from &lt;code&gt;nginx.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; mydata = require &lt;span class="pl-s"&gt;"mydata"&lt;/span&gt;
         ngx.say(mydata.get_age("dog"))
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;mydata&lt;/code&gt; module in this example will only be loaded and run on the first request to the location &lt;code&gt;/lua&lt;/code&gt;,
and all subsequent requests to the same Nginx worker process will use the reloaded instance of the
module as well as the same copy of the data in it, until a &lt;code&gt;HUP&lt;/code&gt; signal is sent to the Nginx master process to force a reload.
This data sharing technique is essential for high performance Lua applications based on this module.&lt;/p&gt;
&lt;p&gt;Note that this data sharing is on a &lt;em&gt;per-worker&lt;/em&gt; basis and not on a &lt;em&gt;per-server&lt;/em&gt; basis. That is, when there are multiple Nginx worker processes under an Nginx master, data sharing cannot cross the process boundary between these workers.&lt;/p&gt;
&lt;p&gt;It is usually recommended to share read-only data this way. You can also share changeable data among all the concurrent requests of each Nginx worker process as
long as there is &lt;em&gt;no&lt;/em&gt; nonblocking I/O operations (including &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;)
in the middle of your calculations. As long as you do not give the
control back to the Nginx event loop and ngx_lua's light thread
scheduler (even implicitly), there can never be any race conditions in
between. For this reason, always be very careful when you want to share changeable data on the
worker level. Buggy optimizations can easily lead to hard-to-debug
race conditions under load.&lt;/p&gt;
&lt;p&gt;If server-wide data sharing is required, then use one or more of the following approaches:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; API provided by this module.&lt;/li&gt;
&lt;li&gt;Use only a single Nginx worker and a single server (this is however not recommended when there is a multi core CPU or multiple CPUs in a single machine).&lt;/li&gt;
&lt;li&gt;Use data storage mechanisms such as &lt;code&gt;memcached&lt;/code&gt;, &lt;code&gt;redis&lt;/code&gt;, &lt;code&gt;MySQL&lt;/code&gt; or &lt;code&gt;PostgreSQL&lt;/code&gt;. &lt;a href="https://openresty.org" rel="nofollow"&gt;The OpenResty official releases&lt;/a&gt; come with a set of companion Nginx modules and Lua libraries that provide interfaces with these data storage mechanisms.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcp-socket-connect-operation-issues" class="anchor" aria-hidden="true" href="#tcp-socket-connect-operation-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TCP socket connect operation issues&lt;/h2&gt;
&lt;p&gt;The &lt;a href="#tcpsockconnect"&gt;tcpsock:connect&lt;/a&gt; method may indicate &lt;code&gt;success&lt;/code&gt; despite connection failures such as with &lt;code&gt;Connection Refused&lt;/code&gt; errors.&lt;/p&gt;
&lt;p&gt;However, later attempts to manipulate the cosocket object will fail and return the actual error status message generated by the failed connect operation.&lt;/p&gt;
&lt;p&gt;This issue is due to limitations in the Nginx event model and only appears to affect Mac OS X.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua-coroutine-yieldingresuming" class="anchor" aria-hidden="true" href="#lua-coroutine-yieldingresuming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua Coroutine Yielding/Resuming&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Because Lua's &lt;code&gt;dofile&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; builtins are currently implemented as C functions in LuaJIT 2.0/2.1, if the Lua file being loaded by &lt;code&gt;dofile&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; invokes &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture*&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, or other API functions requiring yielding in the &lt;em&gt;top-level&lt;/em&gt; scope of the Lua file, then the Lua error "attempt to yield across C-call boundary" will be raised. To avoid this, put these calls requiring yielding into your own Lua functions in the Lua file instead of the top-level scope of the file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua-variable-scope" class="anchor" aria-hidden="true" href="#lua-variable-scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua Variable Scope&lt;/h2&gt;
&lt;p&gt;Care must be taken when importing modules, and this form should be used:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; xxx &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xxx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;instead of the old deprecated form:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xxx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is the reason: by design, the global environment has exactly the same lifetime as the Nginx request handler associated with it. Each request handler has its own set of Lua global variables and that is the idea of request isolation. The Lua module is actually loaded by the first Nginx request handler and is cached by the &lt;code&gt;require()&lt;/code&gt; built-in in the &lt;code&gt;package.loaded&lt;/code&gt; table for later reference, and the &lt;code&gt;module()&lt;/code&gt; builtin used by some Lua modules has the side effect of setting a global variable to the loaded module table. But this global variable will be cleared at the end of the request handler,  and every subsequent request handler all has its own (clean) global environment. So one will get Lua exception for accessing the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;The use of Lua global variables is a generally inadvisable in the ngx_lua context as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the misuse of Lua globals has detrimental side effects on concurrent requests when such variables should instead be local in scope,&lt;/li&gt;
&lt;li&gt;Lua global variables require Lua table look-ups in the global environment which is computationally expensive, and&lt;/li&gt;
&lt;li&gt;some Lua global variable references may include typing errors which make such difficult to debug.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It is therefore &lt;em&gt;highly&lt;/em&gt; recommended to always declare such within an appropriate local scope instead.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Avoid&lt;/span&gt;
 foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Recommended&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Avoid&lt;/span&gt;
 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;() &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Recommended&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;() &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To find all instances of Lua global variables in your Lua code, run the &lt;a href="https://github.com/openresty/nginx-devel-utils/blob/master/lua-releng"&gt;lua-releng tool&lt;/a&gt; across all &lt;code&gt;.lua&lt;/code&gt; source files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ lua-releng
Checking use of Lua global variables in file lib/foo/bar.lua ...
        1       [1489]  SETGLOBAL       7 -1    ; contains
        55      [1506]  GETGLOBAL       7 -3    ; setvar
        3       [1545]  GETGLOBAL       3 -4    ; varexpand
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output says that the line 1489 of file &lt;code&gt;lib/foo/bar.lua&lt;/code&gt; writes to a global variable named &lt;code&gt;contains&lt;/code&gt;, the line 1506 reads from the global variable &lt;code&gt;setvar&lt;/code&gt;, and line 1545 reads the global &lt;code&gt;varexpand&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This tool will guarantee that local variables in the Lua module functions are all declared with the &lt;code&gt;local&lt;/code&gt; keyword, otherwise a runtime exception will be thrown. It prevents undesirable race conditions while accessing such variables. See &lt;a href="#data-sharing-within-an-nginx-worker"&gt;Data Sharing within an Nginx Worker&lt;/a&gt; for the reasons behind this.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-locations-configured-by-subrequest-directives-of-other-modules" class="anchor" aria-hidden="true" href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Locations Configured by Subrequest Directives of Other Modules&lt;/h2&gt;
&lt;p&gt;The &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; directives cannot capture locations that include the &lt;a href="http://nginx.org/en/docs/http/ngx_http_addition_module.html#add_before_body" rel="nofollow"&gt;add_before_body&lt;/a&gt;, &lt;a href="http://nginx.org/en/docs/http/ngx_http_addition_module.html#add_after_body" rel="nofollow"&gt;add_after_body&lt;/a&gt;, &lt;a href="https://nginx.org/en/docs/http/ngx_http_auth_request_module.html#auth_request" rel="nofollow"&gt;auth_request&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_location"&gt;echo_location&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_location_async"&gt;echo_location_async&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_subrequest"&gt;echo_subrequest&lt;/a&gt;, or &lt;a href="http://github.com/openresty/echo-nginx-module#echo_subrequest_async"&gt;echo_subrequest_async&lt;/a&gt; directives.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/bar"&lt;/span&gt;)
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/bar &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo_location&lt;/span&gt; /blah;
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/blah &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"Success!"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; $ &lt;span class="pl-k"&gt;curl&lt;/span&gt; -i http://example.com/foo&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will not work as expected.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cosockets-not-available-everywhere" class="anchor" aria-hidden="true" href="#cosockets-not-available-everywhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cosockets Not Available Everywhere&lt;/h2&gt;
&lt;p&gt;Due to internal limitations in the Nginx core, the cosocket API is disabled in the following contexts: &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt;, &lt;a href="#log_by_lua"&gt;log_by_lua*&lt;/a&gt;, &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, and &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The cosockets are currently also disabled in the &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; and &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt; directive contexts but we may add support for these contexts in the future because there is no limitation in the Nginx core (or the limitation might be worked around).&lt;/p&gt;
&lt;p&gt;There exists a workaround, however, when the original context does &lt;em&gt;not&lt;/em&gt; need to wait for the cosocket results. That is, creating a zero-delay timer via the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API and do the cosocket results in the timer handler, which runs asynchronously as to the original context creating the timer.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-special-escaping-sequences" class="anchor" aria-hidden="true" href="#special-escaping-sequences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Escaping Sequences&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Following the &lt;code&gt;v0.9.17&lt;/code&gt; release, this pitfall can be avoided by using the &lt;code&gt;*_by_lua_block {}&lt;/code&gt; configuration directives.&lt;/p&gt;
&lt;p&gt;PCRE sequences such as &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt;, or &lt;code&gt;\w&lt;/code&gt;, require special attention because in string literals, the backslash character, &lt;code&gt;\&lt;/code&gt;, is stripped out by both the Lua language parser and by the Nginx config file parser before processing if not within a &lt;code&gt;*_by_lua_block {}&lt;/code&gt; directive. So the following snippet will not work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 ? &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
 ?     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         local regex = "\d+"  -- THIS IS WRONG OUTSIDE OF A *_by_lua_block DIRECTIVE&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt; ?     '&lt;/span&gt;;
 ? }
 &lt;span class="pl-c"&gt;# evaluates to "not matched!"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid this, &lt;em&gt;double&lt;/em&gt; escape the backslash:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = "\\\\d+"&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, &lt;code&gt;\\\\d+&lt;/code&gt; is stripped down to &lt;code&gt;\\d+&lt;/code&gt; by the Nginx config file parser and this is further stripped down to &lt;code&gt;\d+&lt;/code&gt; by the Lua language parser before running.&lt;/p&gt;
&lt;p&gt;Alternatively, the regex pattern can be presented as a long-bracketed Lua string literal by encasing it in "long brackets", &lt;code&gt;[[...]]&lt;/code&gt;, in which case backslashes have to only be escaped once for the Nginx config file parser.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = [[\\d+]]&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, &lt;code&gt;[[\\d+]]&lt;/code&gt; is stripped down to &lt;code&gt;[[\d+]]&lt;/code&gt; by the Nginx config file parser and this is processed correctly.&lt;/p&gt;
&lt;p&gt;Note that a longer from of the long bracket, &lt;code&gt;[=[...]=]&lt;/code&gt;, may be required if the regex pattern contains &lt;code&gt;[...]&lt;/code&gt; sequences.
The &lt;code&gt;[=[...]=]&lt;/code&gt; form may be used as the default form if desired.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = [=[[0-9]+]=]&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternative approach to escaping PCRE sequences is to ensure that Lua code is placed in external script files and executed using the various &lt;code&gt;*_by_lua_file&lt;/code&gt; directives.
With this approach, the backslashes are only stripped by the Lua language parser and therefore only need to be escaped once each.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; test.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; regex &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;d+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, regex)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Within external script files, PCRE sequences presented as long-bracketed Lua string literals do not require modification.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; test.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; regex &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;[[&lt;/span&gt;\d+&lt;span class="pl-pds"&gt;]]&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, regex)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As noted earlier, PCRE sequences presented within &lt;code&gt;*_by_lua_block {}&lt;/code&gt; directives (available following the &lt;code&gt;v0.9.17&lt;/code&gt; release) do not require modification.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; regex = [[\d+]]
         &lt;span class="pl-k"&gt;local&lt;/span&gt; m = ngx.re.match(&lt;span class="pl-s"&gt;"hello, 1234"&lt;/span&gt;, regex)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; m then ngx.say(m[0]) else ngx.say(&lt;span class="pl-s"&gt;"not matched!"&lt;/span&gt;) end
     }
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mixing-with-ssi-not-supported" class="anchor" aria-hidden="true" href="#mixing-with-ssi-not-supported"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mixing with SSI Not Supported&lt;/h2&gt;
&lt;p&gt;Mixing SSI with ngx_lua in the same Nginx request is not supported at all. Just use ngx_lua exclusively. Everything you can do with SSI can be done atop ngx_lua anyway and it can be more efficient when using ngx_lua.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-spdy-mode-not-fully-supported" class="anchor" aria-hidden="true" href="#spdy-mode-not-fully-supported"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SPDY Mode Not Fully Supported&lt;/h2&gt;
&lt;p&gt;Certain Lua APIs provided by ngx_lua do not work in Nginx's SPDY mode yet: &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;, &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-missing-data-on-short-circuited-requests" class="anchor" aria-hidden="true" href="#missing-data-on-short-circuited-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Missing data on short circuited requests&lt;/h2&gt;
&lt;p&gt;Nginx may terminate a request early with (at least):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;400 (Bad Request)&lt;/li&gt;
&lt;li&gt;405 (Not Allowed)&lt;/li&gt;
&lt;li&gt;408 (Request Timeout)&lt;/li&gt;
&lt;li&gt;413 (Request Entity Too Large)&lt;/li&gt;
&lt;li&gt;414 (Request URI Too Large)&lt;/li&gt;
&lt;li&gt;494 (Request Headers Too Large)&lt;/li&gt;
&lt;li&gt;499 (Client Closed Request)&lt;/li&gt;
&lt;li&gt;500 (Internal Server Error)&lt;/li&gt;
&lt;li&gt;501 (Not Implemented)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means that phases that normally run are skipped, such as the rewrite or
access phase. This also means that later phases that are run regardless, e.g.
&lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;, will not have access to information that is normally set in those
phases.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;cosocket: implement LuaSocket's unconnected UDP API.&lt;/li&gt;
&lt;li&gt;cosocket: add support in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;cosocket: implement the &lt;code&gt;bind()&lt;/code&gt; method for stream-typed cosockets.&lt;/li&gt;
&lt;li&gt;cosocket: review and merge aviramc's &lt;a href="https://github.com/openresty/lua-nginx-module/pull/290"&gt;patch&lt;/a&gt; for adding the &lt;code&gt;bsdrecv&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;cosocket: add configure options for different strategies of handling the cosocket connection exceeding in the pools.&lt;/li&gt;
&lt;li&gt;review and apply vadim-pavlov's patch for &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;'s &lt;code&gt;extra_headers&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;ngx_hash_t&lt;/code&gt; to optimize the built-in header look-up process for &lt;a href="#ngxreqset_header"&gt;ngx.req.set_header&lt;/a&gt;, &lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt;, and etc.&lt;/li&gt;
&lt;li&gt;add directives to run Lua codes when Nginx stops.&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;ignore_resp_headers&lt;/code&gt;, &lt;code&gt;ignore_resp_body&lt;/code&gt;, and &lt;code&gt;ignore_resp&lt;/code&gt; options to &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; methods, to allow micro performance tuning on the user side.&lt;/li&gt;
&lt;li&gt;add automatic Lua code time slicing support by yielding and resuming the Lua VM actively via Lua's debug hooks.&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;stat&lt;/code&gt; mode similar to &lt;a href="https://httpd.apache.org/docs/trunk/mod/mod_lua.html" rel="nofollow"&gt;mod_lua&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;cosocket: add client SSL certificate support.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-changes" class="anchor" aria-hidden="true" href="#changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changes&lt;/h1&gt;
&lt;p&gt;The changes made in every release of this module are listed in the change logs of the OpenResty bundle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/#Changes" rel="nofollow"&gt;https://openresty.org/#Changes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-test-suite" class="anchor" aria-hidden="true" href="#test-suite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test Suite&lt;/h1&gt;
&lt;p&gt;The following dependencies are required to run the test suite:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Nginx version &amp;gt;= 1.4.2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perl modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Test::Nginx: &lt;a href="https://github.com/openresty/test-nginx"&gt;https://github.com/openresty/test-nginx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nginx modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/set-misc-nginx-module"&gt;ngx_set_misc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mdounin.ru/files/ngx_http_auth_request_module-0.2.tar.gz" rel="nofollow"&gt;ngx_auth_request&lt;/a&gt; (this is not needed if you're using Nginx 1.5.4+.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/echo-nginx-module"&gt;ngx_echo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/memc-nginx-module"&gt;ngx_memc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/srcache-nginx-module"&gt;ngx_srcache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ngx_lua (i.e., this module)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-upstream-nginx-module"&gt;ngx_lua_upstream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/headers-more-nginx-module"&gt;ngx_headers_more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/drizzle-nginx-module"&gt;ngx_drizzle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/rds-json-nginx-module"&gt;ngx_rds_json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_coolkit"&gt;ngx_coolkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/redis2-nginx-module"&gt;ngx_redis2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The order in which these modules are added during configuration is important because the position of any filter module in the
filtering chain determines the final output, for example. The correct adding order is shown above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;3rd-party Lua libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" rel="nofollow"&gt;lua-cjson&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Applications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mysql: create database 'ngx_test', grant all privileges to user 'ngx_test', password is 'ngx_test'&lt;/li&gt;
&lt;li&gt;memcached: listening on the default port, 11211.&lt;/li&gt;
&lt;li&gt;redis: listening on the default port, 6379.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See also the &lt;a href="https://github.com/openresty/lua-nginx-module/blob/master/util/build.sh"&gt;developer build script&lt;/a&gt; for more details on setting up the testing environment.&lt;/p&gt;
&lt;p&gt;To run the whole test suite in the default testing mode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /path/to/lua-nginx-module
export PATH=/path/to/your/nginx/sbin:$PATH
prove -I/path/to/test-nginx/lib -r t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run specific test files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /path/to/lua-nginx-module
export PATH=/path/to/your/nginx/sbin:$PATH
prove -I/path/to/test-nginx/lib t/002-content.t t/003-errors.t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run a specific test block in a particular test file, add the line &lt;code&gt;--- ONLY&lt;/code&gt; to the test block you want to run, and then use the &lt;code&gt;prove&lt;/code&gt; utility to run that &lt;code&gt;.t&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;There are also various testing modes based on mockeagain, valgrind, and etc. Refer to the &lt;a href="https://search.cpan.org/perldoc?Test::Nginx" rel="nofollow"&gt;Test::Nginx documentation&lt;/a&gt; for more details for various advanced testing modes. See also the test reports for the Nginx test cluster running on Amazon EC2: &lt;a href="https://qa.openresty.org" rel="nofollow"&gt;https://qa.openresty.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h1&gt;
&lt;p&gt;This module is licensed under the BSD license.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2009-2017, by Xiaozhe Wang (chaoslawful) &lt;a href="mailto:chaoslawful@gmail.com"&gt;chaoslawful@gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2009-2019, by Yichun "agentzh" Zhang (章亦春) &lt;a href="mailto:agentzh@gmail.com"&gt;agentzh@gmail.com&lt;/a&gt;, OpenResty Inc.&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See Also&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua_module&lt;/a&gt; for an official port of this module for the Nginx "stream" subsystem (doing generic downstream TCP communications).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-memcached"&gt;lua-resty-memcached&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-redis"&gt;lua-resty-redis&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-mysql"&gt;lua-resty-mysql&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-upload"&gt;lua-resty-upload&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-dns"&gt;lua-resty-dns&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket&lt;/a&gt; library for both WebSocket server and client, based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-string"&gt;lua-resty-string&lt;/a&gt; library based on &lt;a href="https://luajit.org/ext_ffi.html" rel="nofollow"&gt;LuaJIT FFI&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lock"&gt;lua-resty-lock&lt;/a&gt; library for a nonblocking simple lock API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cloudflare/lua-resty-cookie"&gt;lua-resty-cookie&lt;/a&gt; library for HTTP cookie manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#RoutingMySQLQueriesBasedOnURIArgs" rel="nofollow"&gt;Routing requests to different MySQL queries based on URI arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#DynamicRoutingBasedOnRedis" rel="nofollow"&gt;Dynamic Routing Based on Redis and Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#UsingLuaRocks" rel="nofollow"&gt;Using LuaRocks with ngx_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-nginx-module/wiki/Introduction"&gt;Introduction to ngx_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/echo-nginx-module"&gt;echo-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/drizzle-nginx-module"&gt;drizzle-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_postgres"&gt;postgres-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/memc-nginx-module"&gt;memc-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org" rel="nofollow"&gt;The OpenResty bundle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/nginx-systemtap-toolkit"&gt;Nginx Systemtap Toolkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-directives" class="anchor" aria-hidden="true" href="#directives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Directives&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#lua_load_resty_core"&gt;lua_load_resty_core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_capture_error_log"&gt;lua_capture_error_log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_use_default_type"&gt;lua_use_default_type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_malloc_trim"&gt;lua_malloc_trim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_regex_cache_max_entries"&gt;lua_regex_cache_max_entries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_regex_match_limit"&gt;lua_regex_match_limit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_package_path"&gt;lua_package_path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_package_cpath"&gt;lua_package_cpath&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua_block"&gt;init_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua_file"&gt;init_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua_block"&gt;init_worker_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua_file"&gt;init_worker_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua_block"&gt;set_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua_block"&gt;content_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_block"&gt;rewrite_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_file"&gt;rewrite_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_block"&gt;access_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_file"&gt;access_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua_block"&gt;header_filter_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua_file"&gt;header_filter_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua_block"&gt;body_filter_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua_file"&gt;body_filter_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua_block"&gt;log_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua_file"&gt;log_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#balancer_by_lua_file"&gt;balancer_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_certificate_by_lua_file"&gt;ssl_certificate_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_fetch_by_lua_file"&gt;ssl_session_fetch_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_store_by_lua_file"&gt;ssl_session_store_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_send_lowat"&gt;lua_socket_send_lowat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_buffer_size"&gt;lua_socket_buffer_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_log_errors"&gt;lua_socket_log_errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_ciphers"&gt;lua_ssl_ciphers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_crl"&gt;lua_ssl_crl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_protocols"&gt;lua_ssl_protocols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_no_postpone"&gt;access_by_lua_no_postpone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_transform_underscores_in_response_headers"&gt;lua_transform_underscores_in_response_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_sa_restart"&gt;lua_sa_restart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The basic building blocks of scripting Nginx with Lua are directives. Directives are used to specify when the user Lua code is run and
how the result will be used. Below is a diagram showing the order in which directives are executed.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/2137369/15272097/77d1c09e-1a37-11e6-97ef-d9767035fc3e.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2137369/15272097/77d1c09e-1a37-11e6-97ef-d9767035fc3e.png" alt="Lua Nginx Modules Directives" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_load_resty_core" class="anchor" aria-hidden="true" href="#lua_load_resty_core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_load_resty_core&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_load_resty_core on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_load_resty_core on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive is deprecated since the &lt;code&gt;v0.10.16&lt;/code&gt; release of this
module. The &lt;code&gt;resty.core&lt;/code&gt; module from
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; is now mandatorily
loaded during the Lua VM initialization. Specifying this directive will have no
effect.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.15&lt;/code&gt; release and
used to optionally load the &lt;code&gt;resty.core&lt;/code&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_capture_error_log" class="anchor" aria-hidden="true" href="#lua_capture_error_log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_capture_error_log&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_capture_error_log size&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;none&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables a buffer of the specified &lt;code&gt;size&lt;/code&gt; for capturing all the Nginx error log message data (not just those produced
by this module or the Nginx http subsystem, but everything) without touching files or disks.&lt;/p&gt;
&lt;p&gt;You can use units like &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;m&lt;/code&gt; in the &lt;code&gt;size&lt;/code&gt; value, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_capture_error_log&lt;/span&gt; 100k;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a rule of thumb, a 4KB buffer can usually hold about 20 typical error log messages. So do the maths!&lt;/p&gt;
&lt;p&gt;This buffer never grows. If it is full, new error log messages will replace the oldest ones in the buffer.&lt;/p&gt;
&lt;p&gt;The size of the buffer must be bigger than the maximum length of a single error log message (which is 4K in OpenResty and 2K in stock NGINX).&lt;/p&gt;
&lt;p&gt;You can read the messages in the buffer on the Lua land via the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#get_logs"&gt;get_logs()&lt;/a&gt;
function of the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#readme"&gt;ngx.errlog&lt;/a&gt;
module of the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#readme"&gt;lua-resty-core&lt;/a&gt;
library. This Lua API function will return the captured error log messages and
also remove these already read from the global capturing buffer, making room
for any new error log data. For this reason, the user should not configure this
buffer to be too big if the user read the buffered error log data fast enough.&lt;/p&gt;
&lt;p&gt;Note that the log level specified in the standard &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive
&lt;em&gt;does&lt;/em&gt; have effect on this capturing facility. It only captures log
messages of a level no lower than the specified log level in the &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive.
The user can still choose to set an even higher filtering log level on the fly via the Lua API function
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#set_filter_level"&gt;errlog.set_filter_level&lt;/a&gt;.
So it is more flexible than the static &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;It is worth noting that there is no way to capture the debugging logs
without building OpenResty or Nginx with the &lt;code&gt;./configure&lt;/code&gt;
option &lt;code&gt;--with-debug&lt;/code&gt;. And enabling debugging logs is
strongly discouraged in production builds due to high overhead.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_use_default_type" class="anchor" aria-hidden="true" href="#lua_use_default_type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_use_default_type&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_use_default_type on | off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_use_default_type on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies whether to use the MIME type specified by the &lt;a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#default_type" rel="nofollow"&gt;default_type&lt;/a&gt; directive for the default value of the &lt;code&gt;Content-Type&lt;/code&gt; response header. Deactivate this directive if a default &lt;code&gt;Content-Type&lt;/code&gt; response header for Lua request handlers is not desired.&lt;/p&gt;
&lt;p&gt;This directive is turned on by default.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_malloc_trim" class="anchor" aria-hidden="true" href="#lua_malloc_trim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_malloc_trim&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_malloc_trim &amp;lt;request-count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_malloc_trim 1000&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Asks the underlying &lt;code&gt;libc&lt;/code&gt; runtime library to release its cached free memory back to the operating system every
&lt;code&gt;N&lt;/code&gt; requests processed by the Nginx core. By default, &lt;code&gt;N&lt;/code&gt; is 1000. You can configure the request count
by using your own numbers. Smaller numbers mean more frequent releases, which may introduce higher CPU time consumption and
smaller memory footprint while larger numbers usually lead to less CPU time overhead and relatively larger memory footprint.
Just tune the number for your own use cases.&lt;/p&gt;
&lt;p&gt;Configuring the argument to &lt;code&gt;0&lt;/code&gt; essentially turns off the periodical memory trimming altogether.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_malloc_trim&lt;/span&gt; 0;  &lt;span class="pl-c"&gt;# turn off trimming completely&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The current implementation uses an Nginx log phase handler to do the request counting. So the appearance of the
&lt;a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#log_subrequest" rel="nofollow"&gt;log_subrequest on&lt;/a&gt; directives in &lt;code&gt;nginx.conf&lt;/code&gt;
may make the counting faster when subrequests are involved. By default, only "main requests" count.&lt;/p&gt;
&lt;p&gt;Note that this directive does &lt;em&gt;not&lt;/em&gt; affect the memory allocated by LuaJIT's own allocator based on the &lt;code&gt;mmap&lt;/code&gt;
system call.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_code_cache" class="anchor" aria-hidden="true" href="#lua_code_cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_code_cache&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_code_cache on | off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_code_cache on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables or disables the Lua code cache for Lua code in &lt;code&gt;*_by_lua_file&lt;/code&gt; directives (like &lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt; and
&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;) and Lua modules.&lt;/p&gt;
&lt;p&gt;When turning off, every request served by ngx_lua will run in a separate Lua VM instance, starting from the &lt;code&gt;0.9.3&lt;/code&gt; release. So the Lua files referenced in &lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt;,
&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;, &lt;a href="#access_by_lua_file"&gt;access_by_lua_file&lt;/a&gt;,
and etc will not be cached
and all Lua modules used will be loaded from scratch. With this in place, developers can adopt an edit-and-refresh approach.&lt;/p&gt;
&lt;p&gt;Please note however, that Lua code written inlined within nginx.conf
such as those specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;, &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;,
&lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, and &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; will not be updated when you edit the inlined Lua code in your &lt;code&gt;nginx.conf&lt;/code&gt; file because only the Nginx config file parser can correctly parse the &lt;code&gt;nginx.conf&lt;/code&gt;
file and the only way is to reload the config file
by sending a &lt;code&gt;HUP&lt;/code&gt; signal or just to restart Nginx.&lt;/p&gt;
&lt;p&gt;Even when the code cache is enabled, Lua files which are loaded by &lt;code&gt;dofile&lt;/code&gt; or &lt;code&gt;loadfile&lt;/code&gt;
in *_by_lua_file cannot be cached (unless you cache the results yourself). Usually you can either use the &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;
or &lt;a href="#init-by_lua_file"&gt;init_by_lua_file&lt;/a&gt; directives to load all such files or just make these Lua files true Lua modules
and load them via &lt;code&gt;require&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The ngx_lua module does not support the &lt;code&gt;stat&lt;/code&gt; mode available with the
Apache &lt;code&gt;mod_lua&lt;/code&gt; module (yet).&lt;/p&gt;
&lt;p&gt;Disabling the Lua code cache is strongly
discouraged for production use and should only be used during
development as it has a significant negative impact on overall performance. For example, the performance of a "hello world" Lua example can drop by an order of magnitude after disabling the Lua code cache.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_regex_cache_max_entries" class="anchor" aria-hidden="true" href="#lua_regex_cache_max_entries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_regex_cache_max_entries&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_regex_cache_max_entries &amp;lt;num&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_regex_cache_max_entries 1024&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the maximum number of entries allowed in the worker process level compiled regex cache.&lt;/p&gt;
&lt;p&gt;The regular expressions used in &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;, &lt;a href="#ngxregmatch"&gt;ngx.re.gmatch&lt;/a&gt;, &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;, and &lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt; will be cached within this cache if the regex option &lt;code&gt;o&lt;/code&gt; (i.e., compile-once flag) is specified.&lt;/p&gt;
&lt;p&gt;The default number of entries allowed is 1024 and when this limit is reached, new regular expressions will not be cached (as if the &lt;code&gt;o&lt;/code&gt; option was not specified) and there will be one, and only one, warning in the &lt;code&gt;error.log&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2011/08/27 23:18:26 [warn] 31997#0: *1 lua exceeding regex cache max entries (1024), ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using the &lt;code&gt;ngx.re.*&lt;/code&gt; implementation of &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; by loading the &lt;code&gt;resty.core.regex&lt;/code&gt; module (or just the &lt;code&gt;resty.core&lt;/code&gt; module), then an LRU cache is used for the regex cache being used here.&lt;/p&gt;
&lt;p&gt;Do not activate the &lt;code&gt;o&lt;/code&gt; option for regular expressions (and/or &lt;code&gt;replace&lt;/code&gt; string arguments for &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt; and &lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt;) that are generated &lt;em&gt;on the fly&lt;/em&gt; and give rise to infinite variations to avoid hitting the specified limit.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_regex_match_limit" class="anchor" aria-hidden="true" href="#lua_regex_match_limit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_regex_match_limit&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_regex_match_limit &amp;lt;num&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_regex_match_limit 0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the "match limit" used by the PCRE library when executing the &lt;a href="#ngxrematch"&gt;ngx.re API&lt;/a&gt;. To quote the PCRE manpage, "the limit ... has the effect of limiting the amount of backtracking that can take place."&lt;/p&gt;
&lt;p&gt;When the limit is hit, the error string "pcre_exec() failed: -8" will be returned by the &lt;a href="#ngxrematch"&gt;ngx.re API&lt;/a&gt; functions on the Lua land.&lt;/p&gt;
&lt;p&gt;When setting the limit to 0, the default "match limit" when compiling the PCRE library is used. And this is the default value of this directive.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_package_path" class="anchor" aria-hidden="true" href="#lua_package_path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_package_path&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_package_path &amp;lt;lua-style-path-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;The content of LUA_PATH environment variable or Lua's compiled-in defaults.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the Lua module search path used by scripts specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;,
&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; and others. The path string is in standard Lua path form, and &lt;code&gt;;;&lt;/code&gt;
can be used to stand for the original search paths.&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, the special notation &lt;code&gt;$prefix&lt;/code&gt; or &lt;code&gt;${prefix}&lt;/code&gt; can be used in the search path string to indicate the path of the &lt;code&gt;server prefix&lt;/code&gt; usually determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_package_cpath" class="anchor" aria-hidden="true" href="#lua_package_cpath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_package_cpath&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_package_cpath &amp;lt;lua-style-cpath-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;The content of LUA_CPATH environment variable or Lua's compiled-in defaults.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the Lua C-module search path used by scripts specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;,
&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; and others. The cpath string is in standard Lua cpath form, and &lt;code&gt;;;&lt;/code&gt;
can be used to stand for the original cpath.&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, the special notation &lt;code&gt;$prefix&lt;/code&gt; or &lt;code&gt;${prefix}&lt;/code&gt; can be used in the search path string to indicate the path of the &lt;code&gt;server prefix&lt;/code&gt; usually determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua" class="anchor" aria-hidden="true" href="#init_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#init_by_lua_block"&gt;init_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the Lua code specified by the argument &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; on the global Lua VM level when the Nginx master process (if any) is loading the Nginx config file.&lt;/p&gt;
&lt;p&gt;When Nginx receives the &lt;code&gt;HUP&lt;/code&gt; signal and starts reloading the config file, the Lua VM will also be re-created and &lt;code&gt;init_by_lua&lt;/code&gt; will run again on the new Lua VM. In case that the &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; directive is turned off (default on), the &lt;code&gt;init_by_lua&lt;/code&gt; handler will run upon every request because in this special mode a standalone Lua VM is always created for each request.&lt;/p&gt;
&lt;p&gt;Usually you can pre-load Lua modules at server start-up by means of this hook and take advantage of modern operating systems' copy-on-write (COW) optimization. Here is an example for pre-loading Lua modules:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# this runs before forking out nginx worker processes:&lt;/span&gt;
 &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; { require &lt;span class="pl-s"&gt;"cjson"&lt;/span&gt; }

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /api &lt;/span&gt;{
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             -- &lt;span class="pl-k"&gt;the&lt;/span&gt; following require() will just  return
             -- &lt;span class="pl-k"&gt;the&lt;/span&gt; alrady loaded module from package.loaded:
             ngx.say(&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;"cjson"&lt;/span&gt;.encode{dog = 5, cat = 6})
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also initialize the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; shm storage at this phase. Here is an example for this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;1m&lt;/span&gt;;

 &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; {
     &lt;span class="pl-k"&gt;local&lt;/span&gt; dogs = ngx.shared.dogs;
     dogs:&lt;span class="pl-k"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;"Tom"&lt;/span&gt;, 56)
 }

 server {
     location = /api {
         content_by_lua_block {
             local dogs = ngx.shared.dogs;
             ngx.say(dogs:get("Tom"))
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But note that, the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt;'s shm storage will not be cleared through a config reload (via the &lt;code&gt;HUP&lt;/code&gt; signal, for example). So if you do &lt;em&gt;not&lt;/em&gt; want to re-initialize the shm storage in your &lt;code&gt;init_by_lua&lt;/code&gt; code in this case, then you just need to set a custom flag in the shm storage and always check the flag in your &lt;code&gt;init_by_lua&lt;/code&gt; code.&lt;/p&gt;
&lt;p&gt;Because the Lua code in this context runs before Nginx forks its worker processes (if any), data or code loaded here will enjoy the &lt;a href="https://en.wikipedia.org/wiki/Copy-on-write" rel="nofollow"&gt;Copy-on-write (COW)&lt;/a&gt; feature provided by many operating systems among all the worker processes, thus saving a lot of memory.&lt;/p&gt;
&lt;p&gt;Do &lt;em&gt;not&lt;/em&gt; initialize your own Lua global variables in this context because use of Lua global variables have performance penalties and can lead to global namespace pollution (see the &lt;a href="#lua-variable-scope"&gt;Lua Variable Scope&lt;/a&gt; section for more details). The recommended way is to use proper &lt;a href="https://www.lua.org/manual/5.1/manual.html#5.3" rel="nofollow"&gt;Lua module&lt;/a&gt; files (but do not use the standard Lua function &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-module" rel="nofollow"&gt;module()&lt;/a&gt; to define Lua modules because it pollutes the global namespace as well) and call &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-require" rel="nofollow"&gt;require()&lt;/a&gt; to load your own module files in &lt;code&gt;init_by_lua&lt;/code&gt; or other contexts (&lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-require" rel="nofollow"&gt;require()&lt;/a&gt; does cache the loaded Lua modules in the global &lt;code&gt;package.loaded&lt;/code&gt; table in the Lua registry so your modules will only loaded once for the whole Lua VM instance).&lt;/p&gt;
&lt;p&gt;Only a small set of the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; is supported in this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logging APIs: &lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt; and &lt;a href="#print"&gt;print&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Shared Dictionary API: &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More Nginx APIs for Lua may be supported in this context upon future user requests.&lt;/p&gt;
&lt;p&gt;Basically you can safely use Lua libraries that do blocking I/O in this very context because blocking the master process during server start-up is completely okay. Even the Nginx core does blocking I/O (at least on resolving upstream's host names) at the configure-loading phase.&lt;/p&gt;
&lt;p&gt;You should be very careful about potential security vulnerabilities in your Lua code registered in this context because the Nginx master process is often run under the &lt;code&gt;root&lt;/code&gt; account.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua_block" class="anchor" aria-hidden="true" href="#init_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua_file" class="anchor" aria-hidden="true" href="#init_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code or &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua" class="anchor" aria-hidden="true" href="#init_worker_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#init_worker_by_lua_block"&gt;init_worker_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the specified Lua code upon every Nginx worker process's startup when the master process is enabled. When the master process is disabled, this hook will just run after &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This hook is often used to create per-worker reoccurring timers (via the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; Lua API), either for backend health-check or other timed routine work. Below is an example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_worker_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;     local delay = 3  -- in seconds&lt;/span&gt;
&lt;span class="pl-s"&gt;     local new_timer = ngx.timer.at&lt;/span&gt;
&lt;span class="pl-s"&gt;     local log = ngx.log&lt;/span&gt;
&lt;span class="pl-s"&gt;     local ERR = ngx.ERR&lt;/span&gt;
&lt;span class="pl-s"&gt;     local check&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     check = function(premature)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if not premature then&lt;/span&gt;
&lt;span class="pl-s"&gt;             -- do the health check or other routine work&lt;/span&gt;
&lt;span class="pl-s"&gt;             local ok, err = new_timer(delay, check)&lt;/span&gt;
&lt;span class="pl-s"&gt;             if not ok then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log(ERR, "failed to create timer: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 return&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     local hdl, err = new_timer(delay, check)&lt;/span&gt;
&lt;span class="pl-s"&gt;     if not hdl then&lt;/span&gt;
&lt;span class="pl-s"&gt;         log(ERR, "failed to create timer: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;         return&lt;/span&gt;
&lt;span class="pl-s"&gt;     end&lt;/span&gt;
&lt;span class="pl-s"&gt; '&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua_block" class="anchor" aria-hidden="true" href="#init_worker_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_worker_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua_file" class="anchor" aria-hidden="true" href="#init_worker_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua_file &amp;lt;lua-file-path&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;, but accepts the file path to a Lua source file or Lua bytecode file.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua" class="anchor" aria-hidden="true" href="#set_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua $res &amp;lt;lua-script-str&amp;gt; [$arg1 $arg2 ...]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#set_by_lua_block"&gt;set_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Executes code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; with optional input arguments &lt;code&gt;$arg1 $arg2 ...&lt;/code&gt;, and returns string output to &lt;code&gt;$res&lt;/code&gt;.
The code in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; can make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and can retrieve input arguments from the &lt;code&gt;ngx.arg&lt;/code&gt; table (index starts from &lt;code&gt;1&lt;/code&gt; and increases sequentially).&lt;/p&gt;
&lt;p&gt;This directive is designed to execute short, fast running code blocks as the Nginx event loop is blocked during code execution. Time consuming code sequences should therefore be avoided.&lt;/p&gt;
&lt;p&gt;This directive is implemented by injecting custom commands into the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s command list. Because &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt; does not support nonblocking I/O in its commands, Lua APIs requiring yielding the current Lua "light thread" cannot work in this directive.&lt;/p&gt;
&lt;p&gt;At least the following API functions are currently disabled within the context of &lt;code&gt;set_by_lua&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Sleeping API function &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, note that this directive can only write out a value to a single Nginx variable at
a time. However, a workaround is possible using the &lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt; interface.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$diff&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# we have to predefine the $diff variable here&lt;/span&gt;

     &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$sum&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local a = 32&lt;/span&gt;
&lt;span class="pl-s"&gt;         local b = 56&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.var.diff = a - b;  -- write to &lt;span class="pl-smi"&gt;$diff&lt;/span&gt; directly&lt;/span&gt;
&lt;span class="pl-s"&gt;         return a + b;          -- return the &lt;span class="pl-smi"&gt;$sum&lt;/span&gt; value normally&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"sum = &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;, diff = &lt;span class="pl-smi"&gt;$diff&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive can be freely mixed with all directives of the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;, &lt;a href="http://github.com/openresty/set-misc-nginx-module"&gt;set-misc-nginx-module&lt;/a&gt;, and &lt;a href="http://github.com/openresty/array-var-nginx-module"&gt;array-var-nginx-module&lt;/a&gt; modules. All of these directives will run in the same order as they appear in the config file.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$foo&lt;/span&gt; &lt;span class="pl-s"&gt;32&lt;/span&gt;;
 &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$bar&lt;/span&gt; &lt;span class="pl-s"&gt;'return tonumber(ngx.var.foo) + 1'&lt;/span&gt;;
 &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$baz&lt;/span&gt; &lt;span class="pl-s"&gt;"bar: &lt;span class="pl-smi"&gt;$bar&lt;/span&gt;"&lt;/span&gt;;  &lt;span class="pl-c"&gt;# $baz == "bar: 33"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, Nginx variable interpolation is disabled in the &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; argument of this directive and therefore, the dollar sign character (&lt;code&gt;$&lt;/code&gt;) can be used directly.&lt;/p&gt;
&lt;p&gt;This directive requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua_block" class="anchor" aria-hidden="true" href="#set_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua_block $res { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt; directive except that&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;this directive inlines the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping), and&lt;/li&gt;
&lt;li&gt;this directive does not support extra arguments after the Lua script as in &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;set_by_lua_block&lt;/span&gt; &lt;span class="pl-smi"&gt;$res&lt;/span&gt; { return &lt;span class="pl-s"&gt;32&lt;/span&gt; + math.cos(32) }
 &lt;span class="pl-c"&gt;# $res now has the value "32.834223360507" or alike.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No special escaping is required in the Lua code block.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua_file" class="anchor" aria-hidden="true" href="#set_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua_file $res &amp;lt;path-to-lua-script-file&amp;gt; [$arg1 $arg2 ...]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variable interpolation is supported in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; argument string of this directive. But special care must be taken for injection attacks.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by
switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;This directive requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua" class="anchor" aria-hidden="true" href="#content_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#content_by_lua_block"&gt;content_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as a "content handler" and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Do not use this directive and other content handler directives in the same location. For example, this directive and the &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass" rel="nofollow"&gt;proxy_pass&lt;/a&gt; directive should not be used in the same location.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua_block" class="anchor" aria-hidden="true" href="#content_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
     ngx.say("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua_file" class="anchor" aria-hidden="true" href="#content_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by
switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# CAUTION: contents in nginx var must be carefully filtered,&lt;/span&gt;
 &lt;span class="pl-c"&gt;# otherwise there'll be great security risk!&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; ~ &lt;span class="pl-sr"&gt;^/app/([-_a-zA-Z0-9/]+) &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$path&lt;/span&gt; &lt;span class="pl-smi"&gt;$1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_file&lt;/span&gt; /path/to/lua/app/root/&lt;span class="pl-smi"&gt;$path&lt;/span&gt;.lua;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But be very careful about malicious user inputs and always carefully validate or filter out the user-supplied path components.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua" class="anchor" aria-hidden="true" href="#rewrite_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#rewrite_by_lua_block"&gt;rewrite_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as a rewrite phase handler and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Note that this handler always runs &lt;em&gt;after&lt;/em&gt; the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;. So the following will work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;""&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.var.b = tonumber(ngx.var.a) + 1'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;because &lt;code&gt;set $a 12&lt;/code&gt; and &lt;code&gt;set $b ""&lt;/code&gt; run &lt;em&gt;before&lt;/em&gt; &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, the following will not work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ?  &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
 ?      &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
 ?      &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
 ?      &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.var.b = tonumber(ngx.var.a) + 1'&lt;/span&gt;;
 ?      &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;$b&lt;/span&gt; = &lt;span class="pl-s"&gt;'13'&lt;/span&gt;) {
 ?         &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/bar redirect;
 ?         &lt;span class="pl-c1"&gt;break&lt;/span&gt;;
 ?      }
 ?
 ?      &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 ?  }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;because &lt;code&gt;if&lt;/code&gt; runs &lt;em&gt;before&lt;/em&gt; &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; even if it is placed after &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; in the config.&lt;/p&gt;
&lt;p&gt;The right way of doing this is as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.var.b = tonumber(ngx.var.a) + 1&lt;/span&gt;
&lt;span class="pl-s"&gt;         if tonumber(ngx.var.b) == 13 then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return ngx.redirect("/bar");&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;a href="http://www.grid.net.ru/nginx/eval.en.html" rel="nofollow"&gt;ngx_eval&lt;/a&gt; module can be approximated by using &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;eval&lt;/span&gt; &lt;span class="pl-smi"&gt;$res&lt;/span&gt; {
         &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://foo.com/check-spam;
     }

     &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;$res&lt;/span&gt; = &lt;span class="pl-s"&gt;'spam'&lt;/span&gt;) {
         &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/terms-of-use.html redirect;
     }

     &lt;span class="pl-k"&gt;fastcgi_pass&lt;/span&gt; ...;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be implemented in ngx_lua as:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /check-spam &lt;/span&gt;{
     &lt;span class="pl-k"&gt;internal&lt;/span&gt;;
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://foo.com/check-spam;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/check-spam")&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.body == "spam" then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return ngx.redirect("/terms-of-use.html")&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;fastcgi_pass&lt;/span&gt; ...;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just as any other rewrite phase handlers, &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; also runs in subrequests.&lt;/p&gt;
&lt;p&gt;Note that when calling &lt;code&gt;ngx.exit(ngx.OK)&lt;/code&gt; within a &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler, the Nginx request processing control flow will still continue to the content handler. To terminate the current request from within a &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler, calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with status &amp;gt;= 200 (&lt;code&gt;ngx.HTTP_OK&lt;/code&gt;) and status &amp;lt; 300 (&lt;code&gt;ngx.HTTP_SPECIAL_RESPONSE&lt;/code&gt;) for successful quits and &lt;code&gt;ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/code&gt; (or its friends) for failures.&lt;/p&gt;
&lt;p&gt;If the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive is used to change the URI and initiate location re-lookups (internal redirections), then any &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; or &lt;a href="#rewrite_by_lua_file"&gt;rewrite_by_lua_file&lt;/a&gt; code sequences within the current location will not be executed. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/bar;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.exit(503)'&lt;/span&gt;;
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/bar &lt;/span&gt;{
     ...
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here the Lua code &lt;code&gt;ngx.exit(503)&lt;/code&gt; will never run. This will be the case if &lt;code&gt;rewrite ^ /bar last&lt;/code&gt; is used as this will similarly initiate an internal redirection. If the &lt;code&gt;break&lt;/code&gt; modifier is used instead, there will be no internal redirection and the &lt;code&gt;rewrite_by_lua&lt;/code&gt; code will be executed.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rewrite_by_lua&lt;/code&gt; code will always run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase unless &lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt; is turned on.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_block" class="anchor" aria-hidden="true" href="#rewrite_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
     do_something("hello, world!\nhiya\n")
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_file" class="anchor" aria-hidden="true" href="#rewrite_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached and the Nginx config must be reloaded each time the Lua source file is modified. The Lua code cache can be temporarily disabled during development by switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rewrite_by_lua_file&lt;/code&gt; code will always run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase unless &lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt; is turned on.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch just as in &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua" class="anchor" aria-hidden="true" href="#access_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#access_by_lua_block"&gt;access_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as an access phase handler and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Note that this handler always runs &lt;em&gt;after&lt;/em&gt; the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_access_module.html" rel="nofollow"&gt;ngx_http_access_module&lt;/a&gt;. So the following will work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;deny&lt;/span&gt;    &lt;span class="pl-s"&gt;192.168.1.1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;allow&lt;/span&gt;   &lt;span class="pl-s"&gt;192.168.1.0&lt;/span&gt;&lt;span class="pl-c1"&gt;/24&lt;/span&gt;;
     &lt;span class="pl-k"&gt;allow&lt;/span&gt;   &lt;span class="pl-s"&gt;10.1.1.0&lt;/span&gt;&lt;span class="pl-c1"&gt;/16&lt;/span&gt;;
     &lt;span class="pl-k"&gt;deny&lt;/span&gt;   &lt;span class="pl-c1"&gt; all&lt;/span&gt;;

     &lt;span class="pl-k"&gt;access_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/mysql", { ... })&lt;/span&gt;
&lt;span class="pl-s"&gt;         ...&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, if a client IP address is in the blacklist, it will be denied before the MySQL query for more complex authentication is executed by &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that the &lt;a href="http://mdounin.ru/hg/ngx_http_auth_request_module/" rel="nofollow"&gt;ngx_auth_request&lt;/a&gt; module can be approximated by using &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;auth_request&lt;/span&gt; /auth;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/postgres_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be implemented in ngx_lua as:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;access_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/auth")&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.status == ngx.HTTP_OK then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.status == ngx.HTTP_FORBIDDEN then&lt;/span&gt;
&lt;span class="pl-s"&gt;             ngx.exit(res.status)&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/postgres_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As with other access phase handlers, &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; will &lt;em&gt;not&lt;/em&gt; run in subrequests.&lt;/p&gt;
&lt;p&gt;Note that when calling &lt;code&gt;ngx.exit(ngx.OK)&lt;/code&gt; within a &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; handler, the Nginx request processing control flow will still continue to the content handler. To terminate the current request from within a &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; handler, calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with status &amp;gt;= 200 (&lt;code&gt;ngx.HTTP_OK&lt;/code&gt;) and status &amp;lt; 300 (&lt;code&gt;ngx.HTTP_SPECIAL_RESPONSE&lt;/code&gt;) for successful quits and &lt;code&gt;ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/code&gt; (or its friends) for failures.&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;v0.9.20&lt;/code&gt; release, you can use the &lt;a href="#access_by_lua_no_postpone"&gt;access_by_lua_no_postpone&lt;/a&gt;
directive to control when to run this handler inside the "access" request-processing phase
of Nginx.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_block" class="anchor" aria-hidden="true" href="#access_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;access_by_lua_block&lt;/span&gt; {
     do_something("hello, world!\nhiya\n")
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_file" class="anchor" aria-hidden="true" href="#access_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid repeatedly reloading Nginx.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch just as in &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua" class="anchor" aria-hidden="true" href="#header_filter_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#header_filter_by_lua_block"&gt;header_filter_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Uses Lua code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; to define an output header filter.&lt;/p&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt; and &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of overriding a response header (or adding one if absent) in our Lua header filter:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;
     &lt;span class="pl-k"&gt;header_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.header.Foo = "blah"'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.2.1rc20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua_block" class="anchor" aria-hidden="true" href="#header_filter_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; {
     ngx.header["content-length"] = &lt;span class="pl-k"&gt;nil&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua_file" class="anchor" aria-hidden="true" href="#header_filter_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.2.1rc20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua" class="anchor" aria-hidden="true" href="#body_filter_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#body_filter_by_lua_block"&gt;body_filter_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Uses Lua code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; to define an output body filter.&lt;/p&gt;
&lt;p&gt;The input data chunk is passed via &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[1] (as a Lua string value) and the "eof" flag indicating the end of the response body data stream is passed via &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[2] (as a Lua boolean value).&lt;/p&gt;
&lt;p&gt;Behind the scene, the "eof" flag is just the &lt;code&gt;last_buf&lt;/code&gt; (for main requests) or &lt;code&gt;last_in_chain&lt;/code&gt; (for subrequests) flag of the Nginx chain link buffers. (Before the &lt;code&gt;v0.7.14&lt;/code&gt; release, the "eof" flag does not work at all in subrequests.)&lt;/p&gt;
&lt;p&gt;The output data stream can be aborted immediately by running the following Lua statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;ERROR&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will truncate the response body and usually result in incomplete and also invalid responses.&lt;/p&gt;
&lt;p&gt;The Lua code can pass its own modified version of the input data chunk to the downstream Nginx output body filters by overriding &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[1] with a Lua string or a Lua table of strings. For example, to transform all the lowercase letters in the response body, we can just write:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;
     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.arg[1] = string.upper(ngx.arg[1])'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When setting &lt;code&gt;nil&lt;/code&gt; or an empty Lua string value to &lt;code&gt;ngx.arg[1]&lt;/code&gt;, no data chunk will be passed to the downstream Nginx output filters at all.&lt;/p&gt;
&lt;p&gt;Likewise, new "eof" flag can also be specified by setting a boolean value to &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[2]. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/t &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; hello world;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; hiya globe;

     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local chunk = ngx.arg[1]&lt;/span&gt;
&lt;span class="pl-s"&gt;         if string.match(chunk, "hello") then&lt;/span&gt;
&lt;span class="pl-s"&gt;             ngx.arg[2] = true  -- new eof&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         -- just throw away any remaining chunk data&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.arg[1] = nil&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /t&lt;/code&gt; will just return the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is, when the body filter sees a chunk containing the word "hello", then it will set the "eof" flag to true immediately, resulting in truncated but still valid responses.&lt;/p&gt;
&lt;p&gt;When the Lua code may change the length of the response body, then it is required to always clear out the &lt;code&gt;Content-Length&lt;/code&gt; response header (if any) in a header filter to enforce streaming output, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-c"&gt;# fastcgi_pass/proxy_pass/...&lt;/span&gt;

     &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; { ngx.header.content_length = nil }
     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.arg[1] = string.len(ngx.arg[1]) .. "\\n"'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context due to the limitations in Nginx output filter's current implementation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; and &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nginx output filters may be called multiple times for a single request because response body may be delivered in chunks. Thus, the Lua code specified by in this directive may also run multiple times in the lifetime of a single HTTP request.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua_block" class="anchor" aria-hidden="true" href="#body_filter_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua_block { lua-script-str }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;body_filter_by_lua_block&lt;/span&gt; {
     &lt;span class="pl-k"&gt;local&lt;/span&gt; data, eof = ngx.arg[1], ngx.arg[2]
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua_file" class="anchor" aria-hidden="true" href="#body_filter_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua" class="anchor" aria-hidden="true" href="#log_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#log_by_lua_block"&gt;log_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the Lua source code inlined as the &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; at the &lt;code&gt;log&lt;/code&gt; request processing phase. This does not replace the current access logs, but runs before.&lt;/p&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of gathering average data for &lt;a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_response_time" rel="nofollow"&gt;$upstream_response_time&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; log_dict &lt;span class="pl-c1"&gt;5M&lt;/span&gt;;

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
         &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;

         &lt;span class="pl-k"&gt;log_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;             local log_dict = ngx.shared.log_dict&lt;/span&gt;
&lt;span class="pl-s"&gt;             local upstream_time = tonumber(ngx.var.upstream_response_time)&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             local sum = log_dict:get("upstream_time-sum") or 0&lt;/span&gt;
&lt;span class="pl-s"&gt;             sum = sum + upstream_time&lt;/span&gt;
&lt;span class="pl-s"&gt;             log_dict:set("upstream_time-sum", sum)&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             local newval, err = log_dict:incr("upstream_time-nb", 1)&lt;/span&gt;
&lt;span class="pl-s"&gt;             if not newval and err == "not found" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log_dict:add("upstream_time-nb", 0)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log_dict:incr("upstream_time-nb", 1)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         '&lt;/span&gt;;
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /status &lt;/span&gt;{
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             &lt;span class="pl-k"&gt;local&lt;/span&gt; log_dict = ngx.shared.log_dict
             &lt;span class="pl-k"&gt;local&lt;/span&gt; sum = log_dict:get(&lt;span class="pl-s"&gt;"upstream_time-sum"&lt;/span&gt;)
             &lt;span class="pl-k"&gt;local&lt;/span&gt; nb = log_dict:get(&lt;span class="pl-s"&gt;"upstream_time-nb"&lt;/span&gt;)

             &lt;span class="pl-k"&gt;if&lt;/span&gt; nb and sum then
                 ngx.say("&lt;span class="pl-k"&gt;average&lt;/span&gt; upstream response time: &lt;span class="pl-s"&gt;", sum / nb,&lt;/span&gt;
&lt;span class="pl-s"&gt;                         "&lt;/span&gt; (&lt;span class="pl-s"&gt;", nb, "&lt;/span&gt; reqs)&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;no data yet&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc31&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua_block" class="anchor" aria-hidden="true" href="#log_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;log_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua_file" class="anchor" aria-hidden="true" href="#log_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc31&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-balancer_by_lua_block" class="anchor" aria-hidden="true" href="#balancer_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;balancer_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;balancer_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;upstream&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code as an upstream balancer for any upstream entities defined
by the &lt;code&gt;upstream {}&lt;/code&gt; configuration block.&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;upstream&lt;/span&gt; &lt;span class="pl-en"&gt;foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;server&lt;/span&gt; &lt;span class="pl-s"&gt;127.0.0.1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;balancer_by_lua_block&lt;/span&gt; {
         -- &lt;span class="pl-k"&gt;use&lt;/span&gt; Lua to do something interesting here
         -- as &lt;span class="pl-s"&gt;a&lt;/span&gt; dynamic balancer
     }
 }

 server {
     location / {
         proxy_pass http://foo;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resulting Lua load balancer can work with any existing Nginx upstream modules
like &lt;a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_proxy&lt;/a&gt; and
&lt;a href="https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_fastcgi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, the Lua load balancer can work with the standard upstream connection pool mechanism,
i.e., the standard &lt;a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" rel="nofollow"&gt;keepalive&lt;/a&gt; directive.
Just ensure that the &lt;a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" rel="nofollow"&gt;keepalive&lt;/a&gt; directive
is used &lt;em&gt;after&lt;/em&gt; this &lt;code&gt;balancer_by_lua_block&lt;/code&gt; directive in a single &lt;code&gt;upstream {}&lt;/code&gt; configuration block.&lt;/p&gt;
&lt;p&gt;The Lua load balancer can totally ignore the list of servers defined in the &lt;code&gt;upstream {}&lt;/code&gt; block
and select peer from a completely dynamic server list (even changing per request) via the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/balancer.md"&gt;ngx.balancer&lt;/a&gt; module
from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;The Lua code handler registered by this directive might get called more than once in a single
downstream request when the Nginx upstream mechanism retries the request on conditions
specified by directives like the &lt;a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream" rel="nofollow"&gt;proxy_next_upstream&lt;/a&gt;
directive.&lt;/p&gt;
&lt;p&gt;This Lua code execution context does not support yielding, so Lua APIs that may yield
(like cosockets and "light threads") are disabled in this context. One can usually work
around this limitation by doing such operations in an earlier phase handler (like
&lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;) and passing along the result into this context
via the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-balancer_by_lua_file" class="anchor" aria-hidden="true" href="#balancer_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;balancer_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;balancer_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;upstream&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_need_request_body" class="anchor" aria-hidden="true" href="#lua_need_request_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_need_request_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_need_request_body &amp;lt;on|off&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Determines whether to force the request body data to be read before running rewrite/access/access_by_lua* or not. The Nginx core does not read the client request body by default and if request body data is required, then this directive should be turned &lt;code&gt;on&lt;/code&gt; or the &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; function should be called within the Lua code.&lt;/p&gt;
&lt;p&gt;To read the request body data within the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body" rel="nofollow"&gt;$request_body&lt;/a&gt; variable,
&lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; must have the same value as &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;. Because when the content length exceeds &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; but less than &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;, Nginx will buffer the data into a temporary file on the disk, which will lead to empty value in the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body" rel="nofollow"&gt;$request_body&lt;/a&gt; variable.&lt;/p&gt;
&lt;p&gt;If the current location includes &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; directives,
then the request body will be read just before the &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; code is run (and also at the
&lt;code&gt;rewrite&lt;/code&gt; phase). Similarly, if only &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; is specified,
the request body will not be read until the content handler's Lua code is
about to run (i.e., the request body will be read during the content phase).&lt;/p&gt;
&lt;p&gt;It is recommended however, to use the &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; and &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; functions for finer control over the request body reading process instead.&lt;/p&gt;
&lt;p&gt;This also applies to &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_certificate_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_certificate_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_certificate_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_certificate_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs user Lua code when Nginx is about to start the SSL handshake for the downstream
SSL (https) connections.&lt;/p&gt;
&lt;p&gt;It is particularly useful for setting the SSL certificate chain and the corresponding private key on a per-request
basis. It is also useful to load such handshake configurations nonblockingly from the remote (for example,
with the &lt;a href="#ngxsockettcp"&gt;cosocket&lt;/a&gt; API). And one can also do per-request OCSP stapling handling in pure
Lua here as well.&lt;/p&gt;
&lt;p&gt;Another typical use case is to do SSL handshake traffic control nonblockingly in this context,
with the help of the &lt;a href="https://github.com/openresty/lua-resty-limit-traffic"&gt;lua-resty-limit-traffic#readme&lt;/a&gt;
library, for example.&lt;/p&gt;
&lt;p&gt;One can also do interesting things with the SSL handshake requests from the client side, like
rejecting old SSL clients using the SSLv3 protocol or even below selectively.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
and &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;ngx.ocsp&lt;/a&gt; Lua modules
provided by the &lt;a href="https://github.com/openresty/lua-resty-core/#readme"&gt;lua-resty-core&lt;/a&gt;
library are particularly useful in this context. You can use the Lua API offered by these two Lua modules
to manipulate the SSL certificate chain and private key for the current SSL connection
being initiated.&lt;/p&gt;
&lt;p&gt;This Lua handler does not run at all, however, when Nginx/OpenSSL successfully resumes
the SSL session via SSL session IDs or TLS session tickets for the current SSL connection. In
other words, this Lua handler only runs when Nginx has to initiate a full SSL handshake.&lt;/p&gt;
&lt;p&gt;Below is a trivial example using the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt; module
at the same time:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;listen&lt;/span&gt; &lt;span class="pl-s"&gt;443&lt;/span&gt; ssl;
     &lt;span class="pl-k"&gt;server_name&lt;/span&gt;   test.com;

     &lt;span class="pl-k"&gt;ssl_certificate_by_lua_block&lt;/span&gt; {
         print("&lt;span class="pl-k"&gt;About&lt;/span&gt; to initiate &lt;span class="pl-s"&gt;a&lt;/span&gt; new SSL handshake!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location / {&lt;/span&gt;
&lt;span class="pl-s"&gt;         root html;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See more complicated examples in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
and &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;ngx.ocsp&lt;/a&gt;
Lua modules' official documentation.&lt;/p&gt;
&lt;p&gt;Uncaught Lua exceptions in the user Lua code immediately abort the current SSL session, so does the
&lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; call with an error code like &lt;code&gt;ngx.ERROR&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This Lua code execution context &lt;em&gt;does&lt;/em&gt; support yielding, so Lua APIs that may yield
(like cosockets, sleeping, and "light threads")
are enabled in this context.&lt;/p&gt;
&lt;p&gt;Note, however, you still need to configure the &lt;a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate" rel="nofollow"&gt;ssl_certificate&lt;/a&gt; and
&lt;a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate_key" rel="nofollow"&gt;ssl_certificate_key&lt;/a&gt;
directives even though you will not use this static certificate and private key at all. This is
because the NGINX core requires their appearance otherwise you are seeing the following error
while starting NGINX:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nginx: [emerg] no ssl configured for the server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This directive requires OpenSSL 1.0.2e or greater.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;official pre-built
packages&lt;/a&gt; for
&lt;a href="https://openresty.org/" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.9.7.2 or later, then everything should
work out of the box.&lt;/p&gt;
&lt;p&gt;If you are not using one of the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;OpenSSL
packages&lt;/a&gt; provided by
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;, you will need to apply patches to OpenSSL
in order to use this directive:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/openssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/openssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similarly, if you are not using the Nginx core shipped with
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.9.7.2 or later, you will need to apply
patches to the standard Nginx core:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/nginx-ssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/nginx-ssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_certificate_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_certificate_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_certificate_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_certificate_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_fetch_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_session_fetch_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_fetch_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_fetch_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code to look up and load the SSL session (if any) according to the session ID
provided by the current SSL handshake request for the downstream.&lt;/p&gt;
&lt;p&gt;The Lua API for obtaining the current session ID and loading a cached SSL session data
is provided in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl/session.md"&gt;ngx.ssl.session&lt;/a&gt;
Lua module shipped with the &lt;a href="https://github.com/openresty/lua-resty-core#readme"&gt;lua-resty-core&lt;/a&gt;
library.&lt;/p&gt;
&lt;p&gt;Lua APIs that may yield, like &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt; and &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;,
are enabled in this context.&lt;/p&gt;
&lt;p&gt;This hook, together with the &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt; hook,
can be used to implement distributed caching mechanisms in pure Lua (based
on the &lt;a href="#ngxsockettcp"&gt;cosocket&lt;/a&gt; API, for example). If a cached SSL session is found
and loaded into the current SSL connection context,
SSL session resumption can then get immediately initiated and bypass the full SSL handshake process which is very expensive in terms of CPU time.&lt;/p&gt;
&lt;p&gt;Please note that TLS session tickets are very different and it is the clients' responsibility
to cache the SSL session state when session tickets are used. SSL session resumptions based on
TLS session tickets would happen automatically without going through this hook (nor the
&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt; hook). This hook is mainly
for older or less capable SSL clients that can only do SSL sessions by session IDs.&lt;/p&gt;
&lt;p&gt;When &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt; is specified at the same time,
this hook usually runs before &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.
When the SSL session is found and successfully loaded for the current SSL connection,
SSL session resumption will happen and thus bypass the &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;
hook completely. In this case, Nginx also bypasses the &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;
hook, for obvious reasons.&lt;/p&gt;
&lt;p&gt;To easily test this hook locally with a modern web browser, you can temporarily put the following line
in your https server block to disable the TLS session ticket support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl_session_tickets off;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But do not forget to comment this line out before publishing your site to the world.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;official pre-built packages&lt;/a&gt; for &lt;a href="https://openresty.org/" rel="nofollow"&gt;OpenResty&lt;/a&gt;
1.11.2.1 or later, then everything should work out of the box.&lt;/p&gt;
&lt;p&gt;If you are not using one of the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;OpenSSL
packages&lt;/a&gt; provided by
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;, you will need to apply patches to OpenSSL
in order to use this directive:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/openssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/openssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similarly, if you are not using the Nginx core shipped with
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.11.2.1 or later, you will need to apply
patches to the standard Nginx core:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/nginx-ssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/nginx-ssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that this directive can only be used in the &lt;strong&gt;http context&lt;/strong&gt; starting
with the &lt;code&gt;v0.10.7&lt;/code&gt; release since SSL session resumption happens
before server name dispatch.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_fetch_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_session_fetch_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_fetch_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_fetch_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or rather, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_store_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_session_store_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_store_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_store_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-after-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code to fetch and save the SSL session (if any) according to the session ID
provided by the current SSL handshake request for the downstream. The saved or cached SSL
session data can be used for future SSL connections to resume SSL sessions without going
through the full SSL handshake process (which is very expensive in terms of CPU time).&lt;/p&gt;
&lt;p&gt;Lua APIs that may yield, like &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt; and &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;,
are &lt;em&gt;disabled&lt;/em&gt; in this context. You can still, however, use the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API
to create 0-delay timers to save the SSL session data asynchronously to external services (like &lt;code&gt;redis&lt;/code&gt; or &lt;code&gt;memcached&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The Lua API for obtaining the current session ID and the associated session state data
is provided in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl/session.md#readme"&gt;ngx.ssl.session&lt;/a&gt;
Lua module shipped with the &lt;a href="https://github.com/openresty/lua-resty-core#readme"&gt;lua-resty-core&lt;/a&gt;
library.&lt;/p&gt;
&lt;p&gt;To easily test this hook locally with a modern web browser, you can temporarily put the following line
in your https server block to disable the TLS session ticket support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl_session_tickets off;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But do not forget to comment this line out before publishing your site to the world.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_store_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_session_store_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_store_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_store_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-after-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or rather, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_shared_dict" class="anchor" aria-hidden="true" href="#lua_shared_dict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_shared_dict&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_shared_dict &amp;lt;name&amp;gt; &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Declares a shared memory zone, &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, to serve as storage for the shm based Lua dictionary &lt;code&gt;ngx.shared.&amp;lt;name&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Shared memory zones are always shared by all the Nginx worker processes in the current Nginx server instance.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; argument accepts size units such as &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;m&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;http&lt;/span&gt; {
     &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;10m&lt;/span&gt;;
     ...
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The hard-coded minimum size is 8KB while the practical minimum size depends
on actual user data set (some people start with 12KB).&lt;/p&gt;
&lt;p&gt;See &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_connect_timeout" class="anchor" aria-hidden="true" href="#lua_socket_connect_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_connect_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_connect_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_connect_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method and can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_send_timeout" class="anchor" aria-hidden="true" href="#lua_socket_send_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_send_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_send_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_send_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_send_lowat" class="anchor" aria-hidden="true" href="#lua_socket_send_lowat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_send_lowat&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_send_lowat &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_send_lowat 0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the &lt;code&gt;lowat&lt;/code&gt; (low water) value for the cosocket send buffer.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_read_timeout" class="anchor" aria-hidden="true" href="#lua_socket_read_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_read_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_read_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_read_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt; method and iterator functions returned by the &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt; method. This setting can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_buffer_size" class="anchor" aria-hidden="true" href="#lua_socket_buffer_size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_buffer_size&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_buffer_size &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_buffer_size 4k/8k&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the buffer size used by cosocket reading operations.&lt;/p&gt;
&lt;p&gt;This buffer does not have to be that big to hold everything at the same time because cosocket supports 100% non-buffered reading and parsing. So even &lt;code&gt;1&lt;/code&gt; byte buffer size should still work everywhere but the performance could be terrible.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_pool_size" class="anchor" aria-hidden="true" href="#lua_socket_pool_size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_pool_size&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_pool_size &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_pool_size 30&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the size limit (in terms of connection count) for every cosocket connection pool associated with every remote server (i.e., identified by either the host-port pair or the unix domain socket file path).&lt;/p&gt;
&lt;p&gt;Default to 30 connections for every pool.&lt;/p&gt;
&lt;p&gt;When the connection pool exceeds the available size limit, the least recently used (idle) connection already in the pool will be closed to make room for the current connection.&lt;/p&gt;
&lt;p&gt;Note that the cosocket connection pool is per Nginx worker process rather than per Nginx server instance, so size limit specified here also applies to every single Nginx worker process.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_keepalive_timeout" class="anchor" aria-hidden="true" href="#lua_socket_keepalive_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_keepalive_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_keepalive_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_keepalive_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default maximal idle time of the connections in the cosocket built-in connection pool. When this timeout reaches, idle connections will be closed and removed from the pool. This setting can be overridden by cosocket objects' &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_log_errors" class="anchor" aria-hidden="true" href="#lua_socket_log_errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_log_errors&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_log_errors on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_log_errors on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive can be used to toggle error logging when a failure occurs for the TCP or UDP cosockets. If you are already doing proper error handling and logging in your Lua code, then it is recommended to turn this directive off to prevent data flushing in your Nginx error log files (which is usually rather expensive).&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_ciphers" class="anchor" aria-hidden="true" href="#lua_ssl_ciphers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_ciphers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_ciphers &amp;lt;ciphers&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_ciphers DEFAULT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the enabled ciphers for requests to a SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method. The ciphers are specified in the format understood by the OpenSSL library.&lt;/p&gt;
&lt;p&gt;The full list can be viewed using the “openssl ciphers” command.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_crl" class="anchor" aria-hidden="true" href="#lua_ssl_crl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_crl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_crl &amp;lt;file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies a file with revoked certificates (CRL) in the PEM format used to verify the certificate of the SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_protocols" class="anchor" aria-hidden="true" href="#lua_ssl_protocols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_protocols&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2] [TLSv1.3]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables the specified protocols for requests to a SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The support for the &lt;code&gt;TLSv1.3&lt;/code&gt; parameter requires version &lt;code&gt;v0.10.12&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; OpenSSL 1.1.1.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_trusted_certificate" class="anchor" aria-hidden="true" href="#lua_ssl_trusted_certificate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_trusted_certificate&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_trusted_certificate &amp;lt;file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies a file path with trusted CA certificates in the PEM format used to verify the certificate of the SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_verify_depth" class="anchor" aria-hidden="true" href="#lua_ssl_verify_depth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_verify_depth&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_verify_depth &amp;lt;number&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_verify_depth 1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the verification depth in the server certificates chain.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_http10_buffering" class="anchor" aria-hidden="true" href="#lua_http10_buffering"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_http10_buffering&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_http10_buffering on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_http10_buffering on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables or disables automatic response buffering for HTTP 1.0 (or older) requests. This buffering mechanism is mainly used for HTTP 1.0 keep-alive which relies on a proper &lt;code&gt;Content-Length&lt;/code&gt; response header.&lt;/p&gt;
&lt;p&gt;If the Lua code explicitly sets a &lt;code&gt;Content-Length&lt;/code&gt; response header before sending the headers (either explicitly via &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or implicitly via the first &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; or &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; call), then the HTTP 1.0 response buffering will be disabled even when this directive is turned on.&lt;/p&gt;
&lt;p&gt;To output very large response data in a streaming fashion (via the &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt; call, for example), this directive MUST be turned off to minimize memory usage.&lt;/p&gt;
&lt;p&gt;This directive is turned &lt;code&gt;on&lt;/code&gt; by default.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_no_postpone" class="anchor" aria-hidden="true" href="#rewrite_by_lua_no_postpone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_no_postpone&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_no_postpone on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_no_postpone off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether or not to disable postponing &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; directives to run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase. By default, this directive is turned off and the Lua code is postponed to run at the end of the &lt;code&gt;rewrite&lt;/code&gt; phase.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_no_postpone" class="anchor" aria-hidden="true" href="#access_by_lua_no_postpone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_no_postpone&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_no_postpone on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;access_by_lua_no_postpone off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether or not to disable postponing &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt; directives to run at the end of the &lt;code&gt;access&lt;/code&gt; request-processing phase. By default, this directive is turned off and the Lua code is postponed to run at the end of the &lt;code&gt;access&lt;/code&gt; phase.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_transform_underscores_in_response_headers" class="anchor" aria-hidden="true" href="#lua_transform_underscores_in_response_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_transform_underscores_in_response_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_transform_underscores_in_response_headers on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_transform_underscores_in_response_headers on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether to transform underscores (&lt;code&gt;_&lt;/code&gt;) in the response header names specified in the &lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt; API to hypens (&lt;code&gt;-&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_check_client_abort" class="anchor" aria-hidden="true" href="#lua_check_client_abort"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_check_client_abort&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_check_client_abort on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_check_client_abort off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls whether to check for premature client connection abortion.&lt;/p&gt;
&lt;p&gt;When this directive is on, the ngx_lua module will monitor the premature connection close event on the downstream connections and when there is such an event, it will call the user Lua function callback (registered by &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;) or just stop and clean up all the Lua "light threads" running in the current request's request handler when there is no user callback function registered.&lt;/p&gt;
&lt;p&gt;According to the current implementation, however, if the client closes the connection before the Lua code finishes reading the request body data via &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;, then ngx_lua will neither stop all the running "light threads" nor call the user callback (if &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt; has been called). Instead, the reading operation on &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; will just return the error message "client aborted" as the second return value (the first return value is surely &lt;code&gt;nil&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;When TCP keepalive is disabled, it is relying on the client side to close the socket gracefully (by sending a &lt;code&gt;FIN&lt;/code&gt; packet or something like that). For (soft) real-time web applications, it is highly recommended to configure the &lt;a href="http://tldp.org/HOWTO/TCP-Keepalive-HOWTO/overview.html" rel="nofollow"&gt;TCP keepalive&lt;/a&gt; support in your system's TCP stack implementation in order to detect "half-open" TCP connections in time.&lt;/p&gt;
&lt;p&gt;For example, on Linux, you can configure the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#listen" rel="nofollow"&gt;listen&lt;/a&gt; directive in your &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;listen&lt;/span&gt; &lt;span class="pl-s"&gt;80&lt;/span&gt; so_keepalive=2s:2s:8;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On FreeBSD, you can only tune the system-wide configuration for TCP keepalive, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sysctl net.inet.tcp.keepintvl=2000
# sysctl net.inet.tcp.keepidle=2000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.7.4&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_max_pending_timers" class="anchor" aria-hidden="true" href="#lua_max_pending_timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_max_pending_timers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_max_pending_timers &amp;lt;count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_max_pending_timers 1024&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the maximum number of pending timers allowed.&lt;/p&gt;
&lt;p&gt;Pending timers are those timers that have not expired yet.&lt;/p&gt;
&lt;p&gt;When exceeding this limit, the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; call will immediately return &lt;code&gt;nil&lt;/code&gt; and the error string "too many pending timers".&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_max_running_timers" class="anchor" aria-hidden="true" href="#lua_max_running_timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_max_running_timers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_max_running_timers &amp;lt;count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_max_running_timers 256&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the maximum number of "running timers" allowed.&lt;/p&gt;
&lt;p&gt;Running timers are those timers whose user callback functions are still running.&lt;/p&gt;
&lt;p&gt;When exceeding this limit, Nginx will stop running the callbacks of newly expired timers and log an error message "N lua_max_running_timers are not enough" where "N" is the current value of this directive.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_sa_restart" class="anchor" aria-hidden="true" href="#lua_sa_restart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_sa_restart&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_sa_restart on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_sa_restart on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When enabled, this module will set the &lt;code&gt;SA_RESTART&lt;/code&gt; flag on Nginx workers signal dispositions.&lt;/p&gt;
&lt;p&gt;This allows Lua I/O primitives to not be interrupted by Nginx's handling of various signals.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-nginx-api-for-lua" class="anchor" aria-hidden="true" href="#nginx-api-for-lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx API for Lua&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-constants"&gt;Core constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-method-constants"&gt;HTTP method constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-log-level-constants"&gt;Nginx log level constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#print"&gt;print&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxstatus"&gt;ngx.status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrespget_headers"&gt;ngx.resp.get_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqis_internal"&gt;ngx.req.is_internal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqstart_time"&gt;ngx.req.start_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqhttp_version"&gt;ngx.req.http_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqraw_header"&gt;ngx.req.raw_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_method"&gt;ngx.req.get_method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_method"&gt;ngx.req.set_method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_uri_args"&gt;ngx.req.set_uri_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_uri_args"&gt;ngx.req.get_uri_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_post_args"&gt;ngx.req.get_post_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_header"&gt;ngx.req.set_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqclear_header"&gt;ngx.req.clear_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_body_file"&gt;ngx.req.set_body_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxheaders_sent"&gt;ngx.headers_sent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxeof"&gt;ngx.eof&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxescape_uri"&gt;ngx.escape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxunescape_uri"&gt;ngx.unescape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxdecode_args"&gt;ngx.decode_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxencode_base64"&gt;ngx.encode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxdecode_base64"&gt;ngx.decode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxhmac_sha1"&gt;ngx.hmac_sha1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxmd5_bin"&gt;ngx.md5_bin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsha1_bin"&gt;ngx.sha1_bin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxquote_sql_str"&gt;ngx.quote_sql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtoday"&gt;ngx.today&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocaltime"&gt;ngx.localtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxutctime"&gt;ngx.utctime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcookie_time"&gt;ngx.cookie_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxhttp_time"&gt;ngx.http_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxparse_http_time"&gt;ngx.parse_http_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxis_subrequest"&gt;ngx.is_subrequest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrefind"&gt;ngx.re.find&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxregmatch"&gt;ngx.re.gmatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget"&gt;ngx.shared.DICT.get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_stale"&gt;ngx.shared.DICT.get_stale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictset"&gt;ngx.shared.DICT.set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_set"&gt;ngx.shared.DICT.safe_set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictadd"&gt;ngx.shared.DICT.add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_add"&gt;ngx.shared.DICT.safe_add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictreplace"&gt;ngx.shared.DICT.replace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictdelete"&gt;ngx.shared.DICT.delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictincr"&gt;ngx.shared.DICT.incr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpush"&gt;ngx.shared.DICT.lpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpush"&gt;ngx.shared.DICT.rpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpop"&gt;ngx.shared.DICT.lpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpop"&gt;ngx.shared.DICT.rpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictllen"&gt;ngx.shared.DICT.llen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictttl"&gt;ngx.shared.DICT.ttl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictexpire"&gt;ngx.shared.DICT.expire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_all"&gt;ngx.shared.DICT.flush_all&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_expired"&gt;ngx.shared.DICT.flush_expired&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_keys"&gt;ngx.shared.DICT.get_keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictcapacity"&gt;ngx.shared.DICT.capacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictfree_space"&gt;ngx.shared.DICT.free_space&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksetpeername"&gt;udpsock:setpeername&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksend"&gt;udpsock:send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockreceive"&gt;udpsock:receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockclose"&gt;udpsock:close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksettimeout"&gt;udpsock:settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketstream"&gt;ngx.socket.stream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockconnect"&gt;tcpsock:connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksend"&gt;tcpsock:send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceive"&gt;tcpsock:receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveany"&gt;tcpsock:receiveany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveuntil"&gt;tcpsock:receiveuntil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockclose"&gt;tcpsock:close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeout"&gt;tcpsock:settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeouts"&gt;tcpsock:settimeouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetoption"&gt;tcpsock:setoption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetkeepalive"&gt;tcpsock:setkeepalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockgetreusedtimes"&gt;tcpsock:getreusedtimes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketconnect"&gt;ngx.socket.connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxget_phase"&gt;ngx.get_phase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadkill"&gt;ngx.thread.kill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerevery"&gt;ngx.timer.every&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerrunning_count"&gt;ngx.timer.running_count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerpending_count"&gt;ngx.timer.pending_count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigsubsystem"&gt;ngx.config.subsystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigdebug"&gt;ngx.config.debug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigprefix"&gt;ngx.config.prefix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfignginx_version"&gt;ngx.config.nginx_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfignginx_configure"&gt;ngx.config.nginx_configure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigngx_lua_version"&gt;ngx.config.ngx_lua_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerexiting"&gt;ngx.worker.exiting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerpid"&gt;ngx.worker.pid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkercount"&gt;ngx.worker.count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerid"&gt;ngx.worker.id&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsemaphore"&gt;ngx.semaphore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxbalancer"&gt;ngx.balancer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxssl"&gt;ngx.ssl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxocsp"&gt;ngx.ocsp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ndkset_vardirective"&gt;ndk.set_var.DIRECTIVE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutineresume"&gt;coroutine.resume&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutineyield"&gt;coroutine.yield&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinewrap"&gt;coroutine.wrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinerunning"&gt;coroutine.running&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinestatus"&gt;coroutine.status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The various &lt;code&gt;*_by_lua&lt;/code&gt;, &lt;code&gt;*_by_lua_block&lt;/code&gt; and &lt;code&gt;*_by_lua_file&lt;/code&gt; configuration directives serve as gateways to the Lua API within the &lt;code&gt;nginx.conf&lt;/code&gt; file. The Nginx Lua API described below can only be called within the user Lua code run in the context of these configuration directives.&lt;/p&gt;
&lt;p&gt;The API is exposed to Lua in the form of two standard packages &lt;code&gt;ngx&lt;/code&gt; and &lt;code&gt;ndk&lt;/code&gt;. These packages are in the default global scope within ngx_lua and are always available within ngx_lua directives.&lt;/p&gt;
&lt;p&gt;The packages can be introduced into external Lua modules like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; say &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;say&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.foo&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;say&lt;/span&gt;(a)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use of the &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-package.seeall" rel="nofollow"&gt;package.seeall&lt;/a&gt; flag is strongly discouraged due to its various bad side-effects.&lt;/p&gt;
&lt;p&gt;It is also possible to directly require the packages in external Lua modules:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ngx &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ngx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ndk &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ndk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The ability to require these packages was introduced in the &lt;code&gt;v0.2.1rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Network I/O operations in user code should only be done through the Nginx Lua API calls as the Nginx event loop may be blocked and performance drop off dramatically otherwise. Disk operations with relatively small amount of data can be done using the standard Lua &lt;code&gt;io&lt;/code&gt; library but huge file reading and writing should be avoided wherever possible as they may block the Nginx process significantly. Delegating all network and disk I/O operations to Nginx's subrequests (via the &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; method and similar) is strongly recommended for maximum performance.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxarg" class="anchor" aria-hidden="true" href="#ngxarg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.arg&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val = ngx.arg[index]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When this is used in the context of the &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt; directives, this table is read-only and holds the input arguments to the config directives:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; value &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;arg&lt;/span&gt;[n]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is an example&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;32&lt;/span&gt;;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;56&lt;/span&gt;;

     &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;
         '&lt;span class="pl-c1"&gt;return&lt;/span&gt; tonumber(ngx.arg[1]) + tonumber(ngx.arg[2])&lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     echo &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that writes out &lt;code&gt;88&lt;/code&gt;, the sum of &lt;code&gt;32&lt;/code&gt; and &lt;code&gt;56&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When this table is used in the context of &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua*&lt;/a&gt;, the first element holds the input data chunk to the output filter code and the second element holds the boolean flag for the "eof" flag indicating the end of the whole output data stream.&lt;/p&gt;
&lt;p&gt;The data chunk and "eof" flag passed to the downstream Nginx output filters can also be overridden by assigning values directly to the corresponding table elements. When setting &lt;code&gt;nil&lt;/code&gt; or an empty Lua string value to &lt;code&gt;ngx.arg[1]&lt;/code&gt;, no data chunk will be passed to the downstream Nginx output filters at all.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxvarvariable" class="anchor" aria-hidden="true" href="#ngxvarvariable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.var.VARIABLE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.var.VAR_NAME&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Read and write Nginx variable values.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.var.some_nginx_variable_name
 ngx.var.&lt;span class="pl-k"&gt;some_nginx_variable_name&lt;/span&gt; = value&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that only already defined Nginx variables can be written to.
For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$my_var&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# this line is required to create $my_var at config time&lt;/span&gt;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.var.&lt;span class="pl-k"&gt;my_var&lt;/span&gt; = &lt;span class="pl-s"&gt;123&lt;/span&gt;;
         ...
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, Nginx variables cannot be created on-the-fly.&lt;/p&gt;
&lt;p&gt;Some special Nginx variables like &lt;code&gt;$args&lt;/code&gt; and &lt;code&gt;$limit_rate&lt;/code&gt; can be assigned a value,
many others are not, like &lt;code&gt;$query_string&lt;/code&gt;, &lt;code&gt;$arg_PARAMETER&lt;/code&gt;, and &lt;code&gt;$http_NAME&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Nginx regex group capturing variables &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt;, and etc, can be read by this
interface as well, by writing &lt;code&gt;ngx.var[1]&lt;/code&gt;, &lt;code&gt;ngx.var[2]&lt;/code&gt;, &lt;code&gt;ngx.var[3]&lt;/code&gt;, and etc.&lt;/p&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.var.Foo&lt;/code&gt; to a &lt;code&gt;nil&lt;/code&gt; value will unset the &lt;code&gt;$Foo&lt;/code&gt; Nginx variable.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; When reading from an Nginx variable, Nginx will allocate memory in the per-request memory pool which is freed only at request termination. So when you need to read from an Nginx variable repeatedly in your Lua code, cache the Nginx variable value to your own Lua variable, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; val &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;some_var&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;- use the val repeatedly later&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to prevent (temporary) memory leaking within the current request's lifetime. Another way of caching the result is to use the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table.&lt;/p&gt;
&lt;p&gt;Undefined Nginx variables are evaluated to &lt;code&gt;nil&lt;/code&gt; while uninitialized (but defined) Nginx variables are evaluated to an empty Lua string.&lt;/p&gt;
&lt;p&gt;This API requires a relatively expensive metamethod call and it is recommended to avoid using it on hot code paths.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-core-constants" class="anchor" aria-hidden="true" href="#core-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, *log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-c1"&gt;OK&lt;/span&gt; (&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;ERROR&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;AGAIN&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;DONE&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;DECLINED&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that only three of these constants are utilized by the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; (i.e., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; accepts &lt;code&gt;ngx.OK&lt;/code&gt;, &lt;code&gt;ngx.ERROR&lt;/code&gt;, and &lt;code&gt;ngx.DECLINED&lt;/code&gt; as input).&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-smi"&gt;null&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;ngx.null&lt;/code&gt; constant is a &lt;code&gt;NULL&lt;/code&gt; light userdata usually used to represent nil values in Lua tables etc and is similar to the &lt;a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" rel="nofollow"&gt;lua-cjson&lt;/a&gt; library's &lt;code&gt;cjson.null&lt;/code&gt; constant. This constant was first introduced in the &lt;code&gt;v0.5.0rc5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.DECLINED&lt;/code&gt; constant was first introduced in the &lt;code&gt;v0.5.0rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-http-method-constants" class="anchor" aria-hidden="true" href="#http-method-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP method constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ngx.HTTP_GET
  ngx.HTTP_HEAD
  ngx.HTTP_PUT
  ngx.HTTP_POST
  ngx.HTTP_DELETE
  ngx.HTTP_OPTIONS   (added in the v0.5.0rc24 release)
  ngx.HTTP_MKCOL     (added in the v0.8.2 release)
  ngx.HTTP_COPY      (added in the v0.8.2 release)
  ngx.HTTP_MOVE      (added in the v0.8.2 release)
  ngx.HTTP_PROPFIND  (added in the v0.8.2 release)
  ngx.HTTP_PROPPATCH (added in the v0.8.2 release)
  ngx.HTTP_LOCK      (added in the v0.8.2 release)
  ngx.HTTP_UNLOCK    (added in the v0.8.2 release)
  ngx.HTTP_PATCH     (added in the v0.8.2 release)
  ngx.HTTP_TRACE     (added in the v0.8.2 release)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These constants are usually used in &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; method calls.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-http-status-constants" class="anchor" aria-hidden="true" href="#http-status-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP status constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt;   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CONTINUE (100) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SWITCHING_PROTOCOLS (101) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_OK (200)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CREATED (201)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_ACCEPTED (202) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NO_CONTENT (204) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PARTIAL_CONTENT (206) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SPECIAL_RESPONSE (300)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_MOVED_PERMANENTLY (301)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_MOVED_TEMPORARILY (302)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SEE_OTHER (303)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_MODIFIED (304)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_TEMPORARY_REDIRECT (307) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PERMANENT_REDIRECT (308)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_BAD_REQUEST (400)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_UNAUTHORIZED (401)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PAYMENT_REQUIRED (402) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_FORBIDDEN (403)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_FOUND (404)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_ALLOWED (405)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_ACCEPTABLE (406) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_REQUEST_TIMEOUT (408) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CONFLICT (409) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_GONE (410)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_UPGRADE_REQUIRED (426) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_TOO_MANY_REQUESTS (429) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CLOSE (444) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_ILLEGAL (451) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_INTERNAL_SERVER_ERROR (500)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_METHOD_NOT_IMPLEMENTED (501)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_BAD_GATEWAY (502) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SERVICE_UNAVAILABLE (503)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_GATEWAY_TIMEOUT (504) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.3.1rc38 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_VERSION_NOT_SUPPORTED (505) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_INSUFFICIENT_STORAGE (507) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nginx-log-level-constants" class="anchor" aria-hidden="true" href="#nginx-log-level-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx log level constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-smi"&gt;STDERR&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;EMERG&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;ALERT&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;CRIT&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;WARN&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;NOTICE&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;INFO&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;DEBUG&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These constants are usually used by the &lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-print" class="anchor" aria-hidden="true" href="#print"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;print&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;print(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Writes argument values into the Nginx &lt;code&gt;error.log&lt;/code&gt; file with the &lt;code&gt;ngx.NOTICE&lt;/code&gt; log level.&lt;/p&gt;
&lt;p&gt;It is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;NOTICE&lt;/span&gt;, &lt;span class="pl-c1"&gt;...&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; arguments are accepted and result in literal &lt;code&gt;"nil"&lt;/code&gt; strings while Lua booleans result in literal &lt;code&gt;"true"&lt;/code&gt; or &lt;code&gt;"false"&lt;/code&gt; strings. And the &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;There is a hard coded &lt;code&gt;2048&lt;/code&gt; byte limitation on error message lengths in the Nginx core. This limit includes trailing newlines and leading time stamps. If the message size exceeds this limit, Nginx will truncate the message text accordingly. This limit can be manually modified by editing the &lt;code&gt;NGX_MAX_ERROR_STR&lt;/code&gt; macro definition in the &lt;code&gt;src/core/ngx_log.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxctx" class="anchor" aria-hidden="true" href="#ngxctx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ctx&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This table can be used to store per-request Lua context data and has a life time identical to the current request (as with the Nginx variables).&lt;/p&gt;
&lt;p&gt;Consider the following example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = 76
     }
     &lt;span class="pl-k"&gt;access_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = ngx.ctx.foo + 3
     }
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say(ngx.ctx.foo)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /test&lt;/code&gt; will yield the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; 79&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, the &lt;code&gt;ngx.ctx.foo&lt;/code&gt; entry persists across the rewrite, access, and content phases of a request.&lt;/p&gt;
&lt;p&gt;Every request, including subrequests, has its own copy of the table. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;sub&lt;/span&gt; pre: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.ctx.blah = 32&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;sub post: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt; location /main {&lt;/span&gt;
&lt;span class="pl-s"&gt;     content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.ctx.blah = 73&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;main pre: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("&lt;/span&gt;/sub&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;main post: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /main&lt;/code&gt; will give the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; main pre: 73
 sub pre: nil
 sub post: 32
 main post: 73&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, modification of the &lt;code&gt;ngx.ctx.blah&lt;/code&gt; entry in the subrequest does not affect the one in the parent request. This is because they have two separate versions of &lt;code&gt;ngx.ctx.blah&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Internal redirection will destroy the original request &lt;code&gt;ngx.ctx&lt;/code&gt; data (if any) and the new request will have an empty &lt;code&gt;ngx.ctx&lt;/code&gt; table. For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/new &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say(ngx.ctx.foo)
     }
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/orig &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"hello"&lt;/span&gt;
         ngx.exec("/new")
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /orig&lt;/code&gt; will give&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; nil&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;rather than the original &lt;code&gt;"hello"&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Arbitrary data values, including Lua closures and nested tables, can be inserted into this "magic" table. It also allows the registration of custom meta methods.&lt;/p&gt;
&lt;p&gt;Overriding &lt;code&gt;ngx.ctx&lt;/code&gt; with a new Lua table is also supported, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;, bar &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;54&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When being used in the context of &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt;, this table just has the same lifetime of the current Lua handler.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.ctx&lt;/code&gt; lookup requires relatively expensive metamethod calls and it is much slower than explicitly passing per-request data along by your own function arguments. So do not abuse this API for saving your own function arguments because it usually has quite some performance impact.&lt;/p&gt;
&lt;p&gt;Because of the metamethod magic, never "local" the &lt;code&gt;ngx.ctx&lt;/code&gt; table outside your Lua function scope on the Lua module level due to &lt;a href="#data-sharing-within-an-nginx-worker"&gt;worker-level data sharing&lt;/a&gt;. For example, the following is bad:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mymodule.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; the following line is bad since ngx.ctx is a per-request&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; data while this &amp;lt;code&amp;gt;ctx&amp;lt;/code&amp;gt; variable is on the Lua module level&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; and thus is per-nginx-worker.&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;ctx&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.main&lt;/span&gt;()
     ctx.&lt;span class="pl-smi"&gt;foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the following instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mymodule.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.main&lt;/span&gt;(&lt;span class="pl-smi"&gt;ctx&lt;/span&gt;)
     ctx.&lt;span class="pl-smi"&gt;foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, let the caller pass the &lt;code&gt;ctx&lt;/code&gt; table explicitly via a function argument.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocationcapture" class="anchor" aria-hidden="true" href="#ngxlocationcapture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.location.capture&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res = ngx.location.capture(uri, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Issues a synchronous but still non-blocking &lt;em&gt;Nginx Subrequest&lt;/em&gt; using &lt;code&gt;uri&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Nginx's subrequests provide a powerful way to make non-blocking internal requests to other locations configured with disk file directory or &lt;em&gt;any&lt;/em&gt; other Nginx C modules like &lt;code&gt;ngx_proxy&lt;/code&gt;, &lt;code&gt;ngx_fastcgi&lt;/code&gt;, &lt;code&gt;ngx_memc&lt;/code&gt;,
&lt;code&gt;ngx_postgres&lt;/code&gt;, &lt;code&gt;ngx_drizzle&lt;/code&gt;, and even ngx_lua itself and etc etc etc.&lt;/p&gt;
&lt;p&gt;Also note that subrequests just mimic the HTTP interface but there is &lt;em&gt;no&lt;/em&gt; extra HTTP/TCP traffic &lt;em&gt;nor&lt;/em&gt; IPC involved. Everything works internally, efficiently, on the C level.&lt;/p&gt;
&lt;p&gt;Subrequests are completely different from HTTP 301/302 redirection (via &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;) and internal redirection (via &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;You should always read the request body (by either calling &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; or configuring &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; on) before initiating a subrequest.&lt;/p&gt;
&lt;p&gt;This API function (as well as &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;) always buffers the whole response body of the subrequest in memory. Thus, you should use &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;
and streaming processing instead if you have to handle large subrequest responses.&lt;/p&gt;
&lt;p&gt;Here is a basic example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(uri)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Returns a Lua table with 4 slots: &lt;code&gt;res.status&lt;/code&gt;, &lt;code&gt;res.header&lt;/code&gt;, &lt;code&gt;res.body&lt;/code&gt;, and &lt;code&gt;res.truncated&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.status&lt;/code&gt; holds the response status code for the subrequest response.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.header&lt;/code&gt; holds all the response headers of the
subrequest and it is a normal Lua table. For multi-value response headers,
the value is a Lua (array) table that holds all the values in the order that
they appear. For instance, if the subrequest response headers contain the following
lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Set-Cookie: a=3
 Set-Cookie: foo=bar
 Set-Cookie: baz=blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;res.header["Set-Cookie"]&lt;/code&gt; will be evaluated to the table value
&lt;code&gt;{"a=3", "foo=bar", "baz=blah"}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.body&lt;/code&gt; holds the subrequest's response body data, which might be truncated. You always need to check the &lt;code&gt;res.truncated&lt;/code&gt; boolean flag to see if &lt;code&gt;res.body&lt;/code&gt; contains truncated data. The data truncation here can only be caused by those unrecoverable errors in your subrequests like the cases that the remote end aborts the connection prematurely in the middle of the response body data stream or a read timeout happens when your subrequest is receiving the response body data from the remote.&lt;/p&gt;
&lt;p&gt;URI query strings can be concatenated to URI itself, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo/bar?a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Named locations like &lt;code&gt;@foo&lt;/code&gt; are not allowed due to a limitation in
the Nginx core. Use normal locations combined with the &lt;code&gt;internal&lt;/code&gt; directive to
prepare internal-only locations.&lt;/p&gt;
&lt;p&gt;An optional option table can be fed as the second
argument, which supports the options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt;
specify the subrequest's request method, which only accepts constants like &lt;code&gt;ngx.HTTP_POST&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;body&lt;/code&gt;
specify the subrequest's request body (string value only).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;args&lt;/code&gt;
specify the subrequest's URI query arguments (both string value and Lua tables are accepted)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctx&lt;/code&gt;
specify a Lua table to be the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table for the subrequest. It can be the current request's &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table, which effectively makes the parent and its subrequest to share exactly the same context table. This option was first introduced in the &lt;code&gt;v0.3.1rc25&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vars&lt;/code&gt;
take a Lua table which holds the values to set the specified Nginx variables in the subrequest as this option's value. This option was first introduced in the &lt;code&gt;v0.3.1rc31&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copy_all_vars&lt;/code&gt;
specify whether to copy over all the Nginx variable values of the current request to the subrequest in question. modifications of the Nginx variables in the subrequest will not affect the current (parent) request. This option was first introduced in the &lt;code&gt;v0.3.1rc31&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;share_all_vars&lt;/code&gt;
specify whether to share all the Nginx variables of the subrequest with the current (parent) request. modifications of the Nginx variables in the subrequest will affect the current (parent) request. Enabling this option may lead to hard-to-debug issues due to bad side-effects and is considered bad and harmful. Only enable this option when you completely know what you are doing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;always_forward_body&lt;/code&gt;
when set to true, the current (parent) request's request body will always be forwarded to the subrequest being created if the &lt;code&gt;body&lt;/code&gt; option is not specified. The request body read by either &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body()&lt;/a&gt; or &lt;a href="#lua_need_request_body"&gt;lua_need_request_body on&lt;/a&gt; will be directly forwarded to the subrequest without copying the whole request body data when creating the subrequest (no matter the request body data is buffered in memory buffers or temporary files). By default, this option is &lt;code&gt;false&lt;/code&gt; and when the &lt;code&gt;body&lt;/code&gt; option is not specified, the request body of the current (parent) request is only forwarded when the subrequest takes the &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt; request method.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Issuing a POST subrequest, for example, can be done as follows&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo/bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { method &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_POST&lt;/span&gt;, body &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See HTTP method constants methods other than POST.
The &lt;code&gt;method&lt;/code&gt; option is &lt;code&gt;ngx.HTTP_GET&lt;/code&gt; by default.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;args&lt;/code&gt; option can specify extra URI arguments, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { args &lt;span class="pl-k"&gt;=&lt;/span&gt; { b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, c &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; } }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&amp;amp;b=3&amp;amp;c=%3a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that is, this method will escape argument keys and values according to URI rules and
concatenate them together into a complete query string. The format for the Lua table passed as the &lt;code&gt;args&lt;/code&gt; argument is identical to the format used in the &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;args&lt;/code&gt; option can also take plain query strings:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b=3&amp;amp;c=%3a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is functionally identical to the previous examples.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;share_all_vars&lt;/code&gt; option controls whether to share Nginx variables among the current request and its subrequests.
If this option is set to &lt;code&gt;true&lt;/code&gt;, then the current request and associated subrequests will share the same Nginx variable scope. Hence, changes to Nginx variables made by a subrequest will affect the current request.&lt;/p&gt;
&lt;p&gt;Care should be taken in using this option as variable scope sharing can have unexpected side effects. The &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;vars&lt;/code&gt;, or &lt;code&gt;copy_all_vars&lt;/code&gt; options are generally preferable instead.&lt;/p&gt;
&lt;p&gt;This option is set to &lt;code&gt;false&lt;/code&gt; by default&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$dog&lt;/span&gt; world"&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; dog: &lt;span class="pl-smi"&gt;$dog&lt;/span&gt;"&lt;/span&gt;;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/other"&lt;/span&gt;,
             { &lt;span class="pl-k"&gt;share_all_vars&lt;/span&gt; =&lt;span class="pl-c1"&gt; true&lt;/span&gt; });

         ngx.print(res.body)
         ngx.say(ngx.var.uri, ": ", ngx.var.dog)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Accessing location &lt;code&gt;/lua&lt;/code&gt; gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/other dog: hello world
/lua: hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;copy_all_vars&lt;/code&gt; option provides a copy of the parent request's Nginx variables to subrequests when such subrequests are issued. Changes made to these variables by such subrequests will not affect the parent request or any other subrequests sharing the parent request's variables.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$dog&lt;/span&gt; world"&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; dog: &lt;span class="pl-smi"&gt;$dog&lt;/span&gt;"&lt;/span&gt;;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/other"&lt;/span&gt;,
             { &lt;span class="pl-k"&gt;copy_all_vars&lt;/span&gt; =&lt;span class="pl-c1"&gt; true&lt;/span&gt; });

         ngx.print(res.body)
         ngx.say(ngx.var.uri, ": ", ngx.var.dog)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Request &lt;code&gt;GET /lua&lt;/code&gt; will give the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/other dog: hello world
/lua: hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that if both &lt;code&gt;share_all_vars&lt;/code&gt; and &lt;code&gt;copy_all_vars&lt;/code&gt; are set to true, then &lt;code&gt;share_all_vars&lt;/code&gt; takes precedence.&lt;/p&gt;
&lt;p&gt;In addition to the two settings above, it is possible to specify
values for variables in the subrequest using the &lt;code&gt;vars&lt;/code&gt; option. These
variables are set after the sharing or copying of variables has been
evaluated, and provides a more efficient method of passing specific
values to a subrequest over encoding them as URL arguments and
unescaping them in the Nginx config file.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;dog&lt;/span&gt; = &lt;span class="pl-s"&gt;", ngx.var.dog)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;cat = &lt;span class="pl-s"&gt;", ngx.var.cat)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt; location /lua {&lt;/span&gt;
&lt;span class="pl-s"&gt;     set &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; '';&lt;/span&gt;
&lt;span class="pl-s"&gt;     set &lt;span class="pl-smi"&gt;$cat&lt;/span&gt; '';&lt;/span&gt;
&lt;span class="pl-s"&gt;     content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;         res = ngx.location.capture("&lt;/span&gt;/other&lt;span class="pl-s"&gt;",&lt;/span&gt;
&lt;span class="pl-s"&gt;             { vars = { dog = "&lt;/span&gt;hello&lt;span class="pl-s"&gt;", cat = 32 }});&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Accessing &lt;code&gt;/lua&lt;/code&gt; will yield the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dog = hello
cat = 32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;ctx&lt;/code&gt; option can be used to specify a custom Lua table to serve as the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table for the subrequest.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"bar"&lt;/span&gt;;
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx = {}
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/sub"&lt;/span&gt;, { ctx = ctx })

         ngx.say(ctx.foo);
         ngx.say(ngx.ctx.foo);
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then request &lt;code&gt;GET /lua&lt;/code&gt; gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bar
nil
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is also possible to use this &lt;code&gt;ctx&lt;/code&gt; option to share the same &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table between the current (parent) request and the subrequest:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"bar"&lt;/span&gt;;
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/sub"&lt;/span&gt;, { ctx = ngx.ctx })
         ngx.say(ngx.ctx.foo);
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Request &lt;code&gt;GET /lua&lt;/code&gt; yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that subrequests issued by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; inherit all the
request headers of the current request by default and that this may have unexpected side effects on the
subrequest responses. For example, when using the standard &lt;code&gt;ngx_proxy&lt;/code&gt; module to serve
subrequests, an "Accept-Encoding: gzip" header in the main request may result
in gzipped responses that cannot be handled properly in Lua code. Original request headers should be ignored by setting
&lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers" rel="nofollow"&gt;proxy_pass_request_headers&lt;/a&gt; to &lt;code&gt;off&lt;/code&gt; in subrequest locations.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;body&lt;/code&gt; option is not specified and the &lt;code&gt;always_forward_body&lt;/code&gt; option is false (the default value), the &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; subrequests will inherit the request bodies of the parent request (if any).&lt;/p&gt;
&lt;p&gt;There is a hard-coded upper limit on the number of concurrent subrequests possible for every main request. In older versions of Nginx, the limit was &lt;code&gt;50&lt;/code&gt; concurrent subrequests and in more recent versions, Nginx &lt;code&gt;1.1.x&lt;/code&gt; onwards, this was increased to &lt;code&gt;200&lt;/code&gt; concurrent subrequests. When this limit is exceeded, the following error message is added to the &lt;code&gt;error.log&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[error] 13983#0: *1 subrequests cycle while processing "/uri"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The limit can be manually modified if required by editing the definition of the &lt;code&gt;NGX_HTTP_MAX_SUBREQUESTS&lt;/code&gt; macro in the &lt;code&gt;nginx/src/http/ngx_http_request.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;Please also refer to restrictions on capturing locations configured by &lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;subrequest directives of other modules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocationcapture_multi" class="anchor" aria-hidden="true" href="#ngxlocationcapture_multi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.location.capture_multi&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res1, res2, ... = ngx.location.capture_multi({ {uri, options?}, {uri, options?}, ... })&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;, but supports multiple subrequests running in parallel.&lt;/p&gt;
&lt;p&gt;This function issues several parallel subrequests specified by the input table and returns their results in the same order. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res1, res2, res3 &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;{
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } },
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { method &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_POST&lt;/span&gt;, body &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } },
 }

 &lt;span class="pl-k"&gt;if&lt;/span&gt; res1.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_OK&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;if&lt;/span&gt; res2.&lt;span class="pl-smi"&gt;body&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BLAH&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function will not return until all the subrequests terminate.
The total latency is the longest latency of the individual subrequests rather than the sum.&lt;/p&gt;
&lt;p&gt;Lua tables can be used for both requests and responses when the number of subrequests to be issued is not known in advance:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; construct the requests table&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; reqs &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/mysql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/postgres&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/redis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/memcached&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; issue all the requests at once and wait until they all return&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; resps &lt;span class="pl-k"&gt;=&lt;/span&gt; { ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;(reqs) }

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; loop over the responses table&lt;/span&gt;
 &lt;span class="pl-k"&gt;for&lt;/span&gt; i, resp &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;ipairs&lt;/span&gt;(resps) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; process the response table "resp"&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; function is just a special form
of this function. Logically speaking, the &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; can be implemented like this&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-smi"&gt;capture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
     &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;uri&lt;/span&gt;, &lt;span class="pl-smi"&gt;args&lt;/span&gt;)
         &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;({ {uri, args} })
     &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please also refer to restrictions on capturing locations configured by &lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;subrequest directives of other modules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxstatus" class="anchor" aria-hidden="true" href="#ngxstatus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.status&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Read and write the current request's response status. This should be called
before sending out the response headers.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_CREATED&lt;/span&gt;
 status &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.status&lt;/code&gt; after the response header is sent out has no effect but leaving an error message in your Nginx's error log file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;attempt to set ngx.status after sending out response headers
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxheaderheader" class="anchor" aria-hidden="true" href="#ngxheaderheader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.header.HEADER&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.header.HEADER = VALUE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.header.HEADER&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set, add to, or clear the current request's &lt;code&gt;HEADER&lt;/code&gt; response header that is to be sent.&lt;/p&gt;
&lt;p&gt;Underscores (&lt;code&gt;_&lt;/code&gt;) in the header names will be replaced by hyphens (&lt;code&gt;-&lt;/code&gt;) by default. This transformation can be turned off via the &lt;a href="#lua_transform_underscores_in_response_headers"&gt;lua_transform_underscores_in_response_headers&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;The header names are matched case-insensitively.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; equivalent to ngx.header["Content-Type"] = 'text/plain'&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;

 ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blah blah&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multi-value headers can be set this way:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Set-Cookie&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a=32; path=/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b=4; path=/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Set-Cookie: a=32&lt;span class="pl-k"&gt;;&lt;/span&gt; path=/
 Set-Cookie: b=4&lt;span class="pl-k"&gt;;&lt;/span&gt; path=/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in the response headers.&lt;/p&gt;
&lt;p&gt;Only Lua tables are accepted (Only the last element in the table will take effect for standard headers such as &lt;code&gt;Content-Type&lt;/code&gt; that only accept a single value).&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting a slot to &lt;code&gt;nil&lt;/code&gt; effectively removes it from the response headers:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The same applies to assigning an empty table:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.header.HEADER&lt;/code&gt; after sending out response headers (either explicitly with &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or implicitly with &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; and similar) will log an error message.&lt;/p&gt;
&lt;p&gt;Reading &lt;code&gt;ngx.header.HEADER&lt;/code&gt; will return the value of the response header named &lt;code&gt;HEADER&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Underscores (&lt;code&gt;_&lt;/code&gt;) in the header names will also be replaced by dashes (&lt;code&gt;-&lt;/code&gt;) and the header names will be matched case-insensitively. If the response header is not present at all, &lt;code&gt;nil&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;This is particularly useful in the context of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$footer&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;;

     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://some-backend;

     &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;if&lt;/span&gt; ngx.header[&lt;span class="pl-s"&gt;"X-My-Header"&lt;/span&gt;] == &lt;span class="pl-s"&gt;"blah"&lt;/span&gt; then
             ngx.var.&lt;span class="pl-k"&gt;footer&lt;/span&gt; = &lt;span class="pl-s"&gt;"some value"&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }

     &lt;span class="pl-k"&gt;echo_after_body&lt;/span&gt; &lt;span class="pl-smi"&gt;$footer&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multi-value headers, all of the values of header will be collected in order and returned as a Lua table. For example, response headers&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Foo: bar
Foo: baz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will result in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to be returned when reading &lt;code&gt;ngx.header.Foo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;ngx.header&lt;/code&gt; is not a normal Lua table and as such, it is not possible to iterate through it using the Lua &lt;code&gt;ipairs&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;Note: &lt;code&gt;HEADER&lt;/code&gt; and &lt;code&gt;VALUE&lt;/code&gt; will be truncated if they
contain the &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; characters. The truncated values
will contain all characters up to (and excluding) the first occurrence of
&lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For reading &lt;em&gt;request&lt;/em&gt; headers, use the &lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrespget_headers" class="anchor" aria-hidden="true" href="#ngxrespget_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.resp.get_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;headers, err = ngx.resp.get_headers(max_headers?, raw?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current response headers for the current request.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; h, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;resp&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current response here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;for&lt;/span&gt; k, v &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;pairs&lt;/span&gt;(h) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function has the same signature as &lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt; except getting response headers instead of request headers.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 response headers are parsed by default (including those with the same name) and that additional response headers are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqis_internal" class="anchor" aria-hidden="true" href="#ngxreqis_internal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.is_internal&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;is_internal = ngx.req.is_internal()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a boolean indicating whether the current request is an "internal request", i.e.,
a request initiated from inside the current Nginx server instead of from the client side.&lt;/p&gt;
&lt;p&gt;Subrequests are all internal requests and so are requests after internal redirects.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqstart_time" class="anchor" aria-hidden="true" href="#ngxreqstart_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.start_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.req.start_time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a floating-point number representing the timestamp (including milliseconds as the decimal part) when the current request was created.&lt;/p&gt;
&lt;p&gt;The following example emulates the &lt;code&gt;$request_time&lt;/code&gt; variable value (provided by &lt;a href="http://nginx.org/en/docs/http/ngx_http_log_module.html" rel="nofollow"&gt;ngx_http_log_module&lt;/a&gt;) in pure Lua:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; request_time &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;now&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;start_time&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.7.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt; and &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqhttp_version" class="anchor" aria-hidden="true" href="#ngxreqhttp_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.http_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;num = ngx.req.http_version()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the HTTP version number for the current request as a Lua number.&lt;/p&gt;
&lt;p&gt;Current possible values are 2.0, 1.0, 1.1, and 0.9. Returns &lt;code&gt;nil&lt;/code&gt; for unrecognized values.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.7.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqraw_header" class="anchor" aria-hidden="true" href="#ngxreqraw_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.raw_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.req.raw_header(no_request_line?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the original raw HTTP protocol header received by the Nginx server.&lt;/p&gt;
&lt;p&gt;By default, the request line and trailing &lt;code&gt;CR LF&lt;/code&gt; terminator will also be included. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;raw_header&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /t HTTP/1.1
Host: localhost
Connection: close
Foo: bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can specify the optional
&lt;code&gt;no_request_line&lt;/code&gt; argument as a &lt;code&gt;true&lt;/code&gt; value to exclude the request line from the result. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;raw_header&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;outputs something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host: localhost
Connection: close
Foo: bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.7.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This method does not work in HTTP/2 requests yet.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_method" class="anchor" aria-hidden="true" href="#ngxreqget_method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_method&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;method_name = ngx.req.get_method()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, balancer_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the current request's request method name. Strings like &lt;code&gt;"GET"&lt;/code&gt; and &lt;code&gt;"POST"&lt;/code&gt; are returned instead of numerical &lt;a href="#http-method-constants"&gt;method constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If the current request is an Nginx subrequest, then the subrequest's method name will be returned.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_method"&gt;ngx.req.set_method&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_method" class="anchor" aria-hidden="true" href="#ngxreqset_method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_method&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_method(method_id)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Overrides the current request's request method with the &lt;code&gt;method_id&lt;/code&gt; argument. Currently only numerical &lt;a href="#http-method-constants"&gt;method constants&lt;/a&gt; are supported, like &lt;code&gt;ngx.HTTP_POST&lt;/code&gt; and &lt;code&gt;ngx.HTTP_GET&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the current request is an Nginx subrequest, then the subrequest's method will be overridden.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_method"&gt;ngx.req.get_method&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_uri" class="anchor" aria-hidden="true" href="#ngxreqset_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_uri(uri, jump?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Rewrite the current request's (parsed) URI by the &lt;code&gt;uri&lt;/code&gt; argument. The &lt;code&gt;uri&lt;/code&gt; argument must be a Lua string and cannot be of zero length, or a Lua exception will be thrown.&lt;/p&gt;
&lt;p&gt;The optional boolean &lt;code&gt;jump&lt;/code&gt; argument can trigger location rematch (or location jump) as &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive, that is, when &lt;code&gt;jump&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (default to &lt;code&gt;false&lt;/code&gt;), this function will never return and it will tell Nginx to try re-searching locations with the new URI value at the later &lt;code&gt;post-rewrite&lt;/code&gt; phase and jumping to the new location.&lt;/p&gt;
&lt;p&gt;Location jump will not be triggered otherwise, and only the current request's URI will be modified, which is also the default behavior. This function will return but with no returned values when the &lt;code&gt;jump&lt;/code&gt; argument is &lt;code&gt;false&lt;/code&gt; or absent altogether.&lt;/p&gt;
&lt;p&gt;For example, the following Nginx config snippet&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo&lt;span class="pl-c1"&gt; last&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded in Lua like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, Nginx config&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo break;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded in Lua as&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or equivalently,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;jump&lt;/code&gt; argument can only be set to &lt;code&gt;true&lt;/code&gt; in &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt;. Use of jump in other contexts is prohibited and will throw out a Lua exception.&lt;/p&gt;
&lt;p&gt;A more sophisticated example involving regex substitutions is as follows&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; uri = ngx.re.sub(ngx.var.uri, &lt;span class="pl-s"&gt;"^/test/(.*)"&lt;/span&gt;, &lt;span class="pl-s"&gt;"/&lt;span class="pl-smi"&gt;$1&lt;/span&gt;"&lt;/span&gt;, &lt;span class="pl-s"&gt;"o"&lt;/span&gt;)
         ngx.req.set_uri(uri)
     }
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://my_backend;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which is functionally equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^/test/(.*) &lt;/span&gt;/&lt;span class="pl-smi"&gt;$1&lt;/span&gt; break;
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://my_backend;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that it is not possible to use this interface to rewrite URI arguments and that &lt;a href="#ngxreqset_uri_args"&gt;ngx.req.set_uri_args&lt;/a&gt; should be used for this instead. For instance, Nginx config&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo?a=3?&lt;span class="pl-c1"&gt; last&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded as&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.req.set_uri_args("a=3")
 ngx.req.set_uri("/foo", true)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.req.set_uri_args({&lt;span class="pl-k"&gt;a&lt;/span&gt; = 3})
 ngx.req.set_uri("/foo", true)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This interface was first introduced in the &lt;code&gt;v0.3.1rc14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_uri_args" class="anchor" aria-hidden="true" href="#ngxreqset_uri_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_uri_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_uri_args(args)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Rewrite the current request's URI query arguments by the &lt;code&gt;args&lt;/code&gt; argument. The &lt;code&gt;args&lt;/code&gt; argument can be either a Lua string, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=hello%20world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or a Lua table holding the query arguments' key-value pairs, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;({ a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where in the latter case, this method will escape argument keys and values according to the URI escaping rule.&lt;/p&gt;
&lt;p&gt;Multi-value arguments are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;({ a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;} })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which will result in a query string like &lt;code&gt;a=3&amp;amp;b=5&amp;amp;b=6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This interface was first introduced in the &lt;code&gt;v0.3.1rc13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_uri_args" class="anchor" aria-hidden="true" href="#ngxreqget_uri_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_uri_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;args, err = ngx.req.get_uri_args(max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request URL query arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err = ngx.req.get_uri_args()

         &lt;span class="pl-k"&gt;if&lt;/span&gt; err == &lt;span class="pl-s"&gt;"truncated"&lt;/span&gt; then
             -- &lt;span class="pl-k"&gt;one&lt;/span&gt; can choose to ignore or reject the current request here
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         &lt;span class="pl-k"&gt;for&lt;/span&gt; key, val in pairs(args) do
             &lt;span class="pl-k"&gt;if&lt;/span&gt; type(val) == &lt;span class="pl-s"&gt;"table"&lt;/span&gt; then
                 ngx.say(key, ": ", table.concat(val, ", "))
             &lt;span class="pl-k"&gt;else&lt;/span&gt;
                 ngx.say(key, ": ", val)
             &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /test?foo=bar&amp;amp;bar=baz&amp;amp;bar=blah&lt;/code&gt; will yield the response body&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: bar
 bar: baz, blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple occurrences of an argument key will result in a table value holding all the values for that key in order.&lt;/p&gt;
&lt;p&gt;Keys and values are unescaped according to URI escaping rules. In the settings above, &lt;code&gt;GET /test?a%20b=1%61+2&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; a b: 1a 2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments without the &lt;code&gt;=&amp;lt;value&amp;gt;&lt;/code&gt; parts are treated as boolean arguments. &lt;code&gt;GET /test?foo&amp;amp;bar&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
 bar: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, they will take Lua boolean values &lt;code&gt;true&lt;/code&gt;. However, they are different from arguments taking empty string values. &lt;code&gt;GET /test?foo=&amp;amp;bar=&lt;/code&gt; will give something like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo:
 bar:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Empty key arguments are discarded. &lt;code&gt;GET /test?=hello&amp;amp;=world&lt;/code&gt; will yield an empty output for instance.&lt;/p&gt;
&lt;p&gt;Updating query arguments via the Nginx variable &lt;code&gt;$args&lt;/code&gt; (or &lt;code&gt;ngx.var.args&lt;/code&gt; in Lua) at runtime is also supported:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=42&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here the &lt;code&gt;args&lt;/code&gt; table will always look like&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;regardless of the actual request query string.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 request arguments are parsed by default (including those with the same name) and that additional request arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_args&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_post_args" class="anchor" aria-hidden="true" href="#ngxreqget_post_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_post_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;args, err = ngx.req.get_post_args(max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request POST query arguments (of the MIME type &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;). Call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; to read the request body first or turn on the &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; directive to avoid errors.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.req.read_body()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err = ngx.req.get_post_args()

         &lt;span class="pl-k"&gt;if&lt;/span&gt; err == &lt;span class="pl-s"&gt;"truncated"&lt;/span&gt; then
             -- &lt;span class="pl-k"&gt;one&lt;/span&gt; can choose to ignore or reject the current request here
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         &lt;span class="pl-k"&gt;if&lt;/span&gt; not args then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to get post args: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         for key, val in pairs(args) do&lt;/span&gt;
&lt;span class="pl-s"&gt;             if type(val) == "&lt;/span&gt;table&lt;span class="pl-s"&gt;" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say(key, "&lt;/span&gt;: &lt;span class="pl-s"&gt;", table.concat(val, "&lt;/span&gt;, &lt;span class="pl-s"&gt;"))&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say(key, "&lt;/span&gt;: &lt;span class="pl-s"&gt;", val)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Post request with the body 'foo=bar&amp;amp;bar=baz&amp;amp;bar=blah'&lt;/span&gt;
 $ curl --data &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo=bar&amp;amp;bar=baz&amp;amp;bar=blah&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; localhost/test&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield the response body like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: bar
 bar: baz, blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple occurrences of an argument key will result in a table value holding all of the values for that key in order.&lt;/p&gt;
&lt;p&gt;Keys and values will be unescaped according to URI escaping rules.&lt;/p&gt;
&lt;p&gt;With the settings above,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; POST request with body 'a%20b=1%61+2'&lt;/span&gt;
 $ curl -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a%20b=1%61+2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; localhost/test&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; a b: 1a 2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments without the &lt;code&gt;=&amp;lt;value&amp;gt;&lt;/code&gt; parts are treated as boolean arguments. &lt;code&gt;POST /test&lt;/code&gt; with the request body &lt;code&gt;foo&amp;amp;bar&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
 bar: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, they will take Lua boolean values &lt;code&gt;true&lt;/code&gt;. However, they are different from arguments taking empty string values. &lt;code&gt;POST /test&lt;/code&gt; with request body &lt;code&gt;foo=&amp;amp;bar=&lt;/code&gt; will return something like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo:
 bar:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Empty key arguments are discarded. &lt;code&gt;POST /test&lt;/code&gt; with body &lt;code&gt;=hello&amp;amp;=world&lt;/code&gt; will yield empty outputs for instance.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 request arguments are parsed by default (including those with the same name) and that additional request arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_args&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_headers" class="anchor" aria-hidden="true" href="#ngxreqget_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;headers, err = ngx.req.get_headers(max_headers?, raw?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request headers.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; h, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;for&lt;/span&gt; k, v &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;pairs&lt;/span&gt;(h) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To read an individual header:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Host: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Host&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;a href="#ngxvarvariable"&gt;ngx.var.HEADER&lt;/a&gt; API call, which uses core &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_http_" rel="nofollow"&gt;$http_HEADER&lt;/a&gt; variables, may be more preferable for reading individual request headers.&lt;/p&gt;
&lt;p&gt;For multiple instances of request headers such as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Foo: foo
 Foo: bar
 Foo: baz&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the value of &lt;code&gt;ngx.req.get_headers()["Foo"]&lt;/code&gt; will be a Lua (array) table such as:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that a maximum of 100 request headers are parsed by default (including those with the same name) and that additional request headers are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_headers&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; headers, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request headers received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; headers, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_headers&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.6.9&lt;/code&gt; release, all the header names in the Lua table returned are converted to the pure lower-case form by default, unless the &lt;code&gt;raw&lt;/code&gt; argument is set to &lt;code&gt;true&lt;/code&gt; (default to &lt;code&gt;false&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Also, by default, an &lt;code&gt;__index&lt;/code&gt; metamethod is added to the resulting Lua table and will normalize the keys to a pure lowercase form with all underscores converted to dashes in case of a lookup miss. For example, if a request header &lt;code&gt;My-Foo-Header&lt;/code&gt; is present, then the following invocations will all pick up the value of this header correctly:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers.&lt;span class="pl-smi"&gt;my_foo_header&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My-Foo-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my-foo-header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;__index&lt;/code&gt; metamethod will not be added when the &lt;code&gt;raw&lt;/code&gt; argument is set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_header" class="anchor" aria-hidden="true" href="#ngxreqset_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_header(header_name, header_value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request header named &lt;code&gt;header_name&lt;/code&gt; to value &lt;code&gt;header_value&lt;/code&gt;, overriding any existing ones.&lt;/p&gt;
&lt;p&gt;By default, all the subrequests subsequently initiated by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; will inherit the new header.&lt;/p&gt;
&lt;p&gt;Here is an example of setting the &lt;code&gt;Content-Type&lt;/code&gt; header:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;header_value&lt;/code&gt; can take an array list of values,
for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will produce two new request headers:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Foo: a
 Foo: abc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and old &lt;code&gt;Foo&lt;/code&gt; headers will be overridden if there is any.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;header_value&lt;/code&gt; argument is &lt;code&gt;nil&lt;/code&gt;, the request header will be removed. So&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;clear_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqclear_header" class="anchor" aria-hidden="true" href="#ngxreqclear_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.clear_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.clear_header(header_name)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Clears the current request's request header named &lt;code&gt;header_name&lt;/code&gt;. None of the current request's existing subrequests will be affected but subsequently initiated subrequests will inherit the change by default.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqread_body" class="anchor" aria-hidden="true" href="#ngxreqread_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.read_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.read_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Reads the client request body synchronously without blocking the Nginx event loop.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;read_body&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; args &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the request body is already read previously by turning on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; or by using other modules, then this function does not run and returns immediately.&lt;/p&gt;
&lt;p&gt;If the request body has already been explicitly discarded, either by the &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; function or other modules, this function does not run and returns immediately.&lt;/p&gt;
&lt;p&gt;In case of errors, such as connection errors while reading the data, this method will throw out a Lua exception &lt;em&gt;or&lt;/em&gt; terminate the current request with a 500 status code immediately.&lt;/p&gt;
&lt;p&gt;The request body data read using this function can be retrieved later via &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt; or, alternatively, the temporary file name for the body data cached to disk using &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;. This depends on&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;whether the current request body is already larger than the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;and whether &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only" rel="nofollow"&gt;client_body_in_file_only&lt;/a&gt; has been switched on.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In cases where current request may have a request body and the request body data is not required, The &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; function must be used to explicitly discard the request body to avoid breaking things under HTTP 1.1 keepalive or HTTP 1.1 pipelining.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqdiscard_body" class="anchor" aria-hidden="true" href="#ngxreqdiscard_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.discard_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.discard_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly discard the request body, i.e., read the data on the connection and throw it away immediately (without using the request body by any means).&lt;/p&gt;
&lt;p&gt;This function is an asynchronous call and returns immediately.&lt;/p&gt;
&lt;p&gt;If the request body has already been read, this function does nothing and returns immediately.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_body_data" class="anchor" aria-hidden="true" href="#ngxreqget_body_data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_body_data&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data = ngx.req.get_body_data()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves in-memory request body data. It returns a Lua string rather than a Lua table holding all the parsed query arguments. Use the &lt;a href="#ngxreqget_post_args"&gt;ngx.req.get_post_args&lt;/a&gt; function instead if a Lua table is required.&lt;/p&gt;
&lt;p&gt;This function returns &lt;code&gt;nil&lt;/code&gt; if&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the request body has not been read,&lt;/li&gt;
&lt;li&gt;the request body has been read into disk temporary files,&lt;/li&gt;
&lt;li&gt;or the request body has zero size.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however).&lt;/p&gt;
&lt;p&gt;If the request body has been read into disk files, try calling the &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;To force in-memory request bodies, try setting &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; to the same size value in &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that calling this function instead of using &lt;code&gt;ngx.var.request_body&lt;/code&gt; or &lt;code&gt;ngx.var.echo_request_body&lt;/code&gt; is more efficient because it can save one dynamic memory allocation and one data copy.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_body_file" class="anchor" aria-hidden="true" href="#ngxreqget_body_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_body_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;file_name = ngx.req.get_body_file()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the file name for the in-file request body data. Returns &lt;code&gt;nil&lt;/code&gt; if the request body has not been read or has been read into memory.&lt;/p&gt;
&lt;p&gt;The returned file is read only and is usually cleaned up by Nginx's memory pool. It should not be manually modified, renamed, or removed in Lua code.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however).&lt;/p&gt;
&lt;p&gt;If the request body has been read into memory, try calling the &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;To force in-file request bodies, try turning on &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only" rel="nofollow"&gt;client_body_in_file_only&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_body_data" class="anchor" aria-hidden="true" href="#ngxreqset_body_data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_body_data&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_body_data(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request body using the in-memory data specified by the &lt;code&gt;data&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however). Additionally, the request body must not have been previously discarded by &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Whether the previous request body has been read into memory or buffered into a disk file, it will be freed or the disk file will be cleaned up immediately, respectively.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_body_file"&gt;ngx.req.set_body_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_body_file" class="anchor" aria-hidden="true" href="#ngxreqset_body_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_body_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_body_file(file_name, auto_clean?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request body using the in-file data specified by the &lt;code&gt;file_name&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however). Additionally, the request body must not have been previously discarded by &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If the optional &lt;code&gt;auto_clean&lt;/code&gt; argument is given a &lt;code&gt;true&lt;/code&gt; value, then this file will be removed at request completion or the next time this function or &lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt; are called in the same request. The &lt;code&gt;auto_clean&lt;/code&gt; is default to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Please ensure that the file specified by the &lt;code&gt;file_name&lt;/code&gt; argument exists and is readable by an Nginx worker process by setting its permission properly to avoid Lua exception errors.&lt;/p&gt;
&lt;p&gt;Whether the previous request body has been read into memory or buffered into a disk file, it will be freed or the disk file will be cleaned up immediately, respectively.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqinit_body" class="anchor" aria-hidden="true" href="#ngxreqinit_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.init_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.init_body(buffer_size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates a new blank request body for the current request and inializes the buffer for later request body data writing via the &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt; and &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; APIs.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;buffer_size&lt;/code&gt; argument is specified, then its value will be used for the size of the memory buffer for body writing with &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;. If the argument is omitted, then the value specified by the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; directive will be used instead.&lt;/p&gt;
&lt;p&gt;When the data can no longer be hold in the memory buffer for the request body, then the data will be flushed onto a temporary file just like the standard request body reader in the Nginx core.&lt;/p&gt;
&lt;p&gt;It is important to always call the &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; after all the data has been appended onto the current request body. Also, when this function is used together with &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;, it is required to call &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; &lt;em&gt;before&lt;/em&gt; this function, or you will get the "request body already exists" error message.&lt;/p&gt;
&lt;p&gt;The usage of this function is often like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;init_body&lt;/span&gt;(&lt;span class="pl-c1"&gt;128&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; buffer is 128KB&lt;/span&gt;
 &lt;span class="pl-k"&gt;for&lt;/span&gt; chunk &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;next_data_chunk&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
     ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;append_body&lt;/span&gt;(chunk) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; each chunk can be 4KB&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;finish_body&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;, &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqappend_body" class="anchor" aria-hidden="true" href="#ngxreqappend_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.append_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.append_body(data_chunk)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Append new data chunk specified by the &lt;code&gt;data_chunk&lt;/code&gt; argument onto the existing request body created by the &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt; call.&lt;/p&gt;
&lt;p&gt;When the data can no longer be hold in the memory buffer for the request body, then the data will be flushed onto a temporary file just like the standard request body reader in the Nginx core.&lt;/p&gt;
&lt;p&gt;It is important to always call the &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; after all the data has been appended onto the current request body.&lt;/p&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;, &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqfinish_body" class="anchor" aria-hidden="true" href="#ngxreqfinish_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.finish_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.finish_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Completes the construction process of the new request body created by the &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt; and &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt; calls.&lt;/p&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;, &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqsocket" class="anchor" aria-hidden="true" href="#ngxreqsocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.socket&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.req.socket()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.req.socket(raw)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a read-only cosocket object that wraps the downstream connection. Only &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt; and &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt; methods are supported on this object.&lt;/p&gt;
&lt;p&gt;In case of error, &lt;code&gt;nil&lt;/code&gt; will be returned as well as a string describing the error.&lt;/p&gt;
&lt;p&gt;The socket object returned by this method is usually used to read the current request's body in a streaming fashion. Do not turn on the &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; directive, and do not mix this call with &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; and &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If any request body data has been pre-read into the Nginx core request header buffer, the resulting cosocket object will take care of this to avoid potential data loss resulting from such pre-reading.
Chunked request bodies are not yet supported in this API.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.9.0&lt;/code&gt; release, this function accepts an optional boolean &lt;code&gt;raw&lt;/code&gt; argument. When this argument is &lt;code&gt;true&lt;/code&gt;, this function returns a full-duplex cosocket object wrapping around the raw downstream connection socket, upon which you can call the &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;, and &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;raw&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;, it is required that no pending data from any previous &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;, or &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; calls exists. So if you have these downstream output calls previously, you should call &lt;a href="#ngxflush"&gt;ngx.flush(true)&lt;/a&gt; before calling &lt;code&gt;ngx.req.socket(true)&lt;/code&gt; to ensure that there is no pending output data. If the request body has not been read yet, then this "raw socket" can also be used to read the request body.&lt;/p&gt;
&lt;p&gt;You can use the "raw request socket" returned by &lt;code&gt;ngx.req.socket(true)&lt;/code&gt; to implement fancy protocols like &lt;a href="https://en.wikipedia.org/wiki/WebSocket" rel="nofollow"&gt;WebSocket&lt;/a&gt;, or just emit your own raw HTTP response header or body data. You can refer to the &lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket library&lt;/a&gt; for a real world example.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxexec" class="anchor" aria-hidden="true" href="#ngxexec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.exec&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.exec(uri, args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Does an internal redirect to &lt;code&gt;uri&lt;/code&gt; with &lt;code&gt;args&lt;/code&gt; and is similar to the &lt;a href="http://github.com/openresty/echo-nginx-module#echo_exec"&gt;echo_exec&lt;/a&gt; directive of the &lt;a href="http://github.com/openresty/echo-nginx-module"&gt;echo-nginx-module&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a=3&amp;amp;b=5&amp;amp;c=6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location?a=3&amp;amp;b=5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c=6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The optional second &lt;code&gt;args&lt;/code&gt; can be used to specify extra URI query arguments, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=hello%20world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, a Lua table can be passed for the &lt;code&gt;args&lt;/code&gt; argument for ngx_lua to carry out URI escaping and string concatenation.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result is exactly the same as the previous example.&lt;/p&gt;
&lt;p&gt;The format for the Lua table passed as the &lt;code&gt;args&lt;/code&gt; argument is identical to the format used in the &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;Named locations are also supported but the second &lt;code&gt;args&lt;/code&gt; argument will be ignored if present and the querystring for the new target is inherited from the referring location (if any).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GET /foo/file.php?a=hello&lt;/code&gt; will return "hello" and not "goodbye" in the example below&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.exec("@bar", "a=goodbye");
     }
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;@bar &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args = ngx.req.get_uri_args()
         &lt;span class="pl-k"&gt;for&lt;/span&gt; key, val in pairs(args) do
             &lt;span class="pl-k"&gt;if&lt;/span&gt; key == &lt;span class="pl-s"&gt;"a"&lt;/span&gt; then
                 ngx.say(val)
             &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;code&gt;ngx.exec&lt;/code&gt; method is different from &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt; in that
it is purely an internal redirect and that no new external HTTP traffic is involved.&lt;/p&gt;
&lt;p&gt;Also note that this method call terminates the processing of the current request and that it &lt;em&gt;must&lt;/em&gt; be called before &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or explicit response body
outputs by either &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.exec(...)&lt;/code&gt; be adopted when this method call is used in contexts other than &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt; to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxredirect" class="anchor" aria-hidden="true" href="#ngxredirect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.redirect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.redirect(uri, status?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Issue an &lt;code&gt;HTTP 301&lt;/code&gt; or &lt;code&gt;302&lt;/code&gt; redirection to &lt;code&gt;uri&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Notice: the &lt;code&gt;uri&lt;/code&gt; should not contains &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt;, otherwise, the characters after &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; will be truncated, including the &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; bytes themself.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;uri&lt;/code&gt; argument will be truncated if it contains the
&lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; characters. The truncated value will contain
all characters up to (and excluding) the first occurrence of &lt;code&gt;\r&lt;/code&gt; or
&lt;code&gt;\n&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;status&lt;/code&gt; parameter specifies the HTTP status code to be used. The following status codes are supported right now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;301&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;302&lt;/code&gt; (default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;303&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;307&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;308&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is &lt;code&gt;302&lt;/code&gt; (&lt;code&gt;ngx.HTTP_MOVED_TEMPORARILY&lt;/code&gt;) by default.&lt;/p&gt;
&lt;p&gt;Here is an example assuming the current server name is &lt;code&gt;localhost&lt;/code&gt; and that it is listening on port 1984:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;HTTP_MOVED_TEMPORARILY&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Redirecting arbitrary external URLs is also supported, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can also use the numerical code directly as the second &lt;code&gt;status&lt;/code&gt; argument:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;301&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method is similar to the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive with the &lt;code&gt;redirect&lt;/code&gt; modifier in the standard
&lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;, for example, this &lt;code&gt;nginx.conf&lt;/code&gt; snippet&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo? redirect;  &lt;span class="pl-c"&gt;# nginx config&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to the following Lua code&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Lua code&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;while&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo? permanent;  &lt;span class="pl-c"&gt;# nginx config&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;HTTP_MOVED_PERMANENTLY&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Lua code&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;URI arguments can be specified as well, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this method call terminates the processing of the current request and that it &lt;em&gt;must&lt;/em&gt; be called before &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or explicit response body
outputs by either &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.redirect(...)&lt;/code&gt; be adopted when this method call is used in contexts other than &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt; to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsend_headers" class="anchor" aria-hidden="true" href="#ngxsend_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.send_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.send_headers()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly send out the response headers.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Note that there is normally no need to manually send out response headers as ngx_lua will automatically send headers out
before content is output with &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; or &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or when &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt; exits normally.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxheaders_sent" class="anchor" aria-hidden="true" href="#ngxheaders_sent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.headers_sent&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.headers_sent&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the response headers have been sent (by ngx_lua), and &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;This API was first introduced in ngx_lua v0.3.1rc6.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxprint" class="anchor" aria-hidden="true" href="#ngxprint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.print&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.print(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Emits arguments concatenated to the HTTP client (as response body). If response headers have not been sent, this function will send headers out first and then output body data.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; values will output &lt;code&gt;"nil"&lt;/code&gt; strings and Lua boolean values will output &lt;code&gt;"true"&lt;/code&gt; and &lt;code&gt;"false"&lt;/code&gt; literal strings respectively.&lt;/p&gt;
&lt;p&gt;Nested arrays of strings are permitted and the elements in the arrays will be sent one by one:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; table &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
     {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; or &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
         {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;}}
 }
 ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(table)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; hello, world: &lt;span class="pl-c1"&gt;true&lt;/span&gt; or false: nil&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Non-array table arguments will cause a Lua exception to be thrown.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;This is an asynchronous call and will return immediately without waiting for all the data to be written into the system send buffer. To run in synchronous mode, call &lt;code&gt;ngx.flush(true)&lt;/code&gt; after calling &lt;code&gt;ngx.print&lt;/code&gt;. This can be particularly useful for streaming output. See &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Please note that both &lt;code&gt;ngx.print&lt;/code&gt; and &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; will always invoke the whole Nginx output body filter chain, which is an expensive operation. So be careful when calling either of these two in a tight loop; buffer the data yourself in Lua and save the calls.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsay" class="anchor" aria-hidden="true" href="#ngxsay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.say&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.say(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just as &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; but also emit a trailing newline.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlog" class="anchor" aria-hidden="true" href="#ngxlog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.log&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.log(log_level, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Log arguments concatenated to error.log with the given logging level.&lt;/p&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; arguments are accepted and result in literal &lt;code&gt;"nil"&lt;/code&gt; string while Lua booleans result in literal &lt;code&gt;"true"&lt;/code&gt; or &lt;code&gt;"false"&lt;/code&gt; string outputs. And the &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;log_level&lt;/code&gt; argument can take constants like &lt;code&gt;ngx.ERR&lt;/code&gt; and &lt;code&gt;ngx.WARN&lt;/code&gt;. Check out &lt;a href="#nginx-log-level-constants"&gt;Nginx log level constants&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;There is a hard coded &lt;code&gt;2048&lt;/code&gt; byte limitation on error message lengths in the Nginx core. This limit includes trailing newlines and leading time stamps. If the message size exceeds this limit, Nginx will truncate the message text accordingly. This limit can be manually modified by editing the &lt;code&gt;NGX_MAX_ERROR_STR&lt;/code&gt; macro definition in the &lt;code&gt;src/core/ngx_log.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxflush" class="anchor" aria-hidden="true" href="#ngxflush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.flush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.flush(wait?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes response output to the client.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ngx.flush&lt;/code&gt; accepts an optional boolean &lt;code&gt;wait&lt;/code&gt; argument (Default: &lt;code&gt;false&lt;/code&gt;) first introduced in the &lt;code&gt;v0.3.1rc34&lt;/code&gt; release. When called with the default argument, it issues an asynchronous call (Returns immediately without waiting for output data to be written into the system send buffer). Calling the function with the &lt;code&gt;wait&lt;/code&gt; argument set to &lt;code&gt;true&lt;/code&gt; switches to synchronous mode.&lt;/p&gt;
&lt;p&gt;In synchronous mode, the function will not return until all output data has been written into the system send buffer or until the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#send_timeout" rel="nofollow"&gt;send_timeout&lt;/a&gt; setting has expired. Note that using the Lua coroutine mechanism means that this function does not block the Nginx event loop even in the synchronous mode.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;ngx.flush(true)&lt;/code&gt; is called immediately after &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, it causes the latter functions to run in synchronous mode. This can be particularly useful for streaming output.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;ngx.flush&lt;/code&gt; is not functional when in the HTTP 1.0 output buffering mode. See &lt;a href="#http-10-support"&gt;HTTP 1.0 support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxexit" class="anchor" aria-hidden="true" href="#ngxexit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.exit&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.exit(status)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;status &amp;gt;= 200&lt;/code&gt; (i.e., &lt;code&gt;ngx.HTTP_OK&lt;/code&gt; and above), it will interrupt the execution of the current request and return status code to Nginx.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;status == 0&lt;/code&gt; (i.e., &lt;code&gt;ngx.OK&lt;/code&gt;), it will only quit the current phase handler (or the content handler if the &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt; directive is used) and continue to run later phases (if any) for the current request.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;status&lt;/code&gt; argument can be &lt;code&gt;ngx.OK&lt;/code&gt;, &lt;code&gt;ngx.ERROR&lt;/code&gt;, &lt;code&gt;ngx.HTTP_NOT_FOUND&lt;/code&gt;,
&lt;code&gt;ngx.HTTP_MOVED_TEMPORARILY&lt;/code&gt;, or other &lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To return an error page with custom contents, use code snippets like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_GONE&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This is our own content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; to cause quit the whole request rather than the current phase handler&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;HTTP_OK&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The effect in action:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; $ curl -i http://localhost/test
 HTTP/1.1 410 Gone
 Server: nginx/1.0.6
 Date: Thu, 15 Sep 2011 00:51:48 GMT
 Content-Type: text/plain
 Transfer-Encoding: chunked
 Connection: keep-alive

 This is our own content&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Number literals can be used directly as the argument, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;501&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that while this method accepts all &lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt; as input, it only accepts &lt;code&gt;ngx.OK&lt;/code&gt; and &lt;code&gt;ngx.ERROR&lt;/code&gt; of the &lt;a href="#core-constants"&gt;core constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also note that this method call terminates the processing of the current request and that it is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.exit(...)&lt;/code&gt; be used to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;When being used in the contexts of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua*&lt;/a&gt;, and
&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;, &lt;code&gt;ngx.exit()&lt;/code&gt; is
an asynchronous operation and will return immediately. This behavior may change in future and it is recommended that users always use &lt;code&gt;return&lt;/code&gt; in combination as suggested above.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxeof" class="anchor" aria-hidden="true" href="#ngxeof"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.eof&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.eof()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly specify the end of the response output stream. In the case of HTTP 1.1 chunked encoded output, it will just trigger the Nginx core to send out the "last chunk".&lt;/p&gt;
&lt;p&gt;When you disable the HTTP 1.1 keep-alive feature for your downstream connections, you can rely on well written HTTP clients to close the connection actively for you when you call this method. This trick can be used do back-ground jobs without letting the HTTP clients to wait on the connection, as in the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /async &lt;/span&gt;{
     &lt;span class="pl-k"&gt;keepalive_timeout&lt;/span&gt; &lt;span class="pl-s"&gt;0&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;got&lt;/span&gt; the task!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.eof()  -- well written HTTP clients will close the connection at this point&lt;/span&gt;
&lt;span class="pl-s"&gt;         -- access MySQL, PostgreSQL, Redis, Memcached, and etc here...&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But if you create subrequests to access other locations configured by Nginx upstream modules, then you should configure those upstream modules to ignore client connection abortions if they are not by default. For example, by default the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; will terminate both the subrequest and the main request as soon as the client closes the connection, so it is important to turn on the &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_client_abort" rel="nofollow"&gt;proxy_ignore_client_abort&lt;/a&gt; directive in your location block configured by &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;proxy_ignore_client_abort&lt;/span&gt;&lt;span class="pl-c1"&gt; on&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A better way to do background jobs is to use the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsleep" class="anchor" aria-hidden="true" href="#ngxsleep"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.sleep&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.sleep(seconds)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sleeps for the specified seconds without blocking. One can specify time resolution up to 0.001 seconds (i.e., one milliseconds).&lt;/p&gt;
&lt;p&gt;Behind the scene, this method makes use of the Nginx timers.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.7.20&lt;/code&gt; release, The &lt;code&gt;0&lt;/code&gt; time argument can also be specified.&lt;/p&gt;
&lt;p&gt;This method was introduced in the &lt;code&gt;0.5.0rc30&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxescape_uri" class="anchor" aria-hidden="true" href="#ngxescape_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.escape_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.escape_uri(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Escape &lt;code&gt;str&lt;/code&gt; as a URI component.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxunescape_uri" class="anchor" aria-hidden="true" href="#ngxunescape_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.unescape_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.unescape_uri(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unescape &lt;code&gt;str&lt;/code&gt; as an escaped URI component.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ngx.&lt;span class="pl-c1"&gt;unescape_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b%20r56+7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;b r56 7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxencode_args" class="anchor" aria-hidden="true" href="#ngxencode_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.encode_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.encode_args(table)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encode the Lua table to a query args string according to the URI encoded rules.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;foo=3&amp;amp;b%20r=hello%20world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The table keys must be Lua strings.&lt;/p&gt;
&lt;p&gt;Multi-value query args are also supported. Just use a Lua table for the argument's value, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({baz &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baz=32&amp;amp;baz=hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the value table is empty and the effect is equivalent to the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Boolean argument values are also supported, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a&amp;amp;b=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the argument value is &lt;code&gt;false&lt;/code&gt;, then the effect is equivalent to the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.3.1rc27&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxdecode_args" class="anchor" aria-hidden="true" href="#ngxdecode_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.decode_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;table, err = ngx.decode_args(str, max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Decodes a URI encoded query-string into a Lua table. This is the inverse function of &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;max_args&lt;/code&gt; argument can be used to specify the maximum number of arguments parsed from the &lt;code&gt;str&lt;/code&gt; argument. By default, a maximum of 100 request arguments are parsed (including those with the same name) and that additional URI arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;decode_args&lt;/span&gt;(str, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;This method was introduced in the &lt;code&gt;v0.5.0rc29&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxencode_base64" class="anchor" aria-hidden="true" href="#ngxencode_base64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.encode_base64&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.encode_base64(str, no_padding?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encodes &lt;code&gt;str&lt;/code&gt; to a base64 digest.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.9.16&lt;/code&gt; release, an optional boolean-typed &lt;code&gt;no_padding&lt;/code&gt; argument can be specified to control whether the base64 padding should be appended to the resulting digest (default to &lt;code&gt;false&lt;/code&gt;, i.e., with padding enabled).&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxdecode_base64" class="anchor" aria-hidden="true" href="#ngxdecode_base64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.decode_base64&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.decode_base64(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Decodes the &lt;code&gt;str&lt;/code&gt; argument as a base64 digest to the raw form. Returns &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;str&lt;/code&gt; is not well formed.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcrc32_short" class="anchor" aria-hidden="true" href="#ngxcrc32_short"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.crc32_short&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;intval = ngx.crc32_short(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Calculates the CRC-32 (Cyclic Redundancy Code) digest for the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This method performs better on relatively short &lt;code&gt;str&lt;/code&gt; inputs (i.e., less than 30 ~ 60 bytes), as compared to &lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;. The result is exactly the same as &lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Behind the scene, it is just a thin wrapper around the &lt;code&gt;ngx_crc32_short&lt;/code&gt; function defined in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.3.1rc8&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcrc32_long" class="anchor" aria-hidden="true" href="#ngxcrc32_long"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.crc32_long&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;intval = ngx.crc32_long(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Calculates the CRC-32 (Cyclic Redundancy Code) digest for the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This method performs better on relatively long &lt;code&gt;str&lt;/code&gt; inputs (i.e., longer than 30 ~ 60 bytes), as compared to &lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;.  The result is exactly the same as &lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Behind the scene, it is just a thin wrapper around the &lt;code&gt;ngx_crc32_long&lt;/code&gt; function defined in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.3.1rc8&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxhmac_sha1" class="anchor" aria-hidden="true" href="#ngxhmac_sha1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.hmac_sha1&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.hmac_sha1(secret_key, str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Computes the &lt;a href="https://en.wikipedia.org/wiki/HMAC" rel="nofollow"&gt;HMAC-SHA1&lt;/a&gt; digest of the argument &lt;code&gt;str&lt;/code&gt; and turns the result using the secret key &lt;code&gt;&amp;lt;secret_key&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The raw binary form of the &lt;code&gt;HMAC-SHA1&lt;/code&gt; digest will be generated, use &lt;a href="#ngxencode_base64"&gt;ngx.encode_base64&lt;/a&gt;, for example, to encode the result to a textual representation if desired.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;thisisverysecretstuff&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; src &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some string we want to sign&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; digest &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;hmac_sha1&lt;/span&gt;(key, src)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ngx.&lt;span class="pl-c1"&gt;encode_base64&lt;/span&gt;(digest))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;R/pvxzHC4NLtj7S+kXFg/NePTmk=
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This API requires the OpenSSL library enabled in the Nginx build (usually by passing the &lt;code&gt;--with-http_ssl_module&lt;/code&gt; option to the &lt;code&gt;./configure&lt;/code&gt; script).&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc29&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxmd5" class="anchor" aria-hidden="true" href="#ngxmd5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.md5&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.md5(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the hexadecimal representation of the MD5 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /md5 &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; { ngx.say(ngx.md5(&lt;span class="pl-s"&gt;"hello"&lt;/span&gt;)) }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;5d41402abc4b2a76b9719d911017c592
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See &lt;a href="#ngxmd5_bin"&gt;ngx.md5_bin&lt;/a&gt; if the raw binary MD5 digest is required.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxmd5_bin" class="anchor" aria-hidden="true" href="#ngxmd5_bin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.md5_bin&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.md5_bin(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the binary form of the MD5 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt; if the hexadecimal form of the MD5 digest is required.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsha1_bin" class="anchor" aria-hidden="true" href="#ngxsha1_bin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.sha1_bin&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.sha1_bin(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the binary form of the SHA-1 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This function requires SHA-1 support in the Nginx build. (This usually just means OpenSSL should be installed while building Nginx).&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.0rc6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxquote_sql_str" class="anchor" aria-hidden="true" href="#ngxquote_sql_str"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.quote_sql_str&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;quoted_value = ngx.quote_sql_str(raw_value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a quoted SQL string literal according to the MySQL quoting rules.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtoday" class="anchor" aria-hidden="true" href="#ngxtoday"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.today&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.today()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns current date (in the format &lt;code&gt;yyyy-mm-dd&lt;/code&gt;) from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;This is the local time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtime" class="anchor" aria-hidden="true" href="#ngxtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the elapsed seconds from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;Updates of the Nginx time cache can be forced by calling &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxnow" class="anchor" aria-hidden="true" href="#ngxnow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.now&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.now()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a floating-point number for the elapsed time in seconds (including milliseconds as the decimal part) from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;You can forcibly update the Nginx time cache by calling &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;This API was first introduced in &lt;code&gt;v0.3.1rc32&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxupdate_time" class="anchor" aria-hidden="true" href="#ngxupdate_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.update_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.update_time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Forcibly updates the Nginx current time cache. This call involves a syscall and thus has some overhead, so do not abuse it.&lt;/p&gt;
&lt;p&gt;This API was first introduced in &lt;code&gt;v0.3.1rc32&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocaltime" class="anchor" aria-hidden="true" href="#ngxlocaltime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.localtime&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.localtime()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the current time stamp (in the format &lt;code&gt;yyyy-mm-dd hh:mm:ss&lt;/code&gt;) of the Nginx cached time (no syscall involved unlike Lua's &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.date" rel="nofollow"&gt;os.date&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;This is the local time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxutctime" class="anchor" aria-hidden="true" href="#ngxutctime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.utctime&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.utctime()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the current time stamp (in the format &lt;code&gt;yyyy-mm-dd hh:mm:ss&lt;/code&gt;) of the Nginx cached time (no syscall involved unlike Lua's &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.date" rel="nofollow"&gt;os.date&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;This is the UTC time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcookie_time" class="anchor" aria-hidden="true" href="#ngxcookie_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.cookie_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.cookie_time(sec)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a formatted string can be used as the cookie expiration time. The parameter &lt;code&gt;sec&lt;/code&gt; is the time stamp in seconds (like those returned from &lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.say(ngx.cookie_time(1290079655))
     -- &lt;span class="pl-k"&gt;yields&lt;/span&gt; &lt;span class="pl-s"&gt;"Thu, 18-Nov-10 11:27:35 GMT"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxhttp_time" class="anchor" aria-hidden="true" href="#ngxhttp_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.http_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.http_time(sec)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a formated string can be used as the http header time (for example, being used in &lt;code&gt;Last-Modified&lt;/code&gt; header). The parameter &lt;code&gt;sec&lt;/code&gt; is the time stamp in seconds (like those returned from &lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.say(ngx.http_time(1290079655))
     -- &lt;span class="pl-k"&gt;yields&lt;/span&gt; &lt;span class="pl-s"&gt;"Thu, 18 Nov 2010 11:27:35 GMT"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxparse_http_time" class="anchor" aria-hidden="true" href="#ngxparse_http_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.parse_http_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;sec = ngx.parse_http_time(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Parse the http time string (as returned by &lt;a href="#ngxhttp_time"&gt;ngx.http_time&lt;/a&gt;) into seconds. Returns the seconds or &lt;code&gt;nil&lt;/code&gt; if the input string is in bad forms.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; time = ngx.parse_http_time(&lt;span class="pl-s"&gt;"Thu, 18 Nov 2010 11:27:35 GMT"&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; time == nil then
     ...
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxis_subrequest" class="anchor" aria-hidden="true" href="#ngxis_subrequest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.is_subrequest&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.is_subrequest&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the current request is an Nginx subrequest, or &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrematch" class="anchor" aria-hidden="true" href="#ngxrematch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.match&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;captures, err = ngx.re.match(subject, regex, options?, ctx?, res_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Matches the &lt;code&gt;subject&lt;/code&gt; string using the Perl compatible regular expression &lt;code&gt;regex&lt;/code&gt; with the optional &lt;code&gt;options&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Only the first occurrence of the match is returned, or &lt;code&gt;nil&lt;/code&gt; if no match is found. In case of errors, like seeing a bad regular expression or exceeding the PCRE stack limit, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;When a match is found, a Lua table &lt;code&gt;captures&lt;/code&gt; is returned, where &lt;code&gt;captures[0]&lt;/code&gt; holds the whole substring being matched, and &lt;code&gt;captures[1]&lt;/code&gt; holds the first parenthesized sub-pattern's capturing, &lt;code&gt;captures[2]&lt;/code&gt; the second, and so on.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;

 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;match not found&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == "1"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Named captures are also supported since the &lt;code&gt;v0.7.14&lt;/code&gt; release
and are returned in the same Lua table as key-value pairs as the numbered captures.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])(?&amp;lt;remaining&amp;gt;[0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == "1"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[2] == "234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m["remaining"] == "234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unmatched subpatterns will have &lt;code&gt;false&lt;/code&gt; values in their &lt;code&gt;captures&lt;/code&gt; table fields.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(world)|(hello)|(?&amp;lt;named&amp;gt;howdy)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "hello"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == false&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[2] == "hello"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[3] == false&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m["named"] == false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Specify &lt;code&gt;options&lt;/code&gt; to control how the match operation will be performed. The following option characters are supported:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a             anchored mode (only match from the beginning)

d             enable the DFA mode (or the longest token match semantics).
              this requires PCRE 6.0+ or else a Lua exception will be thrown.
              first introduced in ngx_lua v0.3.1rc30.

D             enable duplicate named pattern support. This allows named
              subpattern names to be repeated, returning the captures in
              an array-like Lua table. for example,
                local m = ngx.re.match("hello, world",
                                       "(?&amp;lt;named&amp;gt;\w+), (?&amp;lt;named&amp;gt;\w+)",
                                       "D")
                -- m["named"] == {"hello", "world"}
              this option was first introduced in the v0.7.14 release.
              this option requires at least PCRE 8.12.

i             case insensitive mode (similar to Perl's /i modifier)

j             enable PCRE JIT compilation, this requires PCRE 8.21+ which
              must be built with the --enable-jit option. for optimum performance,
              this option should always be used together with the 'o' option.
              first introduced in ngx_lua v0.3.1rc30.

J             enable the PCRE Javascript compatible mode. this option was
              first introduced in the v0.7.14 release. this option requires
              at least PCRE 8.12.

m             multi-line mode (similar to Perl's /m modifier)

o             compile-once mode (similar to Perl's /o modifier),
              to enable the worker-process-level compiled-regex cache

s             single-line mode (similar to Perl's /s modifier)

u             UTF-8 mode. this requires PCRE to be built with
              the --enable-utf8 option or else a Lua exception will be thrown.

U             similar to "u" but disables PCRE's UTF-8 validity check on
              the subject string. first introduced in ngx_lua v0.8.1.

x             extended mode (similar to Perl's /x modifier)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These options can be combined:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err = ngx.re.match(&lt;span class="pl-s"&gt;"hello, world"&lt;/span&gt;, &lt;span class="pl-s"&gt;"HEL LO"&lt;/span&gt;, &lt;span class="pl-s"&gt;"ix"&lt;/span&gt;)
 -- m[0] == "hello"&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err = ngx.re.match(&lt;span class="pl-s"&gt;"hello, 美好生活"&lt;/span&gt;, &lt;span class="pl-s"&gt;"HELLO, (.{2})"&lt;/span&gt;, &lt;span class="pl-s"&gt;"iu"&lt;/span&gt;)
 -- m[0] == "hello, 美好"
 -- m[1] == "美好"&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;o&lt;/code&gt; option is useful for performance tuning, because the regex pattern in question will only be compiled once, cached in the worker-process level, and shared among all requests in the current Nginx worker process. The upper limit of the regex cache can be tuned via the &lt;a href="#lua_regex_cache_max_entries"&gt;lua_regex_cache_max_entries&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;The optional fourth argument, &lt;code&gt;ctx&lt;/code&gt;, can be a Lua table holding an optional &lt;code&gt;pos&lt;/code&gt; field. When the &lt;code&gt;pos&lt;/code&gt; field in the &lt;code&gt;ctx&lt;/code&gt; table argument is specified, &lt;code&gt;ngx.re.match&lt;/code&gt; will start matching from that offset (starting from 1). Regardless of the presence of the &lt;code&gt;pos&lt;/code&gt; field in the &lt;code&gt;ctx&lt;/code&gt; table, &lt;code&gt;ngx.re.match&lt;/code&gt; will always set this &lt;code&gt;pos&lt;/code&gt; field to the position &lt;em&gt;after&lt;/em&gt; the substring matched by the whole pattern in case of a successful match. When match fails, the &lt;code&gt;ctx&lt;/code&gt; table will be left intact.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1234, hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ctx)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] = "1234"&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; ctx.pos == 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; { pos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1234, hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ctx)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] = "234"&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; ctx.pos == 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;ctx&lt;/code&gt; table argument combined with the &lt;code&gt;a&lt;/code&gt; regex modifier can be used to construct a lexer atop &lt;code&gt;ngx.re.match&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that, the &lt;code&gt;options&lt;/code&gt; argument is not optional when the &lt;code&gt;ctx&lt;/code&gt; argument is specified and that the empty Lua string (&lt;code&gt;""&lt;/code&gt;) must be used as placeholder for &lt;code&gt;options&lt;/code&gt; if no meaningful regex options are required.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To confirm that PCRE JIT is enabled, activate the Nginx debug log by adding the &lt;code&gt;--with-debug&lt;/code&gt; option to Nginx or OpenResty's &lt;code&gt;./configure&lt;/code&gt; script. Then, enable the "debug" error log level in &lt;code&gt;error_log&lt;/code&gt; directive. The following message will be generated if PCRE JIT is enabled:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pcre JIT compiling result: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Starting from the &lt;code&gt;0.9.4&lt;/code&gt; release, this function also accepts a 5th argument, &lt;code&gt;res_table&lt;/code&gt;, for letting the caller supply the Lua table used to hold all the capturing results. Starting from &lt;code&gt;0.9.6&lt;/code&gt;, it is the caller's responsibility to ensure this table is empty. This is very useful for recycling Lua tables and saving GC and table allocation overhead.&lt;/p&gt;
&lt;p&gt;This feature was introduced in the &lt;code&gt;v0.2.1rc11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrefind" class="anchor" aria-hidden="true" href="#ngxrefind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.find&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;from, to, err = ngx.re.find(subject, regex, options?, ctx?, nth?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt; but only returns the beginning index (&lt;code&gt;from&lt;/code&gt;) and end index (&lt;code&gt;to&lt;/code&gt;) of the matched substring. The returned indexes are 1-based and can be fed directly into the &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-string.sub" rel="nofollow"&gt;string.sub&lt;/a&gt; API function to obtain the matched substring.&lt;/p&gt;
&lt;p&gt;In case of errors (like bad regexes or any PCRE runtime errors), this API function returns two &lt;code&gt;nil&lt;/code&gt; values followed by a string describing the error.&lt;/p&gt;
&lt;p&gt;If no match is found, this function just returns a &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Below is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; from, to, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(s, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; from &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;from: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, from)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;to: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, to)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;matched: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;string.sub&lt;/span&gt;(s, from, to))
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example produces the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from: 8
to: 11
matched: 1234
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Because this API function does not create new Lua strings nor new Lua tables, it is much faster than &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;. It should be used wherever possible.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.9.3&lt;/code&gt; release, an optional 5th argument, &lt;code&gt;nth&lt;/code&gt;, is supported to specify which (submatch) capture's indexes to return. When &lt;code&gt;nth&lt;/code&gt; is 0 (which is the default), the indexes for the whole matched substring is returned; when &lt;code&gt;nth&lt;/code&gt; is 1, then the 1st submatch capture's indexes are returned; when &lt;code&gt;nth&lt;/code&gt; is 2, then the 2nd submatch capture is returned, and so on. When the specified submatch does not have a match, then two &lt;code&gt;nil&lt;/code&gt; values will be returned. Below is an example for this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; str &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; from, to &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(str, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])([0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; from &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;matched 2nd submatch: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;string.sub&lt;/span&gt;(str, from, to))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; yields "234"&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This API function was first introduced in the &lt;code&gt;v0.9.2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxregmatch" class="anchor" aria-hidden="true" href="#ngxregmatch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.gmatch&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;iterator, err = ngx.re.gmatch(subject, regex, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;, but returns a Lua iterator instead, so as to let the user programmer iterate all the matches over the &lt;code&gt;&amp;lt;subject&amp;gt;&lt;/code&gt; string argument with the PCRE &lt;code&gt;regex&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In case of errors, like seeing an ill-formed regular expression, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;Here is a small example to demonstrate its basic usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; iterator, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gmatch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; iterator &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; m
 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == m[1] == "hello"&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == m[1] == "world"&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m == nil&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More often we just put it into a Lua loop:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; it, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gmatch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; it &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;it&lt;/span&gt;()
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; no match found (any more)&lt;/span&gt;
         &lt;span class="pl-k"&gt;break&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; found a match&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;])
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The optional &lt;code&gt;options&lt;/code&gt; argument takes exactly the same semantics as the &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The current implementation requires that the iterator returned should only be used in a single request. That is, one should &lt;em&gt;not&lt;/em&gt; assign it to a variable belonging to persistent namespace like a Lua package.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxresub" class="anchor" aria-hidden="true" href="#ngxresub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.sub&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr, n, err = ngx.re.sub(subject, regex, replace, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Substitutes the first match of the Perl compatible regular expression &lt;code&gt;regex&lt;/code&gt; on the &lt;code&gt;subject&lt;/code&gt; argument string with the string or function argument &lt;code&gt;replace&lt;/code&gt;. The optional &lt;code&gt;options&lt;/code&gt; argument has exactly the same meaning as in &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This method returns the resulting new string as well as the number of successful substitutions. In case of failures, like syntax errors in the regular expressions or the &lt;code&gt;&amp;lt;replace&amp;gt;&lt;/code&gt; string argument, it will return &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;replace&lt;/code&gt; is a string, then it is treated as a special template for string replacement. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[$0][$1]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; newstr &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, [12][1]34"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;$0&lt;/code&gt; referring to the whole substring matched by the pattern and &lt;code&gt;$1&lt;/code&gt; referring to the first parenthesized capturing substring.&lt;/p&gt;
&lt;p&gt;Curly braces can also be used to disambiguate variable names from the background string literals:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${0}00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, 100234"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Literal dollar sign characters (&lt;code&gt;$&lt;/code&gt;) in the &lt;code&gt;replace&lt;/code&gt; string argument can be escaped by another dollar sign, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, $234"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Do not use backlashes to escape dollar signs; it will not work as expected.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;replace&lt;/code&gt; argument is of type "function", then it will be invoked with the "match table" as the argument to generate the replace string literal for substitution. The "match table" fed into the &lt;code&gt;replace&lt;/code&gt; function is exactly the same as the return value of &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; func &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;m&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;][&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;( [0-9] ) [0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, func, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, [12][1]34"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The dollar sign characters in the return value of the &lt;code&gt;replace&lt;/code&gt; function argument are not special at all.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxregsub" class="anchor" aria-hidden="true" href="#ngxregsub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.gsub&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr, n, err = ngx.re.gsub(subject, regex, replace, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;, but does global substitution.&lt;/p&gt;
&lt;p&gt;Here is some examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gsub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z])[a-z]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[$0,$1]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; newstr &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "[hello,h], [world,w]"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 2&lt;/span&gt;
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; func &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;m&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gsub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z])[a-z]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, func, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "[hello,h], [world,w]"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc15&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddict" class="anchor" aria-hidden="true" href="#ngxshareddict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;dict = ngx.shared.DICT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;dict = ngx.shared[name_var]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fetching the shm-based Lua dictionary object for the shared memory zone named &lt;code&gt;DICT&lt;/code&gt; defined by the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;Shared memory zones are always shared by all the Nginx worker processes in the current Nginx server instance.&lt;/p&gt;
&lt;p&gt;The resulting object &lt;code&gt;dict&lt;/code&gt; has the following methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_stale"&gt;get_stale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_set"&gt;safe_set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_add"&gt;safe_add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictreplace"&gt;replace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictdelete"&gt;delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictincr"&gt;incr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpush"&gt;lpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpush"&gt;rpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpop"&gt;lpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpop"&gt;rpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictllen"&gt;llen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictttl"&gt;ttl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictexpire"&gt;expire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_all"&gt;flush_all&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_expired"&gt;flush_expired&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_keys"&gt;get_keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictcapacity"&gt;capacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictfree_space"&gt;free_space&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All these methods are &lt;em&gt;atomic&lt;/em&gt; operations, that is, safe from concurrent accesses from multiple Nginx worker processes for the same &lt;code&gt;lua_shared_dict&lt;/code&gt; zone.&lt;/p&gt;
&lt;p&gt;Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;http&lt;/span&gt; {
     &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;10m&lt;/span&gt;;
     &lt;span class="pl-k"&gt;server&lt;/span&gt; {
         &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/set &lt;/span&gt;{
             &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
                 &lt;span class="pl-k"&gt;local&lt;/span&gt; dogs = ngx.shared.dogs
                 dogs:&lt;span class="pl-k"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;"Jim"&lt;/span&gt;, 8)
                 ngx.say(&lt;span class="pl-s"&gt;"STORED"&lt;/span&gt;)
             }
         }
         location /get {
             content_by_lua_block {
                 local dogs = ngx.shared.dogs
                 ngx.say(dogs:get(&lt;span class="pl-s"&gt;"Jim"&lt;/span&gt;))
             }
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let us test it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; $ curl localhost/set
 STORED

 $ curl localhost/get
 8

 $ curl localhost/get
 8&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The number &lt;code&gt;8&lt;/code&gt; will be consistently output when accessing &lt;code&gt;/get&lt;/code&gt; regardless of how many Nginx workers there are because the &lt;code&gt;dogs&lt;/code&gt; dictionary resides in the shared memory and visible to &lt;em&gt;all&lt;/em&gt; of the worker processes.&lt;/p&gt;
&lt;p&gt;The shared dictionary will retain its contents through a server config reload (either by sending the &lt;code&gt;HUP&lt;/code&gt; signal to the Nginx process or by using the &lt;code&gt;-s reload&lt;/code&gt; command-line option).&lt;/p&gt;
&lt;p&gt;The contents in the dictionary storage will be lost, however, when the Nginx server quits.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget" class="anchor" aria-hidden="true" href="#ngxshareddictget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value, flags = ngx.shared.DICT:get(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieving the value in the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; for the key &lt;code&gt;key&lt;/code&gt;. If the key does not exist or has expired, then &lt;code&gt;nil&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;In case of errors, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;The value returned will have the original data type when they were inserted into the dictionary, for example, Lua booleans, numbers, or strings.&lt;/p&gt;
&lt;p&gt;The first argument to this method must be the dictionary object itself, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; value, flags &lt;span class="pl-k"&gt;=&lt;/span&gt; cats.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(cats, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use Lua's syntactic sugar for method calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; value, flags &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These two forms are fundamentally equivalent.&lt;/p&gt;
&lt;p&gt;If the user flags is &lt;code&gt;0&lt;/code&gt; (the default), then no flags value will be returned.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget_stale" class="anchor" aria-hidden="true" href="#ngxshareddictget_stale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get_stale&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value, flags, stale = ngx.shared.DICT:get_stale(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt; method but returns the value even if the key has already expired.&lt;/p&gt;
&lt;p&gt;Returns a 3rd value, &lt;code&gt;stale&lt;/code&gt;, indicating whether the key has expired or not.&lt;/p&gt;
&lt;p&gt;Note that the value of an expired key is not guaranteed to be available so one should never rely on the availability of expired items.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;0.8.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictset" class="anchor" aria-hidden="true" href="#ngxshareddictset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.set&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:set(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unconditionally sets a key-value pair into the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns three values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;success&lt;/code&gt;: boolean value to indicate whether the key-value pair is stored or not.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;err&lt;/code&gt;: textual error message, can be &lt;code&gt;"no memory"&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forcible&lt;/code&gt;: a boolean value to indicate whether other valid items have been removed forcibly when out of storage in the shared memory zone.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; argument inserted can be Lua booleans, numbers, strings, or &lt;code&gt;nil&lt;/code&gt;. Their value type will also be stored into the dictionary and the same data type can be retrieved later via the &lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;exptime&lt;/code&gt; argument specifies expiration time (in seconds) for the inserted key-value pair. The time resolution is &lt;code&gt;0.001&lt;/code&gt; seconds. If the &lt;code&gt;exptime&lt;/code&gt; takes the value &lt;code&gt;0&lt;/code&gt; (which is the default), then the item will never expire.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;flags&lt;/code&gt; argument specifies a user flags value associated with the entry to be stored. It can also be retrieved later with the value. The user flags is stored as an unsigned 32-bit integer internally. Defaults to &lt;code&gt;0&lt;/code&gt;. The user flags argument was first introduced in the &lt;code&gt;v0.5.0rc2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;When it fails to allocate memory for the current key-value item, then &lt;code&gt;set&lt;/code&gt; will try removing existing items in the storage according to the Least-Recently Used (LRU) algorithm. Note that, LRU takes priority over expiration time here. If up to tens of existing items have been removed and the storage left is still insufficient (either due to the total capacity limit specified by &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; or memory segmentation), then the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;no memory&lt;/code&gt; and &lt;code&gt;success&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If this method succeeds in storing the current item by forcibly removing other not-yet-expired items in the dictionary via LRU, the &lt;code&gt;forcible&lt;/code&gt; return value will be &lt;code&gt;true&lt;/code&gt;. If it stores the item without forcibly removing other valid items, then the return value &lt;code&gt;forcible&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The first argument to this method must be the dictionary object itself, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err, forcible &lt;span class="pl-k"&gt;=&lt;/span&gt; cats.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(cats, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;it is a nice cat!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use Lua's syntactic sugar for method calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err, forcible &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;it is a nice cat!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These two forms are fundamentally equivalent.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Please note that while internally the key-value pair is set atomically, the atomicity does not go across the method call boundary.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictsafe_set" class="anchor" aria-hidden="true" href="#ngxshareddictsafe_set"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.safe_set&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.shared.DICT:safe_set(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictadd" class="anchor" aria-hidden="true" href="#ngxshareddictadd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.add&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:add(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but only stores the key-value pair into the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; if the key does &lt;em&gt;not&lt;/em&gt; exist.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;key&lt;/code&gt; argument already exists in the dictionary (and not expired for sure), the &lt;code&gt;success&lt;/code&gt; return value will be &lt;code&gt;false&lt;/code&gt; and the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;"exists"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictsafe_add" class="anchor" aria-hidden="true" href="#ngxshareddictsafe_add"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.safe_add&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.shared.DICT:safe_add(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt; method, but never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictreplace" class="anchor" aria-hidden="true" href="#ngxshareddictreplace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.replace&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:replace(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but only stores the key-value pair into the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; if the key &lt;em&gt;does&lt;/em&gt; exist.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;key&lt;/code&gt; argument does &lt;em&gt;not&lt;/em&gt; exist in the dictionary (or expired already), the &lt;code&gt;success&lt;/code&gt; return value will be &lt;code&gt;false&lt;/code&gt; and the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictdelete" class="anchor" aria-hidden="true" href="#ngxshareddictdelete"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.delete&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.shared.DICT:delete(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unconditionally removes the key-value pair from the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is equivalent to &lt;code&gt;ngx.shared.DICT:set(key, nil)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictincr" class="anchor" aria-hidden="true" href="#ngxshareddictincr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.incr&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newval, err, forcible? = ngx.shared.DICT:incr(key, value, init?, init_ttl?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;optional requirement:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Increments the (numerical) value for &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; by the step value &lt;code&gt;value&lt;/code&gt;. Returns the new resulting number if the operation is successfully completed or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;When the key does not exist or has already expired in the shared dictionary,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;if the &lt;code&gt;init&lt;/code&gt; argument is not specified or takes the value &lt;code&gt;nil&lt;/code&gt;, this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;, or&lt;/li&gt;
&lt;li&gt;if the &lt;code&gt;init&lt;/code&gt; argument takes a number value, this method will create a new &lt;code&gt;key&lt;/code&gt; with the value &lt;code&gt;init + value&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Like the &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt; method, it also overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init_ttl&lt;/code&gt; argument specifies expiration time (in seconds) of the value when it is initialized via the &lt;code&gt;init&lt;/code&gt; argument. The time resolution is &lt;code&gt;0.001&lt;/code&gt; seconds. If &lt;code&gt;init_ttl&lt;/code&gt; takes the value &lt;code&gt;0&lt;/code&gt; (which is the default), then the item will never expire. This argument cannot be provided without providing the &lt;code&gt;init&lt;/code&gt; argument as well, and has no effect if the value already exists (e.g., if it was previously inserted via &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; or the likes).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Usage of the &lt;code&gt;init_ttl&lt;/code&gt; argument requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newval, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;incr&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black_cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)

 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(newval) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 1&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; val, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black_cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(val) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;forcible&lt;/code&gt; return value will always be &lt;code&gt;nil&lt;/code&gt; when the &lt;code&gt;init&lt;/code&gt; argument is not specified.&lt;/p&gt;
&lt;p&gt;If this method succeeds in storing the current item by forcibly removing other not-yet-expired items in the dictionary via LRU, the &lt;code&gt;forcible&lt;/code&gt; return value will be &lt;code&gt;true&lt;/code&gt;. If it stores the item without forcibly removing other valid items, then the return value &lt;code&gt;forcible&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the original value is not a valid Lua number in the dictionary, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"not a number"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; argument and &lt;code&gt;init&lt;/code&gt; argument can be any valid Lua numbers, like negative numbers or floating-point numbers.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init&lt;/code&gt; parameter was first added in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init_ttl&lt;/code&gt; parameter was introduced in the &lt;code&gt;v0.10.12rc2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictlpush" class="anchor" aria-hidden="true" href="#ngxshareddictlpush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.lpush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;length, err = ngx.shared.DICT:lpush(key, value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Inserts the specified (numerical or string) &lt;code&gt;value&lt;/code&gt; at the head of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns the number of elements in the list after the push operation.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it is created as an empty list before performing the push operation. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictrpush" class="anchor" aria-hidden="true" href="#ngxshareddictrpush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.rpush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;length, err = ngx.shared.DICT:rpush(key, value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictlpush"&gt;lpush&lt;/a&gt; method, but inserts the specified (numerical or string) &lt;code&gt;value&lt;/code&gt; at the tail of the list named &lt;code&gt;key&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictlpop" class="anchor" aria-hidden="true" href="#ngxshareddictlpop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.lpop&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val, err = ngx.shared.DICT:lpop(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Removes and returns the first element of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it will return &lt;code&gt;nil&lt;/code&gt;. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictrpop" class="anchor" aria-hidden="true" href="#ngxshareddictrpop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.rpop&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val, err = ngx.shared.DICT:rpop(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Removes and returns the last element of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it will return &lt;code&gt;nil&lt;/code&gt;. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictllen" class="anchor" aria-hidden="true" href="#ngxshareddictllen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.llen&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;len, err = ngx.shared.DICT:llen(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of elements in the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If key does not exist, it is interpreted as an empty list and 0 is returned. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictttl" class="anchor" aria-hidden="true" href="#ngxshareddictttl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.ttl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ttl, err = ngx.shared.DICT:ttl(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the remaining TTL (time-to-live in seconds) of a key-value pair in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns the TTL as a number if the operation is successfully completed or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;If the key does not exist (or has already expired), this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The TTL is originally determined by the &lt;code&gt;exptime&lt;/code&gt; argument of the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt;, &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt;, &lt;a href="#ngxshareddictreplace"&gt;replace&lt;/a&gt; (and the likes) methods. It has a time resolution of &lt;code&gt;0.001&lt;/code&gt; seconds. A value of &lt;code&gt;0&lt;/code&gt; means that the item will never expire.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a nice cat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ttl, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;ttl&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ttl) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 0.3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictexpire" class="anchor" aria-hidden="true" href="#ngxshareddictexpire"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.expire&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err = ngx.shared.DICT:expire(key, exptime)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Updates the &lt;code&gt;exptime&lt;/code&gt; (in second) of a key-value pair in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns a boolean indicating success if the operation completes or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;If the key does not exist, this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;exptime&lt;/code&gt; argument has a resolution of &lt;code&gt;0.001&lt;/code&gt; seconds. If &lt;code&gt;exptime&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, then the item will never expire.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a nice cat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)

 succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;expire&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; val, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(val) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; "a nice cat"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictflush_all" class="anchor" aria-hidden="true" href="#ngxshareddictflush_all"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.flush_all&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.shared.DICT:flush_all()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes out all the items in the dictionary. This method does not actuall free up all the memory blocks in the dictionary but just marks all the existing items as expired.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddictflush_expired"&gt;ngx.shared.DICT.flush_expired&lt;/a&gt; and &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictflush_expired" class="anchor" aria-hidden="true" href="#ngxshareddictflush_expired"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.flush_expired&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;flushed = ngx.shared.DICT:flush_expired(max_count?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes out the expired items in the dictionary, up to the maximal number specified by the optional &lt;code&gt;max_count&lt;/code&gt; argument. When the &lt;code&gt;max_count&lt;/code&gt; argument is given &lt;code&gt;0&lt;/code&gt; or not given at all, then it means unlimited. Returns the number of items that have actually been flushed.&lt;/p&gt;
&lt;p&gt;Unlike the &lt;a href="#ngxshareddictflush_all"&gt;flush_all&lt;/a&gt; method, this method actually frees up the memory used by the expired items.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.6.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddictflush_all"&gt;ngx.shared.DICT.flush_all&lt;/a&gt; and &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget_keys" class="anchor" aria-hidden="true" href="#ngxshareddictget_keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get_keys&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;keys = ngx.shared.DICT:get_keys(max_count?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fetch a list of the keys from the dictionary, up to &lt;code&gt;&amp;lt;max_count&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default, only the first 1024 keys (if any) are returned. When the &lt;code&gt;&amp;lt;max_count&amp;gt;&lt;/code&gt; argument is given the value &lt;code&gt;0&lt;/code&gt;, then all the keys will be returned even there is more than 1024 keys in the dictionary.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; Avoid calling this method on dictionaries with a very large number of keys as it may lock the dictionary for significant amount of time and block Nginx worker processes trying to access the dictionary.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictcapacity" class="anchor" aria-hidden="true" href="#ngxshareddictcapacity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.capacity&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;capacity_bytes = ngx.shared.DICT:capacity()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the capacity in bytes for the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; declared with
the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core.shdict&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; capacity_bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;capacity&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;This feature requires at least Nginx core version &lt;code&gt;0.7.3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictfree_space" class="anchor" aria-hidden="true" href="#ngxshareddictfree_space"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.free_space&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;free_page_bytes = ngx.shared.DICT:free_space()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the free page size in bytes for the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The memory for ngx.shared.DICT is allocated via the Nginx slab allocator which has each slot for
data size ranges like ~8, 9~16, 17~32, ..., 1025~2048, 2048~ bytes. And pages are assigned to a slot if there
is no room in already assigned pages for the slot.&lt;/p&gt;
&lt;p&gt;So even if the return value of the &lt;code&gt;free_space&lt;/code&gt; method is zero, there may be room in already assigned pages, so
you may successfully set a new key value pair to the shared dict without getting &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;forcible&lt;/code&gt; or
non nil &lt;code&gt;err&lt;/code&gt; from the &lt;code&gt;ngx.shared.DICT.set&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, if already assigned pages for a slot are full and a new key value pair is added to the
slot and there is no free page, you may get &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;forcible&lt;/code&gt; or non nil &lt;code&gt;err&lt;/code&gt; from the
&lt;code&gt;ngx.shared.DICT.set&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core.shdict&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; free_page_bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;free_space&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;This feature requires at least Nginx core version &lt;code&gt;1.11.7&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketudp" class="anchor" aria-hidden="true" href="#ngxsocketudp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.udp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;udpsock = ngx.socket.udp()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates and returns a UDP or datagram-oriented unix domain socket object (also known as one type of the "cosocket" objects). The following methods are supported on this object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#udpsocksetpeername"&gt;setpeername&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksend"&gt;send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockreceive"&gt;receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockclose"&gt;close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is intended to be compatible with the UDP API of the &lt;a href="http://w3.impa.br/~diego/software/luasocket/udp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; library but is 100% nonblocking out of the box.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksetpeername" class="anchor" aria-hidden="true" href="#udpsocksetpeername"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:setpeername&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:setpeername(host, port)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:setpeername("unix:/path/to/unix-domain.socket")&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Attempts to connect a UDP socket object to a remote server or to a datagram unix domain socket file. Because the datagram protocol is actually connection-less, this method does not really establish a "connection", but only just set the name of the remote peer for subsequent read/write operations.&lt;/p&gt;
&lt;p&gt;Both IP addresses and domain names can be specified as the &lt;code&gt;host&lt;/code&gt; argument. In case of domain names, this method will use Nginx core's dynamic resolver to parse the domain name without blocking and it is required to configure the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver" rel="nofollow"&gt;resolver&lt;/a&gt; directive in the &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;  &lt;span class="pl-c"&gt;# use Google's public DNS nameserver&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the nameserver returns multiple IP addresses for the host name, this method will pick up one randomly.&lt;/p&gt;
&lt;p&gt;In case of error, the method returns &lt;code&gt;nil&lt;/code&gt; followed by a string describing the error. In case of success, the method returns &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example for connecting to a UDP (memcached) server:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;

     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; sock = ngx.socket.udp()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = sock:setpeername(&lt;span class="pl-s"&gt;"my.memcached.server.domain"&lt;/span&gt;, 11211)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to connect to memcached: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;successfully connected to memcached!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         sock:close()&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since the &lt;code&gt;v0.7.18&lt;/code&gt; release, connecting to a datagram unix domain socket file is also possible on Linux:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;udp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;setpeername&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:/tmp/some-datagram-service.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect to the datagram unix domain socket: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;assuming the datagram service is listening on the unix domain socket file &lt;code&gt;/tmp/some-datagram-service.sock&lt;/code&gt; and the client socket will use the "autobind" feature on Linux.&lt;/p&gt;
&lt;p&gt;Calling this method on an already connected socket object will cause the original connection to be closed first.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksend" class="anchor" aria-hidden="true" href="#udpsocksend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:send&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:send(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sends data on the current UDP or datagram unix domain socket object.&lt;/p&gt;
&lt;p&gt;In case of success, it returns &lt;code&gt;1&lt;/code&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;The input argument &lt;code&gt;data&lt;/code&gt; can either be a Lua string or a (nested) Lua table holding string fragments. In case of table arguments, this method will copy all the string elements piece by piece to the underlying Nginx socket send buffers, which is usually optimal than doing string concatenation operations on the Lua land.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsockreceive" class="anchor" aria-hidden="true" href="#udpsockreceive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:receive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err = udpsock:receive(size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Receives data from the UDP or datagram unix domain socket object with an optional receive buffer size argument, &lt;code&gt;size&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;size&lt;/code&gt; argument is specified, then this method will use this size as the receive buffer size. But when this size is greater than &lt;code&gt;8192&lt;/code&gt;, then &lt;code&gt;8192&lt;/code&gt; will be used instead.&lt;/p&gt;
&lt;p&gt;If no argument is specified, then the maximal buffer size, &lt;code&gt;8192&lt;/code&gt; is assumed.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receive&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a packet: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a packet: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsockclose" class="anchor" aria-hidden="true" href="#udpsockclose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:close&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:close()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Closes the current UDP or datagram unix domain socket. It returns the &lt;code&gt;1&lt;/code&gt; in case of success and returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Socket objects that have not invoked this method (and associated connections) will be closed when the socket object is released by the Lua GC (Garbage Collector) or the current client HTTP request finishes processing.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksettimeout" class="anchor" aria-hidden="true" href="#udpsocksettimeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:settimeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;udpsock:settimeout(time)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the timeout value in milliseconds for subsequent socket operations (like &lt;a href="#udpsockreceive"&gt;receive&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method takes priority over those config directives, like &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketstream" class="anchor" aria-hidden="true" href="#ngxsocketstream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.stream&lt;/h2&gt;
&lt;p&gt;Just an alias to &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;. If the stream-typed cosocket may also connect to a unix domain
socket, then this API name is preferred.&lt;/p&gt;
&lt;p&gt;This API function was first added to the &lt;code&gt;v0.10.1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsockettcp" class="anchor" aria-hidden="true" href="#ngxsockettcp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.tcp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock = ngx.socket.tcp()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates and returns a TCP or stream-oriented unix domain socket object (also known as one type of the "cosocket" objects). The following methods are supported on this object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksslhandshake"&gt;sslhandshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksend"&gt;send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockclose"&gt;close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetoption"&gt;setoption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveany"&gt;receiveany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockgetreusedtimes"&gt;getreusedtimes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is intended to be compatible with the TCP API of the &lt;a href="http://w3.impa.br/~diego/software/luasocket/tcp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; library but is 100% nonblocking out of the box. Also, we introduce some new APIs to provide more functionalities.&lt;/p&gt;
&lt;p&gt;The cosocket object created by this API function has exactly the same lifetime as the Lua handler creating it. So never pass the cosocket object to any other Lua handler (including ngx.timer callback functions) and never share the cosocket object between different Nginx requests.&lt;/p&gt;
&lt;p&gt;For every cosocket object's underlying connection, if you do not
explicitly close it (via &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt;) or put it back to the connection
pool (via &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt;), then it is automatically closed when one of
the following two events happens:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the current request handler completes, or&lt;/li&gt;
&lt;li&gt;the Lua cosocket object value gets collected by the Lua GC.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fatal errors in cosocket operations always automatically close the current
connection (note that, read timeout error is the only error that is
not fatal), and if you call &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt; on a closed connection, you will get
the "closed" error.&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;0.9.9&lt;/code&gt; release, the cosocket object here is full-duplex, that is, a reader "light thread" and a writer "light thread" can operate on a single cosocket object simultaneously (both "light threads" must belong to the same Lua handler though, see reasons above). But you cannot have two "light threads" both reading (or writing or connecting) the same cosocket, otherwise you might get an error like "socket busy reading" when calling the methods of the cosocket object.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockconnect" class="anchor" aria-hidden="true" href="#tcpsockconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:connect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:connect(host, port, options_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:connect("unix:/path/to/unix-domain.socket", options_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Attempts to connect a TCP socket object to a remote server or to a stream unix domain socket file without blocking.&lt;/p&gt;
&lt;p&gt;Before actually resolving the host name and connecting to the remote backend, this method will always look up the connection pool for matched idle connections created by previous calls of this method (or the &lt;a href="#ngxsocketconnect"&gt;ngx.socket.connect&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;Both IP addresses and domain names can be specified as the &lt;code&gt;host&lt;/code&gt; argument. In case of domain names, this method will use Nginx core's dynamic resolver to parse the domain name without blocking and it is required to configure the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver" rel="nofollow"&gt;resolver&lt;/a&gt; directive in the &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;  &lt;span class="pl-c"&gt;# use Google's public DNS nameserver&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the nameserver returns multiple IP addresses for the host name, this method will pick up one randomly.&lt;/p&gt;
&lt;p&gt;In case of error, the method returns &lt;code&gt;nil&lt;/code&gt; followed by a string describing the error. In case of success, the method returns &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example for connecting to a TCP server:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;

     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; sock = ngx.socket.tcp()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = sock:connect(&lt;span class="pl-s"&gt;"www.google.com"&lt;/span&gt;, 80)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to connect to google: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;successfully connected to google!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         sock:close()&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Connecting to a Unix Domain Socket file is also possible:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:/tmp/memcached.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect to the memcached unix domain socket: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;assuming memcached (or something else) is listening on the unix domain socket file &lt;code&gt;/tmp/memcached.sock&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Timeout for the connecting operation is controlled by the &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(host, port)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;Calling this method on an already connected socket object will cause the original connection to be closed first.&lt;/p&gt;
&lt;p&gt;An optional Lua table can be specified as the last argument to this method to specify various connect options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool&lt;/code&gt;
specify a custom name for the connection pool being used. If omitted, then the connection pool name will be generated from the string template &lt;code&gt;"&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;"&lt;/code&gt; or &lt;code&gt;"&amp;lt;unix-socket-path&amp;gt;"&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool_size&lt;/code&gt;
specify the size of the connection pool. If omitted and no
&lt;code&gt;backlog&lt;/code&gt; option was provided, no pool will be created. If omitted
but &lt;code&gt;backlog&lt;/code&gt; was provided, the pool will be created with a default
size equal to the value of the &lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt;
directive.
The connection pool holds up to &lt;code&gt;pool_size&lt;/code&gt; alive connections
ready to be reused by subsequent calls to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, but
note that there is no upper limit to the total number of opened connections
outside of the pool. If you need to restrict the total number of opened
connections, specify the &lt;code&gt;backlog&lt;/code&gt; option.
When the connection pool would exceed its size limit, the least recently used
(kept-alive) connection already in the pool will be closed to make room for
the current connection.
Note that the cosocket connection pool is per Nginx worker process rather
than per Nginx server instance, so the size limit specified here also applies
to every single Nginx worker process. Also note that the size of the connection
pool cannot be changed once it has been created.
This option was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;backlog&lt;/code&gt;
if specified, this module will limit the total number of opened connections
for this pool. No more connections than &lt;code&gt;pool_size&lt;/code&gt; can be opened
for this pool at any time. If the connection pool is full, subsequent
connect operations will be queued into a queue equal to this option's
value (the "backlog" queue).
If the number of queued connect operations is equal to &lt;code&gt;backlog&lt;/code&gt;,
subsequent connect operations will fail and return &lt;code&gt;nil&lt;/code&gt; plus the
error string &lt;code&gt;"too many waiting connect operations"&lt;/code&gt;.
The queued connect operations will be resumed once the number of connections
in the pool is less than &lt;code&gt;pool_size&lt;/code&gt;.
The queued connect operation will abort once they have been queued for more
than &lt;code&gt;connect_timeout&lt;/code&gt;, controlled by
&lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt;, and will return &lt;code&gt;nil&lt;/code&gt; plus
the error string &lt;code&gt;"timeout"&lt;/code&gt;.
This option was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The support for the options table argument was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksslhandshake" class="anchor" aria-hidden="true" href="#tcpsocksslhandshake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:sslhandshake&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;session, err = tcpsock:sslhandshake(reused_session?, server_name?, ssl_verify?, send_status_req?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Does SSL/TLS handshake on the currently established connection.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;reused_session&lt;/code&gt; argument can take a former SSL
session userdata returned by a previous &lt;code&gt;sslhandshake&lt;/code&gt;
call for exactly the same target. For short-lived connections, reusing SSL
sessions can usually speed up the handshake by one order by magnitude but it
is not so useful if the connection pool is enabled. This argument defaults to
&lt;code&gt;nil&lt;/code&gt;. If this argument takes the boolean &lt;code&gt;false&lt;/code&gt; value, no SSL session
userdata would return by this call and only a Lua boolean will be returned as
the first return value; otherwise the current SSL session will
always be returned as the first argument in case of successes.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;server_name&lt;/code&gt; argument is used to specify the server
name for the new TLS extension Server Name Indication (SNI). Use of SNI can
make different servers share the same IP address on the server side. Also,
when SSL verification is enabled, this &lt;code&gt;server_name&lt;/code&gt; argument is
also used to validate the server name specified in the server certificate sent from
the remote.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;ssl_verify&lt;/code&gt; argument takes a Lua boolean value to
control whether to perform SSL verification. When set to &lt;code&gt;true&lt;/code&gt;, the server
certificate will be verified according to the CA certificates specified by
the &lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt; directive.
You may also need to adjust the &lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;
directive to control how deep we should follow along the certificate chain.
Also, when the &lt;code&gt;ssl_verify&lt;/code&gt; argument is true and the
&lt;code&gt;server_name&lt;/code&gt; argument is also specified, the latter will be used
to validate the server name in the server certificate.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;send_status_req&lt;/code&gt; argument takes a boolean that controls whether to send
the OCSP status request in the SSL handshake request (which is for requesting OCSP stapling).&lt;/p&gt;
&lt;p&gt;For connections that have already done SSL/TLS handshake, this method returns
immediately.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksend" class="anchor" aria-hidden="true" href="#tcpsocksend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:send&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;bytes, err = tcpsock:send(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sends data without blocking on the current TCP or Unix Domain Socket connection.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation that will not return until &lt;em&gt;all&lt;/em&gt; the data has been flushed into the system socket send buffer or an error occurs.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the total number of bytes that have been sent. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;The input argument &lt;code&gt;data&lt;/code&gt; can either be a Lua string or a (nested) Lua table holding string fragments. In case of table arguments, this method will copy all the string elements piece by piece to the underlying Nginx socket send buffers, which is usually optimal than doing string concatenation operations on the Lua land.&lt;/p&gt;
&lt;p&gt;Timeout for the sending operation is controlled by the &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; bytes, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;send&lt;/span&gt;(request)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;In case of any connection errors, this method always automatically closes the current connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceive" class="anchor" aria-hidden="true" href="#tcpsockreceive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err, partial = tcpsock:receive(size)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err, partial = tcpsock:receive(pattern?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Receives data from the connected socket according to the reading pattern or size.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation just like the &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error and the partial data received so far.&lt;/p&gt;
&lt;p&gt;If a number-like argument is specified (including strings that look like numbers), then it is interpreted as a size. This method will not return until it reads exactly this size of data or an error occurs.&lt;/p&gt;
&lt;p&gt;If a non-number-like string argument is specified, then it is interpreted as a "pattern". The following patterns are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;'*a'&lt;/code&gt;: reads from the socket until the connection is closed. No end-of-line translation is performed;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'*l'&lt;/code&gt;: reads a line of text from the socket. The line is terminated by a &lt;code&gt;Line Feed&lt;/code&gt; (LF) character (ASCII 10), optionally preceded by a &lt;code&gt;Carriage Return&lt;/code&gt; (CR) character (ASCII 13). The CR and LF characters are not included in the returned line. In fact, all CR characters are ignored by the pattern.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If no argument is specified, then it is assumed to be the pattern &lt;code&gt;'*l'&lt;/code&gt;, that is, the line reading pattern.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; line, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receive&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; line &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.8.8&lt;/code&gt; release, this method no longer automatically closes the current connection when the read timeout error happens. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceiveany" class="anchor" aria-hidden="true" href="#tcpsockreceiveany"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receiveany&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err = tcpsock:receiveany(max)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns any data received by the connected socket, at most &lt;code&gt;max&lt;/code&gt; bytes.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation just like the &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;If the received data is more than this size, this method will return with exactly this size of data.
The remaining data in the underlying receive buffer could be returned in the next reading operation.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeouts&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout for connect/read/write&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveany&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; read any data, at most 10K&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read any data: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method doesn't automatically close the current connection when the read timeout error occurs. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceiveuntil" class="anchor" aria-hidden="true" href="#tcpsockreceiveuntil"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receiveuntil&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;iterator = tcpsock:receiveuntil(pattern, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This method returns an iterator Lua function that can be called to read the data stream until it sees the specified pattern or an error occurs.&lt;/p&gt;
&lt;p&gt;Here is an example for using this method to read a data stream with the boundary sequence &lt;code&gt;--abcedhb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;--abcedhb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When called without any argument, the iterator function returns the received data right &lt;em&gt;before&lt;/em&gt; the specified pattern string in the incoming data stream. So for the example above, if the incoming data stream is &lt;code&gt;'hello, world! -agentzh\r\n--abcedhb blah blah'&lt;/code&gt;, then the string &lt;code&gt;'hello, world! -agentzh'&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;In case of error, the iterator function will return &lt;code&gt;nil&lt;/code&gt; along with a string describing the error and the partial data bytes that have been read so far.&lt;/p&gt;
&lt;p&gt;The iterator function can be called multiple times and can be mixed safely with other cosocket method calls or other iterator function calls.&lt;/p&gt;
&lt;p&gt;The iterator function behaves differently (i.e., like a real iterator) when it is called with a &lt;code&gt;size&lt;/code&gt; argument. That is, it will read that &lt;code&gt;size&lt;/code&gt; of data on each invocation and will return &lt;code&gt;nil&lt;/code&gt; at the last invocation (either sees the boundary pattern or meets an error). For the last successful invocation of the iterator function, the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;nil&lt;/code&gt; too. The iterator function will be reset after the last successful invocation that returns &lt;code&gt;nil&lt;/code&gt; data and &lt;code&gt;nil&lt;/code&gt; error. Consider the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;--abcedhb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

 &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;)
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
             ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
             &lt;span class="pl-k"&gt;break&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
         &lt;span class="pl-k"&gt;break&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read chunk: [&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then for the incoming data stream &lt;code&gt;'hello, world! -agentzh\r\n--abcedhb blah blah'&lt;/code&gt;, we shall get the following output from the sample code above:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;read chunk: [hell]
read chunk: [o, w]
read chunk: [orld]
read chunk: [! -a]
read chunk: [gent]
read chunk: [zh]
read done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that, the actual data returned &lt;em&gt;might&lt;/em&gt; be a little longer than the size limit specified by the &lt;code&gt;size&lt;/code&gt; argument when the boundary pattern has ambiguity for streaming parsing. Near the boundary of the data stream, the data string actually returned could also be shorter than the size limit.&lt;/p&gt;
&lt;p&gt;Timeout for the iterator function's reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; readline &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

 sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 line, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;readline&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; line &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling the iterator function (note that the &lt;code&gt;receiveuntil&lt;/code&gt; call is irrelevant here).&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.1&lt;/code&gt; release, this method also takes an optional &lt;code&gt;options&lt;/code&gt; table argument to control the behavior. The following options are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inclusive&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;inclusive&lt;/code&gt; takes a boolean value to control whether to include the pattern string in the returned data string. Default to &lt;code&gt;false&lt;/code&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; tcpsock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_END_&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { inclusive &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; })
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;()
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then for the input data stream &lt;code&gt;"hello world _END_ blah blah blah"&lt;/code&gt;, then the example above will output &lt;code&gt;hello world _END_&lt;/code&gt;, including the pattern string &lt;code&gt;_END_&lt;/code&gt; itself.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.8.8&lt;/code&gt; release, this method no longer automatically closes the current connection when the read timeout error happens. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockclose" class="anchor" aria-hidden="true" href="#tcpsockclose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:close&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:close()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Closes the current TCP or stream unix domain socket. It returns the &lt;code&gt;1&lt;/code&gt; in case of success and returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Note that there is no need to call this method on socket objects that have invoked the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method because the socket object is already closed (and the current connection is saved into the built-in connection pool).&lt;/p&gt;
&lt;p&gt;Socket objects that have not invoked this method (and associated connections) will be closed when the socket object is released by the Lua GC (Garbage Collector) or the current client HTTP request finishes processing.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksettimeout" class="anchor" aria-hidden="true" href="#tcpsocksettimeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:settimeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:settimeout(time)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the timeout value in milliseconds for subsequent socket operations (&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, and iterators returned from &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method take priority over those specified via config directives (i.e. &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;, &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;, and &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Note that this method does &lt;em&gt;not&lt;/em&gt; affect the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; setting; the &lt;code&gt;timeout&lt;/code&gt; argument to the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method should be used for this purpose instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksettimeouts" class="anchor" aria-hidden="true" href="#tcpsocksettimeouts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:settimeouts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:settimeouts(connect_timeout, send_timeout, read_timeout)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Respectively sets the connect, send, and read timeout thresholds (in milliseconds) for subsequent socket
operations (&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt;, &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, and iterators returned from &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method take priority over those specified via config directives (i.e. &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;, &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;, and &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It is recommended to use &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; instead of &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that this method does &lt;em&gt;not&lt;/em&gt; affect the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; setting; the &lt;code&gt;timeout&lt;/code&gt; argument to the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method should be used for this purpose instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksetoption" class="anchor" aria-hidden="true" href="#tcpsocksetoption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:setoption&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:setoption(option, value?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function is added for &lt;a href="http://w3.impa.br/~diego/software/luasocket/tcp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; API compatibility and does nothing for now. Its functionality will be implemented in future.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksetkeepalive" class="anchor" aria-hidden="true" href="#tcpsocksetkeepalive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:setkeepalive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:setkeepalive(timeout?, size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Puts the current socket's connection immediately into the cosocket built-in connection pool and keep it alive until other &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method calls request it or the associated maximal idle timeout is expired.&lt;/p&gt;
&lt;p&gt;The first optional argument, &lt;code&gt;timeout&lt;/code&gt;, can be used to specify the maximal idle timeout (in milliseconds) for the current connection. If omitted, the default setting in the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; config directive will be used. If the &lt;code&gt;0&lt;/code&gt; value is given, then the timeout interval is unlimited.&lt;/p&gt;
&lt;p&gt;The second optional argument &lt;code&gt;size&lt;/code&gt; is considered deprecated since
the &lt;code&gt;v0.10.14&lt;/code&gt; release of this module, in favor of the
&lt;code&gt;pool_size&lt;/code&gt; option of the &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method.
Since the &lt;code&gt;v0.10.14&lt;/code&gt; release, this option will only take effect if
the call to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; did not already create a connection
pool.
When this option takes effect (no connection pool was previously created by
&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;), it will specify the size of the connection pool,
and create it.
If omitted (and no pool was previously created), the default size is the value
of the &lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt; directive.
The connection pool holds up to &lt;code&gt;size&lt;/code&gt; alive connections ready to be
reused by subsequent calls to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, but note that there
is no upper limit to the total number of opened connections outside of the
pool.
When the connection pool would exceed its size limit, the least recently used
(kept-alive) connection already in the pool will be closed to make room for
the current connection.
Note that the cosocket connection pool is per Nginx worker process rather
than per Nginx server instance, so the size limit specified here also applies
to every single Nginx worker process. Also note that the size of the connection
pool cannot be changed once it has been created.
If you need to restrict the total number of opened connections, specify both
the &lt;code&gt;pool_size&lt;/code&gt; and &lt;code&gt;backlog&lt;/code&gt; option in the call to
&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In case of success, this method returns &lt;code&gt;1&lt;/code&gt;; otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;When the system receive buffer for the current connection has unread data, then this method will return the "connection in dubious state" error message (as the second return value) because the previous session has unread data left behind for the next session and the connection is not safe to be reused.&lt;/p&gt;
&lt;p&gt;This method also makes the current cosocket object enter the "closed" state, so there is no need to manually call the &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt; method on it afterwards.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockgetreusedtimes" class="anchor" aria-hidden="true" href="#tcpsockgetreusedtimes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:getreusedtimes&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count, err = tcpsock:getreusedtimes()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This method returns the (successfully) reused times for the current connection. In case of error, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;If the current connection does not come from the built-in connection pool, then this method always returns &lt;code&gt;0&lt;/code&gt;, that is, the connection has never been reused (yet). If the connection comes from the connection pool, then the return value is always non-zero. So this method can also be used to determine if the current connection comes from the pool.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketconnect" class="anchor" aria-hidden="true" href="#ngxsocketconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.connect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.socket.connect(host, port)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.socket.connect("unix:/path/to/unix-domain.socket")&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function is a shortcut for combining &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp()&lt;/a&gt; and the &lt;a href="#tcpsockconnect"&gt;connect()&lt;/a&gt; method call in a single operation. It is actually implemented like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-c1"&gt;...&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, err
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;return&lt;/span&gt; sock&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is no way to use the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method to specify connecting timeout for this method and the &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt; directive must be set at configure time instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxget_phase" class="anchor" aria-hidden="true" href="#ngxget_phase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.get_phase&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.get_phase()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the current running phase name. Possible return values are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;init&lt;/code&gt;
for the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init_worker&lt;/code&gt;
for the context of &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_cert&lt;/code&gt;
for the context of &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_fetch&lt;/code&gt;
for the context of &lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_store&lt;/code&gt;
for the context of &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;
for the context of &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rewrite&lt;/code&gt;
for the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;balancer&lt;/code&gt;
for the context of &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;access&lt;/code&gt;
for the context of &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;content&lt;/code&gt;
for the context of &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;header_filter&lt;/code&gt;
for the context of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;body_filter&lt;/code&gt;
for the context of &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log&lt;/code&gt;
for the context of &lt;a href="#log_by_lua"&gt;log_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timer&lt;/code&gt;
for the context of user callback functions for &lt;a href="#ngxtimerat"&gt;ngx.timer.*&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.5.10&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadspawn" class="anchor" aria-hidden="true" href="#ngxthreadspawn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.spawn&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = ngx.thread.spawn(func, arg1, arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Spawns a new user "light thread" with the Lua function &lt;code&gt;func&lt;/code&gt; as well as those optional arguments &lt;code&gt;arg1&lt;/code&gt;, &lt;code&gt;arg2&lt;/code&gt;, and etc. Returns a Lua thread (or Lua coroutine) object represents this "light thread".&lt;/p&gt;
&lt;p&gt;"Light threads" are just a special kind of Lua coroutines that are scheduled by the ngx_lua module.&lt;/p&gt;
&lt;p&gt;Before &lt;code&gt;ngx.thread.spawn&lt;/code&gt; returns, the &lt;code&gt;func&lt;/code&gt; will be called with those optional arguments until it returns, aborts with an error, or gets yielded due to I/O operations via the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; (like &lt;a href="#tcpsockreceive"&gt;tcpsock:receive&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;After &lt;code&gt;ngx.thread.spawn&lt;/code&gt; returns, the newly-created "light thread" will keep running asynchronously usually at various I/O events.&lt;/p&gt;
&lt;p&gt;All the Lua code chunks running by &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;, &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, and &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; are in a boilerplate "light thread" created automatically by ngx_lua. Such boilerplate "light thread" are also called "entry threads".&lt;/p&gt;
&lt;p&gt;By default, the corresponding Nginx handler (e.g., &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler) will not terminate until&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;both the "entry thread" and all the user "light threads" terminates,&lt;/li&gt;
&lt;li&gt;a "light thread" (either the "entry thread" or a user "light thread" aborts by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;, or &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri(uri, true)&lt;/a&gt;, or&lt;/li&gt;
&lt;li&gt;the "entry thread" terminates with a Lua error.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When the user "light thread" terminates with a Lua error, however, it will not abort other running "light threads" like the "entry thread" does.&lt;/p&gt;
&lt;p&gt;Due to the limitation in the Nginx subrequest model, it is not allowed to abort a running Nginx subrequest in general. So it is also prohibited to abort a running "light thread" that is pending on one ore more Nginx subrequests. You must call &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt; to wait for those "light thread" to terminate before quitting the "world". A notable exception here is that you can abort pending subrequests by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with and only with the status code &lt;code&gt;ngx.ERROR&lt;/code&gt; (-1), &lt;code&gt;408&lt;/code&gt;, &lt;code&gt;444&lt;/code&gt;, or &lt;code&gt;499&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The "light threads" are not scheduled in a pre-emptive way. In other words, no time-slicing is performed automatically. A "light thread" will keep running exclusively on the CPU until&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;a (nonblocking) I/O operation cannot be completed in a single run,&lt;/li&gt;
&lt;li&gt;it calls &lt;a href="#coroutineyield"&gt;coroutine.yield&lt;/a&gt; to actively give up execution, or&lt;/li&gt;
&lt;li&gt;it is aborted by a Lua error or an invocation of &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;, or &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri(uri, true)&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the first two cases, the "light thread" will usually be resumed later by the ngx_lua scheduler unless a "stop-the-world" event happens.&lt;/p&gt;
&lt;p&gt;User "light threads" can create "light threads" themselves. And normal user coroutines created by &lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt; can also create "light threads". The coroutine (be it a normal Lua coroutine or a "light thread") that directly spawns the "light thread" is called the "parent coroutine" for the "light thread" newly spawned.&lt;/p&gt;
&lt;p&gt;The "parent coroutine" can call &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt; to wait on the termination of its child "light thread".&lt;/p&gt;
&lt;p&gt;You can call coroutine.status() and coroutine.yield() on the "light thread" coroutines.&lt;/p&gt;
&lt;p&gt;The status of the "light thread" coroutine can be "zombie" if&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the current "light thread" already terminates (either successfully or with an error),&lt;/li&gt;
&lt;li&gt;its parent coroutine is still alive, and&lt;/li&gt;
&lt;li&gt;its parent coroutine is not waiting on it with &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following example demonstrates the use of coroutine.yield() in the "light thread" coroutines
to do manual time-slicing:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; yield &lt;span class="pl-k"&gt;=&lt;/span&gt; coroutine.&lt;span class="pl-smi"&gt;yield&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;coroutine.running&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;coroutine.running&lt;/span&gt;()
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(f)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then it will generate the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0
1
f 1
2
f 2
3
f 3
4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;"Light threads" are mostly useful for making concurrent upstream requests in a single Nginx request handler, much like a generalized version of &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; that can work with all the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt;. The following example demonstrates parallel requests to MySQL, Memcached, and upstream HTTP services in a single Lua handler, and outputting the results in the order that they actually return (similar to Facebook's BigPipe model):&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; query mysql, memcached, and a remote http service at the same time,&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; output the results in the order that they&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; actually return the results.&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; mysql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.mysql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; memcached &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.memcached&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_mysql&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; mysql:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()
     db:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;{
                 host &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 port &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3306&lt;/span&gt;,
                 database &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;monty&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mypass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
               }
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err, errno, sqlstate &lt;span class="pl-k"&gt;=&lt;/span&gt;
             db:&lt;span class="pl-c1"&gt;query&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;select * from cats order by id asc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     db:&lt;span class="pl-c1"&gt;set_keepalive&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mysql done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_memcached&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; memc &lt;span class="pl-k"&gt;=&lt;/span&gt; memcached:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()
     memc:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;11211&lt;/span&gt;)
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; memc:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some_key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;memcached done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_http&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/my-http-proxy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;body&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_mysql)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 1&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_memcached)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 2&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_http)       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.7.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadwait" class="anchor" aria-hidden="true" href="#ngxthreadwait"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.wait&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, res1, res2, ... = ngx.thread.wait(thread1, thread2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Waits on one or more child "light threads" and returns the results of the first "light thread" that terminates (either successfully or with an error).&lt;/p&gt;
&lt;p&gt;The arguments &lt;code&gt;thread1&lt;/code&gt;, &lt;code&gt;thread2&lt;/code&gt;, and etc are the Lua thread objects returned by earlier calls of &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The return values have exactly the same meaning as &lt;a href="#coroutineresume"&gt;coroutine.resume&lt;/a&gt;, that is, the first value returned is a boolean value indicating whether the "light thread" terminates successfully or not, and subsequent values returned are the return values of the user Lua function that was used to spawn the "light thread" (in case of success) or the error object (in case of failure).&lt;/p&gt;
&lt;p&gt;Only the direct "parent coroutine" can wait on its child "light thread", otherwise a Lua exception will be raised.&lt;/p&gt;
&lt;p&gt;The following example demonstrates the use of &lt;code&gt;ngx.thread.wait&lt;/code&gt; and &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; to emulate &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; capture &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-smi"&gt;capture&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; spawn &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-smi"&gt;spawn&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; wait &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-smi"&gt;wait&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; say &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;say&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt;(&lt;span class="pl-smi"&gt;uri&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;capture&lt;/span&gt;(uri)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; threads &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 }

 &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;#&lt;/span&gt;threads &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, res &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;wait&lt;/span&gt;(threads[i])
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: failed to run: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
     &lt;span class="pl-k"&gt;else&lt;/span&gt;
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: status: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;status&lt;/span&gt;)
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: body: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;body&lt;/span&gt;)
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here it essentially implements the "wait all" model.&lt;/p&gt;
&lt;p&gt;And below is an example demonstrating the "wait any" model:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f: hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g: hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; tf, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(f)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; tf &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to spawn thread f: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f thread created: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;coroutine.status&lt;/span&gt;(tf))

 &lt;span class="pl-k"&gt;local&lt;/span&gt; tg, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(g)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; tg &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to spawn thread g: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g thread created: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;coroutine.status&lt;/span&gt;(tg))

 ok, res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;wait&lt;/span&gt;(tf, tg)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to wait: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;res: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; stop the "world", aborting other running threads&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;OK&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And it will generate the following output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;f thread created: running
g thread created: running
g: hello
res: g done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.7.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadkill" class="anchor" aria-hidden="true" href="#ngxthreadkill"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.kill&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.thread.kill(thread)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Kills a running "light thread" created by &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;. Returns a true value when successful or &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;According to the current implementation, only the parent coroutine (or "light thread") can kill a thread. Also, a running "light thread" with pending Nginx subrequests (initiated by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; for example) cannot be killed due to a limitation in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.9.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxon_abort" class="anchor" aria-hidden="true" href="#ngxon_abort"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.on_abort&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.on_abort(callback)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Registers a user Lua function as the callback which gets called automatically when the client closes the (downstream) connection prematurely.&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;1&lt;/code&gt; if the callback is registered successfully or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;All the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; can be used in the callback function because the function is run in a special "light thread", just as those "light threads" created by &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The callback function can decide what to do with the client abortion event all by itself. For example, it can simply ignore the event by doing nothing and the current Lua request handler will continue executing without interruptions. And the callback function can also decide to terminate everything by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;my_cleanup&lt;/span&gt;()
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; custom cleanup work goes here, like cancelling a pending DB transaction&lt;/span&gt;

     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; now abort all the "light threads" running in the current request handler&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;499&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;on_abort&lt;/span&gt;(my_cleanup)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to register the on_abort callback: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When &lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt; is set to &lt;code&gt;off&lt;/code&gt; (which is the default), then this function call will always return the error message "lua_check_client_abort is off".&lt;/p&gt;
&lt;p&gt;According to the current implementation, this function can only be called once in a single request handler; subsequent calls will return the error message "duplicate call".&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.7.4&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerat" class="anchor" aria-hidden="true" href="#ngxtimerat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.at&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;hdl, err = ngx.timer.at(delay, callback, user_arg1, user_arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates an Nginx timer with a user callback function as well as optional user arguments.&lt;/p&gt;
&lt;p&gt;The first argument, &lt;code&gt;delay&lt;/code&gt;, specifies the delay for the timer,
in seconds. One can specify fractional seconds like &lt;code&gt;0.001&lt;/code&gt; to mean 1
millisecond here. &lt;code&gt;0&lt;/code&gt; delay can also be specified, in which case the
timer will immediately expire when the current handler yields
execution.&lt;/p&gt;
&lt;p&gt;The second argument, &lt;code&gt;callback&lt;/code&gt;, can
be any Lua function, which will be invoked later in a background
"light thread" after the delay specified. The user callback will be
called automatically by the Nginx core with the arguments &lt;code&gt;premature&lt;/code&gt;,
&lt;code&gt;user_arg1&lt;/code&gt;, &lt;code&gt;user_arg2&lt;/code&gt;, and etc, where the &lt;code&gt;premature&lt;/code&gt;
argument takes a boolean value indicating whether it is a premature timer
expiration or not, and &lt;code&gt;user_arg1&lt;/code&gt;, &lt;code&gt;user_arg2&lt;/code&gt;, and etc, are
those (extra) user arguments specified when calling &lt;code&gt;ngx.timer.at&lt;/code&gt;
as the remaining arguments.&lt;/p&gt;
&lt;p&gt;Premature timer expiration happens when the Nginx worker process is
trying to shut down, as in an Nginx configuration reload triggered by
the &lt;code&gt;HUP&lt;/code&gt; signal or in an Nginx server shutdown. When the Nginx worker
is trying to shut down, one can no longer call &lt;code&gt;ngx.timer.at&lt;/code&gt; to
create new timers with nonzero delays and in that case &lt;code&gt;ngx.timer.at&lt;/code&gt; will return a "conditional false" value and
a string describing the error, that is, "process exiting".&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;v0.9.3&lt;/code&gt; release, it is allowed to create zero-delay timers even when the Nginx worker process starts shutting down.&lt;/p&gt;
&lt;p&gt;When a timer expires, the user Lua code in the timer callback is
running in a "light thread" detached completely from the original
request creating the timer. So objects with the same lifetime as the
request creating them, like &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;, cannot be shared between the
original request and the timer user callback function.&lt;/p&gt;
&lt;p&gt;Here is a simple example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     ...
     &lt;span class="pl-k"&gt;log_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; function push_data(premature, uri, args, status)
             -- &lt;span class="pl-k"&gt;push&lt;/span&gt; the data uri, args, and status to the remote
             -- &lt;span class="pl-k"&gt;via&lt;/span&gt; ngx.socket.tcp or ngx.socket.udp
             -- (&lt;span class="pl-k"&gt;one&lt;/span&gt; may want to buffer the data in Lua &lt;span class="pl-s"&gt;a&lt;/span&gt; bit to
             -- &lt;span class="pl-k"&gt;save&lt;/span&gt; I/O operations)
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = ngx.timer.at(0, push_data,
                                      ngx.var.uri, ngx.var.args, ngx.header.status)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.log(ngx.ERR, "&lt;span class="pl-k"&gt;failed&lt;/span&gt; to create timer: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One can also create infinite re-occurring timers, for instance, a timer getting triggered every &lt;code&gt;5&lt;/code&gt; seconds, by calling &lt;code&gt;ngx.timer.at&lt;/code&gt; recursively in the timer callback function. Here is such an example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; delay &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; handler
 handler &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;premature&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; do some routine job in Lua just like a cron job&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; premature &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;timer&lt;/span&gt;.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(delay, handler)
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to create the timer: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;timer&lt;/span&gt;.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(delay, handler)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to create the timer: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is recommended, however, to use the &lt;a href="#ngxtimerevery"&gt;ngx.timer.every&lt;/a&gt; API function
instead for creating recurring timers since it is more robust.&lt;/p&gt;
&lt;p&gt;Because timer callbacks run in the background and their running time
will not add to any client request's response time, they can easily
accumulate in the server and exhaust system resources due to either
Lua programming mistakes or just too much client traffic. To prevent
extreme consequences like crashing the Nginx server, there are
built-in limitations on both the number of "pending timers" and the
number of "running timers" in an Nginx worker process. The "pending
timers" here mean timers that have not yet been expired and "running
timers" are those whose user callbacks are currently running.&lt;/p&gt;
&lt;p&gt;The maximal number of pending timers allowed in an Nginx
worker is controlled by the &lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt;
directive. The maximal number of running timers is controlled by the
&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;According to the current implementation, each "running timer" will
take one (fake) connection record from the global connection record
list configured by the standard &lt;a href="http://nginx.org/en/docs/ngx_core_module.html#worker_connections" rel="nofollow"&gt;worker_connections&lt;/a&gt; directive in
&lt;code&gt;nginx.conf&lt;/code&gt;. So ensure that the
&lt;a href="http://nginx.org/en/docs/ngx_core_module.html#worker_connections" rel="nofollow"&gt;worker_connections&lt;/a&gt; directive is set to
a large enough value that takes into account both the real connections
and fake connections required by timer callbacks (as limited by the
&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt; directive).&lt;/p&gt;
&lt;p&gt;A lot of the Lua APIs for Nginx are enabled in the context of the timer
callbacks, like stream/datagram cosockets (&lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;), shared
memory dictionaries (&lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;), user coroutines (&lt;a href="#coroutinecreate"&gt;coroutine.*&lt;/a&gt;),
user "light threads" (&lt;a href="#ngxthreadspawn"&gt;ngx.thread.*&lt;/a&gt;), &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt;/&lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;,
&lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt;/&lt;a href="#ngxsha1_bin"&gt;ngx.sha1_bin&lt;/a&gt;, are all allowed. But the subrequest API (like
&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;), the &lt;a href="#ngxreqstart_time"&gt;ngx.req.*&lt;/a&gt; API, the downstream output API
(like &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;, and &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt;) are explicitly disabled in
this context.&lt;/p&gt;
&lt;p&gt;You can pass most of the standard Lua values (nils, booleans, numbers, strings, tables, closures, file handles, and etc) into the timer callback, either explicitly as user arguments or implicitly as upvalues for the callback closure. There are several exceptions, however: you &lt;em&gt;cannot&lt;/em&gt; pass any thread objects returned by &lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt; and &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt; or any cosocket objects returned by &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;, &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; because these objects' lifetime is bound to the request context creating them while the timer callback is detached from the creating request's context (by design) and runs in its own (fake) request context. If you try to share the thread or cosocket objects across the boundary of the creating request, then you will get the "no co ctx found" error (for threads) or "bad request" (for cosockets). It is fine, however, to create all these objects inside your timer callback.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerevery" class="anchor" aria-hidden="true" href="#ngxtimerevery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.every&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;hdl, err = ngx.timer.every(delay, callback, user_arg1, user_arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API function, but&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;delay&lt;/code&gt; &lt;em&gt;cannot&lt;/em&gt; be zero,&lt;/li&gt;
&lt;li&gt;timer will be created every &lt;code&gt;delay&lt;/code&gt; seconds until the current Nginx worker process starts exiting.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When success, returns a "conditional true" value (but not a &lt;code&gt;true&lt;/code&gt;). Otherwise, returns a "conditional false" value and a string describing the error.&lt;/p&gt;
&lt;p&gt;This API also respect the &lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt; and &lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.10.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerrunning_count" class="anchor" aria-hidden="true" href="#ngxtimerrunning_count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.running_count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.timer.running_count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of timers currently running.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerpending_count" class="anchor" aria-hidden="true" href="#ngxtimerpending_count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.pending_count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.timer.pending_count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of pending timers.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigsubsystem" class="anchor" aria-hidden="true" href="#ngxconfigsubsystem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.subsystem&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;subsystem = ngx.config.subsystem&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This string field indicates the current Nginx subsystem the current Lua environment is based on. For this module, this field always takes the string value &lt;code&gt;"http"&lt;/code&gt;. For
&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua_module&lt;/a&gt;, however, this field takes the value &lt;code&gt;"stream"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This field was first introduced in the &lt;code&gt;0.10.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigdebug" class="anchor" aria-hidden="true" href="#ngxconfigdebug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.debug&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;debug = ngx.config.debug&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This boolean field indicates whether the current Nginx is a debug build, i.e., being built by the &lt;code&gt;./configure&lt;/code&gt; option &lt;code&gt;--with-debug&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This field was first introduced in the &lt;code&gt;0.8.7&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigprefix" class="anchor" aria-hidden="true" href="#ngxconfigprefix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.prefix&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;prefix = ngx.config.prefix()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the Nginx server "prefix" path, as determined by the &lt;code&gt;-p&lt;/code&gt; command-line option when running the Nginx executable, or the path specified by the &lt;code&gt;--prefix&lt;/code&gt; command-line option when building Nginx with the &lt;code&gt;./configure&lt;/code&gt; script.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfignginx_version" class="anchor" aria-hidden="true" href="#ngxconfignginx_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.nginx_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ver = ngx.config.nginx_version&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This field take an integral value indicating the version number of the current Nginx core being used. For example, the version number &lt;code&gt;1.4.3&lt;/code&gt; results in the Lua number 1004003.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfignginx_configure" class="anchor" aria-hidden="true" href="#ngxconfignginx_configure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.nginx_configure&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.config.nginx_configure()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a string for the Nginx &lt;code&gt;./configure&lt;/code&gt; command's arguments string.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigngx_lua_version" class="anchor" aria-hidden="true" href="#ngxconfigngx_lua_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.ngx_lua_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ver = ngx.config.ngx_lua_version&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This field take an integral value indicating the version number of the current &lt;code&gt;ngx_lua&lt;/code&gt; module being used. For example, the version number &lt;code&gt;0.9.3&lt;/code&gt; results in the Lua number 9003.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerexiting" class="anchor" aria-hidden="true" href="#ngxworkerexiting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.exiting&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;exiting = ngx.worker.exiting()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a boolean value indicating whether the current Nginx worker process already starts exiting. Nginx worker process exiting happens on Nginx server quit or configuration reload (aka HUP reload).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerpid" class="anchor" aria-hidden="true" href="#ngxworkerpid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.pid&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;pid = ngx.worker.pid()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a Lua number for the process ID (PID) of the current Nginx worker process. This API is more efficient than &lt;code&gt;ngx.var.pid&lt;/code&gt; and can be used in contexts where the &lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt; API cannot be used (like &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkercount" class="anchor" aria-hidden="true" href="#ngxworkercount"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.worker.count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the total number of the Nginx worker processes (i.e., the value configured
by the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#worker_processes" rel="nofollow"&gt;worker_processes&lt;/a&gt;
directive in &lt;code&gt;nginx.conf&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerid" class="anchor" aria-hidden="true" href="#ngxworkerid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.id&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.worker.id()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the ordinal number of the current Nginx worker processes (starting from number 0).&lt;/p&gt;
&lt;p&gt;So if the total number of workers is &lt;code&gt;N&lt;/code&gt;, then this method may return a number between 0
and &lt;code&gt;N - 1&lt;/code&gt; (inclusive).&lt;/p&gt;
&lt;p&gt;This function returns meaningful values only for Nginx 1.9.1+. With earlier versions of Nginx, it
always returns &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxworkercount"&gt;ngx.worker.count&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsemaphore" class="anchor" aria-hidden="true" href="#ngxsemaphore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.semaphore&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local semaphore = require "ngx.semaphore"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a Lua module that implements a classic-style semaphore API for efficient synchronizations among
different "light threads". Sharing the same semaphore among different "light threads" created in different (request)
contexts are also supported as long as the "light threads" reside in the same Nginx worker process
and the &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; directive is turned on (which is the default).&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/semaphore.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.semaphore&lt;/code&gt; Lua module in &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxbalancer" class="anchor" aria-hidden="true" href="#ngxbalancer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.balancer&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local balancer = require "ngx.balancer"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a Lua module that provides a Lua API to allow defining completely dynamic load balancers
in pure Lua.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/balancer.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.balancer&lt;/code&gt; Lua module in &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxssl" class="anchor" aria-hidden="true" href="#ngxssl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ssl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local ssl = require "ngx.ssl"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This Lua module provides API functions to control the SSL handshake process in contexts like
&lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.ssl&lt;/code&gt; Lua module for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxocsp" class="anchor" aria-hidden="true" href="#ngxocsp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ocsp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local ocsp = require "ngx.ocsp"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This Lua module provides API to perform OCSP queries, OCSP response validations, and
OCSP stapling planting.&lt;/p&gt;
&lt;p&gt;Usually, this module is used together with the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
module in the
context of &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.ocsp&lt;/code&gt; Lua module for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ndkset_vardirective" class="anchor" aria-hidden="true" href="#ndkset_vardirective"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ndk.set_var.DIRECTIVE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res = ndk.set_var.DIRECTIVE_NAME&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This mechanism allows calling other Nginx C modules' directives that are implemented by &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;Nginx Devel Kit&lt;/a&gt; (NDK)'s set_var submodule's &lt;code&gt;ndk_set_var_value&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, the following &lt;a href="http://github.com/openresty/set-misc-nginx-module"&gt;set-misc-nginx-module&lt;/a&gt; directives can be invoked this way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_sql_str"&gt;set_quote_sql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_pgsql_str"&gt;set_quote_pgsql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_json_str"&gt;set_quote_json_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_unescape_uri"&gt;set_unescape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_escape_uri"&gt;set_escape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base32"&gt;set_encode_base32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base32"&gt;set_decode_base32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_encode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_decode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_encode_hex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_decode_hex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_sha1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_md5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ndk.&lt;span class="pl-smi"&gt;set_var&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_escape_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a/b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; now res == 'a%2fb'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, the following directives provided by &lt;a href="http://github.com/openresty/encrypted-session-nginx-module"&gt;encrypted-session-nginx-module&lt;/a&gt; can be invoked from within Lua too:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/encrypted-session-nginx-module#set_encrypt_session"&gt;set_encrypt_session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/encrypted-session-nginx-module#set_decrypt_session"&gt;set_decrypt_session&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This feature requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinecreate" class="anchor" aria-hidden="true" href="#coroutinecreate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.create&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.create(f)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates a user Lua coroutines with a Lua function, and returns a coroutine object.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.create" rel="nofollow"&gt;coroutine.create&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutineresume" class="anchor" aria-hidden="true" href="#coroutineresume"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.resume&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, ... = coroutine.resume(co, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Resumes the executation of a user Lua coroutine object previously yielded or just created.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.resume" rel="nofollow"&gt;coroutine.resume&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutineyield" class="anchor" aria-hidden="true" href="#coroutineyield"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.yield&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;... = coroutine.yield(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Yields the execution of the current user Lua coroutine.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.yield" rel="nofollow"&gt;coroutine.yield&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinewrap" class="anchor" aria-hidden="true" href="#coroutinewrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.wrap&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.wrap(f)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.wrap" rel="nofollow"&gt;coroutine.wrap&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinerunning" class="anchor" aria-hidden="true" href="#coroutinerunning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.running&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.running()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Identical to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.running" rel="nofollow"&gt;coroutine.running&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinestatus" class="anchor" aria-hidden="true" href="#coroutinestatus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.status&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;status = coroutine.status(co)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Identical to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.status" rel="nofollow"&gt;coroutine.status&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-obsolete-sections" class="anchor" aria-hidden="true" href="#obsolete-sections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obsolete Sections&lt;/h1&gt;
&lt;p&gt;This section is just holding obsolete documentation sections that have been either renamed or removed so that existing links over the web are still valid.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-special-pcre-sequences" class="anchor" aria-hidden="true" href="#special-pcre-sequences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special PCRE Sequences&lt;/h2&gt;
&lt;p&gt;This section has been renamed to &lt;a href="#special-escaping-sequences"&gt;Special Escaping Sequences&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lualuajit-bytecode-support" class="anchor" aria-hidden="true" href="#lualuajit-bytecode-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua/LuaJIT bytecode support&lt;/h2&gt;
&lt;p&gt;This section has been renamed to
&lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode support&lt;/a&gt;. As of version
&lt;code&gt;v0.10.16&lt;/code&gt; of this module, the standard Lua interpreter (also known
as "PUC-Rio Lua") is not supported anymore.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openresty</author><guid isPermaLink="false">https://github.com/openresty/lua-nginx-module</guid><pubDate>Fri, 06 Dec 2019 00:12:00 GMT</pubDate></item><item><title>CloverHackyColor/CloverBootloader #13 in C, Today</title><link>https://github.com/CloverHackyColor/CloverBootloader</link><description>&lt;p&gt;&lt;i&gt;Bootloader for macOS, Windows and Linux in UEFI and in legacy mode&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cloverbootloader" class="anchor" aria-hidden="true" href="#cloverbootloader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CloverBootloader&lt;/h1&gt;
&lt;p&gt;Bootloader for macOS, Windows and Linux in UEFI and in legacy mode&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>CloverHackyColor</author><guid isPermaLink="false">https://github.com/CloverHackyColor/CloverBootloader</guid><pubDate>Fri, 06 Dec 2019 00:13:00 GMT</pubDate></item><item><title>stedolan/jq #14 in C, Today</title><link>https://github.com/stedolan/jq</link><description>&lt;p&gt;&lt;i&gt;Command-line JSON processor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jq" class="anchor" aria-hidden="true" href="#jq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;jq&lt;/h1&gt;
&lt;p&gt;jq is a lightweight and flexible command-line JSON processor.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://coveralls.io/github/stedolan/jq?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5710e0e1008f2f4eebcd871b87ad45eea03258f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f737465646f6c616e2f6a712f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/stedolan/jq/badge.svg?branch=master&amp;amp;service=github" style="max-width:100%;"&gt;&lt;/a&gt;,
Unix: &lt;a href="https://travis-ci.org/stedolan/jq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e226cc6f5540288a6af72c7759699df5bca13da9/68747470733a2f2f7472617669732d63692e6f72672f737465646f6c616e2f6a712e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/stedolan/jq.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;,
Windows: &lt;a href="https://ci.appveyor.com/project/stedolan/jq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15fdc82ece0d9148413288432a646b5ef2589adb/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d69383136383131633965396d7832393f7376673d74727565" alt="Windows build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/mi816811c9e9mx29?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to learn to use jq, read the documentation at
&lt;a href="https://stedolan.github.io/jq" rel="nofollow"&gt;https://stedolan.github.io/jq&lt;/a&gt;.  This
documentation is generated from the docs/ folder of this repository.
You can also try it online at &lt;a href="https://jqplay.org" rel="nofollow"&gt;jqplay.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to hack on jq, feel free, but be warned that its internals
are not well-documented at the moment. Bring a hard hat and a
shovel.  Also, read the wiki: &lt;a href="https://github.com/stedolan/jq/wiki"&gt;https://github.com/stedolan/jq/wiki&lt;/a&gt;, where
you will find cookbooks, discussion of advanced topics, internals,
release engineering, and more.&lt;/p&gt;
&lt;p&gt;Source tarball and built executable releases can be found on the
homepage and on the github release page, &lt;a href="https://github.com/stedolan/jq/releases"&gt;https://github.com/stedolan/jq/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're building directly from the latest git, you'll need flex,
bison (3.0 or newer), libtool, make, automake, and autoconf installed.
To get regexp support you'll also need to install Oniguruma or clone it as a
git submodule as per the instructions below.
(note that jq's tests require regexp support to pass).  To build, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git submodule update --init # if building from git to get oniguruma
autoreconf -fi              # if building from git
./configure --with-oniguruma=builtin
make -j8
make check
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build without bison or flex, add &lt;code&gt;--disable-maintainer-mode&lt;/code&gt; to the
./configure invocation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-oniguruma=builtin --disable-maintainer-mode
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Developers must not use &lt;code&gt;--disable-maintainer-mode&lt;/code&gt;, not when making
changes to the jq parser and/or lexer.)&lt;/p&gt;
&lt;p&gt;To build a statically linked version of jq, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make LDFLAGS=-all-static
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After make finishes, you'll be able to use &lt;code&gt;./jq&lt;/code&gt;.  You can also
install it using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you're not using the latest git version but instead building a
released tarball (available on the website), then you won't need to
run &lt;code&gt;autoreconf&lt;/code&gt; (and shouldn't), and you won't need flex or bison.&lt;/p&gt;
&lt;p&gt;To cross-compile for OS X and Windows, see docs/Rakefile's build task
and scripts/crosscompile.  You'll need a cross-compilation environment,
such as Mingw for cross-compiling for Windows.&lt;/p&gt;
&lt;p&gt;Cross-compilation requires a clean workspace, then:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# git clean ...
autoreconf -i
./configure
make distclean
scripts/crosscompile &amp;lt;name-of-build&amp;gt; &amp;lt;configure-options&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use the --host= and --target= ./configure options to select a
cross-compilation environment.  See also the wiki.&lt;/p&gt;
&lt;p&gt;Send questions to &lt;a href="https://stackoverflow.com/questions/tagged/jq" rel="nofollow"&gt;https://stackoverflow.com/questions/tagged/jq&lt;/a&gt; or to the #jq channel (&lt;a href="http://irc.lc/freenode/%23jq/" rel="nofollow"&gt;http://irc.lc/freenode/%23jq/&lt;/a&gt;) on Freenode (&lt;a href="https://webchat.freenode.net/" rel="nofollow"&gt;https://webchat.freenode.net/&lt;/a&gt;).&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>stedolan</author><guid isPermaLink="false">https://github.com/stedolan/jq</guid><pubDate>Fri, 06 Dec 2019 00:14:00 GMT</pubDate></item><item><title>betaflight/betaflight #15 in C, Today</title><link>https://github.com/betaflight/betaflight</link><description>&lt;p&gt;&lt;i&gt;Open Source Flight Controller Firmware&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/assets/images/stm32f3_retirement_notice.svg"&gt;&lt;img src="docs/assets/images/stm32f3_retirement_notice.svg" alt="Important Notice: Support for STM32F3 based flight controllers was dropped in Betaflight 4.1. (This includes all boards with 'F3' in the name.)" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Please see the &lt;a href="https://github.com/betaflight/betaflight#end-of-active-development-for-stm32f3-based-flight-controllers"&gt;note&lt;/a&gt; below.)&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/assets/images/bf_logo.png"&gt;&lt;img src="docs/assets/images/bf_logo.png" alt="Betaflight" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/betaflight/betaflight" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b58a813cd7ae2dfd6ad71131480346abd5aab18f/68747470733a2f2f7472617669732d63692e636f6d2f62657461666c696768742f62657461666c696768742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/betaflight/betaflight.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Betaflight is flight controller software (firmware) used to fly multi-rotor craft and fixed wing craft.&lt;/p&gt;
&lt;p&gt;This fork differs from Baseflight and Cleanflight in that it focuses on flight performance, leading-edge feature additions, and wide target support.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-betaflight-41" class="anchor" aria-hidden="true" href="#betaflight-41"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Betaflight 4.1&lt;/h3&gt;
&lt;p&gt;For Betaflight 4.0 we announced the advent of Unified Targets, and with them the capability to change all of the hardware resources on all (F4 and F7) targets. Unified Targets have been used successfully by testers since Betaflight 4.0 has been released, and users using the new bidirectional Dshot protocol have been using configurable resources to make this protocol work on their targets since then.&lt;/p&gt;
&lt;p&gt;But we were still not happy with the way that users had to use Unified Targets: The target specific hardware configuration had to be applied after the firmware was flashed, and re-applied every time the configuration was reset to defaults - we wanted to make the Unified Targets as easy to use as the existing 'legacy' targets are.&lt;/p&gt;
&lt;p&gt;We have figured out a way to make this work, and are currently working on implementing the required changes in the firmware and in Betaflight configurator, but it is taking longer to complete than we had anticipated. To allow us to get the integration of Unified Targets completed, &lt;strong&gt;we have shifted the release date for Betaflight 4.1 to 01 October 2019&lt;/strong&gt;. Until then we will keep doing monthly releases of Betaflight 4.0 with bugfixes and new / updated targets.&lt;/p&gt;
&lt;p&gt;To get the latest update from us, you can now also visit our webpage at &lt;a href="https://betaflight.com/" rel="nofollow"&gt;https://betaflight.com/&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-new-requirements-for-the-submission-of-new-and-updated-targets" class="anchor" aria-hidden="true" href="#new-requirements-for-the-submission-of-new-and-updated-targets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New requirements for the submission of new and updated targets&lt;/h3&gt;
&lt;p&gt;As &lt;a href="https://github.com/betaflight/betaflight#betaflight-40"&gt;announced earlier&lt;/a&gt;, Betaflight 4.0 is introducing a radically new way to define targets, the so-called 'Unified Targets'.&lt;/p&gt;
&lt;p&gt;This new approach makes it possible to use the same firmware binary (the so called 'Unified Target firmware') for all boards that share the same MCU type (only supported on F4 and F7). Manufacturers will be able to add support for new boards by simply publishing a new configuration (the so called 'Unified Target configuration') for their new board. Users can then simply load the already published Unified Target firmware and the new Unified Target configuration onto their new board to get it to work.&lt;/p&gt;
&lt;p&gt;Work to give users a simple way to flash unified targets in Betaflight configurator still needs to be done, so Betaflight 4.0 will be released with targets done in the 'legacy' way. But the plan is to add support for seamless use of Unified Targets into Betaflight configurator after Betaflight 4.0 has been released, and convert all of the existing F4 and F7 targets to the new format after the release of Betaflight 4.1.&lt;/p&gt;
&lt;p&gt;In order to be prepared for this move, the following new requirements for pull requests adding new targets or modifying existing targets are put in place from now on:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;No new F3 based targets will be accepted;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For any new target that is to be added, only a Unified Target config into &lt;a href="https://github.com/betaflight/unified-targets/tree/master/configs/default"&gt;https://github.com/betaflight/unified-targets/tree/master/configs/default&lt;/a&gt; needs to be submitted. See the &lt;a href="https://github.com/betaflight/betaflight/blob/master/docs/TargetMaintenance/CreatingAUnifiedTarget.md"&gt;instructions&lt;/a&gt; for how to create a Unified Target configuration. If there is no Unified Target for the MCU type of the new target (see instructions above), then a 'legacy' format target definition into &lt;code&gt;src/main/target/&lt;/code&gt; has to be submitted as well;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For changes to existing targets, the change needs to be applied to the Unified Target config in &lt;a href="https://github.com/betaflight/unified-targets/tree/master/configs/default"&gt;https://github.com/betaflight/unified-targets/tree/master/configs/default&lt;/a&gt;. If no Unified Target configuration for the target exists, a new Unified Target configuration will have to be created and submitted. If there is no Unified Target for the MCU type of the new target (see instructions above), then an update to the 'legacy' format target definition in &lt;code&gt;src/main/target/&lt;/code&gt; has to be submitted alongside the update to the Unified Target configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-end-of-active-development-for-stm32f3-based-flight-controllers" class="anchor" aria-hidden="true" href="#end-of-active-development-for-stm32f3-based-flight-controllers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;End of active development for STM32F3 based flight controllers&lt;/h3&gt;
&lt;p&gt;For a while now, development of Betaflight for flight controllers based on the STM32F3 chip has been hampered by a severe limitation that this chip has: Unlike the STM32F4 and STM32F7 models, the STM32F3 versions that are used on flight controllers have only a very limited amount of flash space available to fit the firmware into. This has meant that, starting from around version 3.3, the majority of the new features that were developed for Betaflight could not be added to STM32F3 based boards. Even worse, due to improvement in basic features, other more and more of the less commonly used features had to be removed from these flight controllers, and a number of them are at a point where they only support the bare minimum of functionality required to make them fly.&lt;/p&gt;
&lt;p&gt;This means that, even if we kept supporting STM32F3 based boards in future releases, there would only be little advantage in this, as there simply is no space left on STM32F3 to add any of the new features that these releases will contain.&lt;/p&gt;
&lt;p&gt;For this reason, and because the effort required to remove features from STM32F3 based flight controllers on a weekly basis is cutting into the time that we have to actually develop new features, we have decided to drop support for STM32F3 based flight controllers after the last release of 4.0.&lt;/p&gt;
&lt;p&gt;This does not mean that it won't be possible to use these flight controllers after this point in time - they will still work fine when used with the last release of 4.0, just as there are thousands of users who are still enjoying their STM32F1 based flight controllers with Betaflight 3.2.5. We will also strive to keep these versions supported in new releases of configurator, so that users still using these flight controllers will be able to configure them with the same configurator that they use to configure their STM32F4 and STM32F7 based boards.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-events" class="anchor" aria-hidden="true" href="#events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Events&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Date&lt;/th&gt;
&lt;th&gt;Event&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Betaflight has the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Multi-color RGB LED strip support (each LED can be a different color using variable length WS2811 Addressable RGB strips - use for Orientation Indicators, Low Battery Warning, Flight Mode Status, Initialization Troubleshooting, etc)&lt;/li&gt;
&lt;li&gt;DShot (150, 300, 600 and 1200), Multishot, and Oneshot (125 and 42) motor protocol support&lt;/li&gt;
&lt;li&gt;Blackbox flight recorder logging (to onboard flash or external microSD card where equipped)&lt;/li&gt;
&lt;li&gt;Support for targets that use the STM32 F7, F4 and F3 processors&lt;/li&gt;
&lt;li&gt;PWM, PPM, and Serial (SBus, SumH, SumD, Spektrum 1024/2048, XBus, etc) RX connection with failsafe detection&lt;/li&gt;
&lt;li&gt;Multiple telemetry protocols (CSRF, FrSky, HoTT smart-port, MSP, etc)&lt;/li&gt;
&lt;li&gt;RSSI via ADC - Uses ADC to read PWM RSSI signals, tested with FrSky D4R-II, X8R, X4R-SB, &amp;amp; XSR&lt;/li&gt;
&lt;li&gt;OSD support &amp;amp; configuration without needing third-party OSD software/firmware/comm devices&lt;/li&gt;
&lt;li&gt;OLED Displays - Display information on: Battery voltage/current/mAh, profile, rate profile, mode, version, sensors, etc&lt;/li&gt;
&lt;li&gt;In-flight manual PID tuning and rate adjustment&lt;/li&gt;
&lt;li&gt;Rate profiles and in-flight selection of them&lt;/li&gt;
&lt;li&gt;Configurable serial ports for Serial RX, Telemetry, ESC telemetry, MSP, GPS, OSD, Sonar, etc - Use most devices on any port, softserial included&lt;/li&gt;
&lt;li&gt;VTX support for Unify Pro and IRC Tramp&lt;/li&gt;
&lt;li&gt;and MUCH, MUCH more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation--documentation" class="anchor" aria-hidden="true" href="#installation--documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation &amp;amp; Documentation&lt;/h2&gt;
&lt;p&gt;See: &lt;a href="https://github.com/betaflight/betaflight/wiki"&gt;https://github.com/betaflight/betaflight/wiki&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support-and-developers-channel" class="anchor" aria-hidden="true" href="#support-and-developers-channel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support and Developers Channel&lt;/h2&gt;
&lt;p&gt;There's a dedicated Slack chat channel here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://slack.betaflight.com/" rel="nofollow"&gt;https://slack.betaflight.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Etiquette: Don't ask to ask and please wait around long enough for a reply - sometimes people are out flying, asleep or at work and can't answer immediately.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration-tool" class="anchor" aria-hidden="true" href="#configuration-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration Tool&lt;/h2&gt;
&lt;p&gt;To configure Betaflight you should use the Betaflight-configurator GUI tool (Windows/OSX/Linux) which can be found here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/betaflight/betaflight-configurator/releases/latest"&gt;https://github.com/betaflight/betaflight-configurator/releases/latest&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are welcome and encouraged. You can contribute in many ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentation updates and corrections.&lt;/li&gt;
&lt;li&gt;How-To guides - received help? Help others!&lt;/li&gt;
&lt;li&gt;Bug reporting &amp;amp; fixes.&lt;/li&gt;
&lt;li&gt;New feature ideas &amp;amp; suggestions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The best place to start is the Betaflight Slack (registration &lt;a href="https://slack.betaflight.com/" rel="nofollow"&gt;here&lt;/a&gt;. Next place is the github issue tracker:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/betaflight/betaflight/issues"&gt;https://github.com/betaflight/betaflight/issues&lt;/a&gt;
&lt;a href="https://github.com/betaflight/betaflight-configurator/issues"&gt;https://github.com/betaflight/betaflight-configurator/issues&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before creating new issues please check to see if there is an existing one, search first otherwise you waste people's time when they could be coding instead!&lt;/p&gt;
&lt;p&gt;If you want to contribute to our efforts financially, please consider making a donation to us through &lt;a href="https://paypal.me/betaflight" rel="nofollow"&gt;PayPal&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to contribute financially on an ongoing basis, you should consider becoming a patron for us on &lt;a href="https://www.patreon.com/betaflight" rel="nofollow"&gt;Patreon&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developers" class="anchor" aria-hidden="true" href="#developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers&lt;/h2&gt;
&lt;p&gt;Contribution of bugfixes and new features is encouraged. Please be aware that we have a thorough review process for pull requests, and be prepared to explain what you want to achieve with your pull request.
Before starting to write code, please read our &lt;a href="docs/development/Development.md"&gt;development guidelines&lt;/a&gt; and &lt;a href="docs/development/CodingStyle.md"&gt;coding style definition&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;TravisCI is used to run automatic builds&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/betaflight/betaflight" rel="nofollow"&gt;https://travis-ci.com/betaflight/betaflight&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/betaflight/betaflight" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b58a813cd7ae2dfd6ad71131480346abd5aab18f/68747470733a2f2f7472617669732d63692e636f6d2f62657461666c696768742f62657461666c696768742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/betaflight/betaflight.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-betaflight-releases" class="anchor" aria-hidden="true" href="#betaflight-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Betaflight Releases&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/betaflight/betaflight/releases"&gt;https://github.com/betaflight/betaflight/releases&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-open-source--contributors" class="anchor" aria-hidden="true" href="#open-source--contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open Source / Contributors&lt;/h2&gt;
&lt;p&gt;Betaflight is software that is &lt;strong&gt;open source&lt;/strong&gt; and is available free of charge without warranty to all users.&lt;/p&gt;
&lt;p&gt;Betaflight is forked from Cleanflight, so thanks goes to all those whom have contributed to Cleanflight and its origins.&lt;/p&gt;
&lt;p&gt;Origins for this fork (Thanks!):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Alexinparis&lt;/strong&gt; (for MultiWii),&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timecop&lt;/strong&gt; (for Baseflight),&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dominic Clifton&lt;/strong&gt; (for Cleanflight),&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;borisbstyle&lt;/strong&gt; (for Betaflight), and&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sambas&lt;/strong&gt; (for the original STM32F4 port).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Betaflight Configurator is forked from Cleanflight Configurator and its origins.&lt;/p&gt;
&lt;p&gt;Origins for Betaflight Configurator:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dominic Clifton&lt;/strong&gt; (for Cleanflight configurator), and&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctn&lt;/strong&gt; (for the original Configurator).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Big thanks to current and past contributors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Budden, Martin (martinbudden)&lt;/li&gt;
&lt;li&gt;Bardwell, Joshua (joshuabardwell)&lt;/li&gt;
&lt;li&gt;Blackman, Jason (blckmn)&lt;/li&gt;
&lt;li&gt;ctzsnooze&lt;/li&gt;
&lt;li&gt;Höglund, Anders (andershoglund)&lt;/li&gt;
&lt;li&gt;Ledvina, Petr (ledvinap) - &lt;strong&gt;IO code awesomeness!&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;kc10kevin&lt;/li&gt;
&lt;li&gt;Keeble, Gary (MadmanK)&lt;/li&gt;
&lt;li&gt;Keller, Michael (mikeller) - &lt;strong&gt;Configurator brilliance&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Kravcov, Albert (skaman82) - &lt;strong&gt;Configurator brilliance&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;MJ666&lt;/li&gt;
&lt;li&gt;Nathan (nathantsoi)&lt;/li&gt;
&lt;li&gt;ravnav&lt;/li&gt;
&lt;li&gt;sambas - &lt;strong&gt;bringing us the F4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;savaga&lt;/li&gt;
&lt;li&gt;Stålheim, Anton (KiteAnton)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And many many others who haven't been mentioned....&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>betaflight</author><guid isPermaLink="false">https://github.com/betaflight/betaflight</guid><pubDate>Fri, 06 Dec 2019 00:15:00 GMT</pubDate></item><item><title>outflanknl/Dumpert #16 in C, Today</title><link>https://github.com/outflanknl/Dumpert</link><description>&lt;p&gt;&lt;i&gt;LSASS memory dumper using direct system calls and API unhooking.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h3&gt;&lt;a id="user-content-dumpert-an-lsass-memory-dumper-using-direct-system-calls-and-api-unhooking" class="anchor" aria-hidden="true" href="#dumpert-an-lsass-memory-dumper-using-direct-system-calls-and-api-unhooking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dumpert, an LSASS memory dumper using direct system calls and API unhooking&lt;/h3&gt;
&lt;p&gt;Recent malware research shows that there is an increase in malware that is using direct system calls to evade user-mode API hooks used by security products.
This tool demonstrates the use of direct System Calls and API unhooking and combine these techniques in a proof of concept code which can be used to create a LSASS memory dump using Cobalt Strike,
while not touching disk and evading AV/EDR monitored user-mode API calls.&lt;/p&gt;
&lt;p&gt;More info about the used techniques can be found on the following Blog:
&lt;a href="https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/" rel="nofollow"&gt;https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Two versions of the code are included:&lt;/p&gt;
&lt;p&gt;An executable and a DLL version of the code.
The DLL version can be run as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rundll32.exe C:\Dumpert\Outflank-Dumpert.dll,Dump
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, an sRDI version of the code is provided, including a Cobalt Strike agressor script.
This script uses shinject to inject the sRDI shellcode version of the dumpert DLL into the current process.
Then it waits a few seconds for the lsass minidump to finish and finally downloads the minidump file from the victim host.&lt;/p&gt;
&lt;p&gt;Compile instructions:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This project is written in C and assembly.
You can use Visual Studio to compile it from source.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The sRDI code can be found here: &lt;a href="https://github.com/monoxgas/sRDI"&gt;https://github.com/monoxgas/sRDI&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>outflanknl</author><guid isPermaLink="false">https://github.com/outflanknl/Dumpert</guid><pubDate>Fri, 06 Dec 2019 00:16:00 GMT</pubDate></item><item><title>SaberOnGo/AirDog #17 in C, Today</title><link>https://github.com/SaberOnGo/AirDog</link><description>&lt;p&gt;&lt;i&gt;AirDog Air Qualtiy Detector Project&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-airdog" class="anchor" aria-hidden="true" href="#airdog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AirDog&lt;/h1&gt;
&lt;p&gt;AirDog is an Air Quality Detector Project.&lt;/p&gt;
&lt;p&gt;It can detect carbon dioxide(CO2) , formaldehyde, VOCs/Volatile Organic Compounds or&lt;/p&gt;
&lt;p&gt;TVOC/Total Volatile Organic Compound, PM2.5/PM10/PM0.3, Temperature, humidity in the air.&lt;/p&gt;
&lt;p&gt;Compile Environment:   Keil MDK-ARM 5.21a&lt;/p&gt;
&lt;p&gt;bootloader address:    0x8000000 ~  0x8007FFF(see directory: ./bin/Booloader bin file/)&lt;/p&gt;
&lt;p&gt;application address:   0x8008000 ~  0x803FFFF&lt;/p&gt;
&lt;p&gt;AirDog Disk Config File(see directory: ./doc/disk config file/ )&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./font/22.bin
./sensor
./update
./config.txt
./default
./system
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;sensors:
CO2  :  Sweden SenseAir LTD, S8 0053 CO2 Sensor&lt;/p&gt;
&lt;p&gt;Formaldehyde: England DART SENSORS LTD, WZ-S Module&lt;/p&gt;
&lt;p&gt;PM2.5/PM10:  China PlantPower LTD, PMS7003, PMS7003M&lt;/p&gt;
&lt;p&gt;Temperature &amp;amp; Humidity: Switzerland SENSIRION LTD, SHT20 Sensor&lt;/p&gt;
&lt;p&gt;VOCs: China Winsensor LTD, ZM01 IIC BUS VOCs MEMS Sensor&lt;/p&gt;
&lt;p&gt;Others:&lt;/p&gt;
&lt;p&gt;Photoresistance,&lt;/p&gt;
&lt;p&gt;PCF8563 RTC Clock,&lt;/p&gt;
&lt;p&gt;MCU: STM32F103RCT6(64K RAM, 256K ROM),&lt;/p&gt;
&lt;p&gt;ETA9742 3A Switching Charger&lt;/p&gt;
&lt;p&gt;WIFI Module: ESP-8266&lt;/p&gt;
&lt;p&gt;Features/Functions:&lt;/p&gt;
&lt;p&gt;1    High-precision imported sensors: PM2.5, PM10, CO2, HCHO, VOC, temperature and humidity, etc.&lt;/p&gt;
&lt;p&gt;2    The system is configured with multiple sensors, including illumination, vibration, and PCB temperature detection.&lt;/p&gt;
&lt;p&gt;3    2.8-inch color TFT display with color screen display.&lt;/p&gt;
&lt;p&gt;4    Touch sensing, vibration sensing, light sensing, intelligent adjustment of screen brightness at night.&lt;/p&gt;
&lt;p&gt;5    In addition to the 5V USB power supply, it is equipped with a large-capacity imported lithium battery to provide air movement for air quality detection.&lt;/p&gt;
&lt;p&gt;6    Built-in SD card, standard configuration 2G SD card, can store 5 years of sensor data, support up to 32GB SD card.&lt;/p&gt;
&lt;p&gt;7    can connect to the computer to view sensor data, virtual U disk supports FAT, FAT32, exFAT file system.&lt;/p&gt;
&lt;p&gt;8    Support online upgrade firmware, support remote firmware upgrade.&lt;/p&gt;
&lt;p&gt;9    equipped with WIFI module, support network control function&lt;/p&gt;
&lt;p&gt;10   Optional GPRS module, can be placed outdoors, remote detection in the deep forest.&lt;/p&gt;
&lt;p&gt;11   Configure the mobile app, including IOS and Android versions.&lt;/p&gt;
&lt;p&gt;12   Supports up to 2A fast charging function to quickly fill the battery.&lt;/p&gt;
&lt;p&gt;13   Reserved external interface to connect sensors such as oxygen, carbon monoxide, etc.&lt;/p&gt;
&lt;p&gt;14   Scrubed acrylic shell, so addictive ^-^.&lt;/p&gt;
&lt;p&gt;15   black gold plated PCB, noble and generous, lead-free solder, components are RoHS compliant.&lt;/p&gt;
&lt;p&gt;resources:&lt;/p&gt;
&lt;p&gt;1 WIFI:&lt;/p&gt;
&lt;p&gt;my ESP8266 sdk in: &lt;a href="https://github.com/SaberOnGo/ESP8266-AIRDOG"&gt;https://github.com/SaberOnGo/ESP8266-AIRDOG&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP8266(ie: ai-thinker ESP-12F, esp8266 with 32Mbit SPI FLASH)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wiki.ai-thinker.com/esp8266/docs" rel="nofollow"&gt;http://wiki.ai-thinker.com/esp8266/docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP8266 SDK and resources on Espressif:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.espressif.com/en/support/download/sdks-demos?keys=&amp;amp;field_type_tid%5B%5D=14" rel="nofollow"&gt;https://www.espressif.com/en/support/download/sdks-demos?keys=&amp;amp;field_type_tid%5B%5D=14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;/---------------------------------------------------------------------------/&lt;/p&gt;
&lt;p&gt;AirDog 是一个空气质量检测仪项目，可以检测CO2,甲醛，PM2.5/PM10,VOCs，温湿度等，&lt;/p&gt;
&lt;p&gt;具有WIFI/GPRS模块，可使用iOS or Android APP 显示/控制。&lt;/p&gt;
&lt;p&gt;编译环境:   Keil MDK-ARM 5.21a&lt;/p&gt;
&lt;p&gt;bootloader 地址:    0x8000000 ~  0x8007FFF(boot 文件在目录: ./bin/Booloader bin file/)&lt;/p&gt;
&lt;p&gt;应用程序地址:        0x8008000 ~  0x803FFFF&lt;/p&gt;
&lt;p&gt;空气狗配置文件在目录：./doc/disk config file/&lt;/p&gt;
&lt;p&gt;包括以下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./font/22.bin
./sensor
./update
./config.txt
./default
./system
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;传感器:&lt;/p&gt;
&lt;p&gt;CO2: 瑞典 SenseAir, S8 0053 二氧化碳传感器&lt;/p&gt;
&lt;p&gt;甲醛:英国DART WZ-S甲醛模块&lt;/p&gt;
&lt;p&gt;PM2.5/PM10: 攀藤PMS7003/PMS7003M&lt;/p&gt;
&lt;p&gt;温湿度: 瑞士 SENSIRION SHT20温湿度传感器&lt;/p&gt;
&lt;p&gt;VOCs: 炜盛ZM01 IIC 总线 MEMS 超低功耗VOCs传感器&lt;/p&gt;
&lt;p&gt;其他:&lt;/p&gt;
&lt;p&gt;光敏电阻&lt;/p&gt;
&lt;p&gt;PCF8563 RTC 时钟芯片&lt;/p&gt;
&lt;p&gt;MCU: STM32F103RCT6&lt;/p&gt;
&lt;p&gt;充电升压芯片: ETA9742&lt;/p&gt;
&lt;p&gt;WIFI模块: ESP-8266&lt;/p&gt;
&lt;p&gt;功能:
1     高精度进口传感器：PM2.5, PM10, CO2, HCHO, VOC, 温湿度等。&lt;/p&gt;
&lt;p&gt;2     系统配置多传感器，包括光照，震动，PCB温度检测等。&lt;/p&gt;
&lt;p&gt;3     2.8寸彩色TFT显示屏，彩色屏幕显示。&lt;/p&gt;
&lt;p&gt;4     触摸感应，震动感应，光照感应，夜晚智能调整屏幕亮度。&lt;/p&gt;
&lt;p&gt;5     除5V USB供电外，配置大容量进口锂电池供电，可移动检测空气质量。&lt;/p&gt;
&lt;p&gt;6     内置SD卡，标准配置2G SD卡，可存储5年传感器数据，支持高达32GB SD卡.&lt;/p&gt;
&lt;p&gt;7     可连接电脑查看传感器数据，虚拟U盘支持FAT,FAT32,exFAT文件系统&lt;/p&gt;
&lt;p&gt;8     支持联机升级固件，支持远程升级固件。&lt;/p&gt;
&lt;p&gt;9     配备WIFI模块，支持联网控制功能&lt;/p&gt;
&lt;p&gt;10    可选配GPRS模块，可放置在室外，深山老林中远程检测。&lt;/p&gt;
&lt;p&gt;11    配置手机端APP, 包括IOS 和 Android版本。&lt;/p&gt;
&lt;p&gt;12    支持高达2A快速充电功能，可快速充满电池。&lt;/p&gt;
&lt;p&gt;13    保留外置接口，可连接其他传感器，如氧气，一氧化碳等。&lt;/p&gt;
&lt;p&gt;14    磨砂亚克力外壳，令人爱不释手^-^。
15    黑色镀金版PCB，高贵大方，无铅焊锡，元器件符合RoHS要求。&lt;/p&gt;
&lt;p&gt;资源:
1 WIFI:&lt;/p&gt;
&lt;p&gt;笔者编译的SDK:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/SaberOnGo/ESP8266-AIRDOG"&gt;https://github.com/SaberOnGo/ESP8266-AIRDOG&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP8266(ie: ai-thinker ESP-12F, esp8266 with 32Mbit SPI FLASH)&lt;/p&gt;
&lt;p&gt;安信可文档中心&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wiki.ai-thinker.com/esp8266/docs" rel="nofollow"&gt;http://wiki.ai-thinker.com/esp8266/docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP8266 SDK and resources on Espressif:&lt;/p&gt;
&lt;p&gt;乐鑫原厂SDK:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.espressif.com/en/support/download/sdks-demos?keys=&amp;amp;field_type_tid%5B%5D=14" rel="nofollow"&gt;https://www.espressif.com/en/support/download/sdks-demos?keys=&amp;amp;field_type_tid%5B%5D=14&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SaberOnGo</author><guid isPermaLink="false">https://github.com/SaberOnGo/AirDog</guid><pubDate>Fri, 06 Dec 2019 00:17:00 GMT</pubDate></item><item><title>openssl/openssl #18 in C, Today</title><link>https://github.com/openssl/openssl</link><description>&lt;p&gt;&lt;i&gt;TLS/SSL and crypto library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;
 Copyright (c) 1998-2018 The OpenSSL Project
 Copyright (c) 1995-1998 Eric A. Young, Tim J. Hudson
 All rights reserved.

 DESCRIPTION
 -----------

 The OpenSSL Project is a collaborative effort to develop a robust,
 commercial-grade, fully featured, and Open Source toolkit implementing the
 Transport Layer Security (TLS) protocols (including SSLv3) as well as a
 full-strength general purpose cryptographic library.

 OpenSSL is descended from the SSLeay library developed by Eric A. Young
 and Tim J. Hudson.

 The OpenSSL toolkit is licensed under the Apache License 2.0, which means
 that you are free to get and use it for commercial and non-commercial
 purposes as long as you fulfill its conditions.

 OVERVIEW
 --------

 The OpenSSL toolkit includes:

 libssl (with platform specific naming):
     Provides the client and server-side implementations for SSLv3 and TLS.

 libcrypto (with platform specific naming):
     Provides general cryptographic and X.509 support needed by SSL/TLS but
     not logically part of it.

 openssl:
     A command line tool that can be used for:
        Creation of key parameters
        Creation of X.509 certificates, CSRs and CRLs
        Calculation of message digests
        Encryption and decryption
        SSL/TLS client and server tests
        Handling of S/MIME signed or encrypted mail
        And more...

 INSTALLATION
 ------------

 See the appropriate file:
        INSTALL         Linux, Unix, Windows, OpenVMS, ...
        NOTES.*         INSTALL addendums for different platforms

 SUPPORT
 -------

 See the OpenSSL website &lt;a href="http://www.openssl.org" rel="nofollow"&gt;www.openssl.org&lt;/a&gt; for details on how to obtain
 commercial technical support. Free community support is available through the
 openssl-users email list (see
 &lt;a href="https://www.openssl.org/community/mailinglists.html" rel="nofollow"&gt;https://www.openssl.org/community/mailinglists.html&lt;/a&gt; for further details).

 If you have any problems with OpenSSL then please take the following steps
 first:

    - Download the latest version from the repository
      to see if the problem has already been addressed
    - Configure with no-asm
    - Remove compiler optimization flags

 If you wish to report a bug then please include the following information
 and create an issue on GitHub:

    - OpenSSL version: output of 'openssl version -a'
    - Configuration data: output of 'perl configdata.pm --dump'
    - OS Name, Version, Hardware platform
    - Compiler Details (name, version)
    - Application Details (name, version)
    - Problem Description (steps that will reproduce the problem, if known)
    - Stack Traceback (if the application dumps core)

 Just because something doesn't work the way you expect does not mean it
 is necessarily a bug in OpenSSL. Use the openssl-users email list for this type
 of query.

 HOW TO CONTRIBUTE TO OpenSSL
 ----------------------------

 See CONTRIBUTING

 LEGALITIES
 ----------

 A number of nations restrict the use or export of cryptography. If you
 are potentially subject to such restrictions you should seek competent
 professional legal advice before attempting to develop or distribute
 cryptographic code.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>openssl</author><guid isPermaLink="false">https://github.com/openssl/openssl</guid><pubDate>Fri, 06 Dec 2019 00:18:00 GMT</pubDate></item><item><title>libuv/libuv #19 in C, Today</title><link>https://github.com/libuv/libuv</link><description>&lt;p&gt;&lt;i&gt;Cross-platform asynchronous I/O&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/libuv/libuv/master/img/banner.png"&gt;&lt;img src="https://raw.githubusercontent.com/libuv/libuv/master/img/banner.png" alt="libuv" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;libuv is a multi-platform support library with a focus on asynchronous I/O. It
was primarily developed for use by &lt;a href="http://nodejs.org/" rel="nofollow"&gt;Node.js&lt;/a&gt;, but it's also
used by &lt;a href="http://luvit.io/" rel="nofollow"&gt;Luvit&lt;/a&gt;, &lt;a href="http://julialang.org/" rel="nofollow"&gt;Julia&lt;/a&gt;,
&lt;a href="https://github.com/saghul/pyuv"&gt;pyuv&lt;/a&gt;, and &lt;a href="https://github.com/libuv/libuv/wiki/Projects-that-use-libuv"&gt;others&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feature-highlights" class="anchor" aria-hidden="true" href="#feature-highlights"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature highlights&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Full-featured event loop backed by epoll, kqueue, IOCP, event ports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asynchronous TCP and UDP sockets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asynchronous DNS resolution&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asynchronous file and file system operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;File system events&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ANSI escape code controlled TTY&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IPC with socket sharing, using Unix domain sockets or named pipes (Windows)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Child processes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Thread pool&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Signal handling&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;High resolution clock&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Threading and synchronization primitives&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h2&gt;
&lt;p&gt;Starting with version 1.0.0 libuv follows the &lt;a href="http://semver.org/" rel="nofollow"&gt;semantic versioning&lt;/a&gt;
scheme. The API change and backwards compatibility rules are those indicated by
SemVer. libuv will keep a stable ABI across major releases.&lt;/p&gt;
&lt;p&gt;The ABI/API changes can be tracked &lt;a href="http://abi-laboratory.pro/tracker/timeline/libuv/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h2&gt;
&lt;p&gt;libuv is licensed under the MIT license. Check the &lt;a href="LICENSE"&gt;LICENSE file&lt;/a&gt;.
The documentation is licensed under the CC BY 4.0 license. Check the &lt;a href="LICENSE-docs"&gt;LICENSE-docs file&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/libuv/help"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://groups.google.com/group/libuv" rel="nofollow"&gt;Mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://webchat.freenode.net?channels=libuv&amp;amp;uio=d4" rel="nofollow"&gt;IRC chatroom (#libuv@irc.freenode.org)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-official-documentation" class="anchor" aria-hidden="true" href="#official-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official documentation&lt;/h3&gt;
&lt;p&gt;Located in the docs/ subdirectory. It uses the &lt;a href="http://sphinx-doc.org/" rel="nofollow"&gt;Sphinx&lt;/a&gt;
framework, which makes it possible to build the documentation in multiple
formats.&lt;/p&gt;
&lt;p&gt;Show different supported building options:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make &lt;span class="pl-c1"&gt;help&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as HTML:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make html&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as HTML and live reload it when it changes (this requires
sphinx-autobuild to be installed and is only supported on Unix):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make livehtml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as man pages:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make man&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as ePub:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make epub&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: Windows users need to use make.bat instead of plain 'make'.&lt;/p&gt;
&lt;p&gt;Documentation can be browsed online &lt;a href="http://docs.libuv.org" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/libuv/libuv/tree/master/test"&gt;tests and benchmarks&lt;/a&gt;
also serve as API specification and usage examples.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other-resources" class="anchor" aria-hidden="true" href="#other-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=nGn60vDSxQ4" rel="nofollow"&gt;LXJS 2012 talk&lt;/a&gt;
— High-level introductory talk about libuv.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thlorenz/libuv-dox"&gt;libuv-dox&lt;/a&gt;
— Documenting types and methods of libuv, mostly by reading uv.h.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thlorenz/learnuv"&gt;learnuv&lt;/a&gt;
— Learn uv for fun and profit, a self guided workshop to libuv.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These resources are not handled by libuv maintainers and might be out of
date. Please verify it before opening new issues.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-downloading" class="anchor" aria-hidden="true" href="#downloading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading&lt;/h2&gt;
&lt;p&gt;libuv can be downloaded either from the
&lt;a href="https://github.com/libuv/libuv"&gt;GitHub repository&lt;/a&gt;
or from the &lt;a href="http://dist.libuv.org/dist/" rel="nofollow"&gt;downloads site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Starting with libuv 1.7.0, binaries for Windows are also provided. This is to
be considered EXPERIMENTAL.&lt;/p&gt;
&lt;p&gt;Before verifying the git tags or signature files, importing the relevant keys
is necessary. Key IDs are listed in the
&lt;a href="https://github.com/libuv/libuv/blob/master/MAINTAINERS.md"&gt;MAINTAINERS&lt;/a&gt;
file, but are also available as git blob objects for easier use.&lt;/p&gt;
&lt;p&gt;Importing a key the usual way:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gpg --keyserver pool.sks-keyservers.net --recv-keys AE9BC059&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Importing a key from a git blob object:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git show pubkey-saghul &lt;span class="pl-k"&gt;|&lt;/span&gt; gpg --import&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-verifying-releases" class="anchor" aria-hidden="true" href="#verifying-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verifying releases&lt;/h3&gt;
&lt;p&gt;Git tags are signed with the developer's key, they can be verified as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git verify-tag v1.6.1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starting with libuv 1.7.0, the tarballs stored in the
&lt;a href="http://dist.libuv.org/dist/" rel="nofollow"&gt;downloads site&lt;/a&gt; are signed and an accompanying
signature file sit alongside each. Once both the release tarball and the
signature file are downloaded, the file can be verified as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gpg --verify libuv-1.7.0.tar.gz.sign&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-build-instructions" class="anchor" aria-hidden="true" href="#build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Instructions&lt;/h2&gt;
&lt;p&gt;For GCC there are two build methods: via autotools or via &lt;a href="http://code.google.com/p/gyp/" rel="nofollow"&gt;GYP&lt;/a&gt;.
GYP is a meta-build system which can generate MSVS, Makefile, and XCode
backends. It is best used for integration into other projects.&lt;/p&gt;
&lt;p&gt;To build with autotools:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ sh autogen.sh
$ ./configure
$ make
$ make check
$ make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build with &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mkdir -p out/cmake &lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; out/cmake   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; create build directory&lt;/span&gt;
$ cmake ../.. -DBUILD_TESTING=ON      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; generate project with test&lt;/span&gt;
$ cmake --build &lt;span class="pl-c1"&gt;.&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; build&lt;/span&gt;
$ ctest -C Debug --output-on-failure  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run tests&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or manually run tests:&lt;/span&gt;
$ ./out/cmake/uv_run_tests    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; shared library build&lt;/span&gt;
$ ./out/cmake/uv_run_tests_a  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; static library build&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build with GYP, first run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://chromium.googlesource.com/external/gyp build/gyp&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/" rel="nofollow"&gt;Python 2.6 or 2.7&lt;/a&gt; as it is required
by &lt;a href="http://code.google.com/p/gyp/" rel="nofollow"&gt;GYP&lt;/a&gt;.
If python is not in your path, set the environment variable &lt;code&gt;PYTHON&lt;/code&gt; to its
location. For example: &lt;code&gt;set PYTHON=C:\Python27\python.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;One of:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://visualstudio.microsoft.com/visual-cpp-build-tools/" rel="nofollow"&gt;Visual C++ Build Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visualstudio.com/vs/older-downloads/" rel="nofollow"&gt;Visual Studio 2015 Update 3&lt;/a&gt;, all editions
including the Community edition (remember to select
"Common Tools for Visual C++ 2015" feature during installation).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visualstudio.com/downloads/" rel="nofollow"&gt;Visual Studio 2017&lt;/a&gt;, any edition (including the Build Tools SKU).
&lt;strong&gt;Required Components:&lt;/strong&gt; "MSbuild", "VC++ 2017 v141 toolset" and one of the
Windows SDKs (10 or 8.1).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Basic Unix tools required for some tests,
&lt;a href="http://git-scm.com/download/win" rel="nofollow"&gt;Git for Windows&lt;/a&gt; includes Git Bash
and tools which can be included in the global &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To build, launch a git shell (e.g. Cmd or PowerShell), run &lt;code&gt;vcbuild.bat&lt;/code&gt;
(to build with VS2017 you need to explicitly add a &lt;code&gt;vs2017&lt;/code&gt; argument),
which will checkout the GYP code into &lt;code&gt;build/gyp&lt;/code&gt;, generate &lt;code&gt;uv.sln&lt;/code&gt;
as well as the necesery related project files, and start building.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild vs2017&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the tests:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To see all the options that could passed to &lt;code&gt;vcbuild&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild &lt;span class="pl-c1"&gt;help&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;vcbuild.bat [debug/release] [test/bench] [clean] [noprojgen] [nobuild] [vs2017] [x86/x64] [static/shared]&lt;/span&gt;
&lt;span class="pl-c1"&gt;Examples:&lt;/span&gt;
&lt;span class="pl-c1"&gt;  vcbuild.bat              : builds debug build&lt;/span&gt;
&lt;span class="pl-c1"&gt;  vcbuild.bat test         : builds debug build and runs tests&lt;/span&gt;
&lt;span class="pl-c1"&gt;  vcbuild.bat release bench: builds release build and runs benchmarks&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-unix" class="anchor" aria-hidden="true" href="#unix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unix&lt;/h3&gt;
&lt;p&gt;For Debug builds (recommended) run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f make
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Release builds run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f make
$ BUILDTYPE=Release make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;./gyp_uv.py -f make -Dtarget_arch=x32&lt;/code&gt; to build &lt;a href="https://en.wikipedia.org/wiki/X32_ABI" rel="nofollow"&gt;x32&lt;/a&gt; binaries.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-os-x" class="anchor" aria-hidden="true" href="#os-x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OS X&lt;/h3&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f xcode
$ xcodebuild -ARCHS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x86_64&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; -project out/uv.xcodeproj -configuration Release -alltargets&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using Homebrew:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew install --HEAD libuv&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note to OS X users:&lt;/p&gt;
&lt;p&gt;Make sure that you specify the architecture you wish to build for in the
"ARCHS" flag. You can specify more than one by delimiting with a space
(e.g. "x86_64 i386").&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h3&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;p&gt;For arm&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-arm NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for arm64&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-arm64 NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for x86&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-x86 NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for x86_64&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-x86_64 NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default API level is 24, but a different one can be selected as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-arm &lt;span class="pl-k"&gt;~&lt;/span&gt;/android-ndk-r15b gyp 21
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note for UNIX users: compile your project with &lt;code&gt;-D_LARGEFILE_SOURCE&lt;/code&gt; and
&lt;code&gt;-D_FILE_OFFSET_BITS=64&lt;/code&gt;. GYP builds take care of that automatically.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-ninja" class="anchor" aria-hidden="true" href="#using-ninja"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Ninja&lt;/h3&gt;
&lt;p&gt;To use ninja for build on ninja supported platforms, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f ninja
$ ninja -C out/Debug     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;for debug build OR&lt;/span&gt;
$ ninja -C out/Release&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h4&gt;
&lt;p&gt;Build (includes tests):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f make
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-run-all-tests" class="anchor" aria-hidden="true" href="#run-all-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run all tests&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./out/Debug/run-tests&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-run-one-test" class="anchor" aria-hidden="true" href="#run-one-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run one test&lt;/h4&gt;
&lt;p&gt;The list of all tests is in &lt;code&gt;test/test-list.h&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This invocation will cause the &lt;code&gt;run-tests&lt;/code&gt; driver to fork and execute &lt;code&gt;TEST_NAME&lt;/code&gt; in a child process:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./out/Debug/run-tests TEST_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This invocation will cause the &lt;code&gt;run-tests&lt;/code&gt; driver to execute the test within the &lt;code&gt;run-tests&lt;/code&gt; process:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./out/Debug/run-tests TEST_NAME TEST_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-debugging-tools" class="anchor" aria-hidden="true" href="#debugging-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging tools&lt;/h4&gt;
&lt;p&gt;When running the test from within the &lt;code&gt;run-tests&lt;/code&gt; process (&lt;code&gt;run-tests TEST_NAME TEST_NAME&lt;/code&gt;), tools like gdb and valgrind work normally.
When running the test from a child of the &lt;code&gt;run-tests&lt;/code&gt; process (&lt;code&gt;run-tests TEST_NAME&lt;/code&gt;), use these tools in a fork-aware manner.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-fork-aware-gdb" class="anchor" aria-hidden="true" href="#fork-aware-gdb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fork-aware gdb&lt;/h5&gt;
&lt;p&gt;Use the &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/Forks.html" rel="nofollow"&gt;follow-fork-mode&lt;/a&gt; setting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gdb --args out/Debug/run-tests TEST_NAME

(gdb) set follow-fork-mode child
...
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-fork-aware-valgrind" class="anchor" aria-hidden="true" href="#fork-aware-valgrind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fork-aware valgrind&lt;/h5&gt;
&lt;p&gt;Use the &lt;code&gt;--trace-children=yes&lt;/code&gt; parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ valgrind --trace-children=yes -v --tool=memcheck --leak-check=full --track-origins=yes --leak-resolution=high --show-reachable=yes --log-file=memcheck-%p.log out/Debug/run-tests TEST_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-running-benchmarks" class="anchor" aria-hidden="true" href="#running-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running benchmarks&lt;/h3&gt;
&lt;p&gt;See the section on running tests.
The benchmark driver is &lt;code&gt;out/Debug/run-benchmarks&lt;/code&gt; and the benchmarks are listed in &lt;code&gt;test/benchmark-list.h&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Platforms&lt;/h2&gt;
&lt;p&gt;Check the &lt;a href="SUPPORTED_PLATFORMS.md"&gt;SUPPORTED_PLATFORMS file&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-aix-notes" class="anchor" aria-hidden="true" href="#aix-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AIX Notes&lt;/h3&gt;
&lt;p&gt;AIX compilation using IBM XL C/C++ requires version 12.1 or greater.&lt;/p&gt;
&lt;p&gt;AIX support for filesystem events requires the non-default IBM &lt;code&gt;bos.ahafs&lt;/code&gt;
package to be installed.  This package provides the AIX Event Infrastructure
that is detected by &lt;code&gt;autoconf&lt;/code&gt;.
&lt;a href="http://www.ibm.com/developerworks/aix/library/au-aix_event_infrastructure/" rel="nofollow"&gt;IBM documentation&lt;/a&gt;
describes the package in more detail.&lt;/p&gt;
&lt;p&gt;AIX support for filesystem events is not compiled when building with &lt;code&gt;gyp&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-zos-notes" class="anchor" aria-hidden="true" href="#zos-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;z/OS Notes&lt;/h3&gt;
&lt;p&gt;z/OS creates System V semaphores and message queues. These persist on the system
after the process terminates unless the event loop is closed.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;ipcrm&lt;/code&gt; command to manually clear up System V resources.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-patches" class="anchor" aria-hidden="true" href="#patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Patches&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/libuv/libuv/blob/master/CONTRIBUTING.md"&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>libuv</author><guid isPermaLink="false">https://github.com/libuv/libuv</guid><pubDate>Fri, 06 Dec 2019 00:19:00 GMT</pubDate></item><item><title>linux-rdma/rdma-core #20 in C, Today</title><link>https://github.com/linux-rdma/rdma-core</link><description>&lt;p&gt;&lt;i&gt;RDMA core userspace libraries and daemons&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://dev.azure.com/ucfconsort/rdma-core/_build/latest?definitionId=2&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d2aff2c58ed8b60badb9f1ac1f90783efc158fb/68747470733a2f2f6465762e617a7572652e636f6d2f756366636f6e736f72742f72646d612d636f72652f5f617069732f6275696c642f7374617475732f6c696e75782d72646d612e72646d612d636f72653f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/ucfconsort/rdma-core/_apis/build/status/linux-rdma.rdma-core?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-rdma-core-userspace-libraries-and-daemons" class="anchor" aria-hidden="true" href="#rdma-core-userspace-libraries-and-daemons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RDMA Core Userspace Libraries and Daemons&lt;/h1&gt;
&lt;p&gt;This is the userspace components for the Linux Kernel's drivers/infiniband
subsystem. Specifically this contains the userspace libraries for the
following device nodes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/dev/infiniband/uverbsX (libibverbs)&lt;/li&gt;
&lt;li&gt;/dev/infiniband/rdma_cm (librdmacm)&lt;/li&gt;
&lt;li&gt;/dev/infiniband/umadX (libibumad)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The userspace component of the libibverbs RDMA kernel drivers are included
under the providers/ directory. Support for the following Kernel RDMA drivers
is included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;efa.ko&lt;/li&gt;
&lt;li&gt;iw_cxgb4.ko&lt;/li&gt;
&lt;li&gt;hfi1.ko&lt;/li&gt;
&lt;li&gt;hns-roce.ko&lt;/li&gt;
&lt;li&gt;i40iw.ko&lt;/li&gt;
&lt;li&gt;ib_qib.ko&lt;/li&gt;
&lt;li&gt;mlx4_ib.ko&lt;/li&gt;
&lt;li&gt;mlx5_ib.ko&lt;/li&gt;
&lt;li&gt;ib_mthca.ko&lt;/li&gt;
&lt;li&gt;ocrdma.ko&lt;/li&gt;
&lt;li&gt;qedr.ko&lt;/li&gt;
&lt;li&gt;rdma_rxe.ko&lt;/li&gt;
&lt;li&gt;siw.ko&lt;/li&gt;
&lt;li&gt;vmw_pvrdma.ko&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional service daemons are provided for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;srp_daemon (ib_srp.ko)&lt;/li&gt;
&lt;li&gt;iwpmd (for iwarp kernel providers)&lt;/li&gt;
&lt;li&gt;ibacm (for InfiniBand communication management assistant)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;p&gt;This project uses a cmake based build system. Quick start:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ bash build.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;build/bin&lt;/em&gt; will contain the sample programs and &lt;em&gt;build/lib&lt;/em&gt; will contain the
shared libraries. The build is configured to run all the programs 'in-place'
and cannot be installed.&lt;/p&gt;
&lt;p&gt;NOTE: It is not currently easy to run from the build directory, the plugins
only load from the system path.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debian-derived" class="anchor" aria-hidden="true" href="#debian-derived"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debian Derived&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ apt-get install build-essential cmake gcc libudev-dev libnl-3-dev libnl-route-3-dev ninja-build pkg-config valgrind python3-dev cython3&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fedora" class="anchor" aria-hidden="true" href="#fedora"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fedora&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ dnf install cmake gcc libnl3-devel libudev-devel pkgconfig valgrind-devel ninja-build python3-devel python3-Cython&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: Fedora Core uses the name 'ninja-build' for the 'ninja' command.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-opensuse" class="anchor" aria-hidden="true" href="#opensuse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;openSUSE&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ zypper install cmake gcc libnl3-devel libudev-devel ninja pkg-config valgrind-devel python3-devel python3-Cython&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-building-on-centos-67-amazon-linux-12" class="anchor" aria-hidden="true" href="#building-on-centos-67-amazon-linux-12"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building on CentOS 6/7, Amazon Linux 1/2&lt;/h2&gt;
&lt;p&gt;Install required packages:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ yum install cmake gcc libnl3-devel libudev-devel make pkgconfig valgrind-devel&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Developers on CentOS 7 or Amazon Linux 2 are suggested to install more modern
tooling for the best experience.&lt;/p&gt;
&lt;p&gt;CentOS 7:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ yum install epel-release
$ yum install cmake3 ninja-build pandoc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Amazon Linux 2:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ amazon-linux-extras install epel
$ yum install cmake3 ninja-build pandoc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: EPEL uses the name 'ninja-build' for the 'ninja' command, and 'cmake3'
for the 'cmake' command.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;p&gt;To set up software RDMA on an existing interface with either of the available
drivers, use the following commands, substituting &lt;code&gt;&amp;lt;DRIVER&amp;gt;&lt;/code&gt; with the name of
the driver of your choice (&lt;code&gt;rdma_rxe&lt;/code&gt; or &lt;code&gt;siw&lt;/code&gt;) and &lt;code&gt;&amp;lt;TYPE&amp;gt;&lt;/code&gt; with the type
corresponding to the driver (&lt;code&gt;rxe&lt;/code&gt; or &lt;code&gt;siw&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# modprobe &amp;lt;DRIVER&amp;gt;
# rdma link add &amp;lt;NAME&amp;gt; type &amp;lt;TYPE&amp;gt; netdev &amp;lt;DEVICE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Please note that you need version of &lt;code&gt;iproute2&lt;/code&gt; recent enough is required for the
command above to work.&lt;/p&gt;
&lt;p&gt;You can use either &lt;code&gt;ibv_devices&lt;/code&gt; or &lt;code&gt;rdma link&lt;/code&gt; to verify that the device was
successfully added.&lt;/p&gt;
&lt;p&gt;Use of &lt;code&gt;rxe_cfg&lt;/code&gt; is deprecated, please use the &lt;code&gt;rdma&lt;/code&gt; command instead.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting bugs&lt;/h1&gt;
&lt;p&gt;Bugs should be reported to the &lt;a href="mailto:linux-rdma@vger.kernel.org"&gt;linux-rdma@vger.kernel.org&lt;/a&gt; mailing list
In your bug report, please include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Information about your system:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux distribution and version&lt;/li&gt;
&lt;li&gt;Linux kernel and version&lt;/li&gt;
&lt;li&gt;InfiniBand hardware and firmware version&lt;/li&gt;
&lt;li&gt;... any other relevant information&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to reproduce the bug.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the bug is a crash, the exact output printed out when the crash
occurred, including any kernel messages produced.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-submitting-patches" class="anchor" aria-hidden="true" href="#submitting-patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting patches&lt;/h1&gt;
&lt;p&gt;Patches should also be submitted to the &lt;a href="mailto:linux-rdma@vger.kernel.org"&gt;linux-rdma@vger.kernel.org&lt;/a&gt;
mailing list.  Please use unified diff form (the -u option to GNU diff),
and include a good description of what your patch does and why it should
be applied.  If your patch fixes a bug, please make sure to describe the
bug and how your fix works.&lt;/p&gt;
&lt;p&gt;Make sure that your contribution can be licensed under the same
license as the original code you are patching, and that you have all
necessary permissions to release your work.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-azure-pipelines-ci" class="anchor" aria-hidden="true" href="#azure-pipelines-ci"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Azure Pipelines CI&lt;/h2&gt;
&lt;p&gt;Submitted patches must pass the Azure Pipelines CI automatic builds without
warnings.  A build similar to AZP can be run locally using docker and the
'buildlib/cbuild' script.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ buildlib/cbuild build-images azp
$ buildlib/cbuild pkg azp&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>linux-rdma</author><guid isPermaLink="false">https://github.com/linux-rdma/rdma-core</guid><pubDate>Fri, 06 Dec 2019 00:20:00 GMT</pubDate></item><item><title>ARM-software/CMSIS_5 #21 in C, Today</title><link>https://github.com/ARM-software/CMSIS_5</link><description>&lt;p&gt;&lt;i&gt;CMSIS Version 5 Development Repository&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cmsis-version-5" class="anchor" aria-hidden="true" href="#cmsis-version-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMSIS Version 5&lt;/h1&gt;
&lt;p&gt;The branch &lt;em&gt;master&lt;/em&gt; of this GitHub repository contains the CMSIS Version 5.6.0.  The &lt;a href="http://arm-software.github.io/CMSIS_5/General/html/index.html" rel="nofollow"&gt;documentation&lt;/a&gt; is available under &lt;a href="http://arm-software.github.io/CMSIS_5/General/html/index.html" rel="nofollow"&gt;http://arm-software.github.io/CMSIS_5/General/html/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;a href="https://github.com/ARM-software/CMSIS_5#issues-and-labels"&gt;Issues&lt;/a&gt; to provide feedback and report problems for CMSIS Version 5.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The branch &lt;em&gt;develop&lt;/em&gt; of this GitHub repository reflects our current state of development and is constantly updated. It gives our users and partners contiguous access to the CMSIS development. It allows you to review the work and provide feedback or create pull requests for contributions.&lt;/p&gt;
&lt;p&gt;A &lt;a href="http://www.keil.com/pack/doc/CMSIS_Dev/index.html" rel="nofollow"&gt;pre-built documentation&lt;/a&gt; is updated from time to time, but may be also generated using the instructions under &lt;a href="https://github.com/ARM-software/CMSIS_5#generate-cmsis-pack-for-release"&gt;Generate CMSIS Pack for Release&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview-of-cmsis-components" class="anchor" aria-hidden="true" href="#overview-of-cmsis-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview of CMSIS Components&lt;/h2&gt;
&lt;p&gt;The following is an list of all CMSIS components that are available.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;CMSIS-...&lt;/th&gt;
&lt;th align="left"&gt;Target Processors&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/Core/html/index.html" rel="nofollow"&gt;Core(M)&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;All Cortex-M, SecurCore&lt;/td&gt;
&lt;td align="left"&gt;Standardized API for the Cortex-M processor core and peripherals. Includes intrinsic functions for Cortex-M4/M7/M33/M35P SIMD instructions.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/Core_A/html/index.html" rel="nofollow"&gt;Core(A)&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Cortex-A5/A7/A9&lt;/td&gt;
&lt;td align="left"&gt;API and basic run-time system for the Cortex-A5/A7/A9 processor core and peripherals.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/Driver/html/index.html" rel="nofollow"&gt;Driver&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;All Cortex-M, SecurCore&lt;/td&gt;
&lt;td align="left"&gt;Generic peripheral driver interfaces for middleware. Connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/DSP/html/index.html" rel="nofollow"&gt;DSP&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;All Cortex-M&lt;/td&gt;
&lt;td align="left"&gt;DSP library collection with over 60 Functions for various data types: fixed-point (fractional q7, q15, q31) and single precision floating-point (32-bit). Implementations optimized for the SIMD instruction set are available for Cortex-M4/M7/M33/M35P.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/NN/html/index.html" rel="nofollow"&gt;NN&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;All Cortex-M&lt;/td&gt;
&lt;td align="left"&gt;Collection of efficient neural network kernels developed to maximize the performance and minimize the memory footprint on Cortex-M processor cores.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/RTOS/html/index.html" rel="nofollow"&gt;RTOS v1&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Cortex-M0/M0+/M3/M4/M7&lt;/td&gt;
&lt;td align="left"&gt;Common API for real-time operating systems along with a reference implementation based on RTX. It enables software components that can work across multiple RTOS systems.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/RTOS2/html/index.html" rel="nofollow"&gt;RTOS v2&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;All Cortex-M, Cortex-A5/A7/A9&lt;/td&gt;
&lt;td align="left"&gt;Extends CMSIS-RTOS v1 with Armv8-M support, dynamic object creation, provisions for multi-core systems, binary compatible interface.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/Pack/html/index.html" rel="nofollow"&gt;Pack&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;All Cortex-M, SecurCore, Cortex-A5/A7/A9&lt;/td&gt;
&lt;td align="left"&gt;Describes a delivery mechanism for software components, device parameters, and evaluation board support. It simplifies software re-use and product life-cycle management (PLM).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/SVD/html/index.html" rel="nofollow"&gt;SVD&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;All Cortex-M, SecurCore&lt;/td&gt;
&lt;td align="left"&gt;Peripheral description of a device that can be used to create peripheral awareness in debuggers or CMSIS-Core header files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/DAP/html/index.html" rel="nofollow"&gt;DAP&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;All Cortex&lt;/td&gt;
&lt;td align="left"&gt;Firmware for a debug unit that interfaces to the CoreSight Debug Access Port.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://arm-software.github.io/CMSIS_5/Zone/html/index.html" rel="nofollow"&gt;Zone&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;All Cortex-M&lt;/td&gt;
&lt;td align="left"&gt;Defines methods to describe system resources and to partition these resources into multiple projects and execution areas.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-implemented-enhancements" class="anchor" aria-hidden="true" href="#implemented-enhancements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implemented Enhancements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CMSIS-Core-A, RTX5: implementation for Cortex-A5/A7/A9&lt;/li&gt;
&lt;li&gt;Support for Armv8-M Architecture (Mainline and Baseline) as well as devices Cortex-M23 and Cortex-M33&lt;/li&gt;
&lt;li&gt;CMSIS-RTOS2: RTX 5 is now available for IAR, GCC, Arm Compiler 5, Arm Compiler 6&lt;/li&gt;
&lt;li&gt;CMSIS-RTOS2: FreeRTOS adoption (release) is available &lt;a href="https://github.com/ARM-software/CMSIS-FreeRTOS"&gt;https://github.com/ARM-software/CMSIS-FreeRTOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CMSIS-NN: Bare metal Neural Network function library.&lt;/li&gt;
&lt;li&gt;CMSIS-DAP v2: with WinUSB for faster communication and separate pipe for SWO support&lt;/li&gt;
&lt;li&gt;Config Wizard extension: access enum’s for configuration information&lt;/li&gt;
&lt;li&gt;CMSIS-Pack: &lt;a href="https://arm-software.github.io/CMSIS_5/Pack/html/element_repository.html" rel="nofollow"&gt;Git workflow&lt;/a&gt; via Eclipse menu &lt;em&gt;Window - Perferences - CMSIS Packs - Manage Local Repositories&lt;/em&gt; and &lt;a href="http://www.keil.com/support/man/docs/uv4/uv4_ca_packinst_repo.htm" rel="nofollow"&gt;MDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CMSIS-Pack: &lt;a href="https://arm-software.github.io/CMSIS_5/Pack/html/pdsc_family_pg.html#element_flashinfo" rel="nofollow"&gt;Flash algorithm via debugger&lt;/a&gt; as some TurstZone enable devices cannot execute RAM.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-further-planned-enhancements" class="anchor" aria-hidden="true" href="#further-planned-enhancements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Further Planned Enhancements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CMSIS-Zone: resource management for multi-core and access protection - &lt;a href="https://community.arm.com/developer/tools-software/tools/b/tools-software-ides-blog/posts/configuring-armv8-m-systems-with-cmsis-zone" rel="nofollow"&gt;see here for pre-release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CMSIS-Pack:
&lt;ul&gt;
&lt;li&gt;System Description SDF Format: describe more complex debug topologies than with a Debug Description in a tool agnostic way&lt;/li&gt;
&lt;li&gt;CPDSC project file format: allows project templates that are agnostic of an IDE&lt;/li&gt;
&lt;li&gt;Minimize need for IDE specific settings: CMSIS-Pack supports IDE specific parameters. Analyze and minimize&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CMSIS-Build: command-line driven make system for CMSIS-Pack based projects (to support CI tests)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For further details see also the &lt;a href="https://github.com/ARM-software/CMSIS_5/blob/develop/CMSIS_EW2019.pdf"&gt;Slides of the Embedded World CMSIS Partner Meeting&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-related-github-repositories" class="anchor" aria-hidden="true" href="#other-related-github-repositories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other related GitHub repositories&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Repository&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/ARM-software/cmsis-pack-eclipse"&gt;cmsis-pack-eclipse&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-Pack Management for Eclipse reference implementation Pack support&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/arm-software/CMSIS-FreeRTOS"&gt;CMSIS-FreeRTOS&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-RTOS adoption of FreeRTOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/arm-software/CMSIS-Driver"&gt;CMSIS-Driver&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Generic MCU driver implementations and templates for Ethernet MAC/PHY and Flash.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/ARM-software/CMSIS-Driver_Validation"&gt;CMSIS-Driver_Validation&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-Driver Validation can be used to verify CMSIS-Driver in a user system&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/ARM-software/CMSIS-Zone"&gt;CMSIS-Zone&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-Zone Utility along with example projects and FreeMarker templates&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/ARM-software/NXP_LPC"&gt;NXP_LPC&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;CMSIS Driver Implementations for the NXP LPC Microcontroller Series&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/mdk-packs"&gt;mdk-packs&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;IoT cloud connectors as trail implementations for MDK (help us to make it generic)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.trustedfirmware.org/" rel="nofollow"&gt;trustedfirmware.org&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Arm Trusted Firmware provides a reference implementation of secure world software for Armv8-A and Armv8-M.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-directory-structure" class="anchor" aria-hidden="true" href="#directory-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Directory Structure&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Directory&lt;/th&gt;
&lt;th align="left"&gt;Content&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/Core&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-Core(M) related files (for release)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/Core_A&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-Core(A) related files (for release)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/CoreValidation&lt;/td&gt;
&lt;td align="left"&gt;Validation for Core(M) and Core(A) (NOT part of release)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/DAP&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-DAP related files and examples&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/Driver&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-Driver API headers and template files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/DSP&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-DSP related files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/NN&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-NN related files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/RTOS&lt;/td&gt;
&lt;td align="left"&gt;RTOS v1 related files (for Cortex-M)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/RTOS2&lt;/td&gt;
&lt;td align="left"&gt;RTOS v2 related files (for Cortex-M &amp;amp; Armv8-M)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/Pack&lt;/td&gt;
&lt;td align="left"&gt;CMSIS-Pack examples and tutorials&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/DoxyGen&lt;/td&gt;
&lt;td align="left"&gt;Source of the documentation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;CMSIS/Utilities&lt;/td&gt;
&lt;td align="left"&gt;Utility programs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-generate-cmsis-pack-for-release" class="anchor" aria-hidden="true" href="#generate-cmsis-pack-for-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate CMSIS Pack for Release&lt;/h2&gt;
&lt;p&gt;This GitHub development repository contains already pre-built libraries (stored in Git-LFS) of various software components (DSP, RTOS, RTOS2).
These libraries are validated for release. Git-LFS needs to be installed to retrieve the actual binary files, please see &lt;a href="https://git-lfs.github.com/"&gt;https://git-lfs.github.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To build a complete CMSIS pack for installation the following additional tools are required:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;doxygen.exe&lt;/strong&gt;    Version: 1.8.6 (Documentation Generator)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mscgen.exe&lt;/strong&gt;     Version: 0.20  (Message Sequence Chart Converter)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;7z.exe (7-Zip)&lt;/strong&gt; Version: 16.02 (File Archiver)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using these tools, you can generate on a Windows PC:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CMSIS Software Pack&lt;/strong&gt; using the batch file &lt;strong&gt;gen_pack.bat&lt;/strong&gt; (located in ./CMSIS/Utilities). This batch file also generates the documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CMSIS Documentation&lt;/strong&gt; using the batch file &lt;strong&gt;genDoc.bat&lt;/strong&gt; (located in ./CMSIS/Doxygen).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The file ./CMSIS/DoxyGen/How2Doc.txt describes the rules for creating API documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Arm CMSIS is licensed under Apache-2.0.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions-and-pull-requests" class="anchor" aria-hidden="true" href="#contributions-and-pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions and Pull Requests&lt;/h2&gt;
&lt;p&gt;Contributions are accepted under Apache-2.0. Only submit contributions where you have authored all of the code.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issues-and-labels" class="anchor" aria-hidden="true" href="#issues-and-labels"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues and Labels&lt;/h3&gt;
&lt;p&gt;Please feel free to raise an &lt;a href="https://github.com/ARM-software/CMSIS_5/issues"&gt;issue on GitHub&lt;/a&gt;
to report misbehavior (i.e. bugs) or start discussions about enhancements. This
is your best way to interact directly with the maintenance team and the community.
We encourage you to append implementation suggestions as this helps to decrease the
workload of the very limited maintenance team.&lt;/p&gt;
&lt;p&gt;We will be monitoring and responding to issues as best we can.
Please attempt to avoid filing duplicates of open or closed items when possible.
In the spirit of openness we will be tagging issues with the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;bug&lt;/strong&gt; – We consider this issue to be a bug that will be investigated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;wontfix&lt;/strong&gt; - We appreciate this issue but decided not to change the current behavior.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;enhancement&lt;/strong&gt; – Denotes something that will be implemented soon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;future&lt;/strong&gt; - Denotes something not yet schedule for implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;out-of-scope&lt;/strong&gt; - We consider this issue loosely related to CMSIS. It might by implemented outside of CMSIS. Let us know about your work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;question&lt;/strong&gt; – We have further questions to this issue. Please review and provide feedback.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;documentation&lt;/strong&gt; - This issue is a documentation flaw that will be improved in future.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;review&lt;/strong&gt; - This issue is under review. Please be patient.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DONE&lt;/strong&gt; - We consider this issue as resolved - please review and close it. In case of no further activity this issues will be closed after a week.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;duplicate&lt;/strong&gt; - This issue is already addressed elsewhere, see comment with provided references.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Important Information&lt;/strong&gt; - We provide essential informations regarding planned or resolved major enhancements.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ARM-software</author><guid isPermaLink="false">https://github.com/ARM-software/CMSIS_5</guid><pubDate>Fri, 06 Dec 2019 00:21:00 GMT</pubDate></item><item><title>torvalds/linux #22 in C, Today</title><link>https://github.com/torvalds/linux</link><description>&lt;p&gt;&lt;i&gt;Linux kernel source tree&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Linux kernel
============

There are several guides for kernel developers and users. These guides can
be rendered in a number of formats, like HTML and PDF. Please read
Documentation/admin-guide/README.rst first.

In order to build the documentation, use ``make htmldocs`` or
``make pdfdocs``.  The formatted documentation can also be read online at:

    &lt;a href="https://www.kernel.org/doc/html/latest/" rel="nofollow"&gt;https://www.kernel.org/doc/html/latest/&lt;/a&gt;

There are various text files in the Documentation/ subdirectory,
several of them using the Restructured Text markup notation.

Please read the Documentation/process/changes.rst file, as it contains the
requirements for building and running the kernel, and information about
the problems which may result by upgrading your kernel.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>torvalds</author><guid isPermaLink="false">https://github.com/torvalds/linux</guid><pubDate>Fri, 06 Dec 2019 00:22:00 GMT</pubDate></item><item><title>postgres/postgres #23 in C, Today</title><link>https://github.com/postgres/postgres</link><description>&lt;p&gt;&lt;i&gt;Mirror of the official PostgreSQL GIT repository. Note that this is just a *mirror* - we don't work with pull requests on github. To contribute, please see https://wiki.postgresql.org/wiki/Submitting_a_Patch&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;PostgreSQL Database Management System
=====================================

This directory contains the source code distribution of the PostgreSQL
database management system.

PostgreSQL is an advanced object-relational database management system
that supports an extended subset of the SQL standard, including
transactions, foreign keys, subqueries, triggers, user-defined types
and functions.  This distribution also contains C language bindings.

PostgreSQL has many language interfaces, many of which are listed here:

	&lt;a href="https://www.postgresql.org/download" rel="nofollow"&gt;https://www.postgresql.org/download&lt;/a&gt;

See the file INSTALL for instructions on how to build and install
PostgreSQL.  That file also lists supported operating systems and
hardware platforms and contains information regarding any other
software packages that are required to build or run the PostgreSQL
system.  Copyright and license information can be found in the
file COPYRIGHT.  A comprehensive documentation set is included in this
distribution; it can be read as described in the installation
instructions.

The latest version of this software may be obtained at
&lt;a href="https://www.postgresql.org/download/" rel="nofollow"&gt;https://www.postgresql.org/download/&lt;/a&gt;.  For more information look at our
web site located at &lt;a href="https://www.postgresql.org/" rel="nofollow"&gt;https://www.postgresql.org/&lt;/a&gt;.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>postgres</author><guid isPermaLink="false">https://github.com/postgres/postgres</guid><pubDate>Fri, 06 Dec 2019 00:23:00 GMT</pubDate></item><item><title>open-mpi/ompi #24 in C, Today</title><link>https://github.com/open-mpi/ompi</link><description>&lt;p&gt;&lt;i&gt;Open MPI main development repository&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Copyright (c) 2004-2007 The Trustees of Indiana University and Indiana
                        University Research and Technology
                        Corporation.  All rights reserved.
Copyright (c) 2004-2007 The University of Tennessee and The University
                        of Tennessee Research Foundation.  All rights
                        reserved.
Copyright (c) 2004-2008 High Performance Computing Center Stuttgart,
                        University of Stuttgart.  All rights reserved.
Copyright (c) 2004-2007 The Regents of the University of California.
                        All rights reserved.
Copyright (c) 2006-2018 Cisco Systems, Inc.  All rights reserved.
Copyright (c) 2006-2011 Mellanox Technologies. All rights reserved.
Copyright (c) 2006-2012 Oracle and/or its affiliates.  All rights reserved.
Copyright (c) 2007      Myricom, Inc.  All rights reserved.
Copyright (c) 2008-2018 IBM Corporation.  All rights reserved.
Copyright (c) 2010      Oak Ridge National Labs.  All rights reserved.
Copyright (c) 2011      University of Houston. All rights reserved.
Copyright (c) 2013-2017 Intel, Inc. All rights reserved.
Copyright (c) 2015      NVIDIA Corporation.  All rights reserved.
Copyright (c) 2017-2018 Los Alamos National Security, LLC.  All rights
                        reserved.
Copyright (c) 2017      Research Organization for Information Science
                        and Technology (RIST). All rights reserved.

$COPYRIGHT$

Additional copyrights may follow

$HEADER$

===========================================================================

When submitting questions and problems, be sure to include as much
extra information as possible.  This web page details all the
information that we request in order to provide assistance:

     &lt;a href="http://www.open-mpi.org/community/help/" rel="nofollow"&gt;http://www.open-mpi.org/community/help/&lt;/a&gt;

The best way to report bugs, send comments, or ask questions is to
sign up on the user's and/or developer's mailing list (for user-level
and developer-level questions; when in doubt, send to the user's
list):

        users@lists.open-mpi.org
        devel@lists.open-mpi.org

Because of spam, only subscribers are allowed to post to these lists
(ensure that you subscribe with and post from exactly the same e-mail
address -- joe@example.com is considered different than
joe@mycomputer.example.com!).  Visit these pages to subscribe to the
lists:

     &lt;a href="http://lists.open-mpi.org/mailman/listinfo/users" rel="nofollow"&gt;http://lists.open-mpi.org/mailman/listinfo/users&lt;/a&gt;
     &lt;a href="http://lists.open-mpi.org/mailman/listinfo/devel" rel="nofollow"&gt;http://lists.open-mpi.org/mailman/listinfo/devel&lt;/a&gt;

Thanks for your time.

===========================================================================

Much, much more information is also available in the Open MPI FAQ:

    &lt;a href="https://www.open-mpi.org/faq/" rel="nofollow"&gt;https://www.open-mpi.org/faq/&lt;/a&gt;

===========================================================================

Quick start
-----------

In many cases, Open MPI can be built and installed by simply
indicating the installation directory on the command line:

$ tar xf openmpi-&amp;lt;version&amp;gt;.tar.bz2
$ cd openmpi-&amp;lt;version&amp;gt;
$ ./configure --prefix=&amp;lt;path&amp;gt; |&amp;amp; tee config.out
...lots of output...
$ make -j 8 |&amp;amp; tee make.out
...lots of output...
$ make install |&amp;amp; tee install.out
...lots of output...

Note that there are many, many configuration options to the
"./configure" step.  Some of them may be needed for your particular
environmnet; see below for desciptions of the options available.

If your installation prefix path is not writable by a regular user,
you may need to use sudo or su to run the "make install" step.  For
example:

$ sudo make install |&amp;amp; tee install.out
[sudo] password for jsquyres: &amp;lt;enter your password here&amp;gt;
...lots of output...

Finally, note that VPATH builds are fully supported.  For example:

$ tar xf openmpi-&amp;lt;version&amp;gt;.tar.bz2
$ cd openmpi-&amp;lt;version&amp;gt;
$ mkdir build
$ cd build
$ ../configure --prefix=&amp;lt;path&amp;gt; |&amp;amp; tee config.out
...etc.

The rest of this README file contains:

- General release notes about Open MPI, including information about
  platform, compiler, and run-time support, MPI and OpenSHMEM
  functionality, network support, and MPI extensions.
- Detailed information on building and installing Open MPI.
- Open MPI version and library numbering policies, including how those
  are related to backwards compatibility guarantees.
- Information on how to both query and validate your Open MPI
  installation.
- Description of Open MPI extensions.
- Examples showing how to compile and run Open MPI applications.
- Summary information on the various plugin frameworks inside Open
  MPI and OpenSHMEM.

===========================================================================

The following abbreviated list of release notes applies to this code
base as of this writing (March 2017):

General notes
-------------

- Open MPI now includes two public software layers: MPI and OpenSHMEM.
  Throughout this document, references to Open MPI implicitly include
  both of these layers. When distinction between these two layers is
  necessary, we will reference them as the "MPI" and "OpenSHMEM"
  layers respectively.

- OpenSHMEM is a collaborative effort between academia, industry, and
  the U.S. Government to create a specification for a standardized API
  for parallel programming in the Partitioned Global Address Space
  (PGAS).  For more information about the OpenSHMEM project, including
  access to the current OpenSHMEM specification, please visit:

     &lt;a href="http://openshmem.org/" rel="nofollow"&gt;http://openshmem.org/&lt;/a&gt;

  This OpenSHMEM implementation will only work in Linux environments
  with a restricted set of supported networks.

- Open MPI includes support for a wide variety of supplemental
  hardware and software package.  When configuring Open MPI, you may
  need to supply additional flags to the "configure" script in order
  to tell Open MPI where the header files, libraries, and any other
  required files are located.  As such, running "configure" by itself
  may not include support for all the devices (etc.) that you expect,
  especially if their support headers / libraries are installed in
  non-standard locations.  Network interconnects are an easy example
  to discuss -- Libfabric and OpenFabrics networks, for example, both
  have supplemental headers and libraries that must be found before
  Open MPI can build support for them.  You must specify where these
  files are with the appropriate options to configure.  See the
  listing of configure command-line switches, below, for more details.

- The majority of Open MPI's documentation is here in this file, the
  included man pages, and on the web site FAQ
  (&lt;a href="https://www.open-mpi.org/" rel="nofollow"&gt;https://www.open-mpi.org/&lt;/a&gt;).

- Note that Open MPI documentation uses the word "component"
  frequently; the word "plugin" is probably more familiar to most
  users.  As such, end users can probably completely substitute the
  word "plugin" wherever you see "component" in our documentation.
  For what it's worth, we use the word "component" for historical
  reasons, mainly because it is part of our acronyms and internal API
  function calls.

- The run-time systems that are currently supported are:
  - rsh / ssh
  - PBS Pro, Torque
  - Platform LSF (tested with v9.1.1 and later)
  - SLURM
  - Cray XE, XC, and XK
  - Oracle Grid Engine (OGE) 6.1, 6.2 and open source Grid Engine

- Systems that have been tested are:
  - Linux (various flavors/distros), 64 bit (x86), with gcc, Absoft,
    Intel, and Portland (*)
  - macOS (10.12), 64 bit (x85_64) with XCode compilers

  (*) Be sure to read the Compiler Notes, below.

- Other systems have been lightly (but not fully tested):
  - Linux (various flavors/distros), 32 bit, with gcc
  - Cygwin 32 &amp;amp; 64 bit with gcc
  - ARMv6, ARMv7, ARMv8 (aarch64)
  - Other 64 bit platforms (e.g., Linux on PPC64)
  - Oracle Solaris 10 and 11, 32 and 64 bit (SPARC, i386, x86_64),
    with Oracle Solaris Studio 12.5
  - OpenBSD.  Requires configure options --enable-mca-no-build=patcher
    and --disable-dlopen with this release.
  - Problems have been reported when building Open MPI on FreeBSD 11.1
    using the clang-4.0 system compiler. A workaround is to build
    Open MPI using the GNU compiler.

- Open MPI has taken some steps towards Reproducible Builds
  (&lt;a href="https://reproducible-builds.org/" rel="nofollow"&gt;https://reproducible-builds.org/&lt;/a&gt;).  Specifically, Open MPI's
  "configure" and "make" process, by default, records some
  system-specific information such as the hostname where Open MPI was
  built and the username who built it.  If you desire a Reproducible
  Build, set the $USER and $HOSTNAME environment variables before
  invoking "configure" and "make", and Open MPI will use those values
  instead of invoking "whoami" and/or "hostname", respectively.

Platform Notes
--------------

- N/A

Compiler Notes
--------------

- Open MPI requires a C99-capable compiler to build.

- Mixing compilers from different vendors when building Open MPI
  (e.g., using the C/C++ compiler from one vendor and the Fortran
  compiler from a different vendor) has been successfully employed by
  some Open MPI users (discussed on the Open MPI user's mailing list),
  but such configurations are not tested and not documented.  For
  example, such configurations may require additional compiler /
  linker flags to make Open MPI build properly.

- In general, the latest versions of compilers of a given vendor's
  series have the least bugs.  We have seen cases where Vendor XYZ's
  compiler version A.B fails to compile Open MPI, but version A.C
  (where C&amp;gt;B) works just fine.  If you run into a compile failure, you
  might want to double check that you have the latest bug fixes and
  patches for your compiler.

- Users have reported issues with older versions of the Fortran PGI
  compiler suite when using Open MPI's (non-default) --enable-debug
  configure option.  Per the above advice of using the most recent
  version of a compiler series, the Open MPI team recommends using the
  latest version of the PGI suite, and/or not using the --enable-debug
  configure option.  If it helps, here's what we have found with some
  (not comprehensive) testing of various versions of the PGI compiler
  suite:

    pgi-8 : NO known good version with --enable-debug
    pgi-9 : 9.0-4 known GOOD
    pgi-10: 10.0-0 known GOOD
    pgi-11: NO known good version with --enable-debug
    pgi-12: 12.10 known BAD with -m32, but known GOOD without -m32
            (and 12.8 and 12.9 both known BAD with --enable-debug)
    pgi-13: 13.9 known BAD with -m32, 13.10 known GOOD without -m32
    pgi-15: 15.10 known BAD with -m32

- Similarly, there is a known Fortran PGI compiler issue with long
  source directory path names that was resolved in 9.0-4 (9.0-3 is
  known to be broken in this regard).

- Open MPI does not support the PGI compiler suite on OS X or MacOS.
  See issues below for more details:
  &lt;a href="https://github.com/open-mpi/ompi/issues/2604"&gt;https://github.com/open-mpi/ompi/issues/2604&lt;/a&gt;
  &lt;a href="https://github.com/open-mpi/ompi/issues/2605"&gt;https://github.com/open-mpi/ompi/issues/2605&lt;/a&gt;

- OpenSHMEM Fortran bindings do not support the `no underscore` Fortran
  symbol convention. IBM's xlf compilers build in that mode by default.
  As such, IBM's xlf compilers cannot build/link the OpenSHMEM Fortran
  bindings by default. A workaround is to pass FC="xlf -qextname" at
  configure time to force a trailing underscore. See the issue below
  for more details:
  &lt;a href="https://github.com/open-mpi/ompi/issues/3612"&gt;https://github.com/open-mpi/ompi/issues/3612&lt;/a&gt;

- MPI applications that use the mpi_f08 module on PowerPC platforms
  (tested ppc64le) will likely experience runtime failures if:
   - they are using a GNU linker (ld) version after v2.25.1 and before v2.28,
     -and-
   - they compiled with PGI (tested 17.5) or XL (tested v15.1.5) compilers.
  This was noticed on Ubuntu 16.04 which uses the 2.26.1 version of ld by
  default. However, this issue impacts any OS using a version of ld noted
  above. This GNU linker regression will be fixed in version 2.28.
  Below is a link to the GNU bug on this issue:
    &lt;a href="https://sourceware.org/bugzilla/show_bug.cgi?id=21306" rel="nofollow"&gt;https://sourceware.org/bugzilla/show_bug.cgi?id=21306&lt;/a&gt;
  The XL compiler will include a fix for this issue in a future release.

- On NetBSD-6 (at least AMD64 and i386), and possibly on OpenBSD,
  libtool misidentifies properties of f95/g95, leading to obscure
  compile-time failures if used to build Open MPI.  You can work
  around this issue by ensuring that libtool will not use f95/g95
  (e.g., by specifying FC=&amp;lt;some_other_compiler&amp;gt;, or otherwise ensuring
  a different Fortran compiler will be found earlier in the path than
  f95/g95), or by disabling the Fortran MPI bindings with
  --disable-mpi-fortran.

- On OpenBSD/i386, if you configure with
  --enable-mca-no-build=patcher, you will also need to add
  --disable-dlopen.  Otherwise, odd crashes can occur
  nondeterministically.

- Absoft 11.5.2 plus a service pack from September 2012 (which Absoft
  says is available upon request), or a version later than 11.5.2
  (e.g., 11.5.3), is required to compile the Fortran mpi_f08
  module.

- Open MPI does not support the Sparc v8 CPU target.  However,
  as of Solaris Studio 12.1, and later compilers, one should not
  specify -xarch=v8plus or -xarch=v9.  The use of the options
  -m32 and -m64 for producing 32 and 64 bit targets, respectively,
  are now preferred by the Solaris Studio compilers.  GCC may
  require either "-m32" or "-mcpu=v9 -m32", depending on GCC version.

- It has been noticed that if one uses CXX=sunCC, in which sunCC
  is a link in the Solaris Studio compiler release, that the OMPI
  build system has issue with sunCC and does not build libmpi_cxx.so.
  Therefore  the make install fails.  So we suggest that one should
  use CXX=CC, which works, instead of CXX=sunCC.

- If one tries to build OMPI on Ubuntu with Solaris Studio using the C++
  compiler and the -m32 option, you might see a warning:

    CC: Warning: failed to detect system linker version, falling back to
    custom linker usage

  And the build will fail.  One can overcome this error by either
  setting LD_LIBRARY_PATH to the location of the 32 bit libraries (most
  likely /lib32), or giving LDFLAGS="-L/lib32 -R/lib32" to the configure
  command.  Officially, Solaris Studio is not supported on Ubuntu Linux
  distributions, so additional problems might be incurred.

- Open MPI does not support the gccfss compiler (GCC For SPARC
  Systems; a now-defunct compiler project from Sun).

- At least some versions of the Intel 8.1 compiler seg fault while
  compiling certain Open MPI source code files.  As such, it is not
  supported.

- The Intel 9.0 v20051201 compiler on IA64 platforms seems to have a
  problem with optimizing the ptmalloc2 memory manager component (the
  generated code will segv).  As such, the ptmalloc2 component will
  automatically disable itself if it detects that it is on this
  platform/compiler combination.  The only effect that this should
  have is that the MCA parameter mpi_leave_pinned will be inoperative.

- It has been reported that the Intel 9.1 and 10.0 compilers fail to
  compile Open MPI on IA64 platforms.  As of 12 Sep 2012, there is
  very little (if any) testing performed on IA64 platforms (with any
  compiler).  Support is "best effort" for these platforms, but it is
  doubtful that any effort will be expended to fix the Intel 9.1 /
  10.0 compiler issuers on this platform.

- Early versions of the Intel 12.1 Linux compiler suite on x86_64 seem
  to have a bug that prevents Open MPI from working.  Symptoms
  including immediate segv of the wrapper compilers (e.g., mpicc) and
  MPI applications.  As of 1 Feb 2012, if you upgrade to the latest
  version of the Intel 12.1 Linux compiler suite, the problem will go
  away.

- Early versions of the Portland Group 6.0 compiler have problems
  creating the C++ MPI bindings as a shared library (e.g., v6.0-1).
  Tests with later versions show that this has been fixed (e.g.,
  v6.0-5).

- The Portland Group compilers prior to version 7.0 require the
  "-Msignextend" compiler flag to extend the sign bit when converting
  from a shorter to longer integer.  This is is different than other
  compilers (such as GNU).  When compiling Open MPI with the Portland
  compiler suite, the following flags should be passed to Open MPI's
  configure script:

  shell$ ./configure CFLAGS=-Msignextend CXXFLAGS=-Msignextend \
         --with-wrapper-cflags=-Msignextend \
         --with-wrapper-cxxflags=-Msignextend ...

  This will both compile Open MPI with the proper compile flags and
  also automatically add "-Msignextend" when the C and C++ MPI wrapper
  compilers are used to compile user MPI applications.

- It has been reported that Pathscale 5.0.5 and 6.0.527 compilers
  give an internal compiler error when trying to Open MPI.

- Using the MPI C++ bindings with older versions of the Pathscale
  compiler on some platforms is an old issue that seems to be a
  problem when Pathscale uses a back-end GCC 3.x compiler. Here's a
  proposed solution from the Pathscale support team (from July 2010):

      The proposed work-around is to install gcc-4.x on the system and
      use the pathCC -gnu4 option. Newer versions of the compiler (4.x
      and beyond) should have this fixed, but we'll have to test to
      confirm it's actually fixed and working correctly.

  We don't anticipate that this will be much of a problem for Open MPI
  users these days (our informal testing shows that not many users are
  still using GCC 3.x).  Contact Pathscale support if you continue to
  have problems with Open MPI's C++ bindings.

  Note the MPI C++ bindings have been deprecated by the MPI Forum and
  may not be supported in future releases.

- As of July 2017, the Pathscale compiler suite apparently has no
  further commercial support, and it does not look like there will be
  further releases.  Any issues discovered regarding building /
  running Open MPI with the Pathscale compiler suite therefore may not
  be able to be resolved.

- Using the Absoft compiler to build the MPI Fortran bindings on Suse
  9.3 is known to fail due to a Libtool compatibility issue.

- MPI Fortran API support has been completely overhauled since the
  Open MPI v1.5/v1.6 series.

  ********************************************************************
  ********************************************************************
  *** There is now only a single Fortran MPI wrapper compiler and a
  *** single Fortran OpenSHMEM wrapper compiler: mpifort and oshfort,
  *** respectively.  mpif77 and mpif90 still exist, but they are
  *** symbolic links to mpifort.
  ********************************************************************
  *** Similarly, Open MPI's configure script only recognizes the FC
  *** and FCFLAGS environment variables (to specify the Fortran
  *** compiler and compiler flags, respectively).  The F77 and FFLAGS
  *** environment variables are IGNORED.
  ********************************************************************
  ********************************************************************

  As a direct result, it is STRONGLY recommended that you specify a
  Fortran compiler that uses file suffixes to determine Fortran code
  layout (e.g., free form vs. fixed).  For example, with some versions
  of the IBM XLF compiler, it is preferable to use FC=xlf instead of
  FC=xlf90, because xlf will automatically determine the difference
  between free form and fixed Fortran source code.

  However, many Fortran compilers allow specifying additional
  command-line arguments to indicate which Fortran dialect to use.
  For example, if FC=xlf90, you may need to use "mpifort --qfixed ..."
  to compile fixed format Fortran source files.

  You can use either ompi_info or oshmem_info to see with which Fortran
  compiler Open MPI was configured and compiled.

  There are up to three sets of Fortran MPI bindings that may be
  provided depending on your Fortran compiler):

  - mpif.h: This is the first MPI Fortran interface that was defined
    in MPI-1.  It is a file that is included in Fortran source code.
    Open MPI's mpif.h does not declare any MPI subroutines; they are
    all implicit.

  - mpi module: The mpi module file was added in MPI-2.  It provides
    strong compile-time parameter type checking for MPI subroutines.

  - mpi_f08 module: The mpi_f08 module was added in MPI-3.  It
    provides many advantages over the mpif.h file and mpi module.  For
    example, MPI handles have distinct types (vs. all being integers).
    See the MPI-3 document for more details.

    *** The mpi_f08 module is STRONGLY is recommended for all new MPI
        Fortran subroutines and applications.  Note that the mpi_f08
        module can be used in conjunction with the other two Fortran
        MPI bindings in the same application (only one binding can be
        used per subroutine/function, however).  Full interoperability
        between mpif.h/mpi module and mpi_f08 module MPI handle types
        is provided, allowing mpi_f08 to be used in new subroutines in
        legacy MPI applications.

  Per the OpenSHMEM specification, there is only one Fortran OpenSHMEM
  binding provided:

  - shmem.fh: All Fortran OpenSHMEM programs **should** include
    'shmem.fh', and Fortran OpenSHMEM programs that use constants
    defined by OpenSHMEM **MUST** include 'shmem.fh'.

  The following notes apply to the above-listed Fortran bindings:

  - All Fortran compilers support the mpif.h/shmem.fh-based bindings,
    with one exception: the MPI_SIZEOF interfaces will only be present
    when Open MPI is built with a Fortran compiler that support the
    INTERFACE keyword and ISO_FORTRAN_ENV.  Most notably, this
    excludes the GNU Fortran compiler suite before version 4.9.

  - The level of support provided by the mpi module is based on your
    Fortran compiler.

    If Open MPI is built with a non-GNU Fortran compiler, or if Open
    MPI is built with the GNU Fortran compiler &amp;gt;= v4.9, all MPI
    subroutines will be prototyped in the mpi module.  All calls to
    MPI subroutines will therefore have their parameter types checked
    at compile time.

    If Open MPI is built with an old gfortran (i.e., &amp;lt; v4.9), a
    limited "mpi" module will be built.  Due to the limitations of
    these compilers, and per guidance from the MPI-3 specification,
    all MPI subroutines with "choice" buffers are specifically *not*
    included in the "mpi" module, and their parameters will not be
    checked at compile time.  Specifically, all MPI subroutines with
    no "choice" buffers are prototyped and will receive strong
    parameter type checking at run-time (e.g., MPI_INIT,
    MPI_COMM_RANK, etc.).

    Similar to the mpif.h interface, MPI_SIZEOF is only supported on
    Fortran compilers that support INTERFACE and ISO_FORTRAN_ENV.

  - The mpi_f08 module has been tested with the Intel Fortran compiler
    and gfortran &amp;gt;= 4.9.  Other modern Fortran compilers likely also
    work.

    Many older Fortran compilers do not provide enough modern Fortran
    features to support the mpi_f08 module.  For example, gfortran &amp;lt;
    v4.9 does provide enough support for the mpi_f08 module.

  You can examine the output of the following command to see all
  the Fortran features that are/are not enabled in your Open MPI
  installation:

  shell$ ompi_info | grep -i fort


General Run-Time Support Notes
------------------------------

- The Open MPI installation must be in your PATH on all nodes (and
  potentially LD_LIBRARY_PATH (or DYLD_LIBRARY_PATH), if libmpi/libshmem
  is a shared library), unless using the --prefix or
  --enable-mpirun-prefix-by-default functionality (see below).

- Open MPI's run-time behavior can be customized via MPI Component
  Architecture (MCA) parameters (see below for more information on how
  to get/set MCA parameter values).  Some MCA parameters can be set in
  a way that renders Open MPI inoperable (see notes about MCA
  parameters later in this file).  In particular, some parameters have
  required options that must be included.

  - If specified, the "btl" parameter must include the "self"
    component, or Open MPI will not be able to deliver messages to the
    same rank as the sender.  For example: "mpirun --mca btl tcp,self
    ..."
  - If specified, the "btl_tcp_if_exclude" parameter must include the
    loopback device ("lo" on many Linux platforms), or Open MPI will
    not be able to route MPI messages using the TCP BTL.  For example:
    "mpirun --mca btl_tcp_if_exclude lo,eth1 ..."

- Running on nodes with different endian and/or different datatype
  sizes within a single parallel job is supported in this release.
  However, Open MPI does not resize data when datatypes differ in size
  (for example, sending a 4 byte MPI_DOUBLE and receiving an 8 byte
  MPI_DOUBLE will fail).


MPI Functionality and Features
------------------------------

- All MPI-3 functionality is supported.

- Note that starting with Open MPI v4.0.0, prototypes for several
  legacy MPI-1 symbols that were deleted in the MPI-3.0 specification
  (which was published in 2012) are no longer available by default in
  mpi.h.  Specifically, several MPI-1 symbols were deprecated in the
  1996 publishing of the MPI-2.0 specification.  These deprecated
  symbols were eventually removed from the MPI-3.0 specification in
  2012.

  The symbols that now no longer appear by default in Open MPI's mpi.h
  are:

  - MPI_Address (replaced by MPI_Get_address)
  - MPI_Errhandler_create (replaced by MPI_Comm_create_errhandler)
  - MPI_Errhandler_get (replaced by MPI_Comm_get_errhandler)
  - MPI_Errhandler_set (replaced by MPI_Comm_set_errhandler)
  - MPI_Type_extent (replaced by MPI_Type_get_extent)
  - MPI_Type_hindexed (replaced by MPI_Type_create_hindexed)
  - MPI_Type_hvector (replaced by MPI_Type_create_hvector)
  - MPI_Type_lb (replaced by MPI_Type_get_extent)
  - MPI_Type_struct (replaced by MPI_Type_create_struct)
  - MPI_Type_ub (replaced by MPI_Type_get_extent)
  - MPI_LB (replaced by MPI_Type_create_resized)
  - MPI_UB (replaced by MPI_Type_create_resized)
  - MPI_COMBINER_HINDEXED_INTEGER
  - MPI_COMBINER_HVECTOR_INTEGER
  - MPI_COMBINER_STRUCT_INTEGER
  - MPI_Handler_function (replaced by MPI_Comm_errhandler_function)

  Although these symbols are no longer prototyped in mpi.h, they
  are still present in the MPI library in Open MPI v4.0.x. This
  enables legacy MPI applications to link and run successfully with
  Open MPI v4.0.x, even though they will fail to compile.

  *** Future releases of Open MPI beyond the v4.0.x series may
      remove these symbols altogether.

  *** The Open MPI team STRONGLY encourages all MPI application
      developers to stop using these constructs that were first
      deprecated over 20 years ago, and finally removed from the MPI
      specification in MPI-3.0 (in 2012).

  *** The Open MPI FAQ (&lt;a href="https://www.open-mpi.org/faq/" rel="nofollow"&gt;https://www.open-mpi.org/faq/&lt;/a&gt;) contains
      examples of how to update legacy MPI applications using these
      deleted symbols to use the "new" symbols.

  All that being said, if you are unable to immediately update your
  application to stop using these legacy MPI-1 symbols, you can
  re-enable them in mpi.h by configuring Open MPI with the
  --enable-mpi1-compatibility flag.

- Rank reordering support is available using the TreeMatch library. It
  is activated for the graph and dist_graph communicator topologies.

- When using MPI deprecated functions, some compilers will emit
  warnings.  For example:

  shell$ cat deprecated_example.c
  #include &amp;lt;mpi.h&amp;gt;
  void foo(void) {
      MPI_Datatype type;
      MPI_Type_struct(1, NULL, NULL, NULL, &amp;amp;type);
  }
  shell$ mpicc -c deprecated_example.c
  deprecated_example.c: In function 'foo':
  deprecated_example.c:4: warning: 'MPI_Type_struct' is deprecated (declared at /opt/openmpi/include/mpi.h:1522)
  shell$

- MPI_THREAD_MULTIPLE is supported with some exceptions.

  The following PMLs support MPI_THREAD_MULTIPLE:
  - cm (see list (1) of supported MTLs, below)
  - ob1 (see list (2) of supported BTLs, below)
  - ucx

  (1) The cm PML and the following MTLs support MPI_THREAD_MULTIPLE:
      - ofi (Libfabric)
      - portals4

  (2) The ob1 PML and the following BTLs support MPI_THREAD_MULTIPLE:
      - self
      - sm
      - smcuda
      - tcp
      - ugni
      - usnic
      - vader (shared memory)

  Currently, MPI File operations are not thread safe even if MPI is
  initialized for MPI_THREAD_MULTIPLE support.

- MPI_REAL16 and MPI_COMPLEX32 are only supported on platforms where a
  portable C datatype can be found that matches the Fortran type
  REAL*16, both in size and bit representation.

- The "libompitrace" library is bundled in Open MPI and is installed
  by default (it can be disabled via the --disable-libompitrace
  flag).  This library provides a simplistic tracing of select MPI
  function calls via the MPI profiling interface.  Linking it in to
  your application via (e.g., via -lompitrace) will automatically
  output to stderr when some MPI functions are invoked:

  shell$ cd examples/
  shell$ mpicc hello_c.c -o hello_c -lompitrace
  shell$ mpirun -np 1 hello_c
  MPI_INIT: argc 1
  Hello, world, I am 0 of 1
  MPI_BARRIER[0]: comm MPI_COMM_WORLD
  MPI_FINALIZE[0]
  shell$

  Keep in mind that the output from the trace library is going to
  stderr, so it may output in a slightly different order than the
  stdout from your application.

  This library is being offered as a "proof of concept" / convenience
  from Open MPI.  If there is interest, it is trivially easy to extend
  it to printf for other MPI functions.  Pull requests on github.com
  would be greatly appreciated.

OpenSHMEM Functionality and Features
------------------------------------

- All OpenSHMEM-1.3 functionality is supported.


MPI Collectives
---------------

- The "cuda" coll component provides CUDA-aware support for the
  reduction type collectives with GPU buffers. This component is only
  compiled into the library when the library has been configured with
  CUDA-aware support.  It intercepts calls to the reduction
  collectives, copies the data to staging buffers if GPU buffers, then
  calls underlying collectives to do the work.

OpenSHMEM Collectives
---------------------

- The "fca" scoll component: the Mellanox Fabric Collective
  Accelerator (FCA) is a solution for offloading collective operations
  from the MPI process onto Mellanox QDR InfiniBand switch CPUs and
  HCAs.

- The "basic" scoll component: Reference implementation of all
  OpenSHMEM collective operations.


Network Support
---------------

- There are several main MPI network models available: "ob1", "cm",
  and "ucx".  "ob1" uses BTL ("Byte Transfer Layer")
  components for each supported network.  "cm" uses MTL ("Matching
  Transport Layer") components for each supported network.  "ucx" uses
  the OpenUCX transport.

  - "ob1" supports a variety of networks that can be used in
    combination with each other:

    - OpenFabrics: InfiniBand, iWARP, and RoCE
    - Loopback (send-to-self)
    - Shared memory
    - TCP
    - SMCUDA
    - Cisco usNIC
    - uGNI (Cray Gemini, Aries)
    - vader (XPMEM, Linux CMA, Linux KNEM, and copy-in/copy-out shared
      memory)

  - "cm" supports a smaller number of networks (and they cannot be
    used together), but may provide better overall MPI performance:

    - Intel Omni-Path PSM2
    - Intel True Scale PSM (QLogic InfiniPath)
    - OpenFabrics Interfaces ("libfabric" tag matching)
    - Portals 4

  - UCX is the Unified Communication X (UCX) communication library
    (&lt;a href="http://www.openucx.org/" rel="nofollow"&gt;http://www.openucx.org/&lt;/a&gt;).  This is an open-source project
    developed in collaboration between industry, laboratories, and
    academia to create an open-source production grade communication
    framework for data centric and high-performance applications.  The
    UCX library can be downloaded from repositories (e.g.,
    Fedora/RedHat yum repositories).  The UCX library is also part of
    Mellanox OFED and Mellanox HPC-X binary distributions.

    UCX currently supports:

    - OpenFabrics Verbs (including InfiniBand and RoCE)
    - Cray's uGNI
    - TCP
    - Shared memory
    - NVIDIA CUDA drivers

  While users can manually select any of the above transports at run
  time, Open MPI will select a default transport as follows:

  1. If InfiniBand devices are available, use the UCX PML.

  2. If PSM, PSM2, or other tag-matching-supporting Libfabric
     transport devices are available (e.g., Cray uGNI), use the "cm"
     PML and a single appropriate corresponding "mtl" module.

  3. Otherwise, use the ob1 PML and one or more appropriate "btl"
     modules.

  Users can override Open MPI's default selection algorithms and force
  the use of a specific transport if desired by setting the "pml" MCA
  parameter (and potentially the "btl" and/or "mtl" MCA parameters) at
  run-time:

      shell$ mpirun --mca pml ob1 --mca btl [comma-delimted-BTLs] ...
      or
      shell$ mpirun --mca pml cm --mca mtl [MTL] ...
      or
      shell$ mpirun --mca pml ucx ...

- The main OpenSHMEM network model is "ucx"; it interfaces directly
  with UCX.

- In prior versions of Open MPI, InfiniBand and RoCE support was
  provided through the openib BTL and ob1 PML plugins.  Starting with
  Open MPI 4.0.0, InfiniBand support through the openib plugin is both
  deprecated and superseded by the ucx PML component.  The openib BTL
  was removed in Open MPI v5.0.0.

  While the openib BTL depended on libibverbs, the UCX PML depends on
  the UCX library.

  Once installed, Open MPI can be built with UCX support by adding
  --with-ucx to the Open MPI configure command. Once Open MPI is
  configured to use UCX, the runtime will automatically select the UCX
  PML if one of the supported networks is detected (e.g., InfiniBand).
  It's possible to force using UCX in the mpirun or oshrun command
  lines by specifying any or all of the following mca parameters:
  "--mca pml ucx" for MPI point-to-point operations, "--mca spml ucx"
  for OpenSHMEM support, and "--mca osc ucx" for MPI RMA (one-sided)
  operations.

- The usnic BTL is support for Cisco's usNIC device ("userspace NIC")
  on Cisco UCS servers with the Virtualized Interface Card (VIC).
  Although the usNIC is accessed via the OpenFabrics Libfabric API
  stack, this BTL is specific to Cisco usNIC devices.

- uGNI is a Cray library for communicating over the Gemini and Aries
  interconnects.

- The OpenFabrics Enterprise Distribution (OFED) software package v1.0
  will not work properly with Open MPI v1.2 (and later) due to how its
  Mellanox InfiniBand plugin driver is created.  The problem is fixed
  OFED v1.1 (and later).

- Better memory management support is available for OFED-based
  transports using the "ummunotify" Linux kernel module.  OFED memory
  managers are necessary for better bandwidth when re-using the same
  buffers for large messages (e.g., benchmarks and some applications).

  Unfortunately, the ummunotify module was not accepted by the Linux
  kernel community (and is still not distributed by OFED).  But it
  still remains the best memory management solution for MPI
  applications that used the OFED network transports.  If Open MPI is
  able to find the &amp;lt;linux/ummunotify.h&amp;gt; header file, it will build
  support for ummunotify and include it by default.  If MPI processes
  then find the ummunotify kernel module loaded and active, then their
  memory managers (which have been shown to be problematic in some
  cases) will be disabled and ummunotify will be used.  Otherwise, the
  same memory managers from prior versions of Open MPI will be used.
  The ummunotify Linux kernel module can be downloaded from:

    &lt;a href="http://lwn.net/Articles/343351/" rel="nofollow"&gt;http://lwn.net/Articles/343351/&lt;/a&gt;

- The use of fork() with OpenFabrics-based networks (i.e., the UCX
  PML) is only partially supported, and only on Linux kernels &amp;gt;=
  v2.6.15 with libibverbs v1.1 or later (first released as part of
  OFED v1.2), per restrictions imposed by the OFED network stack.

- Linux "knem" support is used when the "vader" or "sm" (shared
  memory) BTLs are compiled with knem support (see the --with-knem
  configure option) and the knem Linux module is loaded in the running
  kernel.  If the knem Linux kernel module is not loaded, the knem
  support is (by default) silently deactivated during Open MPI jobs.

  See &lt;a href="http://runtime.bordeaux.inria.fr/knem/" rel="nofollow"&gt;http://runtime.bordeaux.inria.fr/knem/&lt;/a&gt; for details on Knem.

- Linux Cross-Memory Attach (CMA) or XPMEM is used by the vader
  shared-memory BTL when the CMA/XPMEM libraries are installedm,
  respectively.  Linux CMA and XPMEM are similar (but different)
  mechanisms for Open MPI to utilize single-copy semantics for shared
  memory.

Open MPI Extensions
-------------------

- An MPI "extensions" framework is included in Open MPI, but is not
  enabled by default.  See the "Open MPI API Extensions" section below
  for more information on compiling and using MPI extensions.

- The following extensions are included in this version of Open MPI:

  - pcollreq: Provides routines for persistent collective communication
    operations and persistent neighborhood collective communication
    operations, which are planned to be included in the next MPI
    Standard after MPI-3.1 as of Nov. 2018.  The function names are
    prefixed with MPIX_ instead of MPI_, like MPIX_Barrier_init,
    because they are not standardized yet.  Future versions of Open MPI
    will switch to the MPI_ prefix once the MPI Standard which includes
    this feature is published.  See their man page for more details.
  - shortfloat: Provides MPI datatypes MPIX_C_FLOAT16, MPIX_SHORT_FLOAT,
    MPIX_SHORT_FLOAT, and MPIX_CXX_SHORT_FLOAT_COMPLEX if corresponding
    language types are available. See ompi/mpiext/shortfloat/README.txt
    for details.
  - affinity: Provides the OMPI_Affinity_str() a string indicating the
    resources which a process is bound. For more details, see its man
    page.
  - cuda: When the library is compiled with CUDA-aware support, it
    provides two things.  First, a macro
    MPIX_CUDA_AWARE_SUPPORT. Secondly, the function
    MPIX_Query_cuda_support that can be used to query for support.
  - example: A non-functional extension; its only purpose is to
    provide an example for how to create other extensions.

===========================================================================

Building Open MPI
-----------------

If you have checked out a DEVELOPER'S COPY of Open MPI (i.e., you
cloned from Git), you really need to read the HACKING file before
attempting to build Open MPI. Really.

If you have downloaded a tarball, then things are much simpler.
Open MPI uses a traditional configure script paired with "make" to
build.  Typical installs can be of the pattern:

shell$ ./configure [...options...]
shell$ make [-j N] all install
    (use an integer value of N for parallel builds)

There are many available configure options (see "./configure --help"
for a full list); a summary of the more commonly used ones is included
below.

NOTE: if you are building Open MPI on a network filesystem, the
      machine you on which you are building *must* be
      time-synchronized with the file server.  Specifically: Open
      MPI's build system *requires* accurate filesystem timestamps.
      If your "make" output includes warning about timestamps in the
      future or runs GNU Automake, Autoconf, and/or Libtool, this is
      *not normal*, and you may have an invalid build.  Ensure that
      the time on your build machine is synchronized with the time on
      your file server, or build on a local filesystem.  Then remove
      the Open MPI source directory and start over (e.g., by
      re-extracting the Open MPI tarball).

Note that for many of Open MPI's --with-&amp;lt;foo&amp;gt; options, Open MPI will,
by default, search for header files and/or libraries for &amp;lt;foo&amp;gt;.  If
the relevant files are found, Open MPI will built support for &amp;lt;foo&amp;gt;;
if they are not found, Open MPI will skip building support for &amp;lt;foo&amp;gt;.
However, if you specify --with-&amp;lt;foo&amp;gt; on the configure command line and
Open MPI is unable to find relevant support for &amp;lt;foo&amp;gt;, configure will
assume that it was unable to provide a feature that was specifically
requested and will abort so that a human can resolve out the issue.

Additionally, if a search directory is specified in the form
--with-&amp;lt;foo&amp;gt;=&amp;lt;dir&amp;gt;, Open MPI will:

1. Search for &amp;lt;foo&amp;gt;'s header files in &amp;lt;dir&amp;gt;/include.
2. Search for &amp;lt;foo&amp;gt;'s library files:
   2a. If --with-&amp;lt;foo&amp;gt;-libdir=&amp;lt;libdir&amp;gt; was specified, search in
       &amp;lt;libdir&amp;gt;.
   2b. Otherwise, search in &amp;lt;dir&amp;gt;/lib, and if they are not found
       there, search again in &amp;lt;dir&amp;gt;/lib64.
3. If both the relevant header files and libraries are found:
   3a. Open MPI will build support for &amp;lt;foo&amp;gt;.
   3b. If the root path where the &amp;lt;foo&amp;gt; libraries are found is neither
       "/usr" nor "/usr/local", Open MPI will compile itself with
       RPATH flags pointing to the directory where &amp;lt;foo&amp;gt;'s libraries
       are located.  Open MPI does not RPATH /usr/lib[64] and
       /usr/local/lib[64] because many systems already search these
       directories for run-time libraries by default; adding RPATH for
       them could have unintended consequences for the search path
       ordering.

INSTALLATION OPTIONS

--prefix=&amp;lt;directory&amp;gt;
  Install Open MPI into the base directory named &amp;lt;directory&amp;gt;.  Hence,
  Open MPI will place its executables in &amp;lt;directory&amp;gt;/bin, its header
  files in &amp;lt;directory&amp;gt;/include, its libraries in &amp;lt;directory&amp;gt;/lib, etc.

--disable-shared
  By default, Open MPI and OpenSHMEM build shared libraries, and all
  components are built as dynamic shared objects (DSOs). This switch
  disables this default; it is really only useful when used with
  --enable-static.  Specifically, this option does *not* imply
  --enable-static; enabling static libraries and disabling shared
  libraries are two independent options.

--enable-static
  Build MPI and OpenSHMEM as static libraries, and statically link in
  all components.  Note that this option does *not* imply
  --disable-shared; enabling static libraries and disabling shared
  libraries are two independent options.

  Be sure to read the description of --without-memory-manager, below;
  it may have some effect on --enable-static.

--disable-wrapper-rpath
  By default, the wrapper compilers (e.g., mpicc) will enable "rpath"
  support in generated executables on systems that support it.  That
  is, they will include a file reference to the location of Open MPI's
  libraries in the application executable itself.  This means that
  the user does not have to set LD_LIBRARY_PATH to find Open MPI's
  libraries (e.g., if they are installed in a location that the
  run-time linker does not search by default).

  On systems that utilize the GNU ld linker, recent enough versions
  will actually utilize "runpath" functionality, not "rpath".  There
  is an important difference between the two:

  "rpath": the location of the Open MPI libraries is hard-coded into
      the MPI/OpenSHMEM application and cannot be overridden at
      run-time.
  "runpath": the location of the Open MPI libraries is hard-coded into
      the MPI/OpenSHMEM application, but can be overridden at run-time
      by setting the LD_LIBRARY_PATH environment variable.

  For example, consider that you install Open MPI vA.B.0 and
  compile/link your MPI/OpenSHMEM application against it.  Later, you
  install Open MPI vA.B.1 to a different installation prefix (e.g.,
  /opt/openmpi/A.B.1 vs. /opt/openmpi/A.B.0), and you leave the old
  installation intact.

  In the rpath case, your MPI application will always use the
  libraries from your A.B.0 installation.  In the runpath case, you
  can set the LD_LIBRARY_PATH environment variable to point to the
  A.B.1 installation, and then your MPI application will use those
  libraries.

  Note that in both cases, however, if you remove the original A.B.0
  installation and set LD_LIBRARY_PATH to point to the A.B.1
  installation, your application will use the A.B.1 libraries.

  This rpath/runpath behavior can be disabled via
  --disable-wrapper-rpath.

  If you would like to keep the rpath option, but not enable runpath
  a different configure option is avalabile
  --disable-wrapper-runpath.

--enable-dlopen
  Build all of Open MPI's components as standalone Dynamic Shared
  Objects (DSO's) that are loaded at run-time (this is the default).
  The opposite of this option, --disable-dlopen, causes two things:

  1. All of Open MPI's components will be built as part of Open MPI's
     normal libraries (e.g., libmpi).
  2. Open MPI will not attempt to open any DSO's at run-time.

  Note that this option does *not* imply that OMPI's libraries will be
  built as static objects (e.g., libmpi.a).  It only specifies the
  location of OMPI's components: standalone DSOs or folded into the
  Open MPI libraries.  You can control whether Open MPI's libraries
  are build as static or dynamic via --enable|disable-static and
  --enable|disable-shared.

--disable-show-load-errors-by-default
  Set the default value of the mca_base_component_show_load_errors MCA
  variable: the --enable form of this option sets the MCA variable to
  true, the --disable form sets the MCA variable to false.  The MCA
  mca_base_component_show_load_errors variable can still be overridden
  at run time via the usual MCA-variable-setting mechanisms; this
  configure option simply sets the default value.

  The --disable form of this option is intended for Open MPI packagers
  who tend to enable support for many different types of networks and
  systems in their packages.  For example, consider a packager who
  includes support for both the FOO and BAR networks in their Open MPI
  package, both of which require support libraries (libFOO.so and
  libBAR.so).  If an end user only has BAR hardware, they likely only
  have libBAR.so available on their systems -- not libFOO.so.
  Disabling load errors by default will prevent the user from seeing
  potentially confusing warnings about the FOO components failing to
  load because libFOO.so is not available on their systems.

  Conversely, system administrators tend to build an Open MPI that is
  targeted at their specific environment, and contains few (if any)
  components that are not needed.  In such cases, they might want
  their users to be warned that the FOO network components failed to
  load (e.g., if libFOO.so was mistakenly unavailable), because Open
  MPI may otherwise silently failover to a slower network path for MPI
  traffic.

--with-platform=FILE
  Load configure options for the build from FILE.  Options on the
  command line that are not in FILE are also used.  Options on the
  command line and in FILE are replaced by what is in FILE.

--with-libmpi-name=STRING
  Replace libmpi.* and libmpi_FOO.* (where FOO is one of the fortran
  supporting libraries installed in lib) with libSTRING.* and
  libSTRING_FOO.*. This is provided as a convenience mechanism for
  third-party packagers of Open MPI that might want to rename these
  libraries for their own purposes. This option is *not* intended for
  typical users of Open MPI.

--enable-mca-no-build=LIST
  Comma-separated list of &amp;lt;type&amp;gt;-&amp;lt;component&amp;gt; pairs that will not be
  built. For example, "--enable-mca-no-build=btl-portals,oob-ud" will
  disable building the portals BTL and the ud OOB component.

NETWORKING SUPPORT / OPTIONS

--with-fca=&amp;lt;directory&amp;gt;
  Specify the directory where the Mellanox FCA library and
  header files are located.

  FCA is the support library for Mellanox switches and HCAs.

--with-hcoll=&amp;lt;directory&amp;gt;
  Specify the directory where the Mellanox hcoll library and header
  files are located.  This option is generally only necessary if the
  hcoll headers and libraries are not in default compiler/linker
  search paths.

  hcoll is the support library for MPI collective operation offload on
  Mellanox ConnectX-3 HCAs (and later).

--with-knem=&amp;lt;directory&amp;gt;
  Specify the directory where the knem libraries and header files are
  located.  This option is generally only necessary if the knem headers
  and libraries are not in default compiler/linker search paths.

  knem is a Linux kernel module that allows direct process-to-process
  memory copies (optionally using hardware offload), potentially
  increasing bandwidth for large messages sent between messages on the
  same server.  See &lt;a href="http://knem.gforge.inria.fr/" rel="nofollow"&gt;http://knem.gforge.inria.fr/&lt;/a&gt; for
  details.

--with-libfabric=&amp;lt;directory&amp;gt;
  Specify the directory where the OpenFabrics Interfaces libfabric
  library and header files are located.  This option is generally only
  necessary if the libfabric headers and libraries are not in default
  compiler/linker search paths.

  Libfabric is the support library for OpenFabrics Interfaces-based
  network adapters, such as Cisco usNIC, Intel True Scale PSM, Cray
  uGNI, etc.

--with-libfabric-libdir=&amp;lt;directory&amp;gt;
  Look in directory for the libfabric libraries.  By default, Open MPI
  will look in &amp;lt;libfabric directory&amp;gt;/lib and &amp;lt;libfabric
  directory&amp;gt;/lib64, which covers most cases.  This option is only
  needed for special configurations.

--with-portals4=&amp;lt;directory&amp;gt;
  Specify the directory where the Portals4 libraries and header files
  are located.  This option is generally only necessary if the Portals4
  headers and libraries are not in default compiler/linker search
  paths.

  Portals is a low-level network API for high-performance networking
  on high-performance computing systems developed by Sandia National
  Laboratories, Intel Corporation, and the University of New Mexico.
  The Portals 4 Reference Implementation is a complete implementation
  of Portals 4, with transport over InfiniBand verbs and UDP.

--with-portals4-libdir=&amp;lt;directory&amp;gt;
  Location of libraries to link with for Portals4 support.

--with-portals4-max-md-size=SIZE
--with-portals4-max-va-size=SIZE
  Set configuration values for Portals 4

--with-psm=&amp;lt;directory&amp;gt;
  Specify the directory where the QLogic InfiniPath / Intel True Scale
  PSM library and header files are located.  This option is generally
  only necessary if the PSM headers and libraries are not in default
  compiler/linker search paths.

  PSM is the support library for QLogic InfiniPath and Intel TrueScale
  network adapters.

--with-psm-libdir=&amp;lt;directory&amp;gt;
  Look in directory for the PSM libraries.  By default, Open MPI will
  look in &amp;lt;psm directory&amp;gt;/lib and &amp;lt;psm directory&amp;gt;/lib64, which covers
  most cases.  This option is only needed for special configurations.

--with-psm2=&amp;lt;directory&amp;gt;
  Specify the directory where the Intel Omni-Path PSM2 library and
  header files are located.  This option is generally only necessary
  if the PSM2 headers and libraries are not in default compiler/linker
  search paths.

  PSM is the support library for Intel Omni-Path network adapters.

--with-psm2-libdir=&amp;lt;directory&amp;gt;
  Look in directory for the PSM2 libraries.  By default, Open MPI will
  look in &amp;lt;psm2 directory&amp;gt;/lib and &amp;lt;psm2 directory&amp;gt;/lib64, which
  covers most cases.  This option is only needed for special
  configurations.

--with-ucx=&amp;lt;directory&amp;gt;
  Specify the directory where the UCX libraries and header files are
  located.  This option is generally only necessary if the UCX headers
  and libraries are not in default compiler/linker search paths.

--with-ucx-libdir=&amp;lt;directory&amp;gt;
  Look in directory for the UCX libraries.  By default, Open MPI will
  look in &amp;lt;ucx_directory&amp;gt;/lib and &amp;lt;ucx_ directory&amp;gt;/lib64, which covers
  most cases.  This option is only needed for special configurations.

--with-usnic
  Abort configure if Cisco usNIC support cannot be built.


RUN-TIME SYSTEM SUPPORT

--enable-mpirun-prefix-by-default
  This option forces the "mpirun" command to always behave as if
  "--prefix $prefix" was present on the command line (where $prefix is
  the value given to the --prefix option to configure).  This prevents
  most rsh/ssh-based users from needing to modify their shell startup
  files to set the PATH and/or LD_LIBRARY_PATH for Open MPI on remote
  nodes.  Note, however, that such users may still desire to set PATH
  -- perhaps even in their shell startup files -- so that executables
  such as mpicc and mpirun can be found without needing to type long
  path names.  --enable-orterun-prefix-by-default is a synonym for
  this option.

--enable-orte-static-ports
   Enable orte static ports for tcp oob (default: enabled).

--with-alps
  Force the building of for the Cray Alps run-time environment.  If
  Alps support cannot be found, configure will abort.

--with-lsf=&amp;lt;directory&amp;gt;
  Specify the directory where the LSF libraries and header files are
  located.  This option is generally only necessary if the LSF headers
  and libraries are not in default compiler/linker search paths.

  LSF is a resource manager system, frequently used as a batch
  scheduler in HPC systems.

--with-lsf-libdir=&amp;lt;directory&amp;gt;
  Look in directory for the LSF libraries.  By default, Open MPI will
  look in &amp;lt;lsf directory&amp;gt;/lib and &amp;lt;lsf directory&amp;gt;/lib64, which covers
  most cases.  This option is only needed for special configurations.

--with-pmi
  Build PMI support (by default on non-Cray XE/XC systems, it is not
  built).  On Cray XE/XC systems, the location of pmi is detected
  automatically as part of the configure process.  For non-Cray
  systems, if the pmi2.h header is found in addition to pmi.h, then
  support for PMI2 will be built.

--with-slurm
  Force the building of SLURM scheduler support.

--with-sge
  Specify to build support for the Oracle Grid Engine (OGE) resource
  manager and/or the Open Grid Engine.  OGE support is disabled by
  default; this option must be specified to build OMPI's OGE support.

  The Oracle Grid Engine (OGE) and open Grid Engine packages are
  resource manager systems, frequently used as a batch scheduler in
  HPC systems.

--with-tm=&amp;lt;directory&amp;gt;
  Specify the directory where the TM libraries and header files are
  located.  This option is generally only necessary if the TM headers
  and libraries are not in default compiler/linker search paths.

  TM is the support library for the Torque and PBS Pro resource
  manager systems, both of which are frequently used as a batch
  scheduler in HPC systems.

MISCELLANEOUS SUPPORT LIBRARIES

--with-libevent(=value)
  This option specifies where to find the libevent support headers and
  library.  The following VALUEs are permitted:

    internal:    Use Open MPI's internal copy of libevent.
    external:    Use an external libevent installation (rely on default
                 compiler and linker paths to find it)
    &amp;lt;no value&amp;gt;:  Same as "internal".
    &amp;lt;directory&amp;gt;: Specify the location of a specific libevent
                 installation to use

  By default (or if --with-libevent is specified with no VALUE), Open
  MPI will build and use the copy of libevent that it has in its
  source tree.  However, if the VALUE is "external", Open MPI will
  look for the relevant libevent header file and library in default
  compiler / linker locations.  Or, VALUE can be a directory tree
  where the libevent header file and library can be found.  This
  option allows operating systems to include Open MPI and use their
  default libevent installation instead of Open MPI's bundled libevent.

  libevent is a support library that provides event-based processing,
  timers, and signal handlers.  Open MPI requires libevent to build;
  passing --without-libevent will cause configure to abort.

--with-libevent-libdir=&amp;lt;directory&amp;gt;
  Look in directory for the libevent libraries.  This option is only
  usable when building Open MPI against an external libevent
  installation.  Just like other --with-FOO-libdir configure options,
  this option is only needed for special configurations.

--with-hwloc(=value)
  Build hwloc support (default: enabled).  This option specifies where
  to find the hwloc support headers and library.  The following values
  are permitted:

    internal:    Use Open MPI's internal copy of hwloc.
    external:    Use an external hwloc installation (rely on default
                 compiler and linker paths to find it)
    &amp;lt;no value&amp;gt;:  Same as "internal".
    &amp;lt;directory&amp;gt;: Specify the location of a specific hwloc
                 installation to use

  By default (or if --with-hwloc is specified with no VALUE), Open MPI
  will build and use the copy of hwloc that it has in its source tree.
  However, if the VALUE is "external", Open MPI will look for the
  relevant hwloc header files and library in default compiler / linker
  locations.  Or, VALUE can be a directory tree where the hwloc header
  file and library can be found.  This option allows operating systems
  to include Open MPI and use their default hwloc installation instead
  of Open MPI's bundled hwloc.

  hwloc is a support library that provides processor and memory
  affinity information for NUMA platforms.

--with-hwloc-libdir=&amp;lt;directory&amp;gt;
  Look in directory for the hwloc libraries.  This option is only
  usable when building Open MPI against an external hwloc
  installation.  Just like other --with-FOO-libdir configure options,
  this option is only needed for special configurations.

--disable-hwloc-pci
  Disable building hwloc's PCI device-sensing capabilities.  On some
  platforms (e.g., SusE 10 SP1, x86-64), the libpci support library is
  broken.  Open MPI's configure script should usually detect when
  libpci is not usable due to such brokenness and turn off PCI
  support, but there may be cases when configure mistakenly enables
  PCI support in the presence of a broken libpci.  These cases may
  result in "make" failing with warnings about relocation symbols in
  libpci.  The --disable-hwloc-pci switch can be used to force Open
  MPI to not build hwloc's PCI device-sensing capabilities in these
  cases.

  Similarly, if Open MPI incorrectly decides that libpci is broken,
  you can force Open MPI to build hwloc's PCI device-sensing
  capabilities by using --enable-hwloc-pci.

  hwloc can discover PCI devices and locality, which can be useful for
  Open MPI in assigning message passing resources to MPI processes.

--with-libltdl=&amp;lt;directory&amp;gt;
  Specify the directory where the GNU Libtool libltdl libraries and
  header files are located.  This option is generally only necessary
  if the libltdl headers and libraries are not in default
  compiler/linker search paths.

  Note that this option is ignored if --disable-dlopen is specified.

--disable-libompitrace
  Disable building the simple "libompitrace" library (see note above
  about libompitrace)

--with-valgrind(=&amp;lt;directory&amp;gt;)
  Directory where the valgrind software is installed.  If Open MPI
  finds Valgrind's header files, it will include additional support
  for Valgrind's memory-checking debugger.

  Specifically, it will eliminate a lot of false positives from
  running Valgrind on MPI applications.  There is a minor performance
  penalty for enabling this option.

MPI FUNCTIONALITY

--with-mpi-param-check(=value)
  Whether or not to check MPI function parameters for errors at
  runtime.  The following values are permitted:

    always:  MPI function parameters are always checked for errors
    never:   MPI function parameters are never checked for errors
    runtime: Whether MPI function parameters are checked depends on
             the value of the MCA parameter mpi_param_check (default:
             yes).
    yes:     Synonym for "always" (same as --with-mpi-param-check).
    no:      Synonym for "none" (same as --without-mpi-param-check).

  If --with-mpi-param is not specified, "runtime" is the default.

--disable-mpi-thread-multiple
  Disable the MPI thread level MPI_THREAD_MULTIPLE (it is enabled by
  default).

--enable-mpi-cxx
  Enable building the C++ MPI bindings (default: disabled).

  The MPI C++ bindings were deprecated in MPI-2.2, and removed from
  the MPI standard in MPI-3.0.

--enable-mpi-java
  Enable building of an EXPERIMENTAL Java MPI interface (disabled by
  default).  You may also need to specify --with-jdk-dir,
  --with-jdk-bindir, and/or --with-jdk-headers.  See README.JAVA.txt
  for details.

  Note that this Java interface is INCOMPLETE (meaning: it does not
  support all MPI functionality) and LIKELY TO CHANGE.  The Open MPI
  developers would very much like to hear your feedback about this
  interface.  See README.JAVA.txt for more details.

--enable-mpi-fortran(=value)
  By default, Open MPI will attempt to build all 3 Fortran bindings:
  mpif.h, the "mpi" module, and the "mpi_f08" module.  The following
  values are permitted:

    all:        Synonym for "yes".
    yes:        Attempt to build all 3 Fortran bindings; skip
                any binding that cannot be built (same as
                --enable-mpi-fortran).
    mpifh:      Build mpif.h support.
    usempi:     Build mpif.h and "mpi" module support.
    usempif08:  Build mpif.h, "mpi" module, and "mpi_f08"
                module support.
    none:       Synonym for "no".
    no:         Do not build any MPI Fortran support (same as
                --disable-mpi-fortran).  This is mutually exclusive
                with building the OpenSHMEM Fortran interface.

--enable-mpi-ext(=&amp;lt;list&amp;gt;)
  Enable Open MPI's non-portable API extensions.  If no &amp;lt;list&amp;gt; is
  specified, all of the extensions are enabled.

  See "Open MPI API Extensions", below, for more details.

--disable-mpi-io
  Disable built-in support for MPI-2 I/O, likely because an
  externally-provided MPI I/O package will be used. Default is to use
  the internal framework system that uses the ompio component and a
  specially modified version of ROMIO that fits inside the romio
  component

--disable-io-romio
  Disable the ROMIO MPI-IO component

--with-io-romio-flags=flags
  Pass flags to the ROMIO distribution configuration script.  This
  option is usually only necessary to pass
  parallel-filesystem-specific preprocessor/compiler/linker flags back
  to the ROMIO system.

--disable-io-ompio
  Disable the ompio MPI-IO component

--enable-sparse-groups
  Enable the usage of sparse groups. This would save memory
  significantly especially if you are creating large
  communicators. (Disabled by default)

OPENSHMEM FUNCTIONALITY

--disable-oshmem
  Disable building the OpenSHMEM implementation (by default, it is
  enabled).

--disable-oshmem-fortran
  Disable building only the Fortran OpenSHMEM bindings. Please see
  the "Compiler Notes" section herein which contains further
  details on known issues with various Fortran compilers.

MISCELLANEOUS FUNCTIONALITY

--without-memory-manager
  Disable building Open MPI's memory manager.  Open MPI's memory
  manager is usually built on Linux based platforms, and is generally
  only used for optimizations with some OpenFabrics-based networks (it
  is not *necessary* for OpenFabrics networks, but some performance
  loss may be observed without it).

  However, it may be necessary to disable the memory manager in order
  to build Open MPI statically.

--with-ft=TYPE
  Specify the type of fault tolerance to enable.  Options: LAM
  (LAM/MPI-like), cr (Checkpoint/Restart).  Fault tolerance support is
  disabled unless this option is specified.

--enable-peruse
  Enable the PERUSE MPI data analysis interface.

--enable-heterogeneous
  Enable support for running on heterogeneous clusters (e.g., machines
  with different endian representations).  Heterogeneous support is
  disabled by default because it imposes a minor performance penalty.

  *** THIS FUNCTIONALITY IS CURRENTLY BROKEN - DO NOT USE ***

--with-wrapper-cflags=&amp;lt;cflags&amp;gt;
--with-wrapper-cxxflags=&amp;lt;cxxflags&amp;gt;
--with-wrapper-fflags=&amp;lt;fflags&amp;gt;
--with-wrapper-fcflags=&amp;lt;fcflags&amp;gt;
--with-wrapper-ldflags=&amp;lt;ldflags&amp;gt;
--with-wrapper-libs=&amp;lt;libs&amp;gt;
  Add the specified flags to the default flags that used are in Open
  MPI's "wrapper" compilers (e.g., mpicc -- see below for more
  information about Open MPI's wrapper compilers).  By default, Open
  MPI's wrapper compilers use the same compilers used to build Open
  MPI and specify a minimum set of additional flags that are necessary
  to compile/link MPI applications.  These configure options give
  system administrators the ability to embed additional flags in
  OMPI's wrapper compilers (which is a local policy decision).  The
  meanings of the different flags are:

  &amp;lt;cflags&amp;gt;:   Flags passed by the mpicc wrapper to the C compiler
  &amp;lt;cxxflags&amp;gt;: Flags passed by the mpic++ wrapper to the C++ compiler
  &amp;lt;fcflags&amp;gt;:  Flags passed by the mpifort wrapper to the Fortran compiler
  &amp;lt;ldflags&amp;gt;:  Flags passed by all the wrappers to the linker
  &amp;lt;libs&amp;gt;:     Flags passed by all the wrappers to the linker

  There are other ways to configure Open MPI's wrapper compiler
  behavior; see the Open MPI FAQ for more information.

There are many other options available -- see "./configure --help".

Changing the compilers that Open MPI uses to build itself uses the
standard Autoconf mechanism of setting special environment variables
either before invoking configure or on the configure command line.
The following environment variables are recognized by configure:

CC          - C compiler to use
CFLAGS      - Compile flags to pass to the C compiler
CPPFLAGS    - Preprocessor flags to pass to the C compiler

CXX         - C++ compiler to use
CXXFLAGS    - Compile flags to pass to the C++ compiler
CXXCPPFLAGS - Preprocessor flags to pass to the C++ compiler

FC          - Fortran compiler to use
FCFLAGS     - Compile flags to pass to the Fortran compiler

LDFLAGS     - Linker flags to pass to all compilers
LIBS        - Libraries to pass to all compilers (it is rarely
              necessary for users to need to specify additional LIBS)

PKG_CONFIG  - Path to the pkg-config utility

For example:

  shell$ ./configure CC=mycc CXX=myc++ FC=myfortran ...

*** NOTE: We generally suggest using the above command line form for
    setting different compilers (vs. setting environment variables and
    then invoking "./configure").  The above form will save all
    variables and values in the config.log file, which makes
    post-mortem analysis easier if problems occur.

Note that if you intend to compile Open MPI with a "make" other than
the default one in your PATH, then you must either set the $MAKE
environment variable before invoking Open MPI's configure script, or
pass "MAKE=your_make_prog" to configure.  For example:

  shell$ ./configure MAKE=/path/to/my/make ...

This could be the case, for instance, if you have a shell alias for
"make", or you always type "gmake" out of habit.  Failure to tell
configure which non-default "make" you will use to compile Open MPI
can result in undefined behavior (meaning: don't do that).

Note that you may also want to ensure that the value of
LD_LIBRARY_PATH is set appropriately (or not at all) for your build
(or whatever environment variable is relevant for your operating
system).  For example, some users have been tripped up by setting to
use a non-default Fortran compiler via FC, but then failing to set
LD_LIBRARY_PATH to include the directory containing that non-default
Fortran compiler's support libraries.  This causes Open MPI's
configure script to fail when it tries to compile / link / run simple
Fortran programs.

It is required that the compilers specified be compile and link
compatible, meaning that object files created by one compiler must be
able to be linked with object files from the other compilers and
produce correctly functioning executables.

Open MPI supports all the "make" targets that are provided by GNU
Automake, such as:

all       - build the entire Open MPI package
install   - install Open MPI
uninstall - remove all traces of Open MPI from the $prefix
clean     - clean out the build tree

Once Open MPI has been built and installed, it is safe to run "make
clean" and/or remove the entire build tree.

VPATH and parallel builds are fully supported.

Generally speaking, the only thing that users need to do to use Open
MPI is ensure that &amp;lt;prefix&amp;gt;/bin is in their PATH and &amp;lt;prefix&amp;gt;/lib is
in their LD_LIBRARY_PATH.  Users may need to ensure to set the PATH
and LD_LIBRARY_PATH in their shell setup files (e.g., .bashrc, .cshrc)
so that non-interactive rsh/ssh-based logins will be able to find the
Open MPI executables.

===========================================================================

Open MPI Version Numbers and Binary Compatibility
-------------------------------------------------

Open MPI has two sets of version numbers that are likely of interest
to end users / system administrator:

  * Software version number
  * Shared library version numbers

Both are predicated on Open MPI's definition of "backwards
compatibility."

NOTE: The version numbering conventions were changed with the release
      of v1.10.0.  Most notably, Open MPI no longer uses an "odd/even"
      release schedule to indicate feature development vs. stable
      releases.  See the README in releases prior to v1.10.0 for more
      information (e.g.,
      &lt;a href="https://github.com/open-mpi/ompi/blob/v1.8/README#L1392-L1475"&gt;https://github.com/open-mpi/ompi/blob/v1.8/README#L1392-L1475&lt;/a&gt;).

Backwards Compatibility
-----------------------

Open MPI version Y is backwards compatible with Open MPI version X
(where Y&amp;gt;X) if users can:

  * Compile an MPI/OpenSHMEM application with version X, mpirun/oshrun
    it with version Y, and get the same user-observable behavior.
  * Invoke ompi_info with the same CLI options in versions X and Y and
    get the same user-observable behavior.

Note that this definition encompasses several things:

  * Application Binary Interface (ABI)
  * MPI / OpenSHMEM run time system
  * mpirun / oshrun command line options
  * MCA parameter names / values / meanings

However, this definition only applies when the same version of Open
MPI is used with all instances of the runtime and MPI / OpenSHMEM
processes in a single MPI job.  If the versions are not exactly the
same everywhere, Open MPI is not guaranteed to work properly in any
scenario.

Backwards compatibility tends to work best when user applications are
dynamically linked to one version of the Open MPI / OSHMEM libraries,
and can be updated at run time to link to a new version of the Open
MPI / OSHMEM libraries.

For example, if an MPI / OSHMEM application links statically against
the libraries from Open MPI vX, then attempting to launch that
application with mpirun / oshrun from Open MPI vY is not guaranteed to
work (because it is mixing vX and vY of Open MPI in a single job).

Similarly, if using a container technology that internally bundles all
the libraries from Open MPI vX, attempting to launch that container
with mpirun / oshrun from Open MPI vY is not guaranteed to work.

Software Version Number
-----------------------

Official Open MPI releases use the common "A.B.C" version identifier
format.  Each of the three numbers has a specific meaning:

  * Major: The major number is the first integer in the version string
    Changes in the major number typically indicate a significant
    change in the code base and/or end-user functionality, and also
    indicate a break from backwards compatibility.  Specifically: Open
    MPI releases with different major version numbers are not
    backwards compatibale with each other.

    CAVEAT: This rule does not extend to versions prior to v1.10.0.
            Specifically: v1.10.x is not guaranteed to be backwards
            compatible with other v1.x releases.

  * Minor: The minor number is the second integer in the version
    string.  Changes in the minor number indicate a user-observable
    change in the code base and/or end-user functionality.  Backwards
    compatibility will still be preserved with prior releases that
    have the same major version number (e.g., v2.5.3 is backwards
    compatible with v2.3.1).

  * Release: The release number is the third integer in the version
    string.  Changes in the release number typically indicate a bug
    fix in the code base and/or end-user functionality.  For example,
    if there is a release that only contains bug fixes and no other
    user-observable changes or new features, only the third integer
    will be increased (e.g., from v4.3.0 to v4.3.1).

The "A.B.C" version number may optionally be followed by a Quantifier:

  * Quantifier: Open MPI version numbers sometimes have an arbitrary
    string affixed to the end of the version number. Common strings
    include:

    o aX: Indicates an alpha release. X is an integer indicating the
      number of the alpha release (e.g., v1.10.3a5 indicates the 5th
      alpha release of version 1.10.3).
    o bX: Indicates a beta release. X is an integer indicating the
      number of the beta release (e.g., v1.10.3b3 indicates the 3rd
      beta release of version 1.10.3).
    o rcX: Indicates a release candidate. X is an integer indicating
      the number of the release candidate (e.g., v1.10.3rc4 indicates
      the 4th release candidate of version 1.10.3).

Nightly development snapshot tarballs use a different version number
scheme; they contain three distinct values:

   * The git branch name from which the tarball was created.
   * The date/timestamp, in YYYYMMDDHHMM format.
   * The hash of the git commit from which the tarball was created.

For example, a snapshot tarball filename of
"openmpi-v2.x-201703070235-e4798fb.tar.gz" indicates that this tarball
was created from the v2.x branch, on March 7, 2017, at 2:35am GMT,
from git hash e4798fb.

Shared Library Version Number
-----------------------------

The GNU Libtool official documentation details how the versioning
scheme works.  The quick version is that the shared library versions
are a triple of integers: (current,revision,age), or "c:r:a".  This
triple is not related to the Open MPI software version number.  There
are six simple rules for updating the values (taken almost verbatim
from the Libtool docs):

 1. Start with version information of "0:0:0" for each shared library.

 2. Update the version information only immediately before a public
    release of your software. More frequent updates are unnecessary,
    and only guarantee that the current interface number gets larger
    faster.

 3. If the library source code has changed at all since the last
    update, then increment revision ("c:r:a" becomes "c:r+1:a").

 4. If any interfaces have been added, removed, or changed since the
    last update, increment current, and set revision to 0.

 5. If any interfaces have been added since the last public release,
    then increment age.

 6. If any interfaces have been removed since the last public release,
    then set age to 0.

Here's how we apply those rules specifically to Open MPI:

 1. The above rules do not apply to MCA components (a.k.a. "plugins");
    MCA component .so versions stay unspecified.

 2. The above rules apply exactly as written to the following
    libraries starting with Open MPI version v1.5 (prior to v1.5,
    libopen-pal and libopen-rte were still at 0:0:0 for reasons
    discussed in bug ticket #2092
    &lt;a href="https://svn.open-mpi.org/trac/ompi/ticket/2092" rel="nofollow"&gt;https://svn.open-mpi.org/trac/ompi/ticket/2092&lt;/a&gt;):

    * libopen-rte
    * libopen-pal
    * libmca_common_*

 3. The following libraries use a slightly modified version of the
    above rules: rules 4, 5, and 6 only apply to the official MPI and
    OpenSHMEM interfaces (functions, global variables).  The rationale
    for this decision is that the vast majority of our users only care
    about the official/public MPI/OpenSHMEM interfaces; we therefore
    want the .so version number to reflect only changes to the
    official MPI/OpenSHMEM APIs.  Put simply: non-MPI/OpenSHMEM API /
    internal changes to the MPI-application-facing libraries are
    irrelevant to pure MPI/OpenSHMEM applications.

    * libmpi
    * libmpi_mpifh
    * libmpi_usempi_tkr
    * libmpi_usempi_ignore_tkr
    * libmpi_usempif08
    * libmpi_cxx
    * libmpi_java
    * liboshmem

===========================================================================

Checking Your Open MPI Installation
-----------------------------------

The "ompi_info" command can be used to check the status of your Open
MPI installation (located in &amp;lt;prefix&amp;gt;/bin/ompi_info).  Running it with
no arguments provides a summary of information about your Open MPI
installation.

Note that the ompi_info command is extremely helpful in determining
which components are installed as well as listing all the run-time
settable parameters that are available in each component (as well as
their default values).

The following options may be helpful:

--all       Show a *lot* of information about your Open MPI
            installation.
--parsable  Display all the information in an easily
            grep/cut/awk/sed-able format.
--param &amp;lt;framework&amp;gt; &amp;lt;component&amp;gt;
            A &amp;lt;framework&amp;gt; of "all" and a &amp;lt;component&amp;gt; of "all" will
            show all parameters to all components.  Otherwise, the
            parameters of all the components in a specific framework,
            or just the parameters of a specific component can be
            displayed by using an appropriate &amp;lt;framework&amp;gt; and/or
            &amp;lt;component&amp;gt; name.
--level &amp;lt;level&amp;gt;
            By default, ompi_info only shows "Level 1" MCA parameters
            -- parameters that can affect whether MPI processes can
            run successfully or not (e.g., determining which network
            interfaces to use).  The --level option will display all
            MCA parameters from level 1 to &amp;lt;level&amp;gt; (the max &amp;lt;level&amp;gt;
            value is 9).  Use "ompi_info --param &amp;lt;framework&amp;gt;
            &amp;lt;component&amp;gt; --level 9" to see *all* MCA parameters for a
            given component.  See "The Modular Component Architecture
            (MCA)" section, below, for a fuller explanation.

Changing the values of these parameters is explained in the "The
Modular Component Architecture (MCA)" section, below.

When verifying a new Open MPI installation, we recommend running six
tests:

1. Use "mpirun" to launch a non-MPI program (e.g., hostname or uptime)
   across multiple nodes.

2. Use "mpirun" to launch a trivial MPI program that does no MPI
   communication (e.g., the hello_c program in the examples/ directory
   in the Open MPI distribution).

3. Use "mpirun" to launch a trivial MPI program that sends and
   receives a few MPI messages (e.g., the ring_c program in the
   examples/ directory in the Open MPI distribution).

4. Use "oshrun" to launch a non-OpenSHMEM program across multiple
   nodes.

5. Use "oshrun" to launch a trivial MPI program that does no OpenSHMEM
   communication (e.g., hello_shmem.c program in the examples/
   directory in the Open MPI distribution.)

6. Use "oshrun" to launch a trivial OpenSHMEM program that puts and
   gets a few messages. (e.g., the ring_shmem.c in the examples/
   directory in the Open MPI distribution.)

If you can run all six of these tests successfully, that is a good
indication that Open MPI built and installed properly.

===========================================================================

Open MPI API Extensions
-----------------------

Open MPI contains a framework for extending the MPI API that is
available to applications.  Each extension is usually a standalone set
of functionality that is distinct from other extensions (similar to
how Open MPI's plugins are usually unrelated to each other).  These
extensions provide new functions and/or constants that are available
to MPI applications.

WARNING: These extensions are neither standard nor portable to other
MPI implementations!

Compiling the extensions
------------------------

Open MPI extensions are all enabled by default; they can be disabled
via the --disable-mpi-ext command line switch.

Since extensions are meant to be used by advanced users only, this
file does not document which extensions are available or what they
do.  Look in the ompi/mpiext/ directory to see the extensions; each
subdirectory of that directory contains an extension.  Each has a
README file that describes what it does.

Using the extensions
--------------------

To reinforce the fact that these extensions are non-standard, you must
include a separate header file after &amp;lt;mpi.h&amp;gt; to obtain the function
prototypes, constant declarations, etc.  For example:

-----
#include &amp;lt;mpi.h&amp;gt;
#if defined(OPEN_MPI) &amp;amp;&amp;amp; OPEN_MPI
#include &amp;lt;mpi-ext.h&amp;gt;
#endif

int main() {
    MPI_Init(NULL, NULL);

#if defined(OPEN_MPI) &amp;amp;&amp;amp; OPEN_MPI
    {
        char ompi_bound[OMPI_AFFINITY_STRING_MAX];
        char current_binding[OMPI_AFFINITY_STRING_MAX];
        char exists[OMPI_AFFINITY_STRING_MAX];
        OMPI_Affinity_str(OMPI_AFFINITY_LAYOUT_FMT, ompi_bound,
                          current_bindings, exists);
    }
#endif
    MPI_Finalize();
    return 0;
}
-----

Notice that the Open MPI-specific code is surrounded by the #if
statement to ensure that it is only ever compiled by Open MPI.

The Open MPI wrapper compilers (mpicc and friends) should
automatically insert all relevant compiler and linker flags necessary
to use the extensions.  No special flags or steps should be necessary
compared to "normal" MPI applications.

===========================================================================

Compiling Open MPI Applications
-------------------------------

Open MPI provides "wrapper" compilers that should be used for
compiling MPI and OpenSHMEM applications:

C:          mpicc, oshcc
C++:        mpiCC, oshCC (or mpic++ if your filesystem is case-insensitive)
Fortran:    mpifort, oshfort

For example:

  shell$ mpicc hello_world_mpi.c -o hello_world_mpi -g
  shell$

For OpenSHMEM applications:

  shell$ oshcc hello_shmem.c -o hello_shmem -g
  shell$

All the wrapper compilers do is add a variety of compiler and linker
flags to the command line and then invoke a back-end compiler.  To be
specific: the wrapper compilers do not parse source code at all; they
are solely command-line manipulators, and have nothing to do with the
actual compilation or linking of programs.  The end result is an MPI
executable that is properly linked to all the relevant libraries.

Customizing the behavior of the wrapper compilers is possible (e.g.,
changing the compiler [not recommended] or specifying additional
compiler/linker flags); see the Open MPI FAQ for more information.

Alternatively, Open MPI also installs pkg-config(1) configuration
files under $libdir/pkgconfig.  If pkg-config is configured to find
these files, then compiling / linking Open MPI programs can be
performed like this:

  shell$ gcc hello_world_mpi.c -o hello_world_mpi -g \
              `pkg-config ompi-c --cflags --libs`
  shell$

Open MPI supplies multiple pkg-config(1) configuration files; one for
each different wrapper compiler (language):

------------------------------------------------------------------------
ompi       Synonym for "ompi-c"; Open MPI applications using the C
           MPI bindings
ompi-c     Open MPI applications using the C MPI bindings
ompi-cxx   Open MPI applications using the C or C++ MPI bindings
ompi-fort  Open MPI applications using the Fortran MPI bindings
------------------------------------------------------------------------

The following pkg-config(1) configuration files *may* be installed,
depending on which command line options were specified to Open MPI's
configure script.  They are not necessary for MPI applications, but
may be used by applications that use Open MPI's lower layer support
libraries.

orte:       Open MPI Run-Time Environment applications
opal:       Open Portable Access Layer applications

===========================================================================

Running Open MPI Applications
-----------------------------

Open MPI supports both mpirun and mpiexec (they are exactly
equivalent) to launch MPI applications.  For example:

  shell$ mpirun -np 2 hello_world_mpi
  or
  shell$ mpiexec -np 1 hello_world_mpi : -np 1 hello_world_mpi

are equivalent. 

The rsh launcher (which defaults to using ssh) accepts a --hostfile
parameter (the option "--machinefile" is equivalent); you can specify a
--hostfile parameter indicating an standard mpirun-style hostfile (one
hostname per line):

  shell$ mpirun --hostfile my_hostfile -np 2 hello_world_mpi

If you intend to run more than one process on a node, the hostfile can
use the "slots" attribute.  If "slots" is not specified, a count of 1
is assumed.  For example, using the following hostfile:

---------------------------------------------------------------------------
node1.example.com
node2.example.com
node3.example.com slots=2
node4.example.com slots=4
---------------------------------------------------------------------------

  shell$ mpirun -hostfile my_hostfile -np 8 hello_world_mpi

will launch MPI_COMM_WORLD rank 0 on node1, rank 1 on node2, ranks 2
and 3 on node3, and ranks 4 through 7 on node4.

Other starters, such as the resource manager / batch scheduling
environments, do not require hostfiles (and will ignore the hostfile
if it is supplied).  They will also launch as many processes as slots
have been allocated by the scheduler if no "-np" argument has been
provided.  For example, running a SLURM job with 8 processors:

  shell$ salloc -n 8 mpirun a.out

The above command will reserve 8 processors and run 1 copy of mpirun,
which will, in turn, launch 8 copies of a.out in a single
MPI_COMM_WORLD on the processors that were allocated by SLURM.

Note that the values of component parameters can be changed on the
mpirun / mpiexec command line.  This is explained in the section
below, "The Modular Component Architecture (MCA)".

Open MPI supports oshrun to launch OpenSHMEM applications. For
example:

   shell$ oshrun -np 2 hello_world_oshmem

OpenSHMEM applications may also be launched directly by resource
managers such as SLURM. For example, when OMPI is configured
--with-pmi and --with-slurm, one may launch OpenSHMEM applications via
srun:

   shell$ srun -N 2 hello_world_oshmem

===========================================================================

The Modular Component Architecture (MCA)

The MCA is the backbone of Open MPI -- most services and functionality
are implemented through MCA components.  Here is a list of all the
component frameworks in Open MPI:

---------------------------------------------------------------------------

MPI component frameworks:
-------------------------

bml       - BTL management layer
coll      - MPI collective algorithms
fbtl      - file byte transfer layer: abstraction for individual
            read/write operations for OMPIO
fcoll     - collective read and write operations for MPI I/O
fs        - file system functions for MPI I/O
io        - MPI I/O
mtl       - Matching transport layer, used for MPI point-to-point
            messages on some types of networks
op        - Back end computations for intrinsic MPI_Op operators
osc       - MPI one-sided communications
pml       - MPI point-to-point management layer
rte       - Run-time environment operations
sharedfp  - shared file pointer operations for MPI I/O
topo      - MPI topology routines
vprotocol - Protocols for the "v" PML

OpenSHMEM component frameworks:
-------------------------

atomic    - OpenSHMEM atomic operations
memheap   - OpenSHMEM memory allocators that support the
            PGAS memory model
scoll     - OpenSHMEM collective operations
spml      - OpenSHMEM "pml-like" layer: supports one-sided,
            point-to-point operations
sshmem    - OpenSHMEM shared memory backing facility


Back-end run-time environment (RTE) component frameworks:
---------------------------------------------------------

dfs       - Distributed file system
errmgr    - RTE error manager
ess       - RTE environment-specific services
filem     - Remote file management
grpcomm   - RTE group communications
iof       - I/O forwarding
notifier  - System-level notification support
odls      - OpenRTE daemon local launch subsystem
oob       - Out of band messaging
plm       - Process lifecycle management
ras       - Resource allocation system
rmaps     - Resource mapping system
rml       - RTE message layer
routed    - Routing table for the RML
rtc       - Run-time control framework
schizo    - OpenRTE personality framework
state     - RTE state machine

Miscellaneous frameworks:
-------------------------

allocator   - Memory allocator
backtrace   - Debugging call stack backtrace support
btl         - Point-to-point Byte Transfer Layer
dl          - Dynamic loading library interface
event       - Event library (libevent) versioning support
hwloc       - Hardware locality (hwloc) versioning support
if          - OS IP interface support
installdirs - Installation directory relocation services
memchecker  - Run-time memory checking
memcpy      - Memory copy support
memory      - Memory management hooks
mpool       - Memory pooling
patcher     - Symbol patcher hooks
pmix        - Process management interface (exascale)
pstat       - Process status
rcache      - Memory registration cache
sec         - Security framework
shmem       - Shared memory support (NOT related to OpenSHMEM)
timer       - High-resolution timers

---------------------------------------------------------------------------

Each framework typically has one or more components that are used at
run-time.  For example, the btl framework is used by the MPI layer to
send bytes across different types underlying networks.  The tcp btl,
for example, sends messages across TCP-based networks; the UCX PML
sends messages across OpenFabrics-based networks.

Each component typically has some tunable parameters that can be
changed at run-time.  Use the ompi_info command to check a component
to see what its tunable parameters are.  For example:

  shell$ ompi_info --param btl tcp

shows some of the parameters (and default values) for the tcp btl
component (use --level to show *all* the parameters; see below).

Note that ompi_info only shows a small number a component's MCA
parameters by default.  Each MCA parameter has a "level" value from 1
to 9, corresponding to the MPI-3 MPI_T tool interface levels.  In Open
MPI, we have interpreted these nine levels as three groups of three:

 1. End user / basic
 2. End user / detailed
 3. End user / all

 4. Application tuner / basic
 5. Application tuner / detailed
 6. Application tuner / all

 7. MPI/OpenSHMEM developer / basic
 8. MPI/OpenSHMEM developer / detailed
 9. MPI/OpenSHMEM developer / all

Here's how the three sub-groups are defined:

 1. End user: Generally, these are parameters that are required for
    correctness, meaning that someone may need to set these just to
    get their MPI/OpenSHMEM application to run correctly.
 2. Application tuner: Generally, these are parameters that can be
    used to tweak MPI application performance.
 3. MPI/OpenSHMEM developer: Parameters that either don't fit in the
    other two, or are specifically intended for debugging /
    development of Open MPI itself.

Each sub-group is broken down into three classifications:

 1. Basic: For parameters that everyone in this category will want to
    see.
 2. Detailed: Parameters that are useful, but you probably won't need
    to change them often.
 3. All: All other parameters -- probably including some fairly
    esoteric parameters.

To see *all* available parameters for a given component, specify that
ompi_info should use level 9:

  shell$ ompi_info --param btl tcp --level 9

These values can be overridden at run-time in several ways.  At
run-time, the following locations are examined (in order) for new
values of parameters:

1. &amp;lt;prefix&amp;gt;/etc/openmpi-mca-params.conf

   This file is intended to set any system-wide default MCA parameter
   values -- it will apply, by default, to all users who use this Open
   MPI installation.  The default file that is installed contains many
   comments explaining its format.

2. $HOME/.openmpi/mca-params.conf

   If this file exists, it should be in the same format as
   &amp;lt;prefix&amp;gt;/etc/openmpi-mca-params.conf.  It is intended to provide
   per-user default parameter values.

3. environment variables of the form OMPI_MCA_&amp;lt;name&amp;gt; set equal to a
   &amp;lt;value&amp;gt;

   Where &amp;lt;name&amp;gt; is the name of the parameter.  For example, set the
   variable named OMPI_MCA_btl_tcp_frag_size to the value 65536
   (Bourne-style shells):

   shell$ OMPI_MCA_btl_tcp_frag_size=65536
   shell$ export OMPI_MCA_btl_tcp_frag_size

4. the mpirun/oshrun command line: --mca &amp;lt;name&amp;gt; &amp;lt;value&amp;gt;

   Where &amp;lt;name&amp;gt; is the name of the parameter.  For example:

   shell$ mpirun --mca btl_tcp_frag_size 65536 -np 2 hello_world_mpi

These locations are checked in order.  For example, a parameter value
passed on the mpirun command line will override an environment
variable; an environment variable will override the system-wide
defaults.

Each component typically activates itself when relevant.  For example,
the usNIC component will detect that usNIC devices are present and
will automatically be used for MPI communications.  The SLURM
component will automatically detect when running inside a SLURM job
and activate itself.  And so on.

Components can be manually activated or deactivated if necessary, of
course.  The most common components that are manually activated,
deactivated, or tuned are the "BTL" components -- components that are
used for MPI point-to-point communications on many types common
networks.

For example, to *only* activate the TCP and "self" (process loopback)
components are used for MPI communications, specify them in a
comma-delimited list to the "btl" MCA parameter:

   shell$ mpirun --mca btl tcp,self hello_world_mpi

To add shared memory support, add "vader" into the command-delimited
list (list order does not matter):

   shell$ mpirun --mca btl tcp,vader,self hello_world_mpi

(there is an "sm" shared memory BTL, too, but "vader" is a newer
generation of shared memory support; by default, "vader" will be used
instead of "sm")

To specifically deactivate a specific component, the comma-delimited
list can be prepended with a "^" to negate it:

   shell$ mpirun --mca btl ^tcp hello_mpi_world

The above command will use any other BTL component other than the tcp
component.

===========================================================================

Common Questions
----------------

Many common questions about building and using Open MPI are answered
on the FAQ:

    &lt;a href="https://www.open-mpi.org/faq/" rel="nofollow"&gt;https://www.open-mpi.org/faq/&lt;/a&gt;

===========================================================================

Got more questions?
-------------------

Found a bug?  Got a question?  Want to make a suggestion?  Want to
contribute to Open MPI?  Please let us know!

When submitting questions and problems, be sure to include as much
extra information as possible.  This web page details all the
information that we request in order to provide assistance:

     &lt;a href="https://www.open-mpi.org/community/help/" rel="nofollow"&gt;https://www.open-mpi.org/community/help/&lt;/a&gt;

User-level questions and comments should generally be sent to the
user's mailing list (users@lists.open-mpi.org).  Because of spam, only
subscribers are allowed to post to this list (ensure that you
subscribe with and post from *exactly* the same e-mail address --
joe@example.com is considered different than
joe@mycomputer.example.com!).  Visit this page to subscribe to the
user's list:

     &lt;a href="http://lists.open-mpi.org/mailman/listinfo/users" rel="nofollow"&gt;http://lists.open-mpi.org/mailman/listinfo/users&lt;/a&gt;

Developer-level bug reports, questions, and comments should generally
be sent to the developer's mailing list (devel@lists.open-mpi.org).
Please do not post the same question to both lists.  As with the
user's list, only subscribers are allowed to post to the developer's
list.  Visit the following web page to subscribe:

     &lt;a href="http://lists.open-mpi.org/mailman/listinfo/devel" rel="nofollow"&gt;http://lists.open-mpi.org/mailman/listinfo/devel&lt;/a&gt;

Make today an Open MPI day!
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>open-mpi</author><guid isPermaLink="false">https://github.com/open-mpi/ompi</guid><pubDate>Fri, 06 Dec 2019 00:24:00 GMT</pubDate></item><item><title>linw7/Skill-Tree #25 in C, Today</title><link>https://github.com/linw7/Skill-Tree</link><description>&lt;p&gt;&lt;i&gt;🐼 准备秋招，欢迎来树上取果实&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./source/github.jpg"&gt;&lt;img src="./source/github.jpg" alt="图片" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-后台开发核心知识" class="anchor" aria-hidden="true" href="#后台开发核心知识"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;后台开发核心知识&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;准备秋招，欢迎来树上取果实。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看过很多书，但总是忘得很快。知识广度越大越容易接纳新东西，但从考察角度来说，自然是对某个方面了解越深越好。那些大而全的著作虽然每本都是经典中的经典，但实际工作中可能只用到其中的一小部分。之前实习经历使我对后台开发有了更深刻的认知和了解，现在距离秋招只有两个月了，这里将以最短的篇幅，最清晰的层级结构去总结那些对C++后台开发最为核心的内容。&lt;/p&gt;
&lt;p&gt;我现在越发觉得少即是多，看再多东西没有理解透彻都是白搭，把最常用的每天过一遍才是最有效的。开发中我们经常用缓存来提高吞吐率，学习知识何不也给自己加个Cache呢？&lt;/p&gt;
&lt;p&gt;最后，希望大家秋招都能找到满意的工作。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-快速索引" class="anchor" aria-hidden="true" href="#快速索引"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;快速索引&lt;/h1&gt;
&lt;p&gt;上面我们提到了Cache来缩小知识范围，但是即使是被压缩过的知识依旧很多，我们怎么能够在脑海中快速检索它们呢？结合查找算法，Hash无疑是最快的，但又有多少人能够给一个"key"立马对应上"value"呢？所以，最适合人类认知的方式是通过索引 + 树状结构，在整理这份笔记时，我划分了很多级索引用来将各部分知识点划分到相应的模块中，检索任意一个知识点最多5级深度，不仅检索速度上去了还可以对整个知识体系有宏观认识。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Chapter 1&lt;/th&gt;
&lt;th align="center"&gt;Chapter 2&lt;/th&gt;
&lt;th align="center"&gt;Chapter 3&lt;/th&gt;
&lt;th align="center"&gt;Chapter 4&lt;/th&gt;
&lt;th align="center"&gt;Chapter 5&lt;/th&gt;
&lt;th align="center"&gt;Chapter 6&lt;/th&gt;
&lt;th align="center"&gt;Chapter 7&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/linw7/Skill-Tree/blob/master/%E9%94%99%E9%A2%98%E7%B2%BE%E8%A7%A3.md"&gt;错题精解&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/linw7/Skill-Tree/blob/master/%E7%9C%9F%E9%A2%98%E6%91%98%E5%BD%95.md"&gt;真题摘录&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/linw7/Skill-Tree/blob/master/Linux%E5%B7%A5%E5%85%B7.md"&gt;Linux工具&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/linw7/Skill-Tree/blob/master/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80C++.md"&gt;编程语言（C++)&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/linw7/Skill-Tree/blob/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8F%8A%E7%AE%97%E6%B3%95.md"&gt;数据结构与算法&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/linw7/Skill-Tree/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.md"&gt;计算机网络&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/linw7/Skill-Tree/blob/master/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.md"&gt;操作系统&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-独立专题" class="anchor" aria-hidden="true" href="#独立专题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;独立专题&lt;/h1&gt;
&lt;p&gt;哲学中，整体与个体的关系是物质世界普遍存在的规律。上面各部分知识相对独立，既要有零又要有整才能收获更多，实战无疑是最好的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/linw7/Paper-Code"&gt;纸上代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/linw7/TKeed"&gt;练手项目&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b0224997019dec4e51d692c722ea9bee2818c837/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e737667" alt="license" data-canonical-src="https://img.shields.io/github/license/mashape/apistatus.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>linw7</author><guid isPermaLink="false">https://github.com/linw7/Skill-Tree</guid><pubDate>Fri, 06 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>